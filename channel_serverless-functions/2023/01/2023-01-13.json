[
  {
    "poster": {
      "poster_name": "Pete Nicholls (HubDo)",
      "poster_handle": "pete970"
    },
    "time_stamp": "2023-01-13 04:40:49",
    "text": "HubSpot Serverless Functions aside, is anyone else here building multi-tenant HubSpot public apps on Serverless Architecture? (AWS Lambda, API Gateway, DynamoDB, Step Functions etc). We’re going  serverless-first for new apps, and there is a lot to architect to get to a CI/CD flow state. Keen to buddy up on this with others on the same path.",
    "reply_count": 23,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2023-01-13 08:48:30"
      },
      {
        "time_stamp": "2023-01-13 11:22:45"
      },
      {
        "time_stamp": "2023-01-13 11:24:55"
      },
      {
        "time_stamp": "2023-01-13 11:25:34"
      },
      {
        "time_stamp": "2023-01-13 22:17:35"
      },
      {
        "time_stamp": "2023-01-13 22:21:00"
      },
      {
        "time_stamp": "2023-01-13 22:22:55"
      },
      {
        "time_stamp": "2023-01-17 07:52:56"
      },
      {
        "time_stamp": "2023-01-17 12:02:27"
      },
      {
        "time_stamp": "2023-01-17 12:03:26"
      },
      {
        "time_stamp": "2023-01-17 12:49:59"
      },
      {
        "time_stamp": "2023-01-17 12:50:02"
      },
      {
        "time_stamp": "2023-01-17 13:52:40"
      },
      {
        "time_stamp": "2023-05-22 00:43:59"
      },
      {
        "time_stamp": "2023-05-22 10:25:04"
      },
      {
        "time_stamp": "2023-05-24 06:27:54"
      },
      {
        "time_stamp": "2023-05-24 07:22:53"
      },
      {
        "time_stamp": "2023-05-24 17:06:12"
      },
      {
        "time_stamp": "2023-05-25 12:23:30"
      },
      {
        "time_stamp": "2023-05-25 12:24:42"
      },
      {
        "time_stamp": "2023-05-25 12:26:04"
      },
      {
        "time_stamp": "2023-05-25 12:26:40"
      },
      {
        "time_stamp": "2023-05-25 12:36:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-13 08:48:30",
    "text": "I think you'll enjoy this: <https://www.loom.com/share/1a67a8f3d7e34236936112c71e159c9e> MVP I built a while ago to build public apps on HubSpot hosted serverless functions"
  },
  {
    "poster": {
      "poster_name": "Mike Talley",
      "poster_handle": "mtalley"
    },
    "time_stamp": "2023-01-13 11:22:45",
    "text": "Cool stuff Carter! I’m curious how you folks are debugging when coding up serverless functions. What has been your best way to iterate quickly?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-13 11:24:55",
    "text": "Normal serverless functions, Serverless Projects, or Serverless Apps?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-13 11:25:34",
    "text": "Or customed coded workflow actions? HubSpot has a lot of different serverless functions"
  },
  {
    "poster": {
      "poster_name": "Curtis Morte",
      "poster_handle": "cmorte"
    },
    "time_stamp": "2023-01-13 22:17:35",
    "text": "<@UQ4ED6QFM> when I read your question, my understanding of your question is how do you support version updates for serverless architectures in AWS? This gets a bit tricky, especially with DynamoDB (managing your DB model and items). I've found that the serverless architectures are nice, but you really need to be smart with how you build them and support them (like you're finding out with CI/CD). There's some tactics you can take with API Gateway Stages, Lambda Versions, Etc. The big kicker is still DynamoDB though. Getting your data model right from the start is crucial, otherwise you will find yourself writing tooling / scripts to help manage the change. Having a way to test this as well is key. Sometimes adding GSIs and removing them can cause issues, not to mention if you need to go back and work on partitioning your tables in a way for faster lookups. The CI/CD process can get a little terse here, but a solid code pipeline setup with stages seems like it could solve a lot. You could modify the stages on demand to deal with one off changes (like a DynamoDB model change, and insertion of data to existing items). If you can get away without using your own runtimes (containers) in your architecture, that can reduce some of the footprint. In my professional opinion, serverless is nice. However, there is a time and place for them. Know your use case, and make the proper decision."
  },
  {
    "poster": {
      "poster_name": "Curtis Morte",
      "poster_handle": "cmorte"
    },
    "time_stamp": "2023-01-13 22:21:00",
    "edited": {
      "time_stamp": "2023-01-13 22:21:50"
    },
    "text": "Also, understanding your compute requirements is key. The thing I find most useful about API Gateway is your ability to route to various different forms of compute based on endpoint types. The thing that always catches newcomers offguard with API Gateway is the hard limits. Pay extra attention to those. Max payload sizes, response sizes, etc. It's a solution, but it's not a be all end all solution. Like I said in my last post, know when to use a serverless architecture and when not to."
  },
  {
    "poster": {
      "poster_name": "Curtis Morte",
      "poster_handle": "cmorte"
    },
    "time_stamp": "2023-01-13 22:22:55",
    "text": "We (<https://threeventures.com>) have a lot of experience in AWS. If you're curious to get some help, let me know."
  }
]
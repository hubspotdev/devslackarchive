[
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2020-08-05 02:33:08",
    "text": "Can we clone pages to other portal ??",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-08-05 10:01:42"
      },
      {
        "time_stamp": "2020-08-05 10:21:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2020-08-05 08:33:23",
    "text": "Hi guys, quick question. When using a form field in a custom module we do not have the option to set the follow up mail on a page level. When using the default form module, we do have that option. That makes it impossible for us to use the form field in a custom module for a few of our larger clients. Does anyone know a solution for this issue?"
  },
  {
    "poster": {
      "poster_name": "Joey van Gessel",
      "poster_handle": "joey"
    },
    "time_stamp": "2020-08-05 10:01:42",
    "text": "Nope…"
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2020-08-05 10:21:41",
    "text": "thanks"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-08-05 11:00:47",
    "text": "<@U9F22AQH5> could you take a look into this?"
  },
  {
    "poster": {
      "poster_name": "Clarke Bishop",
      "poster_handle": "cbishop"
    },
    "time_stamp": "2020-08-05 14:42:16",
    "text": "I am finishing up my Vue -&gt; HubSpot tooling, but still have a few problems. I’ve been using the Vue CLI to setup projects and it comes bundled with webpack tooling. But, it creates multiple js and css files, and the more recent vue cli obscures webpack to a degree.\n\nWhen I do a build, it makes a css folder, a JavaScript folder, and a fonts folder—all in a top /dist folder. I copy all the relevant css, js, font information to my HubSpot module folder.\n\nI then add hs.module to the folder, and update the require statements in module.html as shown below. Then do an hs upload …\n\n```{{ require_css(get_asset_url('../css/app.3d37757c.css')) }}\n{{ require_css(get_asset_url('../css/chunk-vendors.142765ff')) }}\n\n{{ require_js(get_asset_url('../js/app.dc9136eb.js'), 'footer') }}\n{{ require_js(get_asset_url('../js/chunk-vendors.33814eaa.js'), 'footer') }}```\nIt’s kind of working, but still not finding everything. My questions are:\n• Is it OK to have multiple require_js and require_css statements as shown above?\n• The css references the font folder, but I think this is getting thrown off as the require_css statements run.\n• How can I learn more. I’ve been studying <https://developers.HubSpot.com/docs/cms/building-blocks/modules/files>\n• Does anyone know any tricks to debug this kind of problem? There’s a lot of indirection and assembly going on!\n<@U22VBL87M> I’ll be glad to share my thoughts once I figure this out.\n\n&gt; `├── css`\n&gt; │   ├── app.3d37757c.css\n&gt; │   └── chunk-vendors.142765ff.css\n&gt; ├── favicon.ico\n&gt; ├── fonts\n&gt; │   ├── materialdesignicons-webfont.66dc854e.eot\n&gt; │   ├── materialdesignicons-webfont.8ac434c8.woff\n&gt; │   ├── materialdesignicons-webfont.8ed8f071.ttf\n&gt; │   └── materialdesignicons-webfont.c0f7978a.woff2\n&gt; ├── hs.module\n&gt; │   ├── _locales\n&gt; │   ├── fields.json\n&gt; │   ├── meta.json\n&gt; │   ├── module.css\n&gt; │   ├── module.html\n&gt; │   └── module.js\n&gt; └── js\n&gt;     ├── app.dc9136eb.js\n&gt;     ├── app.dc9136eb.js.map\n&gt;     ├── chunk-vendors.33814eaa.js\n&gt;     └── chunk-vendors.33814eaa.js.map\n",
    "reply_count": 9,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2020-08-05 14:48:12"
      },
      {
        "time_stamp": "2020-08-05 14:50:02"
      },
      {
        "time_stamp": "2020-08-05 15:28:17"
      },
      {
        "time_stamp": "2020-08-06 07:06:17"
      },
      {
        "time_stamp": "2020-08-06 09:06:54"
      },
      {
        "time_stamp": "2020-08-06 09:08:08"
      },
      {
        "time_stamp": "2020-08-06 09:09:04"
      },
      {
        "time_stamp": "2020-08-06 09:16:48"
      },
      {
        "time_stamp": "2021-05-27 17:17:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-08-05 14:48:12",
    "text": "&gt; Is it OK to have multiple require_js and require_css statements as shown above?\nYep totally fine to do that.\n&gt; The css references the font folder, but I think this is getting thrown off as the require_css statements run.\nNot entirely sure I understand what is meant by this.\n&gt; How can I learn more. I’ve been studying <https://developers.HubSpot.com/docs/cms/building-blocks/modules/files>\nThat is the best resource we have at the moment for understanding how the module files work.\n\nThis could help you in figuring out how you could set up your vue workflow.\n<https://github.com/HubSpot/cms-vue-boilerplate>\n\nThe community, HubSpot included are still learning the best practices for integrating vue and react. Both are possible but there are just workflow things that are being figured out together."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-08-05 14:50:02",
    "text": "Please do continue to share any feedback or thoughts you have around working with :vuejs: on HubSpot. We want to make it an easy and enjoyable experience."
  },
  {
    "poster": {
      "poster_name": "Mike Talley",
      "poster_handle": "mtalley"
    },
    "time_stamp": "2020-08-05 15:28:17",
    "text": "hey Clarke :wave: this was a limitation that I also ran into when working on <https://github.com/HubSpot/cms-vue-boilerplate> -- the solution that I ended up with was to use webpack directly to build things rather than using vue's wrapper around webpack. I plan on looking into this further using `configureWebpack` and `chainWebpack` to achieve the same result, but for now this is the workaround. we should have a new command to generate vue modules in the next release of the CLI(`hs create vue-app`) that can be used to generate a module boilerplate for vue."
  },
  {
    "poster": {
      "poster_name": "Ankit Parmar",
      "poster_handle": "ankit897"
    },
    "time_stamp": "2020-08-06 00:11:22",
    "text": "Hey Guys, I have started the development in the localhost. Can you please assist me in how can I see a preview in the browser?",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-08-06 00:47:48"
      },
      {
        "time_stamp": "2020-08-06 00:54:18"
      },
      {
        "time_stamp": "2020-08-06 01:07:02"
      },
      {
        "time_stamp": "2020-08-06 01:08:38"
      },
      {
        "time_stamp": "2020-08-06 02:12:28"
      },
      {
        "time_stamp": "2020-08-06 11:34:14"
      },
      {
        "time_stamp": "2020-08-06 11:49:40"
      },
      {
        "time_stamp": "2020-08-08 04:08:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ankit Parmar",
      "poster_handle": "ankit897"
    },
    "time_stamp": "2020-08-06 00:11:51",
    "text": "Is it localhost/project-name or what?"
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2020-08-06 00:47:48",
    "text": "as far as i know, we can’t see preview in localhost, we need to upload all things to design manager :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Ankit Parmar",
      "poster_handle": "ankit897"
    },
    "time_stamp": "2020-08-06 00:54:18",
    "text": "Seriously? Then what is the meaning to develop in localhost if we can't see the preview locally?"
  }
]
[
  {
    "poster": {
      "poster_name": "Kevin Fricke",
      "poster_handle": "kevin813"
    },
    "time_stamp": "2021-06-07 10:12:48",
    "text": "Anyone know how can I include images and fonts in my css file with the vuejs boilerplate? I have tried numerous permutations with no luck.",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-06-07 10:19:13"
      },
      {
        "time_stamp": "2021-06-07 10:20:18"
      },
      {
        "time_stamp": "2021-06-07 10:23:19"
      },
      {
        "time_stamp": "2021-06-07 11:32:54"
      },
      {
        "time_stamp": "2021-06-07 11:40:13"
      },
      {
        "time_stamp": "2021-06-07 11:40:44"
      },
      {
        "time_stamp": "2021-06-07 11:46:36"
      },
      {
        "time_stamp": "2021-06-07 11:54:30"
      },
      {
        "time_stamp": "2021-06-07 13:16:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin Fricke",
      "poster_handle": "kevin813"
    },
    "time_stamp": "2021-06-07 10:19:13",
    "text": "I found the icon in the url by removing a number of the directories. Not sure how to handle this elegantly.  For example, i am trying to add a background icon svg. If i add it in my css like this:\n\n```background-image: url('assets/info.svg')```"
  },
  {
    "poster": {
      "poster_name": "Kevin Fricke",
      "poster_handle": "kevin813"
    },
    "time_stamp": "2021-06-07 10:20:18",
    "text": "i would expect it to pull up but when i review that in the browser it is pointing to this:\n\n<https://homebuyer.com/hs-fs/hub/7604195/hub_generated/template_assets/48058859307/1623082570723/cms-vue-boilerplate/assets/info.svg>\n\nHowever, this is what will actually resolve:\n\n<https://homebuyer.com/hs-fs/hub/7604195/assets/info.svg>"
  },
  {
    "poster": {
      "poster_name": "Kevin Fricke",
      "poster_handle": "kevin813"
    },
    "time_stamp": "2021-06-07 10:23:19",
    "text": "surely this isn't the \"right\" way to do this:\n\n```background-image: url('../../../../../../assets/info.svg')```"
  },
  {
    "poster": {
      "poster_name": "Kevin Fricke",
      "poster_handle": "kevin813"
    },
    "time_stamp": "2021-06-07 11:32:54",
    "text": "<@U7SL518D6> any thoughts on this one? Are there some recommended webpack configuration changes? Thank you for any guidance you can provide."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-07 11:40:13",
    "text": "<https://developers.HubSpot.com/docs/cms/hubl/functions#get-asset-url>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-07 11:40:44",
    "text": "If the file is stored in the File manager instead, then open the file manager and copy the public URL to the file."
  },
  {
    "poster": {
      "poster_name": "Kevin Fricke",
      "poster_handle": "kevin813"
    },
    "time_stamp": "2021-06-07 11:46:36",
    "text": "gotcha. So storing the fine inside of my vuejs application is not the recommended way to do this but rather I should use inline styles and reference the file that way?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-07 11:54:30",
    "edited": {
      "time_stamp": "2021-06-07 11:54:55"
    },
    "text": "Inline styles has nothing to do with it really, nor does VueJS.\n\nIf you are storing the file in the developer file system then you have to use the HubL get_asset_url function to dynamically pull it’s URL.\n\nThis can either be done in your index.scss file (hard an inconvenient because you have to rely on a trick to make scss not process that line. Forget the trick offhand.)\n\nOr you can put that single bit of CSS in the module’s .css file which wouldn’t be processed by scss.\n\nOr store the file in the file manager and use it’s URL."
  },
  {
    "poster": {
      "poster_name": "Kevin Fricke",
      "poster_handle": "kevin813"
    },
    "time_stamp": "2021-06-07 13:16:54",
    "text": "Thank you for the assistance. It makes total sense now. We just add our assets to our HubSpot account then reference them from the url. Thank you for the hand holding :smile:"
  }
]
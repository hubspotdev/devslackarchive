[
  null,
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-07-24 13:22:58",
    "text": "would love for a way to bulk publish blog posts... migrated a client with 288 posts and after some necessary edits, need to publish them"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-24 13:31:04",
    "text": "I’ve said this idea multiple times but still stand by it because I feel the same pain every time I build a new site - It would be nice if there was a way to do essentially what content settings has(site header and footer, with stylesheets and JS files) but do that more as groups and not tied to Domains.\n\nHere’s an example situation:\nI’m working on a site redesign. I can obviously disable the domain header and footer at the template level but then I basically lose the benefits of that entire feature.\n\nSee I like having 1 place where I can add my stylesheet and all my header and footer junk and see it apply to several templates. Thus It would be nice to have this as a “group” functionality where you can assign a template to be part of a group, that has those things. OR pick it at the template level and be like I want to drop this group in kinda deal.\n\nThis same solution solves the problem that sometimes landing pages are supposed to have the same set of stylesheets/js etc. but it’s different than the main site, so why load all the main sites stuff or load each thing I need individually for each individual template. I’d rather have this group mechanism"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-24 13:32:28",
    "text": "I do think the domain level stuff is still valuable but it’s more valuable for tracking pixels and google tag manager type stuff. stuff that wont change when you do a re-design"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-24 13:34:57",
    "text": "I had work-arounds for this problem in the old design manager and have one now but I don’t like doing it because it’s kind of a “dirty” solution"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-24 13:37:33",
    "text": "Another way that kind of thing could be accomplished is with \"base\" templates, that could work similarly to how `extends` works in plain old Jinja/HubL. You throw together a base with the groups and assets you want, and could specify certain regions as \"blocks\", and then when you make another template you set it to extend the first one, with little drag-and-drop areas for each block."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-24 13:38:36",
    "text": "I think what you’re saying would only work for coded templates?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-24 13:39:04",
    "text": "or are you saying like make everything a global group practically?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-24 13:39:41",
    "text": "It only works for coded templates now, but I think you could probably make similar functionality in the drag-and-drop editor."
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-07-24 13:40:19",
    "text": "yeah, what Ian is describing is part of the workflow we use for coded templates"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-24 13:44:00",
    "text": "The workflow I'm envisioning is something like:\n1. Create a base template and build the header/footer and attach the stylesheets and stuff.\n2. Then there'd be a module you can drag in to create a \"block\", which you could name (\"main column\", \"above footer\", whatever). Blocks could even have the option for default content.\n3. Then when you're making a new template, there could be an additional option to attach it to an existing base template. When you do that, you get each block from the base as a separate drag-and-drop region.\n4. Then, when the page is rendered, it treats it as though the blocks have been inserted into their place in the base template.\n5. When someone is making new pages, they'd select from the child templates and probably wouldn't see the base templates."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-24 13:45:27",
    "text": "It's almost the opposite of groups, sort of? In this system, the entire page is global, except for particular local blocks, as opposed to the global content being placed inside a bunch of local content."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-24 13:47:34",
    "text": "The advantage would be that devs could define what is global and what is not, and the global things can be easily changed regardless of what they are."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-24 13:49:39",
    "text": "I usually do something like this in email templates since I never use the drag-and-drop editor for that."
  },
  {
    "text": "Would be awesome to have the option to expire old blog posts and redirect them. This way when an older post is no longer relevant, we can simply use this to remove it.",
    "time_stamp": "2018-07-24 15:43:07"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-24 15:46:10",
    "text": "My thought would be that expiring this page would place it into the \"Archive\" area and then set it to a new status like \"expired\" instead of draft then the normal url redirect would be place in"
  }
]
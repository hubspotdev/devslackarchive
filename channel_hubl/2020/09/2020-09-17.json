[
  {
    "poster": {
      "poster_name": "Krzysztof Gonciarz",
      "poster_handle": "krzysztof.gonciarz"
    },
    "time_stamp": "2020-09-17 05:37:52",
    "text": "Hi Devs :wave:  did anyone experienced issues with `blog_page_link()` function last time? I'm trying to get the link for the next page of the blog with `blog_page_link(next_page_num)` and it looks like it doesn't return anything"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-09-17 06:38:12",
    "text": "Look in the variables in hubl docs"
  },
  {
    "poster": {
      "poster_name": "Steve Kanter",
      "poster_handle": "steve.kanter"
    },
    "time_stamp": "2020-09-17 08:54:08",
    "text": "is it possible to add custom icons into my theme for use in the `icon` field type?"
  },
  {
    "poster": {
      "poster_name": "Elise Ferguson",
      "poster_handle": "elise.ferguson"
    },
    "time_stamp": "2020-09-17 09:08:29",
    "text": "Hey folks, in custom modules, am I missing something or can we not use {{ name }} or any field values inside the actual module.css section?  I’ve been having to put a literal &lt;style&gt; section inside the html + hubl portion of modules to get it to work.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-09-17 09:15:51"
      },
      {
        "time_stamp": "2020-09-17 09:16:36"
      },
      {
        "time_stamp": "2020-09-17 09:31:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Krzysztof Gonciarz",
      "poster_handle": "krzysztof.gonciarz"
    },
    "time_stamp": "2020-09-17 09:15:51",
    "text": "AFAIK, we can't use HubL there. Still you can use it inside a separate, independent CSS file that you can attach to the module"
  },
  {
    "poster": {
      "poster_name": "Krzysztof Gonciarz",
      "poster_handle": "krzysztof.gonciarz"
    },
    "time_stamp": "2020-09-17 09:16:36",
    "text": "or even better import them all in single _styles.css_ file and then use it in every module (it will request file only once)"
  },
  {
    "poster": {
      "poster_name": "Elise Ferguson",
      "poster_handle": "elise.ferguson"
    },
    "time_stamp": "2020-09-17 09:31:30",
    "text": "well for scoping purposes I like using  the module {{ name }} as an ID in my CSS so I’m guessing that’s going to have to be inside my module itself and not an outside file.  I keep all the generic styles in an separate file but module specific stuff with each module."
  },
  {
    "poster": {
      "poster_name": "Anton Pleshivtsev",
      "poster_handle": "anton016"
    },
    "time_stamp": "2020-09-17 10:11:26",
    "text": "Hey, when I try to call `fromjson`  on a contact field I receive empty result, is there a known workaround?\nexample from my template:\n```{{ contact.intros_data|fromjson }}```",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-09-17 10:52:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Noel Williams",
      "poster_handle": "noel.williams"
    },
    "time_stamp": "2020-09-17 10:49:34",
    "text": "Looking to do the same and wondering if this has changed with the new Themes?"
  },
  {
    "poster": {
      "poster_name": "Anton Pleshivtsev",
      "poster_handle": "anton016"
    },
    "time_stamp": "2020-09-17 10:52:20",
    "text": "the field value can be any valid json"
  }
]
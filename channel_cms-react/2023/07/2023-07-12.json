[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 05:46:27",
    "text": "is there an issue with trying to proxy when 2 js_block components exist on the page? for example I have a nav and a module on the same page. Trying to proxy from the module throws an error:\n```Failed proxy render of page id = 123532575890 hub id = 4076230\n\nError: Unable to render component located outside of the project folder \"explore-spoke-project\". Components should be nested within the project folder. Check that the specified path is correct: @projects/global-nav-project/cms-assets/components/modules/GlobalNav.\n    at renderComponentForPlaceholder (file:///Users/andrey.kondratyuk/code/flatiron-digital/src-react/explore-spoke-project/cms-assets/node_modules/@HubSpot/cms-dev-server/dist/run.js:1512:11)\n    at proxySpecificPage (file:///Users/andrey.kondratyuk/code/flatiron-digital/src-react/explore-spoke-project/cms-assets/node_modules/@HubSpot/cms-dev-server/dist/run.js:1629:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async proxyPageRouteHandler (file:///Users/andrey.kondratyuk/code/flatiron-digital/src-react/explore-spoke-project/cms-assets/node_modules/@HubSpot/cms-dev-server/dist/run.js:1739:5)```\n",
    "reply_count": 30,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-07-12 07:04:50"
      },
      {
        "time_stamp": "2023-07-12 07:05:54"
      },
      {
        "time_stamp": "2023-07-12 07:06:16"
      },
      {
        "time_stamp": "2023-07-12 07:07:00"
      },
      {
        "time_stamp": "2023-07-12 07:07:04"
      },
      {
        "time_stamp": "2023-07-12 07:08:31"
      },
      {
        "time_stamp": "2023-07-12 07:10:16"
      },
      {
        "time_stamp": "2023-07-12 07:11:27"
      },
      {
        "time_stamp": "2023-07-12 07:11:55"
      },
      {
        "time_stamp": "2023-07-12 07:12:03"
      },
      {
        "time_stamp": "2023-07-12 07:12:04"
      },
      {
        "time_stamp": "2023-07-12 07:15:25"
      },
      {
        "time_stamp": "2023-07-12 07:15:49"
      },
      {
        "time_stamp": "2023-07-12 07:40:34"
      },
      {
        "time_stamp": "2023-07-12 07:41:44"
      },
      {
        "time_stamp": "2023-07-12 07:45:21"
      },
      {
        "time_stamp": "2023-07-12 07:45:29"
      },
      {
        "time_stamp": "2023-07-12 11:19:53"
      },
      {
        "time_stamp": "2023-07-12 11:20:34"
      },
      {
        "time_stamp": "2023-07-18 14:34:29"
      },
      {
        "time_stamp": "2023-07-19 11:52:57"
      },
      {
        "time_stamp": "2023-07-19 11:53:03"
      },
      {
        "time_stamp": "2023-07-19 13:52:59"
      },
      {
        "time_stamp": "2023-07-19 13:55:39"
      },
      {
        "time_stamp": "2023-07-19 13:55:48"
      },
      {
        "time_stamp": "2023-07-19 14:00:18"
      },
      {
        "time_stamp": "2023-07-19 14:00:59"
      },
      {
        "time_stamp": "2023-07-19 14:01:27"
      },
      {
        "time_stamp": "2023-07-20 06:28:02"
      },
      {
        "time_stamp": "2023-07-20 06:28:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-07-12 07:04:50",
    "edited": {
      "time_stamp": "2023-07-12 07:05:01"
    },
    "text": "Is there a missmatch with the project folder name the module is in and the project name as defined in the project json file?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:05:54",
    "text": "doesn't appear to be..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:06:16",
    "text": "`hsproject.json` and `cms-assets.json` and `folder` match"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:07:00",
    "text": "it's 2 different/separate modules"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:07:04",
    "text": "so I guess let me check both?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:08:31",
    "text": "they each match independently but I think the problem/confusion is that 2 modules exist?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:10:16",
    "text": "in other words, do I have to put all components in the same project if I want to proxy?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-07-12 07:11:27",
    "text": "So there is a project in which you are referencing modules from a different project?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:11:55",
    "text": "the projects are independent, but I have 2 projects on a page"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:12:03",
    "text": "and I'm trying to proxy from/with one of the projects"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-07-12 07:12:04",
    "text": "got it."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-07-12 07:15:25",
    "text": "I think the behavior should be that when proxying, the module in the project you are not proxying should just be rendered by the proxy service and not attempted to be rendered locally. It's possible this is :bug: - I will investigate."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:15:49",
    "text": "ok, thank you"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-07-12 07:40:34",
    "text": "what version of the dev server are you running?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-07-12 07:41:33",
    "text": "Sorry about that! We’ll try to dig into that soon (we have regular tests of windows dev server usage, but that isn’t testing proxy functionality yet)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:41:44",
    "text": "```    \"node_modules/@HubSpot/cms-dev-server\": {\n      \"version\": \"0.7.1\",```\n"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-07-12 07:45:21",
    "text": "is that from a lock file?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:45:29",
    "text": "yea"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 07:59:44",
    "text": "looking for advice:\nit looks like the HubSpot blog posts API doesn't include tagNames so I have to do an extra API request for each blog posts I render to get the names/urls. Should I do exactly that, do a query inside of each `&lt;Post/&gt;` component as I loop through? Should I do one query at the beginning and then save the tag names once? Probably the latter...",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-07-12 10:05:15"
      },
      {
        "time_stamp": "2023-07-12 10:06:31"
      },
      {
        "time_stamp": "2023-07-12 10:06:44"
      },
      {
        "time_stamp": "2023-07-12 10:06:54"
      },
      {
        "time_stamp": "2023-07-12 10:07:38"
      },
      {
        "time_stamp": "2023-07-12 10:07:50"
      },
      {
        "time_stamp": "2023-07-12 10:08:48"
      },
      {
        "time_stamp": "2023-07-12 10:09:20"
      },
      {
        "time_stamp": "2023-07-12 10:09:26"
      },
      {
        "time_stamp": "2023-07-12 10:09:30"
      },
      {
        "time_stamp": "2023-07-12 10:09:37"
      },
      {
        "time_stamp": "2023-07-12 10:09:44"
      },
      {
        "time_stamp": "2023-07-12 10:09:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Will Brueske",
      "poster_handle": "will.brueske"
    },
    "time_stamp": "2023-07-12 08:32:38",
    "text": "Sounds good, thank you!"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 08:47:52",
    "text": "i think i have a fix for this, should be able to release it shortly"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 09:14:53",
    "text": "version 0.7.2 of `@HubSpot/cms-dev-server` should fix that issue, please let us know if it persists"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 10:05:15",
    "edited": {
      "time_stamp": "2023-07-12 10:05:43"
    },
    "text": "my recommendation would be collecting them at the top and doing a second, single request (so the latter as you said)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 10:06:31",
    "text": "maybe crazier is while I am making the request to posts (serverless function) I do a second request to get the tag names....that's what I ended up doing"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 10:06:44",
    "text": "not sure if it's more efficient/better/faster to do it on the server or not"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 10:06:54",
    "text": "but it does make the rest a bit easier"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 10:07:38",
    "text": "i think it would be faster to do it like that, the thing you might lose the ability to do is progressively hydrate the posts"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 10:07:50",
    "text": "like in this case you could have an intermediate state of just the posts data while the tags data loads"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 10:08:48",
    "text": "so its really up to you on what the timing ends up being like and which side of the tradeoff you want to land on"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 10:09:20",
    "text": "yea, interesting. I'll have to think about it / optimize a bit later"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 10:09:26",
    "text": "I appreciate the advice!"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 10:09:30",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 10:09:37",
    "text": "so far I'm really happy that everything seems to be working"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-07-12 10:09:44",
    "text": "great!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 10:09:45",
    "text": "it's essentially a HubSpot React blog"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2023-07-12 11:19:53",
    "text": "Hey Andrey,\n\nThere's a bug in this behavior at the moment and am currently working on a fix, thanks for reporting!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 11:20:34",
    "text": "<@U04DLJH3W94> sure thing! let me know if you need any help testing when the fix is ready"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 11:58:07",
    "text": "How would I import this file into my tailwind.config.js?\n```import brandColors from \"../../../config/colors-config\";```\nI know there's some extra stuff going on with pathname? or maybe I should move that file?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-12 12:00:14",
    "edited": {
      "time_stamp": "2023-07-12 12:02:42"
    },
    "text": "~moving it did not help~  moving and adding .js fixed it"
  },
  {
    "poster": {
      "poster_name": "Will Brueske",
      "poster_handle": "will.brueske"
    },
    "time_stamp": "2023-07-12 12:38:55",
    "text": "Well that was quick.  It's working now, thanks!"
  }
]
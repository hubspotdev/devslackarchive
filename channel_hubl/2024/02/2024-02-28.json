[
  {
    "poster": {
      "poster_name": "Megan Miller",
      "poster_handle": "millerm"
    },
    "time_stamp": "2024-02-28 11:00:12",
    "text": "Let's talk HubDB. it's a fantastic tool, but I would love to see more use-case documentation.\nwe have a list of native plants. I have created listing and detail pages. For this, the documentation for that has been excellent.\nMy recent challenge has been adding a basic checkbox filter section for the listing page. We have so many plants, we need a way to filter from all the fields.\n\nI have tried to implement Isotope, however, the db output for the target classes in the single plant card is a mess.\nHere is a sketch of what I'm going for:\n(<https://community.HubSpot.com/t5/CMS-Development/HubDB-Filter-and-sort-as-a-module/m-p/934127>)\na filter loop that will output all the options of selected columns.\n```##### NOT THE ACTUAL CODE, JUST A SKETCH OF WHAT I'm GOING FOR ######\n{% for item in module.column_name %} {# users would select the column names and enter it in the module fields #} \n    &lt;h3&gt;{{ item.column_name.label }}&lt;/h3&gt;  \n    &lt;ul&gt;\n      {% for listitems in {{ item.column_name }}(same as the one entered in the module) %}\n      &lt;li&gt;{{ listitme }}&lt;/li&gt; {# no repeats #}\n      {% endfor %}\n    &lt;/ul&gt;\n{% endfor %}```\n",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-02-28 13:46:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2024-02-28 13:46:12",
    "edited": {
      "time_stamp": "2024-02-28 13:47:39"
    },
    "text": "I would recommend a javascript solution. Setting this up should be relatively easy for someone who knows what they're doing with JS.\n\nBut you can also achieve with HubL, it just won't feel as seamless UX as JS solution because page will need to refresh.\n\nTo achieve with HubL:\nFor each category, you could add a link (that appears as a checkbox)– the link href could be the same listing page URL but with parameter added, i.e. `https://listingpage.link?category=plant-category`  – and you can detect URL parameters using HubL so if page has parameter, then show the link with \"checked\" class that will display the link as a checked checkbox. And within the HubL, you can also only show rows of the HubDB that match the url parameter provided (to achieve filtered results)"
  },
  {
    "poster": {
      "poster_name": "Melissa Nault",
      "poster_handle": "melissa525"
    },
    "time_stamp": "2024-02-28 14:10:39",
    "text": "Hello! Is there a way to remove the time from the timestamp on a blog post template? So only the date it was published shows.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-28 14:27:47"
      },
      {
        "time_stamp": "2024-02-29 05:57:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2024-02-28 14:27:47",
    "text": "Yes, it can be displayed in any format with a datetime filter applied correctly in the blog post HubL template: <https://developers.HubSpot.com/docs/cms/hubl/filters#format-datetime>"
  },
  {
    "poster": {
      "poster_name": "Julian Vidal",
      "poster_handle": "julian.vidal123"
    },
    "time_stamp": "2024-02-28 14:48:18",
    "edited": {
      "time_stamp": "2024-02-28 14:48:47"
    },
    "text": "Hey Everyone! Did you know that there’s a limit of 1,000 items in a sequence? If you do this, it’ll only print 1,000 items, not 2,000 as expected :face_exhaling:\n\n`{%set test =[] %}`\n`{% for y in range(1, 2000)  %}`\n    `{% do test.append(y)%}`\n`{% endfor %}`\n`{{test}}`\n\nIs there a way to bypass that limit? Is that intentional?  I need to have a sequence with ~5k elements.",
    "reply_count": 12,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-02-28 15:01:39"
      },
      {
        "time_stamp": "2024-02-29 06:42:21"
      },
      {
        "time_stamp": "2024-02-29 06:45:16"
      },
      {
        "time_stamp": "2024-02-29 08:16:01"
      },
      {
        "time_stamp": "2024-02-29 08:57:03"
      },
      {
        "time_stamp": "2024-02-29 08:58:35"
      },
      {
        "time_stamp": "2024-02-29 08:58:45"
      },
      {
        "time_stamp": "2024-02-29 08:59:10"
      },
      {
        "time_stamp": "2024-02-29 08:59:24"
      },
      {
        "time_stamp": "2024-02-29 09:01:52"
      },
      {
        "time_stamp": "2024-02-29 09:02:13"
      },
      {
        "time_stamp": "2024-02-29 09:02:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Julian Vidal",
      "poster_handle": "julian.vidal123"
    },
    "time_stamp": "2024-02-28 15:01:39",
    "text": "<@U01QVR44MEY> <@U7SL518D6> <@U25PYL3Q8> <@UQERM7BLY> - You gave me great ideas the other day, any ideas about this?"
  },
  {
    "poster": {
      "poster_name": "Giovanni Zuanon",
      "poster_handle": "giovanni.zuanon"
    },
    "time_stamp": "2024-02-29 00:34:05",
    "text": "Hi all,\ndoes anyone have any idea how a language switcher might work to switch between pages for a dynamic page linked to HubDB. Let me preface this by saying that the dynamic page is linked, for each language, to the table corresponding to that language. I tried to query support but they couldn't give me a comprehensive answer and, to be honest, were grasping at mirrors.\nThank you for anyone who would like to embark on this adventure",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-03-06 00:07:50"
      }
    ]
  }
]
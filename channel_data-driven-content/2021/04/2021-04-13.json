[
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 06:24:10",
    "text": "Recently we get the following error:\n\n*hubdb An error occurred updating a module Please click 'Apply changes', try again, or investigate if the  module has any errors.*\n\nWe don't get an error in the 'module' sandbox; and everything works as it should there, but in the page editor we do get the message; is there away of debugging that;\n\nWhat we made is as followed:\n• created a repeatable hubdb selector so we can add the rows in a foreach",
    "reply_count": 6,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2021-04-13 07:40:57"
      },
      {
        "time_stamp": "2021-04-13 08:54:46"
      },
      {
        "time_stamp": "2021-04-13 12:41:40"
      },
      {
        "time_stamp": "2021-04-13 12:46:03"
      },
      {
        "time_stamp": "2021-04-14 11:06:50"
      },
      {
        "time_stamp": "2021-04-14 11:10:17"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2021-04-13 06:25:30"
  },
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 06:25:51",
    "text": "```module.hubdb_filters```"
  },
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 06:26:02",
    "text": "gives an array with hubDB id's"
  },
  {
    "text": "<@U54TVT3C1> we used it like this;",
    "time_stamp": "2021-04-13 06:27:05"
  },
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 06:27:53",
    "text": "we used concat ~ to widen the string"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2021-04-13 06:28:30",
    "text": "Thanks.  I ended up going a different route.  I’m just going to use CSS to show/hide certain results instead of filtering my DB call"
  },
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 06:29:23",
    "text": "that is also a solution; but that will end up being an slower solution with loading the page"
  },
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 06:29:37",
    "text": "but it is a solution"
  },
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 06:29:41",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2021-04-13 06:34:41",
    "text": "yup.  not too worried about speed in this case.  The difference in results is ~ 10 for each category, so no big deal."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2021-04-13 06:43:47",
    "text": "I did, and it didn’t seem to work for me.  Let me give it another shot to confirm"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2021-04-13 06:45:13",
    "text": "Ah… It’s because it’s `and` not `or`"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2021-04-13 06:51:31",
    "text": "Next question:  Is the a `does not contain` option?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2021-04-13 06:57:45",
    "text": "Nevermind!  figured it out.  Appreciate the help"
  },
  {
    "poster": {
      "poster_name": "Corey King",
      "poster_handle": "cking"
    },
    "time_stamp": "2021-04-13 07:38:29",
    "text": "I might be overthinking/overlooking here, but I have 4 filters I'm using to filter my HubDB table. Country, Region, Partner Type, and Partner Tier.\n\nIt seems very excessive to create a query for every possible combination of filters a user could selected using these filters.\n\nFor example, a query for all filters selected, a query for only the Country and Region selected, a query for only the Country and Partner Type selected, a query for only the Partner Type, Country and Region selected, and so on.\n\nIs there a concise way to handle this?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-04-13 07:58:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2021-04-13 07:40:57",
    "text": "Is this happening with HubDB Row selector module field?"
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2021-04-13 07:58:14",
    "text": "I personally use hubdb API with vue js in this situation, it will make work easier to manage filter"
  },
  {
    "poster": {
      "poster_name": "Eelko Sterk",
      "poster_handle": "e.sterk"
    },
    "time_stamp": "2021-04-13 08:54:46",
    "text": "Yes there is a HubDB Row selector and a HubDB selector in that module"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2021-04-13 12:41:40",
    "text": "<@U010JGM53FT> Can you please take a look when you have some time?"
  },
  {
    "poster": {
      "poster_name": "Marissa Okoli",
      "poster_handle": "mokoli"
    },
    "time_stamp": "2021-04-13 12:46:03",
    "text": "Can I have a link?"
  }
]
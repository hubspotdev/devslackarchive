[
  {
    "text": "Hi there! I have a question about a potential solution for a form module I’ve created involving Javascript. If this is better suited for the Javascript channel, please let me know!\n\nBackground: I’ve created a form module that has a ‘Class’ field. Currently, there are 2 instances of this module on a landing page (with classes ‘step-1’ and ‘step-2’) and I’m using javascript to mimic a sort of ‘multi-step’ form. So, when the page first loads the second form is set to display: none and only the first form is visible. Then when the first form is submitted, we check the answer to ‘re-enrollment type’ and only if the answer is NOT ‘Not interested’ we switch the visibility to display the second form. If the user is not interested, the thank you message displays as normal and the second form stays hidden. (See screenshot HubSpot-form_v1).\n\nNew proposed flow: My client now wants to have an alternate ‘step-2’ form in the case the user selects one specific option from the ‘re-enrollment type’ field. So, altogether, 3 forms are now in play. Now, I could continue with current logic and have 3 instances of the form module, 2 hidden with CSS. But I worry about the impact of having 3 forms on one page.\n\nPotential solution: So, I was trying to load the ‘step-2’ form via Javascript instead of just changing the visibility. That way it’s only loaded once the first form is submitted with the required selection. However, the typical Javascript for embedding the HubSpot form is not working in this case. (See screenshot HubSpot-form_v2). Am I missing a step here? Is there a better solution for this scenario?",
    "time_stamp": "2023-01-27 09:27:44",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-01-27 09:35:42"
      },
      {
        "time_stamp": "2023-01-27 09:55:11"
      },
      {
        "time_stamp": "2023-01-27 12:02:29"
      },
      {
        "time_stamp": "2023-01-27 12:22:29"
      },
      {
        "time_stamp": "2023-01-27 13:43:53"
      },
      {
        "time_stamp": "2023-01-27 15:11:58"
      },
      {
        "time_stamp": "2023-01-31 15:07:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-01-27 09:35:42",
    "text": "Potential solution (that might bypass the need for the extra javascript needed here): Typeform makes multi-step forms and logic really easy to set up. It is a no-code solution, so it might not work if your client needs very specific styling. But there's a Typeform integration with HubSpot that would make setting up this scenario pretty quick and painless."
  },
  {
    "poster": {
      "poster_name": "Tess Ewing",
      "poster_handle": "tess"
    },
    "time_stamp": "2023-01-27 09:55:11",
    "text": "Thanks for the tip! Unfortunately the forms in question are indeed heavily styled, but I'll still take a look at Typeform."
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-01-27 12:02:29",
    "text": "Utilizing HubSpot forms it seems the best way to accomplish is a new page for each step of the form, and action on form submit would be a redirect to URL of next step: <https://community.HubSpot.com/t5/Lead-Capture-Tools/How-do-I-create-a-multi-step-form-on-one-page/m-p/356462#:~:text=Out%20of%20the%20box%2C%20HubSpot,process%20and%20a%20separate%20form>"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-01-27 12:22:29",
    "edited": {
      "time_stamp": "2023-01-27 13:13:39"
    },
    "text": "Only other alternative I can think of would be to embed a private app that has custom inputs and form UX, then package data with js and send via form submission api <https://legacydocs.HubSpot.com/docs/methods/forms/submit_form_v3_authentication>"
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2023-01-27 12:37:19",
    "text": "is anyone else experiencing an issue where making changes in the global content editor (i.e. header/footer) are applying and then later reverting, or even in the middle of editing, the settings disappear and you have to start over? We've had multiple reports of header/footer issues where changes are made, published, and the live site shows the change, but the settings in the global editor are reverted and to make new changes you have to start over.",
    "reply_count": 8,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-01-27 12:46:43"
      },
      {
        "time_stamp": "2023-01-27 12:48:04"
      },
      {
        "time_stamp": "2023-01-27 12:49:02"
      },
      {
        "time_stamp": "2023-01-27 12:53:13"
      },
      {
        "time_stamp": "2023-01-27 12:53:47"
      },
      {
        "time_stamp": "2023-01-27 14:50:21"
      },
      {
        "time_stamp": "2023-01-31 05:45:45"
      },
      {
        "time_stamp": "2023-02-08 10:40:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-01-27 12:46:43",
    "text": "Yup — Been experiencing this consistently on a client site for a few months now. Haven’t found any sort of workaround better than “make and save the changes multiple times until they decide to stick.”"
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2023-01-27 12:48:04",
    "text": "I built a complex advanced footer across 4 page types in the global footer and saved, only to have to start completely over.\n\nAt first I thought it was happening if the editor was open in more than one window or by more than one user, but after extensive testing it seems completely arbitrary when it saves and when it doesn't."
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2023-01-27 12:49:02",
    "text": "<@U2H3TT8F2> is this something you can check on internally? I'm not sure how to submit a support request for this because it is not predictable and I've already rebuilt anything reverted previously"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2023-01-27 12:53:13",
    "text": "I'll ask around now :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2023-01-27 12:53:47",
    "text": "cool thanks! I thought I was losing my mind :dotted_line_face:"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2023-01-27 13:43:53",
    "edited": {
      "time_stamp": "2023-01-27 13:44:49"
    },
    "text": "Hey Tess - I’ve had to build a few of these myself for various clients in the past. I’ve usually have just built a manual form in HTML with the various screens needed then used JS to validate and navigate the user around.\n\nYou can create a single form in HS to capture all of the data that might be collected, or split it across a few forms if you prefer and use business logic to determine what data goes where, then submit the form via the forms API.\n\nFor more complicated forms it might make more sense to use a JS framework like Vue so that you can have easy access to state management and what not."
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2023-01-27 14:50:21",
    "text": "I have also had this issue a few times today"
  },
  {
    "poster": {
      "poster_name": "Tess Ewing",
      "poster_handle": "tess"
    },
    "time_stamp": "2023-01-27 15:11:58",
    "text": "Thank you both for these options!"
  }
]
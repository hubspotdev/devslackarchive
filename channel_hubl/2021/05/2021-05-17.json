[
  {
    "poster": {
      "poster_name": "Andrey",
      "poster_handle": "andrey528"
    },
    "time_stamp": "2021-05-17 04:44:41",
    "text": "arent global partials deprecated"
  },
  {
    "poster": {
      "poster_name": "Andrey",
      "poster_handle": "andrey528"
    },
    "time_stamp": "2021-05-17 04:47:21",
    "text": "when i run hs create global-partial, i get a deprecated message"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-05-17 05:45:15",
    "text": "No they are not."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-17 06:49:32",
    "edited": {
      "time_stamp": "2021-05-17 06:49:44"
    },
    "text": "No global partials were released only about a year ago"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-17 06:51:05",
    "text": "I think you may be thinking of global groups. Which are also not technically deprecated. But we do advise using coded themes due to the better developer and content creator experience they can deliver."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-17 07:09:43",
    "text": "hmm I think our wording here is a little confusing"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-17 07:10:29",
    "text": "<@U01UVHY9BT7> if you follow the instructions in the error it tells you that you need to use hs create template instead.\n\nRunning hs create template gives you this:"
  },
  {
    "text": "",
    "time_stamp": "2021-05-17 07:11:06"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-17 07:14:41",
    "text": "the separate command for global-partial is what was deprecated. Not the template type. You SHOULD be using that template type as it provides a great experience for content creators.\n\nI’m going to see about getting that error messaging updated to be more clear."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-17 07:27:28",
    "text": "I’ve submitted a PR to update the CLI’s error messaging here to make this more clear.\n<https://github.com/HubSpot/HubSpot-cli/pull/503>"
  },
  {
    "poster": {
      "poster_name": "Bhréin Brannick",
      "poster_handle": "bhreinb"
    },
    "time_stamp": "2021-05-17 11:36:39",
    "edited": {
      "time_stamp": "2021-05-17 11:37:03"
    },
    "text": "Hi there…I know that it’s possible to implement custom tags, filters &amp; functions which are super useful but I’m curious whether it’s possible to implement custom tests like so (<https://jinja.palletsprojects.com/en/3.0.x/templates/#list-of-builtin-tests>) in JinJava?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-17 11:41:51"
      },
      {
        "time_stamp": "2021-05-17 11:43:19"
      },
      {
        "time_stamp": "2021-05-17 11:43:22"
      },
      {
        "time_stamp": "2021-05-17 11:43:46"
      },
      {
        "time_stamp": "2021-05-18 02:06:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-17 11:41:51",
    "edited": {
      "time_stamp": "2021-05-17 11:42:05"
    },
    "text": "HubSpot does have expression tests on it’s own platform, I’m not sure if they’re included in JinJava though <https://developers.HubSpot.com/docs/cms/hubl/operators-and-expression-tests>"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-17 11:43:19",
    "edited": {
      "time_stamp": "2021-05-17 11:43:39"
    },
    "text": "<https://github.com/HubSpot/jinjava/blob/f07055439eca13a425e76412b8c33839353e46fa/src/main/java/com/HubSpot/jinjava/lib/exptest/IsContainingAllExpTest.java#L19|https://github.com/HubSpot/jinjava/blob/f07055439eca13a425e76412b8c33839353e46fa/s[…]ava/com/HubSpot/jinjava/lib/exptest/IsContainingAllExpTest.java>"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-17 11:43:22",
    "text": "seems to have them."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-17 11:43:46",
    "text": "```{{ [1, 2, 3] is containingall [2, 3] }}```"
  },
  {
    "poster": {
      "poster_name": "Tom Raley",
      "poster_handle": "tom.raley"
    },
    "time_stamp": "2021-05-17 13:04:28",
    "edited": {
      "time_stamp": "2021-05-17 13:04:53"
    },
    "text": "Hey everyone, I’m trying to use blog_recent_author_posts() on a regular page and it’s not pulling anything in, just returns empty. It works fine on a blog-listing template, but I can’t get it to work on a regular page. Any thoughts?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-17 13:59:17"
      },
      {
        "time_stamp": "2021-05-17 14:01:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Bryan Schneidewind",
      "poster_handle": "bryans"
    },
    "time_stamp": "2021-05-17 13:59:17",
    "text": "for a non-blog page?\nyou could try `content.author_name` and it should pull the author"
  },
  {
    "poster": {
      "poster_name": "Tom Raley",
      "poster_handle": "tom.raley"
    },
    "time_stamp": "2021-05-17 14:01:29",
    "text": "I actually figured it out using related_blog_posts. I was using the correct blog ID, author name and limit parameters and the function just wasn’t working. Related posts seems to be giving me what I need."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-05-17 14:15:19",
    "text": "is there a way to list all of the blogs in a portal via hubl? Something like `for group in groups`"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2021-05-17 20:44:20",
    "text": "I am trying to display a specific value in a specific module but need to access it through the template, can anyone help me figure out how to parse through an HubSpot array to display a specific module using this type of hubl on a page template:\n```{{content.widget_containers.page_content.widgets}}```"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2021-05-17 20:48:49",
    "text": "It prints out tons of body json elements but need to focus in on this item:\n```{body={bg_color=bg-primary, cta1={url_type_group={url_type=open_gated_form}}}```\nI want to write a conditional to find out that cta1.url_type_group.url_type == ‘open_gated_form’, not sure how to parse through the json hubl array, is there any documentations that could help me accomplish that"
  },
  {
    "poster": {
      "poster_name": "Andrey",
      "poster_handle": "andrey528"
    },
    "time_stamp": "2021-05-17 21:30:02",
    "text": "<@U7SL518D6> excellent, thank you clarifying and improving"
  }
]
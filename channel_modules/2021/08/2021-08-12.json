[
  {
    "poster": {
      "poster_name": "Tom Mitchell",
      "poster_handle": "tom.mitchell"
    },
    "time_stamp": "2021-08-12 09:03:41",
    "text": "Hello - does anyone know if it's possible to loop through blog posts where a custom field (boolean) is true, and limit the number of responses that fit this criteria to two?\n\n```{% set posts = blog_recent_posts('12345678', post.widgets.module_12345678.body.benefit_tags.time_saving) %}\n\n{% for post in posts %}\n{% if loop.index is &lt;3 %}```\nI'm trying the above without much luck",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-08-12 09:20:24"
      },
      {
        "time_stamp": "2021-08-12 09:58:11"
      },
      {
        "time_stamp": "2021-08-12 22:21:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-08-12 09:20:24",
    "text": "You could do effectively what you’re doing - for loop through all of the posts, instead of printing add the items that contain the boolean to a new array.\n\nLoop through your new array printing only the first 2 items based on the index - or by removing all of the other objects from the array.\n\nAlternatively I think you could do something more clever to only add the first 2 posts that fit your criteria to that new array from the get-go, and that’d be more efficient. Just having trouble thinking how you’d do that atm."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-08-12 09:37:43",
    "text": "Cross posting this unexpected behavior\n<https://HubSpotdev.slack.com/archives/CSFGKSHT7/p1628782643061900>"
  },
  {
    "poster": {
      "poster_name": "Tom Mitchell",
      "poster_handle": "tom.mitchell"
    },
    "time_stamp": "2021-08-12 09:58:11",
    "text": "Thanks <@U7SL518D6> - yes that final solution is what I've been trying to get my head around as well."
  },
  {
    "text": "Hello everyone :wave:\nI’m trying to apply inline styling to a “module group” to effect the behaviour of the modules within the group (setting it as flex to vertically center it’s children).\n\nMy issue is that the modules apparently aren’t direct children of the module group when the page is loaded (pic included). I’m sure there’s probably a reason for this, but it does seem unintuitive. Is there any way to accomplish what i’m trying to do within the dnd editor?",
    "time_stamp": "2021-08-12 22:10:09",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-08-12 22:18:56"
      },
      {
        "time_stamp": "2021-08-12 22:20:33"
      },
      {
        "time_stamp": "2021-08-13 08:19:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-08-12 22:18:56",
    "text": "Hey Wes - those are generated as scaffolding for bootstrap. If you’re using those legacy drag and drop templates it will automatically do that for you. The way to get rid of it would be to code your own custom templates. \n\nYou can still add your own flex Columns if you want or drag and drop areas. But outside of those tags you can create your own scaffolding and drop your modules right in - make sense?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-08-12 22:20:33",
    "text": "Another option would be to just turn your two modules into a single module and handle the interaction you’re looking for directly in the module.  That’s likely the way to go depending on what you’re looking to do. \n\nOverriding the bootstrap can be a bit risky. But I understand if you like to live on the edge :p"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-08-12 22:21:17",
    "text": "Tom did you get this working"
  }
]
[
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-04-30 05:59:28",
    "text": "Feature request for <@UFBNA9K9A> <@UQNEXHW14> and the team. Can you still return fields in the API request even if the data is empty? Example: I'm calling results_associations_contacts_results and results_associations_companies_results as part of the associations query parameter for my recordset, and sometimes at the last call in the API, there will be fewer than 100 records and in that handful of records, none will have associations. Those two fields then go missing, and it breaks the code because the code is looking for those fields and the JSON response is literally two fields shorter. Can you return NULL/NA for them instead? Thanks!",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-30 05:59:41"
      },
      {
        "time_stamp": "2020-04-30 06:27:14"
      },
      {
        "time_stamp": "2020-04-30 06:28:21"
      },
      {
        "time_stamp": "2020-04-30 06:30:15"
      },
      {
        "time_stamp": "2020-04-30 09:02:42"
      },
      {
        "time_stamp": "2020-04-30 09:02:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-04-30 05:59:41",
    "text": "This is API v3 for reference"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-04-30 06:27:14",
    "text": "Since associations are arrays, where would you stop. Should `associations.companies.results` exist?  Should it be an empty array?  Or should `associations.companies==null` ?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-04-30 06:28:21",
    "text": "We may not opt to change the behavior but I wanted to get your take on what your preferred behavior would be"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-04-30 06:30:15",
    "text": "Also as a note this `results_associations_contacts_results` looks like it comes more from the client you are using than anything that’s coming directly from the HubSpot API, while I think I understood what you are going for, it’s helpful to reference the URL and JSON  you are receiving directly from the API"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-04-30 09:02:42",
    "text": "Good questions - the first is that the array should exist and just be empty for that last set of results, ideally - thanks!"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-04-30 09:02:49",
    "text": "Yeah, that field is a cleaned up, flatted array"
  },
  {
    "poster": {
      "poster_name": "Will Jaynes",
      "poster_handle": "will238"
    },
    "time_stamp": "2020-04-30 14:25:50",
    "text": "Hello, I am trying to get all properties with history for all deals, and I am getting a \"Request URI too long\" error because of the many many properties I have to include with &amp;propertiesWithHistory. Is there any way to work around this?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-05-01 05:43:12"
      }
    ]
  }
]
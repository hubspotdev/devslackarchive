[
  {
    "poster": {
      "poster_name": "Shubhangi Garg",
      "poster_handle": "shubhangi.garg"
    },
    "time_stamp": "2024-03-11 03:34:01",
    "text": "Any api to fetch the supported datatypes in HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Erik Kokalj",
      "poster_handle": "erik.kokalj4"
    },
    "time_stamp": "2024-03-11 03:44:44",
    "text": "<@U06NU8W9MFD> <https://developers.HubSpot.com/docs/api/crm/properties#property-type-and-fieldtype-values>"
  },
  {
    "poster": {
      "poster_name": "Shubhangi Garg",
      "poster_handle": "shubhangi.garg"
    },
    "time_stamp": "2024-03-11 04:27:09",
    "text": "Using <https://api.hubapi.com/crm/v3/properties/types> , it is showing an error on postman \"status\": \"error\",\n    \"message\": \"Unable to infer object type from: types\"",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-03-11 08:22:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Mikle",
      "poster_handle": "johnmikle0604"
    },
    "time_stamp": "2024-03-11 07:15:11",
    "text": "Include your HubSpot API key in the headers if you're using API key authentication.\nHmm, can you share the API code snipets?"
  },
  {
    "poster": {
      "poster_name": "Shubhangi Garg",
      "poster_handle": "shubhangi.garg"
    },
    "time_stamp": "2024-03-11 07:27:43",
    "text": "i have already used access token for authentication"
  },
  {
    "poster": {
      "poster_name": "Harun Kumar Siva",
      "poster_handle": "harun"
    },
    "time_stamp": "2024-03-11 08:22:27",
    "text": "you should use the object type like contact, deal etc.\ni.e to fetch property information for the Contact object, your API endpoint would be\n\n<https://api.hubapi.com/crm/v3/properties/contact>"
  },
  {
    "poster": {
      "poster_name": "Ty Sorensen",
      "poster_handle": "ty.sorensen"
    },
    "time_stamp": "2024-03-11 09:53:33",
    "text": "Morning. I am new to this workspace. I am working on some calculation properties and was curious and was hoping someone could direct me to the correct channel for a few questions."
  },
  {
    "poster": {
      "poster_name": "Shubhangi Garg",
      "poster_handle": "shubhangi.garg"
    },
    "time_stamp": "2024-03-11 11:41:54",
    "text": "hi,\n```public static void main(String[] args) {\n    String accessToken = \"\"; // Replace with your HubSpot access token\n    String apiUrl = \"<https://api.hubapi.com/contacts/v1/contact/batch>\";\n    int numContacts = 10; // Number of contacts to upload\n\n    try {\n        JSONArray contactsArray = new JSONArray();\n\n        // Generate sample contact data (replace with your data source)\n        for (int i = 0; i &lt; numContacts; i++) {\n            JSONObject contact = new JSONObject();\n            contact.put(\"email\", \"example\" + i + \"@example.com\");\n            contact.put(\"firstname\", \"John\" + i);\n            contact.put(\"lastname\", \"Doe\" + i);\n            // Add more fields as needed\n\n            contactsArray.put(contact);\n        }\n\n        // Create HTTP client\n        CloseableHttpClient client = HttpClients.createDefault();\n        HttpPost httpPost = new HttpPost(apiUrl);\n\n        // Set headers\n        httpPost.setHeader(HttpHeaders.CONTENT_TYPE, ContentType.APPLICATION_JSON.toString());\n        httpPost.setHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + accessToken);\n\n        // Set request body\n        StringEntity requestEntity = new StringEntity(contactsArray.toString(), ContentType.APPLICATION_JSON);\n        httpPost.setEntity(requestEntity);\n\n        // Execute the request\n        HttpResponse response = client.execute(httpPost);\n\n        // Process the response\n        BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));\n        StringBuilder result = new StringBuilder();\n        String line;\n        while ((line = rd.readLine()) != null) {\n            result.append(line);\n        }\n\n        // Print response\n        System.out.println(\"Response Code: \" + response.getStatusLine().getStatusCode());\n        System.out.println(\"Response Body: \" + result.toString());\n\n        // Close the client\n        client.close();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}```\nthis is how I am trying for bulk upload, but this code is importing email only. Pls let me knw what is incorrect in this.."
  }
]
[
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-05 06:49:44",
    "text": "```filemanager/api/v2/files```\n<@U013YLAQC0G> If you use this - maybe I can help you"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-05 09:09:10",
    "text": "Hi! I am not able to send form submissions using the API in PHP with v3. I can't find any documentation about it neither. Is anyone be able to help me with this?",
    "reply_count": 40,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-05 11:47:30"
      },
      {
        "time_stamp": "2020-10-05 19:00:47"
      },
      {
        "time_stamp": "2020-10-06 03:38:17"
      },
      {
        "time_stamp": "2020-10-06 03:38:33"
      },
      {
        "time_stamp": "2020-10-06 03:39:21"
      },
      {
        "time_stamp": "2020-10-06 03:39:58"
      },
      {
        "time_stamp": "2020-10-06 03:40:17"
      },
      {
        "time_stamp": "2020-10-06 03:40:41"
      },
      {
        "time_stamp": "2020-10-06 03:41:12"
      },
      {
        "time_stamp": "2020-10-06 03:43:02"
      },
      {
        "time_stamp": "2020-10-06 03:44:20"
      },
      {
        "time_stamp": "2020-10-06 03:44:25"
      },
      {
        "time_stamp": "2020-10-06 03:45:34"
      },
      {
        "time_stamp": "2020-10-06 03:45:49"
      },
      {
        "time_stamp": "2020-10-06 03:45:54"
      },
      {
        "time_stamp": "2020-10-06 03:46:25"
      },
      {
        "time_stamp": "2020-10-06 03:47:03"
      },
      {
        "time_stamp": "2020-10-06 03:48:05"
      },
      {
        "time_stamp": "2020-10-06 03:48:47"
      },
      {
        "time_stamp": "2020-10-06 03:50:24"
      },
      {
        "time_stamp": "2020-10-06 03:51:21"
      },
      {
        "time_stamp": "2020-10-06 03:54:12"
      },
      {
        "time_stamp": "2020-10-06 03:55:16"
      },
      {
        "time_stamp": "2020-10-06 03:56:45"
      },
      {
        "time_stamp": "2020-10-06 04:04:38"
      },
      {
        "time_stamp": "2020-10-06 04:05:25"
      },
      {
        "time_stamp": "2020-10-06 13:15:54"
      },
      {
        "time_stamp": "2020-10-06 13:16:26"
      },
      {
        "time_stamp": "2020-10-08 02:32:11"
      },
      {
        "time_stamp": "2020-10-08 02:32:30"
      },
      {
        "time_stamp": "2020-10-08 02:39:01"
      },
      {
        "time_stamp": "2020-10-08 02:40:46"
      },
      {
        "time_stamp": "2020-10-08 02:43:20"
      },
      {
        "time_stamp": "2020-10-08 02:45:33"
      },
      {
        "time_stamp": "2020-10-08 03:01:23"
      },
      {
        "time_stamp": "2020-10-08 03:02:30"
      },
      {
        "time_stamp": "2020-10-08 03:02:44"
      },
      {
        "time_stamp": "2020-10-08 03:03:02"
      },
      {
        "time_stamp": "2020-10-08 03:03:34"
      },
      {
        "time_stamp": "2020-10-08 18:57:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-10-05 11:47:30",
    "edited": {
      "time_stamp": "2020-10-05 11:48:05"
    },
    "text": "Can you drop your code in here?  :warning: *Make sure you remove any secrets/API keys!*"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:49:01",
    "text": "need more data on the payload coming back, can you try it using Postman or something first before doing more complex code? OAuth calls are VERY picky so you have to be sure everything lines up perfectly"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:50:27",
    "text": "Lambda is an impressively difficult to debug piece of infrastructure... first off I would recommend ensuring that you have your Lambda function is logging its behavior in the right way for its programming language (NodeJS here?)"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:52:02",
    "text": "I have never had an issue where a valid call to the deal making endpoint did not create a deal barring a HS code push or short outage, which I could manage by setting up retries on HTTP error codes where they are warranted, with logic to give up and log fatal error past a certain point for a catastrophic outage. So I would put the money on glitches in the Lambda code. If possible to test the code outside Lambda and add lots more detailed logging, that would be my first advice"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:52:46",
    "text": "The way this is current coded, it is not really clear that makePostRequest will log anything in case it explodes due to an exception or HTTP error, and will only log on success possibly"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:54:14",
    "text": "I have used it and it works great, but I did it server side. For AJAX CORS problem we would need to see the CORS details from Browser Dev Tools as that drama is only logged on client side. For serverless, we would need more debug logs, because that is not specific enough to comment. But sounds like possibly a MIME Content-Type issue with the logic doing the upload is one possibility"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:55:14",
    "text": "You have to dump out the payload returned for the failed request. It is impossible for us to debug from BadRequest only."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:55:55",
    "text": "Normally the API docs list scopes required for an endpoint to operate"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:56:33",
    "text": "PORTALID needs to be subbed out with your HubSpot Portal ID number, and KEY with your API key, otherwise, epic fail will result"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:58:11",
    "text": "I don't think that is going to work without manual dev work on your end, as HubSpot isn't going to support funny random SSOs"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 18:59:44",
    "text": "Potential untested hack: limit search to zero or one results per page, I have done this on other APIs to kludge through this use case."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 19:00:24",
    "text": "Are these tokens security sensitive? <@UD53A9UUR>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 19:00:47",
    "text": "Like Kieran said. More detail needed."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 19:01:27",
    "text": "Pipeline is not mandatory in my experience but can be important for it not to go off into la-la land depending on the setup of your instance"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-05 19:01:58",
    "text": "Probably have to use &gt;1 endpoint together"
  },
  {
    "poster": {
      "poster_name": "Neal Stansby",
      "poster_handle": "neal"
    },
    "time_stamp": "2020-10-05 21:12:37",
    "text": "Cool idea, but likely doesn't save much in the big picture.  Since we get a `total` value on the first API response, it implies that HS has spent the time to compute the full result set before sending the first page of records.  It does save a bit of time constructing response content and sending it, but likely minimal in the big picture."
  },
  {
    "poster": {
      "poster_name": "Caralyza",
      "poster_handle": "caralyza"
    },
    "time_stamp": "2020-10-05 22:05:55",
    "text": "Hi all i'm working on a bit of code and wanted to pull data from a HubSpot form to send externally.  Can someone confirm if this and my syntax is accurate? Much appreciated!\n\n```            var checked = $form.find('select[name=\"monthly_or_annual_pricing\"]').val();\n            var PB_code = getUrlParameter('product_code') + checked ;```"
  }
]
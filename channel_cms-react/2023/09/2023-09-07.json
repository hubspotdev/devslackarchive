[
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-07 09:07:47",
    "text": "yeah the ones you mentioned should be camelCase as well. can you elaborate on which default value keys specifically you’re referring to? things that aren’t directly props to the component may still be snake case"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-09-07 09:59:10",
    "text": "on `LinkField` for example:\n```default={{\n  url: {\n    type: 'EXTERNAL',\n    content_id: null,\n    href: '<https://foo.com>',\n  },\n  open_in_new_tab: true,\n  no_follow: false,\n  sponsored: false,\n  user_generated_content: false,\n}}```"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-07 10:01:31",
    "text": "gotcha. yeah the thought was since those are not directly props that they didn’t need to adapt to that. we do have fairly deep typescript definitions attached to our fields so if possible i’d recommend leveraging those at least in your IDE to have higher confidence around what’s expected where"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-07 10:02:29",
    "text": "in the process of looking into this i also realized that our documentation around field definitions in the examples repo isn’t really helpful for specific fields since it doesn’t evaluate out the snake case -&gt; camel case conversion, i’m looking into options to improve that as well"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-09-07 10:19:07",
    "text": "Ya, as i've gone i've realized that ts is the way to go!"
  }
]
[
  {
    "poster": {
      "poster_name": "Wezz Balk",
      "poster_handle": "wezz.balk"
    },
    "time_stamp": "2024-01-31 03:05:58",
    "text": "Hi everybody, I'm wondering if somebody has run into a similar issue as me regarding non-HubSpot forms tracking.\n\nWe just upgraded Optimizely from CMS 11 to CMS12, and in turn that also upgraded the built in Form builder in Optimizely CMS.\nNo other major changes has been done, it's still the same form and ID's / fields are the same.\nThe form in question submits through XHR (just like on the previous version).\n\nBut the submit event isn't triggering any submission to HubSpot like it used to.\n\nSince this the form is built in functionality in Optimizely CMS I can't really see what they've done different to stop HubSpot from tracking the submission.\n\nI'll link to the current non-working form and a version from <http://archive.org|archive.org> with the old version in a comment",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-01-31 03:08:45"
      },
      {
        "time_stamp": "2024-01-31 15:06:54"
      },
      {
        "time_stamp": "2024-01-31 15:07:13"
      },
      {
        "time_stamp": "2024-01-31 15:07:24"
      },
      {
        "time_stamp": "2024-01-31 19:29:20"
      },
      {
        "time_stamp": "2024-01-31 19:33:52"
      },
      {
        "time_stamp": "2024-01-31 19:53:25"
      },
      {
        "time_stamp": "2024-01-31 20:46:25"
      },
      {
        "time_stamp": "2024-02-06 10:15:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Wezz Balk",
      "poster_handle": "wezz.balk"
    },
    "time_stamp": "2024-01-31 03:08:45",
    "edited": {
      "time_stamp": "2024-01-31 20:10:02"
    },
    "text": "Current live form that's not being tracked:\n<https://com-prod.postnord.com/troubleshooting/get-in-touch/>\n\nThe older CMS11 form that worked:\n<https://web.archive.org/web/20230608051926/https://www.postnord.com/get-in-touch/>\n\nI can see that our tracking script is loading and that in turns load collectedforms.js which I guess is the form handling script.\n\nForm also receives the attribute `data-hs-cf-bound=\"true\"`  which to my eyes seems HubSpot related as well"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-01-31 05:56:11",
    "text": "Hey everyone, does anyone know why this simple code doesn’t work on HubSpot CTAs\n```domReady(() =&gt; {\n\tlet aTags = document.querySelectorAll('a');\n\taTags.forEach(aTag =&gt; {\n\t\tconsole.log(aTag);\n\t\taTag.addEventListener('click', (e) =&gt; {\n\t\t\te.preventDefault();\n\t\t\tconsole.log('here');\n\t\t});\n\t});\n});```\nIt stops you from being able to click any ordinary a tag, but the CTAs still navigate away\n\nI want to stop people clicking the button in some circumstances but this doesn’t seem to let me stop them at all",
    "reply_count": 27,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2024-01-31 15:02:17"
      },
      {
        "time_stamp": "2024-02-01 00:36:07"
      },
      {
        "time_stamp": "2024-02-01 02:50:49"
      },
      {
        "time_stamp": "2024-02-01 02:52:02"
      },
      {
        "time_stamp": "2024-02-01 02:55:23"
      },
      {
        "time_stamp": "2024-02-01 02:55:39"
      },
      {
        "time_stamp": "2024-02-01 02:58:58"
      },
      {
        "time_stamp": "2024-02-01 22:30:38"
      },
      {
        "time_stamp": "2024-02-01 23:30:56"
      },
      {
        "time_stamp": "2024-02-02 07:06:04"
      },
      {
        "time_stamp": "2024-02-02 07:06:26"
      },
      {
        "time_stamp": "2024-02-02 08:28:03"
      },
      {
        "time_stamp": "2024-02-02 08:34:02"
      },
      {
        "time_stamp": "2024-02-02 08:35:44"
      },
      {
        "time_stamp": "2024-02-02 08:36:26"
      },
      {
        "time_stamp": "2024-02-02 09:09:59"
      },
      {
        "time_stamp": "2024-02-02 09:10:15"
      },
      {
        "time_stamp": "2024-02-02 09:21:30"
      },
      {
        "time_stamp": "2024-02-02 09:22:01"
      },
      {
        "time_stamp": "2024-02-02 09:24:39"
      },
      {
        "time_stamp": "2024-02-02 09:30:06"
      },
      {
        "time_stamp": "2024-09-10 09:22:35"
      },
      {
        "time_stamp": "2024-09-11 02:22:24"
      },
      {
        "time_stamp": "2024-09-11 02:24:25"
      },
      {
        "time_stamp": "2024-09-11 02:24:31"
      },
      {
        "time_stamp": "2024-09-11 02:26:12"
      },
      {
        "time_stamp": "2024-09-11 02:50:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2024-01-31 11:09:55",
    "text": "I’d recommend adding an eventListener on the field that is being updated by the user - to detect when the user changes the value. And then include your logic within the listener’s callback.\n\nMulti-select fields, if I’m not mistaken are formatted: “value1;value2” - each value being separated by semicolons.\n\nNot sure if the code you’ve shared is incomplete, but you’ll also need to make sure you set the user’s selected value as a variable and then append the one you’re trying to insert programmatically to it. For example:\n\n```    var hiddenField = $form.find('input[name=\"my_property\"]');\n    var currentValue = hiddenField.val(); // Get the current value of the input field\n    var newValue = \"additional_value\"; // The value you want to append\n    hiddenField.val(currentValue + newValue).change(); ```\n"
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2024-01-31 11:11:18",
    "text": "Currently, your code is executing as soon as the form loads on the page. So anything the user does between loading and submitting will overwrite any values you set in the code."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-01-31 15:02:17",
    "text": "the ctas are likely overriding the default link behavior\n\nwhat is the use case for this? Why do you want to show someone a link and not allow them to click on it?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-01-31 15:06:54",
    "text": "This looks like a normal HubSpot form that is embedded in the page. It doesnt’ look like a non HubSpot form."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-01-31 15:07:13",
    "text": "I just submitted it with email <mailto:nicholas@deckerdevs.com|nicholas@deckerdevs.com> — do you not see that in your crm?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-01-31 15:07:24",
    "text": "there are no script errors or anything"
  },
  {
    "poster": {
      "poster_name": "Wezz Balk",
      "poster_handle": "wezz.balk"
    },
    "time_stamp": "2024-01-31 19:29:20",
    "text": "Crap, then the site owner switched out the form to a HubSpot form between me posting and you seeing the page"
  },
  {
    "poster": {
      "poster_name": "Wezz Balk",
      "poster_handle": "wezz.balk"
    },
    "time_stamp": "2024-01-31 19:33:52",
    "text": "I took an earlier copy of the page and moved it here\n<https://com-prod.postnord.com/troubleshooting/get-in-touch/>"
  },
  {
    "poster": {
      "poster_name": "Wezz Balk",
      "poster_handle": "wezz.balk"
    },
    "time_stamp": "2024-01-31 19:53:25",
    "text": "After some testing I can see that the latest Optimizely forms disable tracking the submit event.\nBut they do offer their own event bindings to catch a form submission.\n\nDoes anybody know how to trigger the HubSpot script react to a submission?"
  },
  {
    "poster": {
      "poster_name": "Wezz Balk",
      "poster_handle": "wezz.balk"
    },
    "time_stamp": "2024-01-31 20:46:25",
    "text": "Something like this\n```$$epiforms(\".EPiServerForms\").on(\"formsSubmitted\", (event) =&gt; {\nevent.target.dispatchEvent(new CustomEvent(\"HubSpotsubmit\", { details: event }))\n})```"
  },
  {
    "poster": {
      "poster_name": "Wezz Balk",
      "poster_handle": "wezz.balk"
    },
    "time_stamp": "2024-02-01 00:36:07",
    "text": "`e.stopPropagation()` should stop any other event bindings to fire.\nIf they haven't been fired before your event that is."
  }
]
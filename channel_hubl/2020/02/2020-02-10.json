[
  {
    "poster": {
      "poster_name": "geoff",
      "poster_handle": "geoffroy"
    },
    "time_stamp": "2020-02-10 04:34:08",
    "text": "I’m running into the same issue too."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2020-02-10 06:59:36",
    "text": "I can take a look this afternoon"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 08:07:59",
    "text": "It's in page source context menu in the browser"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:18:34",
    "text": "thanks i see it now"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:18:51",
    "text": "unfortunately it doesn't provide anything helpful..."
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:19:28",
    "text": "it shows the total render time as 4367ms, but the breakdowns don't add up"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 15:19:45",
    "text": "<@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:19:47",
    "text": "the detials just have InterpreterGetResrouce times"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:20:02",
    "edited": {
      "time_stamp": "2020-02-10 15:21:07"
    },
    "text": "they're all 1 or 2ms, with the exception of one is 15 ms"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2020-02-10 15:20:02",
    "text": "Link to page?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:20:20",
    "text": "<http://HubSpot-developers-g7st39-6514425.hs-sites.com/p1?hsDebug=true>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2020-02-10 15:25:53",
    "text": "cc <@U6TBZ66FN>"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2020-02-10 15:29:15",
    "text": "We are not able counting all the time of each individual stuff (some are nested in hubl) for the details. The total should be accurate."
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:32:13",
    "edited": {
      "time_stamp": "2020-02-10 15:33:43"
    },
    "text": "'''&lt;!--\n  __          __\n /\\ \\        /\\ \\\n \\_\\ \\     _\\ \\ \\___  __  __     __\n /'_` \\  /'`\\ \\ '__`\\/\\ \\/\\ \\  /'_ `\\\n/\\ \\L\\ \\/\\  __/\\ \\ \\L\\ \\ \\ \\_\\ \\/\\ \\L\\ \\\n\\ \\__,\\ \\___\\\\ \\,/\\ \\___/\\ \\___ \\\n \\/_, /\\/___/ \\//  \\//  \\/__L\\ \\\n                                   /\\____/\n                                   \\_/__/\n\nTemplate Errors:\n\nRequest Timing Breakdown:\nTotal Request Time: 4389 ms.\nview_resolver: 13 ms. {\n\tcom.HubSpot.content.rendering.view.mapper.UrlMappingViewMapper$$EnhancerByGuice$$40ed383c: 1 ms.\n\tcom.HubSpot.content.rendering.view.mapper.PortalDomainSlugContentViewMapper$$EnhancerByGuice$$ca00b986: 11 ms. {\n\t\tgetContentBestMatchingRequestedDomain: 5 ms.\n\t\tcontentViewFactory.create: 6 ms. {\n\t\t\tbuild_template_context: 1 ms.\n\t\t\tcontentTemplateService.getForContent: 3 ms.\n\t\t}\n\t}\n}\n\nrender: 4367 ms. {\n\tInterpreterGetResource:S3A/SIP/SIP 009/Pages/SF3 Page.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/Pages/SIP Page.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP SDK-v009.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/Configs/config.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/Configs/sf3_config.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/Configs/squatch_config.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/debug.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/declare.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/defaults.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/dm.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/log.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/method.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/metrics.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/modules.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/mutation.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/new.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/options.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/page.html: 15 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/query.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/render.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/styles.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/transform.html: 2 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/utils.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/SDK/views.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/Extensions/Block Libraries/SF3/sf3.html: 1 ms.\n\tmodule (sip_options): 3 ms.\n\tmodule (sip_styles2): 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/Extensions/Block Libraries/SF3/Features/Feature 1.html: 1 ms.\n\tInterpreterGetResource:S3A/SIP/SIP 009/Extensions/Renderers/renderer.html: 2 ms.\n}\npost_process_view: 4 ms. {\n\tgetCacheHeaders: 1 ms.\n}\n--&gt;'''"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 15:34:35",
    "text": "it says render time:  4367 ms, but the details of it 47ms"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-02-10 19:11:21",
    "text": "<@UMSSR1J3U> I’m going to look at this some more. I also noticed that this page started timing out over the weekend, but it looks like you fixed it. Do you recall what the problem was?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 19:21:15",
    "text": "hi jeff thanks for looking into this further.  i had to disable some of the logic, but without doing a lot of trial and error it will be hard to figure out for sure where my issue is"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 19:22:04",
    "text": "if i was able to get a \"real time\" timestamp, i could easily profile my hubl macros and determine quickly where the issue is... i don't guess there is any undocumented way to do this?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 19:24:18",
    "text": "i can easily cause it to time out again would u like for me to change the page back to the full timeout?  the way it renders now demonstrates the issue but its only rendering 10 \"blocks\" ... if i up it to 20 it will timeout"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-02-10 19:48:08",
    "text": "`{{ local_dt }}` doesn’t help you?"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-02-10 19:48:41",
    "text": "or even\n```{{ local_dt|unixtimestamp }}```\n"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-02-10 19:49:31",
    "text": "I guess that’s always the same value per render"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-02-10 19:51:41",
    "text": "oh yeah, you can use\n```{{ unixtimestamp() }}```\n"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:06:38",
    "text": "oh great i'll try that thank you!"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:07:53",
    "text": "i think i tried that and it always returned the same value no matter where it was called in the page creation but maybe i'm getting it confused with local_dt"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:12:57",
    "text": "i remember now"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:13:08",
    "text": "it gives a compiler error if i don't give it a parameter"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:13:12",
    "text": "it wants a datetime object"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:13:29",
    "text": "so i put in local_dt but that always gave me same value"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:13:40",
    "text": "i initially tried it with no params because your documentation says it will use \"now\""
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:13:44",
    "text": "but i get this error"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:13:45",
    "text": "[ERROR] Error validating template.\n[ERROR] line 71: Parameters for function 'unixtimestamp' do not match"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:15:58",
    "text": "the documentation says \"by default it will return the timestamp of now\""
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:16:00",
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#unixtimestamp>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:19:12",
    "text": "it doesnt need an object"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:19:27",
    "text": "it returns now"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:23:41",
    "text": "thats what the documentation says, but when i try it i get this compiler error and it won't save the page"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:23:46",
    "text": "ERROR] Error validating template.\n[ERROR] line 71: Parameters for function 'unixtimestamp' do not match"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:23:56",
    "text": "that is when i do NOT provide a parameter"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:25:16",
    "edited": {
      "time_stamp": "2020-02-10 20:25:28"
    },
    "text": "`{{ unixtimestamp() }}`"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:25:36",
    "text": "gives me this error..."
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:25:50",
    "text": "`[ERROR] Error validating template.\n[ERROR] line 71: Parameters for function 'unixtimestamp' do not match`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:25:54",
    "text": "show the code?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:26:04",
    "text": "or that section?"
  },
  {
    "text": "",
    "time_stamp": "2020-02-10 20:26:45"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:27:05",
    "text": "your using partials?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:27:27",
    "text": "this is in the main page.html"
  },
  {
    "text": "",
    "time_stamp": "2020-02-10 20:27:40"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:27:53",
    "text": "works fine if i pass it local_dt"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:28:08",
    "text": "but obviously that does not give me \"now\" now"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:28:10",
    "text": "have you tried adding the time stamp outside of the `{% block %}"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:28:16",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:28:21",
    "text": "it doesn't work anywhere"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:28:40",
    "text": "hmm."
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:29:38",
    "text": "does it work for u?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:31:15",
    "text": "i think i might have found a workaround!"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:31:21",
    "text": "if i pass it none it compiles"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:31:31",
    "text": "interesting."
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:31:32",
    "text": "now let me see if it's truly a realtime"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:31:40",
    "text": "what about an empty string?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:31:54",
    "text": "either way great!"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-10 20:32:14",
    "edited": {
      "time_stamp": "2020-02-10 20:32:18"
    },
    "text": "there might be an issue that Jeff needs to look into"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:32:22",
    "text": "YES!"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:33:01",
    "text": "thanks guys i can't tell you how much i appreciate your help on this!"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-02-10 20:34:02",
    "text": "`{{ unixtimestamp(none) }}` did the trick!"
  }
]
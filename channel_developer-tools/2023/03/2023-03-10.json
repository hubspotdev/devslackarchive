[
  {
    "text": "HELLO there, I'm wondering if there is a method to include the &lt;i&gt; element in the HTML file of the HubSpot form (as shown in the screenshot) to enable me to insert generic business icons into the form's fields. Thank you in advance!",
    "time_stamp": "2023-03-10 15:14:33",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-03-10 15:23:19"
      },
      {
        "time_stamp": "2023-03-10 17:14:28"
      },
      {
        "time_stamp": "2023-03-10 17:16:52"
      },
      {
        "time_stamp": "2023-03-10 17:17:18"
      },
      {
        "time_stamp": "2023-03-10 17:18:07"
      },
      {
        "time_stamp": "2023-03-10 17:20:28"
      },
      {
        "time_stamp": "2023-03-10 17:21:34"
      },
      {
        "time_stamp": "2023-03-10 17:22:00"
      },
      {
        "time_stamp": "2023-03-15 09:01:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-03-10 15:23:19",
    "text": "To the best of my knowledge, you’re pretty stuck with the markup that HubSpot gives you. Fortunately, it’s (mostly) pretty good markup, so you do have quite a bit of flexibility to implement this in different ways.\n\nFor this use case, I’d suggest doing this the 2013 way — you can base64 encode the icon and use it as a background image, then use a combination of `background-positioning` and padding to orient it correctly.\n\nThis does mean that the icon won’t be revealed to assistive technology, but that’s okay, so long as you’re not hiding or removing the input labels that would indicate its purpose."
  },
  {
    "poster": {
      "poster_name": "Kam Jin",
      "poster_handle": "kam.jin"
    },
    "time_stamp": "2023-03-10 17:14:28",
    "text": "Thanks for the assist <@U04AQA0QM8E>, what if I want each field in the form to have its specific icon, would your method still be applicable?"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-03-10 17:16:52",
    "text": "I don’t think you’d be able to do so arbitrarily, but common input types (name, email, phone number, address, etc) _are_ assigned classes that you’d be able to target.\n\nSo, you’d be able to have an email icon for an email input field, and a person for a name input. But, you wouldn’t be able to assign a unique icon to a generic input field."
  },
  {
    "poster": {
      "poster_name": "Kam Jin",
      "poster_handle": "kam.jin"
    },
    "time_stamp": "2023-03-10 17:17:18",
    "text": "That's why I am pursuing the access to the HTML file of HS form so that I can add &lt;i&gt; element within different &lt;div class=\"input\"&gt;&lt;/div&gt;"
  },
  {
    "poster": {
      "poster_name": "Kam Jin",
      "poster_handle": "kam.jin"
    },
    "time_stamp": "2023-03-10 17:18:07",
    "edited": {
      "time_stamp": "2023-03-10 17:18:19"
    },
    "text": "Unfortunatelly, HS doesn't open the access to their form HTML."
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-03-10 17:20:28",
    "text": "If this design element is non-negotiable, you could theoretically target the placeholder attribute of a given input to assign its styling. Something like:\n```input[placeholder=\"foo\"] {\n  background-image: url('...');\n}```"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-03-10 17:21:34",
    "text": "It’s not necessarily the most robust approach, but I’m pretty sure it’d work in a pinch."
  },
  {
    "poster": {
      "poster_name": "Kam Jin",
      "poster_handle": "kam.jin"
    },
    "time_stamp": "2023-03-10 17:22:00",
    "text": "Oh cool!  That's something I will definitely have a try :)"
  },
  {
    "poster": {
      "poster_name": "Ben Marshall",
      "poster_handle": "bmarshall"
    },
    "time_stamp": "2023-03-10 17:49:09",
    "edited": {
      "time_stamp": "2023-03-10 17:52:53"
    },
    "text": "Hi there, new to the space but have an idea.\n\nOur company has a lot of duplicate Companies being created from new email domains that enter the system via webforms (in many cases these domains are different versions of a core domain (<http://att.com|att.com> &amp; <http://mobile.att.com|mobile.att.com>)\n\nNot too long ago HubSpot released the ability to add multiple domains on an account making it possible to have many domain versions on one Company record. This is helpful but makes it so we have to routinely go through duplicate Companies the system makes, add the new domain to the original record, then merge.\n\nIf HubSpot offered a service where they would append all known domains to Company records, all inbounds would route correctly the first time. This has to be a shared problem among many HubSpot users, so I'm sure others would pay for this service like our company would.\n\nHas anyone experienced this and come up with a good solution? One thing to note is we are integrated with SalesForce so the native Company dedup feature HubSpot provides is unavailable.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-03-10 19:45:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-10 19:45:05",
    "text": "<https://HubSpotdev.slack.com/archives/C26E7JT8V/p1678495745770189>"
  }
]
[
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-11-01 01:35:08",
    "text": "Is there anyone who can help me with this? I'm still experiencing issues with the data disappearing from `hublParameters`"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-01 07:23:54",
    "text": "in the cases where the value is not coming across in `hublParameters` ... is it also not available in the HubL context?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-01 07:24:09",
    "edited": {
      "time_stamp": "2023-11-01 07:24:51"
    },
    "text": "i.e if you rendered something like\n\n```<pre>\n    {{ content.translated_content | tojson }}\n  </pre>```\nin the template above where you are passing to the module - does that also not have the value?"
  },
  {
    "text": "I rendered it inside a div instead, and it's not empty.",
    "time_stamp": "2023-11-01 07:29:05"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-01 07:31:36",
    "text": "interesting, if you view the page with `hsDebug=true` does the issue persist (the missing hubl param)?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-01 07:32:06",
    "text": "Also would you mind DMing a link to the page ?"
  },
  {
    "poster": {
      "poster_name": "Ulrika Alm",
      "poster_handle": "ulrika.alm"
    },
    "time_stamp": "2023-11-01 07:33:39",
    "text": "`hsDebug=true` is not helping, will DM you a link"
  },
  {
    "poster": {
      "poster_name": "Jon Dean",
      "poster_handle": "jond"
    },
    "time_stamp": "2023-11-01 08:50:43",
    "edited": {
      "time_stamp": "2023-11-01 08:56:48"
    },
    "text": "Has anyone successfully used ReactPlayer in a module? <https://github.com/cookpete/react-player>\n\nI've tried just using the most basic test and just get errors.\n\nFor reference, this is my index.jsx\n```import React from 'react';\nimport ReactPlayer from 'react-player';\n\nexport { meta } from './meta.jsx';\nexport { fields } from './fields.jsx';\n\nexport const Component = () => {\n  return (\n    <div>\n      <ReactPlayer url='<https://www.youtube.com/watch?v=LXb3EKWsInQ>' />\n    </div>\n  );\n};```\npackage.json\n```{\n  \"name\": \"HubSpot-react-modules-app\",\n  \"version\": \"0.1.0\",\n  \"type\": \"module\",\n  \"dependencies\": {\n    \"@HubSpot/cms-components\": \"latest\",\n    \"prop-types\": \"^15.8.1\",\n    \"react\": \"^18.1.0\",\n    \"react-native-button\": \"^3.1.0\",\n    \"react-player\": \"^2.13.0\"\n  },\n  \"devDependencies\": {\n    \"@HubSpot/cms-dev-server\": \"^0.6.3\",\n    \"@testing-library/react\": \"^13.4.0\",\n    \"@vitejs/plugin-react\": \"^2.1.0\",\n    \"jsdom\": \"^20.0.1\",\n    \"react-player\": \"^2.13.0\",\n    \"vitest\": \"^0.24.3\"\n  },\n  \"scripts\": {\n    \"start\": \"hs-cms-dev-server .\",\n    \"test\": \"vitest\"\n  }\n}```\n",
    "reply_count": 10,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-11-01 08:57:27"
      },
      {
        "time_stamp": "2023-11-01 09:00:54"
      },
      {
        "time_stamp": "2023-11-01 09:01:31"
      },
      {
        "time_stamp": "2023-11-01 09:02:41"
      },
      {
        "time_stamp": "2023-11-01 09:24:47"
      },
      {
        "time_stamp": "2023-11-01 09:26:25"
      },
      {
        "time_stamp": "2023-11-01 09:27:20"
      },
      {
        "time_stamp": "2023-11-01 09:40:17"
      },
      {
        "time_stamp": "2023-11-01 09:41:36"
      },
      {
        "time_stamp": "2023-11-01 09:42:47"
      }
    ]
  },
  {
    "text": "Error message:",
    "time_stamp": "2023-11-01 08:57:27"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-01 09:00:54",
    "text": "that sounds to me like potentially the `ReactPlayer` import doesn’t work as advertised with ES modules"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-01 09:01:31",
    "edited": {
      "time_stamp": "2023-11-01 09:01:41"
    },
    "text": "could you try a `logInfo` of what `ReactPlayer` is? you may need to `import { ReactPlayer }`  instead"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-01 09:02:41",
    "text": "or potentially `import { default as ReactPlayer }`"
  },
  {
    "poster": {
      "poster_name": "Mattis Rosenkranz",
      "poster_handle": "m.rosenkranz"
    },
    "time_stamp": "2023-11-01 09:08:48",
    "text": "Thank you. I would actually like to do something like this:\n```type Props = {\n    fieldValues: {\n        alignment: AlignmentFieldValue;\n        image: ImageFieldValue;\n    };\n};\n\nexport const Component: (props: Props) =&gt; React.ReactElement = (props) =&gt; {\n    return &lt;&gt;&lt;/&gt;;\n};```\nBut I don’t think these types exist. So I will have to find them out myself and write them down manually (or create own types).\n```type Props = {\n    fieldValues: {\n        alignment: {\n            horizontal_align?: 'LEFT' | 'CENTER' | 'RIGHT';\n            vertical_align?: 'TOP' | 'MIDDLE' | 'BOTTOM';\n        };\n        image: {\n            src: string;\n            alt?: string;\n            width?: number;\n            height?: number;\n            max_width?: number;\n            max_height?: number;\n            size_type?: 'auto' | 'auto_custom_max' | 'auto_full_width' | 'exact';\n            loading?: 'disabled' | 'eager' | 'lazy';\n        };\n    };\n};\n\nexport const Component: (props: Props) =&gt; React.ReactElement = (props) =&gt; {\n    return &lt;&gt;&lt;/&gt;;\n};```\nOften but not always you can extract them from the defaults of the field types"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-01 09:24:47",
    "text": "I have used <https://www.npmjs.com/package/react-youtube> successfully"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-01 09:26:25",
    "edited": {
      "time_stamp": "2023-11-01 09:31:50"
    },
    "text": "I use it in an island\n\n```// YouTubePlayerIsland\n\nimport { Stack, Link, Divider } from '@mui/material';\nimport { useRef } from 'react';\nimport YouTube from 'react-youtube';\n\nimport styles from './styles.module.css';\n\nconst OPENING_STATEMENT = 'Opening Statement';\n\nexport default function YouTubePlayerIsland({ startTimes }) {\n  const player = useRef();\n\n  const openingStatementStartTime =\n    startTimes.find((time) => {\n      return time.question === OPENING_STATEMENT;\n    }) || 0;\n\n  const handleQuestion = (startTime, event) => {\n    event.preventDefault();\n    player.current.internalPlayer.seekTo(startTime);\n    return false;\n  };\n\n  const setOpeningStartTimeOnReady = (event) => {\n    event.target.seekTo(openingStatementStartTime.start_time);\n  };\n\n  return (\n    <>\n      <YouTube\n        ref={player}\n        videoId={`T0ylrqsE_jM`}\n        onReady={setOpeningStartTimeOnReady}\n        iframeClassName={styles.youTubeIframe}\n      />\n      <Stack spacing={2} divider={<Divider orientation=\"vertical\" flexItem />}>\n        {startTimes.map((startTime) => {\n          return (\n            <Link\n              key={startTime.start_time}\n              href=\"#\"\n              onClick={handleQuestion.bind(null, startTime.start_time)}\n            >\n              {startTime.question}\n            </Link>\n          );\n        })}\n      </Stack>\n    </>\n  );\n}```"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-01 09:27:20",
    "text": "```import { Island } from '@HubSpot/cms-components';import YouTubePlayerIsland from './YouTubePlayerIsland?island';\n\n...\n\n&lt;Island\n                  module={YouTubePlayerIsland}\n                  startTimes={candidateNightQuestions}\n                /&gt;```"
  },
  {
    "poster": {
      "poster_name": "Jon Dean",
      "poster_handle": "jond"
    },
    "time_stamp": "2023-11-01 09:40:17",
    "text": "<@UAYBXDG4U> - That YouTube player looks good, but I'm looking at the ReactPlayer as it allows videos from multiple services (YT, Vimeo, or just an mp4 from the HS Files system) :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon Dean",
      "poster_handle": "jond"
    },
    "time_stamp": "2023-11-01 09:41:36",
    "text": "<@U04DVL5T2TE> - Tried both `import { ReactPlayer }` and `import { default as ReactPlayer }` with no joy, still the same error message."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-01 09:42:47",
    "text": "hmm ok i’d suggest logging out whatever `ReactPlayer` is for the default import then and see if there’s some other shape there - something is being imported that isn’t a react component"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-11-01 11:43:20",
    "text": "Hey folks, wondering if there's been any progress on handling CTAs and HSvideos?",
    "reply_count": 11,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-11-04 12:50:36"
      },
      {
        "time_stamp": "2023-11-04 13:11:29"
      },
      {
        "time_stamp": "2023-11-05 13:26:04"
      },
      {
        "time_stamp": "2023-11-06 06:51:30"
      },
      {
        "time_stamp": "2023-11-06 10:12:25"
      },
      {
        "time_stamp": "2023-11-06 10:14:56"
      },
      {
        "time_stamp": "2023-11-06 10:15:53"
      },
      {
        "time_stamp": "2023-11-06 10:18:07"
      },
      {
        "time_stamp": "2023-11-06 10:26:00"
      },
      {
        "time_stamp": "2023-11-06 11:36:39"
      },
      {
        "time_stamp": "2024-06-10 21:43:13"
      }
    ]
  }
]
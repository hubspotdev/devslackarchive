[
  {
    "poster": {
      "poster_name": "Martel Vincent",
      "poster_handle": "honeycrop88"
    },
    "time_stamp": "2025-02-21 05:08:24",
    "text": "Hello everyone!\nAs a senior web developer, I am confident in web development.\nI specialize in JavaScript Frameworks like React, Vue.js, Next and Angualr.\nFor backend Laravel, Node.js and FastApi.\nCurrently I am focusing in Blockchain development.\nI want to work with you.\nPlease touch me!!!!"
  },
  {
    "poster": {
      "poster_name": "Leandro Michelena",
      "poster_handle": "leandro.michelena"
    },
    "time_stamp": "2025-02-21 08:31:36",
    "text": "Hi Bianca! We're looking for a solution for a problem similar to yours. Did you have any insights since your original post here? Any direction is appreciated :smile: Thanks!"
  },
  {
    "poster": {
      "poster_name": "Seth Burnett",
      "poster_handle": "seth108"
    },
    "time_stamp": "2025-02-21 11:09:57",
    "text": "Hey all!\n\nDoes anyone know if files uploaded via a field property in a form stay available indefinitely or do they have a shelf life and expire/are removed after a period of time?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2025-02-21 13:44:30"
      },
      {
        "time_stamp": "2025-02-21 14:57:23"
      }
    ]
  },
  {
    "subtype": "bot_message",
    "text": ":sparkles:Slack Tips and Best Practices:sparkles:\n\nTo get the most out the HubSpot Developer Slack, follow these best practices:\n\n• Will your post/question potentially help more than one person? Ask in a public channel instead of 1:1 DMs to help as many folks as possible. \n• Thread all replies to keep topics organized and searchable\n• Thread followup questions/comments to your original post\n• Don't post the same question in multiple channels. If you must, link to your original question in new channels.\nMore <https://slack.com/blog/collaboration/etiquette-tips-in-slack|great tips here>. Thanks for making the HubSpot Developer Slack easier to use for everyone!",
    "username": "Slack Best Practices",
    "time_stamp": "2025-02-21 12:05:01",
    "edited": {
      "time_stamp": "2025-02-21 12:05:02"
    }
  },
  {
    "poster": {
      "poster_name": "Bianca",
      "poster_handle": "bianca"
    },
    "time_stamp": "2025-02-21 12:46:11",
    "text": "Hi <@U07EHBPLGLA>! Unfortunately I've had no response on this subject in any of the threads I've tried. I'll keep you in mind if I find something, please keep me in yours!"
  },
  {
    "poster": {
      "poster_name": "Leandro Michelena",
      "poster_handle": "leandro.michelena"
    },
    "time_stamp": "2025-02-21 12:51:58",
    "text": "Thanks, Bianca. We plan on trying some API calls to change templates of website pages on bulk.\nWe created several themes (copied from a master theme), but that had a side-effect of creating too many duplicated files, and eventually our account reached a limit of how many files can be saved.\nI'll keep you posted if we figure this one out."
  },
  {
    "poster": {
      "poster_name": "Bianca",
      "poster_handle": "bianca"
    },
    "time_stamp": "2025-02-21 12:54:33",
    "text": "How many templates are you creating to max out your account? :sweat_smile: If these templates require modules, keep in mind that changing the template will not change the origin of the modules, so you'll be facing my issue exactly :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Leandro Michelena",
      "poster_handle": "leandro.michelena"
    },
    "time_stamp": "2025-02-21 13:04:29",
    "text": "We had 70 custom themes! haha\nWe're re-organizing to use templates instead"
  },
  {
    "poster": {
      "poster_name": "Leandro Michelena",
      "poster_handle": "leandro.michelena"
    },
    "time_stamp": "2025-02-21 13:06:55",
    "text": "The challenge will be to reassign the duplicated themes to point to a central theme and from there pick a template. Hopefully can be scripted."
  },
  {
    "poster": {
      "poster_name": "Matthew James",
      "poster_handle": "matthew929"
    },
    "time_stamp": "2025-02-21 13:16:10",
    "text": "where can i direct this message i sent above to get a response and a fix for a bug with HubSpot\n<https://HubSpotdev.slack.com/archives/C22PU4LV8/p1740086335549969>"
  },
  {
    "poster": {
      "poster_name": "Sarah Ganote",
      "poster_handle": "sganote"
    },
    "time_stamp": "2025-02-21 13:44:30",
    "text": "Hello, files uploaded via a field property should remain in the file manager indefinitely unless someone manually deletes them.\n\nIf the file was uploaded exclusively within a form submission record and the form is deleted that could potentially result in the file being removed. I'd recommend testing this!"
  },
  {
    "poster": {
      "poster_name": "Seth Burnett",
      "poster_handle": "seth108"
    },
    "time_stamp": "2025-02-21 14:57:23",
    "text": "Thank you. That's a good point about the form being deleted. But...I would think that since I created the field/property separately from the form itself removing the form shouldn't change the value of the property.\n\nI should test though."
  },
  {
    "poster": {
      "poster_name": "Kyle Brackman",
      "poster_handle": "kyle.brackman"
    },
    "time_stamp": "2025-02-21 15:08:44",
    "text": "Does anyone know if it's possible to download unpublished quotes, either through the UI or through the API?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2025-02-21 15:56:23"
      },
      {
        "time_stamp": "2025-02-23 18:36:13"
      },
      {
        "time_stamp": "2025-02-23 20:58:19"
      },
      {
        "time_stamp": "2025-02-24 08:29:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Collin Schindler",
      "poster_handle": "collin_schindler"
    },
    "time_stamp": "2025-02-21 15:56:23",
    "edited": {
      "time_stamp": "2025-02-21 16:02:16"
    },
    "text": "I don't see a download button in the UI, but you could run a query against the Quotes API endpoint that can get you all of that data.\n\nUsing the search endpoint `crm/v3/objects/quotes/search` (documentation - <https://developers.HubSpot.com/docs/reference/api/crm/commerce/quotes#search|Quotes - v3 | HubSpot API>) you can send a POST request with some filters in your JSON body to pair your search down to all the entries you are looking for. Your search body would look something like this:\n```{\n    \"filterGroups\": [\n        {\n            \"filters\": [\n                {\n                    \"propertyName\": \"hs_status\",\n                    \"operator\": \"EQ\",\n                    \"value\": \"DRAFT\"\n                }\n            ]\n        }\n    ]\n}\n\nhs_status - status/state of the quote\noperator - how you are trying to match your search to the data\n     Most likely you'll use one of the following, but there are a lot of options: \n        - NEQ is 'Not Equal To'\n        - EQ is 'Equal To'\nvalue - the value you are trying to match on```\nYou can find all the available values to match on here: <https://developers.HubSpot.com/docs/guides/api/crm/commerce/quotes#update-quote-state|CRM API | Quotes | HubSpot>\n\nHope this helps get you what you need!"
  },
  {
    "text": "Hi everyone.\n\nI'm trying code-snip for chatbot. pasting the sample code-snip from <https://developers.HubSpot.com/docs/guides/api/conversations/working-with-chatbots/code-snippets#available-libraries>, I got an error `Error: Cannot find module 'request' Require stack: - /var/task/Template.js - /var/task/HubSpotHandler.js - /var/runtime/index.mjs` in the log. Did I miss something?\n\n```const request = require('request');\n\nexports.main = (event, callback) =&gt; {\n  request('<http://time.jsontest.com/>', function (error, response, body) {\n    const responseJson = {\n      botMessage: 'The current time in GMT is ' + JSON.parse(body).time,\n      responseExpected: false,\n    };\n\n    callback(responseJson);\n  });\n};```",
    "time_stamp": "2025-02-21 21:46:50",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2025-02-21 22:44:25"
      }
    ]
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2025-02-21 22:44:25",
    "text": "It seems that's a node.js version problem. It works for Node v18.x."
  }
]
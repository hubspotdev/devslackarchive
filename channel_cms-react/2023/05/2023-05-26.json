[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 07:19:06",
    "text": "there's probably a more efficient way of doing this but I will say I do enjoy the little breaks every time I have to deploy"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:24:24",
    "text": "not sure why this hasn't come up before but can I not console.log from a component that I import into another component?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-05-26 08:34:22"
      },
      {
        "time_stamp": "2023-05-26 08:37:13"
      },
      {
        "time_stamp": "2023-05-26 08:39:09"
      },
      {
        "time_stamp": "2023-05-26 08:39:55"
      },
      {
        "time_stamp": "2023-05-26 08:41:05"
      },
      {
        "time_stamp": "2023-05-26 08:41:10"
      },
      {
        "time_stamp": "2023-05-26 08:46:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:34:22",
    "edited": {
      "time_stamp": "2023-05-26 08:34:36"
    },
    "text": "this appears to be something else / something I am unfamiliar with in react?\n```&lt;a href={() =&gt; convertDescriptionToUrl(result.description)}...```\ncan't console.log in this function"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 08:35:55",
    "text": "to make sure i’m reading you right - you’re using the `<http://hslocal.net|hslocal.net>` proxy for a page, making a serverless endpoint request from the client side with an island, and that request is hitting cors errors?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:37:09",
    "text": "yea, but I was using .localhost:3000, let me try with <http://hslocal.net|hslocal.net>"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 08:37:13",
    "text": "right now you’re passing a function to `href` which expects a string - is it possible you want just to pass\n```&lt;a href={convertDescriptionToUrl(result.description)}...```"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 08:37:23",
    "edited": {
      "time_stamp": "2023-05-26 08:37:28"
    },
    "text": "my guess is it’ll be the same"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 08:39:09",
    "text": "that would invoke convertDescriptionToUrl immediately in the render (hopefully) returning a URL for the link"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 08:39:55",
    "text": "that won’t wait for a user click to run, however"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:41:05",
    "text": "that make sense, I think I was just confused, I want it to return a string before the user clicks"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:41:10",
    "text": "trying now"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:45:43",
    "text": "yea, both throw CORS"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:45:53",
    "text": "is there a possible fix for that?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 08:46:16",
    "text": "thanks, yea, I was just mixed up and so used to running the function when the user clicks that I didn't think"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-05-26 08:51:55",
    "text": ":thinking_face: …"
  },
  null,
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 09:34:38",
    "text": "is there a \"custom behavior event\" hook in the works? Imagine how cool that would be",
    "reply_count": 51,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-05-26 12:06:54"
      },
      {
        "time_stamp": "2023-05-26 12:07:06"
      },
      {
        "time_stamp": "2023-05-26 12:07:42"
      },
      {
        "time_stamp": "2023-05-26 12:07:59"
      },
      {
        "time_stamp": "2023-05-26 12:08:06"
      },
      {
        "time_stamp": "2023-05-26 12:09:03"
      },
      {
        "time_stamp": "2023-05-26 12:09:28"
      },
      {
        "time_stamp": "2023-05-26 12:09:59"
      },
      {
        "time_stamp": "2023-05-26 12:10:03"
      },
      {
        "time_stamp": "2023-05-26 12:10:17"
      },
      {
        "time_stamp": "2023-05-26 12:11:26"
      },
      {
        "time_stamp": "2023-05-26 12:11:38"
      },
      {
        "time_stamp": "2023-05-26 12:11:40"
      },
      {
        "time_stamp": "2023-05-26 12:12:12"
      },
      {
        "time_stamp": "2023-05-26 12:13:19"
      },
      {
        "time_stamp": "2023-05-26 12:13:33"
      },
      {
        "time_stamp": "2023-05-26 12:13:52"
      },
      {
        "time_stamp": "2023-05-26 12:14:12"
      },
      {
        "time_stamp": "2023-05-26 12:15:49"
      },
      {
        "time_stamp": "2023-05-26 12:16:13"
      },
      {
        "time_stamp": "2023-05-26 12:16:56"
      },
      {
        "time_stamp": "2023-05-26 12:17:31"
      },
      {
        "time_stamp": "2023-05-26 12:17:49"
      },
      {
        "time_stamp": "2023-05-26 12:17:52"
      },
      {
        "time_stamp": "2023-05-26 12:18:26"
      },
      {
        "time_stamp": "2023-05-26 12:18:32"
      },
      {
        "time_stamp": "2023-05-26 12:19:00"
      },
      {
        "time_stamp": "2023-05-26 12:20:06"
      },
      {
        "time_stamp": "2023-05-26 12:21:03"
      },
      {
        "time_stamp": "2023-05-26 12:22:51"
      },
      {
        "time_stamp": "2023-05-26 12:23:06"
      },
      {
        "time_stamp": "2023-05-26 12:23:41"
      },
      {
        "time_stamp": "2023-05-26 12:24:00"
      },
      {
        "time_stamp": "2023-05-26 12:24:50"
      },
      {
        "time_stamp": "2023-05-26 12:26:12"
      },
      {
        "time_stamp": "2023-05-26 12:33:48"
      },
      {
        "time_stamp": "2023-05-26 12:33:57"
      },
      {
        "time_stamp": "2023-05-26 12:34:28"
      },
      {
        "time_stamp": "2023-12-22 09:11:11"
      },
      {
        "time_stamp": "2023-12-22 09:12:43"
      },
      {
        "time_stamp": "2023-12-22 09:24:41"
      },
      {
        "time_stamp": "2023-12-22 09:25:46"
      },
      {
        "time_stamp": "2023-12-22 09:28:34"
      },
      {
        "time_stamp": "2023-12-22 09:29:03"
      },
      {
        "time_stamp": "2023-12-22 09:29:24"
      },
      {
        "time_stamp": "2023-12-22 09:29:26"
      },
      {
        "time_stamp": "2023-12-22 09:36:24"
      },
      {
        "time_stamp": "2023-12-22 09:37:30"
      },
      {
        "time_stamp": "2023-12-22 09:37:41"
      },
      {
        "time_stamp": "2023-12-22 09:38:09"
      },
      {
        "time_stamp": "2023-12-22 09:38:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 09:37:23",
    "text": "or even anything that might help me get info so that I can send along all the info? For example, it looks like I need the `utk` to identify the user. Do I have access to that in a js-module?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-05-26 09:48:11",
    "text": "Ah, there is a fix and it already works in some cases (but I/we just realized it).\n\nIs your serverless function currently a GET or POST (or other?)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 09:48:50",
    "text": "I make a POST to it"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-05-26 09:51:12",
    "text": "Ok. So right now you can do GETs to the `/_hcms/api/&lt;func path&gt;?portalid=&lt;id&gt;` (if you are on a proxy domain like `&lt;domain&gt;.hslocal:3000`) and it will work. In other words our dev server will proxy the serverless function GET to the right place if you fetch a relative path.\n\nBut we need to make a change for that to work for POST. :construction_worker: …"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 09:51:37",
    "text": "ok, cool, glad that will work eventually"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 11:39:07",
    "text": "I'm having some trouble importing `@react-spring/web`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 11:41:58",
    "text": "this appears to be the relevant part of the error:\n```(node:152) Warning: To load an ES module, set \"type\": \"module\" in the package.json or use the .mjs extension.```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 11:52:21",
    "text": "tried to replace with `react-countup` and I'm getting:\n```[ERROR] Building JS Project with error message `[resolve-modules] Unexpected token 'export'```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 11:52:37",
    "edited": {
      "time_stamp": "2023-05-26 12:06:52"
    },
    "text": "~is this a bug or are only certain kinds of imports allowed?~",
    "reply_count": 17,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-05-26 11:59:54"
      },
      {
        "time_stamp": "2023-05-26 12:00:53"
      },
      {
        "time_stamp": "2023-05-26 12:01:11"
      },
      {
        "time_stamp": "2023-05-26 12:02:41"
      },
      {
        "time_stamp": "2023-05-26 12:02:59"
      },
      {
        "time_stamp": "2023-05-26 12:03:02"
      },
      {
        "time_stamp": "2023-05-26 12:03:05"
      },
      {
        "time_stamp": "2023-05-26 12:03:20"
      },
      {
        "time_stamp": "2023-05-26 12:03:32"
      },
      {
        "time_stamp": "2023-05-26 12:04:16"
      },
      {
        "time_stamp": "2023-05-26 12:04:35"
      },
      {
        "time_stamp": "2023-05-26 12:04:48"
      },
      {
        "time_stamp": "2023-05-26 12:05:16"
      },
      {
        "time_stamp": "2023-05-26 12:05:32"
      },
      {
        "time_stamp": "2023-05-26 12:05:56"
      },
      {
        "time_stamp": "2023-05-26 12:06:02"
      },
      {
        "time_stamp": "2023-05-26 12:06:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 11:59:54",
    "text": "other people have reported this so it looks like it's a version issue with something breaking"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:00:53",
    "text": "other people reported this for `react-spring`?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:01:11",
    "text": "no, just for react-countup"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:02:41",
    "text": "<@U04DVL5T2TE> github issues around react-spring too"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:02:59",
    "text": "I'll be sure to check that first before posting here"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:03:02",
    "text": "my bad"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:03:05",
    "text": "yeah it looks like react-spring’s ESM bundles aren’t well set up"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:03:20",
    "text": "no problem - the good news is that the part that’s failing on our end is actually not the main build of the project"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:03:32",
    "text": "and we have changes in progress to eliminate the issue here"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:04:16",
    "text": "so despite their setup not being ideal for ES modules it should work once we get those changes in"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:04:35",
    "text": "awesome, for now, I was hoping to find an easy \"count animation\" component but looks like I'll have to try to build something instead"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:04:48",
    "text": "probably with framer-motion but that feels like overkill"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:05:16",
    "text": "there’s a chance those changes could get in today/early next week so i wouldn’t go too far down that path if you can wait that long"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:05:32",
    "text": "ok, good to know"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:05:56",
    "text": "do you know if anything is in progress around \"custom behavior events\"?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:06:02",
    "text": "a hook for that would be really helpful"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:06:17",
    "text": "oh yeah let me thread off your original message - i was going to ask for more details"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:06:54",
    "text": "ah i see these are HubSpot analytics events?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:07:06",
    "text": "yea"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:07:42",
    "text": "from what I can tell, I can run them from the serverless function"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:07:59",
    "text": "but the context.contact.vid property isn't making it through in that case"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:08:06",
    "text": "and that also feels like overkill"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:09:03",
    "text": "yeah agreed"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:09:28",
    "text": "was the previous way to set this up exclusively the chrome extension described here? <https://knowledge.HubSpot.com/analytics-tools/create-codeless-custom-behavioral-events>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:09:59",
    "text": "I remember creating JS versions at some point. let me go look at old code"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:10:03",
    "text": "brb"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:10:17",
    "text": ":thank-you: it’s possible that you might be able to reuse the same JS code here"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:11:26",
    "text": "```  let _hsq = (window._hsq = window._hsq || []);\n  const trackEvent = (clickedTerm, isInitial) =&gt; {\n    let eventName = isInitial ? \"XXXXXXXXXXX_initial_glossary_term_loaded\" : \"XXXXXXXXXXX_clicked_term\";\n    _hsq.push([\n      \"trackCustomBehavioralEvent\",\n      {\n        name: eventName,\n        properties: {\n          term_name: clickedTerm,\n          hs_app_version: \"1.0.0\",\n        },\n      },\n    ]);\n  };```"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:11:38",
    "text": "looks like it depends on _hsq being available"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:11:40",
    "text": "is it?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:12:12",
    "text": "yeah it should be within an island. to be safe i’d have that whole snippet inside the click handler or whatever user action handler"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:13:19",
    "text": "we could probably provide a better API here in the future but that should work today"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:13:33",
    "text": "ok, cool, i'll get that a shot"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:13:52",
    "text": "but yea, imagine just passing in the name of the property + value"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:14:12",
    "text": "yup and maybe guarding against using in situations that wouldn’t work"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:15:49",
    "text": "I kind of want to use it inside of a useEffect"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:16:13",
    "text": "I have `useAfterIslandHydration` already"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:16:56",
    "text": "that should also work but one thing about `useEffect` is it could get called potentially more often than you’d expect"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:17:31",
    "text": "yea...I can protect against some of it (based on what I'm currently doing)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:17:49",
    "text": "I have a searchTerm property that I want to add as a dependency"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:17:52",
    "text": "and then run when that changes"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:18:26",
    "text": "is there a reason you couldn’t put it in the `onChange` or whatever event handler prop in your search input component?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:18:32",
    "edited": {
      "time_stamp": "2023-05-26 12:18:43"
    },
    "text": "then you know it’s only running based on a user action"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:19:00",
    "text": "yea, I think I can do that, let me see.."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:20:06",
    "text": "a sort of related piece from the newer react docs around `useEffect`: <https://react.dev/learn/you-might-not-need-an-effect#notifying-parent-components-about-state-changes>"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:21:03",
    "text": "this might apply as well to the search logic generally <https://react.dev/learn/you-might-not-need-an-effect#sending-a-post-request>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:22:51",
    "text": "thanks, that's helpful + will read in more depth"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:23:06",
    "text": "I think in my case the searchTerm is initially passed in as a prop so useEffect is ok there"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:23:41",
    "text": "and then when I update the offset it runs again (which I'm less sure is correct but does work)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:24:00",
    "text": "I'll definitely read more, I have a lot to learn"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-26 12:24:50",
    "text": ":themoreyouknow: don’t mean to distract from your original question too much - let me know if the custom event ends up working out"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:26:12",
    "text": "will do"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:33:48",
    "text": "<@U04DVL5T2TE> yup, that works! it's a bit weird that the user isn't showing up \"Unknown user\""
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:33:57",
    "text": "might be because the page is archived + published"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 12:34:28",
    "text": "I'll see if it picks up other people but in any case, that's not a js-module issue"
  },
  {
    "poster": {
      "poster_name": "Charles Boamah",
      "poster_handle": "cboamah"
    },
    "time_stamp": "2023-05-26 13:12:55",
    "text": ":loudspeaker: *Attention Beta Testers! Documentation Update*\n\nHey there, beta testers! We have a quick announcement to make. The documentation for this beta has been relocated to GitHub, combining both the documentation and code in one central location for enhanced readability.\n\n\n:books: *New Documentation Location: <https://github.com/HubSpot/cms-js-building-block-examples|CMS-JS-BUILDING-BLOCK-EXAMPLES>*\n\n\n:hammer_and_pick: *New Examples:* We’ve also added several new example projects that cover topics like 3rd party dependency integrations, styling, using Islands, querying for data in GraphQL, Storybook integrations, and much more.\n\n\n :ear_with_hearing_aid: *As always, we appreciate your continued support and welcome any feedback about the new documentation or beta. Thank you!*"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-05-26 13:27:24",
    "edited": {
      "time_stamp": "2023-05-26 13:27:31"
    },
    "text": ":boom:, fix created and package released.\n\nSo if you update the dev server npm package to 0.6.8 your serverless POSTs to <http://hslocal.net:3000|hslocal.net:3000> will correctly proxy through without any CORs needed"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-26 13:58:39",
    "text": "Amazing! Thank you :racing_car: "
  }
]
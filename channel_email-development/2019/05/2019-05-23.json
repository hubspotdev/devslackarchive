[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-23 04:33:10",
    "edited": {
      "time_stamp": "2019-05-23 04:33:21"
    },
    "text": "I think they have a form of it, but you should know true heatmapping can't be done in emails. They can only track clicks",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-05-23 05:16:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-23 05:16:10",
    "text": "I thought the same actually. Just wanted to check to be 100% sure!"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-23 05:19:27",
    "edited": {
      "time_stamp": "2019-05-23 05:22:49"
    },
    "text": "Not sure if this is of value to anyone but wanted to share how I created trackable CTAs with custom button HTML -\n\nFirst thing you need is a Macro. I created one in a folder called Partials called macro_cta_url.html\n\nIt contains this -\n\n```{#\n====================================================\nUSE THIS AT THE TOP OF ANY TEMPLATE THAT USES A BUTTON \nSO YOU CAN PASS THROUGH A FULL TRACKABLE URL -\n{% import 'Email/Partials/cta_id_macro.html' as cta_id %}\n\nTHE HREF VALUE SHOULD LOOK LIKE THIS -\n&lt;a href=\"{{ cta_id.id('{{ module.name_of_module_field }}') }}\"&gt;\n====================================================\n#}\n\n{% macro id(cta_id) %}\n<https://cta-image-cms2.HubSpot.com/ctas/v2/public/cs/ci/?pg={{> cta_id }}&amp;pid=YOUR_HubSpot_ID&amp;ecid={{encrypted_contact_id}}&amp;hseid={{email_campaign_id}}&amp;hsic={{impersonated_contact}}\n{% endmacro %}```\n\nSimply create a CTA field in the module that has a custom button and update the href link so if your CTA field is called cta_10percentoff then your link will be -\n\n```&lt;a href=\"{{ cta_id.id('{{ module.cta_10percentoff }}') }}\"&gt;```\n\nMaking sure you have this line at the top of the module -\n\n```{% import 'Email/Partials/cta_id_macro.html' as cta_id %}```\n\nObviously change the path to wherever you saved this file.\n\nFinally, if you have more than one CTA in a module then this will support that, just update the url variable to the correct CTA variable name -\n\n```&lt;a href=\"{{ cta_id.id('{{ module.cta_10percentoff }}') }}\"&gt;\n\n&lt;a href=\"{{ cta_id.id('{{ module.cta_halfpricesale }}') }}\"&gt;```"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-23 22:57:07",
    "edited": {
      "time_stamp": "2019-05-23 23:25:54"
    },
    "text": "Hey <@U26AKMZ19> Is there any way to remove the junk code in an email like this as well as prevent inlining?\n\n```&lt;!--  The  backgroundTable table manages the color of the background and then the templateTable maintains the body of \n        the email template, including preheader &amp; footer. This is the only table you set the width of to, everything else is set to \n        100% and in the CSS above. Having the width here within the table is just a small win for Lotus Notes. --&gt;\n\n        &lt;!-- Begin backgroundTable --&gt;  \n        &lt;table align=\"center\" bgcolor=\"#ffffff\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" height=\"100%\" width=\"100%\" id=\"backgroundTable\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt; border-collapse:collapse !important; background-color:#ffffff; font-family:Geneva, Verdana, Arial, Helvetica, sans-serif; height:100% !important; margin:0; padding:0; width:100% !important\"&gt;\n            &lt;tbody&gt;&lt;tr&gt;\n                &lt;td align=\"center\" valign=\"top\" id=\"bodyCell\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt; height:100% !important; margin:0; padding:0; width:100% !important\" height=\"100%\" width=\"100%\"&gt; &lt;!-- When nesting tables within a TD, align center keeps it well, centered. --&gt;\n                    &lt;!-- Begin Template Container --&gt;\n                    &lt;!-- This holds everything together in a nice container --&gt;\n                    &lt;table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"templateTable\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt; border-collapse:collapse !important; width:680px; background-color:#ffffff; -webkit-font-smoothing:antialiased\" width=\"680\" bgcolor=\"#ffffff\"&gt;\n                        &lt;tbody&gt;&lt;tr&gt;\n                            &lt;td align=\"center\" valign=\"top\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt\"&gt;\n                                &lt;!-- Begin Template Preheader --&gt;\n                                &lt;div class=\"header-container-wrapper\"&gt;\n&lt;/div&gt;&lt;table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" id=\"headerTable\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt; background-color:#ffffff; color:#252422; font-family:Geneva, Verdana, Arial, Helvetica, sans-serif; font-size:10px; line-height:120%; text-align:right; border-collapse:separate !important; padding-right:0px\" bgcolor=\"#ffffff\" align=\"right\"&gt;\n                                    &lt;tbody&gt;&lt;tr&gt;\n&lt;td align=\"left\" valign=\"top\" class=\"bodyContent\" width=\"100%\" colspan=\"12\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt; color:#252422; font-family:Geneva, Verdana, Arial, Helvetica, sans-serif; font-size:16px; line-height:150%; text-align:left\"&gt;\n&lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" class=\"templateColumnWrapper\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt; border-collapse:collapse !important\"&gt;\n            &lt;tbody&gt;&lt;tr&gt;\n&lt;td valign=\"top\" colspan=\"12\" width=\"100.0%\" class=\" column\" style=\"-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; mso-table-lspace:0pt; mso-table-rspace:0pt; width:100.0%; text-align:left; padding:0; font-family:Geneva, Verdana, Arial, Helvetica, sans-serif; font-size:16px; line-height:1.5em; color:#252422\" align=\"left\"&gt;```",
    "reply_count": 139,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-05-23 23:48:40"
      },
      {
        "time_stamp": "2019-05-24 06:37:47"
      },
      {
        "time_stamp": "2019-05-24 06:42:21"
      },
      {
        "time_stamp": "2019-05-24 06:45:05"
      },
      {
        "time_stamp": "2019-05-24 06:45:26"
      },
      {
        "time_stamp": "2019-05-24 06:45:30"
      },
      {
        "time_stamp": "2019-05-24 06:45:55"
      },
      {
        "time_stamp": "2019-05-24 06:45:59"
      },
      {
        "time_stamp": "2019-05-24 06:46:10"
      },
      {
        "time_stamp": "2019-05-24 06:46:24"
      },
      {
        "time_stamp": "2019-05-24 06:46:39"
      },
      {
        "time_stamp": "2019-05-24 06:46:51"
      },
      {
        "time_stamp": "2019-05-24 06:46:57"
      },
      {
        "time_stamp": "2019-05-24 06:47:09"
      },
      {
        "time_stamp": "2019-05-24 06:47:21"
      },
      {
        "time_stamp": "2019-05-24 06:47:29"
      },
      {
        "time_stamp": "2019-05-24 06:47:34"
      },
      {
        "time_stamp": "2019-05-24 06:48:04"
      },
      {
        "time_stamp": "2019-05-24 06:48:33"
      },
      {
        "time_stamp": "2019-05-24 06:48:42"
      },
      {
        "time_stamp": "2019-05-24 06:48:52"
      },
      {
        "time_stamp": "2019-05-24 06:49:35"
      },
      {
        "time_stamp": "2019-05-24 06:49:38"
      },
      {
        "time_stamp": "2019-05-24 06:49:50"
      },
      {
        "time_stamp": "2019-05-24 06:50:01"
      },
      {
        "time_stamp": "2019-05-24 06:50:06"
      },
      {
        "time_stamp": "2019-05-24 06:50:11"
      },
      {
        "time_stamp": "2019-05-24 06:50:21"
      },
      {
        "time_stamp": "2019-05-24 06:50:28"
      },
      {
        "time_stamp": "2019-05-24 06:50:31"
      },
      {
        "time_stamp": "2019-05-24 06:51:37"
      },
      {
        "time_stamp": "2019-05-24 06:52:08"
      },
      {
        "time_stamp": "2019-05-24 06:52:22"
      },
      {
        "time_stamp": "2019-05-24 06:52:40"
      },
      {
        "time_stamp": "2019-05-24 06:52:44"
      },
      {
        "time_stamp": "2019-05-24 06:53:18"
      },
      {
        "time_stamp": "2019-05-24 06:53:29"
      },
      {
        "time_stamp": "2019-05-24 06:54:06"
      },
      {
        "time_stamp": "2019-05-24 06:54:34"
      },
      {
        "time_stamp": "2019-05-24 06:54:53"
      },
      {
        "time_stamp": "2019-05-24 06:57:08"
      },
      {
        "time_stamp": "2019-05-24 06:57:47"
      },
      {
        "time_stamp": "2019-05-24 06:58:35"
      },
      {
        "time_stamp": "2019-05-24 06:59:50"
      },
      {
        "time_stamp": "2019-05-24 07:00:45"
      },
      {
        "time_stamp": "2019-05-24 07:01:02"
      },
      {
        "time_stamp": "2019-05-24 07:01:41"
      },
      {
        "time_stamp": "2019-05-24 07:02:50"
      },
      {
        "time_stamp": "2019-05-24 07:03:52"
      },
      {
        "time_stamp": "2019-05-24 07:04:02"
      },
      {
        "time_stamp": "2019-05-24 07:04:54"
      },
      {
        "time_stamp": "2019-05-24 07:05:10"
      },
      {
        "time_stamp": "2019-05-24 07:05:33"
      },
      {
        "time_stamp": "2019-05-24 07:06:55"
      },
      {
        "time_stamp": "2019-05-24 07:07:30"
      },
      {
        "time_stamp": "2019-05-24 07:07:40"
      },
      {
        "time_stamp": "2019-05-24 07:07:51"
      },
      {
        "time_stamp": "2019-05-24 07:08:27"
      },
      {
        "time_stamp": "2019-05-24 07:08:37"
      },
      {
        "time_stamp": "2019-05-24 07:08:45"
      },
      {
        "time_stamp": "2019-05-24 07:09:22"
      },
      {
        "time_stamp": "2019-05-24 07:10:37"
      },
      {
        "time_stamp": "2019-05-24 07:10:47"
      },
      {
        "time_stamp": "2019-05-24 07:11:19"
      },
      {
        "time_stamp": "2019-05-24 07:11:53"
      },
      {
        "time_stamp": "2019-05-24 07:12:22"
      },
      {
        "time_stamp": "2019-05-24 07:13:28"
      },
      {
        "time_stamp": "2019-05-24 07:13:49"
      },
      {
        "time_stamp": "2019-05-24 07:14:02"
      },
      {
        "time_stamp": "2019-05-24 07:14:35"
      },
      {
        "time_stamp": "2019-05-24 07:14:41"
      },
      {
        "time_stamp": "2019-05-24 07:15:06"
      },
      {
        "time_stamp": "2019-05-24 07:15:27"
      },
      {
        "time_stamp": "2019-05-24 07:15:56"
      },
      {
        "time_stamp": "2019-05-24 07:16:27"
      },
      {
        "time_stamp": "2019-05-24 07:17:28"
      },
      {
        "time_stamp": "2019-05-24 07:17:49"
      },
      {
        "time_stamp": "2019-05-24 07:18:02"
      },
      {
        "time_stamp": "2019-05-24 07:18:15"
      },
      {
        "time_stamp": "2019-05-24 07:18:30"
      },
      {
        "time_stamp": "2019-05-24 07:18:33"
      },
      {
        "time_stamp": "2019-05-24 07:18:38"
      },
      {
        "time_stamp": "2019-05-24 07:18:57"
      },
      {
        "time_stamp": "2019-05-24 07:19:00"
      },
      {
        "time_stamp": "2019-05-24 07:19:34"
      },
      {
        "time_stamp": "2019-05-24 07:20:12"
      },
      {
        "time_stamp": "2019-05-24 07:21:21"
      },
      {
        "time_stamp": "2019-05-24 07:21:48"
      },
      {
        "time_stamp": "2019-05-24 07:22:21"
      },
      {
        "time_stamp": "2019-05-24 07:29:05"
      },
      {
        "time_stamp": "2019-05-24 07:29:34"
      },
      {
        "time_stamp": "2019-05-24 07:31:47"
      },
      {
        "time_stamp": "2019-05-24 07:32:03"
      },
      {
        "time_stamp": "2019-05-24 07:33:19"
      },
      {
        "time_stamp": "2019-05-24 07:33:21"
      },
      {
        "time_stamp": "2019-05-24 07:34:04"
      },
      {
        "time_stamp": "2019-05-24 07:35:34"
      },
      {
        "time_stamp": "2019-05-24 07:36:00"
      },
      {
        "time_stamp": "2019-05-24 07:37:45"
      },
      {
        "time_stamp": "2019-05-24 07:38:17"
      },
      {
        "time_stamp": "2019-05-24 07:40:58"
      },
      {
        "time_stamp": "2019-05-24 07:42:17"
      },
      {
        "time_stamp": "2019-05-24 07:42:17"
      },
      {
        "time_stamp": "2019-05-24 07:42:58"
      },
      {
        "time_stamp": "2019-05-24 07:43:31"
      },
      {
        "time_stamp": "2019-05-24 07:43:32"
      },
      {
        "time_stamp": "2019-05-24 07:45:04"
      },
      {
        "time_stamp": "2019-05-24 07:47:18"
      },
      {
        "time_stamp": "2019-05-24 07:47:25"
      },
      {
        "time_stamp": "2019-05-24 07:47:51"
      },
      {
        "time_stamp": "2019-05-24 07:48:04"
      },
      {
        "time_stamp": "2019-05-24 07:48:22"
      },
      {
        "time_stamp": "2019-05-24 07:49:12"
      },
      {
        "time_stamp": "2019-05-24 07:51:05"
      },
      {
        "time_stamp": "2019-05-24 07:51:26"
      },
      {
        "time_stamp": "2019-05-24 07:52:27"
      },
      {
        "time_stamp": "2019-05-24 07:52:54"
      },
      {
        "time_stamp": "2019-05-24 07:52:59"
      },
      {
        "time_stamp": "2019-05-24 07:53:03"
      },
      {
        "time_stamp": "2019-05-24 07:53:07"
      },
      {
        "time_stamp": "2019-05-24 07:53:20"
      },
      {
        "time_stamp": "2019-05-24 07:53:24"
      },
      {
        "time_stamp": "2019-05-24 07:53:35"
      },
      {
        "time_stamp": "2019-05-24 07:53:46"
      },
      {
        "time_stamp": "2019-05-24 07:53:47"
      },
      {
        "time_stamp": "2019-05-24 07:53:58"
      },
      {
        "time_stamp": "2019-05-24 07:54:09"
      },
      {
        "time_stamp": "2019-05-24 07:54:41"
      },
      {
        "time_stamp": "2019-05-24 07:55:01"
      },
      {
        "time_stamp": "2019-05-24 07:55:14"
      },
      {
        "time_stamp": "2019-05-24 07:57:27"
      },
      {
        "time_stamp": "2019-05-24 07:58:06"
      },
      {
        "time_stamp": "2019-05-25 18:06:05"
      },
      {
        "time_stamp": "2019-05-25 18:06:56"
      },
      {
        "time_stamp": "2019-05-25 18:07:17"
      },
      {
        "time_stamp": "2019-05-25 18:07:35"
      },
      {
        "time_stamp": "2019-05-25 18:11:48"
      },
      {
        "time_stamp": "2019-05-25 18:13:09"
      },
      {
        "time_stamp": "2019-05-25 18:17:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-23 23:48:40",
    "text": "<@U26AKMZ19> For some reason, HubSpot sees fit to add loads of uneccessary divs and tables which I didn't ask for!\n\nIs there a setting to switch this off and simply render exactly what I added to the module and whatever CSS I put in the head?\n\nAlso I don't want HubSpot to inline at all."
  }
]
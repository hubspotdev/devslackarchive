[
  {
    "poster": {
      "poster_name": "Peter Smith",
      "poster_handle": "user842001s"
    },
    "time_stamp": "2023-12-11 02:13:03",
    "text": "Hello team, I am working on the HubSpot Oauth integrations for our customers. We had created our OAuth App for 9 months (local, beta, staging and production) and they worked perfectly so far.\n\nBut today, when we did a Oauth login to our HubSpot account, we get this error message:\n```Couldn't complete the connection\nThe redirect_uri doesn't match the client registered redirect_uri. Please contact the app developer.```\n• We did not change any configuration/settings\n• We just get this problem in beta, the other environments are working good. (They are also in same HubSpot Developer account)\nAnyone knows who should I contact in HubSpot to resolve this problem?"
  },
  {
    "poster": {
      "poster_name": "Harris D",
      "poster_handle": "harris.douglas"
    },
    "time_stamp": "2023-12-11 03:23:29",
    "text": "Hey all - does anybody know if when using the custom code workflow actions, if I were to make a call to an external API it comes from a static IP or a dynamic IP?\nThe developer of a platform we want to connect with is requesting the IPs to whitelist but I cannot find this info anywhere. From what I gather AWS Lambda is used to run the serverless function but without knowing HubSpot's internal Lambda set up it's hard to know how it's configured. Thanks in advance!"
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2023-12-11 07:08:30",
    "text": "Our company has APIs for products and lines used by companies that lease with us. None of this data will be in HubSpot or connected through CRM."
  },
  {
    "poster": {
      "poster_name": "Afia Ahmed",
      "poster_handle": "aahmed"
    },
    "time_stamp": "2023-12-11 07:35:02",
    "text": "Hi All - New to the chat - will be working on a system integration with HubSpot and just wanted to introduce myself , Please to be a part of the HubSpot Community !"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:46:08",
    "text": "Well the reason I ask is if you need to protect those apis and don't want anyone to use them then you'll need to wrap them in a serverless function to fetch the data and pass it to the page"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:46:29",
    "text": "<https://developers.HubSpot.com/docs/cms/data/serverless-functions>"
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2023-12-11 07:49:30",
    "text": "They're open APIs so it's fine for the front end to fetch them. I  need dynamic URLs to not respond with 404 without having HubDB or CRM like .... <http://website.com/line/12354/product/12345|website.com/line/12354/product/12345>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:52:37",
    "text": "Well yeah that's kinda the tricky part, HubSpot needs to know that there will be a page there, and without the data (hubdb or object) to tell it for sure that there is a page there it's pretty much impossible to set something like that up on HubSpot"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:53:11",
    "text": "so I would suggest hitting your apis and getting a list of all the ids"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:53:20",
    "text": "and then storing those in the HubDB"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:53:53",
    "text": "then use this hubdb for just the page id and still use the apis for the actual data"
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2023-12-11 07:54:14",
    "text": "Yeah I can setup a script to make hubdb for the first level. The problem is the 2nd level is millions of items that are constantly being altered so I think that will have to be handled by query parameters or something."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:54:16",
    "text": "Update the HubDB either periodically or every time a new id is added"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:54:47",
    "text": "yeah query parameters are definitely a great way to do it"
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2023-12-11 07:55:07",
    "text": "Thanks for the help. I was moving in this direction but needed someone to sanity check that I wasn't missing something."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-11 07:59:30",
    "text": "np bro"
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2023-12-11 08:03:25",
    "text": "And as a fallback the 404 page can still render the correct content if it isn't in HubDB until that id is added in the next incremental update."
  },
  {
    "poster": {
      "poster_name": "Tae Kim",
      "poster_handle": "takim"
    },
    "time_stamp": "2023-12-11 08:41:29",
    "text": ":rocket: *[Log Tracing for UI Extensions in Public Beta]*\n\nHi all - it's official! We've just launched the <https://developers.HubSpot.com/changelog/log-tracing-for-ui-extension-development|Log Tracing feature> for UI extensions with private apps. Customers can now connect all front-end React logs and back-end serverless function logs with a single Trace ID and view the full log trace in the '*Log Traces'* tab in the CRM Development page. We've also added the *'Extensions'* and '*Serverless functions'* tabs for customers to view comprehensive React and serverless log statements, copy the Trace ID, and open the relevant log trace. Please refer to the <https://developers.HubSpot.com/changelog/log-tracing-for-ui-extension-development|Changelog announcement> to learn more.\n\nWe'll continue to provide more impactful observability features for customers, so please stay tuned!\n\n*Changelog announcement:* <https://developers.HubSpot.com/changelog/log-tracing-for-ui-extension-development>"
  },
  {
    "poster": {
      "poster_name": "Daniel Raskin",
      "poster_handle": "draskin"
    },
    "time_stamp": "2023-12-11 16:55:40",
    "text": "Is there a recommended pattern for how HubSpot users should manage tracking members that have engaged in marketing activities such as events, webinars, advertisements, etc. It seems like lists is the best way to do this, but now users can also track this via forms. As we work with HubSpot customers we are trying to identify the recommended pattern here. The use case is my company is doing online and offline marketing activities and I want to easily track who has enrolled in these activities. I want to access this information via api. Thoughts? Recommendations? Documentation on a recommended pattern?",
    "reply_count": 8,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-12-11 20:47:25"
      },
      {
        "time_stamp": "2023-12-12 10:58:38"
      },
      {
        "time_stamp": "2023-12-12 14:50:04"
      },
      {
        "time_stamp": "2023-12-14 11:37:47"
      },
      {
        "time_stamp": "2023-12-19 13:45:08"
      },
      {
        "time_stamp": "2023-12-19 13:45:38"
      },
      {
        "time_stamp": "2023-12-20 09:01:27"
      },
      {
        "time_stamp": "2023-12-20 12:17:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jonathan Bredo",
      "poster_handle": "jonathan355"
    },
    "time_stamp": "2023-12-11 20:47:25",
    "text": "<https://HubSpotdev.slack.com/archives/C22PU4LV8/p1701112562925599|https://HubSpotdev.slack.com/archives/C22PU4LV8/p1701112562925599>\n\nI asked a few weeks ago, didn’t find the solution I wanted unfortunately"
  },
  {
    "poster": {
      "poster_name": "Maria Baez",
      "poster_handle": "customer842001"
    },
    "time_stamp": "2023-12-11 22:01:18",
    "text": "Hello everyone,\nIs it possible to retrieve data about all menu items in the HTM\n template outside the for loop used to generate menu HTML?\n{% set menu = menu(<https://protect-us.mimecast.com/s/YCyaCyPz1msN2XwlVTZXp1x?domain=module.menu|module.menu>,\n “site_root”).children %} is retrieving only the first level of menu\nitems, but we want to save to a variable all levels and use it to\ngenerate different HTML for different nesting levels. Any guidance would be appreciated?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-12-11 23:51:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Renu Kumawat",
      "poster_handle": "krenu9898989898"
    },
    "time_stamp": "2023-12-11 23:40:59",
    "edited": {
      "time_stamp": "2023-12-12 00:37:15"
    },
    "text": "Hello Everyone, I am new in HubSpot. I have one doubt, is there default integration between sales hub and service hub?"
  },
  {
    "poster": {
      "poster_name": "James H",
      "poster_handle": "jim834"
    },
    "time_stamp": "2023-12-11 23:51:09",
    "text": "You can use a macro to recursively iterate over the menu to retrieve all the items\n\n```{% macro render_menu(menu) %}\n  &lt;ul&gt;\n    {% for item in menu %}\n      &lt;li&gt;\n        {{ item.text }}\n        {% if item.children.count &gt; 0 %}\n          {{ render_menu(item.children) }}\n        {% endif %}\n      &lt;/li&gt;\n    {% endfor %}\n  &lt;/ul&gt;\n{% endmacro %}\n\n{% set main_menu = menu(<http://module.menu|module.menu>, \"site_root\").children %}\n{{ render_menu(main_menu) }}```"
  }
]
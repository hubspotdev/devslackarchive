[
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-27 10:24:44",
    "text": "Has Anyone figured out a way to create a OR queris in HUBDB? Search is not working as expected and I can not seem to find a resolution to the issue im having.",
    "reply_count": 9,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2018-09-27 10:28:17"
      },
      {
        "time_stamp": "2018-09-27 11:22:59"
      },
      {
        "time_stamp": "2018-09-27 11:23:07"
      },
      {
        "time_stamp": "2018-09-27 11:52:04"
      },
      {
        "time_stamp": "2018-09-27 11:53:11"
      },
      {
        "time_stamp": "2018-09-27 11:53:33"
      },
      {
        "time_stamp": "2018-09-27 13:07:31"
      },
      {
        "time_stamp": "2018-09-27 16:31:22"
      },
      {
        "time_stamp": "2018-09-27 20:11:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-27 10:28:17",
    "text": "i.e. &amp;whatever=val1 or val2"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-27 11:22:59",
    "text": "yeahâ€¦ currently everything is an AND query.. all queries have to match.."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-27 11:23:07",
    "text": "Im looking for an OR  query"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-09-27 11:52:04",
    "text": "It's a pain, but you can do two separate queries and then merge them"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-09-27 11:53:11",
    "text": "And then use the `|unique` filter to strip out the duplicates"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-09-27 11:53:33",
    "text": "The drawback is you'd have to sort it in the template instead of relying on the hubdb_table_rows query to sort it"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-09-27 13:07:31",
    "text": "currently not possible except for multiselect fields in which you can use use IN"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-09-27 16:31:22",
    "text": "I've done this with an condition that checks for the loop index of 0 then tries the other query... But if you want both at the same time i've seen 2 queries and the joined as Ian mentioned"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-27 20:11:04",
    "text": "ok guys. thanks"
  }
]
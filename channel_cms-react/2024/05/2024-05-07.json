[
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-05-07 05:44:30",
    "text": "Andrew was this resolved?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-05-07 05:47:16",
    "text": "<@UAYBXDG4U> no, I haven't heard back from anyone yet"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-05-07 05:48:19",
    "text": "Would you send me a DM with the page, and any other information pertaining to this?"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2024-05-07 09:00:13",
    "text": "Anyone resolved this in a more elegant way?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-05-07 09:24:58",
    "text": "I don't seem to have this issue when using Typescript."
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-05-07 09:39:53",
    "text": "What? how would typescript fix this?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-05-07 09:46:10",
    "edited": {
      "time_stamp": "2024-05-07 09:47:55"
    },
    "text": "Not 100% sure, haven't dug into this too much (as it just worked) However, without my tsconfig settings I'm getting errors around import.meta.url, i'm assuming it's because of the ts build step. The HubSpot project build step process supports Typescript out of the box."
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2024-05-07 09:52:45",
    "text": "But is the tailwind intellisense working for you out of the box? that's the question"
  },
  {
    "text": "?",
    "time_stamp": "2024-05-07 09:54:34"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-05-07 09:56:19",
    "text": "Whats your intelisense pointed at"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-05-07 09:56:34",
    "text": "Its possible theyve released an update to support esm syntax finnaly"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-05-07 09:58:15",
    "edited": {
      "time_stamp": "2024-05-07 09:59:46"
    },
    "text": "My tailwind.config.ts:\n```import { fileURLToPath } from 'url';\nimport typo from \"@tailwindcss/typography\";\n\nconst componentsDir = fileURLToPath(new URL('./components', import.meta.url));\n\nexport default {\n  content: [`${componentsDir}/**/*.{js,ts,jsx,tsx}`],\n  theme: {\n    extend: {},\n  },\n  plugins: [\n    typo\n  ],\n};```"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-05-07 09:59:55",
    "text": "And whats your intelisense output in the terminal?"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2024-05-07 10:01:26",
    "text": "true, changing the file from tailwind.config.js to tailwind.config.ts resolved the issue"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-05-07 10:02:22",
    "edited": {
      "time_stamp": "2024-05-07 10:02:31"
    },
    "text": "the tailwind css intellisense plugin is correctly picking up the project specific tailwind.config.ts (as per output in console)"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-05-07 10:11:19",
    "edited": {
      "time_stamp": "2024-05-07 10:11:32"
    },
    "text": "I'm assuming it works because my tsconfig is outputting a ESM bundle and I have \"type\": \"module\" in package.json."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-05-07 14:21:31",
    "text": "Good callout - noting internally."
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-07 16:14:52",
    "text": "I started working with Islands today and noticed that the component being used as the `module` of an Island must be a default export. Using a named export results in an error.\n\n```The requested module '/@fs/Users/rich/repo/project/app/components/shared/filters/FilteredProjectsGridIsland/FilteredProjectsGridIsland.tsx?island' does not provide an export named 'FilteredProjectsGridIsland'```\nThe <https://github.HubSpot.com/cms-react/reference/islands.html#islands|example in the docs> uses a default export but it is not stated explicitly in the documentation.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-05-08 07:19:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-07 16:22:02",
    "text": "If you got here because of TS errors with `?island` you need to add a declaration to a “*.d.ts” file like the following so TS expects the parameter on an import:\n```declare module '*?island'```"
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-07 16:36:35",
    "edited": {
      "time_stamp": "2024-05-07 16:37:28"
    },
    "text": "I see some issues related to `RepeatedFieldGroup` and Storybook but didn’t see any answers that seemed to indicate the problem was resolved. I think I’ve tracked down part of the problem (I don’t think it’s just a Storybook problem). When I define the field like this I get an error in the browser:\n\n```      <RepeatedFieldGroup\n        label=\"PROJECTS\"\n        name=\"projects\"\n      >```\nThe error occurs in the code that tries to use the projects as an array (`projects.map()`), if I log the value of projects on the server it’s an object `fieldValues= { projects: { header: 'Project 1' } }` , I expected an array. However if I set an explicit `occurrence` value on the field then projects returns the array that is set as an `arg` in Storybook.\n\n```      <RepeatedFieldGroup\n        label=\"PROJECTS\"\n        name=\"projects\"\n        occurrence={{ min: 0 }} // <-- added\n      >```\n```fieldValues= {\n  projects: [\n    {\n      aspect_ratio: 'large-square',\n      background_color: 'EEE',\n      header: 'HEADER',\n      image: [Object],\n      tags: []\n    }\n  ]\n}```"
  }
]
[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-12-08 07:21:48",
    "text": "<@U6Z3FRJ2D> You could store a username and password for each \"account/page\" in HubDB and create your own password protection system. A co-worker of mine did something similar. I don't remember every part of it, but I think he stored whatever the user entered in as a UN and PW, loaded a new page, on the new page pulled the UN and PW cookie server side checked if the UN and PW matched a db entry then converted the cookie to be a generated token, that was valid, and used that to check against for future page visits. \n\nIf a user accessed a page and did not have the token or correct UN and PW it showed a login screen instead."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-08 07:25:43",
    "text": "Or using hubl you could load a different stylesheet based on the url —"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-08 07:26:14",
    "text": "interesting^^^^"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-12-08 08:22:07",
    "text": "Storing usernames and passwords in HubDB is not a good idea because all the data in HubDB is public. We are looking at providing ways to solve this particular use case of protecting sites with a user login."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-12-08 08:22:49",
    "text": "In the meantime, you could build a login system off HubSpot, then just verify on your HubSpot pages that they have a valid cookie. If not, redirect them to your login page."
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2017-12-08 08:38:24",
    "text": "Thank you guys."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-12-08 08:38:41",
    "text": "I recently built some simple login stuff with <https://auth0.com/>, that worked pretty good"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-12-08 08:40:31",
    "text": "for our use-case the example above was sufficient(client was just using it to show information to specific clients of theirs without giving them access to other client's information. None of the info is confidential however so had someone broke in there's nothing really to worry about) - we used a blog instead of hubDB i suggested hubDB  since i thought it would be better for maintaining so i suggested it. Either way it's done this way it's not going to be a very secure. Sufficient for data that is personalized but not intended to be secure(sorry for not prefacing that). Only way to do that would be to have everything serverside with no way to access the data both blog and HubDB can be accessed. The blog you can hypothetically add some level of security to make it so it's just not accessible directly.\n\n\n<@U54TVT3C1> is it possible to integrate auth0 and HS? thought it required some stuff you can't do in HubL. Or were you meaning for an off HS solution?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2017-12-08 08:43:21"
      },
      {
        "time_stamp": "2017-12-08 08:43:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-12-08 08:43:21",
    "text": "TFW someone accidentally tags you, but they're talking about some really cool stuff so you're happy to be included."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-12-08 08:43:53",
    "text": "oops I'm sorry lol I meant the other Ian"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-12-08 08:43:56",
    "text": "There's a jQuery/AJAX version you can use, which is sufficient for some things"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-12-08 08:44:15",
    "text": "Like showing a particular user's profile or whatever"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-12-08 08:44:31",
    "text": "I haven't dug too deeply into what you can do"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-12-08 08:44:59",
    "text": "definitely going to look into it if another client wants functionality like this"
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2017-12-08 12:27:25",
    "edited": {
      "time_stamp": "2017-12-08 12:28:11"
    },
    "text": "hi… me again… i have problems with this: \nIm using this to make a scroll link and is working on safari but not in chrome… \n&lt;script type=“text/javascript”&gt;\n$(‘.scroll’).click(function() {\n    $(‘body’).animate({\n        scrollTop: eval($(‘#’ + $(this).attr(‘target’)).offset().top - 20)\n    }, 500);\n});\n&lt;/script&gt;\n\nand the link:\n&lt;a class=“scroll” target=“form-name”&gt; link &lt;/a&gt;"
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2017-12-08 12:30:22",
    "text": "in fact im using it on this template (<http://inbound.hint.mx/click-to-convert-landing-page-template-for-HubSpot-cos>), but i worked some time ago and now isnt… maybe some update of chrome brake it…"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-08 12:43:31",
    "text": "$(‘html, body’)"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-08 12:43:36",
    "text": "thats what you need to change it to"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-08 12:43:39",
    "text": "not just body"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-08 12:44:08",
    "text": "The reason is the browsers are different and look at it differently"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-08 12:44:39",
    "text": "<@U6Z3FRJ2D> $(‘html,body’).animate({"
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2017-12-08 12:51:31",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2017-12-08 12:52:36",
    "text": "My brain was like if I was mining bitcoins!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-12-08 13:05:06",
    "text": "if it was mining some, I'd happily take one off your hands for you. (1 is worth over 15,000 USD right now)"
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2017-12-08 13:18:12",
    "text": "i have only .04 bitcoins, really :("
  },
  null
]
[
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:36:46",
    "text": "I'm having a senior moment.....what on the Engadgements API for SMS sets the \"To\" and \"From\" ?",
    "reply_count": 33,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-12-01 08:43:53"
      },
      {
        "time_stamp": "2023-12-01 08:44:01"
      },
      {
        "time_stamp": "2023-12-01 08:44:02"
      },
      {
        "time_stamp": "2023-12-01 08:44:07"
      },
      {
        "time_stamp": "2023-12-01 08:44:20"
      },
      {
        "time_stamp": "2023-12-01 08:44:26"
      },
      {
        "time_stamp": "2023-12-01 08:44:45"
      },
      {
        "time_stamp": "2023-12-01 08:45:03"
      },
      {
        "time_stamp": "2023-12-01 08:45:15"
      },
      {
        "time_stamp": "2023-12-01 08:46:43"
      },
      {
        "time_stamp": "2023-12-01 08:46:51"
      },
      {
        "time_stamp": "2023-12-01 08:47:06"
      },
      {
        "time_stamp": "2023-12-01 08:47:12"
      },
      {
        "time_stamp": "2023-12-01 08:47:44"
      },
      {
        "time_stamp": "2023-12-01 08:48:07"
      },
      {
        "time_stamp": "2023-12-01 08:48:36"
      },
      {
        "time_stamp": "2023-12-01 08:52:09"
      },
      {
        "time_stamp": "2023-12-01 08:53:41"
      },
      {
        "time_stamp": "2023-12-01 08:54:08"
      },
      {
        "time_stamp": "2023-12-01 08:54:18"
      },
      {
        "time_stamp": "2023-12-01 08:54:54"
      },
      {
        "time_stamp": "2023-12-01 08:56:18"
      },
      {
        "time_stamp": "2023-12-01 08:56:36"
      },
      {
        "time_stamp": "2023-12-01 08:58:05"
      },
      {
        "time_stamp": "2023-12-01 08:58:08"
      },
      {
        "time_stamp": "2023-12-01 09:01:02"
      },
      {
        "time_stamp": "2023-12-01 09:10:09"
      },
      {
        "time_stamp": "2023-12-01 09:10:21"
      },
      {
        "time_stamp": "2023-12-01 09:10:23"
      },
      {
        "time_stamp": "2023-12-01 09:10:25"
      },
      {
        "time_stamp": "2023-12-01 09:10:56"
      },
      {
        "time_stamp": "2023-12-01 09:11:42"
      },
      {
        "time_stamp": "2023-12-01 09:11:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:36:51",
    "text": "<https://developers.HubSpot.com/docs/api/crm/communications>"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:37:16",
    "text": "is owner ID the \"To\" ?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:37:22",
    "text": "and the association the \"from\""
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:43:53",
    "text": "a wild HubSpot Product Manager appears!"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:44:01",
    "text": "ll"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:44:02",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:44:07",
    "text": "I am not the PM of these APIs but I do have a keyword notification on `sms` and work on some related things"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:44:20",
    "text": "no worries, I appreciate it if you do know off hand, if not no problem lol"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:44:26",
    "text": "not a senior moment, there isn't much structure today to that API around metadata concepts like sender/recipient/message direction"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:44:45",
    "text": "I've watched our SMS app partners sort of improvise jamming those things into the body of the message :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:45:03",
    "text": "yeah I think thats what we did in the past, does that apparently work? like its smart enough to know?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:45:15",
    "text": "or do you mean as just like extra wrappage around the body text"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:46:43",
    "text": "in the 'communication body' some people put some information that you might consider metadata/header data. It at least lets your users see context about the communication when viewing the timeline, but it means there isn't much that can be done around reporting/automation/filtering on more structured fields"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:46:51",
    "text": "gotchaaa"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:47:06",
    "text": "yeah we're having a issue where it'll assign GX GX to random people as the From"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:47:12",
    "text": "but it somehow knows how to do the From and To :shrug: lol"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:47:44",
    "text": "so thats why I was thinking it might be a owner / association thing but I'm prob totally wrong"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:48:07",
    "text": "right that's a separate concept"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:48:36",
    "text": "interesting huh"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:52:09",
    "text": "thanks Eric"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:53:41",
    "text": "If you have some spare cycles, it'd be great to get this logged over at <https://community.HubSpot.com/t5/HubSpot-Ideas/idb-p/HubSpot_Ideas/label-name/APIs/tab/most-recent>\n\ni've heard it directly from app partners, but not yet corralled people to upvote it in a centralized place and we really do look at the Ideas forum data"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:54:08",
    "text": "for sure, it seems like its a case of throw stuff at the wall until it works the way you want it too lol"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 08:54:18",
    "text": "also, generally curious about what you are building, and what problem you are trying to solve (because it may be related to a thing i an working on), but if you need to get back to it, totally get it!"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:54:54",
    "text": "no worries, we have a custom integration we built between Vonage Business Communications and :\n\n1. the calls object in HS (so we import in records etc)\n2. SMS Engadgements\n3. MMS Engadgements "
  },
  {
    "text": "so you can see here theres something odd where it associates to the correct contact but passes the From as the owner ID",
    "time_stamp": "2023-12-01 08:56:18"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:56:36",
    "text": "```{\n    \"properties\": {\n        \"hs_communication_channel_type\": \"SMS\",\n        \"hs_communication_logged_from\": \"CRM\",\n        \"hs_communication_body\": \"TEST IGNORE THIS - APTITUDE 8\",\n        \"hs_timestamp\": \"2023-12-01T15:10:03+00:00\",\n        \"HubSpot_owner_id\": \"482388604\"\n    },\n    \"associations\": [\n        {\n            \"to\": \"6318601\",\n            \"types\": [\n                {\n                    \"associationCategory\": \"HubSpot_DEFINED\",\n                    \"associationTypeId\": 81\n                }\n            ]\n        }\n    ]\n}```\nthe payload that made that"
  },
  {
    "text": "now if you don't send a ownerID, it'll associate still but will send empty to/from",
    "time_stamp": "2023-12-01 08:58:05"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 08:58:08",
    "text": "so that gives us a hint"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 09:01:02",
    "text": "yep, from is always HS Owner ID"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 09:10:09",
    "edited": {
      "time_stamp": "2023-12-01 09:10:22"
    },
    "text": "got it. you have a customer(s) who send and receive calls and SMS in a Vonage product and want to sync some of that activity to HubSpot (yes?)\n\nI suspect the thing you've noticed is something not explicitly designed for one way or the other, and just how it happens to work for better or for worse. Owners being a thing that mostly exists to <https://knowledge.HubSpot.com/salesforce/assignment-of-salesforce-owners-to-HubSpot-contacts-companies-or-deals|resolve differences between HubSpot and Salesforce>"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 09:10:21",
    "text": "eah"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 09:10:23",
    "text": "yeah*"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 09:10:25",
    "text": "<@U04B32JHTUZ> i'm guessing GX GX is what HubSpot enters when a Owner doesn't have a first and last name?"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-12-01 09:10:56",
    "text": "Afraid I wouldn't know"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 09:11:42",
    "text": "no worries"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-12-01 09:11:47",
    "text": "im going to just assume yes :stuck_out_tongue: lol"
  },
  {
    "poster": {
      "poster_name": "Conner Goldsmith",
      "poster_handle": "cgoldsmith"
    },
    "time_stamp": "2023-12-01 09:16:06",
    "edited": {
      "time_stamp": "2023-12-01 09:18:20"
    },
    "text": "Hello! I am curious about the current HubSpot api. I know that hapikey is no longer supported under query strings, but you can still use private apps to retrieve hubdb rows right? I have followed the documentation but keep getting errors regarding the api. If that is still possible, would it also be doable to only load certain rows after a user makes  a search query? Not just display, but load rows only after search queries match up with rows. Thank you!",
    "reply_count": 14,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-12-01 09:23:16"
      },
      {
        "time_stamp": "2023-12-01 09:24:02"
      },
      {
        "time_stamp": "2023-12-01 09:24:37"
      },
      {
        "time_stamp": "2023-12-01 09:27:44"
      },
      {
        "time_stamp": "2023-12-01 09:27:56"
      },
      {
        "time_stamp": "2023-12-01 09:28:11"
      },
      {
        "time_stamp": "2023-12-01 09:28:22"
      },
      {
        "time_stamp": "2023-12-01 09:29:40"
      },
      {
        "time_stamp": "2023-12-01 09:32:35"
      },
      {
        "time_stamp": "2023-12-01 09:56:03"
      },
      {
        "time_stamp": "2023-12-01 09:56:15"
      },
      {
        "time_stamp": "2023-12-01 09:56:29"
      },
      {
        "time_stamp": "2023-12-01 10:01:09"
      },
      {
        "time_stamp": "2023-12-01 10:03:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-12-01 09:23:16",
    "text": "you would use the auth bearer token for authentication like you do the other endpoints "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-12-01 09:24:02",
    "text": "what errors? do you have the key set up with the proper scopes? scopes should be listen in the documentation and the. you make sure the app token has that"
  },
  {
    "poster": {
      "poster_name": "Conner Goldsmith",
      "poster_handle": "cgoldsmith"
    },
    "time_stamp": "2023-12-01 09:24:37",
    "text": "So the oauth is the only way to achieve this? I wanted to avoid that so that I could get around the user having to do a consent auth step"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-12-01 09:27:44",
    "text": "```let config = {\n    method: `${method}`,\n    url: `${endpoint}`,\n    headers: {\n      'Authorization': `Bearer ${hsToken}`\n    }\n  }```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-12-01 09:27:56",
    "text": "```const { data } = await axios.request(config)```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-12-01 09:28:11",
    "text": "not sure what you are using, but this is how I set these up in axios"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-12-01 09:28:22",
    "text": "where your HS token is your private app key"
  },
  {
    "poster": {
      "poster_name": "Conner Goldsmith",
      "poster_handle": "cgoldsmith"
    },
    "time_stamp": "2023-12-01 09:29:40",
    "text": "Okay thank you! And with that the user would not have to go through the HubSpot oAuth authroization page?"
  },
  {
    "poster": {
      "poster_name": "Conner Goldsmith",
      "poster_handle": "cgoldsmith"
    },
    "time_stamp": "2023-12-01 09:32:35",
    "text": "(user as in someone using this module I would be using this for on my company website)"
  },
  {
    "poster": {
      "poster_name": "Lee M",
      "poster_handle": "lee467"
    },
    "time_stamp": "2023-12-01 09:38:41",
    "text": "In Sales &gt; Documents, can we view folders/files, upload and delete files/folders via the api?  I see the following page (<https://developers.HubSpot.com/docs/api/files/files>) is this the same thing?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-12-01 09:57:37"
      },
      {
        "time_stamp": "2023-12-01 09:59:37"
      },
      {
        "time_stamp": "2023-12-01 10:03:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 09:56:03",
    "text": "You can't call the HubSpot api directly from your website. You'll have to proxy the request through a serverless function"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 09:56:15",
    "text": "Or use the HubL functions to fetch the data you're trying to fetch"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 09:56:29",
    "text": "What is the end goal here? What are you trying to accomplish"
  },
  {
    "poster": {
      "poster_name": "Adan Camacho",
      "poster_handle": "adanc"
    },
    "time_stamp": "2023-12-01 09:57:16",
    "text": "Hello, I have a question about a personalized object. Can I send you a message to the chat?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 09:57:37",
    "text": "yep yep that's it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 09:57:51",
    "text": "sure bro"
  },
  {
    "poster": {
      "poster_name": "Lee M",
      "poster_handle": "lee467"
    },
    "time_stamp": "2023-12-01 09:59:37",
    "text": "Ok, Thanks <@U01QVR44MEY>"
  },
  {
    "poster": {
      "poster_name": "Conner Goldsmith",
      "poster_handle": "cgoldsmith"
    },
    "time_stamp": "2023-12-01 10:01:09",
    "text": "I have a module combining a few different hubdb tables containing over 20,000 rows. I have four different search filters that website users can use to narrow down results. I currently have it so that rows only display once users make search queries and the rows that display match up to their query. What I need is a solution that would allow for the rows to only load when there is a matchign search query. I do not want all of the hubdb rows to load on page load"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 10:03:10",
    "text": "oh they can't all load on page load anyway, you can only load 500 at a time"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 10:03:19",
    "edited": {
      "time_stamp": "2023-12-01 10:03:22"
    },
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Giacomo G",
      "poster_handle": "giacomo.g"
    },
    "time_stamp": "2023-12-01 10:17:53",
    "edited": {
      "time_stamp": "2023-12-01 10:25:46"
    },
    "text": "I'm glad you liked it ;)\n\nI am now stuck with the association of lineitems to the quote by the way..\n\nCould you please tell me what I am doing wrong here? I would be very grateful for that\n\nlineItemIds is a simple array of just ids from the created line items ids through api\n\nBasically I have multiple line items ids, once created the quote I would like to see the quote with the respective product data on the HubSpot quote details\n\n            const quote = {\n                properties: {\n                    \"hs_title\": \"QUOTE NAME\",\n                    \"hs_expiration_date\": \"2024-01-01\",\n                    \"hs_status\": \"DRAFT\",\n                    \"hs_language\": 'it',\n                    \"hs_currency\": \"EUR\",\n                    \"HubSpot_owner_id\": OWNER ID\n                },\n                associations:\n                    [\n                        {\n                            \"to\": { id: lineItemIds },\n                            \"types\": [{ \"associationCategory\": \"HubSpot_DEFINED\", \"associationTypeId\": 67 }]\n                        },\n                        {\n                            \"to\": { \"id\": \"DEAL ID\" },\n                            \"types\": [{ \"associationCategory\": \"HubSpot_DEFINED\", \"associationTypeId\": 64 }]\n                        }]\n            };\n\n            _return_ _HubSpotClient_.crm.quotes.basicApi.create(quote);"
  },
  {
    "poster": {
      "poster_name": "Stephen Kvedaras",
      "poster_handle": "stephen.kvedaras"
    },
    "time_stamp": "2023-12-01 12:08:37",
    "text": "Evening all - Am I missing something, or are there no read / write scopes available for `crm.objects.tickets` in private app? Just worked out why a workflow custom code action was failing...",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-12-01 14:20:49"
      },
      {
        "time_stamp": "2023-12-01 14:21:52"
      },
      {
        "time_stamp": "2023-12-01 14:23:23"
      },
      {
        "time_stamp": "2023-12-01 14:23:32"
      },
      {
        "time_stamp": "2023-12-01 15:31:12"
      },
      {
        "time_stamp": "2023-12-03 08:54:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 14:20:49",
    "text": "It's actually just `tickets`"
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2023-12-01 14:21:52",
    "text": "and under the “Standard” section - which isn’t the most intuitive."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 14:23:23",
    "text": "it's true bro, the team is working on fixing it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-12-01 14:23:32",
    "text": "I agree that it's totally annoying"
  },
  {
    "poster": {
      "poster_name": "Stephen Kvedaras",
      "poster_handle": "stephen.kvedaras"
    },
    "time_stamp": "2023-12-01 15:31:12",
    "edited": {
      "time_stamp": "2023-12-01 16:13:28"
    },
    "text": "oh, so I just needed to scroll down... Hah! Thank you for pointing out the obvious"
  }
]
[
  {
    "poster": {
      "poster_name": "Tobias Brosge",
      "poster_handle": "tobias.brosge"
    },
    "time_stamp": "2024-11-15 03:41:26",
    "text": "Hello :wave:\nI'm looking for a way to get the name of the current account (hub/portal). I only found the same question coming up a couple of times (between 2016 and 2022). Is it possible to get this datapoint in 2024? The `hubDomain` doesn't properly resemble the account name and is therefore not usable in my case."
  },
  {
    "poster": {
      "poster_name": "Miguel da Mota",
      "poster_handle": "mdamota"
    },
    "time_stamp": "2024-11-15 07:23:13",
    "text": "Hi there,\nI have a question about the <https://developers.HubSpot.com/beta-docs/reference/api/crm/objects/deals#post-%2Fcrm%2Fv3%2Fobjects%2Fdeals%2Fsearch|Deals Search API>. In the Response Example there is a \"propertiesWithHistory\" property, how can I define which properties should have a history? I already tried defining them in the body and url as a parameter but nothing works. Does somebody have a clue?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-11-15 08:11:36"
      },
      {
        "time_stamp": "2024-11-15 08:17:15"
      },
      {
        "time_stamp": "2024-11-15 08:25:22"
      },
      {
        "time_stamp": "2024-11-15 08:27:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "David Suárez",
      "poster_handle": "dsuarez450"
    },
    "time_stamp": "2024-11-15 07:37:46",
    "text": "Hi, I am new with this things about api, I want to get the all subscriptions for a certain form, How can I do this?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-11-15 08:44:28"
      },
      {
        "time_stamp": "2024-11-15 09:01:15"
      },
      {
        "time_stamp": "2024-11-15 12:54:43"
      },
      {
        "time_stamp": "2024-11-15 12:56:25"
      },
      {
        "time_stamp": "2024-11-15 12:58:42"
      },
      {
        "time_stamp": "2024-11-15 12:59:34"
      },
      {
        "time_stamp": "2024-11-15 13:04:59"
      },
      {
        "time_stamp": "2024-11-15 13:56:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Marton Biro",
      "poster_handle": "marton.biro"
    },
    "time_stamp": "2024-11-15 07:40:32",
    "text": "<@UQNEXHW14> can you point me to the right direction, so someone can help me?"
  },
  {
    "poster": {
      "poster_name": "José Manuel Santos",
      "poster_handle": "santos"
    },
    "time_stamp": "2024-11-15 07:48:47",
    "text": "Thanks Aldo, yes, I think Im going to go with that option, now I have to understand better how to do that"
  },
  {
    "text": "Hey <@U08125QKEHH>,\nIf you want to get the history of a property you can add the \"propertiesWithHistory\" to the request body. This returns property history for the fields I add to the list.\n\nTo be clear, this is a body parameter, not a URL param!",
    "time_stamp": "2024-11-15 08:11:36"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-11-15 08:17:14",
    "text": "Can you get a link to a company logo from the API? <https://api.hubapi.com/crm/v3/objects/companies?properties=phone,name,address,city,state,zip,domain>",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-11-15 08:53:46"
      },
      {
        "time_stamp": "2024-11-15 08:54:36"
      },
      {
        "time_stamp": "2024-11-15 08:55:35"
      },
      {
        "time_stamp": "2024-11-15 08:56:09"
      },
      {
        "time_stamp": "2024-11-15 08:56:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Miguel da Mota",
      "poster_handle": "mdamota"
    },
    "time_stamp": "2024-11-15 08:17:15",
    "text": "Hi <@U05RN4ZVBLN> Thanks for your quick response! However, I want to use the search api and not batch read"
  },
  {
    "poster": {
      "poster_name": "Aldo Carrillo",
      "poster_handle": "aldo948"
    },
    "time_stamp": "2024-11-15 08:20:52",
    "text": "<https://knowledge.HubSpot.com/workflows/how-do-i-use-webhooks-with-HubSpot-workflows|https://knowledge.HubSpot.com/workflows/how-do-i-use-webhooks-with-HubSpot-workflows>"
  },
  {
    "poster": {
      "poster_name": "Zack Lyons",
      "poster_handle": "zlyons"
    },
    "time_stamp": "2024-11-15 08:25:22",
    "text": "<@U08125QKEHH>\nI don't see any mention of properties with history in the <https://developers.HubSpot.com/beta-docs/guides/api/crm/search|search API docs>.\n\nIt's a pain in the butt to have to make two calls, but maybe you could use the search API to find the Deal ID's you're looking for, then use those Deal ID's in the batch Deal read API like my first example.\n\nThat way you can search for the Deals that match your criteria, and get the property history.\n\nGood luck!"
  },
  {
    "poster": {
      "poster_name": "Miguel da Mota",
      "poster_handle": "mdamota"
    },
    "time_stamp": "2024-11-15 08:27:25",
    "text": "Thank you!"
  },
  {
    "poster": {
      "poster_name": "José Manuel Santos",
      "poster_handle": "santos"
    },
    "time_stamp": "2024-11-15 08:33:52",
    "text": "Thanks Aldo"
  },
  {
    "poster": {
      "poster_name": "joe conery",
      "poster_handle": "joe277"
    },
    "time_stamp": "2024-11-15 08:36:00",
    "text": "use the api GET request to check the result so you'd have 0 concerns about browser caching"
  },
  {
    "poster": {
      "poster_name": "Zack Lyons",
      "poster_handle": "zlyons"
    },
    "time_stamp": "2024-11-15 08:44:28",
    "edited": {
      "time_stamp": "2024-11-15 08:47:37"
    },
    "text": "Hi <@U081EUYN09F>,\n\nYou mention subscriptions, I would start by taking a look at the <https://developers.HubSpot.com/beta-docs/guides/api/marketing/subscriptions|Subscriptions API docs> which are in beta right now.\n\nI suspect you mean form _submissions,_ however, which you can get with the <https://developers.HubSpot.com/beta-docs/reference/api/marketing/forms/v1|old v1 Forms API> !"
  },
  {
    "poster": {
      "poster_name": "Zack Lyons",
      "poster_handle": "zlyons"
    },
    "time_stamp": "2024-11-15 08:53:46",
    "text": "Good morning, <@U07BEAA26UV>,\n\nAccording to some HS Community posts, you cannot get the company logo via API:\n• <https://community.HubSpot.com/t5/APIs-Integrations/How-do-I-get-the-avatar-logo-of-a-contact-company/m-p/236493|HS Community post 1>\n• <https://community.HubSpot.com/t5/APIs-Integrations/Change-company-photo-from-API/m-p/226337|HS Community post 2>\n• <https://community.HubSpot.com/t5/HubSpot-Ideas/Add-logo-url-endpoints-to-API-and-allow-logo-url-as-a-company/idi-p/530454|HS Community post 3>\nSomeone please correct me if this has changed!"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-11-15 08:54:36",
    "text": "okay, so can I get that url from that endpoint?"
  },
  {
    "poster": {
      "poster_name": "Zack Lyons",
      "poster_handle": "zlyons"
    },
    "time_stamp": "2024-11-15 08:55:35",
    "text": "No"
  },
  {
    "text": "",
    "time_stamp": "2024-11-15 08:56:09"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-11-15 08:56:22",
    "text": "okay... I will handle it in my own software. lol"
  },
  {
    "poster": {
      "poster_name": "David Suárez",
      "poster_handle": "dsuarez450"
    },
    "time_stamp": "2024-11-15 09:01:15",
    "text": "Yeah, yeah Submmisions, I will take a look on this. Thanks."
  },
  {
    "poster": {
      "poster_name": "Jay Nanavati",
      "poster_handle": "jay520"
    },
    "time_stamp": "2024-11-15 09:03:22",
    "text": "Hey everyone, I want to create a workflow where all the deals should be associated to a slack channel and,\n1. All the activities should fall under the deal's thread, I created the app on slack API and tried to create a workflow and added the webhook URL, Not sure what else should I do to achieve it?"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2024-11-15 10:05:01",
    "text": "Hey Marton! Would you mind reporting this <https://developers.HubSpot.com/feedback|here>?"
  },
  {
    "poster": {
      "poster_name": "Marton Biro",
      "poster_handle": "marton.biro"
    },
    "time_stamp": "2024-11-15 10:16:09",
    "text": "Yes, will do - thank you!"
  },
  {
    "poster": {
      "poster_name": "David Suárez",
      "poster_handle": "dsuarez450"
    },
    "time_stamp": "2024-11-15 12:54:43",
    "text": "Hi again it works. Do you have any idea how can I do the pagination for this api."
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2024-11-15 12:56:25",
    "text": "`import os`\nimport requests\nfrom dotenv import load_dotenv\n\nload_dotenv(dotenv_path='/xx/xx/xxx/xx/mynewenviroment/credential_HubSpot.env')\ntoken= os.getenv('token')\n\nbase_url= \"<https://api.hubapi.com/form-integrations/v1/submissions/forms/f5f14c6f-2e8b-418c-91b3-1f7ccf4c502f>\"\nheaders = {\n    \"Authorization\": f\"Bearer {token}\"\n}\n\nall_sub=[]\n\nurl = base_url\n\nwhile url:\n    response= requests.get(base_url,headers=headers)\n    if response.status_code == 200:\n         data = response.json()\n         all_sub.extend(data.get('results', []))\n\n         pagination = data.get('pagin',{})\n         next_page = pagination.get('next',{}).get('after')\n         if next_page:\n              url = f\"{base_url}?after={next_page}&amp;limit=50\"\n         else:\n              url = None\n    else:\n         print(f\"Error: {response.status_code}\")\n         print(response.text)\n         break\nprint(\"All form submissions:\")\nfor result in all_sub:\n    print(result)"
  },
  {
    "text": "Hey <@U081EUYN09F>,\n\nYou will provide an \"after\" query parameter, which you tack onto the end of your `base_url`",
    "time_stamp": "2024-11-15 12:58:42"
  },
  {
    "text": "The response you get from HubSpot will have a `paging` property which provides the \"after\" value you need to fetch the next page",
    "time_stamp": "2024-11-15 12:59:34"
  },
  {
    "poster": {
      "poster_name": "Zack Lyons",
      "poster_handle": "zlyons"
    },
    "time_stamp": "2024-11-15 13:04:59",
    "text": "So to use your code as an example:\n\nafter you make your first request you can check if there is a `paging` property in the response.\n\nIf there is, that means there are more pages to fetch.\n\nYou take the `response.paging.next.after` value and assign it to a variable named something like `next_page` .\n\nThen the next request instead of using just the `base_url` you use `base_url` + `?after=` + `next_page`"
  },
  {
    "poster": {
      "poster_name": "David Suárez",
      "poster_handle": "dsuarez450"
    },
    "time_stamp": "2024-11-15 13:56:42",
    "text": "Thanks a lot. I am working with a partner this is the final code if this help for someone:\n`import os`\nimport requests\nfrom dotenv import load_dotenv\n\nload_dotenv(dotenv_path='/xxx/xxx/xxx/xxxxx/xxxxxt/credential_HubSpot.env')\ntoken = os.getenv('token')\n\nbase_url = \"<https://api.hubapi.com/form-integrations/v1/submissions/forms/xxxxxx>\nheaders = {\n    \"Authorization\": f\"Bearer {token}\"\n}\n\nall_sub = []\n\nurl = base_url\nwhile url:\n    response = requests.get(url, headers=headers)\n    if response.status_code == 200:\n        data = response.json()\n        all_sub.extend(data.get('results', []))\n\n        paging = data.get('paging', {})\n        next_page = paging.get('next', {}).get('link')\n        if next_page:\n            url = base_url + next_page\n        else:\n            print(\"No more pages to fetch\")\n            break\n    else:\n        print(f\"Error: {response.status_code}\")\n        print(response.text)\n        break\n\nprint(\"All form submissions:\")\nfor submission in all_sub:\n    print(submission)"
  }
]
[
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2024-05-16 02:08:38",
    "text": "Thanks Rich, appreciate the food for thought. I'll likely stick to a separate instance at the root level for now to keep things simple but am interested to learn Vite + rollup for other projects :)"
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2024-05-16 02:10:36",
    "text": "Hi <@U04DLJH3W94>, I was thinking if I can contribute to the docs via PRs? I use them often and I realize that it would probably be easier / more productive to send proposed updates there.\n\nI'll look into the wording in a sec."
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-05-16 02:15:12",
    "text": "<@UQERM7BLY> can you share me ur ts config and package json to see"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-05-16 02:15:15",
    "text": "still not working for me"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-05-16 06:57:27",
    "text": "Sure, sounds good!"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-05-16 06:59:29",
    "text": "Hello Marianne - have you considered GraphQL as a way to query across these tables?"
  },
  {
    "poster": {
      "poster_name": "Marianne",
      "poster_handle": "marianne680"
    },
    "time_stamp": "2024-05-16 07:12:22",
    "text": "Hi <@UAYBXDG4U>, yes, I've seen the docu but I'm just wondering if the value of another field can be accessible to my .graphql file?"
  },
  {
    "poster": {
      "poster_name": "Marianne",
      "poster_handle": "marianne680"
    },
    "time_stamp": "2024-05-16 07:14:29",
    "text": "Or is using the hublDataTemplate more suitable to the feature requirement I need? But then, my question remains the same, is it possible to reference the value of the location field inside the announcement's field component?"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2024-05-16 09:11:06",
    "text": "<@UDHT6N5SM> <@UAYBXDG4U> sorry to jump in! But i'm just wondering - and according to what i've read on the documentation i think the answer is no - i f i can use variables not related to the template. I'm working on a quote template, and it would be great to  query on GraphQL custom objects based on a line item value i get from the quote associated objects, but i only found the \"context\" ones for contacts. Any help is appreciated, thanks!!"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-05-16 09:21:39",
    "text": "This is in a regular CMS page?"
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-16 09:38:01",
    "text": "I’m using testing-library/react and encountering an error when testing a module that imports using `?island`. The code builds and runs correctly but in the test environment I get an error:\n&gt; Error: No moduleId found on module. Module must be from import with ?island suffix.\nThe module code looks like this:\n```import { Island } from '@HubSpot/cms-components'\nimport IslandComponent from '../../shared/IslandComponent?island'\n\nexport default function ModuleComponent({\n  fieldValues,\n}: ModuleProps&lt;ModuleComponentProps&gt;): React.ReactNode {\n  return (\n    &lt;Island\n      module={IslandComponent}\n      {...fieldValues}\n    /&gt;\n  )\n}```\nIn my test code I import the module and render it, render is when the error happens.\n```import { render } from '@testing-library/react'\nimport ModuleComponent from './ModuleComponent'\n\ndescribe('ModuleComponent', () =&gt; {\n  it('should render', () =&gt; {\n    render(&lt;ModuleComponent fieldValues={mockFieldValues} hublParameters={{}} /&gt;)\n  })\n})```\nI assume the problem is similar to Storybook and that some sort of wrapper needs to be passed to render to support the island infra. in the test.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-05-16 09:50:49"
      },
      {
        "time_stamp": "2024-05-16 10:01:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-05-16 09:50:49",
    "text": "Good callout Rich. For out internal storybook implementation we have to wrap things for Islands to have their \"runtime\".\n\nI'll bring this back to the team."
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-16 10:01:12",
    "text": "Not sure how familiar the team is with testing-library but render accepts an `options` argument that  has a `wrapper` prop - which accepts a functional React component. I think this would be the best place to provide that support. It means developers have to add the wrapper but that’s OK, it’s a TL API standard."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-05-16 11:05:52",
    "text": "is there any way to check if a react module is being used somewhere?"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-05-16 14:08:23",
    "text": "can a module have state, or should a module use an island and import a component to be able to have state?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-05-16 14:08:57"
      },
      {
        "time_stamp": "2024-05-16 14:11:27"
      },
      {
        "time_stamp": "2024-05-16 14:12:36"
      },
      {
        "time_stamp": "2024-05-17 06:03:45"
      },
      {
        "time_stamp": "2024-05-17 08:12:25"
      },
      {
        "time_stamp": "2024-05-17 08:13:39"
      },
      {
        "time_stamp": "2024-05-17 11:32:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-05-16 14:08:57",
    "text": "State is a concept only relevant to the client currently, so that would only every make sense in an island"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-05-16 14:11:27",
    "text": "ok I think I got it.\n\nI'll have to create a component with the logic of my module, then the module will basically wrap this component with the Island\n\nIs this correct?"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-05-16 14:12:36",
    "text": "to be more clear, what I was trying to do is have state in the module, then import it in storybook using `?island` but apparently that's not going to work"
  }
]
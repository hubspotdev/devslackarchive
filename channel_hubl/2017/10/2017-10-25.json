[
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-10-25 08:11:14",
    "text": "<@U4RP6AGV9> can you use the blog_popular_posts function, specifying the topic to filter by? <https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions>",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2017-10-25 09:31:09"
      },
      {
        "time_stamp": "2017-10-25 09:33:05"
      },
      {
        "time_stamp": "2017-10-25 09:33:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-10-25 08:12:43",
    "text": "or even blog_recent_topic_posts"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2017-10-25 08:48:51",
    "text": "Anyone have a good way to print out a rich text module as a single line, or add \"/n\" characters? Trying to assign the value of a module to a JS string variable, and the multiline code is throwing an error, and for this use case I'd really like to do the processing in HubL if possible."
  },
  {
    "poster": {
      "poster_name": "Andrew Rogers",
      "poster_handle": "andrewrogers"
    },
    "time_stamp": "2017-10-25 09:03:12",
    "text": "When working with Multiselet options how can I get just the names in the output? Currently I get \"[{id=1, name='Managing Principals'}, {id=2, name='Consultants'}, {id=5, name='Research'}]\". I'm not seeing a filter that would only show the names or ids."
  },
  {
    "poster": {
      "poster_name": "Andrew Rogers",
      "poster_handle": "andrewrogers"
    },
    "time_stamp": "2017-10-25 09:19:58",
    "text": "It looks like it has to do with the \"PyList\""
  },
  {
    "poster": {
      "poster_name": "Andrew Rogers",
      "poster_handle": "andrewrogers"
    },
    "time_stamp": "2017-10-25 09:30:30",
    "edited": {
      "time_stamp": "2017-10-25 09:30:44"
    },
    "text": "I found a solution...almost. Here is what I did:\n{% for team in row.teams %}\n                &lt;p&gt;Team - {{ team.id }}&lt;/p&gt;\n            {% endfor %}"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-10-25 09:31:09",
    "text": "If we could tweak how \"popular\" was defined then sure (i.e. set criteria for selecting the \"popular\" posts) . The main use case for us right now with multiple projects is the need to apply a custom algorithm to selecting the content (then rendering it in the blog templates)."
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-10-25 09:33:05",
    "text": "Right now, All of the processing is done on a returned list of rows from a HubDB get_table_rows query, from within that basic results list, a series of comparisons and weights are applied to each blog postID associated with the row (the id of the content is stored in the row with additional data). Basically, the final result of the entire process is a nice list of blog post IDs , ordered by relevance to either the page, or some \"featured\" article."
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-10-25 09:33:23",
    "text": "Then it's just a matter of 5-10 blog_post_by_id() calls with the list of ids"
  },
  null,
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2017-10-26 00:36:00",
    "edited": {
      "time_stamp": "2017-10-26 00:36:35"
    },
    "text": "Hey dear community, I just notice a pb this morning on my language switcher module \n\n{% language_switcher “language_switcher” overrideable=false, display_mode=‘localized’, label=‘Language Switcher’ %}\n\nInstead of printing \nhref=“<http://website/en/>”\n\nThe module adds a query string (not present before)\nhref=“<http://website/en/?hs_lang_switcher_choice=EN>”\n\n*Has anyone noticed this issue ?*",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2017-10-26 07:03:15"
      },
      {
        "time_stamp": "2017-10-31 09:47:27"
      },
      {
        "time_stamp": "2017-10-31 09:48:08"
      }
    ]
  }
]
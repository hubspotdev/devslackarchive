[
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:13:52",
    "text": "I'm having an issue where I have a CM and am calling it into the `&lt;head&gt;` portion of the coded template but nothing is showing when I inspect the page and look at it. If i do a straight up view source i see it, but i dont see it on the inspector",
    "reply_count": 15,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-09-26 08:17:57"
      },
      {
        "time_stamp": "2018-09-26 08:19:52"
      },
      {
        "time_stamp": "2018-09-26 08:20:23"
      },
      {
        "time_stamp": "2018-09-26 08:21:11"
      },
      {
        "time_stamp": "2018-09-26 08:21:41"
      },
      {
        "time_stamp": "2018-09-26 08:21:56"
      },
      {
        "time_stamp": "2018-09-26 08:22:12"
      },
      {
        "time_stamp": "2018-09-26 08:22:37"
      },
      {
        "time_stamp": "2018-09-26 08:22:39"
      },
      {
        "time_stamp": "2018-09-26 08:23:21"
      },
      {
        "time_stamp": "2018-09-26 08:23:40"
      },
      {
        "time_stamp": "2018-09-26 08:25:06"
      },
      {
        "time_stamp": "2018-09-26 08:26:06"
      },
      {
        "time_stamp": "2018-09-26 08:27:09"
      },
      {
        "time_stamp": "2018-09-26 08:27:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-09-26 08:17:57",
    "text": "I wonder if the module’s wrapping `div` is invalid and the browser is stripping it out"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:19:52",
    "text": "i believe you area correct"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:20:23",
    "text": "when i look at the view source, i see this:\n```\n&lt;meta name=\"generator\" content=\"HubSpot\"&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"hs_cos_wrapper_module_153789606931182\" class=\"hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module\" style=\"\" data-hs-cos-general-type=\"widget\" data-hs-cos-type=\"module\"&gt;\n```"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:21:11",
    "text": "yep using the no_wrapper=True fixed it"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-09-26 08:21:41",
    "text": ":thumbsup: sweet. wasn’t sure if modules would render in the head at all"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:21:56",
    "text": "is there a way in the standard header includes to have it not include the social metas?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:22:12",
    "text": "for example these\n```\n&lt;meta property=\"og:description\" content=\"\"&gt;\n    &lt;meta property=\"og:title\" content=\"\"&gt;\n    &lt;meta name=\"twitter:description\" content=\"\"&gt;\n    &lt;meta name=\"twitter:title\" content=\"\"&gt;\n```"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-09-26 08:22:37",
    "text": "I don’t think so, short of stripping them with a hubl filter"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:22:39",
    "text": "not a huge deal as ill just modify my widget to remove the dupes"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-09-26 08:23:21",
    "text": "Yeah :point_up: probably best. Good to know though."
  },
  {
    "poster": {
      "poster_name": "Kayla Sutcliffe",
      "poster_handle": "michaela.sutcliffe"
    },
    "time_stamp": "2018-09-26 08:23:40",
    "text": "<@U9MAWTESW> similar to the issue we've had today"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:25:06",
    "text": "<@U26B530N6> any plans on HS implementing structured data markup? or best way to incorporate that into HS?"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-09-26 08:26:06",
    "text": "<@U2H3TT8F2> It’s something that’s being discussed. Any particular needs you see?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:27:09",
    "text": "I'll ask around, i know we've been doing it on other non-HS sites but Ill see what can be applied to HS sites. I know i was playing around with it when also looking at ways to do co-authors on articles"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:27:39",
    "text": "Also i know alot of people use HubDB for event listings so I would imagine it would come in useful for that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 08:28:01",
    "text": "pretty certain I saw some clever person on here once say they found a way to generate the values of a choice tag. If that clever person is on, could you enlighten me? doing something where that would be amazingly helpful",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-09-26 08:45:17"
      },
      {
        "time_stamp": "2018-09-26 08:54:25"
      },
      {
        "time_stamp": "2018-09-26 09:05:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:30:57",
    "text": "<@U7SL518D6> like so?:\n```\n{% for topic in topic_list|sort(False,False,'name') %}\n    {% if topic_choice.append(\"[\\\"\"+topic.slug+\"\\\",\\\"\"+topic.name+\"\\\"]\") == 'true' %}{% endif %}\n{% endfor %}\n```"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-26 08:32:02",
    "text": "I did it with looping through tags to create a psuedo \"subtopic\" type thingy:\n```\n{% set topic_choice = [\"\\\"No Primary Topic\\\"\"] %}\n\n{% set topic_list = blog_topics('default', 250) %}\n{% for topic in topic_list|sort(False,False,'name') %}\n    {% if topic_choice.append(\"[\\\"\"+topic.slug+\"\\\",\\\"\"+topic.name+\"\\\"]\") == 'true' %}{% endif %}\n{% endfor %}\n```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 08:34:32",
    "edited": {
      "time_stamp": "2018-09-26 08:34:51"
    },
    "text": "no not quite. Thankfully I just found it I have the original message from <@U7ADCU3BM> on how to do it. I’ll let him reveal it if he wants to. It’s kind of a hack but probably not something that will break"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-26 08:45:17",
    "text": "I use a macro to output the values, I’m sure I mentioned it somewhere on here before"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 08:54:25",
    "edited": {
      "time_stamp": "2018-09-26 08:55:11"
    },
    "text": "to clarify what I meant, was Gonzalo had found a way that he could add values dynamically to a\n`{% choice \"choice\" %}` tag\n\nSo for example if you want to populate that choice tag with choice values and labels from a hubDB, you could do that."
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-26 09:05:24",
    "text": "No I get it. My solution just performs the rendering of the pick list from a {% macro %} — in which you could make a call to HubDB and perform whatever logic / filtering you wanted to"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-09-26 10:04:47",
    "edited": {
      "time_stamp": "2018-09-26 10:13:21"
    },
    "text": "Here it goes (its pretty similar to what AJ did, but instead using a real list I just used a string, on that time I didn't knew about the .append trick :D):"
  },
  {
    "text": "",
    "time_stamp": "2018-09-26 10:05:00",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-09-26 10:06:50"
      },
      {
        "time_stamp": "2018-09-26 10:07:16"
      },
      {
        "time_stamp": "2018-09-26 10:07:42"
      },
      {
        "time_stamp": "2018-09-26 10:08:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-26 10:06:50",
    "text": "YOU CAN RENDER A TAG FROM A FOR LOOP!?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 10:07:16",
    "edited": {
      "time_stamp": "2018-09-26 10:07:29"
    },
    "text": "haha yep #hesagenious"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-26 10:07:42",
    "edited": {
      "time_stamp": "2018-09-26 10:07:53"
    },
    "text": "Holy crap - I’ve always been doing such roundabout &lt;insert other word for crap&gt; to get that dynamic stuff into a tag…"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-09-26 10:08:58",
    "text": ":male_mage:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 15:05:12",
    "text": "anyone know if it’s possible using HubL to redirect someone to another URL?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 15:09:54",
    "text": "starting to think I might have to use a hack with a coded template"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-09-26 15:11:44",
    "text": "you can print the URL saved in HubL and the use a `&lt;meta&gt;`, `JS` or any other method"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 15:18:48",
    "text": "yea kinda the route I’ve decided to go."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 15:19:40",
    "text": "got a page where if a condition isn’t true you get redirected.\nGonna do a coded template that if not true then it generates a meta redirect. If true you get a normal drag n drop template"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-26 15:20:03",
    "text": "basically the closest way of doing a server side redirect as possible"
  },
  {
    "poster": {
      "poster_name": "Douglas Ward",
      "poster_handle": "dougward"
    },
    "time_stamp": "2018-09-26 19:38:44",
    "text": "I'm sorry if this is a super basic question, but I just can't find any actual documentation on it. I want to add a custom field to my blog post template. I have created a custom module (using the new custom module interface) named Blog Authors. The custom module is a simple text field for authors to input author names. I've added the module to my blog template. Here is my question: how do I output the field in my blog template? Or are you only able to add custom modules to regular page, etc., and not blog templates?"
  }
]
[
  {
    "poster": {
      "poster_name": "Adam Berggren",
      "poster_handle": "adam.berggren"
    },
    "time_stamp": "2022-10-13 05:33:57",
    "text": "Hey guys! Is there any way to catch a webhook directly inside HubSpot? I know the webhook functionality have a request function but that do not catch a raw webhook right? I know it's easily fixed by Zapier or building a framework. But interested it HubSpot itself could make these catch?",
    "reply_count": 11,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2022-10-13 06:07:23"
      },
      {
        "time_stamp": "2022-10-13 06:40:36"
      },
      {
        "time_stamp": "2022-10-13 06:56:52"
      },
      {
        "time_stamp": "2022-10-13 07:43:55"
      },
      {
        "time_stamp": "2022-10-13 07:44:37"
      },
      {
        "time_stamp": "2022-10-13 07:45:08"
      },
      {
        "time_stamp": "2022-10-13 08:09:13"
      },
      {
        "time_stamp": "2022-10-13 08:10:43"
      },
      {
        "time_stamp": "2022-10-13 08:13:09"
      },
      {
        "time_stamp": "2022-10-13 08:13:56"
      },
      {
        "time_stamp": "2022-10-13 08:16:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Amber Behring-Wojcek",
      "poster_handle": "awojcek"
    },
    "time_stamp": "2022-10-13 06:07:23",
    "text": "I don’t know if this answers the request vs raw but you can in operations hub pro or enterprise\n<https://knowledge.HubSpot.com/workflows/how-do-i-use-webhooks-with-HubSpot-workflows>"
  },
  {
    "poster": {
      "poster_name": "Adam Berggren",
      "poster_handle": "adam.berggren"
    },
    "time_stamp": "2022-10-13 06:40:36",
    "edited": {
      "time_stamp": "2022-10-13 06:40:59"
    },
    "text": "Yeah sure. This is most related to send and request a webhook ringt? Or is there a way to POST a webhook directly and catch it  in HubSpot itself?"
  },
  {
    "poster": {
      "poster_name": "Angus Gibbs",
      "poster_handle": "agibbs"
    },
    "time_stamp": "2022-10-13 06:56:52",
    "edited": {
      "time_stamp": "2022-10-13 06:57:07"
    },
    "text": "This isn’t something that we support right now, but it’s on our radar as something that we want to make possible directly in HubSpot. No ETA on when that will be though.\n\nOut of curiosity Adam, what’s your use case here? I want to make a note of it so that we can be sure that what we build will meet peoples’ needs"
  },
  {
    "poster": {
      "poster_name": "Angus Gibbs",
      "poster_handle": "agibbs"
    },
    "time_stamp": "2022-10-13 06:58:26",
    "text": "This approach (scheduled trigger + custom code to update the record in Algolia Search) sounds reasonable to me :+1:"
  },
  {
    "poster": {
      "poster_name": "Angus Gibbs",
      "poster_handle": "agibbs"
    },
    "time_stamp": "2022-10-13 06:59:40",
    "text": "You could also set up the workflow to enroll + re-enroll based on the properties that you are trying to sync being saved, rather than enrolling everything on a schedule when many of the objects might be unchanged. Enrolling + re-enrolling on e.g. “first name is known” will also make it so that the changes are reflected more quickly in Algolia Search vs waiting for the scheduled trigger"
  },
  {
    "poster": {
      "poster_name": "Navaz Sharif",
      "poster_handle": "navaz"
    },
    "time_stamp": "2022-10-13 07:28:11",
    "edited": {
      "time_stamp": "2022-10-13 07:29:05"
    },
    "text": "Actually, the scenario here is, our client wants to sync the HubDB table data with Algolia Search and create a cron job for it . I am not able to find any solution for cron job . That's why I am thinking to use workflow scheduler, otherwise I don't think there is much requirement for workflow in my case."
  },
  {
    "poster": {
      "poster_name": "Navaz Sharif",
      "poster_handle": "navaz"
    },
    "time_stamp": "2022-10-13 07:34:11",
    "text": "I have already created serverless-webpack for algolia search. But to hit that API at scheduled time every(day/week or month) automatically within the HubSpot is the challenge for me. Otherwise, I tested it with <http://easycron.com|easycron.com> and it is working perfectly fine."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 07:43:55",
    "text": "I would suggest looking at behavioral events <https://developers.HubSpot.com/docs/api/analytics/events#endpoint?spec=POST-/events/v3/send>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 07:44:37",
    "text": "You can accomplish this functionality (webhook trigger) but it isn't as clean as it could be"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 07:45:08",
    "text": "Or if you want to get real fancy you could setup a serverless function to enroll an object into a workflow"
  },
  {
    "poster": {
      "poster_name": "Angus Gibbs",
      "poster_handle": "agibbs"
    },
    "time_stamp": "2022-10-13 07:45:17",
    "text": "Got it. If you’re looking specifically for something like a cron job, then a scheduled trigger or some third party tool like <http://easycron.com|easycron.com> is going to be your best bet, yeah"
  },
  {
    "poster": {
      "poster_name": "Navaz Sharif",
      "poster_handle": "navaz"
    },
    "time_stamp": "2022-10-13 07:51:08",
    "edited": {
      "time_stamp": "2022-10-13 08:05:39"
    },
    "text": "<@U0157R7AQ84> <@U01QVR44MEY>  that's the issue. The client wants to schedule the trigger within the HubSpot. He does not want to use third party tool like easycron. Is there any way to achieve that?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 07:58:24",
    "text": "So you're saying that the scheduled workflow doesn't work"
  },
  {
    "poster": {
      "poster_name": "Navaz Sharif",
      "poster_handle": "navaz"
    },
    "time_stamp": "2022-10-13 08:02:58",
    "text": "No, its working. My first question is, is my approach good or is there any flaw in that and second, is there any better approach for this."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 08:06:56",
    "text": "Honestly, I've taken this approach before and it's still working fine"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 08:07:19",
    "text": "So I think you're good"
  },
  {
    "poster": {
      "poster_name": "Navaz Sharif",
      "poster_handle": "navaz"
    },
    "time_stamp": "2022-10-13 08:08:44",
    "text": "Thanks <@U01QVR44MEY> <@U0157R7AQ84> for your help. I will implement this in my project then. :innocent:"
  },
  {
    "poster": {
      "poster_name": "Adam Berggren",
      "poster_handle": "adam.berggren"
    },
    "time_stamp": "2022-10-13 08:09:13",
    "text": "Alright, thats what I thought. Well, one of my clients has built a dialling software. And they want to push call data in to HubSpot. So if HubSpot could catch a webhook that would be so easy!"
  },
  {
    "poster": {
      "poster_name": "Adam Berggren",
      "poster_handle": "adam.berggren"
    },
    "time_stamp": "2022-10-13 08:10:43",
    "text": "Carter, Would this still work even if we just want to create an engagement?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 08:12:38",
    "text": "Sounds good, let me know how it goes or if you have any questions"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 08:13:09",
    "edited": {
      "time_stamp": "2022-10-13 08:13:23"
    },
    "text": "i.e. a call?"
  },
  {
    "poster": {
      "poster_name": "Adam Berggren",
      "poster_handle": "adam.berggren"
    },
    "time_stamp": "2022-10-13 08:13:56",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Navaz Sharif",
      "poster_handle": "navaz"
    },
    "time_stamp": "2022-10-13 08:14:01",
    "text": "Yeah sure."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-13 08:16:28",
    "text": "Yeah, you would just have to log the call using custom code in the workflow"
  },
  {
    "poster": {
      "poster_name": "Charles Edmunds",
      "poster_handle": "cedmunds"
    },
    "time_stamp": "2022-10-13 10:42:33",
    "text": "Hi All. I have a situation where we’re using a 3rd party application to handle registrations for virtual events. This 3rd party app sends out email reminders. We want to migrate those reminders and have HS send those out. The idea is to create a generic workflow that takes the time &amp; date of the event that they registered for and send out a reminder sequence of messages (immediately: here’s the link to add to your calendar, 48hrs before event time, 12 hours before event time, 15 minutes before event time). In this particular use case contacts might have registered for more than one event. The idea is to create a single workflow where we can replace variables in the emails so one communication sequence can be used to send out these reminder sequences for all events that are created and to transactional emails to send out these reminders. I was wondering if anyone has any creative ways that we can have this done.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-10-13 22:40:21"
      }
    ]
  },
  {
    "text": "Hi there guys !\n\nI am trying to send an automated email via a workflow based on a deal.\n\nI created a custom module using Hubl that can then be used in the email editor UI.\n\nThe module is then inserted in the email being sent by the workflow\n\n`{% set deal = crm_object(\"deal\", deal.id, \"amount,createdate, ip__ecomm_bridge__abandoned_cart_url\", false) %}`\n`{% set lineitems = crm_associations(deal.id, \"HubSpot_DEFINED\", 19, \"limit=10\", \"name, quantity, hs_images, amount, hs_sku, hs_url\") %}`\n`&lt;link href='<https://fonts.googleapis.com/css?family=Montserrat>' rel='stylesheet'&gt;`\n\n`&lt;table class=\"panier-trevi\" style=\"width:585px;margin: 0 auto;border: 1px solid #c5c5c5; border-collapse:collapse;\"&gt;`\n\n  `&lt;tr style=\"background-color:#f2f2f2;\"&gt;`\n    `&lt;th style=\"text-align:left;\"&gt;{{ module.text_image }}&lt;/th&gt;`\n    `&lt;th style=\"text-align:left;\"&gt;{{ module.text_nom_produit }}&lt;/th&gt;`\n    `&lt;th style=\"text-align:center;\"&gt;{{ module.text_qte }}&lt;/th&gt;`\n    `&lt;th style=\"text-align:right; padding-right:10px;\"&gt;{{ module.text_price }}&lt;/th&gt;`\n  `&lt;tr&gt;`\n\n`{% for lineitem in lineitems.results %}`\n   \n    `&lt;tr&gt;`\n   \n      `&lt;td style=\"width:50px\"&gt;`\n                \n        `{% if (lineitem.hs_url) %}&lt;a href=\"{{lineitem.hs_url}}\"&gt;{% endif; %}`\n\n          `{% if (lineitem.hs_images == null) %}`\n              `&lt;img style=\"width:50px;height:50px;object-fit:none; background: #00aeef;\" src=\"<https://www.trevi.com/media/favicon/default/Favicon-Trevi.ico>\"&gt;`\n          `{% else %}`\n              `&lt;img style=\"width:50px;height:50px;object-fit:cover;\" src=\"{{lineitem.hs_images}}\"&gt;`\n          `{% endif; %}`\n\n        `{% if (lineitem.hs_url) %}&lt;/a&gt;{% endif; %}`\n\n      `&lt;/td&gt;`\n\n      `&lt;td style=\"width:15%;\"&gt;`\n        \n        `{% if (lineitem.hs_url) %}&lt;a href=\"{{lineitem.hs_url}}\"&gt;{% endif; %}`\n          `&lt;p style=\"margin:0;\"&gt;{{lineitem.name}}&lt;/p&gt;`\n        `{% if (lineitem.hs_url) %}&lt;/a&gt;{% endif; %}`\n\n        `{% if (lineitem.hs_sku) %}`\n        `&lt;p style=\"margin:5px 0 0 0;\"&gt;REF: {{lineitem.hs_sku}}&lt;/p&gt;`\n        `{% endif; %}`\n      `&lt;/td&gt;`\n      `&lt;td style=\"width:20%;text-align:center;\"&gt;{{lineitem.quantity}}&lt;/td&gt;`\n      `&lt;td style=\"width:20%;text-align:right;\"&gt;{{lineitem.amount}}&lt;/td&gt;`\n    `&lt;/tr&gt;`\n\n`{% endfor %}`\n\n  `&lt;tr style=\"background-color:#f2f2f2;\"&gt;`\n    `&lt;th&gt;&lt;/th&gt;`\n    `&lt;th&gt;&lt;/th&gt;`\n    `&lt;th style=\"font-weight:500\"&gt;{{ module.text_sous_total }}&lt;/th&gt;`\n    `&lt;th style=\"text-align:right; padding: 10px; font-weight:500;\"&gt;${{ deal.amount }}&lt;/th&gt;`\n  `&lt;tr&gt;`\n\n `&lt;/table&gt;`\n\n\n\nI am trying to fetch the line items of the deal being triggered by the workflow. The issue is that the first line always return the same deal as if its hard-coded to a specific deal no matter what the workflow trigger is.\n\nNo matter what deal is enrolled to that workflow, the email content is always the same. I also printed the deal.id in the email to make sure I was not crazy.\n\nAm I missing something ?\n\nHow can I make the Hubl module I made dynamically select the object id (a deal in this case) being triggered by the workflow so that everything in the email is associated to that deal?\n\nThanks a lot :slightly_smiling_face: !! (modifié)",
    "time_stamp": "2022-10-13 15:35:47",
    "reply_count": 4,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2022-10-16 22:27:07"
      },
      {
        "time_stamp": "2022-10-19 09:08:58"
      },
      {
        "time_stamp": "2022-11-09 14:25:38"
      },
      {
        "time_stamp": "2022-11-09 18:32:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Darian Vretenar",
      "poster_handle": "darian.vretenar"
    },
    "time_stamp": "2022-10-13 22:40:21",
    "text": "<@U044Q60CM7G> DM."
  }
]
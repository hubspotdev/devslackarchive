[
  {
    "poster": {
      "poster_name": "Simon Åberg",
      "poster_handle": "simon.aberg"
    },
    "time_stamp": "2022-04-07 03:41:42",
    "text": "`HubL Sort function`\nHi, I'm working with a HubL sort function sort(False,False, \"relevance\") which seems to crash if any of the items are missing the attribute \"relevence\". Is my understanding correct that the sort function can't handle undefined values and is it any way to work around it?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-04-07 09:51:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-04-07 09:51:30",
    "edited": {
      "time_stamp": "2022-04-07 09:52:28"
    },
    "text": "Hey Simon, I’ve never run into this issue. But im usually looping through objects that are created by HS. So in that case the objects are consistent. But you could always loop through them before you sort them and test to see whether or not that key exists. If it doesnt then use the `update({key: value})` function to add it with a default value. Then you should be able to sort after that."
  }
]
[
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:15:01",
    "edited": {
      "time_stamp": "2023-05-05 12:15:43"
    },
    "text": "When using localhost, i’m missing my HS gear (hs-sprocket) icon in the top right corner. Is anyone else experiencing this?",
    "reply_count": 25,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-05-05 12:16:14"
      },
      {
        "time_stamp": "2023-05-05 12:16:26"
      },
      {
        "time_stamp": "2023-05-05 12:18:44"
      },
      {
        "time_stamp": "2023-05-05 12:19:22"
      },
      {
        "time_stamp": "2023-05-05 12:20:25"
      },
      {
        "time_stamp": "2023-05-05 12:21:35"
      },
      {
        "time_stamp": "2023-05-05 12:22:15"
      },
      {
        "time_stamp": "2023-05-05 12:23:19"
      },
      {
        "time_stamp": "2023-05-05 12:23:39"
      },
      {
        "time_stamp": "2023-05-05 12:23:45"
      },
      {
        "time_stamp": "2023-05-05 12:24:28"
      },
      {
        "time_stamp": "2023-05-05 12:25:29"
      },
      {
        "time_stamp": "2023-05-05 12:31:00"
      },
      {
        "time_stamp": "2023-05-05 12:32:01"
      },
      {
        "time_stamp": "2023-05-05 12:50:57"
      },
      {
        "time_stamp": "2023-05-05 13:01:06"
      },
      {
        "time_stamp": "2023-05-05 13:04:42"
      },
      {
        "time_stamp": "2023-05-05 13:06:19"
      },
      {
        "time_stamp": "2023-05-05 13:07:15"
      },
      {
        "time_stamp": "2023-05-08 10:19:31"
      },
      {
        "time_stamp": "2023-05-08 10:19:41"
      },
      {
        "time_stamp": "2023-05-08 10:56:42"
      },
      {
        "time_stamp": "2023-05-08 10:57:43"
      },
      {
        "time_stamp": "2023-05-11 09:21:26"
      },
      {
        "time_stamp": "2023-05-15 10:27:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 12:16:14",
    "text": ":wave: - Is this is the \"proxy\" scenario? i.e. `mydomain.com.localhost:3000/path/to/page` ?"
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:16:26",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:18:44",
    "text": "When i’m not within the proxy version, I do see the icon"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 12:19:22",
    "text": "Hmm yeah, good callout. Without digging too deep at the moment, seems like we should be able to support this. Likely the domain of the proxy URL is confusing to the sprocket menu script."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 12:20:25",
    "text": "Would you say it's a significant blocker at the moment?"
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:21:35",
    "edited": {
      "time_stamp": "2023-05-05 12:21:41"
    },
    "text": "I’m in a testing phase at the moment to figure out how our team will start to implement this feature in new projects moving forward. So no, not a blocker at the moment"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 12:22:15",
    "text": "Ok, I'll take note of it for sure, and add to the roadmap. Thank you for digging on this feature and the feedback here :thankyou:"
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:23:19",
    "text": "Just one quick question so I can set expectations while we await this response. Will the edit experience in the proxy version be similar to the version we see on the live version?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 12:23:39",
    "text": "As in the page editor?"
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:23:45",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 12:24:28",
    "edited": {
      "time_stamp": "2023-05-05 12:24:50"
    },
    "text": "At the moment we don't have plans to combine the marketer editing experience (page editor) with the local development flow."
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:25:29",
    "text": "Makes sense. Do you have a screenshot of what the experience would look like so I have a better idea. Again just trying to set exceptions."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 12:31:00",
    "text": "I think it's an interesting/compelling concept. The idea of editing a page (content object) along side making local changes to a module. However, in the current world I don't see how it could work in that changes to the page object would affect current live versions of modules and that might be problematic.\n\nMaybe there's a world where a mock page can be associated with a local dev session/module changes to facilitate that kind experience. Though we haven't started thinking about what that would look like.\n\nSaid another way, there is no conceived of experience for page editing along side the current local dev server proxy. This proxy view is meant to show what local changes to a JS Module would look like inside a current page."
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 12:32:01",
    "text": "Got it. Ok good to know. Thanks again"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-05-05 12:50:57",
    "edited": {
      "time_stamp": "2023-05-05 12:54:25"
    },
    "text": "Some really interesting and good feedback here, I echo the thanks from <@UAYBXDG4U>. One thing I’d love to dig into more if/when we have a chance (I’m about to pick  someone up from the airport), is the specific benefits to hooking the local development and page editing experience together (beyond local proxy “view only” rendering or other potential ways to view page/module permutations locally)\n\nSome things that I can think of: \n1. Seeing and testing the same experience that your non-dev clients or colleagues will be using later when creating and editing pages (without having to deploy, do later, faster feedback loop, etc)\n2. Easily tweaking various module field values and seeing how those permutations impact your local JS components rendering &amp; code\n3. Being able to quickly change the page with drag and drop and seeing how your JS components handle it\n4. Others?\nI’m curious to know what the other benefits might be and how you rank them (and the above). And how that could compare to something like using a locally mocked page (somePageOverries.json that you edit in a text editor?) or using storybook js locally to tweak module values and preview the page vs doing that through the current page editing experience that hits your local dev server. \n\nDefinitely no wrong answers here, trying to learn what is would be most valuable for your workflow (pie-in-the-sky ideas totally accepted :wink: )"
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 13:01:06",
    "text": "We currently have an experience where we use storybook to mock jsx locally. It’s been really helpful as it removes the need to compile and deploy at the same time which saves hours worth of work. This is why I was trying to see how far this new experience is.\n\nThat said, I do like the use cases you’ve laid out so far. Once i’ve had time to get more familiar with this new setup, I might circle back on this.\n\nThanks again"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 13:04:42",
    "text": "Currently we have a storybook integration which may fit this use case.\n\nIn your module directory you can create a story `MyModule.stories.jsx` for example. In that file, you can make use of a utility to create stories with args based on the Module Fields.\n\n```import { moduleStory } from '@HubSpot/cms-dev-server';\n\nimport { Component, fields } from './index.jsx';\n\nexport default {\n  title: 'My Module Stories',\n  component: Component,\n};\n\nexport const Default = moduleStory(Component, fields);```\nWhen you run the dev server, you can use the `--storybook` flag to spin up storybook."
  },
  {
    "poster": {
      "poster_name": "Karey Mitchell",
      "poster_handle": "kareybm"
    },
    "time_stamp": "2023-05-05 13:06:19",
    "text": "Game changer right here!! And I was thinking I may have to setup my own stories lol. You guys already thought of everything lol"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-05-05 13:07:15",
    "text": "`moduleStory` takes a 3rd argument which would be field value overrides:\n\n```export const Default = moduleStory(Component, fields, {\n  fieldName: 'field value override'\n});```"
  }
]
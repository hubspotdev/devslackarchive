[
  {
    "poster": {
      "poster_name": "Thomas",
      "poster_handle": "lass"
    },
    "time_stamp": "2020-03-12 03:27:05",
    "text": "Does anyone else have the problem of arranging 12 modules in a row?"
  },
  {
    "text": "_What’s the recommended practice for the DND pages and responsitivity?_\n_Can you disable these options?_\n_Or better have draggable sections with developer defined options that you can then drag modules into_",
    "time_stamp": "2020-03-12 04:01:09",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-03-12 05:56:58"
      },
      {
        "time_stamp": "2020-03-12 06:07:22"
      },
      {
        "time_stamp": "2020-03-12 08:37:44"
      },
      {
        "time_stamp": "2020-03-12 10:08:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2020-03-12 05:56:58",
    "text": "I’m working on this as well, Erik.  There is a way to set your own defaults that I’m trying to sort out.  But I’m with you in that the options available are super limited.\n\n<https://designers.HubSpot.com/docs/hubl/hubl-supported-tags/dnd-areas>"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2020-03-12 06:00:33",
    "edited": {
      "time_stamp": "2020-03-12 06:03:19"
    },
    "text": "Can anyone help clarify the convention for writing out the parameters inside a HubL variable??\n\n\n```{% dnd_section\n  background_image={\n    'backgroundPosition': 'MIDDLE_CENTER',\n    'backgroundSize': 'cover',\n    'imageUrl': '<https://example.com/path/to/image.jpg>'\n  },\n  margin={\n    'top': 20,\n    'bottom': 200\n  },\n  padding={\n    'top': 20,\n    'bottom': 200,\n    'left': 20,\n    'right': 20\n  },\n  max_width=1200,\n  vertical_alignment='MIDDLE'\n%}\n\n{% end_dnd_section %}```\nSome require the ‘single-quote’ like the vertical_alignment.\n\nSome don’t like the max_width.\n\n*How you do you use full_width?*   I’m assuming full_width=‘true’ but it doesn’t seem to be working.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-03-12 06:39:37"
      },
      {
        "time_stamp": "2020-03-12 07:18:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2020-03-12 06:07:22",
    "text": "<@UA5DFM7CK> Yea, still that hardcodes an overwriting padding, which wont work for us"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-03-12 06:39:37",
    "text": "numbers/integers do not need quotes, but strings do"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2020-03-12 07:18:23",
    "text": "Thanks <@U3T21PDBK>"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2020-03-12 08:37:44",
    "text": "Hi there, responsive editing is very much top of mind for us right now. What would you both say is your best case scenario when it comes to developer and page editor controls?"
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2020-03-12 10:08:21",
    "text": "<@U8THBCFC4> The best case would be to have developer controlled options for “section types” where the settings could be used to set classes etc (like modules today). So instead of saying i want 100px padding top, i want “big”"
  }
]
[
  {
    "poster": {
      "poster_name": "Helder Vilela",
      "poster_handle": "dev"
    },
    "time_stamp": "2020-07-17 03:31:24",
    "text": "Hello,\nis possible to get the theme settings outside of css file?\ncurrently I can only get the object inside a CSS file",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-17 06:31:21"
      },
      {
        "time_stamp": "2020-07-17 06:33:23"
      },
      {
        "time_stamp": "2020-07-17 06:43:47"
      },
      {
        "time_stamp": "2020-07-17 07:23:26"
      },
      {
        "time_stamp": "2020-07-17 07:23:35"
      },
      {
        "time_stamp": "2020-07-17 07:39:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-07-17 06:31:21",
    "text": "Hey there, because theme settings are intended to be mostly presentational. right now it’s intended to be used in CSS files.\n\nWhat is it that you’re trying to do that it’d be useful for theme settings to control?"
  },
  {
    "poster": {
      "poster_name": "Helder Vilela",
      "poster_handle": "dev"
    },
    "time_stamp": "2020-07-17 06:33:23",
    "text": "Hello\nSeveral things.\n- Control speed of sliders\n- Choose different partials / modules for the header or footer."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-07-17 06:43:47",
    "edited": {
      "time_stamp": "2020-07-17 06:48:30"
    },
    "text": "Interesting, I think for the different partials/modules we may end up solving for a different way. Controlling the speed of sliders is an interesting one.\n\nI see a work-around that could be used for that:\nin your stylesheet target your slider module, or a top level element like `&lt;body&gt;` , add a css custom property `--sliderSpeed:` set this to your number field’s output.\n\nThen use javascript to get this value to use it in your slider script.\n\nA different solution:\nIt’s not directly documented right now but I think it should be possible to inherit the theme’s field values within your module.\n<https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields-overview#inherited-fields>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 06:47:07",
    "text": "Can I somehow export all of the content of a website page so that I can sync it with its duplicate sandbox site? It would be much easier to work off the same exact content.",
    "reply_count": 13,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-07-17 06:51:40"
      },
      {
        "time_stamp": "2020-07-17 07:50:54"
      },
      {
        "time_stamp": "2020-07-17 07:51:03"
      },
      {
        "time_stamp": "2020-07-17 07:52:27"
      },
      {
        "time_stamp": "2020-07-17 07:52:34"
      },
      {
        "time_stamp": "2020-07-17 07:52:43"
      },
      {
        "time_stamp": "2020-07-17 07:57:46"
      },
      {
        "time_stamp": "2020-07-17 07:57:58"
      },
      {
        "time_stamp": "2020-07-17 08:18:12"
      },
      {
        "time_stamp": "2020-07-17 08:19:44"
      },
      {
        "time_stamp": "2020-07-17 08:19:52"
      },
      {
        "time_stamp": "2020-07-17 08:40:11"
      },
      {
        "time_stamp": "2020-07-17 08:41:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-07-17 06:51:40",
    "text": "It’s not a perfect solution but.\nYou could use the get page by id api\n<https://legacydocs.HubSpot.com/docs/methods/pages/get_pages_page_id>\n\nThen use the create page API to  create a page using the data from the other API call.\n<https://legacydocs.HubSpot.com/docs/methods/pages/post_pages>"
  },
  {
    "poster": {
      "poster_name": "Helder Vilela",
      "poster_handle": "dev"
    },
    "time_stamp": "2020-07-17 07:23:26",
    "text": "That is what I am doing.\nIn fact I create a set of vars for all settings"
  },
  {
    "text": "like:",
    "time_stamp": "2020-07-17 07:23:35"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-07-17 07:39:00",
    "text": "smart!\n\nyeah what I was meaning was to do that with your slider speed stuff as well then use JS to read the custom property. That way your JS is influenced by it and can actually change the speed of the slider"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-17 07:50:54",
    "text": "hey <@UDHT6N5SM>"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-17 07:51:03",
    "text": "<https://github.com/kieranja/HubSpot-content-sync>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 07:52:27",
    "text": "awesome and terrifying :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-17 07:52:34",
    "text": ":smile:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-17 07:52:43",
    "edited": {
      "time_stamp": "2020-07-17 07:53:11"
    },
    "text": "its very crude, and only handles pages - the HubSpot API doesnt support writing menus / CTAs via the API"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 07:57:46",
    "text": "I’ll give it a shot"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 07:57:58",
    "text": "I kinda want to try the API myself just as a learning experience"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 08:18:12",
    "text": "do you think reading through the index.js file is a good place to start if learning how to work with the API itself?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 08:19:44",
    "text": "dumb question, it’s definitely a great way of seeing how this works"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 08:19:52",
    "edited": {
      "time_stamp": "2020-07-17 08:19:58"
    },
    "text": "plus I relate to some of your comments"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-17 08:40:11",
    "text": "sure"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-17 08:41:10",
    "edited": {
      "time_stamp": "2020-07-17 15:11:41"
    },
    "text": "A healthy mixture of reading and writing PoC’s is how i learn best :smile:"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-07-17 08:47:34",
    "text": "We're also planning to add `hs create vue-app` . If you have thoughts on how the boilerplate should work, feel free to add thoughts to <https://github.com/HubSpot/HubSpot-cms-tools/issues/217>."
  },
  {
    "poster": {
      "poster_name": "Evan Grim",
      "poster_handle": "whiteship1120"
    },
    "time_stamp": "2020-07-17 12:39:04",
    "text": "Working on a windows machine and using git. Have I addressed the CRLF issue correctly here?\n\n\"warning: LF will be replaced by CRLF in some-custom-style.css.\nThe file will have its original line endings in your working directory\""
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2020-07-17 14:00:34",
    "text": "<@U2H3TT8F2> this is a great feature, and already opening some new possibilities for us... wondering if it is possible (or if plan in place) to create custom elements for the RTE? I.e. The ability to add a new button the the RTE toolbar... Would operate similar to the blockquote functionality, but we could specify the wrapping html (and maybe the button icon) in the fields.json file?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-07-17 15:52:13",
    "text": "This is an awesome idea <@UJQNNKKHN>. I'm not sure off hand what the team is looking into. Let me check and follow up with you. Cc <@U8THBCFC4>  <@UA7JFQSQ0>"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2020-07-17 16:05:44",
    "text": "We’ve thought a big about this! Where would expect an end user to select custom elements? Also if you have more use cases for adding custom elements that would be super helpful :slightly_smiling_face:"
  }
]
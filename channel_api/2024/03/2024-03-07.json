[
  {
    "poster": {
      "poster_name": "Ben",
      "poster_handle": "b.burden"
    },
    "time_stamp": "2024-03-07 01:02:56",
    "text": "Thanks Ryan - <https://blog.archax.com/newsfeed/-temporary-slug-c4c33a53-871d-46de-8ea6-664d60331d18>"
  },
  {
    "text": "",
    "time_stamp": "2024-03-07 01:05:36"
  },
  {
    "poster": {
      "poster_name": "Mattis Rosenkranz",
      "poster_handle": "m.rosenkranz"
    },
    "time_stamp": "2024-03-07 04:04:12",
    "text": "Hey, is there a way to add a hubdb column description via the HubSpot api? I found nothing in the docs and the typescript types of the js library"
  },
  {
    "poster": {
      "poster_name": "Mattis Rosenkranz",
      "poster_handle": "m.rosenkranz"
    },
    "time_stamp": "2024-03-07 04:10:27",
    "text": "Also am I right that theres no way of making a hubdb column required to fill before publishing rows?"
  },
  {
    "poster": {
      "poster_name": "Lars van der Water",
      "poster_handle": "l.vanderwater"
    },
    "time_stamp": "2024-03-07 07:47:25",
    "text": "Hello HubSpot Developers,\n\nDoes someone have any experience with email object creation through the HubSpot API and their visibility in the help desk inbox?\n\nWe've successfully connected our shared email to our helpdesk on HubSpot. However, we've come across an issue where the HTML content of engagement objects created through the HubSpot API, with the recipient being this shared email, isn't visible within our help desk environment. In contrast, incoming emails to the shared support email address display the content correctly.\n\nI would greatly appreciate any suggestions on how to tackle this problem as all the leads we had led to dead ends.",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-07 08:48:22"
      },
      {
        "time_stamp": "2024-03-07 09:19:36"
      },
      {
        "time_stamp": "2024-03-07 09:24:52"
      },
      {
        "time_stamp": "2024-03-07 09:26:32"
      },
      {
        "time_stamp": "2024-03-07 09:28:11"
      },
      {
        "time_stamp": "2024-03-07 09:28:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Roeland Schoppers",
      "poster_handle": "r.schoppers"
    },
    "time_stamp": "2024-03-07 08:22:21",
    "text": "Hey all how do you create a thread with the HubSpot api instead of an email?",
    "reply_count": 43,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2024-03-07 08:22:50"
      },
      {
        "time_stamp": "2024-03-07 08:23:17"
      },
      {
        "time_stamp": "2024-03-07 08:51:30"
      },
      {
        "time_stamp": "2024-03-07 08:53:19"
      },
      {
        "time_stamp": "2024-03-07 08:59:38"
      },
      {
        "time_stamp": "2024-03-07 09:02:35"
      },
      {
        "time_stamp": "2024-03-07 12:02:07"
      },
      {
        "time_stamp": "2024-03-07 12:03:55"
      },
      {
        "time_stamp": "2024-03-07 12:05:48"
      },
      {
        "time_stamp": "2024-03-07 12:26:01"
      },
      {
        "time_stamp": "2024-03-07 12:27:49"
      },
      {
        "time_stamp": "2024-03-08 00:45:22"
      },
      {
        "time_stamp": "2024-03-14 03:25:57"
      },
      {
        "time_stamp": "2024-03-15 04:51:56"
      },
      {
        "time_stamp": "2024-03-15 09:04:28"
      },
      {
        "time_stamp": "2024-03-15 09:06:07"
      },
      {
        "time_stamp": "2024-03-15 09:07:59"
      },
      {
        "time_stamp": "2024-03-17 06:45:19"
      },
      {
        "time_stamp": "2024-03-19 01:43:36"
      },
      {
        "time_stamp": "2024-06-04 08:31:33"
      },
      {
        "time_stamp": "2024-06-04 13:31:17"
      },
      {
        "time_stamp": "2024-06-04 13:32:31"
      },
      {
        "time_stamp": "2024-06-04 13:32:44"
      },
      {
        "time_stamp": "2024-06-25 05:26:46"
      },
      {
        "time_stamp": "2024-06-25 05:36:48"
      },
      {
        "time_stamp": "2024-06-25 06:32:05"
      },
      {
        "time_stamp": "2024-06-25 06:34:25"
      },
      {
        "time_stamp": "2024-06-25 13:45:31"
      },
      {
        "time_stamp": "2024-06-25 13:48:51"
      },
      {
        "time_stamp": "2024-06-26 02:28:21"
      },
      {
        "time_stamp": "2024-08-13 10:15:18"
      },
      {
        "time_stamp": "2024-08-13 12:18:14"
      },
      {
        "time_stamp": "2024-08-14 01:54:09"
      },
      {
        "time_stamp": "2024-11-04 18:37:44"
      },
      {
        "time_stamp": "2024-11-05 00:42:09"
      },
      {
        "time_stamp": "2024-11-05 00:42:55"
      },
      {
        "time_stamp": "2024-11-05 00:58:28"
      },
      {
        "time_stamp": "2024-11-06 14:14:03"
      },
      {
        "time_stamp": "2024-11-06 15:15:04"
      },
      {
        "time_stamp": "2024-11-07 00:10:57"
      },
      {
        "time_stamp": "2024-11-11 08:00:46"
      },
      {
        "time_stamp": "2024-11-12 03:10:10"
      },
      {
        "time_stamp": "2024-11-12 03:43:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Roeland Schoppers",
      "poster_handle": "r.schoppers"
    },
    "time_stamp": "2024-03-07 08:22:50",
    "text": "Save me <@U03N5FHUHQT> you are our only hope."
  },
  {
    "poster": {
      "poster_name": "Roeland Schoppers",
      "poster_handle": "r.schoppers"
    },
    "time_stamp": "2024-03-07 08:23:17",
    "text": ":baby-yoda:"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-07 08:48:22",
    "text": "There might be differences in how the HTML content is encoded or formatted when sent via the API compared to regular incoming emails. This could potentially affect how the content is displayed in your helpdesk environment."
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-07 08:51:30",
    "text": "Sorry :cry:, don't think what you intend is possible.\nAn email thread is nothing more than a reply (to a reply to a ...).\nThe <https://developers.HubSpot.com/docs/api/marketing/single-send-api|single send API> allows you to send out the first email and you can have the reply to go to say your outlook / gmail account so you can reply on the reply, which is a thread.\nBut what I assume you are looking for is more an auto-reply mechanism. And no, not possible through he API and not aware of this being in development. But the big guys don't keep me in the loop of everything :laughing:."
  },
  {
    "poster": {
      "poster_name": "Roeland Schoppers",
      "poster_handle": "r.schoppers"
    },
    "time_stamp": "2024-03-07 08:53:19",
    "text": "Thanks for the quick reply <@U03N5FHUHQT> :heart:\n\nThe reason we wanted to do this - is because with the new Help Desk feature - we don't see any of the email conversations within the tickets that we sent over from Zoho Desk using the HubSpot API. But we do see those email conversations when viewing them from the 'old' ticket view.\n\nSo our impression was that you had to create them as threads to see them in Help Desk but perhaps this impression was wrong."
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-07 08:59:38",
    "text": "Now I get the question. Will see if I can give a better answer (BIG IF) later this evening."
  },
  {
    "poster": {
      "poster_name": "Roeland Schoppers",
      "poster_handle": "r.schoppers"
    },
    "time_stamp": "2024-03-07 09:02:35",
    "text": "Thanks youre the best!"
  },
  {
    "poster": {
      "poster_name": "Lars van der Water",
      "poster_handle": "l.vanderwater"
    },
    "time_stamp": "2024-03-07 09:19:36",
    "text": "Hi <@U06NE4F7E9Y>,\n\nThank you for your reply. I think I have a lead on what the issue is. The emails seen in the helpdesk environment are not engagement/email objects, but thread messages. Therefore, I think the email objects I created are not seen on the help desk.\n\nThat still leaves me with the issue that I am unable to determine how to create threads and, subsequently, thread messages for this thread, but it seems like this functionality is not ready yet in the conversations API since they are still in Beta..."
  },
  {
    "poster": {
      "poster_name": "Matt Cannizzo",
      "poster_handle": "matt904"
    },
    "time_stamp": "2024-03-07 09:24:45",
    "edited": {
      "time_stamp": "2024-03-07 09:24:53"
    },
    "text": "Does a public app installed into a customer's portal (i.e. Snowflake data share) count against that portal's API limits?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-08 03:43:35"
      },
      {
        "time_stamp": "2024-03-11 07:08:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-07 09:24:52",
    "text": "It's great that you've identified the distinction between engagement/email objects and thread messages in your helpdesk environment. If the functionality you need is not yet available in the Conversations API due to it being in Beta, you may need to explore alternative solutions or workarounds until the feature is officially released.:+1:"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-07 09:26:32",
    "text": "It's to keep an eye on updates from HubSpot regarding the Conversations API.\nBut while the Conversations API might be in Beta, there could be other APIs or workarounds available to achieve your goal. If so, you can review the HubSpot API documentation thoroughly to see if there are alternative methods or endpoints that can help you create threads or thread messages indirectly."
  },
  {
    "poster": {
      "poster_name": "Lars van der Water",
      "poster_handle": "l.vanderwater"
    },
    "time_stamp": "2024-03-07 09:28:11",
    "text": "Yes, you make some good points, I will definitely search for a workaround. Thank you for thinking with me <@U06NE4F7E9Y>, I really appreciate it!"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-07 09:28:59",
    "text": "welcome.:laughing:"
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 10:49:58",
    "text": "Good morning!\nI am building a CRM Card to display information fetched from ClickUp for ticket objects in HubSpot. The goal is to have the CRM Card display on Tickets and show *only* the corresponding ClickUp Task for that ticket. And that is where we are having some issues.\n\nWe are limited to CRM Cards as we lack the Enterprise subscription for UI Extensions, and I have built a Public App in the Developer account which can show success when communicating with other services, but for some reason, fails and throws errors whenever it tries with ClickUp. Does ClickUp require additional steps that I may have overlooked, or is this something that is not possible to do with CRM Cards?\n\nAny help would greatly be appreciated.\n\nExtra information:\n• So far, we are using Zapier to create a ClickUp task whenever a new ticket is submitted. But we want any changes, and just the general information of the created task to appear as a CRM Card within the associated Ticket in HS.\n• We also need the information to be as up to date as possible from ClickUp\n• If this cannot be done with CRM Cards, then that's fine, but we need to roll this out first before continuing",
    "reply_count": 20,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-07 11:00:18"
      },
      {
        "time_stamp": "2024-03-07 11:00:50"
      },
      {
        "time_stamp": "2024-03-07 11:01:04"
      },
      {
        "time_stamp": "2024-03-07 11:02:12"
      },
      {
        "time_stamp": "2024-03-07 11:09:02"
      },
      {
        "time_stamp": "2024-03-07 11:11:01"
      },
      {
        "time_stamp": "2024-03-07 11:16:45"
      },
      {
        "time_stamp": "2024-03-07 11:17:17"
      },
      {
        "time_stamp": "2024-03-07 11:23:17"
      },
      {
        "time_stamp": "2024-03-07 11:30:45"
      },
      {
        "time_stamp": "2024-03-07 11:31:24"
      },
      {
        "time_stamp": "2024-03-07 11:31:37"
      },
      {
        "time_stamp": "2024-03-07 11:33:22"
      },
      {
        "time_stamp": "2024-03-07 11:34:06"
      },
      {
        "time_stamp": "2024-03-07 11:34:26"
      },
      {
        "time_stamp": "2024-03-07 11:34:29"
      },
      {
        "time_stamp": "2024-03-07 11:34:33"
      },
      {
        "time_stamp": "2024-03-07 11:35:01"
      },
      {
        "time_stamp": "2024-03-07 11:39:01"
      },
      {
        "time_stamp": "2024-03-07 11:43:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:00:18",
    "text": "Ok - First, I haven't built any CRM Cards, only UI Extensions.  I have a  few questions....\n\n1.) New tickets gets created in HubSpot and then you use Zapier to create a corresponding \"ticket/item\" in ClickUp - Is that correct?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:00:50",
    "text": "2.) Can you elaborate on this? \"But we want any changes, and just the general information of the created task to appear as a CRM Card within the associated Ticket in HS.\"?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:01:04",
    "text": "-Changes from Hubspt? Changes from ClickUp?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:02:12",
    "text": "3.) Are you storing the hs_object_id in ClickUp so you have a unique identifier to fetch the related ClickUp task?"
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 11:09:02",
    "text": "1. Yes. Whenever a ticket is created within HubSpot, using Zapier, a ClickUp task is created that holds the following information: ticket status, ticket description, ticket ID, who submitted the ticket, ticket priority, and other smaller things such as Date and Times.\n2. We are wanting changes in ClickUp to reflect on HubSpot. What happens is that we do a majority of our documentation in ClickUp and would like changes made to ClickUp to reflect on the HS CRM Card. The HubSpot ticket more or less is not touched after creation.\n3. We are storing the hs_object_id in both the description of the ClickUp task as well as in a custom field - the custom field only contains the ticket ID"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:11:01",
    "text": "Ok - When you make a \"GET\" request to ClickUp - you send them hs_object_id or you send the ClickUp task id which you have stored in the ticket?"
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 11:16:45",
    "text": "So with CRM Cards, you utilize a Data Fetch URL which is more or less a webhook that sends a \"GET\" request. When we send it using the \"hs_object_id\" an error returns just as with any other communication with clickup. We've also tried including the \"hs_ticket_id\" as well, both paired with the object_id and not with the same results.\n\nWe have also tried sending the task ID, or rather, we have the task ID written directly in the Data Fetch URL since we are using the same task to test this with. We have tried other tasks and were met with the same result, so we setup the current task which is a control."
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 11:17:17",
    "text": "We have also tried sending the task ID as a parameter"
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 11:23:17",
    "text": "I am able to retrieve the needed information from my local development environment with little issues using the same URLs/Webhook"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:30:45",
    "text": "After skimming through the docs, I'm not seeing how the CRM Card is able to send headers for authorization."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:31:24",
    "text": "Are you sending the following...\n\n```'Authorization: YOUR_API_KEY_HERE'```\n"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:31:37",
    "text": "This is referring to the ClickUp Api Key"
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 11:33:22",
    "text": "Well, my fear is that because of that limitation or something similar, that will not allow me to do what is needed.  I am not able to send that authorization from my current understanding with the CRM Cards"
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 11:34:06",
    "text": "And now that I'm thinking of it more, I think that's the issue here. In my local development I have that implemented, but I don't believe that the CRM Cards are able to do that"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:34:26",
    "text": "yes - I think thats your current road block to be honest"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:34:29",
    "text": "Butttt...."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:34:33",
    "text": "You have Zapier"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:35:01",
    "text": "So why not configure a Zapier action that your card talks to?"
  },
  {
    "poster": {
      "poster_name": "Chandler Bolton",
      "poster_handle": "chandler.bolton"
    },
    "time_stamp": "2024-03-07 11:39:01",
    "text": "The main issue with that is our current subscription is the free one which nets us about 20 zaps a month. I might see if it's possible to talk directly to zapier. I think I'll try that. I can get similar things working, however, CRM Cards cannot show HubSpot hosted info unlike UI Extensions. I'll try that and if it doesn't work, well now I know that it isn't possible with our current means. Thank you for your help!"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 11:43:50",
    "text": "yw!"
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-07 12:02:07",
    "text": "For everyone but Roeland: I cheat. I work at HubSpot and use the superpower to access Roeland's portal to (partially) answer the question."
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-07 12:03:55",
    "text": "Roeland: you ask in a public space, so I will show as much of your data as I feel is helpful, but hope you understand that my 'use good judgement' says: remove a whole bunch."
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-07 12:05:48",
    "edited": {
      "time_stamp": "2024-03-07 12:16:07"
    },
    "text": "If I look at the data structure I am concerned by some properties. Please put in the ticket number in the GraphQL query as below and review the results as you continue to read my rant...\n\nquery MyQuery {\n  CRM {\n    ticket(uniqueIdentifier: \"hs_object_id\", uniqueIdentifierValue: \"INSERT YOUR TICKET NUMBER HERE\") {\n      subject\n      associations {\n        email_collection__ticket_to_email {\n          items {\n            hs_email_subject\n            HubSpot_owner_id\n            hs_direction_and_unique_id\n            hs_object_source\n            hs_email_html\n            hs_email_headers\n          }\n        }\n      }\n    }\n  }\n}"
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-07 12:26:01",
    "edited": {
      "time_stamp": "2024-03-07 12:26:25"
    },
    "text": "Ticket subject: was just to show we get the right ticket. Quite obsolete actually.\n\n\"hs_email_subject\": \"__NOTE...\nI get really nervous by having two underscores as sometimes HubSpot interprets that as a variable and processes it. Should not be an issue and this is more a 'me' thing.\n\nNot too concerned about this one:\n\"HubSpot_owner_id\": {},\nBut it should usually contain the info of the owner.\n\nThe one that comes closer to 'how to make a thread:\n\"hs_direction_and_unique_id\": null,\nThis should be a value.\nSo for instance:\n\"hs_direction_and_unique_id\": \"INCOMING_EMAIL:839c449909728d329690d0a06f6bdd78\",\nI believe the unique ID is based on the direction (dough) and the hashed unixtime it was received or something like that. But as long as it is unique it should be fine.\n\n\"hs_object_source\": \"INTEGRATION\",\nThis is wrong. This alone will break it.\nFor the emails it should be:\n\"hs_object_source\": \"EMAIL\",\n\nhs_email_html.\nThis is the email itself.\nWe expect something like: *<html>\\n<body>*  for HTML emails.\nYours starts with: *<meta><meta><style></style><div lang=\\\"NL\\\" style=\\\"\\\" class=\\\" zm_-5372438914244513360_parse_253222836653345317\\\">*\nNot sure about the impact of not declaring things properly, still something to consider.\n\nhs_email_headers\nJust mentioning this, but would be one of the last things I would look at. Is missing some stuff like\n[{\\\"raw\\\":\\\"<mailto:support@yourdomain.com|support@yourdomain.com>\\\",\\\"email\\\":\\\"<mailto:support@yourdomain.com|support@yourdomain.com>\\\"}],\\\"cc\\\":[{\\\"raw\\\":\\\"<mailto:service@yourdomain.com|service@yourdomain.com>\\\",\\\"email\\\":\\\"<mailto:service@yourdomain.com|service@yourdomain.com>\\\"}],\\\"bcc\\\":[],\\\"sender\\\":{\\\"email\\\":\\\"<mailto:support@yourdomain.hs-inbox.com|support@yourdomain.hs-inbox.com>\\\"}}\""
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-07 12:27:49",
    "text": "So to recap: Try the hs_object_source first :rolling_on_the_floor_laughing:"
  },
  {
    "poster": {
      "poster_name": "Jhovenell Manait",
      "poster_handle": "jhov"
    },
    "time_stamp": "2024-03-07 12:32:50",
    "text": "Thanks <@U03V4SXCNLT>, I'll check this out"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-07 12:40:00",
    "text": "Are you logged in to HubSpot before clicking that URL?"
  },
  {
    "poster": {
      "poster_name": "Stacey Levine",
      "poster_handle": "stacey856"
    },
    "time_stamp": "2024-03-07 14:15:05",
    "text": "<@U01GW2U4WMA> - can you share a sample on how you search custom properties?"
  },
  {
    "poster": {
      "poster_name": "Nick Gehring",
      "poster_handle": "ngehring"
    },
    "time_stamp": "2024-03-07 14:27:16",
    "text": "<@U06MTD7NKB9> At least in your case, these are staged pages."
  },
  {
    "poster": {
      "poster_name": "Casey Vassios",
      "poster_handle": "cvassios"
    },
    "time_stamp": "2024-03-07 14:54:56",
    "text": "Just started getting this error yesterday and have no idea what it means. Is HubSpots SSL certificate expired?\n\n```curl: (60) Peer certificate cannot be authenticated with known CA certificates\nMore details here: <http://curl.haxx.se/docs/sslcerts.html>\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). If the default\n bundle file isn't adequate, you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.```"
  },
  {
    "poster": {
      "poster_name": "Roeland Schoppers",
      "poster_handle": "r.schoppers"
    },
    "time_stamp": "2024-03-08 00:45:22",
    "text": "Awesome <@U03N5FHUHQT> thanks for the detailed and helpful answer as always. Will look into all of this!"
  }
]
[
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2017-11-20 02:53:33",
    "text": "Hey all! Would love to learn a little more about what kinds of CSS and markup changes you had in mind. I work with the team who build forms here at HubSpot, so any feedback you have is very helpful!",
    "reply_count": 18,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2017-11-20 05:41:18"
      },
      {
        "time_stamp": "2017-11-20 05:42:44"
      },
      {
        "time_stamp": "2017-11-20 05:52:30"
      },
      {
        "time_stamp": "2017-11-20 05:54:40"
      },
      {
        "time_stamp": "2017-11-20 06:06:48"
      },
      {
        "time_stamp": "2017-11-20 06:09:05"
      },
      {
        "time_stamp": "2017-11-20 06:11:41"
      },
      {
        "time_stamp": "2017-11-20 06:23:42"
      },
      {
        "time_stamp": "2017-11-20 12:37:31"
      },
      {
        "time_stamp": "2017-11-21 04:49:08"
      },
      {
        "time_stamp": "2017-11-21 06:12:14"
      },
      {
        "time_stamp": "2017-11-21 10:36:53"
      },
      {
        "time_stamp": "2017-11-21 10:42:20"
      },
      {
        "time_stamp": "2017-11-21 10:46:04"
      },
      {
        "time_stamp": "2017-11-21 10:58:42"
      },
      {
        "time_stamp": "2017-11-21 12:26:19"
      },
      {
        "time_stamp": "2017-11-21 12:40:33"
      },
      {
        "time_stamp": "2017-11-22 04:46:51"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-20 05:41:18",
    "text": "hey <@U24DCSJBE> I think <@U7SL518D6> primarily wanted a way to style radios, checkboxes, and select inputs easier by having a wrapper class for each. e.g. \"hs-input-select\", \"hs-input-radio\", \"hs-input-checkbox\"."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-20 05:42:44",
    "text": "but taking that a step further, having the ability to edit the markup inside a form would allow us to make any type of form design."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2017-11-20 05:52:30",
    "text": "Ah understood, I didn't spot Jon's original message above, makes sense. That does seem pretty easy to accomplish, I'll bring it to my team and see what we can do."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2017-11-20 05:54:40",
    "text": "Regarding modifying the markup, this one's a little tricker since forms include features like dependent fields and progressive profiling. In order to achieve these features, we need to have a predicable structure to the form elements. Do you have any examples of types of markup modifications you've been looking to implement? I can identify our opportunities with the team and see what options we have"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-20 06:06:48",
    "edited": {
      "time_stamp": "2017-11-20 06:07:22"
    },
    "text": "a common way to make floating input labels (material design style) is to place the label after the input like so: <https://codepen.io/skielbasa/pen/IBobC> which allows you to use the ~ css selector for the majority of styling of the floating label"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-20 06:09:05",
    "edited": {
      "time_stamp": "2017-11-20 06:09:11"
    },
    "text": "being able to design a \"fill in the blank\" style form like this one: <http://bravepeople.co/hire-us/#/personal-information> would be much easier without all the additional markup for the columns and such"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-20 06:11:41",
    "text": "so maybe the solution is just adding a few more options to the form's advanced options area that gave you a stripped down markup and an option for adding the label after the input. those are my two examples that are pretty common for me."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2017-11-20 06:23:42",
    "text": ":raised_hands: amazing, thanks for the feedback, Stefen. We're actually really interested in bringing more of these advanced styles/markups directly to the tool itself so this feedback is very well timed."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-20 12:37:31",
    "text": "Very excited to see what you guys come up with Shay, I think for most purposes, simply adding those field type classes on the \".hs-input\" is a good start that will immediately offer a lot more flexibility, the other features talked about here would be very awesome to see as well."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-20 12:42:49",
    "edited": {
      "time_stamp": "2017-11-20 12:44:22"
    },
    "text": "<http://spin.d.pr/wvb4ze+>\nHey just feedback on the rich text field editor that's been showing up on the new form editor, hub db, etc.\n\n*There's no code view.*\n\nWe do a lot of advanced things and really want the code editing feature to be added back to these fields.\n\nAn example with this specific form screenshotted - we have pdfs that when the user fills out the form a button will appear that on-click fires a javascript function that grabs the PDF URL for the current page and opens that.(we have the same form for over 300 pages, but every page the button pulls a different PDF.) \n\nWithout the code view it makes it harder to set up this sort of thing, and forces us to implement wonky work arounds.\n\n[I do realize for the time being this new form editor is optional, and I can switch back, it is however mandatory to use when using hubDB]"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-11-20 13:26:31",
    "text": "This was brought up before, I cant find where we discussed it or the answer to why it was removed but i know we did bring this up before",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2017-11-20 15:00:31"
      },
      {
        "time_stamp": "2017-11-21 06:31:57"
      },
      {
        "time_stamp": "2017-11-21 10:38:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-20 15:00:31",
    "text": "Well I hope, it's just a temporary thing that it doesn't have the code view(as in they're still working on that part), it would be severely limiting to scrap that."
  }
]
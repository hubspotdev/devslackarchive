[
  {
    "poster": {
      "poster_name": "Yoelmy Hernandez",
      "poster_handle": "yhernandez"
    },
    "time_stamp": "2019-12-11 05:18:55",
    "text": "thanks for the info <@U25PYL3Q8> I figured out that I need to do something like that but looking for options inside the platform itself. thanks for your time!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-12-11 11:12:08",
    "edited": {
      "time_stamp": "2019-12-11 11:12:12"
    },
    "text": "I've thought about this quite a few times and no matter how you slice it it ends up exposing the api keys so that someone can see them.  If it is a free API and if someone else gets your key, if they can't write data, then I guess it would be okay, but overall there is no way to hide this in the platform. <@UR52YD39Q>"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:14:46",
    "text": "This really depends on what type of token you’re looking at using."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:16:15",
    "edited": {
      "time_stamp": "2019-12-11 11:16:57"
    },
    "text": "If the service uses oauth, and the authentication server supports implicit flow, then you may be able to do this in a clean way."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:19:08",
    "text": "What type of API are you interacting with, and what is it you need to do?"
  },
  {
    "poster": {
      "poster_name": "Yoelmy Hernandez",
      "poster_handle": "yhernandez"
    },
    "time_stamp": "2019-12-11 11:19:34",
    "edited": {
      "time_stamp": "2019-12-11 11:20:33"
    },
    "text": "thanks for your time <@U25PYL3Q8> and <@UQERM7BLY> .... isn't a free API that's why I started the research and see if HubSpot provide any option for an environment variable or similar where safely put the value and fetch from there. I did a little more research to see if with js itself can hidde the value but the approachs are not solid and are more tricks that anything official so the path is something in server side."
  },
  {
    "poster": {
      "poster_name": "Yoelmy Hernandez",
      "poster_handle": "yhernandez"
    },
    "time_stamp": "2019-12-11 11:21:57",
    "text": "<@UQERM7BLY> the api need an authentication token, which is static, nothing dinamic but the actual implementation leave it expose to browser inspect element or dev tools and that's is not good"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:22:17",
    "text": "Yeah, so this will need to be stored server side. The way i’d implement this, is it’d actually use AWS with API Gateway + A lambada function."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:23:09",
    "edited": {
      "time_stamp": "2019-12-11 11:23:22"
    },
    "text": "You’ll need very little code, and you’ll be able to implement some rate restrictions. The only issue you’re going to have is with cross domain, but this can be resolved quite easily."
  },
  {
    "poster": {
      "poster_name": "Yoelmy Hernandez",
      "poster_handle": "yhernandez"
    },
    "time_stamp": "2019-12-11 11:25:10",
    "edited": {
      "time_stamp": "2019-12-11 11:25:28"
    },
    "text": "yup, seems to be since this is a custom implementation in the form, HubSpot can't help us in this sense. I'm looking to the sercer side option..thanks for the ideas! if anything else came up pls share it :sweat_smile:",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-12-11 11:26:03"
      },
      {
        "time_stamp": "2019-12-11 11:27:18"
      },
      {
        "time_stamp": "2019-12-11 11:27:31"
      },
      {
        "time_stamp": "2019-12-11 11:27:38"
      },
      {
        "time_stamp": "2019-12-11 11:28:17"
      },
      {
        "time_stamp": "2019-12-11 11:28:22"
      },
      {
        "time_stamp": "2019-12-11 11:29:21"
      },
      {
        "time_stamp": "2019-12-11 11:29:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:26:03",
    "text": "Do you need the API to be invoked before the form is submitted (does it populate a field)"
  },
  {
    "poster": {
      "poster_name": "Felix Chi",
      "poster_handle": "felix009"
    },
    "time_stamp": "2019-12-11 11:27:18",
    "text": "I had a similar situation and ended up creating a \"proxy\" url on another server and that server does the request server side with the token.\n\nthat was the only way I figured how to hide sensitive tokens/keys"
  },
  {
    "poster": {
      "poster_name": "Yoelmy Hernandez",
      "poster_handle": "yhernandez"
    },
    "time_stamp": "2019-12-11 11:27:31",
    "edited": {
      "time_stamp": "2019-12-11 11:27:41"
    },
    "text": "yes, exactly. Right now the approach is an event in field that trigger a function who make the call to the api"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:27:38",
    "text": "Yeah, that’s really the only way."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:28:17",
    "text": "So yeah - I usually use Lambada for these things."
  },
  {
    "poster": {
      "poster_name": "Yoelmy Hernandez",
      "poster_handle": "yhernandez"
    },
    "time_stamp": "2019-12-11 11:28:22",
    "text": "yes, seems to be we do not have any other option for sensitive token or keys used in js implementation"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-11 11:29:21",
    "edited": {
      "time_stamp": "2019-12-11 11:29:26"
    },
    "text": "If you do not want to mess around with AWS too much - you can use something like <https://serverless.com/>"
  },
  {
    "poster": {
      "poster_name": "Yoelmy Hernandez",
      "poster_handle": "yhernandez"
    },
    "time_stamp": "2019-12-11 11:29:25",
    "text": "thanks for you approachs!"
  }
]
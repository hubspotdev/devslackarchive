[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 06:52:13",
    "text": "this is coming. It’s in the email drag n drop beta. creation of templates for the new editor just isn’t possible yet, the HS team has stated they’re working on that."
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-15 07:12:05",
    "text": "So to clarify, you will be able to build a template, then when you create an email using that template, slide those modules around in any order?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 07:12:16",
    "text": "correct"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 07:12:52",
    "text": "it likely will require a drag n drop region added to the template to enable the functionality but yes"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-15 07:14:00",
    "text": "Well that is superb news :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-15 07:15:19",
    "text": "Now I just have to figure out how to prevent HubSpot from adding their HTML cruft to a template and how to extend a template."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 10:05:23",
    "edited": {
      "time_stamp": "2019-05-15 10:07:47"
    },
    "text": ":bulb:I want a (:male_mage: :black_square_button:) Magic button to destroy all the cache. I don't mind where do you place it (related to a template, in settings to blow up the whole website, blog...).\nI am now struggling with a weird issue where some posts have the CSS combined, but in most of the posts is not (listing is also combined tho).\nSo I won't have to disturb you again <@U6TBZ66FN>",
    "reply_count": 21,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-05-15 10:14:54"
      },
      {
        "time_stamp": "2019-05-15 10:14:56"
      },
      {
        "time_stamp": "2019-05-15 10:16:43"
      },
      {
        "time_stamp": "2019-05-15 10:18:14"
      },
      {
        "time_stamp": "2019-05-15 10:18:18"
      },
      {
        "time_stamp": "2019-05-15 10:19:52"
      },
      {
        "time_stamp": "2019-05-15 10:24:18"
      },
      {
        "time_stamp": "2019-05-15 10:26:20"
      },
      {
        "time_stamp": "2019-05-15 10:27:22"
      },
      {
        "time_stamp": "2019-05-15 10:29:02"
      },
      {
        "time_stamp": "2019-05-15 10:30:51"
      },
      {
        "time_stamp": "2019-05-15 10:54:28"
      },
      {
        "time_stamp": "2019-05-15 10:56:53"
      },
      {
        "time_stamp": "2019-05-15 10:59:38"
      },
      {
        "time_stamp": "2019-05-15 11:02:38"
      },
      {
        "time_stamp": "2019-05-15 11:03:46"
      },
      {
        "time_stamp": "2019-05-15 11:05:20"
      },
      {
        "time_stamp": "2019-05-15 11:06:23"
      },
      {
        "time_stamp": "2019-05-15 11:06:36"
      },
      {
        "time_stamp": "2019-05-15 11:07:26"
      },
      {
        "time_stamp": "2019-05-15 11:08:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2019-05-15 10:14:54",
    "text": "We could add that `button` somewhere. Let’s have someone to discuss that. <@UGWB0PCCV>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 10:14:56",
    "text": "As I understand it the combination is done page by page and there’s an automatic script testing it"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2019-05-15 10:16:43",
    "text": "You are right, it is page by page, and automatic. It just takes some time :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 10:18:14",
    "edited": {
      "time_stamp": "2019-05-15 10:23:18"
    },
    "text": "Not trying to hijack but this is a related question:\n*Is the way the combination works in HubSpot effectively serving a new css file for basically every page?* I would think that would kill the browser side caching benefits.\n\nAs in if you went from page a to page b and page b has different modules or even the same modules in a different order, thus different combined css file, I would think that kills the browser’s cache-ability of the css - because it would need to load a new css file, even though 90% of the styles might be the same.\nMaybe though the pro’s outweight the cons. just wondering"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 10:18:18",
    "edited": {
      "time_stamp": "2019-05-15 10:19:10"
    },
    "text": "Yeah but it's weird for me that sharing a template just some post got it. Tho, we updated the template recently so that could fit here (like it didn't fired for the whole blog yet)"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 10:19:52",
    "edited": {
      "time_stamp": "2019-05-15 10:23:20"
    },
    "text": "That's definetly right! Jon.\n:eyes:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 10:24:18",
    "text": "just something I’ve always pondered. Maybe the HS team ran tests to kinda weigh the pros and cons and really maybe this only has a minor effect on load times idk"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 10:26:20",
    "edited": {
      "time_stamp": "2019-05-15 10:26:25"
    },
    "text": "I can confirm those have different file names. So dunno how good is the comb now...\nIdeally it would generate a shared combined file with all the pages (unless you with a new setting decide to exclude some)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 10:27:22",
    "edited": {
      "time_stamp": "2019-05-15 10:27:31"
    },
    "text": "yea, idk how they’d really do it because it’d be very difficult to manage.\n\nsometimes you don’t want certain files loading on a page, so idk sounds like logistical hell"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 10:29:02",
    "edited": {
      "time_stamp": "2019-05-15 10:29:47"
    },
    "text": "for sure, but we are limited to push the ideas.\nThey have to find the way to solve them :joy:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 10:30:51",
    "edited": {
      "time_stamp": "2019-05-15 10:31:04"
    },
    "text": "right. and the real true challenge -  HS has to have a solution that works well out of the box(existing solution works okay). giving devs the extra control - would be great, but basically can’t require devs to be experts or else it negatively hurts HubSpot(devs being dumb about how to load files could cause them server load problems)"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2019-05-15 10:54:28",
    "text": "Thanks for the good discussion. We initially planed for shared-combined-CSS, but the first rollout caused many pages broken. We rolled back and started this now per page verification-then-enable process. As we have the per-page solution now, we can re-evaluate the shared solution to see how that would work."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 10:56:53",
    "edited": {
      "time_stamp": "2019-05-15 10:59:36"
    },
    "text": "glad to know smart people like you are in charge of that stuff <@U6TBZ66FN>!\n\nI think for the shared page solution it’s likely you’re gonna have to somehow get information from us devs about what’s used  everywhere, or else you’ll be splitting it into a ton of splinters of combined files(which would be really friggin’ cool) but hard to understand what’s going on behind the scenes, possibly resulting in more problems."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 10:59:38",
    "text": "while I see your points (fair and valids).\nI think using best practices like scoped CSS with the #{{name}} on CMs and body class for template or where needed. It should work like a charm"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 11:02:38",
    "text": "right but there are edge cases where it wouldn’t necessarily,\n\nsay I have 2 css files used on 80% of my site, then a few pages should not have one of those files. suddenly the system gets really complicated.\n\nthey have to accomodate for that kinda stuff."
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2019-05-15 11:03:46",
    "text": "Before the shared-combined-css, we have started experiment a solution to serve just the combined-used-css, which is as the name says, only the used rules of the page are included in the combined css. However, that is not working very well on deferent browsers, devices, as they may choose different rules to use."
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2019-05-15 11:05:20",
    "text": "^ The saving could be huge — cutting &gt; 90% of the bytes."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 11:06:23",
    "text": "while that would be awesome, I don't see it working in any easy way"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-15 11:06:36",
    "edited": {
      "time_stamp": "2019-05-15 11:06:58"
    },
    "text": "sounds like you’re trying to tailwindcss HubSpot lol, would be awesome, but sounds extremely hard. that’s a genius level way above me."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-15 11:07:26",
    "text": "I have some CSS dependent on JS polyfill for browsers that doesn't support new features. JS classes based on user interaction and a long list of things that could easy break there"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2019-05-15 11:08:19",
    "text": "Totally. That is reason this has been on-hold for a while."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-05-15 12:38:02",
    "text": "There was some discussion about applying team partitioning to HubDB like <https://knowledge.HubSpot.com/articles/kcs_article/cos-general/assign-content-to-your-users-and-teams>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-05-15 12:38:12",
    "text": "<@UD53A9UUR> Would that satisfy your use case?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-15 13:21:15",
    "text": "yeah.  that would do!  my only concern is all new content is available until assigned."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-15 13:21:40",
    "text": "not a big concern, but an extra step"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-15 13:23:40",
    "text": "(available to professional, please :slightly_smiling_face: )"
  }
]
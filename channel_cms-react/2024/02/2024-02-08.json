[
  {
    "text": "I'm trying to get the data from my module via hubl js partial but it renders just the islandid any ideas?\n\ni created the partial in the partial folder via islands, not in the modules folder\n\nessentially i have a navbar and i want to pass a variable to the nav via hubl, just not getting the data im passing",
    "time_stamp": "2024-02-08 05:07:39",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-08 06:35:08"
      },
      {
        "time_stamp": "2024-02-08 08:01:04"
      },
      {
        "time_stamp": "2024-02-08 08:27:10"
      },
      {
        "time_stamp": "2024-02-08 08:38:57"
      },
      {
        "time_stamp": "2024-02-08 08:43:34"
      },
      {
        "time_stamp": "2024-02-08 08:53:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 06:35:08",
    "text": "Can you share the relevant component code? what does the console.log look like? I'm working on a similar set up now—I think you have to destructure `hublParamters` from props"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:24:25",
    "text": "just to double check...there's no way to pass in a js-module into a HubL module right? I'm not 100% sure I need to...but thinking it through",
    "reply_count": 17,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-08 07:25:18"
      },
      {
        "time_stamp": "2024-02-08 07:25:32"
      },
      {
        "time_stamp": "2024-02-08 07:25:57"
      },
      {
        "time_stamp": "2024-02-08 07:26:26"
      },
      {
        "time_stamp": "2024-02-08 07:27:10"
      },
      {
        "time_stamp": "2024-02-08 07:27:27"
      },
      {
        "time_stamp": "2024-02-08 07:27:52"
      },
      {
        "time_stamp": "2024-02-08 07:28:36"
      },
      {
        "time_stamp": "2024-02-08 07:30:31"
      },
      {
        "time_stamp": "2024-02-08 07:30:41"
      },
      {
        "time_stamp": "2024-02-08 07:51:19"
      },
      {
        "time_stamp": "2024-02-08 09:05:56"
      },
      {
        "time_stamp": "2024-02-08 09:11:38"
      },
      {
        "time_stamp": "2024-02-08 09:21:15"
      },
      {
        "time_stamp": "2024-02-08 09:22:07"
      },
      {
        "time_stamp": "2024-02-08 09:24:24"
      },
      {
        "time_stamp": "2024-02-08 09:25:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 07:25:18",
    "text": "Not sure what you exactly mean by “pass in”, but definitely no module in module stuff (for React modules or HubL modules)."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:25:32",
    "text": "like in <@U06947ZLRCK>’s example above, what is \"island\" about that partial?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:25:57",
    "text": "if you pass in a js_partial into a HubL module...it's just a regular partial"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:26:26",
    "text": "an island has to be used from within a js_module no?\nlike `&lt;Island module...etc.`"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 07:27:10",
    "text": "Nope, you can use an Island inside React partial code. It does not have to be in a React module."
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 07:27:27",
    "text": "So you can have, HubL module -&gt; React partial -&gt; Island"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:27:52",
    "text": "ok, perfect I think...trying now"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 07:28:36",
    "text": "<https://github.com/HubSpot/cms-js-building-block-examples/blob/main/islands/islands-project/islands-app/components/partials/IslandsTester.jsx>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:30:31",
    "text": "it's definitely a lot to process...thanks for the example"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:30:41",
    "text": "I'm 1% away from this all clicking (again)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 07:51:19",
    "text": "in this example: <https://github.HubSpot.com/cms-js-building-block-examples/reference/islands.html#islands>\n\nwhy is state being used here on the partial side?\n```export default function MyPartial() {\n  let [count, setCount] = useState(0);```\nignoring the Island inside of MyPartial—wouldn't MyPartial be rendered server side and not have access to state at all?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 08:01:04",
    "text": "questioning my own answer here....I just tried to recreate this setup essentially and did not need to use `hublParamters`\n\nit looks like <@U06947ZLRCK> is logging props from inside the island but not passing in the props they want into the island.\n\n`hublParamters` I think are used in js-modules only no? <@UCY83QS6Q>"
  },
  {
    "poster": {
      "poster_name": "Chiedu Agborh",
      "poster_handle": "chiedu.agborh"
    },
    "time_stamp": "2024-02-08 08:27:10",
    "text": "`import { Island } from '@HubSpot/cms-components';`\n`import Navbar from '../FinNavbar?island';`\n\n`export default function FinNavBarIsland({props}) {`\n  `console.log('posts', props)`\n  `return &lt;Island module={Navbar}`  \n  `/&gt;;`\n`}`\n\n`// const FinNavBarIsland = ({ fieldValues, hublParameters = {} }) =&gt; {`\n`//   const { props: props  } = fieldValues;`\n`//   const { mainTitle } = hublParameters;`\n`//   return (`\n`//     &lt;Island`\n`//       module={Navbar}`\n`//       props={props}`\n`//     /&gt;`\n  \n`//   );`\n`// };`\n\n`// export default FinNavBarIsland;`\n\n`function Navbar({props}) {}`"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 08:38:57",
    "text": "Yes `hublParameters` are only sent to the top-level module component. If you pass hubl parameters to a React partial, those will come through as top level props and not under a specific `hublParameters` key (a little weird, but unlike modules the only way for partials to get any input is via HubL params)"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 08:43:34",
    "edited": {
      "time_stamp": "2024-02-08 08:44:03"
    },
    "text": "<@U06947ZLRCK> from your code above it looks like you need to change `return <Island module={Navbar} />`  to `return <Island module={Navbar} {…props} />` if you want to pass all of the props/hublparameters that came into the partial to the Island component.\n\nOr instead of spreading (personally I like more explicit code that passing whatever comes in around):\n\n```export default function FinNavBarIsland({ pageType }) {\n  console.log('posts', props)\n  return <Island module={Navbar} pageType={pageType}\n  />;\n}\n\n// In island file...\nconst FinNavBarIsland = ({ pageType }) => { ... }```"
  },
  {
    "poster": {
      "poster_name": "Chiedu Agborh",
      "poster_handle": "chiedu.agborh"
    },
    "time_stamp": "2024-02-08 08:53:59",
    "text": "Nice, i will try it out"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:05:56",
    "edited": {
      "time_stamp": "2024-02-08 09:06:21"
    },
    "text": "<@UCY83QS6Q> is that `useState` at the top level of `MyPartial` essentially a react server component? you wouldn't be able to respond to clicks or whatever inside of just the partial (without the island part) but you can do \"server side\" react things. right?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:11:38",
    "text": "^ 99.99% I think if that's right :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:14:24",
    "text": "mostly just for fun, is there an equivalent way to add `?island` to this kind of setup:\n```&lt;Island posts={posts} module={\n  (posts) =&gt; {\n    return (\n      &lt;ul&gt;\n        {posts.map((post) =&gt; (\n          &lt;li key={post.id}&gt;\n            &lt;h2&gt;{post.pageTitle}&lt;/h2&gt;\n          &lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    )\n  }\n} /&gt;```\n",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-08 09:27:00"
      },
      {
        "time_stamp": "2024-02-08 09:27:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:20:14",
    "text": "the HubL version of {% related_posts %} has some extra logic that would be nice to have as a @HubSpot react component"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:20:48",
    "text": "that or a HubL function version of related_posts but that's less cool"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 09:21:15",
    "text": "Oh, boy. Yeah that example is wrong…"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:22:07",
    "text": "cool, so you CAN'T have useState at that level in a partial. That's why the Island is there"
  },
  {
    "time_stamp": "2024-02-08 09:24:24",
    "text": "100%"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 09:25:04",
    "text": "<https://github.com/HubSpot/cms-js-building-block-examples/pull/63>"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 09:27:00",
    "text": "You’d need to extract `(posts) =&gt; { … }` into its own fail, export ^ as default, and then do the `import … ?island` thing.\n\nWe don’t have a way to create “inline” islands (in theory possible, but tricky, because we need to automatically create “code splits” for you to create JS files that can be separately loaded in the browser)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:27:48",
    "text": "ok, yea, doesn't seem necessary but it was a fun thought experiment"
  },
  {
    "text": "FYI, we have some basic search up and working on our docs site now: <https://github.HubSpot.com/cms-js-building-block-examples/>",
    "time_stamp": "2024-02-08 09:31:05",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-08 09:31:42"
      },
      {
        "time_stamp": "2024-02-08 14:31:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 09:31:42",
    "text": "Thanks for the nudge from the survey :wink:\n\n… a little ashamed because I didn’t know it was so easy to do in Vitepress, but I guess better late than never :laughing:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:43:23",
    "text": "is there active work going on to potentially allow subfolders in islands, modules, and partials folders?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-08 09:44:28"
      },
      {
        "time_stamp": "2024-02-08 09:44:43"
      },
      {
        "time_stamp": "2024-02-08 09:46:47"
      },
      {
        "time_stamp": "2024-02-08 09:47:29"
      },
      {
        "time_stamp": "2024-02-08 09:53:25"
      },
      {
        "time_stamp": "2024-02-08 11:37:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:44:28",
    "text": "I know we've loosely discussed this before and the issue was knowing what is a Component and what is a folder...the damn `index.jsx` thing breaks a lowercase naming convention"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:44:43",
    "text": "I just know I'll be lost eventually with too many files"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2024-02-08 09:46:47",
    "text": "Right now there is no special logic going on with island folders, you can do whatever you want there. In fact there is no need to use the `islands/` folder if you don’t want and you can have a `import XXX from '../any/path/Foo.js?island'` for islands (even `./inModuleFolder.js?island`).\n\nBut as for the special logic that uses `partials/` and `modules/` to detect what partials and modules are in your project, then no. No active work to enable more subfolders there."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:47:29",
    "text": "k, good to know about islands. maybe that'll help..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-08 09:53:25",
    "edited": {
      "time_stamp": "2024-02-08 09:54:19"
    },
    "text": "last question, is the `/partials` logic only connected to the `<http://hslocal.net:3000/>` preview page?\n\nfor example, can I import a \"partial\" from a different folder using `{% js_partial path=\"@projects/theme-assets-project/app/components/somewhere-else/Something.jsx\" %}`?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 11:37:03",
    "text": "Nope, ^ won’t work."
  },
  {
    "poster": {
      "poster_name": "Roger Brown",
      "poster_handle": "robrown"
    },
    "time_stamp": "2024-02-08 12:03:35",
    "text": "Hey <@U02CALZ1EV9> + <@UDHT6N5SM> we believe this might be related to the package.json dependencies specified in the example CMS project which included an outdated version of the CLI, which might be preventing the proper request formats to update platformVersion. Can you please try:\n\n1. Clearing out your node_modules\n2. Removing the CLI as a dependency in your package.json `\"@HubSpot/cli\"`\n3. Confirm you have installed and are using the CLI globally on the latest version 5.1.3  `npm install -g @HubSpot/cli@latest`\n4. Run `npm install` again in your project folder to re-install all the other node packages\n5. Try re-uploading the project source again `hs project upload`"
  },
  {
    "poster": {
      "poster_name": "Colby Schneider",
      "poster_handle": "colbyschneider"
    },
    "time_stamp": "2024-02-08 12:40:51",
    "text": "Yep, that was my issue!\n\nI had tried removing the CLI dep before. But I now realize that I'd missed an old version of the HubSpot CLI that I'd added to the deps at the root level of my repo that contains my individual projects. Once I removed that outdated dep from the root, my projects started uploading properly.\n\nThank you for help me get to the bottom of this. Please pass my gratitude on to the rest of the team. Hopefully the same fix works for <@UDHT6N5SM>"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-08 14:31:37",
    "text": "Hey technically they could have PR'd this one..."
  },
  {
    "poster": {
      "poster_name": "Chris Stone",
      "poster_handle": "chris.stone603"
    },
    "time_stamp": "2024-02-08 14:50:11",
    "text": "Thanks for adding search to the documentation, I'm finding it useful already!\n\nSmall thing, I noticed that the data fetching documentation could be updated to mention the support for querying blog data via graphql. it looks like it's not possible to submit a PR. The change could be added here: <https://github.com/HubSpot/cms-js-building-block-examples/blob/main/docs/reference/data-fetching.md?plain=1#L7>",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-08 14:51:17"
      },
      {
        "time_stamp": "2024-02-08 15:35:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chris Stone",
      "poster_handle": "chris.stone603"
    },
    "time_stamp": "2024-02-08 14:51:17",
    "text": "something like this:\n```In an ideal world the HubSpot GraphQL integration would be the go to for getting all of your HubSpot content into the JS Building Blocks. Currently however, GraphQL only supports querying HubDB, Blog data and Custom Objects - refer to the [GraphQL](#graphql) documentation above. There are some key advantages to using the GraphQL integration with JS Building Blocks```"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-08 15:35:43",
    "text": "Thanks! <https://github.com/HubSpot/cms-js-building-block-examples/pull/64>"
  },
  {
    "text": "Since updating `cms-dev-server` i'm getting some strange behavioiur and errors with island locally - things render fine on server. I'm seeing occasional double rendering of components, sometimes no render at all... I've created two super basic module instances (Test & Test2) to illustrate and troubleshoot. Included screens of error, module, fields and component... Please help!",
    "time_stamp": "2024-02-08 18:47:34",
    "edited": {
      "time_stamp": "2024-02-08 20:05:11"
    },
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-09 05:44:40"
      },
      {
        "time_stamp": "2024-02-09 10:13:41"
      },
      {
        "time_stamp": "2024-02-09 10:37:47"
      },
      {
        "time_stamp": "2024-02-09 10:46:41"
      },
      {
        "time_stamp": "2024-02-09 12:27:30"
      },
      {
        "time_stamp": "2024-02-09 12:49:01"
      },
      {
        "time_stamp": "2024-02-09 13:08:50"
      }
    ]
  }
]
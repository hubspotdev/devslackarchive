[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-01-24 06:56:58",
    "text": "For instance, it’d be nice if there was a shared class for each content alignment option.\nSomething like:\n• full width: `dnd-area--full`\n• centered:  `dnd-area--centering`"
  },
  {
    "poster": {
      "poster_name": "Tim Loden",
      "poster_handle": "tim.loden"
    },
    "time_stamp": "2020-01-24 08:01:22",
    "text": "we are using\n```[class*='force-full-width']```\nto target full width rows"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-01-24 08:10:31",
    "edited": {
      "time_stamp": "2020-01-24 08:10:54"
    },
    "text": "yeah… Attribute selectors in CSS are the most expensive, though. Especially with `*=` . That’s why I’d like a shared class name"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-24 08:25:31",
    "text": "Those classes were intended to be private so relying on them is not recommended and not supported."
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-24 08:26:42",
    "text": "That said, we will consider adding a public class. The tricky part in my book is how to balance the styles added automatically via the system with styles that a dev might right without causing a specificity war."
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-24 08:27:13",
    "text": "It also goes without saying that we appreciate the feedback. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Kyle Geiste",
      "poster_handle": "kg"
    },
    "time_stamp": "2020-01-24 12:01:21",
    "text": "Hey Mark. It’s less about the specific complexity of the feature request and more about understanding how it fits into our ecosystem and platform. We have a lot of different kinds of customers with a very wide scale of technical proficiency — what may work well for one user may cause a lot of support calls for another. So, it’s really about finding the right balance of how we implement this kind of feature without causing issues to other parts of the system."
  },
  {
    "poster": {
      "poster_name": "Kyle Geiste",
      "poster_handle": "kg"
    },
    "time_stamp": "2020-01-24 12:02:41",
    "text": "Thanks for your thoughts and feedback, though. All I can say is that we’ve certainly discussed this idea in the past and will continue to do so. We definitely don’t want to leave you hanging. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-24 13:58:09",
    "text": "Have drag and drop pages existed for a while now? Never realized..I’ve been building using the CMS for what feels like years"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-24 15:49:50",
    "text": "Pretty damn cool"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-24 15:51:13",
    "text": "Not sure if this is intentional or a bug but if you don’t include parameters/attributes when creating a row then it won’t have show “row” when you hover over it in the editor"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-24 15:51:26",
    "text": "which is confusing/unexpected if something is a row"
  }
]
[
  {
    "poster": {
      "poster_name": "Tom Wright",
      "poster_handle": "tom210"
    },
    "time_stamp": "2022-05-25 02:40:30",
    "edited": {
      "time_stamp": "2022-05-25 02:41:31"
    },
    "text": "Is it possible to create filters using URL parameters from column options on HubDB?\n\neg -\n• Column values 1, 2, 3\n• Filter buttons would be: 1, 2, 3\n• When you click on one of the filter buttons it will filter out the items that have that column value selected.\nThanks in advance, I can explain in more detail if the above are too vague",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-05-25 08:06:26"
      },
      {
        "time_stamp": "2022-05-25 08:26:51"
      },
      {
        "time_stamp": "2022-05-25 08:29:00"
      },
      {
        "time_stamp": "2022-05-25 08:29:07"
      },
      {
        "time_stamp": "2022-05-25 08:30:42"
      },
      {
        "time_stamp": "2022-05-25 08:32:56"
      },
      {
        "time_stamp": "2022-05-26 00:15:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-05-25 08:06:26",
    "text": "yes. Look at docs on the hubdb table rows function and then move on to the <https://legacydocs.HubSpot.com/docs/methods/hubdb/v2/get_table_rows#filters|filters>. There are also example projects using filtering in the docs that are helpful"
  },
  {
    "poster": {
      "poster_name": "Tom Wright",
      "poster_handle": "tom210"
    },
    "time_stamp": "2022-05-25 08:26:51",
    "text": "Would this just work for the API? or would it work on a hubdb archive page, for example?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-05-25 08:29:00",
    "text": "the hubdb_table_rows() function takes a filters arg"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-05-25 08:29:07",
    "text": "<https://developers.HubSpot.com/docs/cms/data/hubdb#getting-rows>"
  },
  {
    "text": "Would this mean i would have to create a new page that takes into account this filter? Eg if I clicked on Australia here, how would the filter know to pick that up? Unless I'm being stupid and missing something here?\nAppreciate the help!",
    "time_stamp": "2022-05-25 08:30:42"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-05-25 08:32:56",
    "text": "use in combination with request.query_dict to build your filter query. If you don’t know what I’m talking about, then I highly suggest you look at the example hubdb projects"
  },
  {
    "text": "can anyone point me in the direction of how to use the \"styles\" tab in a module and where to pull in those code snippets? I currently added the snippet to my section.html file but it is not showing up.",
    "time_stamp": "2022-05-25 08:57:37",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-05-30 10:51:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:21:04",
    "text": "Hey <@U9KA594Q3> I am trying to do exactly the same thing but i cannot find any documentation showing any examples of this working. I Would like to understand how the JSON payload needs to look for a custom module to pick up and loop over the items.\nExample of a module looping and example payload would be really helpful."
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:23:33",
    "text": "There are some examples <https://community.HubSpot.com/t5/HubSpot-Community-Blog/Programmable-Email-Use-Case-Library-not-an-exhaustive-list-but/ba-p/562030|here>\nWith code <https://github.com/HubSpot/Sample-Programmable-Email-Module-Code|here>"
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:26:51",
    "text": "Are any of these sent using the single send API ?"
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:28:07",
    "text": "looks like they are using data from hubdb"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:29:44",
    "text": "No none of them are for single send but the same principle applies. You should code following general HubL principles"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:31:13",
    "text": "If you can give an example single send api payload I can see how it should be accessed in HubL."
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:33:09",
    "text": "```{\n    \"emailId\": 74492290335,\n    \"contactProperties\": {\n        \"firstname\": \"jane\",\n        \"order_portal_link\": \"<https://portalurl>\"\n    },\n    \"message\": {\n        \"to\": \"<mailto:abad.rahman@swytchbike.com|abad.rahman@swytchbike.com>\"\n    }\n}```\ncurrently have this but need to add `customProperties` as per doc here : <https://developers.HubSpot.com/docs/api/marketing/transactional-emails>"
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:33:38",
    "text": "not entirely sure how the `customProperties` should be constructed."
  },
  {
    "text": "Essentially the goal is produce a order receipt confirming purchased items\nsimilar to this",
    "time_stamp": "2022-05-25 10:35:25"
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:40:41",
    "edited": {
      "time_stamp": "2022-05-25 13:07:18"
    },
    "text": "Line items could be in this format\n```{\n    \"emailId\": 74492290335,\n    \"contactProperties\": {\n        \"firstname\": \"jane\",\n        \"order_portal_link\": \"<https://portalurl>\"\n    },\n    \"customProperties\": {\n        \"line_items\": [\n            {\n                \"itemName\" : \"Product A\",\n                \"itemDescription\" : \"Product A description\",\n                \"price\" : \"123\"\n            },\n            {\n                \"itemName\" : \"Product B\",\n                \"itemDescription\" : \"Product B description\",\n                \"price\" : \"456\"\n            }\n        ]         \n    },\n    \"message\": {\n        \"to\": \"\"\n    }\n}```"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:43:16",
    "text": "Aha yes I was writing out an example exactly like that"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:43:44",
    "text": "You could then try that with an email with the HubL\n```{{custom|pprint}}\n\n{% for item in custom.line_items %}\n {{item|pprint}}\n{% endfor %} ```\n"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:44:31",
    "text": "And see what it outputs in each case. I _think_ that the API will support this. However if not, you may have to do something a bit more hacky when generating the JSON."
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:44:44",
    "text": "so this would go in custom module"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:44:49",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:45:17",
    "text": "Such as one top level property that says how many items you have and then have line_item_1, linte_item_2 as top level properties etc"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:45:30",
    "text": "Basically flatten it out"
  },
  {
    "poster": {
      "poster_name": "Abad Rahman",
      "poster_handle": "abadrahman"
    },
    "time_stamp": "2022-05-25 10:56:55",
    "text": "<@U9KA594Q3>, you are a Legend! It’s working really nicely now.\nThank you for taking the time. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 10:59:36",
    "text": "Awesome, glad to hear that works"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2022-05-25 11:00:13",
    "text": "Looked like it should be on our side but I wasn’t 100% sure"
  },
  {
    "poster": {
      "poster_name": "Tom Wright",
      "poster_handle": "tom210"
    },
    "time_stamp": "2022-05-26 00:15:46",
    "text": "Do you have an particular resources that would help with this? Any project walkthroughs or training videos by any chance to help get me up to speed please?"
  }
]
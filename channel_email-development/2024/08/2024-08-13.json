[
  {
    "text": "Anyone know how to solve for this?\n\n• I have an object that I use as my defaults.\n• I also have an object that I use for custom parameters that change depending on a variety of circumstances.\n• I want to combine the two objects into a new object using the `update` function.\n• I do this so that the new object uses all of my custom values, and if any custom values are not set, the values from the default object are used.\n• For example, the default object has `\"x\": \"1\", \"y\": \"2\"`\n• And the custom object has `\"x\": \"8\"`\n• The new combined object that I make with `set new = default` and then `do new.update(custom)` would have the value: `\"x\" \"8\", \"y\": \"2\"`\n• The problem is that after I successfully do this, my original `default` object has it’s properties updated with the values from the `custom` object.\nHow do I stop that from happening?\n\nHere’s my reduced test code:\n\n```{% set default_block_presets = {\n\t  \"padding\": 40\n\t}\n%}\n\n{% set custom_block_presets = {\n\t\t\"padding\": 100\n} \n%}\n\n&lt;b&gt;default_block_presets:&lt;/b&gt; {{ default_block_presets }}&lt;br&gt;&lt;br&gt; {# resolves to 40 #}\n\n&lt;b&gt;custom_block_presets:&lt;/b&gt; {{ custom_block_presets }}&lt;br&gt;&lt;br&gt; {# resolves to 100 #}\n\n{% set bp = default_block_presets %}\n{% do bp.update(custom_block_presets) %}\n\n&lt;b&gt;bp:&lt;/b&gt; {{ bp }}&lt;br&gt;&lt;br&gt; {# resolves to 100 #}\n\n&lt;b&gt;default_block_presets:&lt;/b&gt; {{ default_block_presets }}&lt;br&gt;&lt;br&gt; {# resolves to 100 #}\n\n&lt;b&gt;custom_block_presets:&lt;/b&gt; {{ custom_block_presets }}&lt;br&gt;&lt;br&gt; {# resolves to 100 #}```\n",
    "time_stamp": "2024-08-13 11:03:23",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-08-21 10:03:49"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "Sandipan Saha",
      "poster_handle": "sandipan.s"
    },
    "time_stamp": "2021-01-11 04:02:27",
    "text": "Is there any way to limit the scope of the default search module to a specific blog using the blog's unique id ?",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-01-11 06:17:17"
      },
      {
        "time_stamp": "2021-01-11 06:33:56"
      },
      {
        "time_stamp": "2021-01-11 07:10:17"
      },
      {
        "time_stamp": "2021-01-11 07:11:09"
      },
      {
        "time_stamp": "2021-01-11 07:21:09"
      },
      {
        "time_stamp": "2021-01-11 07:21:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-01-11 06:17:17",
    "text": "The search only returns pages. Not content"
  },
  {
    "text": "yes... but we can restrict the scope of the search to website pages, or blogs, or landing pages (image attached).\n\nWhat I want to know is, is there someway to restrict it even further using blog's unique ids. The use case example would be: I have one blog dedicated to football, and one blog dedicated to cricket. I want a search module in the football blog listing page such that it searches only within the football blog and not through out the site.",
    "time_stamp": "2021-01-11 06:33:56"
  },
  {
    "poster": {
      "poster_name": "Chandanesh",
      "poster_handle": "chandanesh.kc"
    },
    "time_stamp": "2021-01-11 07:09:44",
    "text": "I have written external JS method but the CSS aren't proper with that"
  },
  {
    "poster": {
      "poster_name": "Jordan Anderson",
      "poster_handle": "jordan084"
    },
    "time_stamp": "2021-01-11 07:10:17",
    "text": "We have a little custom hubl for searching blog posts. here’s a little snippet:\n```{% if request.query_dict.q %}\n    {% set all_posts = blog_recent_posts('default', 100) %}\n    {% set posts = [] %}\n    {% set lower_q = request.query_dict.q|lower %}\n    {% for post in all_posts %}\n      {% set lower_body = post.post_body|lower %}\n      {% if lower_body is string_containing lower_q %}\n        {% set posts = posts.append(post) %}\n      {% endif %}\n    {% endfor %}\n    &lt;div class=\"cards page-center\"&gt;\n      {% for post in posts %}\n        {{ util.render_blog_card(post) }}\n      {% endfor %}\n    &lt;/div&gt;\n  {% else %}\n    &lt;div class=\"cards page-center\"&gt;\n      {% for post in contents %}\n        {{ util.render_blog_card(post) }}\n      {% endfor %}\n    &lt;/div&gt;\n  {% endif %}```"
  },
  {
    "poster": {
      "poster_name": "Jordan Anderson",
      "poster_handle": "jordan084"
    },
    "time_stamp": "2021-01-11 07:11:09",
    "text": "in that ` for post in all_posts` loop you should be able to get the id of the blog and only append the ones with a matching id that also match the text"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-01-11 07:21:09",
    "text": "Yes you can"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-01-11 07:21:41",
    "text": "<https://legacydocs.HubSpot.com/docs/methods/content/search-for-content|https://legacydocs.HubSpot.com/docs/methods/content/search-for-content>"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-01-11 12:31:02",
    "text": "<@U7SL518D6> I dont think this is a you fix — but you know who to ping on this one. Ive seen this issue on slack a few times and it seems like it should be a pretty easy fix on the HS side to rename the internal value of the nuber field “width” so that it doesnt match the default module attribute “width”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-01-11 13:20:08",
    "text": "Thank you for reporting. I've reported the issue internally. I will let you know when a fix may be ready. Don't have a timeframe right now."
  }
]
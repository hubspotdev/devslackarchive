[
  {
    "poster": {
      "poster_name": "Walter Gueler",
      "poster_handle": "wgueler"
    },
    "time_stamp": "2020-02-09 12:34:19",
    "text": "You can retrieve any fields you want, you have to send that as a parameter in the query string, just like you do with the contact API (the documentation for some reason doesnt include it) IE `?property=domain&amp;property=annualrevenue`"
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 12:59:10",
    "text": "Thanks for the feedback.  I must be calling the API incorrectly then...."
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 12:59:26",
    "text": "Thanks for the help.  I must be calling the API incorrectly."
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 12:59:36",
    "text": "Here is my call:"
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 12:59:43",
    "text": "<https://api.hubapi.com/companies/v2/companies/>{companyId}?hapikey={key}&amp;property=domain&amp;property=annualrevenue"
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 13:00:19",
    "text": "The API ignores the properties that I am sending and sends back some random properties (some are default, some are custom)."
  },
  {
    "poster": {
      "poster_name": "Walter Gueler",
      "poster_handle": "wgueler"
    },
    "time_stamp": "2020-02-09 13:02:39",
    "text": "actually, i just run the query myself and i'm getting all the properties with any value, including custom properties, even without sending the &amp;property= in the querystring"
  },
  {
    "poster": {
      "poster_name": "Walter Gueler",
      "poster_handle": "wgueler"
    },
    "time_stamp": "2020-02-09 13:02:59",
    "text": "what property are you missing? is ist a custom one you created?"
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 13:23:45",
    "text": "Yes, I am missing my custom properties."
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 13:25:05",
    "text": "ah, i think i see what is happening...  some of the properties may not have a value, that may be why they are missing..."
  },
  {
    "poster": {
      "poster_name": "Jamie G",
      "poster_handle": "jamie.gunn"
    },
    "time_stamp": "2020-02-09 13:25:23",
    "text": "Thank you for your help!"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2020-02-09 15:44:33",
    "text": "TLDR: There is latency between a contact created from the Forms API and the contact being found in the Contacts API. How should I handle?\n\nI want to save the contact id (vid property) in our database when a new contact is created. This is so when I use the CRM Associations API at various points I can always do it with a single http request, instead of two requests because that API requires the contact id, not the email.  My flow is:\n1. New user signs up on our website - I use the Forms API to create the contact on form submission _(and I then want to save the contact id)_\n2. User fills in their company details on a new webpage - On form submission, I use the Companies API to create the company and then the CRM Associations API to associate the Contact to the Company\nThe problem I am having is between step 1 and 2 and not sure if someone has advice or best practice for me, as I'm not an extremely experience developer. Unfortunately the Forms API does not return data with the contact that was just created. So after the Forms API returns success, I then call the Contacts API to get the id of the newly created contact using the email address. However, there appears to be some latency on HubSpot's side and the contact does not exist right away. Upon success of the Forms API, my request to the Contacts API will return a 404 that the contact doesn't exist.\n\nIf I put in a manual delay in Javascript of 5 seconds after the success of the Forms API and then make the request to the Contacts API, then it works (at least from my limited testing, I'm worried that at scale with tens of thousands of contacts it may not always work). It gets a bit tricky though, because on the initial form submission it redirects to a new page and I don't want the user needing to wait 5 seconds before the redirect (or abandoning or refreshing the page). Instead of setting up a delay and then triggering the call from the frontend, I could figure out how to handle the delay and request on the backend. But still pretty much the same questions, what is the best approach to handle this?\n• I arbitrarily choose 5 seconds. I don't know if that amount of time is 100% reliable. Should I keep polling the Contacts API until the contact exists?\n• Should I give just some large delay that I know will be more reliable (like 15 seconds)?\n• Is there some better approach to storing the contact id after creating it from the forms API that I am not aware of?",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2020-02-10 09:27:37"
      },
      {
        "time_stamp": "2020-02-10 09:47:46"
      },
      {
        "time_stamp": "2020-02-10 12:02:30"
      },
      {
        "time_stamp": "2020-02-10 12:11:10"
      },
      {
        "time_stamp": "2020-02-11 17:26:57"
      },
      {
        "time_stamp": "2020-02-11 17:35:47"
      },
      {
        "time_stamp": "2020-02-11 17:36:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Walter Gueler",
      "poster_handle": "wgueler"
    },
    "time_stamp": "2020-02-09 17:38:53",
    "text": "yep, that happens, only properties with values come on the response, no empty properties"
  }
]
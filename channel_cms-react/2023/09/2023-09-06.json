[
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-09-06 02:02:44",
    "text": "Hi <@UAYBXDG4U> unfortunetly no, this doesn't answer my question. I need to see how to use conditional visibility in code."
  },
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-09-06 04:47:14",
    "text": "I'm using `Swiper slider` in a component which works very well when rendering in StoryBook, but when I deploy it to HS portal, the Swiper slider doesn't work at all and there are no errors in browser's console. Does anyone know what's wrong?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-09-06 07:03:39",
    "text": "Not sure if you saw this <https://HubSpotdev.slack.com/archives/C04AY1H2204/p1692095362772199> ...\n\nShort answer is that there isn't a good corollary in JS Rendering for the HubL CTAs. We are working on finding a pathway however."
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2023-09-06 07:08:01",
    "text": "Thank you, I was actually able to load them using the dangerouslySetInnerHtml prop but they only show as a fuzzy image on the website rather than a button. I think that's because React renders the HTML on the server, I might try with a client only island :blush: "
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2023-09-06 07:14:44",
    "text": "Hi team,\n\nI have an important question.\n\nHow safe / recommended is it to build an entire production website with JS modules and partials?\n\nI have 2 main worries:\n\n1. Will this particular beta go into general availability eventually? Or will there be significant breaking changes?\n    a. If it'll go to general availability, will there be a period where we are unable to access the tools, or can we continue using them smoothly?\n2. Will JS blocks still be available to CMS Pro users after beta? Again, licensing information is very unclear in documentation.\nI am on my way to building almost the entire website with JS blocks but I wouldn't want any bad surprises down the line :slightly_smiling_face:\n\nThank you!",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-09-06 07:33:10"
      },
      {
        "time_stamp": "2023-09-06 07:44:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-09-06 07:33:10",
    "text": "First off, thank you for bravely moving forward with the JS Rendering beta and providing us with valuable feedback, it really is so critical.\n\nWe plan on a GA release soon - think weeks not months.\n\nThere are no plans to remove JS Building Blocks from any tier. Meaning we intend to have this feature available for free and up.\n\nSo my recommendation is that yes it is safe to build production sites with this tech. As you have seen we still have some shortcoming relative to parity with HubL in some areas (CTAs for example). That said we think the developer has more flexibility and control with JS Building Blocks and will continue to invest in making this pathway even more robust."
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2023-09-06 07:44:48",
    "text": "That sounds amazing, I'm excited then because I absolutely love the experience. It took a bit getting used to but now I'm confident with it and can already tell the productivity boost going from the previous method to JS modules, it's a lot faster for me to develop and test them! \n\nGreat work, really appreciate it :)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-09-06 12:03:31",
    "text": "any cool js-rendering announcements from Inbound?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-09-21 14:16:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-09-06 16:18:12",
    "text": "Hoping someone can help with `RichTextField`'s `enabled_features` prop, i'm still getting all of the wysywig features when I pass a subset array... Am I missing something, or is there a bug? Thanks!\n```&lt;RichTextField\n  name=\"rich_text_field\"\n  label=\"Rich Text Field\"\n  default=\"Here's some &lt;strong&gt;rich text&lt;/strong&gt;!\"\n  enabled_features={[\n    'bold',\n    'italic',\n    'underline',\n    'link',\n    'anchor',\n  ]}\n/&gt;```",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-09-06 16:26:07"
      },
      {
        "time_stamp": "2023-09-06 17:03:25"
      },
      {
        "time_stamp": "2023-09-06 18:02:31"
      },
      {
        "time_stamp": "2023-09-06 18:23:34"
      },
      {
        "time_stamp": "2023-09-07 09:07:47"
      },
      {
        "time_stamp": "2023-09-07 09:59:10"
      },
      {
        "time_stamp": "2023-09-07 10:01:31"
      },
      {
        "time_stamp": "2023-09-07 10:02:29"
      },
      {
        "time_stamp": "2023-09-07 10:19:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-09-06 16:26:07",
    "text": "also noticing that props `inline_help_text` &amp;\n`help_text`  don't work either."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-06 17:03:25",
    "text": "I believe the prop names need to be camel cased - we use that format for field components since itâ€™s the most common format for prop names. enabledFeatures should work and equivalent for the others "
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-09-06 18:02:31",
    "text": "So it's safe to assume that `alignment_direction`, `show_advanced_rel_options`, `supported_types`, `validation_regex`, etc should all be camel case too?"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-09-06 18:23:34",
    "text": "Seems that default value keys are still snake_case"
  }
]
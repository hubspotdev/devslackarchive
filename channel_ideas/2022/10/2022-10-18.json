[
  {
    "text": "Yeah macros is what you want. I use them everywhere. here is an example for an image\n\nadd `{% import \"../../templates/macros.html\" as macros %}`  to the macros and you can use `{{ macros.image(module.image) }}`",
    "time_stamp": "2022-10-18 05:34:04"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-18 05:36:54",
    "text": "<@UATE4ATHP> Awesome. That's exactly waht I was looking for. I'm used to loading macros from the same modules, not using them as partials that can exist in their own file. Very good to know.  Thanks!"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-10-18 05:40:37",
    "text": ":+1::skin-tone-2: yeah they are great. I have macros for everything, my file is like 600 lines :upside_down_face:"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-10-18 05:52:35",
    "edited": {
      "time_stamp": "2022-10-18 05:59:44"
    },
    "text": "Pro Tip: You can use `|replace`  to call a macro.\n\nWe use this to allow marketer to add 'snippets' inside of blog posts just by adding `[[inline_offer]]` and that macro could be anything, or just load a module\n\n```{%- macro renderOffer(offer) -%}\n\t{% module \"module\" path=\"\", label=\"\" %}\n{%- endmacro -%}\n\n{{ content.post_body|replace('[[inline_offer]]', renderOffer()) }}```"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-18 12:19:33",
    "text": "Here is one more idea.  I'd love an easy way to disable HubSpot's Google Font integration when using the font theme field. I've tried a few methods and HubSpot seems to want to load Google Fonts no matter what.\n\n<https://www.loom.com/share/ddb900f9099f40b3970f665cdb82912c>",
    "reply_count": 10,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2022-10-19 06:15:26"
      },
      {
        "time_stamp": "2022-10-19 06:24:51"
      },
      {
        "time_stamp": "2022-10-25 16:44:11"
      },
      {
        "time_stamp": "2022-10-28 05:33:26"
      },
      {
        "time_stamp": "2022-10-28 06:00:33"
      },
      {
        "time_stamp": "2022-10-28 07:50:55"
      },
      {
        "time_stamp": "2022-10-28 07:55:55"
      },
      {
        "time_stamp": "2022-10-28 11:06:28"
      },
      {
        "time_stamp": "2022-10-28 11:25:11"
      },
      {
        "time_stamp": "2022-10-28 11:31:15"
      }
    ]
  }
]
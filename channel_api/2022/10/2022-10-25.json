[
  {
    "poster": {
      "poster_name": "Amar Bico",
      "poster_handle": "amar.bico"
    },
    "time_stamp": "2022-10-25 04:56:47",
    "text": "Hi, we have issues with API targeting LINE ITEMS, amongst the properties, we request 'hs_discount', we used to get this property in response, but now we don't. Do we have wrong property tag/name, or there is some other way to get discount ?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-10-25 09:35:33"
      },
      {
        "time_stamp": "2022-10-26 03:30:53"
      },
      {
        "time_stamp": "2022-10-27 02:17:05"
      },
      {
        "time_stamp": "2022-10-27 02:37:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 07:57:06",
    "text": "Oh that's awesome man, nice work"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 07:57:33",
    "edited": {
      "time_stamp": "2022-10-25 07:57:41"
    },
    "text": "If you want you can mention that to HubSpot by using the share your feedback button at the bottom of the page <https://developers.HubSpot.com/docs/api/crm/timeline#share-your-feedback>"
  },
  {
    "poster": {
      "poster_name": "Jeroen",
      "poster_handle": "jeroen032"
    },
    "time_stamp": "2022-10-25 09:35:33",
    "text": "Make sure you'll include the properties you want to return in the properties parameter, see: <https://developers.HubSpot.com/docs/api/crm/line-items|https://developers.HubSpot.com/docs/api/crm/line-items>"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 12:21:31",
    "edited": {
      "time_stamp": "2022-10-25 12:21:48"
    },
    "text": "Hey all! I’m working on implementing the HubSpot live chat in our application and wondering how others have handled “Closing the conversation” from the customers side. Right now I’m calling `window.HubSpotConversations.widget.remove();` when the customer is done chatting, but theres no real indication from within HubSpot chat that the customer is done with the conversation. It would be nice if there was another function such as `window.HubSpotConversations.widget.closeConversation();`  that I could call to accomplish this. Does this exist?",
    "reply_count": 60,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-10-25 12:25:04"
      },
      {
        "time_stamp": "2022-10-25 13:44:34"
      },
      {
        "time_stamp": "2022-10-25 13:49:47"
      },
      {
        "time_stamp": "2022-10-25 13:55:04"
      },
      {
        "time_stamp": "2022-10-25 13:55:51"
      },
      {
        "time_stamp": "2022-10-25 13:56:07"
      },
      {
        "time_stamp": "2022-10-25 13:56:24"
      },
      {
        "time_stamp": "2022-10-25 13:58:15"
      },
      {
        "time_stamp": "2022-10-25 13:59:32"
      },
      {
        "time_stamp": "2022-10-25 13:59:44"
      },
      {
        "time_stamp": "2022-10-25 14:01:17"
      },
      {
        "time_stamp": "2022-10-25 14:02:44"
      },
      {
        "time_stamp": "2022-10-25 14:02:46"
      },
      {
        "time_stamp": "2022-10-25 14:03:55"
      },
      {
        "time_stamp": "2022-10-25 14:04:05"
      },
      {
        "time_stamp": "2022-10-25 14:04:29"
      },
      {
        "time_stamp": "2022-10-25 14:04:59"
      },
      {
        "time_stamp": "2022-10-25 14:05:00"
      },
      {
        "time_stamp": "2022-10-25 14:05:03"
      },
      {
        "time_stamp": "2022-10-25 14:05:43"
      },
      {
        "time_stamp": "2022-10-25 14:06:25"
      },
      {
        "time_stamp": "2022-10-25 14:06:29"
      },
      {
        "time_stamp": "2022-10-25 14:06:30"
      },
      {
        "time_stamp": "2022-10-25 14:06:49"
      },
      {
        "time_stamp": "2022-10-25 14:06:50"
      },
      {
        "time_stamp": "2022-10-25 14:06:57"
      },
      {
        "time_stamp": "2022-10-25 14:07:15"
      },
      {
        "time_stamp": "2022-10-25 14:07:18"
      },
      {
        "time_stamp": "2022-10-25 14:07:28"
      },
      {
        "time_stamp": "2022-10-25 14:07:47"
      },
      {
        "time_stamp": "2022-10-25 14:08:06"
      },
      {
        "time_stamp": "2022-10-25 14:09:03"
      },
      {
        "time_stamp": "2022-10-25 14:10:41"
      },
      {
        "time_stamp": "2022-10-25 14:11:02"
      },
      {
        "time_stamp": "2022-10-25 14:11:27"
      },
      {
        "time_stamp": "2022-10-25 14:11:33"
      },
      {
        "time_stamp": "2022-10-25 14:11:49"
      },
      {
        "time_stamp": "2022-10-25 14:11:56"
      },
      {
        "time_stamp": "2022-10-25 14:43:18"
      },
      {
        "time_stamp": "2022-10-25 14:43:32"
      },
      {
        "time_stamp": "2022-10-25 14:43:55"
      },
      {
        "time_stamp": "2022-10-25 14:45:21"
      },
      {
        "time_stamp": "2022-10-25 14:45:24"
      },
      {
        "time_stamp": "2022-10-25 14:45:33"
      },
      {
        "time_stamp": "2022-10-25 14:45:48"
      },
      {
        "time_stamp": "2022-10-25 14:46:03"
      },
      {
        "time_stamp": "2022-10-25 14:46:12"
      },
      {
        "time_stamp": "2022-10-25 14:46:38"
      },
      {
        "time_stamp": "2022-10-25 14:46:55"
      },
      {
        "time_stamp": "2022-10-25 14:47:50"
      },
      {
        "time_stamp": "2022-10-25 14:48:33"
      },
      {
        "time_stamp": "2022-10-25 14:48:53"
      },
      {
        "time_stamp": "2022-10-25 14:49:01"
      },
      {
        "time_stamp": "2022-10-25 14:49:28"
      },
      {
        "time_stamp": "2022-10-25 14:49:29"
      },
      {
        "time_stamp": "2022-10-25 14:58:47"
      },
      {
        "time_stamp": "2022-10-25 15:00:27"
      },
      {
        "time_stamp": "2022-10-25 15:00:38"
      },
      {
        "time_stamp": "2022-10-25 15:01:12"
      },
      {
        "time_stamp": "2022-10-25 15:02:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 12:25:04",
    "text": "I’ve been referencing these docs: <https://developers.HubSpot.com/docs/api/conversation/chat-widget-sdk>"
  },
  {
    "poster": {
      "poster_name": "Phil Graver",
      "poster_handle": "phil.graver"
    },
    "time_stamp": "2022-10-25 13:28:26",
    "text": "We have an system that leverages the Deals and Product Endpoints for helping customers manage orders and Inventory. And we have what I hope is a quickly resolved issue with performing requests to the API from an Australian server. Whenever our Australian users connect via our integration to the HubSpot API from an Australian hosted server, we’re not able to get a response via the GetDeals endpoint.\n\nThe integration can authenticate just fine. It gets and updates products back to HubSpot just fine. But for some reason it doesn’t like the auth token when getting the deals.\n\nNow, here’s the kicker. . . The minute we take his database for our app/software and load it onto a US hosted server, the request goes through and we get a successful response and all the deals come across just fine.\n\nShould we be passing different headers in the request from different regions?\n\nAny ideas?\nDM me for the exact error reponse if needed.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-10-25 13:35:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 13:35:23",
    "text": "for future reference we are working through this over dm"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 13:44:34",
    "text": "typically i’ve seen people put a wrapper around the chat — creating a a close or minmize button, then using that as a trigger to close remove it"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 13:49:47",
    "text": "So yup thats what I’m doing currently, but I want to do more than just remove the chat from the page, I want to be able to notify our support staff who are responding to the chat in HubSpot that the customer has ended the chat."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 13:55:04",
    "text": "…. You’d likely need to create this on your own. I was thinking you could do a “[chatended]” placed into the chat and then click send on it when the X is clicked — however I think thats in an iframe iirc, so you might not be able to do that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 13:55:51",
    "text": "I think if you are looking for that functionality you might need to figure out a way to trigger a text message or some other message to who you need it to go to and handle that out of the sdk, i’m not sure of a way to do this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 13:56:07",
    "text": "or not HubSpot chat"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 13:56:24",
    "text": "probably not the answer you want to hear"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 13:58:15",
    "text": "Haha I appreciate the answer! Yeah I was hoping for some way to do it within the sdk…"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 13:59:32",
    "text": "might try the method of sending a string of data to the chat and trying to manually send that through on the X click"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 13:59:44",
    "text": "but again, not sure that will work"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:01:17",
    "text": "Do you know of any relevant documentation for doing something like that?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:02:44",
    "edited": {
      "time_stamp": "2022-10-25 14:02:47"
    },
    "text": "you have a live example I can see your chat working"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:02:46",
    "text": "Yeah if I could just send a “The message has been closed by user” message when they hit that, that would probably be good enough for what we need"
  },
  {
    "text": "",
    "time_stamp": "2022-10-25 14:03:55"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:04:05",
    "edited": {
      "time_stamp": "2022-10-25 14:04:16"
    },
    "text": "Basically this is a modal within our app"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:04:29",
    "text": "Gotcha, I was hoping there was a place I could see it on a webpage so I could test it out real quick"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:04:59",
    "text": "basically i would find the “write a messaage” div on the end users end"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:05:00",
    "text": "sorry its kinda within our app and you would need to create an account etc"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:05:03",
    "text": "and see if I could do somethign like"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:05:43",
    "text": "```  return (\n    &lt;StyledModal\n      id=\"HubSpot-livechat-modal\"\n      title=\"Live Chat\"\n      onClose={handleClose}\n      visible\n      isVisible={HubSpot.isVisible}\n      closeIcon=\"minus\"\n    &gt;\n      &lt;ModalBody&gt;\n        {loading ? (\n          &lt;Spinner /&gt;\n        ) : (\n          &lt;StyledHubSpot\n            id=\"HubSpotLiveChatModal\"\n            ref={hubSpotLiveRef}\n            isVisible={debouncedIsVisible}\n          /&gt;\n        )}\n      &lt;/ModalBody&gt;\n      &lt;ModalFooter&gt;\n        &lt;StyledFooterButtons&gt;\n          &lt;Button\n            variant=\"secondary\"\n            startIcon=\"closeCircle\"\n            onClick={handleEndChat}\n          &gt;\n            End Chat\n          &lt;/Button&gt;\n        &lt;/StyledFooterButtons&gt;\n      &lt;/ModalFooter&gt;\n    &lt;/StyledModal&gt;\n  );```"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:06:25",
    "text": "so target that div inside the &lt;StyledHubSpot id=“HubSpotLiveChatModal”&gt; div"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:06:29",
    "text": "I’m assumign"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:06:30",
    "text": "```document.querySelector('#write-a-message').innerHTML = \"The message has been closed by user\"\ndocument.querySelector('#send-chat').click()```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:06:49",
    "text": "you’d need to change out the query selectors with what is set up in your app"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:06:50",
    "text": "hmmmm ok!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:06:57",
    "text": "and try soethign like that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:07:15",
    "text": "I’d start off wiht just putting text into the field and seeing if I could trigger the send button with the .click()"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:07:18",
    "text": "awesome I’ll give that a shot thanks Nicholas"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:07:28",
    "text": "good luck, not sure how it all works"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:07:47",
    "text": "if you get in there and inspect element, you can paste a screenshot of the code expanded that would be cool"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:08:06",
    "text": "I do’nt have a client right now with chat enabled, or I’d test that out myself"
  },
  {
    "text": "",
    "time_stamp": "2022-10-25 14:09:03"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:10:41",
    "text": "yeah maybe that chat-send-button ?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:11:02",
    "text": "using react I think you woudl want to do soemthign a bit different"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:11:27",
    "text": "dispatch event / mouseevent?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:11:33",
    "text": "something like that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:11:49",
    "text": "give it focus then click"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:11:56",
    "text": "I’m not 100% on the best implmeention of that in react"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:43:18",
    "text": "I don't think you can access elements for the chat widget because they are inside of the iframe"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:43:32",
    "text": "You can always just send a message using the api though"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:43:55",
    "text": "The conversations API is now open for all accounts (that use the conversations tool)"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:45:21",
    "text": "<https://developers.HubSpot.com/docs/api/conversations/conversations>"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:45:24",
    "text": "Ohh that sounds like a better call"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:45:33",
    "text": "yeah having a time trying to break into this iFrame haha"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:45:48",
    "text": "is it an iframe? yeah that is the problem I was thinking you would have"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:46:03",
    "text": "dang iframes"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:46:12",
    "text": "I've ran into that problem too many times"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:46:38",
    "text": "Thanks Carter I’ll read through those docs"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:46:55",
    "text": "For sure, thanks for dropping the link Nick"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:47:50",
    "text": "I won’t mention that I had it open for about an hour but hadn’t gone back to it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:48:33",
    "text": "you know how it goes — open a few tabs, get distracted"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:48:53",
    "text": "Yeah, this morning I accidently closed 300 tabs"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:49:01",
    "text": "Chrome crashed"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 14:49:28",
    "text": "seems like you were playing with fire"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 14:49:29",
    "text": "I think a good 100ish were HubSpot docs"
  },
  {
    "poster": {
      "poster_name": "Jacob Hildebrandt",
      "poster_handle": "jacob035"
    },
    "time_stamp": "2022-10-25 14:58:47",
    "text": "ok so probably want to hit the “Send a message to a thread” endpoint. Do you guys have any tips on how to track down the *threadId* of the current conversation?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 15:00:27",
    "text": "```window.HubSpotConversations.on('conversationStarted', payload =&gt; {\n  console.log(\n    `Started conversation with id ${payload.conversation.conversationId}`\n  );\n});```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 15:00:38",
    "text": "Exactly"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-25 15:01:12",
    "text": "there are some other ways to do it, but that variable you could save in state or attach it to that x button and trigger that"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-25 15:02:01",
    "edited": {
      "time_stamp": "2022-10-25 15:02:07"
    },
    "text": "Yeah, you can also lookup the thread using the api but from the frontend it's just a lot more efficient"
  },
  {
    "poster": {
      "poster_name": "Steven Greenslade",
      "poster_handle": "steven.greenslade"
    },
    "time_stamp": "2022-10-25 18:01:39",
    "text": "Hey guys, so I have an old API integration that needs to be moved to the new private app's, however the old integration passes the API key using the HAPI query param to v1 endpoints, however private apps don't appear to support using the HAPI query param?\n\nIs there a way around this? Sadly this isn't my integration, so I don't have code control. :disappointed:\n(I'll be reaching out to that side as well, but I don't have high hopes.)"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2022-10-25 21:59:36",
    "text": "I have a few times, but i've never gotten a response or seen any improvements"
  }
]
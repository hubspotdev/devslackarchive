[
  {
    "poster": {
      "poster_name": "Pamela Landrum",
      "poster_handle": "prlandru"
    },
    "time_stamp": "2021-10-21 06:09:24",
    "edited": {
      "time_stamp": "2021-10-21 06:09:37"
    },
    "text": "Hi! I'm trying to create a calculator on an external site with Javascript that is within a HubSpot form. The calculator spits out results based on the entries for the form. However, I'm running into an issue where either 1) the results are displayed and the form doesn't pass back a submission to HubSpot or 2) the form passes back a submission but the regular thank-you message from the form is displayed rather than the result.\n\nI feel like this has to be a common scenario... any ideas?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-10-23 06:48:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Justin Jiang",
      "poster_handle": "jjj65"
    },
    "time_stamp": "2021-10-21 09:48:00",
    "text": "Hi, Ive been working with a react app that wants to implement the HubSpot chatbot feature. Im pretty new to this, and as of now, I am having trouble getting installing the tracking code into the webapp. Are there any resources that can direct me in the right direction?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-10-23 06:51:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "ov",
      "poster_handle": "dev297"
    },
    "time_stamp": "2021-10-21 13:07:43",
    "text": "<@U02HX1H0YS1> you're receiving that error because you're trying to access a property on an object that is null. moving the HubSpot livechat script to `&lt;head&gt;` may help page load, but will not resolve the cannot read property of null error"
  },
  {
    "poster": {
      "poster_name": "ov",
      "poster_handle": "dev297"
    },
    "time_stamp": "2021-10-21 13:12:32",
    "text": "high level...\n1. make sure the DOM is loaded before executing any functions \n2. test if `HubSpot-messages-loader` exists and `data-hsjs-xxx` is not null before using it"
  },
  {
    "poster": {
      "poster_name": "ov",
      "poster_handle": "dev297"
    },
    "time_stamp": "2021-10-21 14:05:38",
    "text": "forgot to mention the reason to use async/await is to avoid promise chaining. `await` works within function blocks, setting up `.then` and `.catch` callbacks.\n\nyou don't need to use top-level await. it's a nice to have that can help streamline an app by allowing asynchronous behavior at a modular level. it only works out of the box in node v14+ fyi"
  }
]
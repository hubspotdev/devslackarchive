[
  {
    "poster": {
      "poster_name": "Mikael Edgren",
      "poster_handle": "mikael.edgren"
    },
    "time_stamp": "2023-12-15 08:37:36",
    "text": "Hi all :wave:\n\nI’m stumbling into my first HubSpot CMS project. I’m recreating the hello-world-project from the examples repo, but with Typescript.\n\ntsc is compiling the components to my output folder with the folder structure described in the docs (`/components/partials`and `/components/modules`), but I must be missing something because when starting hs-cms-dev-server I get\n\nPartials\nNo partials in `.components/partials`\nModules\nNo modules in `.components/modules`\n\nHere’s my tsconfig:\n```{\n  \"compilerOptions\": {\n    \"plugins\": [\n      {\n        \"name\": \"typescript-plugin-css-modules\"\n      }\n    ],\n    \"target\": \"es5\",\n    \"module\": \"commonjs\",\n    \"strict\": true,\n    \"jsx\": \"react-jsx\",\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"moduleResolution\": \"node\",\n    \"allowSyntheticDefaultImports\": true,\n    \"noEmit\": false,\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"noImplicitAny\": false\n  },\n  \"include\": [\n    \"src/**/*\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"**/*.test.ts\"\n  ]\n}```\nAnd I’ve set `\"outputPath\": \"./dist\"` in cms-assets.json—not sure if this is correct?\n\nAnyone know what I’m missing?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-12-15 09:56:06"
      },
      {
        "time_stamp": "2023-12-15 09:56:33"
      },
      {
        "time_stamp": "2023-12-15 11:38:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-12-15 09:56:06",
    "text": "hi mikael - if i’m reading that config right you’re doing a TS to JS compilation step on your own before uploading? that shouldn’t be necessary as our dev server and build pipeline support typescript, you should be able to remove the `outDir` / `outputPath` setup you described"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-12-15 09:56:33",
    "text": "the `graphql-storybook` example uses typescript and has a `tsconfig.json` you can check out"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-12-15 11:28:55",
    "text": "hi noel, thank you for trying react modules out and for the feedback. we definitely hear you and are prioritizing better integrating react modules and themes as tim alluded to above to help alleviate this problem"
  },
  {
    "poster": {
      "poster_name": "Mikael Edgren",
      "poster_handle": "mikael.edgren"
    },
    "time_stamp": "2023-12-15 11:38:00",
    "text": "Yeah, I didn’t get that, thought I had to compile it beforehand :relaxed:  But sweet! Thanks for the help. "
  }
]
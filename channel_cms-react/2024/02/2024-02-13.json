[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:37:53",
    "text": "it looks like a deploy of `@mui/Tabs` will show as successful but then \"crash\" the editor in content staging (500 error)",
    "reply_count": 23,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-13 06:38:10"
      },
      {
        "time_stamp": "2024-02-13 06:39:27"
      },
      {
        "time_stamp": "2024-02-13 06:40:16"
      },
      {
        "time_stamp": "2024-02-13 06:40:44"
      },
      {
        "time_stamp": "2024-02-13 06:41:30"
      },
      {
        "time_stamp": "2024-02-13 06:41:56"
      },
      {
        "time_stamp": "2024-02-13 06:42:07"
      },
      {
        "time_stamp": "2024-02-13 06:42:25"
      },
      {
        "time_stamp": "2024-02-13 06:42:47"
      },
      {
        "time_stamp": "2024-02-13 06:43:21"
      },
      {
        "time_stamp": "2024-02-13 06:43:55"
      },
      {
        "time_stamp": "2024-02-13 06:44:28"
      },
      {
        "time_stamp": "2024-02-13 06:45:42"
      },
      {
        "time_stamp": "2024-02-13 06:46:12"
      },
      {
        "time_stamp": "2024-02-13 06:46:28"
      },
      {
        "time_stamp": "2024-02-13 06:47:03"
      },
      {
        "time_stamp": "2024-02-13 06:47:14"
      },
      {
        "time_stamp": "2024-02-13 06:48:54"
      },
      {
        "time_stamp": "2024-02-13 06:49:33"
      },
      {
        "time_stamp": "2024-02-13 06:49:56"
      },
      {
        "time_stamp": "2024-02-13 06:50:12"
      },
      {
        "time_stamp": "2024-02-13 06:51:37"
      },
      {
        "time_stamp": "2024-02-13 06:52:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:38:10",
    "text": "I think the fix is to set it to clientOnly (testing)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:39:27",
    "text": "^ did not fix but has a better error message. one sec"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 06:40:16",
    "edited": {
      "time_stamp": "2024-02-13 06:40:30"
    },
    "text": ":wave: - Hello Andrey - currently there are various ways that the MUI project is constructed in a way that is malformed relative to ESM (ECMAScript Modules). The result for us currently is that we are seeing runtime errors when some of those projects assets are used."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:40:44",
    "text": "hey, yea, refresh did help btw"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:41:30",
    "text": "I'm using a slightly older version of mui if that helps"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:41:56",
    "text": "`5.15.7`"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 06:42:07",
    "text": "We are working on a few different fixes in this regard. 1st being to provide a health check to know if your code built with an MUI component (or anything else) is \"runnable\" on our infrastructure."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 06:42:25",
    "text": "Right now I would say use MUI at your own risk."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:42:47",
    "text": "ok, yea, might just stop using it for now (I do have it in a few places though)"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 06:43:21",
    "text": "We are also working on pathway that can \"just make it work\" but I can't promise timing on that."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 06:43:55",
    "text": "Here's a useful resource for seeing how \"healthy\" packages are <https://publint.dev/>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:44:28",
    "text": "ok, that would be great. I understand about timing. I can probably use a different tabs solution for now"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:45:42",
    "text": "\"at your own risk\"...seems unlikely that it would fail in production if it passes through the build process and I'm able to see the page successfully in content staging"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:46:12",
    "text": "wondering if I might as well leave it and just use clientOnly for now"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:46:28",
    "text": "just wouldn't want it to break in production"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 06:47:03",
    "text": "If things are rendering properly in any non local environment, you should be good."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 06:47:14",
    "text": "<https://publint.dev/@mui/material@5.15.7> &lt;-- here is linting info on the version you are using"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:48:54",
    "text": "I think I'll risk it..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:49:33",
    "text": "little bit worried to update to the latest version whenever you have the fix and have production break but pass the build/deploy stage...but like you said...at my own risk"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:49:56",
    "text": "the build failing for errors has definitely saved me before"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:50:12",
    "text": "but looks like in this weird scenario it is able to pass"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:51:37",
    "text": "if it helps it \"crashed\" when I dragged in the module. Let me try that again..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 06:52:20",
    "text": "^ cannot recreate"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-13 07:54:13",
    "text": "Hm, not sure. I see “Upload the project to your HubSpot account and create a build. If the project hasn’t been created in the account yet, you’ll be asked whether you want to create it.” at <https://developers.HubSpot.com/docs/platform/project-cli-commands#upload-to-HubSpot> . Ideally there would be some sort of `--yes` or `--auto-create-project` option, but maybe you can use the `yes` command to automatically respond to the prompt?"
  },
  {
    "poster": {
      "poster_name": "Matt Rollender",
      "poster_handle": "mrollender"
    },
    "time_stamp": "2024-02-13 08:08:24",
    "text": "I brought this up with to see if we can make this support first-class in the CLI. Not sure if this works with npx, but historically I have gotten around this by doing `echo \"y\" | hs project upload` to confirm the prompt."
  },
  {
    "poster": {
      "poster_name": "George Cosmin Mucalau",
      "poster_handle": "cosmin"
    },
    "time_stamp": "2024-02-13 08:09:20",
    "text": "Thanks <@UCY83QS6Q> <@ULKP20ZUN>, will give this a shot !"
  },
  {
    "poster": {
      "poster_name": "Matt Rollender",
      "poster_handle": "mrollender"
    },
    "time_stamp": "2024-02-13 08:11:36",
    "edited": {
      "time_stamp": "2024-02-13 08:11:43"
    },
    "text": "The other thing I'll note here is that this error:\n```Project config not found. Try running 'hs project create' first.```\njust means `hs project upload` doesn't see the `hsproject.json`  file. It must be either in the directory you are running the command in, or in a parent directory."
  },
  {
    "poster": {
      "poster_name": "Branden Rodgers",
      "poster_handle": "brodgers"
    },
    "time_stamp": "2024-02-13 08:14:06",
    "text": "&gt;  My goal would be to automatically create the project when running the hs project upload command, any idea if this can be bypassed?\nThis is possible to do. You can run the upload command with the `--forceCreate` flag to skip the create prompt when the project doesn't exist. So: `hs project upload --forceCreate`"
  },
  {
    "poster": {
      "poster_name": "Branden Rodgers",
      "poster_handle": "brodgers"
    },
    "time_stamp": "2024-02-13 08:15:20",
    "text": "I'm noticing not all of the available options are showing for `hs project create --help` . I'll look into making them more discoverable."
  },
  {
    "poster": {
      "poster_name": "George Cosmin Mucalau",
      "poster_handle": "cosmin"
    },
    "time_stamp": "2024-02-13 08:19:14",
    "text": "Haha, sounds like there is my solution. Will give it a shot! Thanks!"
  },
  {
    "poster": {
      "poster_name": "Branden Rodgers",
      "poster_handle": "brodgers"
    },
    "time_stamp": "2024-02-13 08:20:34",
    "text": "np! Thanks for letting us know about it :smile:"
  },
  {
    "poster": {
      "poster_name": "Tom Moffett",
      "poster_handle": "tom.moffett"
    },
    "time_stamp": "2024-02-13 09:52:28",
    "edited": {
      "time_stamp": "2024-02-13 09:53:25"
    },
    "text": "anyone having issues with the local dev all of a sudden CSS being in incorrect order? It's rendering CSS from node_modules package imports after my own component's CSS import. This just happened when I was working on something in the last hour, and even reverting my code doesn't seem to fix anything. it seems to render correctly when deployed to a HubSpot page, but this is now making local dev useless. I also did all sorts of clearing cache, restarting the local build, closing everything out and restarting my laptop, and nothing seems to make a difference",
    "reply_count": 13,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-02-13 09:53:51"
      },
      {
        "time_stamp": "2024-02-13 09:54:05"
      },
      {
        "time_stamp": "2024-02-13 09:54:18"
      },
      {
        "time_stamp": "2024-02-13 09:54:45"
      },
      {
        "time_stamp": "2024-02-13 09:54:59"
      },
      {
        "time_stamp": "2024-02-13 09:55:17"
      },
      {
        "time_stamp": "2024-02-13 09:55:51"
      },
      {
        "time_stamp": "2024-02-13 09:55:52"
      },
      {
        "time_stamp": "2024-02-13 09:56:00"
      },
      {
        "time_stamp": "2024-02-13 09:56:49"
      },
      {
        "time_stamp": "2024-02-13 09:57:06"
      },
      {
        "time_stamp": "2024-02-13 12:23:45"
      },
      {
        "time_stamp": "2024-02-13 14:26:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 09:53:51",
    "text": "Did you update the version of the dev server you were using?"
  },
  {
    "poster": {
      "poster_name": "Tom Moffett",
      "poster_handle": "tom.moffett"
    },
    "time_stamp": "2024-02-13 09:54:05",
    "text": "I was just about to try that"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 09:54:18",
    "text": "What version are you using now?"
  },
  {
    "poster": {
      "poster_name": "Tom Moffett",
      "poster_handle": "tom.moffett"
    },
    "time_stamp": "2024-02-13 09:54:45",
    "text": "I currently am using `0.14.1`"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 09:54:59",
    "text": "Also is this module only view or in the context of a page?"
  },
  {
    "poster": {
      "poster_name": "Tom Moffett",
      "poster_handle": "tom.moffett"
    },
    "time_stamp": "2024-02-13 09:55:17",
    "text": "just the module by itself locally"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 09:55:51",
    "text": "What third party package are you pulling styles from?"
  },
  {
    "poster": {
      "poster_name": "Tom Moffett",
      "poster_handle": "tom.moffett"
    },
    "time_stamp": "2024-02-13 09:55:52",
    "text": "I didn't seem to have this problem about 2 hours ago, so confused on what changed exactly"
  },
  {
    "poster": {
      "poster_name": "Tom Moffett",
      "poster_handle": "tom.moffett"
    },
    "time_stamp": "2024-02-13 09:56:00",
    "text": "Material UI"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 09:56:49",
    "text": "Ok would you DM me a simple construct of the scenario creating this issue?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-13 09:57:06",
    "text": "I.e code example. "
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2024-02-13 11:25:33",
    "text": "hello <@U02CS2Q38QG> did you find a solution for this?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 12:23:45",
    "text": "^ material ui strikes again!"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2024-02-13 12:39:29",
    "text": "Hey Mariana, no, not really. What I did was to have a JSON fallback for when the endpoint was failing and I used that on local. In production, everything worked fine."
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2024-02-13 12:44:40",
    "text": "Thanks George… good idea for the approach, I was using a variable with json as well. Its kind of annoying its not possible to set"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-13 13:47:03",
    "text": "is there a proper setup to make sure images I add through fields are optimized? (things like getting converted to .webp and whatever else normally happens)",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-20 05:08:18"
      },
      {
        "time_stamp": "2024-02-20 06:47:49"
      },
      {
        "time_stamp": "2024-02-20 08:06:53"
      },
      {
        "time_stamp": "2024-02-20 08:16:42"
      }
    ]
  },
  {
    "text": "Coding faster…. (working on our friend and pal material mui)",
    "time_stamp": "2024-02-13 14:26:49"
  }
]
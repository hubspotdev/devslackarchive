[
  {
    "poster": {
      "poster_name": "Tom Quinn",
      "poster_handle": "tquinn"
    },
    "time_stamp": "2019-06-27 07:57:15",
    "text": "anyone here have a regex_replace example for stripping all non-letters?"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-06-27 07:58:02",
    "text": "Been using the `menu()` function for some custom mega-menu styling, however, I can't get the implied `{{ node.level }}` to actually output anything.\n```\n{% set main_nav = menu(8769410345) %}\n&lt;ul&gt;\n{% for child in main_nav.children %}\n  &lt;li&gt;\n    &lt;a href=\"{{ child.url }}\"&gt;{{ child.label }}&lt;/a&gt;\n    {% if child.children %}\n    &lt;ul class=\"level-{{ child.level }}\"&gt;\n    {% for child in child.children %}\n      &lt;li&gt;&lt;a href=\"{{ child.url }}\"&gt;{{ child.label }}&lt;/a&gt;&lt;/li&gt;\n    {% endfor %}\n    &lt;/ul&gt;\n    {% endif %}\n  &lt;/li&gt;\n{% endfor %}\n&lt;/ul&gt;\n```\nwhere `{{ child.level }}` is, i've also tried `{{ main_nav.level }}` and even `{{ node.level }}`, but none output anything. I'm not sure if it's either my markup or if the `{{ node.level }}` example in the documentation is incorrect. Any advice?",
    "reply_count": 17,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-06-27 08:00:43"
      },
      {
        "time_stamp": "2019-06-27 08:02:18"
      },
      {
        "time_stamp": "2019-06-27 08:31:22"
      },
      {
        "time_stamp": "2019-06-27 09:49:19"
      },
      {
        "time_stamp": "2019-06-27 09:50:52"
      },
      {
        "time_stamp": "2019-06-27 09:51:26"
      },
      {
        "time_stamp": "2019-06-27 09:51:40"
      },
      {
        "time_stamp": "2019-06-27 09:51:50"
      },
      {
        "time_stamp": "2019-06-27 09:51:53"
      },
      {
        "time_stamp": "2019-06-27 09:52:19"
      },
      {
        "time_stamp": "2019-06-27 09:52:26"
      },
      {
        "time_stamp": "2019-06-27 09:52:58"
      },
      {
        "time_stamp": "2019-06-27 09:53:02"
      },
      {
        "time_stamp": "2019-06-27 09:53:32"
      },
      {
        "time_stamp": "2019-06-27 09:53:35"
      },
      {
        "time_stamp": "2019-06-27 09:54:12"
      },
      {
        "time_stamp": "2019-06-27 09:54:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 08:00:43",
    "text": "You are right it isn’t populating correctly. Let me see if I can fix this"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-06-27 08:02:18",
    "text": ":partyparrot: Thanks for looking into it!"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 08:31:22",
    "text": "I have a fix for this that I will be pushing out"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:49:19",
    "text": "Sweet. Thanks matt"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:50:52",
    "text": "<@U6GNQ7JBU> I have a question. Is there a way to get the parents node levels? say you are on third level child. To get the Parent Level 1 and Parent Level 2 for that child?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 09:51:26",
    "text": "I believe you can use `node.parentNode`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 09:51:40",
    "text": "And also `node.parentNode.parentNode`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:51:50",
    "text": "hmm. interesting. I would love to see this stuff doc'd"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:51:53",
    "text": "ok thanks"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 09:52:19",
    "text": "Should be doc’d here <https://designers.HubSpot.com/docs/hubl/hubl-supported-variables>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 09:52:26",
    "text": "Under `Menu node variables`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:52:58",
    "text": "OMG i need to read throuhg the docs more often."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:53:02",
    "text": "i didnt even see that"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 09:53:32",
    "text": "Tbf we should link to that where `menu()` is documented"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-27 09:53:35",
    "text": "cc <@UBFA10FMF>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:54:12",
    "text": "Thanks again <@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-27 09:54:25",
    "text": "I just subscribed again to the doc updates"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2019-06-27 20:51:50",
    "edited": {
      "time_stamp": "2019-06-27 20:53:29"
    },
    "text": "Has anyone had any luck or know if it’s possible to use a {{ printed_field }} inside of a conditional statement within a loop  {% for %}.  This is my code block:\n\n```{% for item in module.menu.translated_menus %}\n         {% if (content.slug is string_startingwith \"{{ item.lang_url }}/\") or (content.slug ==\"fr\") %}\n           {% menu id=\"{{ item.menu_translated }}\" %}\n         {% endif %}\n   {% endfor %}```\n\nThe {{ item.lang_url }} doesn’t seem to want to print so that the logic works.  Am I doing something wrong or is this not possible?\n\nThanks guys.  Any help is massively appreciated.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-06-27 21:06:14"
      },
      {
        "time_stamp": "2019-06-27 21:07:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-27 21:06:14",
    "edited": {
      "time_stamp": "2019-06-27 21:07:04"
    },
    "text": "Try removing the quotes and brackets around the item lang url"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2019-06-27 21:07:21",
    "edited": {
      "time_stamp": "2019-06-27 21:07:33"
    },
    "text": "<@U7SL518D6> Thanks for the suggestion although then it throws a parsing error"
  }
]
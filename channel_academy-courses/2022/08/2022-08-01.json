[
  {
    "poster": {
      "poster_name": "Anna Letaw",
      "poster_handle": "anna190"
    },
    "time_stamp": "2022-08-01 06:11:17",
    "text": "Hi Amber, thank you for the reply.  It wants 'font-family' in the css in order to work.  It's not hearing the call for styles or size, if that makes any sense."
  },
  {
    "poster": {
      "poster_name": "Anna Letaw",
      "poster_handle": "anna190"
    },
    "time_stamp": "2022-08-01 06:13:38",
    "text": "Here's the other odd thing: the selector for styles changes after I select a font in the theme window.  My screenshot shows what it looks like before I change it.  After I change it the \"Regular, etc\" selection changes to the expected: \"B/I/U\" choices."
  },
  {
    "text": "It looks like this after I change the font.  ...but it still doesn't work:slightly_smiling_face:",
    "time_stamp": "2022-08-01 06:15:32"
  },
  {
    "poster": {
      "poster_name": "Amber Behring-Wojcek",
      "poster_handle": "awojcek"
    },
    "time_stamp": "2022-08-01 06:35:18",
    "text": "apologies - I misread! I understand now what you’re saying"
  },
  {
    "poster": {
      "poster_name": "Amber Behring-Wojcek",
      "poster_handle": "awojcek"
    },
    "time_stamp": "2022-08-01 06:42:15",
    "text": "Apologies if this is over-simplified, but until someone who knows for sure hops in — I was looking at this KB page (<https://knowledge.HubSpot.com/website-pages/use-fonts-in-HubSpot>) and it notes that for Merriweather it is “**Only available as a web font in the drag and drop email editor.” Are you loading it as a default font or have you imported it?"
  },
  {
    "poster": {
      "poster_name": "Anna Letaw",
      "poster_handle": "anna190"
    },
    "time_stamp": "2022-08-01 07:38:09",
    "text": "Hmmm...I'll investigate.  I can select the fonts and it sees this one, it just doesn't see the styles or the size."
  },
  {
    "text": "Hi Anna! When outputting font styles from the theme's fields.json, I've done this:\n\n`header, footer {`\n    `{{ theme.font.style }}`\n`};`\n\nThis will output all of the CSS rules for you (see attached image):",
    "time_stamp": "2022-08-01 12:49:03",
    "edited": {
      "time_stamp": "2022-08-01 13:00:10"
    }
  },
  {
    "poster": {
      "poster_name": "Ben Brophy",
      "poster_handle": "bbrophy"
    },
    "time_stamp": "2022-08-01 12:49:45",
    "text": "Is this your theme's fields.json file? Can you share a screenshot or the code itself?"
  },
  {
    "poster": {
      "poster_name": "Ben Brophy",
      "poster_handle": "bbrophy"
    },
    "time_stamp": "2022-08-01 12:56:25",
    "text": "In your CSS, you might also need to include the \"size_unit\" for the font size. But using the above would be easiest"
  },
  {
    "poster": {
      "poster_name": "Anna Letaw",
      "poster_handle": "anna190"
    },
    "time_stamp": "2022-08-01 13:43:41",
    "text": "So, I'm confused.  For styles, isn't that what I have in my CSS?  (I use the word \"styles\" because that's what's in the JSON.)  When one uses HubL in CSS, do you not need the property?  Is the photo you have above from your CSS?"
  },
  {
    "poster": {
      "poster_name": "Ben Brophy",
      "poster_handle": "bbrophy"
    },
    "time_stamp": "2022-08-01 13:46:24",
    "text": "Right, what I have is what you see.\n\nIn this case, the CMS outputs the entire ruleset for you. This is an example of <https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields-overview#generated-css|generated CSS>. (Docs are not super clear on this, sorry about that)"
  },
  {
    "poster": {
      "poster_name": "Ben Brophy",
      "poster_handle": "bbrophy"
    },
    "time_stamp": "2022-08-01 13:47:02",
    "text": "Your approach is also correct, but your values just needed a little modification. Using generated CSS takes care of all of it for you, though."
  },
  {
    "poster": {
      "poster_name": "Ben Brophy",
      "poster_handle": "bbrophy"
    },
    "time_stamp": "2022-08-01 13:47:49",
    "edited": {
      "time_stamp": "2022-08-01 13:49:06"
    },
    "text": "To be clear, just having `{{ theme.font.style }}`  (just `style` - no '-s') takes care of everything (it's the entire CSS rule - both properties and values)"
  },
  {
    "poster": {
      "poster_name": "Anna Letaw",
      "poster_handle": "anna190"
    },
    "time_stamp": "2022-08-01 13:57:00",
    "text": "Hmmmm...  I'll have to go through my files again tomorrow.  I have used the generated CSS in another module in the &lt;scope&gt; section so I'm understanding that concept.  Now I have to go back and remember how I got the JSON file data...  Thanks for the help.  A"
  }
]
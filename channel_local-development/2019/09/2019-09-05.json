[
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-09-05 06:32:19",
    "text": "can you watch two folders at the same time?",
    "reply_count": 9,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-09-05 06:45:03"
      },
      {
        "time_stamp": "2019-09-05 06:52:33"
      },
      {
        "time_stamp": "2019-09-05 06:52:55"
      },
      {
        "time_stamp": "2019-09-05 07:54:32"
      },
      {
        "time_stamp": "2019-09-05 07:55:52"
      },
      {
        "time_stamp": "2019-09-05 07:56:21"
      },
      {
        "time_stamp": "2019-09-05 07:58:12"
      },
      {
        "time_stamp": "2019-09-06 08:10:13"
      },
      {
        "time_stamp": "2019-09-06 12:29:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-09-05 06:45:03",
    "text": "I only want to watch the css and js folders in my local enviro"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-09-05 06:52:33",
    "text": "as long as they are subfolders of the folder you are watching"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-09-05 06:52:55",
    "text": "in other words, watch the parent folder"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-09-05 07:54:32",
    "text": "If for some reason watching the parent folder doesn't work, you should be able to open 2 different terminal windows and run the watch task on the 2 folders individually"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-09-05 07:55:52",
    "text": "just make sure you cd into the root folder with your config file in it before you run each task"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-09-05 07:56:21",
    "text": "I’ve had to do that <@UJQNNKKHN> I couldn’t get it to watch parent. Bee good if we could run the command like\n\n- npx hscms watch --portal=PORTALID css FolderName/css js FolderName/js"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-09-05 07:58:12",
    "text": "yeah... if you're using this a lot, you might create a gulp task that will execute both of those in the background."
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-09-05 10:56:11",
    "text": "<@U22VBL87M> Sorry, been preoccupied the past few days, but I did do just this test on a coded template and got the same result.  I created a new coded template and module, and included the module in the template.  I created a  Included the module in the template, and created a page from the template, and input some content into the module fields. I delete the module, re-upload the module, and on the page it says it can't find the module.  Now if I go back into the template, and change the template name/id `{% module \"this thing\"` it finds the module again, but still loses all the field data that I input at the page level"
  }
]
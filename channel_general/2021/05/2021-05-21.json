[
  {
    "poster": {
      "poster_name": "Tobias",
      "poster_handle": "tobias"
    },
    "time_stamp": "2021-05-21 03:38:44",
    "text": "Hi everyone,\n\nWe at InboundLabs have solved an issue with HubSpot + GoToWebinar. Currently you can only connect one GoToWebinar Account at the time.\nIf you are operating in multiple countries/languages it’s very tricky to do since you always have to re-connect/disconnect your GTW Accounts. (<https://community.HubSpot.com/t5/HubSpot-Ideas/Allow-for-more-than-one-gotowebinar-account-to-integrate-with/idi-p/35991|See HubSpot Community>)\n\nPlease give us a thumbsup in this HubSpot Contest :slightly_smiling_face:\n<https://devpost.com/software/lead-generator-multiple-gotowebinar-account-integration>"
  },
  {
    "poster": {
      "poster_name": "Paul Buiko",
      "poster_handle": "lpd.themes"
    },
    "time_stamp": "2021-05-21 03:50:19",
    "text": "Guys, is there a way to reset the theme default global_partial, header and footer for example"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:29:05",
    "text": "I have created a custom object called ‘Job’ and added associations with contacts; ‘job_to_contact’ and ‘contact_to_job’. I would now like to retrieve all associated jobs from a contact using `crm_associations(101, 'USER_DEFINED', 16)` where `101` is the contact ID and `16` is the ‘job_to_contact’ association ID. This keeps returning `CrmObjectList: {hasMore=false, offset=0, results=[], total=0}` or `null` when I set the `association category` to `INTEGRATOR_DEFINED`. I am not sure if I misunderstood something. But contact 101 has 16 jobs associated.",
    "reply_count": 22,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-21 06:36:46"
      },
      {
        "time_stamp": "2021-05-21 06:37:31"
      },
      {
        "time_stamp": "2021-05-21 06:37:57"
      },
      {
        "time_stamp": "2021-05-21 06:38:47"
      },
      {
        "time_stamp": "2021-05-21 06:41:00"
      },
      {
        "time_stamp": "2021-05-21 06:41:49"
      },
      {
        "time_stamp": "2021-05-21 06:46:58"
      },
      {
        "time_stamp": "2021-05-21 06:47:14"
      },
      {
        "time_stamp": "2021-05-21 06:47:32"
      },
      {
        "time_stamp": "2021-05-21 06:48:10"
      },
      {
        "time_stamp": "2021-05-21 06:49:23"
      },
      {
        "time_stamp": "2021-05-21 06:49:47"
      },
      {
        "time_stamp": "2021-05-21 06:50:02"
      },
      {
        "time_stamp": "2021-05-21 06:51:06"
      },
      {
        "time_stamp": "2021-05-21 06:51:54"
      },
      {
        "time_stamp": "2021-05-21 06:52:21"
      },
      {
        "time_stamp": "2021-05-21 06:53:10"
      },
      {
        "time_stamp": "2021-05-21 06:53:23"
      },
      {
        "time_stamp": "2021-05-21 06:54:19"
      },
      {
        "time_stamp": "2021-05-21 06:54:28"
      },
      {
        "time_stamp": "2021-05-21 06:54:40"
      },
      {
        "time_stamp": "2021-05-21 06:54:49"
      }
    ]
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2021-05-21 06:36:46",
    "text": "I also noticed that the default <https://legacydocs.HubSpot.com/docs/methods/crm-associations/crm-associations-overview?_ga=2.37414947.2007525205.1621230936-292794246.1599029395|association ID’s> have conflicting ID’s when I retrieve my custom object scheme:\n\n```{\n                    \"fromObjectTypeId\": \"0-1\",\n                    \"toObjectTypeId\": \"2-1176525\",\n                    \"name\": \"job_to_contact\",\n                    \"cardinality\": \"ONE_TO_MANY\",\n                    \"inverseCardinality\": \"ONE_TO_MANY\",\n                    \"id\": \"16\",\n                    \"createdAt\": null,\n                    \"updatedAt\": null\n                }```"
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:37:31",
    "text": "Hi <@UGDF9EBPW> Which language / framework are you using?"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:37:57",
    "text": "Hi <@U010M6T8DEW>. I am currently trying to achieve this in a custom module using HubL"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:38:47",
    "text": "Using the <https://developers.HubSpot.com/docs/cms/hubl/functions#crm-associations|crm_associations> function."
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:41:00",
    "text": "Typically, you can use the objectTypeId when specifying which type of associated records you'd like in the response (the objectTypeId is generated at time of custom object type creation -- there are other ways to find this if you don't have it).\n\nFor example, my get contact by ID request could be something like:\n\nGET <https://api.hubapi.com/crm/v3/objects/contacts/CONTACT_ID?associations=OBJECT_TYPE_ID&amp;hapikey=YOUR_HAPIKEY>"
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:41:49",
    "text": "Let me review the HubL function to see if I can give you more specific advise here"
  },
  {
    "text": "Yeah, the API is more straightforward. When I try to use the objectTypeId I get the following error:",
    "time_stamp": "2021-05-21 06:46:58"
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:47:14",
    "text": "<@UGDF9EBPW> You should be able to find your association type id by using the \"List association types\" endpoint on this doc: <https://developers.HubSpot.com/docs/api/crm/associations>\n\nFor example:\nGET <https://api.hubapi.com/crm/v3/associations/contact/OBJECT_TYPE_ID/types?hapikey=YOUR_HAPIKEY>\n\nWhere OBJECT_TYPE_ID refers to your custom object. That should return the association type ID and name."
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:47:32",
    "text": "Let me try this!"
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:48:10",
    "text": "Not sure what the association category would be. I'd try USER_DEFINED first, then INTEGRATOR_DEFINED"
  },
  {
    "text": "The result is:",
    "time_stamp": "2021-05-21 06:49:23"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:49:47",
    "text": "So `crm_associations(101, 'USER_DEFINED', 16)` should work."
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:50:02",
    "edited": {
      "time_stamp": "2021-05-21 06:50:10"
    },
    "text": "No matter the enum I use, I got no results."
  },
  {
    "text": "Maybe because I am not on a membership page.",
    "time_stamp": "2021-05-21 06:51:06"
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:51:54",
    "text": "Ahhh that could be a problem"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:52:21",
    "text": "I was hoping, because I am retrieving a custom object list and not a contact object I would see results."
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:53:10",
    "text": "It might limit where associations go either way."
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:53:23",
    "text": "I am afraid thats the case"
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:54:19",
    "text": "Let me know if you find a workaround :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:54:28",
    "text": "I will! Thanks for your help."
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach880"
    },
    "time_stamp": "2021-05-21 06:54:40",
    "text": "No problem, all the best :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-05-21 06:54:49",
    "text": "Same to you!"
  }
]
[
  {
    "poster": {
      "poster_name": "Nick Verwymeren",
      "poster_handle": "nick759"
    },
    "time_stamp": "2022-03-18 08:55:24",
    "text": "Hi Filip. This would most certainly be possible using the api. The only concern I would have is surrounding security, since this page would be surfacing data normally kept under HubSpot authentication details. Some ways to help with this would be to create unique unguessable URLs. But you would want to make sure those QR codes got shredded when done. Also anyone in the warehouse who has access to them should be fully trusted with the data. Our company, Roadmap Agency helps with these kinds of integrations and weâ€™d be happy to help out if needed. Feel free to DM me"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-03-18 09:42:55",
    "text": "bump again"
  },
  {
    "poster": {
      "poster_name": "Stephen Brown",
      "poster_handle": "stephen783"
    },
    "time_stamp": "2022-03-18 09:50:35",
    "text": "Hello Everyone, I am attempting to build an \"Upload file\" endpoint, it's been working but for some reason, it will occasionally reject zip files that are definitely within the size limits for HubSpot. Does anybody have any idea why this may be? My fetch request is as follows:\n\n```var url = '{{request.scheme}}://{{ request.domain }}/_hcms/api/file-upload';\n    var file_unbased = document.getElementById('file_upload').files[0];\n    var file = readFile(file_unbased);\n    if (file_unbased.type.indexOf('image') == -1) {\n      var file_ext = file_unbased.name.split('.').pop();\n      var file_name = $('#file_name').val() + '.' + file_ext;\n    } else {\n      var file_name = $('#file_name').val();\n    }\n    function readFile(file) {\n      console.log(file);\n      return new Promise((resolve, reject) =&gt; {\n          const reader = new FileReader();\n          reader.onload = () =&gt; resolve(reader.result);\n          reader.onerror = error =&gt; reject(error);\n          reader.readAsDataURL(file);\n      });\n    }\n\n  // when the user changes the input file, run readFile() and save it as a promise\n  const filePromise = readFile(file_unbased);\n  // when the promise is resolved, send the file to the server\n  filePromise.then(filePromise =&gt; {\n    let body = JSON.stringify(\n        {\n            file: filePromise,\n            file_name: file_name\n        })\n\n    console.log(body);\n    // send the file to the server\n    fetch(url, {\n      method: 'post', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow', // manual, *follow, error\n      body: body // body data type must match \"Content-Type\" header\n    })```\n",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-03-22 08:28:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jo Stone",
      "poster_handle": "jo"
    },
    "time_stamp": "2022-03-18 10:33:47",
    "text": "Hi - I just rotated my API. Do I now need to update any settings on my Wix Website Editor and in MailerLite?"
  },
  {
    "poster": {
      "poster_name": "David C Shelton",
      "poster_handle": "david.shelton"
    },
    "time_stamp": "2022-03-18 11:09:18",
    "text": "I am trying to set up a pipeline in Azure Data Factory to HubSpot.  Is there an easy way to generate the Access Token and Refresh Token without building a website?  I must be missing something silly.  It really shouldn't be this difficult to access my data."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2022-03-18 12:53:40",
    "text": "Use the <https://developers.HubSpot.com/docs/api/crm/search#search-through-associations|search endpoint> and filter by associations.\nyou can also choose <https://developers.HubSpot.com/docs/api/crm/search#specify-returned-properties|what props are to be returned>"
  }
]
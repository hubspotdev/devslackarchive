[
  {
    "poster": {
      "poster_name": "Jon Arne Tjelta",
      "poster_handle": "jon.arne"
    },
    "time_stamp": "2020-12-16 03:18:41",
    "text": "Hi. Does anyone here have experience with reverse proxy in HubSpot? I am basically trying to mirror a site on a different domain and have followed part of this description: <https://developers.HubSpot.com/docs/cms/developer-reference/reverse-proxy-support>\n\nOriginal domain: <https://www.tampnet.com/>\nProxy domain: <http://www.tampnet.net/>\n\nThe proxy domain only shows a 404-page instead of the homepage. I guess it has to do with the X-HubSpot-Trust-Forwarded-For: true header. Is it possible to set up reverse proxy only by a domain registrar?"
  },
  {
    "poster": {
      "poster_name": "Mohesh Borah",
      "poster_handle": "mohesh.borah"
    },
    "time_stamp": "2020-12-16 03:31:06",
    "text": "How to save the -\"Google Map API Key\" in HubSpot and to get it inside the HUBL to show map-location in the website page ?\nLocation details are taken from the HUBDB, also if we add the API KEY as a field value of the module willn't it create security issue ?"
  },
  {
    "poster": {
      "poster_name": "Joe Hu",
      "poster_handle": "joehu"
    },
    "time_stamp": "2020-12-16 04:01:16",
    "text": "Hi everyone, we are building an app that modifies CMS pages, currently it requires all HubSpot users to sign in via OAuth with required permission before the user can use the app, we want to change this so that after successful installation, even users without enough permission can use the app. We will have to save the token retrieved from initial installation to implement this, and it has a side effect that all changes to CMS pages will be logged under owner of the token. Is there any better solution for this? Or is there any way to set editing user when updating a page via API?"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-12-16 08:57:53",
    "text": "So the new drag and drop email builder DOES let you save emails out as templates... But is there any way to move templates from portal to portal?"
  },
  {
    "poster": {
      "poster_name": "Caitlin Kuiper",
      "poster_handle": "ckuiper"
    },
    "time_stamp": "2020-12-16 11:31:28",
    "text": "My client has a third-party reviews widget that they want added to their website. Looking for some direction on how to go about doing this. <https://help.guildquality.com/gq2/comments-and-reviews-widget/?cat=marketing>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-12-16 12:05:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2020-12-16 12:05:19",
    "text": "what about serverless <@U01DFCAB60J>"
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2020-12-16 12:23:12",
    "text": "Is there’s a recommended way for giving freelance developers access to client portals?\n\nOne solution I was considering would be to create a generic developer email address (eg: <mailto:dev@mycompany.com|dev@mycompany.com>) that I will have my clients add to their Portal - then any freelance developers I hire would have access to this email login/PW (with limited permissions) which they can use to login to the particular client's portal they are assigned to.\n\nDo other agencies handle granting freelancer Portal access this way? Any other methods you’ve seen for granting freelancers access to Portals?\n\nAnything to be mindful of in terms of sold/managed MRR?\n\nOpen to any suggestions right now as I don’t currently have a process in place for this but am looking to implement one soon.\n\nThank you!"
  },
  {
    "text": "Hi, Has anyone managed to get the survey to appear only if a query string matches? I want to make the survey appear on all pages but only if a query string is set to a specified value.\n\n",
    "time_stamp": "2020-12-16 13:57:25"
  }
]
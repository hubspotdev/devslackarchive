[
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 10:06:47",
    "text": "Does anyone know if its possible to build a for loop in HubL to loop through the pages on the site?"
  },
  null,
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-01-09 10:53:15",
    "text": "you can loop through blog posts, but not arbitrary landing or site pages."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-01-09 10:54:30",
    "text": "that said, this is possible using Javascript and the page APIs on <http://developer.HubSpot.com|developer.HubSpot.com>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 11:52:31",
    "edited": {
      "time_stamp": "2017-01-09 11:52:36"
    },
    "text": "Thanks Jeff <@U22PJPGK0>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 11:54:54",
    "edited": {
      "time_stamp": "2017-01-09 11:54:59"
    },
    "text": "<@U25PYL3Q8> I heard back about the importer:\n&gt;The Blog Importer tool is designed to work with a few specific blog tools (currently Wordpress and Squarespace) that have XML exporting tools. It's not designed to work with a standard RSS feed (which HubSpot generates), and while it would be possible to convert the JSON from the Blog API to XML, it's not going to be the same format the the import tool is designed to work with.\n\n&gt;If you're already using the blog API to pull the posts, you're best option would be to also use the Blog API to recreate those posts in the other HubSpot portal."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 11:55:24",
    "text": "HAHA. That makes sense"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 11:56:40",
    "text": "Looks like ill be working on my API skills afterall lol"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 11:57:10",
    "text": "SHOULD BE FUN"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 11:57:35",
    "text": "There are plenty of resources out there where people have examples"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 11:58:51",
    "text": "Do you know of any off hand that I could use?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:00:14",
    "text": "you doing it in javascript or php?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 12:00:26",
    "text": "probably JS or curl"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:00:38",
    "text": "<https://github.com/ryanwinchester/HubSpot-php>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:00:42",
    "text": "this uses php"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:00:46",
    "text": "it is the one I used the most"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 12:00:56",
    "text": "ill look into it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:01:00",
    "text": "he's pretty responsive on twitter if you need help"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-01-09 12:01:14",
    "text": "sounds good. Thanks <@U25PYL3Q8> :thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:01:27",
    "text": "here is one for node"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:01:27",
    "text": "<https://github.com/Datahero/node-HubSpot>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:01:39",
    "text": "I haven't used it but have it favorited for the next time I spin up some tasks"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:30:05",
    "edited": {
      "time_stamp": "2017-01-09 12:31:09"
    },
    "text": "will the HubSpot contact fields - original source, drill down1, drill down2 - capture data accurately even if a form on a page is not a HubSpot form but the HubSpot JS code is on the page?  e.g. i have a saas application with a sign up form for the app.  the sign up page is generated by the app. what do we need to do to capture the original source values in HubSpot for a sign up on that page?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:31:07",
    "text": "You can use javascript to copy those values to the HubSpot form on keyup or on blur"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:31:31",
    "text": "how does one access the HubSpot cookie?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:31:33",
    "text": "and keep those form pieces in the HubSpot form hidden"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:31:44",
    "text": "the form isn’t a HubSpot form"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:32:09",
    "text": "it’s a form from the python back end app that is used to create a new user id + pwd (think new user sign up)"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:33:15",
    "text": "i see there’s a HubSpot forms api.  is there a way to send the sign up data (user name/id, not password, user email) to HubSpot from that sign up page AND also send the original source fields?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:33:20",
    "text": "you can use the form api to submit to HubSpot"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:33:33",
    "text": "gimme a sec and I can provide you with a deck"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:33:35",
    "text": "the forms api says the HubSpot cookie needs to be accessed"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:33:36",
    "text": "that has that info on it"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:33:37",
    "text": "ok"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:33:40",
    "edited": {
      "time_stamp": "2017-01-09 12:33:49"
    },
    "text": "great. thank you <@U25PYL3Q8>"
  },
  {
    "text": "<@U25PYL3Q8|nickdeckerdevs> uploaded a file: <https://HubSpotdev.slack.com/files/nickdeckerdevs/F3P5FT6RG/advanced_hubl__1_.pptx|Advanced_HubL (1).pptx>",
    "time_stamp": "2017-01-09 12:34:38"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:35:09",
    "text": "slide 21"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:35:16",
    "text": "starts on 20"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:36:04",
    "text": "if this is on a page outside of a HubSpot site"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:36:19",
    "text": "you are going to have to access that cookie via javascript"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:36:33",
    "text": "and I don't have any examples of that -- I haven't tried that in a while"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-01-09 12:36:49",
    "text": "but you see the data you are looking for"
  },
  {
    "poster": {
      "poster_name": "Prabhakar Gopalan",
      "poster_handle": "pg"
    },
    "time_stamp": "2017-01-09 12:43:17",
    "text": "ok thanks, i’ll look into it"
  }
]
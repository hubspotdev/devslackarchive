[
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-10 08:22:15",
    "text": "not any that connect with the CRM specifically but I know many people here have created events modules using HubDB"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-10 10:46:22",
    "text": "For the `menu()` function, can we have options added to the json output for `nextNavItem` and `prevNavItem`? This would be helpful when using these navs as a pagination of sorts",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-10 10:48:09"
      },
      {
        "time_stamp": "2019-04-10 10:48:51"
      },
      {
        "time_stamp": "2019-04-10 10:51:05"
      },
      {
        "time_stamp": "2019-04-10 10:51:22"
      },
      {
        "time_stamp": "2019-04-10 10:51:36"
      },
      {
        "time_stamp": "2019-04-10 10:51:45"
      },
      {
        "time_stamp": "2019-04-10 10:52:00"
      },
      {
        "time_stamp": "2019-04-10 11:09:02"
      },
      {
        "time_stamp": "2019-04-10 11:09:03"
      },
      {
        "time_stamp": "2019-04-10 11:16:52"
      },
      {
        "time_stamp": "2019-04-10 11:19:33"
      },
      {
        "time_stamp": "2019-04-10 11:20:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-10 10:48:09",
    "text": "<@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-10 10:48:51",
    "text": "Thanks for taggin him, wasnt sure if he was out as his light was out so didnt want to tag directly lol"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-10 10:51:05",
    "text": "What do these refer to? As in the parent nodes next/previous child?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-10 10:51:22",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-10 10:51:36",
    "text": "would it be the parent or the item youâ€™re currently on?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-10 10:51:45",
    "text": "not so much the children portion but top level parents"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-10 10:52:00",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-10 11:09:02",
    "text": "Does `topLevelAncestor` at least give you that top level node&gt;"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-10 11:09:03",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-10 11:16:52",
    "text": "That way this will become `node.topLevelAncestor.nextNode` or `node.topLevelAncestor.previousNode`"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-10 11:19:33",
    "edited": {
      "time_stamp": "2019-04-10 11:19:34"
    },
    "text": "let me try it real quick (im not seeing in it in the output)"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-10 11:20:29",
    "text": "so topLevelAncestor does give me the node output"
  }
]
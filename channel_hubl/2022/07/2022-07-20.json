[
  {
    "poster": {
      "poster_name": "Miteshkumar Padariya",
      "poster_handle": "mitesh"
    },
    "time_stamp": "2022-07-20 07:38:05",
    "edited": {
      "time_stamp": "2022-07-20 07:38:41"
    },
    "text": "Is there any way to compare the current page URL with the search page URL (from settings)?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 08:00:28",
    "text": "You would need to use some sort of scripting to access it. Inside module a add a data tag to the module like &lt;section class=“module-a” data-grid=“true”&gt;&lt;/section&gt;\n\nThen us JS in your other module to get it\n\nor combine the two modules into one module"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 08:02:03",
    "text": "<https://developers.HubSpot.com/docs/api/crm/associations> will be where you want to look — those legacy docs don’t have the lookup I don’t think"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 10:00:57",
    "text": "Hello,\nI have been working 3 whole days on the solution and I still cannot make it work. Please help, if you can. It sounds stupidly easy, but it keeps not working.\n\nWhat I need is to check if the blog post has a tag and if it does, make a form appear. If it has a different tag, make a different form appear. What I keep running into is that I can display all the tags, but once I try to use any sort of IF logic to see if one of the tags is part of the array, I get YES no matter what tag I ask for, if its on the post or not.\n\nI display all the tags' names on the post to see that the array is working.\n\n`{% set tags = content.tag_list %}`\n`{% for tag in tags %}`\n    `&lt;div class=\"post-title\"&gt;{{ tag.name }}&lt;/div&gt;`\n`{% endfor %}`\n\nBut then when I add some IF logic to see if a particular tag is part of the post's array, I get Yes always.\n\n`{% set tags = content.tag_list %}`\n`{% for tag in tags %}`\n    `{% if tag in tags == \"[Hiring Advice]\" %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n`{% endfor %}`\n\nYou can see it live here on the dummy blog:\n<https://blog.aghires.com/dummy/feedlot-manager-2-0-0-0-0-0-0>\nThe tag is Weekly Featured Jobs, yet for Hiring Advice tag search it gives me \"YES!\"\n\nHere is a dummy post with all the tags.\n<https://blog.aghires.com/dummy/feedlot-manager-2-0>\nHere is a dummy post with just the tag the code looks for:\n<https://blog.aghires.com/dummy/feedlot-manager-2-0-0-0>\n\nI already have figured out how to make it work if there is a single tag on the post, the reason I'm checking \"If one of the tags is XYZ tag\". This works well for posts with a single tag on them.\n\n`{% if content.tag_list == \"[Hiring Advice]\" %}`\n`{% form`\n\t`form_to_use=\"{{ module.hiring_advice_form.form_id }}\"`\n\t`response_response_type=\"{{ module.hiring_advice_form.response_type }}\"`\n\t`response_message=\"{{ module.hiring_advice_form.message }}\"`\n\t`response_redirect_id=\"{{ module.hiring_advice_form.redirect_id }}\"`\n\t`response_redirect_url=\"{{module.hiring_advice_form.redirect_url}}\"`\n\t`gotowebinar_webinar_key=\"{{ module.hiring_advice_form.gotowebinar_webinar_key }}\"`\n`%}`\n`{% else %}`\n`{% endif %}`",
    "reply_count": 60,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2022-07-20 10:41:41"
      },
      {
        "time_stamp": "2022-07-20 10:41:56"
      },
      {
        "time_stamp": "2022-07-20 11:48:14"
      },
      {
        "time_stamp": "2022-07-20 11:48:44"
      },
      {
        "time_stamp": "2022-07-20 11:50:15"
      },
      {
        "time_stamp": "2022-07-20 14:11:30"
      },
      {
        "time_stamp": "2022-07-20 14:12:33"
      },
      {
        "time_stamp": "2022-07-20 14:12:52"
      },
      {
        "time_stamp": "2022-07-20 14:13:28"
      },
      {
        "time_stamp": "2022-07-20 14:15:08"
      },
      {
        "time_stamp": "2022-07-20 14:15:13"
      },
      {
        "time_stamp": "2022-07-20 14:15:15"
      },
      {
        "time_stamp": "2022-07-20 14:15:20"
      },
      {
        "time_stamp": "2022-07-20 14:15:29"
      },
      {
        "time_stamp": "2022-07-20 14:15:48"
      },
      {
        "time_stamp": "2022-07-20 14:16:39"
      },
      {
        "time_stamp": "2022-07-20 14:17:01"
      },
      {
        "time_stamp": "2022-07-20 14:17:07"
      },
      {
        "time_stamp": "2022-07-20 14:17:19"
      },
      {
        "time_stamp": "2022-07-20 14:17:32"
      },
      {
        "time_stamp": "2022-07-20 14:17:35"
      },
      {
        "time_stamp": "2022-07-20 14:17:52"
      },
      {
        "time_stamp": "2022-07-20 14:18:03"
      },
      {
        "time_stamp": "2022-07-20 14:29:34"
      },
      {
        "time_stamp": "2022-07-20 14:30:36"
      },
      {
        "time_stamp": "2022-07-20 14:38:46"
      },
      {
        "time_stamp": "2022-07-20 14:43:13"
      },
      {
        "time_stamp": "2022-07-20 14:43:44"
      },
      {
        "time_stamp": "2022-07-20 14:44:05"
      },
      {
        "time_stamp": "2022-07-20 14:45:04"
      },
      {
        "time_stamp": "2022-07-20 14:46:35"
      },
      {
        "time_stamp": "2022-07-20 14:51:35"
      },
      {
        "time_stamp": "2022-07-20 14:51:58"
      },
      {
        "time_stamp": "2022-07-20 14:52:00"
      },
      {
        "time_stamp": "2022-07-20 14:52:53"
      },
      {
        "time_stamp": "2022-07-20 15:14:18"
      },
      {
        "time_stamp": "2022-07-20 15:15:03"
      },
      {
        "time_stamp": "2022-07-20 15:15:15"
      },
      {
        "time_stamp": "2022-07-20 15:22:20"
      },
      {
        "time_stamp": "2022-07-20 15:27:49"
      },
      {
        "time_stamp": "2022-07-20 15:29:36"
      },
      {
        "time_stamp": "2022-07-20 15:32:01"
      },
      {
        "time_stamp": "2022-07-20 15:32:58"
      },
      {
        "time_stamp": "2022-07-20 15:33:23"
      },
      {
        "time_stamp": "2022-07-20 15:33:45"
      },
      {
        "time_stamp": "2022-07-20 15:33:56"
      },
      {
        "time_stamp": "2022-09-16 04:24:58"
      },
      {
        "time_stamp": "2022-09-16 04:56:04"
      },
      {
        "time_stamp": "2022-09-16 05:01:38"
      },
      {
        "time_stamp": "2022-09-16 05:03:06"
      },
      {
        "time_stamp": "2022-09-16 05:09:07"
      },
      {
        "time_stamp": "2022-09-16 05:17:34"
      },
      {
        "time_stamp": "2022-09-16 05:18:21"
      },
      {
        "time_stamp": "2022-09-16 05:27:31"
      },
      {
        "time_stamp": "2022-09-16 05:29:38"
      },
      {
        "time_stamp": "2022-09-16 05:29:53"
      },
      {
        "time_stamp": "2022-09-16 05:31:10"
      },
      {
        "time_stamp": "2022-09-16 05:32:13"
      },
      {
        "time_stamp": "2022-09-16 07:42:23"
      },
      {
        "time_stamp": "2022-09-16 07:46:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 10:41:41",
    "text": "```    {% if tag in tags == \"[Hiring Advice]\" %}```\nthis becomes\n`{% if true == \"[Hiring Advice]\" %}` because tag is always `in tags`\n`tag in tags` is checking that `tag` is within the `tags` collection and this exptest returns a boolean result. Any non-empty string compared to a boolean will be true. Therefore your if tag is always evaluating to true."
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 10:41:56",
    "text": "What you want is just\n```    {% if tag == \"[Hiring Advice]\" %}```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 11:48:14",
    "text": "You might be right if they have brackets around the tag name — but I think they’d be looking for `{% if content.tag_list is containing 'tagname' %}` <https://developers.HubSpot.com/docs/cms/hubl/operators-and-expression-tests#containing>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 11:48:44",
    "edited": {
      "time_stamp": "2022-07-20 11:48:56"
    },
    "text": "and you wouldn’t need to do this inside a loop if you use this, the expression check checks to see if the variable is in the list (array of tag names)"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 11:50:15",
    "text": "Oh, I didn't read the whole thing. I just saw that if tag was wrong"
  },
  {
    "poster": {
      "poster_name": "Joshua Todd",
      "poster_handle": "josh290"
    },
    "time_stamp": "2022-07-20 13:56:59",
    "edited": {
      "time_stamp": "2022-07-20 14:12:50"
    },
    "text": "I'm working on a blog listing page and want to filter out one blog article by `isFeatured` (this will be a template export).  I want to be able to filter the contents instead of inside the `{% for content in contents %}` So I want a new object of arrays, for example: `{% set contents = new_filtered_array %}`  rather than doing it inside the loop because then we get one less blog post and it throws off the count.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-07-20 15:43:08"
      },
      {
        "time_stamp": "2022-07-20 17:00:04"
      },
      {
        "time_stamp": "2022-07-20 17:03:23"
      },
      {
        "time_stamp": "2022-07-20 17:03:37"
      },
      {
        "time_stamp": "2022-07-25 07:59:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:11:30",
    "text": "Thank you both. Sadly neither solution worked :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:12:33",
    "text": "I tried now both:\n`{% set tags = content.tag_list %}`\n`{% if tags is containing \"[Hiring Advice]\" %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n\nand\n\n`{% if tags is containing \"[Hiring Advice]\" %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n\nbut neither returns Yes! And to be sure I even used variants of the tag's name."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:12:52",
    "text": "on the page do this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:13:28",
    "text": "```{{ tags|pprint }}```\nand copy the output"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:15:08",
    "text": "Thats one of the versions I did try."
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:15:13",
    "text": "The output is.."
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:15:15",
    "text": "Hiring Advice"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:15:20",
    "text": "<https://blog.aghires.com/dummy/feedlot-manager-2-0-0-0>"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:15:29",
    "text": "You can see it here."
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:15:48",
    "text": "But both with the brackets and without it returns NOP"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 14:16:39",
    "text": "```{% if tags is containing \"Hiring Advice\" %}```\nWhat about this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:17:01",
    "text": "```{% set tags = content.tag_list %}\n{% if tags is containing \"Hiring Advice\" %}\n  YES!\n  {% else %}\n  NOP!\n    {% endif %}```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:17:07",
    "text": "what jack said"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:17:19",
    "text": "Also nothing"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:17:32",
    "text": "hmm"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:17:35",
    "text": "lemme think for a bit"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:17:52",
    "text": "On the page you can see 5x NOP! thats cos I use different versions of the  tags name"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:18:03",
    "text": "`{% set tags = content.tag_list %}`\n\n`{{ tags|pprint }}`\n\n`{% if tags is containing '[Hiring Advice]' %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n\n`{% if tags is containing \"Hiring Advice\" %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n\n`{% if tags is containing \"hiring-advice\" %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n\n`{% if tags is containing [\"Hiring Advice\"] %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n\n`{% if tag == \"[Hiring Advice]\" %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:29:34",
    "text": "<@U25PYL3Q8> <@UCJANAW1Y> something is off with those tag names. When I manually create the tag array and then ask for\n\n`{% if tags is containing 'Dummy Tag' %}`\n  `YES!`\n  `{% else %}`\n  `NOP!`\n    `{% endif %}`\n\nit is working well and it tells me YES! So the array containing these tags is broken somehow.\n<https://blog.aghires.com/dummy/feedlot-manager-2-0>"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:30:36",
    "text": "What could be wrong with that?"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 14:38:46",
    "edited": {
      "time_stamp": "2022-07-20 14:40:29"
    },
    "text": "~`{% if 'Hiring Advice' in tags %}`~ seems that won't work either"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:43:13",
    "text": "Lets try it out!"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:43:44",
    "text": "Doesnt work."
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:44:05",
    "text": "Oh this is frustrating."
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 14:45:04",
    "text": "I can reproduce in my own portal so I'm testing to see why this doesn't work"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 14:46:35",
    "text": "Thank you. I keep testing options, but keep getting errors"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 14:51:35",
    "text": "Huzzah!\n```{{ (tags|map('name')) is containing 'Hiring Advice' }}```\nor\n```{{ 'Hiring Advice' in tags|map('name') }}```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:51:58",
    "text": "YES MAP IS WHAT I WAS LOOKING FOR BUT I’M IN A MEETING AND CAN’T FIND IT"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-07-20 14:52:00",
    "text": "Because `tags` is not a map of strings, it's actually a map of `Tag` objects"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 14:52:53",
    "text": "yup, thanks jack, I knew it was somethign odd"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:14:18",
    "text": "Let me try it out please"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:15:03",
    "text": "Oh yea!"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:15:15",
    "text": "That is sooooo... I dont want to say stupid, I want to say odd!!"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:22:20",
    "text": "Thank you so much! This was so helpful, I would never figure it out on my own."
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:27:49",
    "text": "But working on this made me learn clear() function, by which I actually finished the job. Lol, I learned a lot"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 15:29:36",
    "text": "Good job — I cant remember who taught me this like 6 years ago.. but it was in this same chatroom I believe lol."
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:32:01",
    "text": "If you guys wouldnt be from so very far, Id owe you a beer"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 15:32:58",
    "text": "lol I do’nt know if you know this but money travels over the internet now lol"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 15:33:23",
    "text": "No reason to buy a beer though, but thank you"
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:33:45",
    "text": "Youre very kind."
  },
  {
    "poster": {
      "poster_name": "Dalibor Selucky",
      "poster_handle": "dalibor.selucky.tc"
    },
    "time_stamp": "2022-07-20 15:33:56",
    "text": "Thanks to people like you its pleasure to learn."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 15:43:08",
    "text": "if you are using a normal blog listing page with the for content in contents, it gets the amount of posts from the blog settings in HubSpot.. so if you have 9 set up, it is going to pull in 9 posts.\n\nIf you create a new filtered array of posts with this, you will eventually miss out on a post when you have your featured post pass through…\n\nYou would need to do your own pagination and query values and do all of that if you want to head that route, or get all those values as json objects, or do some other heavy lifting.\n\nor a recent blog posts hubl call and you do the offsetting manually with a bunch of math —\n\nThis may not be in budget to happen or it may be a bit tiresome to do.\n\nI’d suggest creating a CTA or some sort of advertisement, content offer to place in that featured blog posts place so when you `if isFeatured` \nthe else has that display in its place so you don’t mess up your count"
  },
  {
    "poster": {
      "poster_name": "Joshua Todd",
      "poster_handle": "josh290"
    },
    "time_stamp": "2022-07-20 17:00:04",
    "edited": {
      "time_stamp": "2022-07-20 17:00:14"
    },
    "text": "Thanks so much! We were thinking about maxing out the listing number of posts and creating our own pagination."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 17:03:23",
    "text": "If you are gonna do that I'd suggest crating your own page/template and use the blog posts hubl call and load all of the posts into a json object. You will have a blazing fast blog listing "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-07-20 17:03:37",
    "text": "If you need any help dm me"
  }
]
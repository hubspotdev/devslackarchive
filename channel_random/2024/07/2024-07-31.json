[
  {
    "poster": {
      "poster_name": "Wojciech Gwardjak",
      "poster_handle": "wojciechgwardjak"
    },
    "time_stamp": "2024-07-31 03:41:34",
    "text": "try to click on the uploaded image details and choose compression level to High - the best quality"
  },
  {
    "poster": {
      "poster_name": "Rui Cruz",
      "poster_handle": "rui"
    },
    "time_stamp": "2024-07-31 08:55:05",
    "edited": {
      "time_stamp": "2024-07-31 08:56:12"
    },
    "text": "Hello everyone! Kind of a weird question, im starting to work in a company that did not manage HubSpot in the best way, so now we have a ton of properties created, with access levels configured at a property level without need for it. I would like to automate a way to check which ones had their access level altered so that i can then question about those only (instead of manually having to check each one over more than 1000+ ones :dizzy_face: )\n\nFrom UI we have the default which i dont need to check: `everyone can view and edit`\n\nHowever API wise (<https://api.hubapi.com/crm/v3/properties/deals>) im getting:\n```{\n   \"updatedAt\":\"2023-04-21T19:17:58.264Z\",\n   \"createdAt\":\"2023-04-21T19:17:58.264Z\",\n   \"name\":\"xxx\",\n   \"label\":\"xxx\",\n   \"type\":\"number\",\n   \"fieldType\":\"number\",\n   \"description\":\"xxx\",\n   \"groupName\":\"xxx\",\n   \"options\":[\n\n   ],\n   \"createdUserId\":\"123\",\n   \"updatedUserId\":\"123\",\n   \"displayOrder\":-1,\n   \"calculated\":false,\n   \"externalOptions\":false,\n   \"archived\":false,\n   \"hasUniqueValue\":false,\n   \"hidden\":false,\n   \"showCurrencySymbol\":false,\n   \"modificationMetadata\":{\n      \"archivable\":true,\n      \"readOnlyDefinition\":false,\n      \"readOnlyValue\":false\n   },\n   \"formField\":false,\n   \"dataSensitivity\":\"non_sensitive\"\n}```\nIs there a smart way to do this?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-08-09 10:39:47"
      },
      {
        "time_stamp": "2024-08-09 10:41:26"
      },
      {
        "time_stamp": "2024-08-28 09:09:02"
      }
    ]
  }
]
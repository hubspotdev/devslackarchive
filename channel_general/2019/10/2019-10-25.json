[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2019-10-25 02:18:18",
    "text": "Also getting this"
  },
  {
    "poster": {
      "poster_name": "Chris Knowles",
      "poster_handle": "chris618"
    },
    "time_stamp": "2019-10-25 02:37:56",
    "text": "I ended up putting together a Zap that fired the requisite information into the Blogs API, worked well!"
  },
  {
    "text": "<@U54TVT3C1> on your dashboard there is a 'blog views' report, you can filter this by individual blog",
    "time_stamp": "2019-10-25 02:56:58"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2019-10-25 05:31:31",
    "text": "Does anyone know if it’s possible to allocate form submissions to a specific list if the form is submitted say from a blog slug i.e /resources/ ?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-10-25 07:36:12"
      },
      {
        "time_stamp": "2019-10-27 12:54:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2019-10-25 07:24:56",
    "text": "would love to be able to use the pages api as a headless cms."
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2019-10-25 07:33:39",
    "text": "Would be awesome if you could outline the website in HubSpot templates, and then fetch the results through the api. (the pages api would have to be simplified and stripped to a mininum i guess).\n\nThis would be especially great for our enterprise customers where we have a marketing website in HubSpot and other sites in headless cms (often contentful or similar). In those cases we could have all content in the same place. :thumbsup:  <@U22PKFRU5>"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2019-10-25 07:34:50",
    "text": "that sounds really interesting!"
  },
  {
    "text": "Hey Ben, in your lists tool you should be able to create a list with the filter type of `form submissions` and then once a form is chosen you can choose which page/post to select for further narrowing down the list.",
    "time_stamp": "2019-10-25 07:36:12"
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2019-10-25 07:43:36",
    "text": "Hey all - I'm in the process of niching down to focus on HubSpot web development and being technical support for other agencies - just finished re-designing/rebuilding my home page to reflect this mission and would appreciate any feedback on design, copy + messaging, anything I'm leaving out, etc, etc from the community - thank you all! <https://www.drivegrowthagency.com/>",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-10-25 09:20:39"
      },
      {
        "time_stamp": "2019-10-25 10:24:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2019-10-25 07:44:34",
    "text": "guess first thing I can do is fix that copy mistake :point_up_2::laughing:"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-10-25 08:14:59",
    "text": ":wave::skin-tone-3::wave::skin-tone-3: <@U7W5SDG3D>! Educate me, why can’t we do this with the current Pages API ... what’s blocking it / missing? "
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2019-10-25 08:25:35",
    "text": "<@U22PKFRU5> For one the size of the request is way to big. the second is that the structure of the modules/widget_data is unpredictable"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-10-25 09:20:39",
    "text": "One thing I am noticing is the inconsistency in menus between homepage, interior pages, and blog. Totally understandable about the blog having a different nav as its on its own subdomain but its also confusing as it makes it feel detached.\n\nalso not sure you need the scroll on the images in the “Recent work” parts.\n\nOther than that, I like the clean look  and color choices"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-10-25 09:20:57",
    "text": "Can you DM the portal?"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-10-25 09:38:05",
    "text": "Yes! The thought has crossed my mind to do an experiment with gatsby using the pages api... that would negate the size of the request, but still the way widget data is structured seems unpredictable. If that was straightened out so we could map widget IDs to front-end app components, and use that data as component props, that would be pretty cool."
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-10-25 09:48:24",
    "text": "&gt;  the second is that the structure of the modules/widget_data is unpredictable\nit also is tied to the structure of the template which means that you still need templates"
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2019-10-25 10:24:25",
    "text": "Ahh good call, I need to update the blog menu - and yeah I think you're right about the scroll on the recent works sections. I remember it being frustrating on mobile when the page scroll was interrupted by the work sections scroll - thank you for the feedback!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-10-25 10:33:32",
    "text": "Something that may be worth taking a look at... I've been wanting to experiment with using Elementor + WP Rest API + Gatsby as a possible solution, as the elementor row and grid information is actually stored in the DB. Saw this walkthrough a few weeks ago and it looks promising:\n\n<https://www.youtube.com/watch?v=N5UtB36x_O8>"
  },
  {
    "poster": {
      "poster_name": "Benjamin Razi",
      "poster_handle": "benjamin"
    },
    "time_stamp": "2019-10-25 10:58:16",
    "text": "Curious, anyone here that serve and maintain static CSS files from your portal and then include them in client project CSS files?\nWe are thinking about doing this for our base.css. Are there any performance drawbacks in doing so? Any thoughts or recommendations?"
  }
]
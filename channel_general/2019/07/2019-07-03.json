[
  {
    "poster": {
      "poster_name": "Neha Bais",
      "poster_handle": "nehabais1990"
    },
    "time_stamp": "2019-07-03 04:29:31",
    "text": "Hello All,  Is social login functionality or integration available with HubSpot ?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-03 04:37:43"
      },
      {
        "time_stamp": "2019-07-03 05:13:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-07-03 04:37:43",
    "text": "Not exactly what you are asking <@UJ2QKB849> but this might help you <https://knowledge.HubSpot.com/articles/kcs_article/account/can-i-use-single-sign-on-sso-with-HubSpot>"
  },
  {
    "poster": {
      "poster_name": "Neha Bais",
      "poster_handle": "nehabais1990"
    },
    "time_stamp": "2019-07-03 05:13:53",
    "text": "Thanks Umakant. But I want social login functionality  for user visiting website..not for my team. I want functionality provided by Restrict Content Pro. This plugin is for WordPress But I am looking similar in HubSpot."
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2019-07-03 07:58:04",
    "text": "Hi there, has anyone encountered issues about items being excluded from google indexing / crawl  on a HubSpot website though there’s nothing in place to disallow agents within robots.txt?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-03 08:01:50"
      },
      {
        "time_stamp": "2019-07-03 08:30:56"
      },
      {
        "time_stamp": "2019-07-03 10:23:18"
      },
      {
        "time_stamp": "2019-07-04 03:53:03"
      },
      {
        "time_stamp": "2019-07-04 05:42:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 08:01:50",
    "edited": {
      "time_stamp": "2019-07-03 08:02:03"
    },
    "text": "are there any meta properties in the head preventing?"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2019-07-03 08:30:56",
    "text": "Nothing obvious to me or unusual, though there is a duplicate meta tag so looking at removing this just in case. anything settings wise that I would need to consider in HubSpot perhaps?"
  },
  {
    "poster": {
      "poster_name": "Alex Bauer",
      "poster_handle": "alex.bauer"
    },
    "time_stamp": "2019-07-03 09:46:59",
    "text": "Good morning! I have an issue I am running into with a new landing page I created. I haven't had this issue in the past. I created a new \"Drag and Drop\" landing page today and my header content is fixed and all of the content scrolls behind it. I would like it to not be visible when people scroll down. Any ideas on how to remove the sticky function?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-03 09:48:29",
    "text": "link to page?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-03 10:09:21",
    "text": "in `hubtheme-style.css` add or update to include this: ```.body-container-wrapper {\n    padding-top: 0;\n}\n\n.header-container-wrapper {\n    position: static;\n}```"
  },
  {
    "poster": {
      "poster_name": "Alex Bauer",
      "poster_handle": "alex.bauer"
    },
    "time_stamp": "2019-07-03 10:18:50",
    "text": "Thank you!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 10:23:18",
    "text": "Htaccess file?"
  },
  {
    "poster": {
      "poster_name": "Dave Barden",
      "poster_handle": "dbarden"
    },
    "time_stamp": "2019-07-03 11:49:28",
    "text": "Quick question. I have this code and a contact with a Salesforce Lead ID, but when I add this module to an email, it just defaults to the `else` part of the statement. Do I need to explicitly set something for the `.value` to be equal to something? Thanks!\n\n```{% if contact.salesforcecontactid.value %}\n\n  &lt;p&gt;Salesforce Contact ID: {{ contact.salesforcecontactid }}&lt;/p&gt;\n\n{% elif contact.salesforceleadid.value %}\n\n  &lt;p&gt;Salesforce Lead ID: {{ contact.salesforceleadid }}&lt;/p&gt;\n\n{% else %}\n\n  &lt;p&gt;This contact doesn't have any Salesforce information.&lt;/p&gt;\n\n{% endif %}```",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-03 11:51:22"
      },
      {
        "time_stamp": "2019-07-03 12:20:47"
      },
      {
        "time_stamp": "2019-07-03 12:21:40"
      },
      {
        "time_stamp": "2019-07-03 12:33:50"
      },
      {
        "time_stamp": "2019-07-03 12:34:43"
      },
      {
        "time_stamp": "2019-07-03 12:35:26"
      },
      {
        "time_stamp": "2019-07-03 12:41:50"
      },
      {
        "time_stamp": "2019-07-03 12:43:20"
      },
      {
        "time_stamp": "2019-07-03 13:29:34"
      },
      {
        "time_stamp": "2019-07-08 07:47:11"
      },
      {
        "time_stamp": "2019-07-08 07:48:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-03 11:51:22",
    "text": "For emails, the personalization tokens don’t get filled in until the very last step, in this case that means after the hubl logic executes.  If you need conditional logic in emails, the only way to do that is with Smart Content"
  },
  {
    "poster": {
      "poster_name": "Dave Barden",
      "poster_handle": "dbarden"
    },
    "time_stamp": "2019-07-03 12:20:47",
    "text": "Thanks for the response! So, do something like this with a smart rule? <https://knowledge.HubSpot.com/articles/kcs_article/cos-general/add-smart-content-to-your-website-pages-landing-pages-and-emails>"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-03 12:21:40",
    "text": "Yup exactly. You would likely want to create a list where either salesforce contact or lead id is known then you can use that as the smart criteria"
  },
  {
    "poster": {
      "poster_name": "Dave Barden",
      "poster_handle": "dbarden"
    },
    "time_stamp": "2019-07-03 12:33:50",
    "text": "Any way to do that without creating a new list?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-03 12:34:43",
    "text": "No, the only property you can use directly without creating a list is lifecycle stage"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-03 12:35:26",
    "edited": {
      "time_stamp": "2019-07-03 12:35:30"
    },
    "text": "You could probably re-use your Salesforce inclusion list though if I understand the use case correctly"
  },
  {
    "poster": {
      "poster_name": "Dave Barden",
      "poster_handle": "dbarden"
    },
    "time_stamp": "2019-07-03 12:41:50",
    "text": "Cool, so I created a rule using the salesforce list. How does the rule know to show either the `Salesforce Lead ID` or the `Salesforce Contact ID` though?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-03 12:43:20",
    "text": "it won’t but since only one of them should be populated at a time you can put them both in the email and that will be the on populated.  The other work around is to create two lists, one for leads and one for contacts"
  },
  {
    "poster": {
      "poster_name": "Dave Barden",
      "poster_handle": "dbarden"
    },
    "time_stamp": "2019-07-03 13:29:34",
    "text": "What would be the difference then, between using a smart rule and not using a smart rule? If I show something like this: ```&lt;p&gt;Salesforce Lead ID: {{ contact.salesforceleadid }}&lt;/p&gt;\n&lt;p&gt;Salesforce Contact ID: {{ contact.salesforcecontactid }}&lt;/p&gt;```"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:20:16",
    "text": "Howdy folks! I’m trying to add a query string to the end of a URL on form submit so that when the user is redirected to an external page, some fields will be filled via looking at that string"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:25:59",
    "text": "so do it"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:27:03",
    "text": "But I can’t seem to shake the HubSpot string that’s appended. I’ve tried changing the redirect on the form level, page level and module level. I’ve disabled cookies on the form. Disabled automatic cross-domain linking."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:27:09",
    "text": "Thanks Chad!"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:27:19",
    "text": "<@U38EZFVFE> <@U38EZFVFE> <@U38EZFVFE>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:27:44",
    "text": "its a custom form right?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:29:15",
    "text": "Yeah it’s added through the code like ```$(document).ready(function(){\n                hbspt.forms.create({\n                  portalId: '{{ hub_id }}',\n                  formId: '{{ module.landing_page_content_form.form_id }}',\n                  pageId: '{{ content_id }}',\n                  target: '.form-target',\n                  css: '',\n                  onFormSubmit: function($form) {\n                    var firstName,lastName,email,existingQ;\n                    existingQ = window.location.search.indexOf('?');\n                    if(existingQ &gt; -1){\n                      firstName = \"&amp;firstname=\" + encodeURI($('#firstname-a7a38391-8bda-4c51-a634-6f06dd179b42').val());\n                    }else{\n                      firstName = \"firstname=\" + encodeURI($('#firstname-a7a38391-8bda-4c51-a634-6f06dd179b42').val());            \n                    }\n                    lastName = \"&amp;lastname=\" + encodeURI($('#lastname-a7a38391-8bda-4c51-a634-6f06dd179b42').val());\n                    email = \"&amp;email=\" + encodeURI($('#email-a7a38391-8bda-4c51-a634-6f06dd179b42').val());\n              \n              \n                    var completeStr = location.search + firstName + lastName + email;\n                    window.history.replaceState(null,null,completeStr);\n                    \n                  }\n                });  ```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:31:39",
    "text": "Do you at least see it in the url?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:31:40",
    "text": "You can see it appear for a second but then once you get to the external thank-you page it has the big HubSpot string"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:31:53",
    "text": "Oh"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:31:56",
    "text": "Boo"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:34:29",
    "text": "why boo?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:34:41",
    "text": "HELP MEEEEEE"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:35:03",
    "text": "Why boo?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:35:15",
    "text": "It works then it dies"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:35:36",
    "text": "Damnit Chad."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:36:07",
    "text": "A man is in pain here"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:36:39",
    "text": "Store it in a cookie?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:36:40",
    "text": "is the form post or get?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:37:36",
    "text": "Good job, Chad. He died"
  },
  {
    "time_stamp": "2019-07-03 16:37:55",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:38:22",
    "text": "And I liked mr emerson"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:38:45",
    "text": "Sorry I was crying"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:38:50",
    "text": "I could try the cookie route"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:39:10",
    "text": "you cant use HubSpot forms to pass values to the next page"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:39:40",
    "text": "cause they use the POST method"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:39:49",
    "text": "it would have to be custom"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:40:41",
    "text": "I enjoy watching Chad work.  Is that weird?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:41:40",
    "text": "you get this from HubSpot when you do."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:41:46",
    "edited": {
      "time_stamp": "2019-07-03 16:42:18"
    },
    "text": "```&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/&gt;\n&lt;title&gt;Error 405 Method Not Allowed&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;h2&gt;HTTP ERROR 405&lt;/h2&gt;\n&lt;p&gt;Problem accessing /submissions/v3/public/submit/formsnext/multipart/XXXXX/XXXXXXXXXXXX. Reason:\n&lt;pre&gt;    Method Not Allowed&lt;/pre&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;```"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:42:37",
    "text": "Sorry <@U26DA9CQ0>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:43:44",
    "text": "oddly enough HubSpot forms can read the data from the url"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 16:47:41",
    "text": "Why does it print initially?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 16:52:12",
    "text": "I’m just going the cookie route"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 16:52:41",
    "text": "local storage works too"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 17:04:44",
    "text": "I found a way to do it!!!"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 17:05:06",
    "text": "<https://integrate.HubSpot.com/t/include-form-fields-as-redirect-url-parameters-on-an-embedded-form/3545>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 18:16:19",
    "text": "Tell us how it plays out"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-03 18:19:04",
    "text": "Also, if it ends up being more efficient"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 20:45:15",
    "text": "Nice"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-03 20:45:19",
    "text": "Looks legit"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-03 20:45:32",
    "text": "hahahah  that was perfect Ike"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-03 20:58:22",
    "text": "I have to say I appreciate that they owned the issue in their PR.  It doesn’t hurt what I think of their services. mistakes happen. you just hope to not be the dev that caused it."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-07-03 22:56:28",
    "text": "So far so good. I’ll let you know if my client fires me."
  }
]
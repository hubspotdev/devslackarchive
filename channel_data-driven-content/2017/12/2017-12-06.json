[
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 15:16:14",
    "text": "Hey guys. Is it not ok to pass variables to hubdb_table_rows()? I have the following code, but it throws an error when I try to publish.\n`{% set tableID = request.query_dict.table %}\n        {% set table = hubdb_table_rows(tableID) %}\n        {% if table %}\n            {% set rowID = request.query_dict.eventid %}\n            {% set row = hubdb_table_row(tableID, rowID) %}\n        {% endif %}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 15:50:25",
    "text": "can you paste error?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 15:51:07",
    "text": "also you should have a red x on the left side of your offending line"
  },
  {
    "text": "<@U7B0H5NPN> uploaded a file: <https://HubSpotdev.slack.com/files/U7B0H5NPN/F8BUGTKHV/screen_shot_2017-12-06_at_4.26.45_pm.png|Screen Shot 2017-12-06 at 4.26.45 PM.png>",
    "time_stamp": "2017-12-06 16:27:30"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 16:27:36",
    "text": "<@U25PYL3Q8> ^^"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:28:57",
    "text": "which line is that on?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:29:05",
    "text": "{% set row = hubdb_table_row(tableID, rowID) %}"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:29:08",
    "text": "that one ^^?"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 16:29:39",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:30:18",
    "text": "what if you try to run a loop in there"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:31:00",
    "text": "{% for row in hubdb_table_rows(tableID, rowID %} {{ row|pprint }} {% endfor %}"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:31:15",
    "text": "generally when I start off writing anything in hubl I filter with |pprint"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:31:24",
    "text": "that way I know I have content before moving on to the next line"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:31:33",
    "text": "it helps me get the feel for any new kind of syntax"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:31:48",
    "text": "I still do it with hubdb because I do one project every few months and have to get back into it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:34:03",
    "text": "the difference Ijust saw is _row vs _rows"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:34:07",
    "text": "I’ve never used row i dont’ think"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 16:36:51",
    "text": "Yeah, I'm only loading a single row, ultimately, so I can pull data from that row to print on the page."
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 16:37:26",
    "text": "Funny thing is, I actually got the template to save, by clicking the preview button then back to edit and saving."
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 16:38:16",
    "text": "However, if I remove {% if request.query_dict %} line, my workaround won't work at all."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:40:36",
    "text": "You only show one event item per page?"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 16:41:12",
    "text": "When I'm presenting the registration form for the event, yes."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:41:16",
    "text": "gotcha"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:41:28",
    "text": "WELL — I can attest via this page:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:41:39",
    "text": "<https://www.gliffy.com/test-blog>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:42:06",
    "text": "At one point I loaded 400 blog posts with hubl and displayed them via JS after the dom loaded, and really only 10 were showing up"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:42:26",
    "text": "if you pull in all your events, your page won’t slow down at all if you loop through them and manually pick the event that matches"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:42:48",
    "text": "that will at least get you running — I know it isn’t perfect, but then you can figure out what the issue is later"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 16:43:00",
    "text": "I honestly would have a hard time debugging it without being in it"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2017-12-06 16:43:23",
    "text": "Cool, thanks for your help!"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-12-06 20:13:14",
    "text": "You probably need a default value for `request.query_dict.table` since it doesn’t exist when you’re saving the template",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2017-12-06 20:44:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-12-06 20:44:22",
    "text": "i’ll echo this, if you are pulling in something, always set it to false, 0, “” or the likes.  It gets tough sometimes with loops, but you can always check for a value later down the road."
  }
]
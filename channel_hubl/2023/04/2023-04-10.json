[
  {
    "poster": {
      "poster_name": "Muhammad Naveed",
      "poster_handle": "mnaveed"
    },
    "time_stamp": "2023-04-10 04:20:54",
    "text": "A quick qs, I want to list all the tags in listing page.\n```{{ blog_tags(\"default\", 250) }}```\nAbove code only get most used tags not all",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-04-10 07:06:23"
      },
      {
        "time_stamp": "2023-04-10 07:09:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ankit Parmar",
      "poster_handle": "ankit897"
    },
    "time_stamp": "2023-04-10 07:06:23",
    "text": "Hi Muhammad Naveed, I think this code will help you - &lt;ul&gt;\n{% for tag in content.all_tags %}\n  &lt;li&gt;{{ tag }}&lt;/li&gt;\n{% endfor %}\n&lt;/ul&gt;"
  },
  {
    "poster": {
      "poster_name": "Ankit Parmar",
      "poster_handle": "ankit897"
    },
    "time_stamp": "2023-04-10 07:09:32",
    "text": "or If you're still not able to get all the tags using `blog_tags(\"default\", 250)`, you can try using the `get_tags()` function in WordPress - &lt;?php\n$tags = get_tags();\nif ($tags) {\n  echo '&lt;ul&gt;';\n  foreach ($tags as $tag) {\n    echo '&lt;li&gt;&lt;a href=\"' . get_tag_link($tag-&gt;term_id) . '\"&gt;' . $tag-&gt;name . '&lt;/a&gt;&lt;/li&gt;';\n  }\n  echo '&lt;/ul&gt;';\n}\n?&gt;"
  },
  {
    "poster": {
      "poster_name": "Jason P",
      "poster_handle": "info097"
    },
    "time_stamp": "2023-04-10 08:18:01",
    "text": "Hey guys it worked on a private page -- now we know haha. thanks!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-10 08:18:21",
    "text": ":fire: Nice work!"
  },
  {
    "text": "I have a default company owner field called `HubSpot_owner_id`. You can see it has the name and email. The problem is I'm trying to isolate the name and email. If I pull HubSpot_owner_id, I just get an ID number like 934838. I've tried `HubSpot_owner_id.email` but no go. Any ideas?",
    "time_stamp": "2023-04-10 08:33:11",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-04-10 11:02:44"
      },
      {
        "time_stamp": "2023-04-10 11:03:34"
      },
      {
        "time_stamp": "2023-04-10 11:05:40"
      },
      {
        "time_stamp": "2023-04-10 12:30:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-10 11:02:44",
    "text": "unless you're using graphql you can't use .email"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-10 11:03:34",
    "text": "You would have to implement a serverless function to pull the owner information from the owners api and then display it that way, another way to do it is by setting up a hubDB with all the owner information and searching that hubdb using the id each time"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-10 11:05:40",
    "text": "graphql will return something like this:\n```\"HubSpot_owner_id\": {\n    \"firstname\": \"Carter\",\n    \"owner_id\": 34093223,\n    \"email\": \"<mailto:nerds@gmail.com|nerds@gmail.com>\",\n    \"lastname\": \"McKay\"\n}```"
  },
  {
    "poster": {
      "poster_name": "Jason P",
      "poster_handle": "info097"
    },
    "time_stamp": "2023-04-10 12:30:51",
    "text": "Hmmmmm... I see okay thank you!"
  }
]
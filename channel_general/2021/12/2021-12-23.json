[
  {
    "poster": {
      "poster_name": "Ben Towers",
      "poster_handle": "ben299"
    },
    "time_stamp": "2021-12-23 04:43:36",
    "text": "Hey! How does HubSpot email work? What email servers do they send with? Is there a way of getting HubSpot to use my sendgrid or postmark smtp server instead of their own?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-06-28 11:45:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Habeebu Rahman",
      "poster_handle": "habi"
    },
    "time_stamp": "2021-12-23 07:45:41",
    "text": "We actually have a situation were the pages and templates are already built. now when it comes to performance we would like to implement lazy load on all images. doing it manually on each images is very time consuming because the count is huge. Is there any way to implement lazy load on all blog posts/pages/templates/theme in one step/code.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-12-23 07:57:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-12-23 07:57:38",
    "edited": {
      "time_stamp": "2021-12-23 09:16:58"
    },
    "text": "Ehm, you could try adding\n```(() =&gt; { \n function onDOMReady (callback) {\n    if (['interactive', 'complete'].indexOf(document.readyState) &gt;= 0) {\n      callback();\n    } else {\n      document.addEventListener('DOMContentLoaded', callback);\n    }\n  }\n\n  /**\n   * Run our scripts when the document is ready.\n   */\n  onDOMReady(() =&gt; {\n    /**\n     * An extra failsafe to make sure body exists.\n     */\n    if (!document.body) {\n      return;\n    }\n\n    document.querySelectorAll('img')?.forEach(img =&gt; img.setAttribute('loading', 'lazy'));\n  });\n})();```\nI’m not 100% sure it will work, I’ve never tried it, but it should theoretically work since it’s called on `DOMContentLoaded` event which is before images have been loaded I think, but it may not. You’re but you can give it a shot if you want."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-12-23 19:46:42",
    "edited": {
      "time_stamp": "2021-12-23 19:51:20"
    },
    "text": "Does HubSpot have an official Discord server? I really hate the lack of channel categories on Slack."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-12-23 20:48:56",
    "edited": {
      "time_stamp": "2021-12-23 20:49:14"
    },
    "text": "<https://github.com/HubSpot/cms-theme-boilerplate/blob/main/STYLEGUIDE.md#javascript-code-formatting>\n&gt; Use single quotation marks for JavaScript and *JSON*.\n<https://tenor.com/view/gary-coleman-whatchu-talkin-bout-willis-confused-gif-11538275>",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-12-23 20:53:19"
      },
      {
        "time_stamp": "2021-12-29 10:45:19"
      },
      {
        "time_stamp": "2022-01-03 07:12:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-12-23 20:53:19",
    "edited": {
      "time_stamp": "2021-12-23 20:54:26"
    },
    "text": "I'm also sad to see no mention of `const` or `let` . Those should be used except in rare cases. Actually, I can't really think of a time I'd use `var`. If I want it to be global, I'd use `window.`"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2021-12-23 22:58:11",
    "text": "Looks like it was a bug. This is no longer possible again. :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-12-23 23:01:38",
    "edited": {
      "time_stamp": "2021-12-23 23:04:43"
    },
    "text": "Offhand, does anyone know if modules have a field limit? I know they have a group depth limit of like 5.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-12-23 23:04:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-12-23 23:04:48",
    "edited": {
      "time_stamp": "2021-12-23 23:04:57"
    },
    "text": "I have a module with 101 fields, so I'm guessing not, or if so, it's probably high enough to not really be a concern. (edited)"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-12-23 23:19:19",
    "text": "Does anyone know of a way to override a global theme setting value on a page? I have a kind of hacky, imperfect work around, but I mean an actual solid solution using HubL or API or something."
  }
]
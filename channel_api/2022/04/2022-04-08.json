[
  {
    "poster": {
      "poster_name": "Tom Coates",
      "poster_handle": "tom.coates"
    },
    "time_stamp": "2022-04-08 02:14:21",
    "text": "Agree doesn't seem right, I'll reach out to the HubSpot team. Thanks for confirming, <@U03BA1PRV7S>."
  },
  {
    "poster": {
      "poster_name": "Jon Fulk",
      "poster_handle": "jonfulk"
    },
    "time_stamp": "2022-04-08 10:33:01",
    "text": "just an update: this still isn’t working"
  },
  {
    "poster": {
      "poster_name": "Huzaifa Arain",
      "poster_handle": "harain"
    },
    "time_stamp": "2022-04-08 10:35:56",
    "text": "Hi all, i had made a pr that add support for IN and NOT_IN operator in v3 api, <https://github.com/HubSpot/HubSpot-api-php/pull/123> but it got rejected stating that codegen can't be changed, can we expect this in the next release as part of codegen ?"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-04-08 11:46:57",
    "text": "Sorry dude :confused: is the code above the only thing in the fetchContactDealIDs function? It also might be worth just using the associations endpoints if there are deals associated with that contact and using recursion that way: <https://developers.HubSpot.com/docs/api/crm/associations>"
  },
  {
    "poster": {
      "poster_name": "Jon Fulk",
      "poster_handle": "jonfulk"
    },
    "time_stamp": "2022-04-08 13:21:58",
    "text": "Thanks <@U26BLKGE4>. That is the only thing in the code, yes. My real question is how the `after` value works with the HubSpot client. There aren’t docs anywhere about where that argument goes."
  },
  {
    "poster": {
      "poster_name": "Sean Aguinaga",
      "poster_handle": "sean.aguinaga"
    },
    "time_stamp": "2022-04-08 16:02:16",
    "edited": {
      "time_stamp": "2022-04-08 16:02:50"
    },
    "text": "```const verifySignature = function (req) {\n\n  const requestHost = req.headers['host'];\n\n  const hostUrl = `https://${requestHost}`;\n\n  const requestUrl = new URL(req.url, hostUrl);\n\n  const requestUri = requestUrl.href;\n\n  const incomingSignature = req.headers['x-HubSpot-signature-v3'];\n\n  const requestMethod = req.method;\n\n  const timeStamp = req.headers['x-HubSpot-request-timestamp'];\n\n  const requestInfo = `${requestMethod}${requestUri}${JSON.stringify(\n    req.body\n  )}${timeStamp}`;\n\n  const decodedString = decodeURIComponent(requestInfo);\n\n  const hash = createHmac('sha256', HubSpot_CLIENT_SECRET)\n    .update(decodedString)\n    .digest('base64');\n\n  if (hash == incomingSignature) {\n    console.log('match!');\n    return true;\n  } else {\n    console.log('whoops');\n    return false;\n  }\n};```"
  },
  {
    "poster": {
      "poster_name": "Sean Aguinaga",
      "poster_handle": "sean.aguinaga"
    },
    "time_stamp": "2022-04-08 16:02:34",
    "text": "Just thought I would share this"
  }
]
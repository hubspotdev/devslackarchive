[
  {
    "poster": {
      "poster_name": "Carlsson Elkins",
      "poster_handle": "carlsson.e"
    },
    "time_stamp": "2024-05-10 03:22:22",
    "text": "Hey <@U0695UMTM2M>, yes, we're nearly there now! Thanks so much for your help, it really got us on the right track :slightly_smiling_face: :slightly_smiling_face: Very much appreciated"
  },
  {
    "poster": {
      "poster_name": "Carlsson Elkins",
      "poster_handle": "carlsson.e"
    },
    "time_stamp": "2024-05-10 03:23:03",
    "text": "We ended up tweaking some things to make it a bit more clever in creating custom 'web enquiry' objects and product objects and associating them together"
  },
  {
    "poster": {
      "poster_name": "Carlsson Elkins",
      "poster_handle": "carlsson.e"
    },
    "time_stamp": "2024-05-10 03:23:27",
    "text": "Thanks heaps and shout if I can ever help you with anything marketing-related, glad to pay back!"
  },
  {
    "poster": {
      "poster_name": "Toni Lagorio",
      "poster_handle": "t.lagorio"
    },
    "time_stamp": "2024-05-10 04:23:32",
    "text": "Hello everyone ! Glad to e-meet all of you for the first time. I'm Toni, and I'm a Growth Marketing Manager.\n\nI recently developed a Referral Program on a landing page and I'm retrieving data for referer and referee. These data are stored in specific fields.\n\nMy issue here is that each time someone submits a form, it erases the former value to the newest one. My goal here is to concatenate the former value with the new one. I assume this is doable through a workflow/custom code but I'm not an expert on Python/dealing with former &amp; newest value.\n\nExample :\n• Contact has submitted a form -&gt; Field is stored as \"<mailto:abc@gmail.com|abc@gmail.com>\"\n• Contact submits another form -&gt; Field is stored as \"<mailto:abc@gmail.com|abc@gmail.com>, <mailto:def@gmail.com|def@gmail.com>\" (instead of \"<mailto:def@gmail.com|def@gmail.com>\" usually)\nThanks a lot for your help !",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-05-10 11:55:17"
      },
      {
        "time_stamp": "2024-05-13 01:52:13"
      },
      {
        "time_stamp": "2024-05-13 05:26:02"
      },
      {
        "time_stamp": "2024-05-13 05:35:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-05-10 08:10:05",
    "text": "Sure thing! Always happy to help. This type of stuff is very interesting to me!"
  },
  {
    "poster": {
      "poster_name": "José Díaz Rodríguez",
      "poster_handle": "jose.diaz382"
    },
    "time_stamp": "2024-05-10 10:43:28",
    "text": "Hello everyone! When a Task is created, it is assigned to the one who created it. Would it be possible somehow that associating to the Task a AAA Deal, this Task would be assigned to the owner of that Deal?\nIn the company there is a Pull that receives the tasks and assigns them according to the corresponding Deal, without having to enter the Deal to see who is the owner.\nThank you very much!\nRegards!",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-06-11 05:31:21"
      }
    ]
  },
  {
    "text": "You can do this in workflow without code by making where the form property gets updated with every form submit and a workflow triggered on that property will update another property for example  `test concat` (see screenshots), if the value is empty it puts the value, and if it gets updated it adds it to the end of the `test concat` field. CCA would be better to check if the `test concat`  has the value it’s trying to add.. but ultimately, you can achieve it without a CCA. With a CCA I would recommend using a second property still and then set it with <https://developers.HubSpot.com/docs/api/crm/contacts#update-contacts|update contacts api> same logic as the branching in the workflow.",
    "time_stamp": "2024-05-10 11:55:17"
  }
]
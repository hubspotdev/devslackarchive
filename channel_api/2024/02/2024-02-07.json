[
  {
    "poster": {
      "poster_name": "Yosi Ostroviak",
      "poster_handle": "yosi.o"
    },
    "time_stamp": "2024-02-07 02:26:43",
    "text": "Hey,\n\nI’m currently working with the HubSpot Contact API and I encountered an error response containing the error code “INVALID_EMAIL”.\n\nWhile I understand the meaning of this specific error code, I’m wondering if there is comprehensive documentation available that lists all possible error codes returned by the Contact or timeline events API, along with their meanings and possible resolutions.\n\nI’ve checked the official API documentation, but I couldn’t find a specific section dedicated to error codes, is anyone familiar?\n\nThanks!",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-02-07 02:36:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Shadab Faisal",
      "poster_handle": "shadab.faisal"
    },
    "time_stamp": "2024-02-07 02:36:29",
    "text": "Facing the same issue but haven't received any response from the HubSpot team, also raised a community post for the same"
  },
  {
    "poster": {
      "poster_name": "dev opal",
      "poster_handle": "pranav.d"
    },
    "time_stamp": "2024-02-07 03:42:47",
    "text": "Hi, can anyone please help me with an issue, I am facing with HubSpot search API.\n\nBelow is the JSON payload I am passing in Postman\n\n```{\n    \"properties\": [\n        \"phone\",\n        \"email\",\n        \"firstname\",\n        \"lastname\",\n        \"createdate\"\n    ],\n    \"filter_groups\": [\n        {\n            \"filters\": [\n                {\n                    \"propertyName\": \"createdate\",\n                    \"operator\": \"GT\",\n                    \"value\": \"1704067200000\"\n                }\n            ]\n        }\n    ],\n    \"limit\": 1\n}```\nHowever it seems to be fetching data from the very beginning, and not filtering based on the Unix timestamp (that is 1st Jan 2024, 00:00:00 AM) provided to the filter clause in miliseconds.\n\nCan someone please, point out what I could be doing wrong.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-02-08 12:41:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aashrith Katukuri",
      "poster_handle": "akatukuri"
    },
    "time_stamp": "2024-02-07 05:43:50",
    "text": "<@U01H71SM25N> where you able to follow this up?"
  },
  {
    "poster": {
      "poster_name": "Aashrith Katukuri",
      "poster_handle": "akatukuri"
    },
    "time_stamp": "2024-02-07 05:44:53",
    "text": "Is anyone using Aircall integration? If they are set to record calls, are they available via HubSpot API (hs_call_recording_url) or do you have to call the respective service?",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-08 08:07:48"
      },
      {
        "time_stamp": "2024-02-08 08:09:20"
      },
      {
        "time_stamp": "2024-02-08 08:30:54"
      },
      {
        "time_stamp": "2024-02-08 08:32:37"
      },
      {
        "time_stamp": "2024-02-08 08:34:24"
      },
      {
        "time_stamp": "2024-02-08 08:35:09"
      },
      {
        "time_stamp": "2024-02-08 08:35:43"
      },
      {
        "time_stamp": "2024-02-08 08:37:56"
      },
      {
        "time_stamp": "2024-02-08 09:17:19"
      },
      {
        "time_stamp": "2024-02-08 09:17:23"
      },
      {
        "time_stamp": "2024-02-08 09:18:54"
      },
      {
        "time_stamp": "2024-02-08 09:19:23"
      },
      {
        "time_stamp": "2024-02-08 09:21:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Yahavm",
      "poster_handle": "yahavm84"
    },
    "time_stamp": "2024-02-07 07:07:47",
    "text": "Even if I’m not using the token directly in the code rather a secret? "
  },
  {
    "poster": {
      "poster_name": "Yahavm",
      "poster_handle": "yahavm84"
    },
    "time_stamp": "2024-02-07 07:11:12",
    "text": "You need to create a private app in the integrations section. Once you create the private app and configure the scopes of the app it will generate a ln access token and secret. The access token is the API keys "
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-07 07:36:10",
    "text": "correct"
  },
  {
    "poster": {
      "poster_name": "TCOLINS",
      "poster_handle": "tcolins"
    },
    "time_stamp": "2024-02-07 07:57:59",
    "text": "HubSpot API PHP Client Libraries for V3 - Create a contact with associations\nI try to create a new contact and to associat this contact with an existing company ID.\n\nHere is my code :\n$contactInput = new \\HubSpot\\Client\\Crm\\Contacts\\Model\\SimplePublicObjectWithAssociations();\n$contactInput-&gt;setProperties([\n'salutation' =&gt; $genre1,\n'lastname' =&gt; $nom1,\n'firstname' =&gt; $prenom1,\n'job_function' =&gt; $fonction1,\n'phone' =&gt; $tel1,\n'mobilephone' =&gt; $mobile1,\n'email' =&gt; $email1\n]);\n$contactInput-&gt;setAssociations([\n'to' =&gt; ['id' =&gt; $idsociete],\n'types' =&gt; ['associationCategory' =&gt; \"HubSpot_DEFINED\", 'associationTypeId' =&gt; 279]\n]);\n$contact = $HubSpot-&gt;crm()-&gt;contacts()-&gt;basicApi()-&gt;create($contactInput);\n\n\nAND here is the error message :\n\nFatal error: Uncaught HubSpot\\Client\\Crm\\Contacts\\ApiException: [400] Client error: `POST <https://api.hubapi.com/crm/v3/objects/contacts>` resulted in a `400 Bad Request` response: {\"status\":\"error\",\"message\":\"Invalid input JSON on line 1, column 278: Cannot deserialize value of type `java.util.Array (truncated...) in /homepages/15/d475713241/htdocs/code-events-tools/SETT24/vendor/HubSpot/api-client/codegen/Crm/Contacts/Api/BasicApi.php:393 Stack trace: #0 /homepages/15/d475713241/htdocs/code-events-tools/SETT24/vendor/HubSpot/api-client/codegen/Crm/Contacts/Api/BasicApi.php(369): HubSpot\\Client\\Crm\\Contacts\\Api\\BasicApi-&gt;createWithHttpInfo() #1 /homepages/15/d475713241/htdocs/code-events-tools/SETT24/api_HubSpot.php(275): HubSpot\\Client\\Crm\\Contacts\\Api\\BasicApi-&gt;create() #2 {main} thrown in /homepages/15/d475713241/htdocs/code-events-tools/SETT24/vendor/HubSpot/api-client/codegen/Crm/Contacts/Api/BasicApi.php on line 393\n\nCan you help me to fix this?"
  },
  {
    "poster": {
      "poster_name": "Yahavm",
      "poster_handle": "yahavm84"
    },
    "time_stamp": "2024-02-07 08:22:05",
    "text": "Thanks :blush:  "
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-07 08:22:34",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Falk",
      "poster_handle": "falk.hermann"
    },
    "time_stamp": "2024-02-07 13:23:06",
    "edited": {
      "time_stamp": "2024-02-07 13:29:33"
    },
    "text": "Hi\n\ndoes anybody know how to perform a real DELETE with the <https://github.com/HubSpot/HubSpot-api-php|PHP API Client>?  I need to delete CRM Products. All i can find is the `archive()` method but I really need to delete them.\n\nLooks like <https://developers.HubSpot.com/docs/api/crm/products|API supports DELETE >via\n```DELETE /crm/v3/objects/products/{productId}```\n... but this isn't delete but archive. :thinking:\n\nHow to realy delete objects?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-08 05:54:44"
      },
      {
        "time_stamp": "2024-02-08 05:56:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Daniel Amaya",
      "poster_handle": "damaya"
    },
    "time_stamp": "2024-02-07 14:07:39",
    "text": "Hi team, I am completely new, and unfamiliar with the dev side of things. I am marketing ops, in charge of getting integration done. I am working with a 3rd party Dev to help me Integrate an app called Paperless Parts with HubSpot.\nWe are working to get our internal workflows to match the capabilities that are possible within both Paperless Parts and HubSpot.\nHe gave me his feedback, and what he thinks we should do. I wanted to see if it was possible to get your feedback to help me see if this is the best way of doing things, or if he's taking us for a ride.\n\n*Functional Specification Document*\n\n*Tech Stack*\n• *Front-end:* Dotnet Core 6 MVC(For survey form) \n• *Backend:* Dotnet Core 6 \n• *Database:* SQL SERVER 2019 Express edition. \n*APIs*\n*Paperless Parts:*\n• Get Order Details: <https://docs.paperlessparts.com/#Orders>  \n• Get Quote Details: <https://docs.paperlessparts.com/#Quotes> \n• List new Quotes: <https://docs.paperlessparts.com/#Quotes> \n*HubSpot:* \n*Private app:*\nNeed to create a new private app in HubSpot with following scopes.\n• crm.objects.contacts(read, write) \n• crm.objects.deals(read, write) \n• crm.objects.companies(write) \n*Engagement API(Task handling):* \n• Create: <https://legacydocs.HubSpot.com/docs/methods/engagements/create_engagement> \n• Update: <https://legacydocs.HubSpot.com/docs/methods/engagements/update_engagement-patch> \n*Search Contact:* <https://legacydocs.HubSpot.com/docs/methods/contacts/search_contacts>\n\n*Get Contact Property:* For fetch associated company ID of contact\n• <https://legacydocs.HubSpot.com/docs/methods/contacts/get_contact_property> \n*Get Company*:\n• <https://legacydocs.HubSpot.com/docs/methods/companies/get_company>  \n*Deals:*\n• Create: <https://legacydocs.HubSpot.com/docs/methods/deals/create_deal> \n• Update: <https://legacydocs.HubSpot.com/docs/methods/deals/update_deal> \n• Fetch: <https://legacydocs.HubSpot.com/docs/methods/deals/get_deal> \n*Process:*\nWe will fetch the Quote numbers via List new quotes API. Looping each quote number and fetch the quote information via Get Quote Detail API of the Paperless.\nWe will fetch the following information from the response of quote detail API and store in DB.\n• Status: status of the quote. \n• QuoteNumber: The quote number of the quote. \n• sent_date: Quote send date. \n• Email: email address of the customer \n• first_name: First name of the customer \n• last_name: Last name of the customer. \n• Phone: Phone number of the customer \n• customer.company.business_name: Company name of the customer \n• customer.company.erp_code: Company short name of the customer \n• salesperson.first_name: Sales person first name \n• salesperson.last_name: Sales person last name \n• salesperson.email: Sales person email address \n• expired: Flag if the quote is expired \n• created: Created date of the quote \n• expired_date: Expire date of the quote \n• quantities.total_price: Total amount of the quote \n*Workflow 1:*\nFetch the Quote via Get Quote detail API and check for the status.\nIf status is draft, try to find following data from the response of quote API.\n• quote_Number \n• expire_date \n• total_price \nIf the above fields are populated, the app will create the deal in HubSpot using Create deal API. The app will get the deal ID from the response of the create deal API. The deal ID will be stored in app DB against the quote number.\nEmail customer with the customer’s email address using New Quote Template of the email.\n\n*Workflow 2:*\nFetch the Quote via Get Quote detail API and check for the status.\nOn status accepted, the app will call the update deal API using dealID fetched from DB against quote number and update the stage to Quote Approved in HubSpot.\nEmail customer with email address of the customer using Thank you template for customer.\n\n*Workflow 3:*\nFetch the Quote via Get Quote detail API and check for the status.\nOn status draft, check the Created property of the quote. If the date is greater than 7 working days, the app will email customer using Customer Inquiry Template.\n\n*Workflow 4:*\nFetch the Quote via Get Quote detail API and read the order_number of quote. The app will call the Get Order Detail and read the properties status and ships_on.\nOn status completed and date in ships_on is greater than 2 days, the app will email customer having Customer survey form link.\n\n*Workflow 5:*\nFetch the Quote via Get Quote detail API and read the properties status and expire_date.\nOn status expired or date in expire_date is less than 1 day, email sales person using email address of sales person stored in DB.\nCreate a new task via engagement API of HubSpot.\n\n*Workflow 7:*\nFetch the Quote via Get Quote detail API and check for the status.\nOn status Lost, the app will create a new task via engagement API of HubSpot.\n\n*Workflow 8:*\nFetch the distinct customer list from DB and check the last Created date of the quote.\nIf any customer found having quote’s created date greater than 6 months, the app will email internal team.\n\n*Workflow 10:*\nFetch the Quote via Get Quote detail API and read the order_number of quote. The app will call the Get Order Detail and read the property status.\nOn status complete, check the quote count is one in DB, app will email customer having customer survey form link using Template of Experience with Ameritex, benefits, and referral program\n\n*Workflow 11:*\nFetch the Quote via Get Quote detail API and read the email property.\nThe app will call the search contact API of HubSpot and read the property associatedCompanyId.\nThen call the Get company property API using associatedCompanyId and read the industry property.\nEmail the customer using Campaign Template.\n\n\n*Email Templates:*\nThe application will use the following html based template created as .txt files.\n• New Quote Template  \n• Customer Inquiry template \n• Expired quote template for sales person. \n• Thank you template for customer. \n• Experience with Ameritex, benefits, and referral program \n• Case studies and testimonials  \n• Campaign(Need to discuss) \n*Survey Form* (Will discuss the fields)\nThe survey form will be built with dotnet core MVC and will be deployed in OSD-App server.",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-07 21:50:53"
      },
      {
        "time_stamp": "2024-02-08 06:01:50"
      },
      {
        "time_stamp": "2024-02-08 07:13:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Makoy Cameña",
      "poster_handle": "marcneilc"
    },
    "time_stamp": "2024-02-07 21:31:08",
    "text": "Logged SMS, WhatsApp, and Linkedin Message objects must have hs_communication_logged_from set to CRM"
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-02-07 21:50:53",
    "text": "Hello Daniel, I believe that the individual who wrote this document has a solid understanding technically of what you are trying to achieve. I cannot comment on functional requirements because I don’t know exactly what you’re trying to get done with your integration. I did note that the developer seems to be pointing to the older set of API endpoints from HubSpot and you may want to direct them here: <https://developers.HubSpot.com/docs/api/overview> HubSpot has put together a marvelous set of documentation on their newest set of API endpoints. This could make the developers job easier as they troubleshoot through the endpoints they need for the various data described. Otherwise I think this looks fine. If you need further review please feel free to let me know!"
  },
  {
    "text": "What seems to be the problem here?",
    "time_stamp": "2024-02-07 23:45:18"
  }
]
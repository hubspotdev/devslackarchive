[
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-11-04 05:41:17",
    "text": "Hello devs! I’m starting to work with HB API and my question is probably basic but it’d be very helpful if someone can give me some guidance. It’s actually quite similar to what <@U049G3AEMU3> just asked. *I need to built a custom integration between a third party software (yelp) and HubSpot* . It’s basic info, but should i build a Private app for this so i can fetch info from yelp and then POST it on HubSpot? What’s the best approach? Thaaaaanks :muscle:",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-04 09:52:09"
      },
      {
        "time_stamp": "2022-11-04 11:55:54"
      },
      {
        "time_stamp": "2022-11-04 15:21:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Sander",
      "poster_handle": "michael.sander"
    },
    "time_stamp": "2022-11-04 06:51:26",
    "text": "Hi, Ignacio, did you ever find the KB API?"
  },
  {
    "poster": {
      "poster_name": "Michael Sander",
      "poster_handle": "michael.sander"
    },
    "time_stamp": "2022-11-04 06:52:16",
    "text": "Hi Jeremy, Did you ever answer this question?"
  },
  {
    "poster": {
      "poster_name": "Michael Sander",
      "poster_handle": "michael.sander"
    },
    "time_stamp": "2022-11-04 06:56:36",
    "text": "Hi Folks... Has anyone been able to *pull Knowledge Base articles via the API*?\n\nSeems <https://community.HubSpot.com/t5/HubSpot-Ideas/HubSpot-Knowledge-Base-API/idi-p/210116/page/2#comments|like you can search for them via API, but can't actually pull them>. Very strange, &gt;100 upvotes."
  },
  {
    "poster": {
      "poster_name": "Bilal Ahmad",
      "poster_handle": "optimist1356"
    },
    "time_stamp": "2022-11-04 06:58:08",
    "text": "Hello Developers, I am using HubSpot code (different forms) in my WordPress website (<https://vanitystudios.co.uk>) but I see strange things\n I use two buttons which upon click will open a popup form, but when the same buttons, if I would hide one of the buttons for desktop and then see the website(button) on mobile the form, would not be popup, I debug it and I see that the popup form would appear there but is hidden because of the CSS toggle class. here is the video this will help you better understand yourself. <https://www.loom.com/share/470aa0acb0fa40c38ac17497e4e286d3>"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives727"
    },
    "time_stamp": "2022-11-04 07:25:24",
    "text": "Could anyone provide any assistance in deleting/renaming custom objects w/ postman? I'm getting an error on the baseurl",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-11-04 14:56:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 07:26:38",
    "text": "Gotcha, but i just read another thread where someones says:\n\n_Your account does need CMS Pro or Ent to have access to GraphQL, however._ \n\nAnd: _whatever account the app is trying to authenticate with will need at least CMS Professional_\n\nSo it sounds like i’m SOL even if i’m a super admin at my company bc we don’t have any CMS tier and only use HS for their marketing tools/tier and i’m building an integration for CRM/service/marketing packages? _<@U01QVR44MEY>_ meaning i’d have to go the other route and make those additional requests per record, right?"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 07:28:20",
    "text": "Hii all :wave::skin-tone-4:\n\nI’m implementing a `CONFIRMATION_ACTION_HOOK` in `secondaryActions`\nfor custom crm  card\n\nGetting below error\n\n`com.fasterxml.jackson.databind.exc.ValueInstantiationException: Cannot construct instance of `<http://com.HubSpot.net|com.HubSpot.net>.uri.ValidatedUri`, problem: Invalid ValidatedUri:`  \n `at [Source: (<http://com.HubSpot.java.io|com.HubSpot.java.io>.ChunkedByteArrayOutputStream$ChunkedByteArrayInputStream); line: 1, column: 5472] (through reference chain: com.HubSpot.linkedsalesobjects.base.models.objects.IntegratorViewResult$Json[\"secondaryActions\"]-&gt;java.util.ArrayList[0]-&gt;com.HubSpot.linkedsalesobjects.base.models.actions.ConfirmationActionHookView$Json[\"uri\"])`",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-04 07:29:22"
      },
      {
        "time_stamp": "2022-11-04 07:33:41"
      },
      {
        "time_stamp": "2022-11-04 07:34:42"
      },
      {
        "time_stamp": "2022-11-04 07:37:34"
      },
      {
        "time_stamp": "2022-11-04 08:15:52"
      },
      {
        "time_stamp": "2022-11-04 08:16:16"
      },
      {
        "time_stamp": "2022-11-04 08:16:42"
      },
      {
        "time_stamp": "2022-11-04 08:17:07"
      },
      {
        "time_stamp": "2022-11-04 08:17:23"
      },
      {
        "time_stamp": "2022-11-04 08:17:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 07:28:24",
    "text": "Yes, so currently graphql is only supported on HubSpot plans that have access to cms pro or enterprise, so using the /search endpoint might be your best bet for now"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 07:28:52",
    "text": "Let me read through your post again in a couple of minutes and I'll let you know if I see any way to optimize it a little"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 07:29:22",
    "text": "What was the response that you tried to send?"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 07:33:41",
    "text": "<@U01QVR44MEY>  :point_up_2::skin-tone-4:"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 07:34:42",
    "text": "<@UFBNA9K9A>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 07:37:34",
    "text": "Thanks <@U03L2QUGPK3> running tests now"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-04 07:37:39",
    "text": "<@U046MB5T9LH> I usually would get around this by making a workflow that when a object is created it runs these few API calls and then just either adds the data from the association I need on the object so I only need to query 1, or add a reference to the association (like the associated items ID) so I only need to run 2"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 07:57:13",
    "text": "right but if an account using starter or free wanted to use my integration - they wouldn’t be able to run those workflows? (did you mean the workflows in HubSpot UI?) <@U0336QCR2FQ>"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-04 07:58:49",
    "text": "Oh right"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-04 07:59:02",
    "text": "You'd need to use a outside service like Zapier then"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 08:15:52",
    "text": "<@U01QVR44MEY>\nThanks  for helping\nissue resolved"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 08:16:16",
    "text": "Of course, what exactly was the problem?"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 08:16:42",
    "text": "Just extra space in env"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 08:17:07",
    "text": "Aw classical, definitely done that before"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 08:17:23",
    "text": "BTW thanks"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 08:17:33",
    "text": "Of course"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 08:44:16",
    "text": "<@U0336QCR2FQ> big oof…I’m actually leveraging <http://tray.io|tray.io> to build this embedded integration so it’s rather easy to make second and third requests but i don’t want to do this for all objects and engagements only to have an ENT level customer use it and we reach API limits or have issues in tray with concurrency levels. It’s the compounding issues of only being able to get 100 records/page and then making 2nd or 3rd requests which will take a lot of time since i’ll be looping through these records….I built an integration like that a few months back and it failed especially when running a historical import :cry:  any who I’ll test it out and see how it goes. :man-shrugging::skin-tone-4:\n\nand yeah lmk <@U01QVR44MEY> :+1::skin-tone-4:"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-04 08:46:11",
    "text": "yeah welcome to HubSpot, it sucks lol"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 08:46:49",
    "text": "Sucks when trying to do certain things, hahaha"
  },
  {
    "poster": {
      "poster_name": "Antônio Pereira",
      "poster_handle": "antonio.pereira"
    },
    "time_stamp": "2022-11-04 08:53:23",
    "text": "Hi guys, I have two questions regarding the api. How do I add permissions to my api key? And how to list all custom objects ids/objectType?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-04 08:58:50"
      },
      {
        "time_stamp": "2022-11-04 08:59:03"
      },
      {
        "time_stamp": "2022-11-04 08:59:51"
      },
      {
        "time_stamp": "2022-11-04 09:00:40"
      },
      {
        "time_stamp": "2022-11-04 09:01:14"
      },
      {
        "time_stamp": "2022-11-08 08:44:33"
      },
      {
        "time_stamp": "2022-11-08 08:45:22"
      },
      {
        "time_stamp": "2022-11-08 08:45:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 08:58:50",
    "text": "You can't add permissions to api keys just private apps"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 08:59:03",
    "text": "<https://developers.HubSpot.com/docs/api/private-apps>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 08:59:51",
    "text": "And what exactly do you mean by all custom objects id and object types"
  },
  {
    "text": "You can see all custom object type, under custom objects",
    "time_stamp": "2022-11-04 09:00:40"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 09:01:14",
    "text": "Then you can see the objecttypeid in the url it's going to be the 2- number"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-04 09:28:49",
    "text": "yeah that lol"
  },
  {
    "poster": {
      "poster_name": "Aldo Carrillo",
      "poster_handle": "aldo652"
    },
    "time_stamp": "2022-11-04 09:52:09",
    "text": "I think it's enough with a private app unless you want to list the app in HS marketplace so anyone can install it, if that's the case you should use Oauth."
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 10:00:11",
    "edited": {
      "time_stamp": "2022-11-04 10:10:50"
    },
    "text": "I’m having problems validating X-HubSpot-signature-v3 on the webhook receiver. I can’t get the same hash as the one coming from HubSpot. python code snippet\n```import base64\nimport hmac\nimport hashlib\nimport urllib.parse\n\nincomingSignature = 'mZCtEjHkQE7MIizLrNfk9Ur9nfYhCFczc3p1FRH+skw='\nCLIENT_SECRET = \"xxxxx-xxxx-xxxx-xxxx-xxxxxxxxx\";\nmethod = \"POST\"\nurl = \"<https://datafetch.free.beeceptor.com>\"\ntimestamp = \"1661271861136\"\nrequest_parameter = dict(request.form)\nconcatenate_string = urllib.parse.unquote(f\"{method}{url}{request_parameter}{timestamp}\")\nsignature_hash = hmac.new(\n  CLIENT_SECRET.encode(),\n  msg=concatenate_string.encode(),\n  digestmod=hashlib.sha256\n)\ngenerate_signature = base64.b64encode(signature_hash.digest())\nif generate_signature != signature_v3:\n  print(\"doesn't match\")```",
    "reply_count": 15,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-04 10:00:32"
      },
      {
        "time_stamp": "2022-11-04 10:01:37"
      },
      {
        "time_stamp": "2022-11-04 10:03:32"
      },
      {
        "time_stamp": "2022-11-04 10:04:50"
      },
      {
        "time_stamp": "2022-11-04 10:07:27"
      },
      {
        "time_stamp": "2022-11-04 10:07:29"
      },
      {
        "time_stamp": "2022-11-04 10:09:40"
      },
      {
        "time_stamp": "2022-11-04 10:11:16"
      },
      {
        "time_stamp": "2022-11-04 10:11:54"
      },
      {
        "time_stamp": "2022-11-04 10:11:58"
      },
      {
        "time_stamp": "2022-11-04 10:12:32"
      },
      {
        "time_stamp": "2022-11-04 10:42:06"
      },
      {
        "time_stamp": "2022-11-04 10:42:26"
      },
      {
        "time_stamp": "2022-11-04 10:42:36"
      },
      {
        "time_stamp": "2022-11-04 10:46:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 10:00:32",
    "text": "<@UFBNA9K9A> <@U01QVR44MEY>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:01:37",
    "text": "I've noticed that sometimes the url needs a / on the end and sometimes it doesnt"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:03:32",
    "text": "Also maybe just unparse the url of the request not the entire request"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:04:50",
    "text": "so this\n```concatenate_string = urllib.parse.unquote(f\"{method}{url}{request_body}{timestamp}\")```\nwould be this:\n```concatenate_string = method+urllib.parse.unquote(f\"{url}\")+request_body+timestamp```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:07:27",
    "text": "Also this line doesn't have a \" at the end:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:07:29",
    "text": "```url = \"<https://datafetch.free.beeceptor.com>```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:09:40",
    "text": "Also it doesn't look like you define request_body"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 10:11:16",
    "text": "Will test and let you know"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:11:54",
    "text": "Because you just made edits to the the code, my code will no longer work"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:11:58",
    "text": "FYI"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:12:32",
    "text": "You changed request_body to request_parameter on the line I corrected"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 10:42:06",
    "text": "```import base64\nimport hmac\nimport hashlib\nimport urllib\n\nsignature_v3 = \"A+8kBWElC1mPlo7ZCfGL5CKEqN4DU0EO3kuKi/whY2A=\"\nHubSpot_APP_CLIENT_SECRET = \"xxxxx-xxxx-xxxx-xxxx-xxxxxxxxx\"\nmethod = \"POST\"\nurl = \"<https://eocmlzx6p2fs25q.m.pipedream.net>\"\ntimestamp = \"1667579149216\"\nrequest_body = {\"userId\":\"18650279\",\"userEmail\":\"xxxxx-xxxx+xxxxxxxxx\",\"hs_object_id\":\"5818356182\",\"dealname\":\"Hello Again\",\"amount\":\"1000\",\"closedate\":\"1672419957404\",\"associatedObjectId\":\"5818356182\",\"associatedObjectType\":\"DEAL\",\"portalId\":\"26477512\"}\nconcatenate_string = f\"{method}{urllib.parse.unquote(url)}{request_body}{timestamp}\"\nsignature_hash = hmac.new(\n  HubSpot_APP_CLIENT_SECRET.encode(),\n  msg=concatenate_string.encode(),\n  digestmod=hashlib.sha256\n)\ngenerate_signature = base64.b64encode(signature_hash.digest()).decode('utf-8')\nprint(generate_signature)\nif generate_signature != signature_v3:\n  print(\"doesn't match\")```"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 10:42:26",
    "text": "<@U01QVR44MEY>  still same issue"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 10:42:36",
    "text": "was it the same hash?"
  },
  {
    "poster": {
      "poster_name": "Yash Kimtani",
      "poster_handle": "yash.kimtani"
    },
    "time_stamp": "2022-11-04 10:46:14",
    "text": "no different  one"
  },
  {
    "poster": {
      "poster_name": "Lukas Schwab",
      "poster_handle": "lukas"
    },
    "time_stamp": "2022-11-04 11:54:37",
    "text": "You can also scrape ’em all and put ’em in Postgres, then that winds up being a SQL query with a join: <https://blog.sequin.io/HubSpot-to-postgres/> Sequin rolled out a HS associations sync last week."
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-11-04 11:55:54",
    "text": "Thanks! Do you think i need an authenticated url for this or i can use serverless functions?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 12:11:46",
    "text": "Luke is definitely biased though because he works at sequin. Though it's definitely an awesome product"
  },
  {
    "poster": {
      "poster_name": "Abbey Minondo",
      "poster_handle": "abbey"
    },
    "time_stamp": "2022-11-04 12:29:41",
    "text": "Hi all - quick question for you: does “HubSpot_owner_id” always return the int value or does it return label value? Really looking for the text version as opposed to the ID (found in Contacts object). Thanks in advance!",
    "reply_count": 15,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-11-04 12:34:45"
      },
      {
        "time_stamp": "2022-11-04 12:35:05"
      },
      {
        "time_stamp": "2022-11-04 12:38:19"
      },
      {
        "time_stamp": "2022-11-04 12:38:44"
      },
      {
        "time_stamp": "2022-11-04 12:39:12"
      },
      {
        "time_stamp": "2022-11-04 12:53:36"
      },
      {
        "time_stamp": "2022-11-04 13:01:22"
      },
      {
        "time_stamp": "2022-11-04 13:12:23"
      },
      {
        "time_stamp": "2022-11-04 13:14:18"
      },
      {
        "time_stamp": "2022-11-04 13:14:25"
      },
      {
        "time_stamp": "2022-11-04 13:15:16"
      },
      {
        "time_stamp": "2022-11-04 14:22:58"
      },
      {
        "time_stamp": "2022-11-04 14:41:06"
      },
      {
        "time_stamp": "2022-11-04 14:41:12"
      },
      {
        "time_stamp": "2022-11-04 14:43:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lukas Schwab",
      "poster_handle": "lukas"
    },
    "time_stamp": "2022-11-04 12:33:43",
    "text": "That blog post describes a DIY Sequin-style sync! I try to keep the selling to a minimum :wink:"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 12:34:45",
    "text": "I quickly checked a few of my workflow endpoints and everything is returned as a string (text) I don’t see any values returned as actual numbers/integers (hope i understood your question) :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Lukas Schwab",
      "poster_handle": "lukas"
    },
    "time_stamp": "2022-11-04 12:34:45",
    "text": "Mostly I mention it because, for some applications, the GraphQL complexity limits can be prohibitive."
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 12:35:05",
    "text": "this is true of all properties (i hadn’t noticed this before actually)"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 12:37:22",
    "text": "yeah i’m eventually turning this integration into an embedded solution with <http://tray.io|tray.io> (graphql is out of the picture as we’re wanting this to work more for CRM users) your solution would maybe work but would be a huge headache since we’d have to manage several customer instances and via <http://tray.io|tray.io> :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Lukas Schwab",
      "poster_handle": "lukas"
    },
    "time_stamp": "2022-11-04 12:38:19",
    "text": "<@U046MB5T9LH> there _are_ some (legacy?) fields where IDs are delivered as numbers, like `hs_created_by_user_id` on Companies. At a glance that pattern seems limited to some `hs_`-prefixed ID fields, though."
  },
  {
    "poster": {
      "poster_name": "Lukas Schwab",
      "poster_handle": "lukas"
    },
    "time_stamp": "2022-11-04 12:38:44",
    "text": "`HubSpot_owner_id` is always a string field to my knowledge!"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 12:39:12",
    "text": "ahh yep i was checking all my SEARCH CRM endpoints definitely didn’t think about the legacy endpoints :+1::skin-tone-4:"
  },
  {
    "poster": {
      "poster_name": "Abbey Minondo",
      "poster_handle": "abbey"
    },
    "time_stamp": "2022-11-04 12:53:36",
    "text": "Ahh thank you both <@U03K29A62HG> and <@U046MB5T9LH>! Just to confirm - output for this field will look like “Elaine Benes” vs “41104\", right?"
  },
  {
    "poster": {
      "poster_name": "Lukas Schwab",
      "poster_handle": "lukas"
    },
    "time_stamp": "2022-11-04 13:01:22",
    "text": "Sorry, let me clarify––output for that field will look like `\"41104\"` (string) as opposed to `41104` (integer)."
  },
  {
    "poster": {
      "poster_name": "Lukas Schwab",
      "poster_handle": "lukas"
    },
    "time_stamp": "2022-11-04 13:06:04",
    "text": "Yeah, that’s a pattern on our radar––a Sequin user with ≥1 sync per customer––but it hasn’t been our core focus."
  },
  {
    "poster": {
      "poster_name": "John Rosa",
      "poster_handle": "john.rosa"
    },
    "time_stamp": "2022-11-04 13:08:47",
    "text": "Hey All, I’m upgrading to private apps from apikeys.\n\nI’m having trouble getting this call to work using an email address as the id, and can’t find a way in the documentation that this works\n\n```<https://api.hubapi.com/contacts/v1/contact/email/{emailaddress}>```\n",
    "reply_count": 12,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-04 13:11:52"
      },
      {
        "time_stamp": "2022-11-04 13:12:05"
      },
      {
        "time_stamp": "2022-11-04 13:12:09"
      },
      {
        "time_stamp": "2022-11-04 13:12:19"
      },
      {
        "time_stamp": "2022-11-04 13:12:29"
      },
      {
        "time_stamp": "2022-11-04 13:12:41"
      },
      {
        "time_stamp": "2022-11-04 13:13:17"
      },
      {
        "time_stamp": "2022-11-04 13:13:43"
      },
      {
        "time_stamp": "2022-11-04 13:13:57"
      },
      {
        "time_stamp": "2022-11-04 13:15:22"
      },
      {
        "time_stamp": "2022-11-04 14:22:30"
      },
      {
        "time_stamp": "2022-11-04 14:22:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 13:11:52",
    "text": "And you do have the\n```Authorization: bearer pat-xxx```\nHeader right?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 13:12:05",
    "text": "pat-xxx is your key"
  },
  {
    "poster": {
      "poster_name": "John Rosa",
      "poster_handle": "john.rosa"
    },
    "time_stamp": "2022-11-04 13:12:09",
    "text": "That’s correct"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 13:12:19",
    "text": "What exactly is the error?"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 13:12:23",
    "text": "<@U049HS0A744> that field/property is just the ID and you’ll only ever get the id from that field. If you want owner names or emails you’ll have to find a workaround. For example in my integration i store all owners/users from a HS account in a database and then when making calls to any endpoint I enrich the original data with a quick script that looks at both objects and matches up the IDs and spits out the owner properties i need…..in my use-case I need `ownerEmail` so i store all owners with their ownerIDs, userIDs, and emails that way i can enrich my records from various objects and engagements in HubSpot with the actual person who OWNS or CREATED or UPDATED that record…i.e. `ownerEmail` `updaterEmail` `creatorEmail`\n\nIf i’m understanding your response correctly."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 13:12:29",
    "text": "is it a 400?"
  },
  {
    "poster": {
      "poster_name": "John Rosa",
      "poster_handle": "john.rosa"
    },
    "time_stamp": "2022-11-04 13:12:41",
    "text": "I can’t find the right endpoint that allows me to pull up a contact by email address"
  },
  {
    "poster": {
      "poster_name": "John Rosa",
      "poster_handle": "john.rosa"
    },
    "time_stamp": "2022-11-04 13:13:17",
    "text": "When I add an email address to that api, I get a 405 response"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 13:13:43",
    "text": "And you're sending it as a GET request right?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 13:13:57",
    "text": "405 means your sending it incorrectly"
  },
  {
    "poster": {
      "poster_name": "Abbey Minondo",
      "poster_handle": "abbey"
    },
    "time_stamp": "2022-11-04 13:14:18",
    "text": "Got it - thats super super helpful <@U046MB5T9LH>"
  },
  {
    "poster": {
      "poster_name": "Abbey Minondo",
      "poster_handle": "abbey"
    },
    "time_stamp": "2022-11-04 13:14:25",
    "text": "Thank you both so much!"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 13:15:16",
    "text": "basically you’ll only ever see IDs for owners,updaters,creators for all objects and engagements there are a FEW exceptions (off the top of my head ‘emails’ does have a few sender and receiver properties with names and the original emails :+1::skin-tone-4:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 13:15:22",
    "text": "Also I think you might want to use this endpoint instead\n```<https://api.hubapi.com/contacts/v1/contact/email/testingapis@HubSpot.com/profile>```\n"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-04 13:45:05",
    "text": "Does this endpoint not work with the node library?\n\n HubSpotClient.crm.objects.basicApi.update()\n\nI get a \"can't find basicApi\" error"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-04 14:14:04",
    "text": "Sequin is cool been playing around with it"
  },
  {
    "poster": {
      "poster_name": "John Rosa",
      "poster_handle": "john.rosa"
    },
    "time_stamp": "2022-11-04 14:22:30",
    "text": "That worked, thank you"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 14:22:51",
    "text": "Amazing!"
  },
  {
    "poster": {
      "poster_name": "Abbey Minondo",
      "poster_handle": "abbey"
    },
    "time_stamp": "2022-11-04 14:22:58",
    "text": "Me again, sorry! Curious - how do other tools get Owner name (vs id) from HubSpot? Is everyone storing this data as you suggested <@U046MB5T9LH>?"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 14:41:06",
    "text": "I like the storing method and making a script that matches them up, but you could also make multiple requests. Say you’re looking for ‘deals’ in HubSpot that are recently created in the past hour and you make calls every hour for new ‘deals’ each of those would have HubSpot owner IDs. You could then make requests using those IDs to this endpoint:\n\nGET*`/crm/v3/owners/{ownerId}`*\n\nand then match up the data that way! I just have a ‘syncing’ workflow that runs 3/week and grabs all owners/users and stores them so I can reduce the number of requests that i make on any given day. It’s not perfect but it works. You could also always try posting this question in the Dev forum on the website or search there for similar questions!"
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-04 14:41:12",
    "text": "<https://community.HubSpot.com/t5/HubSpot-Developers/ct-p/developers>."
  },
  {
    "poster": {
      "poster_name": "Abbey Minondo",
      "poster_handle": "abbey"
    },
    "time_stamp": "2022-11-04 14:43:29",
    "text": "Thank you SO MUCH!!!"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2022-11-04 14:55:29",
    "text": "I’ve been using the new Ticket webhooks, but it seems that `propertyChanged` events are not getting triggered on `num_associated_contacts` (which does seem to work on Deals). Anyone else run into this? I havent been able to find any documentation on why this might not be supported",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-11-04 14:58:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-04 14:56:08",
    "edited": {
      "time_stamp": "2022-11-06 14:58:53"
    },
    "text": "For future reference, me and chandler solved this over dm"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2022-11-04 14:58:29",
    "text": "Oh, it looks like Tickets do not have that property…which is surprising to me but would make sense why the webhooks aren’t firing :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Aldo Carrillo",
      "poster_handle": "aldo652"
    },
    "time_stamp": "2022-11-04 15:21:28",
    "text": "I don't think so. It should be enough with serverless functions."
  }
]
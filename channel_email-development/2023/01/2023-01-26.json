[
  {
    "poster": {
      "poster_name": "Yeon",
      "poster_handle": "yeonvinzenz.varapraga"
    },
    "time_stamp": "2023-01-26 03:12:18",
    "text": "Hi bros!\n\nAnyone else having problems calling a macro inside a for loop?   (in email coding template)"
  },
  {
    "poster": {
      "poster_name": "Yeon",
      "poster_handle": "yeonvinzenz.varapraga"
    },
    "time_stamp": "2023-01-26 03:13:12",
    "text": "the macro is working when called outside of the for-loop, but as soon as moved into a for-loop the macro doesnt give any output :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Zieyaad",
      "poster_handle": "zieyaadmoses"
    },
    "time_stamp": "2023-01-26 03:35:26",
    "text": "<@U01CUEE5P88>\nI had a similar issue, i created partials instead and it works"
  },
  {
    "poster": {
      "poster_name": "Mohammad Wahid",
      "poster_handle": "mwahid.eng"
    },
    "time_stamp": "2023-01-26 05:34:22",
    "text": "*How can I integrate REST API with my product?*\nHello, I want to know the actual process to send an email to a contact list. From the legacy documentation I understand that, I can create marketing email using the API but the email stays as draft. Is it directly sendable to contact list? Or do I have to use single-send-api for sending the drafted email? Maybe for using the single-send-api, I need transactional-email permission. But I faced the following issue when I went for the permission.\n1. Private App: Scope (transactional-email) is unavailable for this account. (I have super admin permission).\n2. OAuth 2.0: This account doesnâ€™t have access to some HubSpot features that are required by this app. Please contact the app developer. (without transactional-email feature, it works).\nAnyone has solution? Thank you!",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-01-26 07:35:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 07:35:56",
    "text": "<https://HubSpotdev.slack.com/archives/C2YHAHB6K/p1674736433692109>"
  },
  {
    "text": "Hi - has anyone managed to get Programmable Email to work? <https://knowledge.HubSpot.com/email/create-programmable-emails>\n\nDo I need to opt-in somewhere or should it be able to work by just adding the required annotation 'isEnabledForEmailV3Rendering: true'?\n\nGetting error stating I need to add the annotation, but it's already added...",
    "time_stamp": "2023-01-26 07:44:12",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-01-29 04:15:37"
      },
      {
        "time_stamp": "2023-01-30 03:50:46"
      },
      {
        "time_stamp": "2023-01-30 04:31:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2023-01-27 00:59:17",
    "text": "FYI: <@U6W3H6YN8> <@U7SL518D6> <@U2H3TT8F2>\n\n*Bug in HubSpot email templates:*\nWhile inspecting the email code, I noticed a difference in the syntax of the tokens that the rich text editor inserts when selecting a token via the \"Personalized\" button. The error was not directly displayed in the editor, but appears before sending. Currently, the solution is to write the token code manually.\n\nThis is what get insert: (old notation)\n`{{ personalization_token(\"company.state \", \"\") }}` \n\nThis is what the validation expects: (new notation)\n`{{ site_settings.company_state }}` \n\nIt occurs when you select \"manually\" for the address type of the company footer module and then add the missing \"State/Region\" token, because it is missing by default but required. However, adding this token is of no use because the notation is incorrect. And you can't fix it without programming skills. That means customers are unable to send their emails if they use that feature.",
    "reply_count": 4,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-01-27 08:00:36"
      },
      {
        "time_stamp": "2023-01-27 08:15:14"
      },
      {
        "time_stamp": "2023-01-27 09:01:28"
      },
      {
        "time_stamp": "2023-01-27 09:11:51"
      }
    ]
  }
]
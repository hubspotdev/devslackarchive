[
  {
    "poster": {
      "poster_name": "Lachlan Castles",
      "poster_handle": "lachlancastles"
    },
    "time_stamp": "2022-02-22 01:32:33",
    "edited": {
      "time_stamp": "2022-02-22 01:36:04"
    },
    "text": "G'day everyone - just chasing some advice regarding using OAUTH for a headless 'connector'. We've got a Python script that calls our internal CRM's API and then creates/amends HubSpot contacts depending on their status at regular times each day.\n\nCurrently it is using just a basic API key - which naturally isn't ideal. Given that it isn't in the form of a HubSpot App (i.e. user X wants to enable this script to access their HubSpot data), but is instead wanting to automatically gather an access token for a given sync. Is there a way to achieve this without using basic API keys?\n\nI assume it would be a function that looks like this:\n\n\n`def get_access_key(client-id, client-secret, access-token):`",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-02-22 05:44:31"
      },
      {
        "time_stamp": "2022-02-24 01:28:52"
      },
      {
        "time_stamp": "2022-02-24 08:00:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Artem Dikmarov",
      "poster_handle": "dikmarov"
    },
    "time_stamp": "2022-02-22 05:30:35",
    "edited": {
      "time_stamp": "2022-02-22 05:32:25"
    },
    "text": "Hi all!\n\nCan you tell me if it’s possible to insert to CRM Card a link to chrome extension in iFrame?\n\nI do this and get an error\n``` \"primaryAction\": {\n    \"type\": \"IFRAME\",\n    \"width\": 890,\n    \"height\": 748,\n    \"uri\": \"<chrome-extension://hmgfacfengmobingmjkljkcjbjpbfhbm/index.html>\",\n    \"label\": \"Billing and Invoices\".\n  },```",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-02-22 05:31:31"
      },
      {
        "time_stamp": "2022-02-22 05:32:15"
      },
      {
        "time_stamp": "2022-02-22 05:33:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-02-22 05:31:31",
    "text": "wouldn´t that be a security risk?"
  },
  {
    "poster": {
      "poster_name": "Artem Dikmarov",
      "poster_handle": "dikmarov"
    },
    "time_stamp": "2022-02-22 05:32:15",
    "text": "Extension is only distributed within the domain, so there is no security problem"
  },
  {
    "poster": {
      "poster_name": "Artem Dikmarov",
      "poster_handle": "dikmarov"
    },
    "time_stamp": "2022-02-22 05:33:35",
    "text": "```com.fasterxml.jackson.databind.exc.ValueInstantiationException: Cannot construct instance of `com.HubSpot.net.uri.ValidatedUri`, problem: Invalid ValidatedUri: <chrome-extension://hmgfacfengmobingmjkljkcjbpbjfhbm/index.html>\\n at [Source: (com.HubSpot.java.io.ChunkedByteArrayOutputStream$ChunkedByteArrayInputStream); line: 23, column: 12] (through reference chain: com.HubSpot.linkedsalesobjects.base.models.objects.IntegratorViewResult$Json[\\\"primaryAction\\\"]-&gt;com.HubSpot.linkedsalesobjects.base.models.actions.IFrameActionView$Json[\\\"uri\\\"])```"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-02-22 05:44:31",
    "text": "Hey Lachlan, check out the docs for Private Apps: <https://developers.HubSpot.com/docs/api/private-apps#:~:text=Private%20apps%20allow%20you%20to,apps%20in%20your%20HubSpot%20account|https://developers.HubSpot.com/docs/api/private-apps#:~:text=Private%20apps%20allow%20you%20to,apps%20in%20your%20HubSpot%20account>."
  },
  {
    "poster": {
      "poster_name": "Matheus Klemann",
      "poster_handle": "matheus.klemann"
    },
    "time_stamp": "2022-02-22 06:47:13",
    "text": "Hi Marcel, any progress on this point? <@U033ZSGJ3D1>"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2022-02-22 08:01:35",
    "text": "<@UFBNA9K9A> can you help out with this one?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2022-02-22 08:02:47",
    "text": "<@UD53A9UUR> if you know someone else who could help that would be nice"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2022-02-22 08:54:53",
    "text": "Sorry, I can't get slack working on my computer so I'm on mobile"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2022-02-22 08:55:57",
    "text": "You need to decode the input string before putting it into the crypto function"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2022-02-22 08:56:31",
    "text": "I used decodeURIComponent to do that"
  },
  {
    "poster": {
      "poster_name": "pChausseC",
      "poster_handle": "pccossio"
    },
    "time_stamp": "2022-02-22 08:58:07",
    "text": "is utf8.encode() not needed then?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2022-02-22 09:00:21",
    "text": "I didn't use it when I implemented it."
  },
  {
    "poster": {
      "poster_name": "pChausseC",
      "poster_handle": "pccossio"
    },
    "time_stamp": "2022-02-22 09:15:03",
    "text": "Alright thanks, I'll try that. I guess the 'create a utf-8 encoded string' part of the docs threw me off."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2022-02-22 09:46:57",
    "text": "Ok, slack is back up, here’s my working code in case it helps\n```const CLIENT_SECRET = \"xxxxx-xxxx-xxxx-xxxx-xxxxxxxxx\";\nconst incomingSignature = \"C0xFP67bHKrN2fuy0W4pDBBL/TSgR9G8YQibavYdJhc=\";\n\nconst crypto = require(\"crypto\");\n\nconst requestMethod = \"GET\";\n\nconst requestUri =\n  \"<https://webhook.site/6956d85e-30f9-470b-8fa4-99e15bcb862e?userId=557076&amp;userEmail=zwolfson%40HubSpot.com&amp;associatedObjectId=782566&amp;associatedObjectType=CONTACT&amp;portalId=589323>\";\n\nconst timeStamp = \"1644330579222\";\n\nconst requestInfo = `${requestMethod}${requestUri}${timeStamp}`;\n\nconst decodedString = decodeURIComponent(requestInfo);\n\nconst hash = crypto\n  .createHmac(\"sha256\", CLIENT_SECRET)\n  .update(decodedString)\n  .digest(\"base64\");\n\nif (hash == incomingSignature) {\n  console.log(\"match!\");\n} else {\n  console.log(\"whoops\");\n}```"
  },
  {
    "poster": {
      "poster_name": "pChausseC",
      "poster_handle": "pccossio"
    },
    "time_stamp": "2022-02-22 10:04:42",
    "text": "Thank you!!"
  },
  {
    "poster": {
      "poster_name": "Colby Johnson",
      "poster_handle": "colby"
    },
    "time_stamp": "2022-02-22 12:41:27",
    "edited": {
      "time_stamp": "2022-02-22 12:41:55"
    },
    "text": "I have been working on this same thing for the last several hours. Specifically I was missing the `decodeURIComponent()`\n\nI did not think this was needed as `hmac.update()`  documentation states:\nUpdates the `Hmac` content with the given `data`, the encoding of which is given in `inputEncoding`. If `encoding` is not provided, and the `data` is a string, an encoding of `'utf8'` is enforced. If `data` is a `Buffer`, `TypedArray`, or `DataView`, then `inputEncoding` is ignored.\n<https://nodejs.org/api/crypto.html#hmacdigestencoding>\n\nI assumed this meant the `decodeURIComponent()`  was not needed, but that did the trick.\nthank you so much for sharing this example"
  },
  {
    "poster": {
      "poster_name": "Nikhil Patel",
      "poster_handle": "nikhilpatel"
    },
    "time_stamp": "2022-02-22 13:24:58",
    "text": "Hello,\nCan anybody know why this issue occurs inside HubSpot Env but not in local env. I am having the same issue and don't know what to do next.\n\nIssue: Get owner by user ID inside workflow custom code.\nTypeError: Cannot read property 'getById' of undefined\n\n<https://community.HubSpot.com/t5/9881-Operations-Hub/TypeError-Cannot-read-property-getById-of-undefined-when-calling/td-p/560037>"
  },
  {
    "poster": {
      "poster_name": "Marcel",
      "poster_handle": "marcel686"
    },
    "time_stamp": "2022-02-22 14:09:53",
    "text": "I’ve logged a ticket with support. I’ll post an update here when I get a response."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-02-22 19:04:06",
    "edited": {
      "time_stamp": "2022-02-22 19:04:31"
    },
    "text": "Using the run in Postman button on this <https://developers.HubSpot.com/docs/api/conversations/conversations|page> imports the contacts API collection, not the conversations collection",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-02-23 07:08:00"
      },
      {
        "time_stamp": "2022-02-23 14:22:51"
      },
      {
        "time_stamp": "2022-02-24 07:07:18"
      }
    ]
  }
]
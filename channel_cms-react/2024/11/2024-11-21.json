[
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2024-11-21 02:25:54",
    "text": "Can we do the Lottie animations in React modules? <@UAYBXDG4U>",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-11-21 05:48:41"
      },
      {
        "time_stamp": "2024-11-21 06:11:35"
      },
      {
        "time_stamp": "2024-11-21 10:34:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-11-21 05:48:41",
    "text": "fundamentally I don't see why something like this wouldn't work - though I have to admin I haven't worked with Lottie before."
  },
  {
    "poster": {
      "poster_name": "SÃ©bastien Rochon",
      "poster_handle": "srochon"
    },
    "time_stamp": "2024-11-21 06:11:35",
    "text": "I'm working with this lib : <https://www.npmjs.com/package/@lottiefiles/react-lottie-player>\n\nIt work great within a island"
  },
  {
    "text": "So is it possible or not possible to use the `getSecret` in the `serverSideProps`?\nI saw <https://www.youtube.com/live/WIGwNPp-DkI|the video on youtube> where `CURRENCY_API_KEY`  is imported from `constants.js` which means that this key is commited to github? Or is  the key retrieved with `getSecret` in the `constants.js`?\n\nLooking at <@UAYBXDG4U> :slightly_smiling_face:",
    "time_stamp": "2024-11-21 06:19:43",
    "reply_count": 15,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-11-21 06:20:20"
      },
      {
        "time_stamp": "2024-11-21 06:27:04"
      },
      {
        "time_stamp": "2024-11-21 06:27:23"
      },
      {
        "time_stamp": "2024-11-21 06:28:17"
      },
      {
        "time_stamp": "2024-11-21 06:28:22"
      },
      {
        "time_stamp": "2024-11-21 06:28:46"
      },
      {
        "time_stamp": "2024-11-21 06:28:59"
      },
      {
        "time_stamp": "2024-11-21 06:32:14"
      },
      {
        "time_stamp": "2024-11-21 06:33:12"
      },
      {
        "time_stamp": "2024-11-21 06:34:19"
      },
      {
        "time_stamp": "2024-11-21 06:34:36"
      },
      {
        "time_stamp": "2024-11-21 06:34:42"
      },
      {
        "time_stamp": "2024-11-21 06:34:45"
      },
      {
        "time_stamp": "2024-11-21 06:34:53"
      },
      {
        "time_stamp": "2024-11-21 06:34:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-11-21 06:20:20",
    "text": "it is possible"
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:27:04",
    "text": "So this is OK?\n```import { Client } from '@HubSpot/api-client';\nimport { getSecret, withModuleProps } from '@HubSpot/cms-components';\n\nconst fetchFirstContact = async (accessToken: string) =&gt; {\n  const client = new Client({ accessToken: accessToken });\n  return client.crm.contacts.basicApi.getPage(1);\n};\n\nconst fetchdata = async () =&gt; {\n  const accessToken = getSecret('ACCESS_TOKEN');\n  const data = await fetchFirstContact(accessToken);\n\n  return {\n    serverSideProps: {\n      data,\n    },\n    caching: {\n      cacheControl: {\n        maxAge: 60,\n      },\n    },\n  };\n};\n\nexport const getServerSideProps = withModuleProps(fetchdata);```"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-11-21 06:27:23",
    "text": "yes."
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:28:17",
    "text": "Nice!\nWe want to implement a home search with data about the homes like price, images, etc.  from the CRM object."
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:28:22",
    "text": "Thanks <@UAYBXDG4U>"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-11-21 06:28:46",
    "text": "Is GraphQL not something you can use for this?"
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:28:59",
    "text": "is that better?"
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:32:14",
    "text": "I guess there will be less or no api call with GraphQL right?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-11-21 06:33:12",
    "text": "what would drive the search, a query param?"
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:34:19",
    "text": "we would fetch all the home objects and display this on the page."
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:34:36",
    "text": "the search would be just hiding and displaying particular data."
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:34:42",
    "text": "search would not trigger server call."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-11-21 06:34:45",
    "text": "I think GraphQL might be better."
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:34:53",
    "text": "Aha... will try this."
  },
  {
    "poster": {
      "poster_name": "I Made Sariyanta",
      "poster_handle": "desar.sariyanta"
    },
    "time_stamp": "2024-11-21 06:34:55",
    "text": "Thanks Byron."
  },
  {
    "poster": {
      "poster_name": "Curtis Dulmage",
      "poster_handle": "curtdulmage"
    },
    "time_stamp": "2024-11-21 09:18:01",
    "text": "Can HubSpot forms be mutated with the HubSpot GraphQL?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-11-21 09:18:56"
      },
      {
        "time_stamp": "2024-11-21 09:35:37"
      },
      {
        "time_stamp": "2024-11-21 09:40:08"
      },
      {
        "time_stamp": "2024-11-21 09:58:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Curtis Dulmage",
      "poster_handle": "curtdulmage"
    },
    "time_stamp": "2024-11-21 09:18:56",
    "text": "In other words, can I author a custom React form, and submit the result to a form created in the HubSpot backend using GraphQL?"
  },
  {
    "poster": {
      "poster_name": "Curtis Dulmage",
      "poster_handle": "curtdulmage"
    },
    "time_stamp": "2024-11-21 09:26:55",
    "edited": {
      "time_stamp": "2024-11-21 09:28:53"
    },
    "text": "Separate question...\n\nI'm finding that when I view my page _(powered by my React theme)_ in a \"Private window\" on FireFox (`132.0.2 (aarch64)`)... anything rendered via an island doesn't show up.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-11-21 09:29:14"
      }
    ]
  },
  {
    "text": "This is what the Network tab looks like:",
    "time_stamp": "2024-11-21 09:29:14"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2024-11-21 09:34:44",
    "edited": {
      "time_stamp": "2024-11-21 09:34:52"
    },
    "text": "Aitor did you get this working? Just tested with a repeater field in my portal and it seems to be WAD. (Granted I didnt use the boilerplate example.)"
  },
  {
    "poster": {
      "poster_name": "Ramandeep Singh",
      "poster_handle": "ramandeep.singh2"
    },
    "time_stamp": "2024-11-21 09:35:37",
    "text": "To my knowledge YES, you can create a custom React form and submit the results to a HubSpot form using GraphQL.\n\nBut note that HubSpot doesn't directly support GraphQL for form submissions.\n\nHowever, you can integrate your custom React form with HubSpot through its API."
  },
  {
    "poster": {
      "poster_name": "Curtis Dulmage",
      "poster_handle": "curtdulmage"
    },
    "time_stamp": "2024-11-21 09:40:08",
    "text": "Any chance you know of some example code I could reference for this? I have not yet found any HubSpot documentation for GraphQL mutations."
  },
  {
    "poster": {
      "poster_name": "Ramandeep Singh",
      "poster_handle": "ramandeep.singh2"
    },
    "time_stamp": "2024-11-21 09:58:25",
    "text": "Sending you DM..."
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2024-11-21 10:34:36",
    "text": "Yes you can, I did it a while back and there are no issues with it :)"
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2024-11-21 10:38:11",
    "text": "I can attest to this, it always happened with us as well. We simply let it go but it is a pretty bad UX since you don't know what's inside those inputs on the UI side until you delete an instance or make some edits."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2024-11-21 10:40:44",
    "text": "do you have a code example where this is happening?"
  },
  {
    "text": "I just uploaded the example from the docs and it worked fine. Only exception was a typo. `&lt;ModuleField&gt;` component should be `&lt;ModuleFields&gt;`",
    "time_stamp": "2024-11-21 10:59:06"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2024-11-21 10:59:17",
    "text": "```import { ModuleFields, RepeatedFieldGroup, TextField, BooleanField } from '@HubSpot/cms-components/fields';\n\nexport const fields = (\n  &lt;ModuleFields&gt;\n    &lt;RepeatedFieldGroup\n      name='default_todos'\n      label='Default Todos'\n      occurrence={{\n        min: 1,\n        max: 500,\n        default: 1,\n      }}\n      default={[\n        {\n          text: 'Todo Test 1a',\n          completed: false,\n        },\n        {\n          text: 'Todo Test 2',\n          completed: true,\n        },\n      ]}\n    &gt;\n      &lt;TextField\n        label='Todo title'\n        name='text'\n        default='Todo...'\n        required\n      /&gt;\n      &lt;BooleanField\n        label='Todo Completed'\n        name='completed'\n        default={false}\n      /&gt;\n    &lt;/RepeatedFieldGroup&gt;\n  &lt;/ModuleFields&gt;\n);```\n"
  }
]
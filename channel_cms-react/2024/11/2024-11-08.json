[
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-11-08 06:17:31",
    "text": "not currenlty"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2024-11-08 08:16:05",
    "text": "given the fact that the image can be resized through url params, should be pretty easy to create a function to handle resizing"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2024-11-08 08:21:19",
    "text": "something like that:\n`function resizeImageUrl(url, width, height) {`\n  `const urlParts = url.split('?');`\n  `const baseUrl = urlParts[0];`\n  `const queryParams = urlParts[1] ? urlParts[1].split('&amp;') : [];`\n\n  `const newQueryParams = [];`\n\n  `if (width) {`\n    `newQueryParams.push(`width=${width}`);`\n  `}`\n\n  `if (height) {`\n    `newQueryParams.push(`height=${height}`);`\n  `}`\n\n  `newQueryParams.push(...queryParams);`\n\n  `const newUrl = `${baseUrl}?${newQueryParams.join('&amp;')}`;`\n\n  `return newUrl;`\n`}`"
  }
]
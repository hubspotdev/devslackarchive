[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-06-15 05:18:35",
    "text": "is there a way to redirect to a new url from inside a component?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-06-15 05:24:02"
      },
      {
        "time_stamp": "2023-06-15 06:41:23"
      },
      {
        "time_stamp": "2023-06-15 06:43:11"
      },
      {
        "time_stamp": "2023-06-15 11:32:30"
      },
      {
        "time_stamp": "2023-06-15 11:33:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-06-15 05:24:02",
    "text": "it's client only so I think I'm safe to use `window.location` right?"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2023-06-15 06:41:23",
    "edited": {
      "time_stamp": "2023-06-15 06:42:09"
    },
    "text": "Do you want it to be a new page load? If so you can use `location.assign(&lt;url&gt;)`\n\n Or looking for a client-side router location update?\nYou could use the `window.history.pushState`  API, (or if using a routing library if they have some sort of specific pushState api)\n\nLmk if either of those fit your use case"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-06-15 06:43:11",
    "text": "<@U04DLJH3W94> thanks, I think just `window.location.href` works in my case. I don't necessarily need it to be a new page load"
  },
  {
    "poster": {
      "poster_name": "Charles Boamah",
      "poster_handle": "cboamah"
    },
    "time_stamp": "2023-06-15 07:27:53",
    "edited": {
      "time_stamp": "2023-06-23 11:37:55"
    },
    "text": ":reactjs: *JS Building Blocks is now in Public Beta!* :reactjs:\n\nAll CMS Starter, Pro, and Enterprise customers and their associated development portals can now easily self-enroll via <https://app.HubSpot.com/l/design-manager/settings|Design Manager settings>.\n\nThank you for all the feedback during the private beta. If you have any questions regarding the <https://github.com/HubSpot/cms-js-building-block-examples|documentation> or need assistance with the setup process, please don’t hesitate to reach out.\n\nWe can’t wait to see how JS Building Blocks enhances your development experience!"
  },
  {
    "poster": {
      "poster_name": "Charles Boamah",
      "poster_handle": "cboamah"
    },
    "time_stamp": "2023-06-15 07:41:05",
    "text": "Hi <@U048LSBAJUW> - Wanted to follow up and confirm that JS Building Blocks are now fully functional on EU portals and can be ungated on additional CMS Starter/Pro/Enterprise portals <https://app.HubSpotqa.com/l/design-manager/settings|via Design Manager settings. >"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-06-15 11:32:30",
    "edited": {
      "time_stamp": "2023-06-15 11:32:36"
    },
    "text": "if you don’t want a full new page load i’d recommend our `pushHistoryState()` export from `cms-components` which just wraps `window.history.pushState` but also emits an event so that if you have `usePageUrl()` anywhere in your components it’ll always update"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-06-15 11:33:20",
    "text": "admittedly `pushHistoryState` isn’t mentioned in our docs, i’ll add it"
  }
]
[
  {
    "poster": {
      "poster_name": "Robby Morgan",
      "poster_handle": "robby286"
    },
    "time_stamp": "2023-05-25 10:05:51",
    "text": "<https://developers.HubSpot.com/docs/cms/data/serverless-functions/reference#preloaded-packages> says it is.\n\nIf you are using package.json to import other packages, then presumably you are using Webpack or some other bundler, which may not be falling back to the packages that are available out of the box.  There's probably a way to configure your bundler to handle this (see <https://webpack.js.org/concepts/module-resolution/> for more info on Webpack).\n\nHonestly though, if you're already using a bundler, then I would just add all the libraries you need to package.json, since it will enable you to control the version you use as well."
  },
  {
    "poster": {
      "poster_name": "Robby Morgan",
      "poster_handle": "robby286"
    },
    "time_stamp": "2023-05-25 10:20:36",
    "text": "I've posted this to the HS community for wider visibility: <https://community.HubSpot.com/t5/APIs-Integrations/Case-of-header-names-available-to-serverless-function/m-p/799068#M64354>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-05-25 12:23:30",
    "text": "yeah that's definitely an option if you don't want to go down the CMS functions route"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-05-25 12:24:42",
    "text": "This is to tutorial I always reference when setting up a lambda function: <https://docs.aws.amazon.com/lambda/latest/dg/getting-started.html>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-05-25 12:26:04",
    "text": "<@U03MLCLS5BN> just published another great article on this subject: <https://developers.HubSpot.com/blog/how-to-process-webhooks-in-HubSpot-workflows-using-aws-lambda>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-05-25 12:26:40",
    "text": "It's in a little bit of an adjacent subject (workflows) but same process to setup the process"
  },
  {
    "poster": {
      "poster_name": "Hannah Seligson - Developer Advocate",
      "poster_handle": "hseligson"
    },
    "time_stamp": "2023-05-25 12:36:43",
    "text": "Yeah, using AWS as your cloud provider for your functions is a flexible solution that offers additional tools for your development workflow, even for your continuous deployment process. As for the suggestion for using DynamoDB - curious about what folks think of it, Iâ€™ve never used it!"
  }
]
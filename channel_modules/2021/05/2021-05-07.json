[
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-07 01:54:41",
    "edited": {
      "time_stamp": "2021-05-07 01:55:11"
    },
    "text": "You can use the site search API"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-07 01:55:16",
    "text": "<https://developers.HubSpot.com/docs/api/cms/site-search>"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-07 01:55:39",
    "text": "You’ll need to put it together using JS"
  },
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-05-07 01:56:51",
    "text": "do you have any working example on how to do this? because i am a bit lost"
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-05-07 02:05:03",
    "text": "<@U01T4LC601X> Yes you can do that.\n\nBoth, the _search-input_ and the _search-result_ are modules and can be customized. To do that, copy the context of the files into a custom module or your template. In the end it will be a mix of both modules, like this:\n\n*search-input:* _/@HubSpot/search_input.module_\n• Use the HTML part with the form for your search field.\n• Replace the action on the &lt;form/&gt; element, with your custom search function.\n• Prevent the page reload after submit using: _e.preventDefault();_ \n• The JS here creates a preview below the input field. Skip this if you don't want a preview.\n*search-result:* _/@HubSpot/search_results.module_\n• Copy the HTML of this module and place it in your tempalte where you want to output the results. \n• Take a look at the _httpRequest_ function in the JS part. HubSpot site-search is an Ajax or XMLHttpRequest. The response is a json object with your results.\n• The original Script creates the request URL out of the query parameter from the search-input URL.\n• But we replace that default action and use the submitted form data direcly for our custom request function.\n• Again take a look at the _httpRequest_ function in this module. And next look at the _searchParams_ variable, relace that variable with you custom query and the params from your form submission.\n• For the search params take a look at the link <@UQERM7BLY> posted.\n"
  },
  {
    "poster": {
      "poster_name": "Thierry-Luc Denichaud",
      "poster_handle": "thierry.denichaud"
    },
    "time_stamp": "2021-05-07 08:33:29",
    "text": "Hey HubSpot team\nIm building a custom module\n\nWhy wont onclick functions on elements emit to the JS example:\nHTML section\n&lt;div onclick=“myfunction( {{someCustomFieldTextType}} )“&gt;\n\nJS section\nfunction myFunction(someCustomFieldTextType) {\n   console.log(someCustomFieldTextType)\n}"
  }
]
[
  null,
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-27 05:26:54",
    "text": "Hi, has anyone come across latency issues or performance problems with the HubDB API? <@U9VUKNE3C> and I are trying to populate 6000-9000 rows on a regular basis from an Azure Function, but seeing a series of API failures and inconsistent responses. Appreciate any anecdotal guidance.",
    "reply_count": 30,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2018-03-27 06:40:01"
      },
      {
        "time_stamp": "2018-03-27 06:43:41"
      },
      {
        "time_stamp": "2018-03-27 06:52:43"
      },
      {
        "time_stamp": "2018-03-27 06:53:08"
      },
      {
        "time_stamp": "2018-03-27 06:54:35"
      },
      {
        "time_stamp": "2018-03-27 06:57:40"
      },
      {
        "time_stamp": "2018-03-27 07:06:50"
      },
      {
        "time_stamp": "2018-03-27 07:18:37"
      },
      {
        "time_stamp": "2018-03-27 07:19:44"
      },
      {
        "time_stamp": "2018-03-27 07:26:31"
      },
      {
        "time_stamp": "2018-03-27 07:29:53"
      },
      {
        "time_stamp": "2018-03-27 07:30:33"
      },
      {
        "time_stamp": "2018-03-27 07:30:36"
      },
      {
        "time_stamp": "2018-03-27 07:32:41"
      },
      {
        "time_stamp": "2018-03-27 07:32:48"
      },
      {
        "time_stamp": "2018-03-27 07:35:20"
      },
      {
        "time_stamp": "2018-03-27 07:36:04"
      },
      {
        "time_stamp": "2018-03-27 16:33:29"
      },
      {
        "time_stamp": "2018-03-27 17:17:26"
      },
      {
        "time_stamp": "2018-03-28 07:40:43"
      },
      {
        "time_stamp": "2018-03-28 07:44:02"
      },
      {
        "time_stamp": "2018-03-28 07:47:20"
      },
      {
        "time_stamp": "2018-03-28 14:42:15"
      },
      {
        "time_stamp": "2018-03-28 14:58:48"
      },
      {
        "time_stamp": "2018-03-28 14:59:11"
      },
      {
        "time_stamp": "2018-03-28 14:59:12"
      },
      {
        "time_stamp": "2018-03-28 14:59:56"
      },
      {
        "time_stamp": "2018-03-28 15:00:07"
      },
      {
        "time_stamp": "2018-03-28 15:00:14"
      },
      {
        "time_stamp": "2018-03-28 15:00:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 06:16:10",
    "text": "<@U22PJPGK0> I’m trying to set the queryparam for my table using the query string and am having some issues getting it to work. Would you mind looking at the screenshot below to see if I’m doing something incorrectly?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-03-27 07:08:50"
      }
    ]
  },
  {
    "text": "<@U2LEJ045D> uploaded a file: <https://HubSpotdev.slack.com/files/U2LEJ045D/F9W1N4TDE/screen_shot_2018-03-27_at_8.15.52_am.png|Screen Shot 2018-03-27 at 8.15.52 AM.png>",
    "time_stamp": "2018-03-27 06:16:21"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-03-27 06:40:01",
    "edited": {
      "time_stamp": "2018-03-27 06:41:12"
    },
    "text": "I didn't worked with hubDB queries yet, so I can't help there, but to get the url vars you can use the Query var.\nso instead using queryparam hardcoded you could use directly something like:\n`{% for key, val in Query %}`\n` {% if val %}`\n`  {% set queryparam = queryparam ~ \"&amp;\" ~ key ~ \"=\" ~ val %}`\n`  {% endif %}`\n\n`  {% if loop.last %}`\n`    {# Do your stuff here #}`\n`    {% set table = hubdb_table_rows (\"portalID\", queryparam %}`\n`...`\n\n`  {% endif %}`\n`{% endfor %}`"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-03-27 06:43:41",
    "text": "of course probably you will want to add some extra conditionals to limit the parameters to only accept a list of keywords like industry"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-27 06:52:43",
    "text": "Thanks <@U7ADCU3BM> this is mostly around reading using HubBl, we are focusing on the REST API."
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-27 06:53:08",
    "text": "<@U22PU4G4A> was recommend to tag you for any input. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-03-27 06:54:35",
    "text": "Not sure. I think <@U6GNQ7JBU> would likely be able to help answer this though."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-03-27 06:57:40",
    "text": "wops sorry <@U7D5W6EVA>, that wasn't for you, it was for <@U2LEJ045D>. my bad :smile:"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-27 07:06:50",
    "text": "Thanks <@U22PU4G4A> appreciate it. "
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-03-27 07:08:50",
    "text": "Sorry I messed up and answered here:\n<https://HubSpotdev.slack.com/archives/C22PDRW72/p1522154401000046?thread_ts=1522150014.000298&amp;cid=C22PDRW72>"
  },
  {
    "poster": {
      "poster_name": "Ben Shapiro",
      "poster_handle": "ben_shapiro"
    },
    "time_stamp": "2018-03-27 07:15:54",
    "text": "<@U7D5W6EVA> <@U9VUKNE3C> "
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:18:37",
    "text": "How often are you populating this?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:19:44",
    "text": "You can use the multi row update API that will be added to the docs soon, let me know if you need details"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:20:53",
    "text": "Update on this, we are working on one new UI update before ungating people for this"
  },
  {
    "poster": {
      "poster_name": "Ben Shapiro",
      "poster_handle": "ben_shapiro"
    },
    "time_stamp": "2018-03-27 07:26:31",
    "edited": {
      "time_stamp": "2018-03-27 07:27:06"
    },
    "text": "Hey <@U6GNQ7JBU> they are updating every hour using the CSV import API ... any issues with 6000-9000 row volume  <@U7D5W6EVA> <@U9VUKNE3C> - the multi row API might be an option"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:29:53",
    "text": "CSV should be fine. What errors are you seeing?"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-27 07:30:33",
    "text": "<@U6GNQ7JBU> yes pls! Possible to update the row based on our own injected ID? Saving us having to pull out and store the row id?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:30:36",
    "text": "Also can you DM the table?"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-27 07:32:41",
    "text": "Is a link ok?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:32:48",
    "text": "Sure"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:35:20",
    "text": "Looking at this, it seems your request is timing out due to the amount of data, I can increase the timeout"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 07:36:04",
    "text": "Having a link to the table and DM the csv would be great to check"
  },
  {
    "text": "A file, which can't be shown because your team is past the free storage limit, was commented on.",
    "time_stamp": "2018-03-27 08:48:57",
    "edited": {
      "time_stamp": "2018-03-27 08:49:31"
    }
  },
  {
    "text": "A file, which can't be shown because your team is past the free storage limit, was commented on.",
    "time_stamp": "2018-03-27 08:51:12"
  },
  {
    "text": "A file, which can't be shown because your team is past the free storage limit, was commented on.",
    "time_stamp": "2018-03-27 08:51:17"
  },
  {
    "text": "<@U2LEJ045D> uploaded a file: <https://HubSpotdev.slack.com/files/U2LEJ045D/F9WPFGSAX/screen_shot_2018-03-27_at_10.34.15_am.png|Screen Shot 2018-03-27 at 10.34.15 AM.png>",
    "time_stamp": "2018-03-27 08:51:41"
  },
  {
    "text": "A file, which can't be shown because your team is past the free storage limit, was commented on.",
    "time_stamp": "2018-03-27 08:52:19"
  },
  {
    "text": "A file, which can't be shown because your team is past the free storage limit, was commented on.",
    "time_stamp": "2018-03-27 08:52:44"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:53:01",
    "text": "{% if request.query_dict == “industry=1” %}\n    {% set queryparam = “&amp;industry=1\" %}\n{% endif %}\n\n\n{% set table = hubdb_table_rows(679160,queryparam) %}\n\n   \n{% for row in table %}\n        &lt;div class=“testimonial-container-wrapper”&gt;\n            &lt;div class=“testimonial-card”&gt;\n                &lt;a style=“text-decoration:none;” href=“{{ row.url}}“&gt;\n                &lt;img class=“testimonial-logo-image” src=“{{ row.logo.url }}” alt=“{{ row.name }} Book”&gt;&lt;/a&gt;\n                &lt;div class=“testimonial-info”&gt;\n                    &lt;a style=“text-decoration:none; color:black;” href=“{{ row.url}}“&gt;&lt;h3&gt;{{ row.name }}&lt;/h3&gt;&lt;/a&gt;\n                    &lt;p&gt;&lt;a style=“color:black;” href=“/customer-testimonials?industry={{ row.industry.id }}“&gt;{{ row.industry.name }}&lt;/a&gt;&lt;/p&gt;\n               &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n{% endfor %}"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:53:10",
    "text": "that is the latest code for the table"
  },
  {
    "text": "A file, which can't be shown because your team is past the free storage limit, was commented on.",
    "time_stamp": "2018-03-27 08:53:41"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:54:22",
    "text": "<https://www.oneaccordcapital.com/customer-testimonials> - that is the page that I’m working on"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:54:42",
    "text": "when i click on the industry name - I pass the industry=1 into the url"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:55:00",
    "text": "however no filtering takes place on the page"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 08:55:36",
    "text": "This issue with with your line `if request.query_dict == “industry=1”`"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:55:58",
    "text": "What should I change that to <@U6GNQ7JBU>",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-03-27 08:56:49"
      },
      {
        "time_stamp": "2018-03-27 08:59:12"
      },
      {
        "time_stamp": "2018-03-27 08:59:39"
      },
      {
        "time_stamp": "2018-03-27 09:01:20"
      },
      {
        "time_stamp": "2018-03-27 09:01:30"
      },
      {
        "time_stamp": "2018-03-27 09:01:47"
      },
      {
        "time_stamp": "2018-03-27 09:02:37"
      },
      {
        "time_stamp": "2018-03-27 09:02:42"
      },
      {
        "time_stamp": "2018-03-27 09:03:00"
      },
      {
        "time_stamp": "2018-03-27 09:03:11"
      },
      {
        "time_stamp": "2018-03-27 09:03:29"
      },
      {
        "time_stamp": "2018-03-27 09:03:37"
      },
      {
        "time_stamp": "2018-03-27 09:03:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 08:56:49",
    "text": "something like `if request.query_dict.industry == \"1\"`"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:57:51",
    "text": "Great that worked - thank you <@U6GNQ7JBU> really appreciate the help!"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 08:59:12",
    "text": "Is industry a multiselect column?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 08:59:39",
    "text": "no a single select"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:01:20",
    "text": "<@U6GNQ7JBU> what is the best way to get training on HubDB?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:01:30",
    "text": "do you have any courses or anything like that?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:01:47",
    "text": "still pretty new to database work - would love to get a better sense of how to use the tool"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 09:02:37",
    "text": "This would be a good idea, right now we just have <https://designers.HubSpot.com/docs/tutorials/how-to-build-dynamic-pages-with-hubdb> and <https://developers.HubSpot.com/docs/methods/hubdb/hubdb_overview>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 09:02:42",
    "text": "Having video tutorials would be good"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:03:00",
    "text": "is that something that HubSpot is putting together?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 09:03:11",
    "text": "Let me ask the team"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:03:29",
    "text": "great"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:03:37",
    "text": "thanks again for your help this morning Matt"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:03:40",
    "text": "really appreciate it"
  },
  {
    "text": "<@U6GNQ7JBU> uploaded a file: <https://HubSpotdev.slack.com/files/U6GNQ7JBU/F9WRU4B0A/-.txt|Untitled>",
    "time_stamp": "2018-03-27 09:07:05"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-03-27 09:07:24",
    "text": "<@U2LEJ045D> something like that would generalize"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 09:08:04",
    "text": "<@U6GNQ7JBU> great thank you so much"
  },
  null,
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-03-27 10:46:06",
    "text": "<@U2LEJ045D> <https://designers.HubSpot.com/docs/hubl/how-to-use-developer-info-on-cos-pages> this is a good resource for anyone that is struggling to ge the right hubl tokens on a page",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-03-27 10:56:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 10:46:31",
    "text": "thanks <@U25PYL3Q8> I’ll check it out"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-03-27 10:46:34",
    "text": "appreciate it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-03-27 10:56:17",
    "text": "related - I’ve asked this before but don’t recall an answer - anyone got a good browser extension for visualizing the tree? I have an extension for it but, I find myself finding the branch I’m looking for and having a difficult time backtracking."
  },
  null,
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-03-27 15:42:08",
    "text": "If we were to add a limit to the number of hubdb queries you can run per page, what would be a reasonable number? 5? 10?",
    "reply_count": 10,
    "reply_users_count": 7,
    "replies": [
      {
        "time_stamp": "2018-03-27 15:44:14"
      },
      {
        "time_stamp": "2018-03-27 15:44:45"
      },
      {
        "time_stamp": "2018-03-27 16:00:34"
      },
      {
        "time_stamp": "2018-03-27 16:02:04"
      },
      {
        "time_stamp": "2018-03-27 17:16:28"
      },
      {
        "time_stamp": "2018-03-28 06:36:08"
      },
      {
        "time_stamp": "2018-03-28 06:59:45"
      },
      {
        "time_stamp": "2018-03-28 07:14:16"
      },
      {
        "time_stamp": "2018-03-28 07:53:11"
      },
      {
        "time_stamp": "2018-03-28 08:38:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-03-27 15:44:14",
    "text": "10 seems more than reasonable to me. I've never had the need for more than 2 honestly. Would this limit be per table/db?"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-03-27 15:44:45",
    "text": "no, just per page render"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-03-27 16:00:34",
    "text": "I'd say 10. in some cases we're running a few for different purposes."
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-03-27 16:02:04",
    "text": "IE: hubdb query for matching items in another hubdb table for related products"
  },
  {
    "poster": {
      "poster_name": "Russ Quinn",
      "poster_handle": "russ.quinn"
    },
    "time_stamp": "2018-03-27 16:33:29",
    "text": "Hey Matt, will share an example payload for you of 1,000 records in CSV format that I'm send via the API.  Currently it is sitting for about 1 minute and then throwing me a 504 response, however the 1,000 records end up appearing in the table fine, so it's clearly received and excepted the data"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-27 17:16:28",
    "text": "10 Seems reasonable."
  },
  {
    "poster": {
      "poster_name": "Russ Quinn",
      "poster_handle": "russ.quinn"
    },
    "time_stamp": "2018-03-27 17:17:26",
    "text": "Just an update on what I've noticed this morning whilst running a few tests.\nI made some changes last night (around 9pm AEST) to resolve these performance issues which seemed to work great, although from a code perspective I couldn't explain why they made such a difference to the response.  However, this morning with the same codebase I'm now getting 504 Gateway timeout messages!\nI've knocked the payload down to 250 rows and it seems to be on the edge of working and not working with a good response time of around 1 minute.  A payload of 300 or more and it's a constant timeout returned after about 1 minute.\nHope this helps"
  }
]
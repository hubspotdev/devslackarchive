[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 05:56:13",
    "text": "because it still doesn’t seem like the right place for this I’m posting here instead of <#CFPRTEGTX|modules>\nKinda re-itterating what Loic said. This function is kinda pointless in it’s current execution for displaying posts related to say the current post on a blog.\n\nIt’s ignoring the blog ID’s that I specify and searching all blogs"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 05:57:08",
    "text": "`  {% related_blog_posts blog_ids=\"7342291608\" limit=3, tags=\"{{topic_names_string}}\" %}`\nblog_ids is supposed to limit it to looking at related posts from that blog.\nInstead I’m getting posts from a different blog alltogether showing up."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:07:15",
    "edited": {
      "time_stamp": "2019-01-31 06:08:26"
    },
    "text": "maybe `blog_ids` is expecting an array and ignores your string:thinking_face:",
    "reply_count": 12,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-31 06:08:00"
      },
      {
        "time_stamp": "2019-01-31 06:08:12"
      },
      {
        "time_stamp": "2019-01-31 06:08:32"
      },
      {
        "time_stamp": "2019-01-31 06:08:57"
      },
      {
        "time_stamp": "2019-01-31 06:09:07"
      },
      {
        "time_stamp": "2019-01-31 06:10:11"
      },
      {
        "time_stamp": "2019-01-31 06:10:57"
      },
      {
        "time_stamp": "2019-01-31 06:13:30"
      },
      {
        "time_stamp": "2019-01-31 06:13:36"
      },
      {
        "time_stamp": "2019-01-31 06:14:09"
      },
      {
        "time_stamp": "2019-01-31 06:14:42"
      },
      {
        "time_stamp": "2019-01-31 06:17:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:07:47",
    "text": "honestly, I’m not sure why related_blog_posts was done as a tag instead of as a function. not only is it returning the wrong posts, but if I don’t have any posts show I have no way to use hubl to check against it to make it show…"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:08:00",
    "text": "good theory but this is what the docs show `blog_ids=\"3241539189,3261083894\"`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:08:12",
    "text": "so it’s a string comma separated"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:08:32",
    "text": "I see"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:08:57",
    "text": "can you try anyway? :joy:"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:09:07",
    "text": "I don't trust that much `doc`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:10:11",
    "text": "kk will give it a shot"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:10:57",
    "edited": {
      "time_stamp": "2019-01-31 06:11:12"
    },
    "text": "throws an editor error when i use an array instead"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:11:32",
    "text": "if I remember right you can point to a custom macro to change the output so you can do whatever you want there?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:11:49",
    "edited": {
      "time_stamp": "2019-01-31 06:11:57"
    },
    "text": "yep: `post_formatter=\"macro_name\"`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:12:50",
    "text": "yea, already doing that but that doesn’t solve my problem when I get no posts"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:13:18",
    "text": "Basically if no posts return, I need to change what that area looks like."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:13:30",
    "text": "I said array, should have said a list"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:13:36",
    "text": "`{% set blog_ids = [\"group.id\"] %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:14:09",
    "text": "kinda what i did but the blog id i left as a number in the list I’ll try with quotes"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:14:42",
    "text": "it’s throwing errors for that as well"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:15:54",
    "text": "so the macro is not executed if there is no posts? or it maybe get `null`, `false` or `0` value?",
    "reply_count": 14,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-31 06:16:46"
      },
      {
        "time_stamp": "2019-01-31 06:16:55"
      },
      {
        "time_stamp": "2019-01-31 06:18:46"
      },
      {
        "time_stamp": "2019-01-31 06:20:46"
      },
      {
        "time_stamp": "2019-01-31 06:20:55"
      },
      {
        "time_stamp": "2019-01-31 06:21:01"
      },
      {
        "time_stamp": "2019-01-31 06:23:22"
      },
      {
        "time_stamp": "2019-01-31 06:25:58"
      },
      {
        "time_stamp": "2019-01-31 06:26:07"
      },
      {
        "time_stamp": "2019-01-31 06:27:19"
      },
      {
        "time_stamp": "2019-01-31 06:27:30"
      },
      {
        "time_stamp": "2019-01-31 06:28:59"
      },
      {
        "time_stamp": "2019-01-31 06:35:05"
      },
      {
        "time_stamp": "2019-01-31 06:42:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:16:15",
    "text": "I honestly wish at this point the related_blog_posts was just a function that returned an array of blog post IDs so I could do all the logic to display them."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:16:46",
    "text": "The macro would not show, because the macro is run for each individual post"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:16:52",
    "text": "I ask because maybe you can do something like:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:16:55",
    "edited": {
      "time_stamp": "2019-01-31 06:17:48"
    },
    "text": "if there are 0 posts it wouldn’t run the macro because there’s nothing to pass into it."
  },
  {
    "text": "",
    "time_stamp": "2019-01-31 06:16:59"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:17:16",
    "edited": {
      "time_stamp": "2019-01-31 06:17:21"
    },
    "text": "gotcha"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:18:46",
    "text": "fair enough"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:19:19",
    "edited": {
      "time_stamp": "2019-01-31 06:20:01"
    },
    "text": "but yeah, totally agree. Its okay that tag, but the function seems necessary"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:20:39",
    "edited": {
      "time_stamp": "2019-02-14 09:54:28"
    },
    "text": "I had recommended early on when they were making this - make it a function - like 10 times “it’ll be way more flexible for us on our end”. The tag to me was just like a minor bonus method of using it, but I felt it was limiting"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:20:46",
    "text": "maybe you can play saving to a var or `export_to_template`?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:20:55",
    "text": "hmm"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:21:01",
    "text": "that’s an interesting thought"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:23:22",
    "text": ":cold_sweat:  “export_to_template_context is not usable in custom modules”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:25:58",
    "text": "tried to use it anyways"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:26:07",
    "text": "it broke things"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:27:19",
    "text": ":sweat:"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:27:30",
    "text": "oh boi"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:28:59",
    "text": "of course you always run into this stuff when you have a tight deadline. I’m already behind on this project, and I was really hoping this would save me from having to manually parse through posts to create a related post functionality"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 06:35:05",
    "text": "ofc, there is inverted progression there, the shorter deadline the amount of problems increase"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 06:42:05",
    "text": "yep"
  }
]
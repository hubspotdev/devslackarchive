[
  {
    "poster": {
      "poster_name": "Ibrahim Karmadzha",
      "poster_handle": "ibrahim.karmadzha"
    },
    "time_stamp": "2020-10-30 13:04:28",
    "text": "Hey everyone, first post here. Just wondering if anyone has used the HubSpot API to pull email templates and then render them on the front end using reactjs? And does anyone have any experience using jijnjava templating engine to render templates pulled from the api",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-30 13:37:21"
      },
      {
        "time_stamp": "2020-10-30 13:42:59"
      },
      {
        "time_stamp": "2020-10-30 14:57:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-30 13:37:21",
    "text": "Interesting, does the built-in view as webpage functionality not solve your use-case?\n\nThis is what I’m referring to:\n<https://knowledge.HubSpot.com/email/create-a-web-version-of-your-marketing-email>\n\nIt would not say make it so you would render the emails within your react component, but it gives you web page versions of the emails you send."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-30 13:42:59",
    "text": "Otherwise if I’m understanding your intent correctly - to do that you want in React you would likely want to use the <https://legacydocs.HubSpot.com/docs/methods/cms_email/get-all-marketing-emails|get all marketing emails API>. Filtering so you’re only getting the information from emails you want.\n\nI think that the rendered html is not in the response since personalization tokens and HubDB data would change the results per recipient."
  },
  {
    "poster": {
      "poster_name": "Ibrahim Karmadzha",
      "poster_handle": "ibrahim.karmadzha"
    },
    "time_stamp": "2020-10-30 14:57:51",
    "text": "yes, i'm pulling the emails I need from that exact API endpoint. Now what I want to do is make those actually render on the front end of a React web app. And i have been struggling to find a way since as you mentioned the rendered HTML isn't included in the data"
  }
]
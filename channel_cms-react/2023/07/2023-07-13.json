[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:26:49",
    "text": "is it required that tailwind.config.js is located within a project? For example, if I have a folder that contains 5 projects, can I add it to the root folder and use the same config for all?",
    "reply_count": 15,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-07-13 07:29:02"
      },
      {
        "time_stamp": "2023-07-13 07:29:51"
      },
      {
        "time_stamp": "2023-07-13 07:35:26"
      },
      {
        "time_stamp": "2023-07-13 07:43:49"
      },
      {
        "time_stamp": "2023-07-13 07:45:59"
      },
      {
        "time_stamp": "2023-07-13 07:46:59"
      },
      {
        "time_stamp": "2023-07-13 07:47:55"
      },
      {
        "time_stamp": "2023-07-13 07:48:01"
      },
      {
        "time_stamp": "2023-07-13 07:48:14"
      },
      {
        "time_stamp": "2023-07-13 07:48:35"
      },
      {
        "time_stamp": "2023-07-13 07:49:30"
      },
      {
        "time_stamp": "2023-07-13 07:52:34"
      },
      {
        "time_stamp": "2023-07-13 07:52:54"
      },
      {
        "time_stamp": "2023-07-13 07:53:08"
      },
      {
        "time_stamp": "2023-07-13 07:53:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-07-13 07:29:02",
    "text": "The dev server, as well as the project build system don't know about a higher level directory - so I wouldn't expect them to be able to support that."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:29:51",
    "text": "I might need to rethink the way I have these modules. I thought separate projects would be \"neater/less complex\" but that's causing issues"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:35:26",
    "text": "safe to assume that if I load a specific module on a page that is built from a project that contains many modules — there won't be any performance hit?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-07-13 07:43:49",
    "text": "Yeah, the amount of modules in a project doesn’t make a performance difference (you’ll hit build size/time limitations before runtime performance concerns)"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-07-13 07:45:59",
    "text": "And FYI, you probably can do things with awkward imports (absolute paths? Symlinks?) to access files outside of your project folder locally. But we will only ever upload the project folder to our servers for the build, so that part will never have outside access "
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:46:59",
    "text": "ok, yea, that's interesting...hmm"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:47:55",
    "text": "at this point I'll probably only have 2 projects + my main theme"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:48:01",
    "text": "so that won't be too crazy to manage"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:48:14",
    "text": "thinking 1 project is global react modules, the other is blog specific react modules"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-07-13 07:48:35",
    "text": "You could have local scripts to copy/sync a few small things (like config) between projects?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-07-13 07:49:30",
    "edited": {
      "time_stamp": "2023-07-13 07:50:20"
    },
    "text": "You even could have a script that runs before you do a project upload that makes sure the config files are in sync and errors out (stopping the build) if the config files expected to be in sync are not\n\n(via prepending another command to <https://github.com/HubSpot/cms-js-building-block-examples/blob/0c98be63e2f2c19863c95a07e7f5cec92b0f3301/hello-world/package.json#L21>)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:52:34",
    "text": "yea, good idea, thanks"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:52:54",
    "text": "I'm trying to balance deadlines with making it maintainable. So I might have to add this to tech debt"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:53:08",
    "text": "and manually keep my tailwindconfig.js files in sync"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 07:53:37",
    "text": "I appreciate the insight though, I probably wouldn't have thought to do that"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-13 09:05:42",
    "text": "is there a performance benefit to building multiple parts of a page inside of 1 module instead of add 5 separate modules to a page? I can see an editing benefit but really only 1 part needs to be editable by internal users"
  },
  {
    "poster": {
      "poster_name": "Will Brueske",
      "poster_handle": "will.brueske"
    },
    "time_stamp": "2023-07-13 16:28:27",
    "text": "Are HubL variables available in JS modules / partials?  My specific use case being a membership portal, and I can't find documentation or figure out a way to get the currently logged in contact and make a GraphQL call to get associated objects.\n\nI can think of a workaround of binding the GraphQL call to a HubL template or module and passing that to a JS partial, but that'd be really cumbersome to work with.\n\nI suppose I could also just grab the contact id and save it somewhere in the template that'll house this, but I'd prefer a native solution within JS modules—especially when it comes to getting any other HubL variables.  I did see the \"getter\" functions, but that can only get the hub id.",
    "reply_count": 29,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-07-14 06:05:43"
      },
      {
        "time_stamp": "2023-07-14 13:47:38"
      },
      {
        "time_stamp": "2023-07-14 13:48:59"
      },
      {
        "time_stamp": "2023-07-14 13:49:34"
      },
      {
        "time_stamp": "2023-07-14 14:41:38"
      },
      {
        "time_stamp": "2023-08-23 07:56:40"
      },
      {
        "time_stamp": "2023-08-24 10:41:48"
      },
      {
        "time_stamp": "2024-07-22 05:44:10"
      },
      {
        "time_stamp": "2024-07-22 06:35:04"
      },
      {
        "time_stamp": "2024-07-22 07:26:10"
      },
      {
        "time_stamp": "2024-07-22 07:26:24"
      },
      {
        "time_stamp": "2024-07-22 07:26:35"
      },
      {
        "time_stamp": "2024-07-22 07:27:12"
      },
      {
        "time_stamp": "2024-07-22 07:27:28"
      },
      {
        "time_stamp": "2024-07-22 07:28:41"
      },
      {
        "time_stamp": "2024-07-22 07:29:48"
      },
      {
        "time_stamp": "2024-07-22 07:35:24"
      },
      {
        "time_stamp": "2024-07-22 07:36:01"
      },
      {
        "time_stamp": "2024-07-22 07:36:24"
      },
      {
        "time_stamp": "2024-07-22 08:04:22"
      },
      {
        "time_stamp": "2024-07-22 08:58:44"
      },
      {
        "time_stamp": "2024-07-22 08:59:47"
      },
      {
        "time_stamp": "2024-07-22 12:01:47"
      },
      {
        "time_stamp": "2024-07-22 12:12:33"
      },
      {
        "time_stamp": "2024-07-22 12:42:59"
      },
      {
        "time_stamp": "2024-07-25 06:25:08"
      },
      {
        "time_stamp": "2024-07-26 04:35:20"
      },
      {
        "time_stamp": "2024-07-26 05:32:57"
      },
      {
        "time_stamp": "2024-07-29 06:43:45"
      }
    ]
  }
]
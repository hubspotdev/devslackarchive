[
  {
    "poster": {
      "poster_name": "Catherine Chen",
      "poster_handle": "catherine876"
    },
    "time_stamp": "2024-12-11 07:35:57",
    "text": "<@U06TS55PT4H> Thanks for the response!  Sorry I realized I didn't explain very well - I'm not looking to get a contact's owner, but I'm trying to figure out what makes an owner, if that makes sense?  Are only users or contacts owners?  I need to assign certain contacts as owners of deals/companies using the API, and I can't figure out how to get the owner ID using the information I have on these contacts, since none of the ID fields seem to be matching up."
  },
  {
    "poster": {
      "poster_name": "Nikolay Dobrev",
      "poster_handle": "ndobrev"
    },
    "time_stamp": "2024-12-11 07:46:03",
    "edited": {
      "time_stamp": "2024-12-11 09:23:30"
    },
    "text": "Hi channel! Thanks for accepting me. I tried searching for a discussion that covers my issue, but I couldn't find one. Excuse me in advance if this has been already discussed.\n:warning:\n:warning: :warning:\nHowever, I have the following *mission:*\n\nThe workspace that I am in currently has 25,000+ contacts. Around 7,000+ of these contacts have phone numbers who use WhatsApp.\n\nMy goal is to send weekly or monthly offers to these 7,000 contacts on *WhatsApp* and then automatically update their responses in HubSpot.\n\nI am sure I am not the first case of using WhatsApp for marketing communication, therefore I was looking for a solution that is already established. WhatsApp Business API <> {3rd party tool if necessary} <> HubSpot\n\nWhat would you recommend? So far, I've eyeballed Twilio, ZenDesk and Salesforce. What are your suggestions?"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-12-11 12:55:55",
    "text": "I’m trying to sever the association between a custom object and a number of other objects it is currently associated with (contacts, companies, deals, and a couple more custom objects).\n\nThere’s only one association and it isn’t labeled. I’ve got the association type ID, object IDs, and all that. I can’t seem to figure out how to delete the unlabeled association. Can you help?",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-12-11 15:53:40"
      },
      {
        "time_stamp": "2024-12-11 16:43:17"
      },
      {
        "time_stamp": "2024-12-11 17:33:08"
      },
      {
        "time_stamp": "2024-12-11 19:15:40"
      },
      {
        "time_stamp": "2024-12-11 19:29:39"
      },
      {
        "time_stamp": "2024-12-11 19:29:48"
      },
      {
        "time_stamp": "2024-12-11 19:30:39"
      },
      {
        "time_stamp": "2024-12-11 21:18:59"
      },
      {
        "time_stamp": "2024-12-11 21:24:45"
      },
      {
        "time_stamp": "2024-12-11 21:40:16"
      },
      {
        "time_stamp": "2024-12-12 07:13:58"
      },
      {
        "time_stamp": "2024-12-12 10:29:36"
      },
      {
        "time_stamp": "2024-12-12 12:09:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zach Klein",
      "poster_handle": "zach282"
    },
    "time_stamp": "2024-12-11 15:10:06",
    "text": "Hi <@U060KHGRV3N> :wave:\nAhh I see. So \"Contacts\" and \"Owners\" are completely separate CRM object types. I recommend reviewing the <https://developers.HubSpot.com/beta-docs/guides/api/crm/owners|Owners API documentation>. \"Owners\" are effectively Users of your HubSpot Account. \"Owners\" don't necessarily always have a corresponding \"Contact\" record (based on email address as the shared identifier), but this is completely dependent on your HubSpot configuration and processes. Only \"Owners\" can be set as an \"owner\" of a HubSpot CRM record (not a \"Contact\"). I hope that's helpful :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 15:53:40",
    "text": "Have you tried the DEL method?<https://api.hubapi.com/crm/v4/objects/{objectType}/{objectId}/associations/{toObjectType}/{toObjectId}>"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-12-11 16:43:17",
    "text": "I tried that using the widget on the documentation, but the “inputs” parameters require specific record ids\n\nDo I need have inputs or will the request to that endpoint delete all associations between those objects. "
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 17:33:08",
    "text": "You need object ids"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-12-11 19:15:40",
    "text": "I’m adding the custom object ID that I’m pulling from the URL when I go to Settings &gt; (Data management) Objects &gt; Custom Objects &gt; Associations and choosing the association I want to delete.\n\nExample URL: <https://app.HubSpot.com/association-settings/portalID/?type=2-14269406&amp;selectedToObjectTypeId=0-2>\n\nI’m using 2-14269406 as the objectId and 0-2 as the toObjectId\n\nThe object types are territories and companies, respectively"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 19:29:39",
    "text": "Just to confirm, you want to remove the association entirely?"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-12-11 19:29:48",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 19:30:39",
    "text": "Ok.  I'll send something to you in a bit. Gonna test something real quick on my instance."
  },
  {
    "text": "hey all!\n\nI'm trying to create a task with a due date copied from another date field. I figured the best way to do that is to do a CCA. However, when I tried the code below it doesn't really do anything but still says \"success\":\n\n```const HubSpot = require('<@UDA553DRD>/api-client');\n\nconst createTask = async (HubSpotClient, taskBodyObject) =&gt; {    \n    const url = `/engagements/v1/engagements`;\n    HubSpotClient.apiRequest({\n        path: url,\n        method: 'POST',\n        body: taskBodyObject,\n        json: true\n    });\n};\n\nconst buildDealTaskObject = (taskOwner, timestamp, dealId, subject) =&gt; {\n    return {\n        engagement: {\n            active: true,\n            type: 'TASK',\n            ownerId: taskOwner,\n            timestamp: timestamp\n        },\n        associations: {\n            dealIds: [dealId],\n        },\n        metadata: {\n            body: subject,\n            subject: subject,\n            status: \"NOT_STARTED\",\n            forObjectType: \"DEAL\"\n        }\n    };\n}\n\n\nexports.main = async (event) =&gt; {\n   const HubSpotClient = new HubSpot.Client({\n        accessToken: process.env.firm_pospects_api_key\n    });\n  \n    const taskOwner = parseInt(event.inputFields['HubSpot_owner_id']);\n    const projectStart = parseInt(event.inputFields['start_date']);\n    const dealId = event.object.objectId;\n  \n  const dealObj = buildDealTaskObject(taskOwner,projectStart,dealId, \"task from code\");\n  \nconsole.log(dealId)\n  console.log(dealObj)\n\n  createTask(HubSpotClient,dealObj)\n\n};```\nThe console logs print just fine, so I'm thinking the dealObj variable is fine. But for some reason the createTask function I made isn't doing anything even with the given variables. I used this <https://lean-coders.at/blog/HubSpot-workflows-custom-code-zum-erstellen-von-tasks-mit-dynamischem-faelligkeitsdatum|guide> as a reference point.",
    "time_stamp": "2024-12-11 20:23:26",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-12-11 21:27:27"
      },
      {
        "time_stamp": "2024-12-11 21:27:51"
      },
      {
        "time_stamp": "2024-12-11 21:28:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 21:18:59",
    "text": "```import requests\n\nACCESS_TOKEN = \"YOUR ACCESS TOKEN\"\n\nCONTACT_ID = \"\"\nCOMPANY_ID = \"\"\n\nBASE_URL = \"<https://api.hubapi.com>\"\nENDPOINT = \"/crm/v4/associations/contacts/companies/batch/archive\"\nHEADERS = {\n    \"Authorization\": f\"Bearer {ACCESS_TOKEN}\",\n    \"Content-Type\": \"application/json\"\n}\n\n# Define the request body\nrequest_body = {\n  \"inputs\": [\n    {\n      \"from\": {\n        \"id\": CONTACT_ID\n      },\n      \"to\": [\n        {\n          \"id\": COMPANY_ID\n        }\n      ]\n    },\n  ]\n}\n\nurl = f\"{BASE_URL}{ENDPOINT}\"\n\n\nresponse = <http://requests.post|requests.post>(url, headers=HEADERS, json=request_body)\n\nif response.status_code == 204:\n    print(\"Associations successfully removed.\")\nelse:\n    print(f\"Failed to remove associations. Status Code: {response.status_code}\")\n    print(\"Response:\", response.content)```"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 21:24:45",
    "text": "Here is what I think you'll need to do.\n\n1. Make a GET request that includes ASSOCIATIONS in the response\n2. Iterate over the ASSOCIATIONS and construct an array of objects that resemble the `request_body` in the example above\nThis worked for me when I had a Company / Contact association and this removed it.\n\nTo GET objects with associations, you need to do something like this.\n\n```try:\n    api_response = client.crm.companies.basic_api.get_by_id(company_id=\"companyId\", associations=[\"contacts\",\"company\",\"custom_object\"], archived=False)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling basic_api-&gt;get_by_id: %s\\n\" % e)```"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 21:27:27",
    "text": "Is there a reason you aren't using the Node SDK?\n\n```const HubSpot = require('@HubSpot/api-client');\n\nconst HubSpotClient = new HubSpot.Client({\"accessToken\":\"YOUR_ACCESS_TOKEN\"});\n\nconst properties = {\n  \"additionalProp1\": \"string\",\n  \"additionalProp2\": \"string\",\n  \"additionalProp3\": \"string\"\n};\nconst SimplePublicObjectInputForCreate = { associations: [{\"types\":[{\"associationCategory\":\"HubSpot_DEFINED\",\"associationTypeId\":0}],\"to\":{\"id\":\"string\"}}], objectWriteTraceId: \"string\", properties };\n\ntry {\n  const apiResponse = await HubSpotClient.crm.objects.tasks.basicApi.create(SimplePublicObjectInputForCreate);\n  console.log(JSON.stringify(apiResponse, null, 2));\n} catch (e) {\n  e.message === 'HTTP request failed'\n    ? console.error(JSON.stringify(e.response, null, 2))\n    : console.error(e)\n}```"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 21:27:51",
    "text": "Your endpoint is referencing V1 endpoint which is likely deprecated."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 21:28:21",
    "text": "```curl --request POST \\\n  --url <https://api.hubapi.com/crm/v3/objects/tasks> \\\n  --header 'authorization: Bearer YOUR_ACCESS_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"associations\": [\n    {\n      \"types\": [\n        {\n          \"associationCategory\": \"HubSpot_DEFINED\",\n          \"associationTypeId\": 0\n        }\n      ],\n      \"to\": {\n        \"id\": \"string\"\n      }\n    }\n  ],\n  \"objectWriteTraceId\": \"string\",\n  \"properties\": {\n    \"additionalProp1\": \"string\",\n    \"additionalProp2\": \"string\",\n    \"additionalProp3\": \"string\"\n  }\n}'```"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-12-11 21:40:16",
    "text": "This documentation is often overlooked --&gt; <https://developers.HubSpot.com/beta-docs/guides/api/crm/associations/associations-v4>"
  },
  {
    "poster": {
      "poster_name": "Sourav Kundu",
      "poster_handle": "sourav.kundu"
    },
    "time_stamp": "2024-12-11 23:38:45",
    "text": "Hey everyone,\n\nJust following up on my previous post regarding the issue with tracking Google and Facebook leads after the recent API shift. We haven't received any feedback yet and would really appreciate your insights or suggestions on how to resolve this. Has anyone else faced similar issues or found a workaround?\n\nThanks in advance for your help!"
  }
]
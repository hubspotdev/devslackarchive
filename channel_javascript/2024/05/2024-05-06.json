[
  {
    "text": "Hello <@U04CC57CMBP>\n\nIt worked! I have added the WhatsApp number as well. On line 65 I removed the number that appeared, as I didn't want to replace the 6 with +XX, but added it to the left.\n\nAs there are numbers starting with 6, 7, 8 and 9, I made a workflow for each value.\n\nI put the complete code.\n\nThank you very much!\nRegards\n\n```const HubSpot = require('<@UDA553DRD>/api-client');\n\nexports.main = (event) =&gt; {\n  const HubSpotClient = new HubSpot.Client({\n    accessToken: process.env.ACCESS_TOKEN\n  });\n\n  // ID of the contact\n  //const id = event.object.objectId\n  \n  const id = event.inputFields['hs_object_id']\n\n  // GET the Mobile, Phone and Country Property from Contact\n  HubSpotClient.crm.contacts.basicApi.getById(id, ['mobilephone', 'phone', 'hs_whatsapp_phone_number', 'country'])\n    .then(contactPropertiesResults =&gt; {\n      // Set variables and trim any white spaces\n      //const mobile = contactPropertiesResults.body.properties.mobilephone.replace(/\\s+/g, '');\n      //const phone = contactPropertiesResults.body.properties.phone.replace(/\\s+/g, '');\n      //const country = contactPropertiesResults.body.properties.country;\n\n   const mobile = event.inputFields['mobilephone']?.replace(/\\s+/g, '') || '';\n   const phone = event.inputFields['phone']?.replace(/\\s+/g, '') ||'';\n   const whatsapp = event.inputFields['hs_whatsapp_phone_number']?.replace(/\\s+/g, '') ||'';\n   const country = event.inputFields['country'];\n\n    \n      console.log(`Found mobile=${mobile}, phone=${phone}, whatsapp=${whatsapp}, country=${country}`);\n\n      // If mobile or phone starts with a 0 and the country value is known, update contact phone numbers to the intl prefix using the formatToIntl method\n      if (mobile.startsWith('9') &amp;&amp; country) {\n        let intlMobile = formatToIntl(mobile, country);\n        HubSpotClient.crm.contacts.basicApi.update(id, {\n          properties: {\n            mobilephone: intlMobile,\n          }\n        });\n      }\n      if (phone.startsWith('9') &amp;&amp; country) {\n        let intlPhone = formatToIntl(phone, country);\n        HubSpotClient.crm.contacts.basicApi.update(id, {\n          properties: {\n            phone: intlPhone,\n          }\n        });\n      }\n      if (whatsapp.startsWith('9') &amp;&amp; country) {\n        let intlwhatsapp = formatToIntl(whatsapp, country);\n        HubSpotClient.crm.contacts.basicApi.update(id, {\n          properties: {\n            hs_whatsapp_phone_number: intlwhatsapp,\n          }\n        });\n      }\n    });\n\n  // Function takes 2 arguments - number and country. Looks up the Intl Code from\n  // the Country Codes JSON and returns a correctly formatted number.\n  const formatToIntl = (number, country) =&gt; {\n    if (country) {\n      for (let countryInfo of countryCodes) {\n        if (\n          countryInfo.name.toLowerCase().replace(/\\s+/g, '') ==\n          country.toLowerCase().replace(/\\s+/g, '')\n        ) {\n          number = number.replace('', countryInfo.dial_code)\n          console.log(`Country name=${countryInfo.name} dialCode=${countryInfo.dial_code}`);\n          console.log(`Formatted number: ${number}`);\n        }\n      }\n    } else {\n      console.log(`Country not found for number=${number} country=${country}`);\n    }\n\n    return number;\n  }\n\n  // Countries and Dial Codes Lookup JSON\n  const countryCodes = [{\n    \"name\": \"Afghanistan\",\n    \"dial_code\": \"+93\",\n    \"code\": \"AF\"\n  },\n  {\n    \"name\": \"Aland Islands\",\n    \"dial_code\": \"+358\",\n    \"code\": \"AX\"\n  },\n  {\n    \"name\": \"Albania\",\n    \"dial_code\": \"+355\",\n    \"code\": \"AL\"\n  },\n  {\n    \"name\": \"Algeria\",\n    \"dial_code\": \"+213\",\n    \"code\": \"DZ\"\n  },\n\n...\n\n  {\n    \"name\": \"Zambia\",\n    \"dial_code\": \"+260\",\n    \"code\": \"ZM\"\n  },\n  {\n    \"name\": \"Zimbabwe\",\n    \"dial_code\": \"+263\",\n    \"code\": \"ZW\"\n  }\n  ]\n\n}```\n",
    "time_stamp": "2024-05-06 09:06:54"
  },
  {
    "poster": {
      "poster_name": "Goran Ilievski",
      "poster_handle": "goran308"
    },
    "time_stamp": "2024-05-06 17:10:41",
    "text": "Well done :slightly_smiling_face:"
  }
]
[
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-06-27 05:07:38",
    "edited": {
      "time_stamp": "2018-06-27 05:07:42"
    },
    "text": "Idea: use <https://autoprefixer.github.io/> when HS minimify the CSS so we don't have to take care of it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-06-27 05:55:28",
    "text": "I agree with Gonzalo.  In a dream world, I would love it if I could write SASS/SCSS in the design manager as well.  But Autoprefixing first and foremost!"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-06-27 06:27:28",
    "text": "HS is already compiling the css file for Hubl code. How much more to compile sass?"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-06-27 07:00:35",
    "text": "I think they choose not to support scss as it obviously adds 1 more layer of complexity - and there are competing tools and they may worry Devs will go ” hey why did you implement scss and not _____”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-06-27 07:01:19",
    "text": "Also they would likely have to modify it a little because HubL is currently supported in CSS files in HubSpot"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-06-27 10:31:51",
    "text": "I get the rationale, but a dev can dream"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-06-27 13:43:52",
    "text": "*Idea*: Add a new field in CM: post selector (that can be depedent of a blog selector or something like that too):\nUse case:\nbuild a language switcher between blogs"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-06-27 13:49:03",
    "text": "Been asking for one of these for a while, especially for emails. Would be awesome to give marketers the ability to \"Select Featured Blog Post\" and have fields be prepopulated with the blog title, featured image, etc... straight from the post data"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-06-27 13:49:51",
    "text": "I too requested one of those fields a while back. hopefully they add one one day"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-06-27 13:54:31",
    "edited": {
      "time_stamp": "2018-06-27 13:55:14"
    },
    "text": "most of this kind of limitations could be solved by ourselves if we had the ability to create fields with HubL...\nBecause I can understand that having a ton of different fields won't be something cool to deal with"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-06-27 13:55:41",
    "edited": {
      "time_stamp": "2018-06-27 13:56:06"
    },
    "text": "there’s an interesting and crazy idea. though probably not performant on the back end(we can’t do the same optimizations HS can) - allow us developers to create new field types"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-06-27 13:58:25",
    "text": "I used to add custom fields on CMs (but was a pain to edit the content because those was available at template level, not CM so to edit them that wasn't organized at all :anguished:).\nI am not even thinking on new field types, just dynamic selects :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-06-27 13:58:52",
    "text": "agreed"
  }
]
[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:18:56",
    "text": "I have a few portals we plan to go all in on testing these drag n drop 2d flex columns, Who should I message to request these portals get added?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:19:11",
    "text": "derp"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:19:19",
    "text": "forgot theres an announcement thing, found the link"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 10:21:57",
    "text": "That's exciting though! I'd love to hear how it goes. I'll also plan on ungating whichever portals you submit right away."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:26:41",
    "text": "submitted"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:34:38",
    "text": "Thank you <@U8THBCFC4> I’ll let you know how things go."
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 10:34:57",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:37:08",
    "text": "say can you pin the google doc link for documentation on this?"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 10:38:53",
    "text": "ooh, good call, yeah def"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 10:39:08",
    "text": "Drag and drop pages setup guide: <https://ux.HubSpot.com/HubSpot-drag-drop-page-editing-setup-guide>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:41:09",
    "text": "first piece of minor feedback. Though would understand it  if you guys disagreed.\n\nin drag n drop templates, would be nice if there was a way to easily convert a flex column to a drag n drop region.\n(could hide it in the “more” menu in the inspector)"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 10:41:46",
    "text": "Oh totally agree. It's very much on the to do list, but there's some complexity with converting flex columns right now unfortunately :confused:"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 10:41:59",
    "text": "I'm hoping we can put in that work mid-year this year"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:42:57",
    "text": "oh I suppose someone might go “can i convert back to flex column” that would be like :rage2:"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 10:43:41",
    "text": "hahaha totally! The switching back and forth isn't ideal."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:53:24",
    "text": "I’d expect you already know these but reporting them just in-case:\n•  You can’t drag modules in the edit modules pane from a flex column to a drag n drop.\n\n•  Can’t drag items in drag n drop - I understand why wouldn’t logically make sense in a vertical listing. Though maybe when you try dragging it could show a mini version of the layout structure in there\n\n• There are 2 separate “styles” panes, and one is only accessible from the in-page editor. I understand the column styles being separated, makes sense."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 10:57:04",
    "edited": {
      "time_stamp": "2019-02-25 10:58:09"
    },
    "text": "• UX feels completely different from the way the email drag n drop editor works. - I realize they are separate things and definitely the email drag n drop serves a different purpose and needs different features.\n• Just think it may confuse marketers having 2 similar but largely different ways of doing 2D drag n drop - maybe though this is okay. it may help marketers understand the way things work in emails is different.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-25 12:52:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 11:00:34",
    "text": "<@U7SL518D6> coming in hot with the feedback! :wink:"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 11:01:14",
    "text": "I LOVE IT!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:07:09",
    "text": "idk if it was something I did in the custom module, but also I tried adding a custom module to the drag n drop region and it didn’t display in the page. It did in the edit modules pane though",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-25 12:53:10"
      },
      {
        "time_stamp": "2019-02-25 12:55:44"
      },
      {
        "time_stamp": "2019-02-25 12:55:57"
      },
      {
        "time_stamp": "2019-02-25 12:56:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:11:26",
    "edited": {
      "time_stamp": "2019-02-25 11:15:56"
    },
    "text": "also old feedback that I think is still important, and if there is a solution for it, it’s just not documented:\n\nTheres no way within a custom module to get how many columns wide or how many rows tall a module is set to be.\n\nThis is extremely important for us developers to build custom modules that will work great for these flex columns. ideally the best way to give us this is to have a  variable like `{{module.x_size}}` or `{{module.instance_width}}` something like that, then we can not only use that programmatically but we can use it to generate class names and things that help keep our modules looking good in all situations.\n\nI think too there should be a way for us to designate inside a custom module if a module is designed to be full width only(with this as the default setting) That way when editors create pages using custom modules that weren’t originally designed to be used where they only take up say 50% of the flex column, that module will only show up as a fw block, and you couldn’t place stuff to it’s sides"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:18:22",
    "text": "without those 2 developer oriented things implemented you’ll likely see slow adoption as from our end, yes we want to enable marketers but we don’t want to give them stuff they can screw up, because they then come back at us “why does this look so bad”  “well because you’re squishing a parallax banner into a 1 out of 12 column space, and that’s just dumb”",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-25 19:26:35"
      },
      {
        "time_stamp": "2019-02-25 19:32:00"
      },
      {
        "time_stamp": "2019-02-25 19:37:11"
      },
      {
        "time_stamp": "2019-02-25 19:55:49"
      },
      {
        "time_stamp": "2019-02-25 19:56:51"
      },
      {
        "time_stamp": "2019-02-25 19:59:04"
      },
      {
        "time_stamp": "2019-02-25 20:03:54"
      },
      {
        "time_stamp": "2019-02-25 20:04:26"
      },
      {
        "time_stamp": "2019-02-25 20:05:05"
      },
      {
        "time_stamp": "2019-02-25 20:06:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:19:13",
    "edited": {
      "time_stamp": "2019-02-25 11:19:44"
    },
    "text": "building on the FW toggle thing maybe instead of a toggle it should be a min-max range."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:19:28",
    "text": "with the minimum and max by default being set to 12 columns wide"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:21:04",
    "text": "that way us devs can force page editor users to only display the modules at sizes it was meant to be displayed at.\n\nfor example a slider with text overlaying the slides, would look horrendous at 2 of 12 columns wide. because the text would wrap or get cut off funky."
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 12:52:13",
    "text": "Very much agreed here. We're actually working on getting email over to our drag and drop platform, so it should feel much more similar later this year."
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 12:53:10",
    "text": "any chance you have a link to that template/page?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:55:44",
    "text": "I removed the custom module to not confuse the marketing peeps who are trying to learn the drag n drop editor.\n\nI’ve added the module back and it appears to be visually displaying now, so if you made any changes it appears it worked."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:55:57",
    "text": "DMing the page just in case"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 12:56:18",
    "text": "thanks!"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2019-02-25 14:39:36",
    "text": "Both of those suggestions make a lot of sense and we've actually talked about a few different flavors of things like that. I'll bring that up this week to see if we can't figure something out."
  },
  {
    "text": "Digging into this a bit more, I want to clarify the behavior you are looking for when there are nested groups/rows. Because just like D&amp;D templates in the design manager, the 12 column grid of the page D&amp;D grid “resets” inside of every nested module group/column.\n\nIt is safe for us to assume that the “full width” request the module  can only fit in 12 columns wide _at the top level_, right? And that it is _not_ OK to nest a “full width” module instead column/module group that is only 3 units wide at the top-level?",
    "time_stamp": "2019-02-25 19:26:35"
  },
  {
    "text": "And speaking of specifying a min-max column width range, this gets a bit more complicated with nesting. For example, if you had a custom module that required &gt;= 4 columns wide, would bit be OK to be placed here?",
    "time_stamp": "2019-02-25 19:32:00"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 19:37:11",
    "text": "Your first message you are correct about FW modules. The nesting functionality actually potentially makes this way more complicated because idk what should really be returned for the size of nested modules.\n\nAs for your second message yes it would be okay, but ironically it wouldnt be if the parent groups were not FW"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2019-02-25 19:55:49",
    "text": "Got it, :+1:."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 19:56:51",
    "text": "This might be unorthodox but maybe an okay solution"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 19:59:04",
    "edited": {
      "time_stamp": "2019-02-25 20:02:15"
    },
    "text": "Maybe we specify percent widths as min and max and a percent is available to us as a module variable to assign classes/styles based on"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2019-02-25 20:03:54",
    "edited": {
      "time_stamp": "2019-02-25 20:04:03"
    },
    "text": "Maybe that is better, especially if/when there are grids that are not based off of 12 columns (e.g. email D&amp;D’s grid only has 3 or 4 columns wide) . But I could also see %-ages being a bit misleading because they are not necessarily the % width of the page, just the percent of the grids width…\n\nNonetheless, sounds like there definitely is some pain/need/utility here, but it is unclear what exactly the right way to present it is."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 20:04:26",
    "text": "Agreed"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 20:05:05",
    "text": "If only element queries were a browser accepted standard that would completely solve the issue"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2019-02-25 20:06:04",
    "text": "Yeah, we’ve unfortunately got some time to wait for that.\n\nBut keep the feedback coming :sweat_smile:"
  }
]
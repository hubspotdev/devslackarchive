[
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-14 07:34:04",
    "text": "```{{ variable | pprint }}```"
  },
  {
    "poster": {
      "poster_name": "Gopal Chand",
      "poster_handle": "gopal.chand"
    },
    "time_stamp": "2021-05-14 08:32:22",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "Gopal Chand",
      "poster_handle": "gopal.chand"
    },
    "time_stamp": "2021-05-14 09:53:02",
    "text": "I am new to HubSpot. Please suggest me how to create header and footer files for my <https://thejuicycrab.net/order-page>."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-05-14 09:54:04",
    "text": "you could build partials and include them into the base template"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-14 09:58:47",
    "text": "<@U020JQLFQ0P> just adding to the awesome answer <@U38EZFVFE> gave - specifically you’d want to use a <https://developers.HubSpot.com/docs/cms/building-blocks/global-content#global-partials-vs-global-modules|global partial> for your Header and footer.",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-05-17 04:44:41"
      },
      {
        "time_stamp": "2021-05-17 05:45:15"
      },
      {
        "time_stamp": "2021-05-17 06:49:32"
      },
      {
        "time_stamp": "2021-05-17 06:51:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gopal Chand",
      "poster_handle": "gopal.chand"
    },
    "time_stamp": "2021-05-14 10:04:59",
    "text": "How to create these partial templates",
    "reply_count": 14,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-05-14 10:07:18"
      },
      {
        "time_stamp": "2021-05-14 11:04:01"
      },
      {
        "time_stamp": "2021-05-14 11:13:11"
      },
      {
        "time_stamp": "2021-05-14 11:38:24"
      },
      {
        "time_stamp": "2021-05-17 04:47:21"
      },
      {
        "time_stamp": "2021-05-17 07:09:43"
      },
      {
        "time_stamp": "2021-05-17 07:10:29"
      },
      {
        "time_stamp": "2021-05-17 07:11:06"
      },
      {
        "time_stamp": "2021-05-17 07:14:41"
      },
      {
        "time_stamp": "2021-05-17 07:27:28"
      },
      {
        "time_stamp": "2021-05-17 21:30:02"
      },
      {
        "time_stamp": "2021-05-18 05:31:09"
      },
      {
        "time_stamp": "2021-05-18 05:31:30"
      },
      {
        "time_stamp": "2021-05-18 07:14:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-14 10:07:18",
    "edited": {
      "time_stamp": "2021-05-14 10:07:47"
    },
    "text": "There are examples on the page linked above.\n\nI also recommend checking out our <https://developers.HubSpot.com/docs/cms/building-blocks/themes/HubSpot-cms-boilerplate|Theme boilerplate> because we have examples for how to build almost every part of a website there:\nHere’s an example of a header:\n<https://github.com/HubSpot/cms-theme-boilerplate/blob/main/src/templates/partials/header.html>"
  },
  {
    "poster": {
      "poster_name": "Gopal Chand",
      "poster_handle": "gopal.chand"
    },
    "time_stamp": "2021-05-14 11:04:01",
    "text": "Thanks. So in which directories theses global templates needs to create. Can we need to create a theme or any parent directory."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-14 11:13:11",
    "text": "Well you should be creating a theme so all of your templates and modules play well together.\n\nYou define the directories you want to organize them into. How you organize your files in a theme is up to you. We show you what weve found to be the best practice in the boilerplate but you dont have to follow that exact hierarchy."
  },
  {
    "poster": {
      "poster_name": "Gopal Chand",
      "poster_handle": "gopal.chand"
    },
    "time_stamp": "2021-05-14 11:38:24",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "Gopal Chand",
      "poster_handle": "gopal.chand"
    },
    "time_stamp": "2021-05-14 12:08:16",
    "text": "Can we use jQuery in Hubl?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-14 12:10:30"
      },
      {
        "time_stamp": "2021-05-14 12:13:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-14 12:10:30",
    "text": "What is it you’re trying to achieve?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-05-14 12:13:53",
    "text": "HubL is a server side language. Think of it like PHP or Shopify’s Liquid templating language.\n\njQuery is a JavaScript library, meaning it’s client side.\n\nYou can pass variables from HubL to the client side, but you can’t really pass variables back to HubL because doing so would require reloading the page. (you could pass these values through query params but that’s a little different)"
  }
]
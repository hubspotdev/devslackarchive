[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-11-21 11:40:58",
    "text": "what happens when you don’t use a relative path and instead use:\n`{{ require_css('/a/direct/path/to/child.css) }}` ?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-11-21 11:41:30",
    "edited": {
      "time_stamp": "2023-11-21 11:42:02"
    },
    "text": "It’s been 3 years and this still is a bug (Global modules with locked fields (`\"locked\": true,`) are still showing in the global editor)\n<https://HubSpotdev.slack.com/archives/CSFGKSHT7/p1596570813002900>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-11-21 14:39:59"
      }
    ]
  },
  {
    "text": "Still nothing",
    "time_stamp": "2023-11-21 12:25:51"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-11-21 12:41:35",
    "text": "have you used get_asset_url()? The get_public_template_url() is old? If that doesn’t work feel free to DM me screenshots of your setup. I’d be happy to help"
  },
  {
    "poster": {
      "poster_name": "Thomas Swisher",
      "poster_handle": "thomas766"
    },
    "time_stamp": "2023-11-21 12:47:25",
    "text": "Great thanks. Headed to a meeting will do it once i get back."
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2023-11-21 14:39:59",
    "text": "That's a classic"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2023-11-21 16:17:33",
    "text": "Hey, all. I'm curious how you would handle a situation where an organization has multiple divisions where you'd need different global styles and global header/footer/nav. My first thought was a child theme for each division, but the organization has more than 10 and we'd hit the child theme limit.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-11-21 16:20:19"
      },
      {
        "time_stamp": "2023-11-21 16:34:08"
      },
      {
        "time_stamp": "2023-11-21 17:00:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2023-11-21 16:20:19",
    "edited": {
      "time_stamp": "2023-11-21 16:28:06"
    },
    "text": "Hi Tony. I had to do something similar and instead created a folder outside of the theme for shared assets like modules. Then create a theme for each org that pulls in those modules in your page templates. And org specific modules would go in the theme module folder. So no child themes instead create a boilerplate of sorts you can clone and maintain across all themes. Not perfect but it works and also decreases risk of breaking a bunch of sites at once."
  },
  {
    "poster": {
      "poster_name": "Thomas Swisher",
      "poster_handle": "thomas766"
    },
    "time_stamp": "2023-11-21 16:22:43",
    "edited": {
      "time_stamp": "2023-11-21 16:23:09"
    },
    "text": "<@U3T21PDBK> Great, that worked, thank you! Question: I’m building a custom landing page (all they have are landing pages) using Figma. Right now, it is all custom modules from the header to the footer, and all the CSS is in each module because it was the fastest to build from Figma since it was all compartmentalized to each section. Would it be best practice to gravitate it to the child so I do not have to put important things on things if I then use the child sometimes?"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2023-11-21 16:34:08",
    "text": "That seems like a good solution. Thanks for the idea, <@UG7S8J18D>!"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2023-11-21 17:00:15",
    "text": "You're welcome!"
  }
]
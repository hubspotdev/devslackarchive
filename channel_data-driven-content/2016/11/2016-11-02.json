[
  null,
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2016-11-02 13:32:06",
    "text": "<@U23602KDF>: can you add HubDB to my portal please? I do qualify :) ID: 1657909"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2016-11-02 15:21:00",
    "text": "Seems that HubDB is down. Can anyone provide some insight?"
  },
  {
    "poster": {
      "poster_name": "Jennifer Burner",
      "poster_handle": "jburn"
    },
    "time_stamp": "2016-11-02 15:33:07",
    "text": "hi <@U25C65C3S> itâ€™s loading for me, can you ping me directly with the link"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2016-11-02 15:46:33",
    "text": "there's currently a problem with validating templates that include hubdb functions. Existing code will work, but you can't update code. We're working on a fix."
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2016-11-02 15:46:59",
    "text": "<@U22PU4G4A> <@U22PJPGK0> - Anyone have any luck getting Advanced URL origins to redirect to page URLs that contain database info? Dynamically generated URLs for DB content? We are referencing the article <https://knowledge.HubSpot.com/articles/KCS_Article/COS-General/How-do-I-set-up-a-flexible-pattern-URL-mapping> but there is nothing about HubDB is there?"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2016-11-02 15:48:54",
    "text": "you could redirect urls to a hubdb page that includes a query string. your page can read the query string and call hubdb with the parameters"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2016-11-02 15:48:56",
    "text": "<@U26CZR9MW> we've been doing it with the query_dict"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2016-11-02 15:49:14",
    "text": "Once HubDB is back up and running I'll be happy to send a link to a working example"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2016-11-02 15:51:25",
    "text": "<@U22PJPGK0> and <@U25C65C3S> thanks for the help and insight. we weren't sure if there was a COS setting for this somewhere in the configuration of the site. examples are appreciated :wink:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-11-02 15:55:49",
    "text": "<@U26CZR9MW>  here is a sample of what i've done"
  },
  {
    "text": "<@U25C65C3S|remingtonbegg> uploaded a file: <https://HubSpotdev.slack.com/files/remingtonbegg/F2XVALD38/-.txt|Untitled>",
    "time_stamp": "2016-11-02 15:56:15"
  },
  {
    "text": "<@U25PYL3Q8|nickdeckerdevs> uploaded a file: <https://HubSpotdev.slack.com/files/nickdeckerdevs/F2Y03S469/-.html|Untitled> and commented: we are taking the url and populating the query",
    "time_stamp": "2016-11-02 15:57:03"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-11-02 15:58:05",
    "text": "so on our url if it is ?search=true&amp;fname=somethign then it will set the query because of search =true"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-11-02 15:58:32",
    "text": "and we are building it up as we go so that all options are mandatory"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2016-11-02 17:33:33",
    "text": "<@U22PJPGK0> any updates on the HubDB fixes? trying to save pages and update code :wink:"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2016-11-02 18:50:49",
    "text": "sorry, had to get kids to bed. :slightly_smiling_face: Should be all good now"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2016-11-02 18:56:10",
    "text": "Thank you!"
  }
]
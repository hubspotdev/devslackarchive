[
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-12-02 12:46:53",
    "text": "<@U26B530N6> you know what would be absolutely amazing to add to the VS Code extension..."
  },
  {
    "text": "",
    "time_stamp": "2020-12-02 12:46:55"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-12-02 12:48:08",
    "text": "The ability to right click on a file and have \"Fetch from remote\"... I still find myself using the UI to create fields and having to delete my local file and then type out a longish fetch command in the terminal many times in a day gets tiring",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-12-02 13:02:20"
      },
      {
        "time_stamp": "2020-12-02 13:05:22"
      },
      {
        "time_stamp": "2020-12-02 13:05:46"
      },
      {
        "time_stamp": "2020-12-02 13:11:34"
      },
      {
        "time_stamp": "2020-12-02 18:42:38"
      },
      {
        "time_stamp": "2020-12-03 06:40:46"
      },
      {
        "time_stamp": "2020-12-03 06:42:06"
      },
      {
        "time_stamp": "2020-12-03 06:42:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2020-12-02 13:02:20",
    "text": "I like this idea. Integrating the CLI has been on our minds but I’m not sure we have a clear path forward yet."
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2020-12-02 13:05:22",
    "text": "When it comes to fetching I think we need to figure out a way to determine which folder matches up with the root of your project"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2020-12-02 13:05:46",
    "text": "So accidentally fetching an asset with the same name doesn’t happen"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2020-12-02 13:11:34",
    "text": "FYI, filed an issue for this in GH <https://github.com/HubSpot/HubSpot-cms-vscode/issues/94>"
  },
  {
    "poster": {
      "poster_name": "Andrej Prazenica",
      "poster_handle": "prazenica"
    },
    "time_stamp": "2020-12-02 14:13:04",
    "text": "Hi all,\nI’m looking for the possibility of updating hs watch task.\nI would like to:\n• compile less files\n• minify images\n• update the template\n• upload files\n• etc…\nIs it possible to update it this way?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-12-02 14:16:56"
      },
      {
        "time_stamp": "2020-12-02 14:31:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrej Prazenica",
      "poster_handle": "prazenica"
    },
    "time_stamp": "2020-12-02 14:16:56",
    "text": "Or is it possible to use gulp/grunt for this? :slightly_smiling_face: Even for uploading files to sandbox"
  },
  {
    "text": "Does anyone actually do local development for HubSpot? Writing the fields for modules seems like a nightmare.\n\nI just end up using the IDE and pulling the changes down to local and then pushing to git which Continuously Deploys to the production account. Am I missing something? Are people actually writing miles of finicky nested JSON like this manually?",
    "time_stamp": "2020-12-02 14:27:49",
    "edited": {
      "time_stamp": "2020-12-02 14:28:17"
    },
    "reply_count": 11,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2020-12-02 14:32:06"
      },
      {
        "time_stamp": "2020-12-02 14:36:07"
      },
      {
        "time_stamp": "2020-12-02 14:36:41"
      },
      {
        "time_stamp": "2020-12-02 14:36:59"
      },
      {
        "time_stamp": "2020-12-02 14:37:31"
      },
      {
        "time_stamp": "2020-12-02 14:40:44"
      },
      {
        "time_stamp": "2020-12-02 14:41:11"
      },
      {
        "time_stamp": "2020-12-02 16:35:27"
      },
      {
        "time_stamp": "2020-12-06 14:32:09"
      },
      {
        "time_stamp": "2020-12-18 03:25:20"
      },
      {
        "time_stamp": "2020-12-18 03:26:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alex Wilkinson",
      "poster_handle": "alex.wilkinson"
    },
    "time_stamp": "2020-12-02 14:28:39",
    "edited": {
      "time_stamp": "2020-12-02 14:29:37"
    },
    "text": "The online IDE is honestly not too shabby, the only feature I really wish it had is the ability to format code, which is part of the reason why I switched to the local workflow.\n\nHowever the local workflow seems to be lacking tooling that can properly format HTML + Hubl files anyway… at least at first glance. Anyone got a solution for formatting HTML + Hubl in VS code?"
  },
  {
    "poster": {
      "poster_name": "Alex Wilkinson",
      "poster_handle": "alex.wilkinson"
    },
    "time_stamp": "2020-12-02 14:31:48",
    "edited": {
      "time_stamp": "2020-12-02 14:32:15"
    },
    "text": "Hmm, might have to make some sort of “pre-compiler” script that spits everything out into a final folder that triggers an HS upload or whatnot."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-12-02 14:32:06",
    "text": "It’s a little unwieldy at first, but not impossible to do.  I’ll go back to the IDE for more complex nested stuff, but otherwise, a few handy snippets make it not the worst"
  },
  {
    "poster": {
      "poster_name": "Alex Wilkinson",
      "poster_handle": "alex.wilkinson"
    },
    "time_stamp": "2020-12-02 14:36:07",
    "text": "Yeah, agree, just curious if I was missing something because I was just reading people were working directly in it all the time and I was thinking without some amazing trickery that would be much slower than using the online IDE and copying it down locally."
  },
  {
    "poster": {
      "poster_name": "Alex Wilkinson",
      "poster_handle": "alex.wilkinson"
    },
    "time_stamp": "2020-12-02 14:36:41",
    "text": "I’ve got half a mind to create a tool that generates this JSON with a simple “add field” interface similar to how the IDE works."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-12-02 14:36:59",
    "text": "It’s nice that it’s open to the user to do either way really."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-12-02 14:37:31",
    "text": "If it was JSON only, that would be an annoying barrier to entry"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-12-02 14:40:44",
    "edited": {
      "time_stamp": "2020-12-02 14:43:54"
    },
    "text": "<@U01EDM4EJJY> are you using the HubL Language extension? Helps a lot having all the field/groups available as snippets and tabbing between params. I still use the cloud IDE sometimes, but only when I need to deal with either a lot of nesting or certain default content needs."
  },
  {
    "poster": {
      "poster_name": "Alex Wilkinson",
      "poster_handle": "alex.wilkinson"
    },
    "time_stamp": "2020-12-02 14:41:11",
    "text": "I’ve heard tell of it, going to try it out. I didn’t realize it helped parse/navigate the data as well, that might be the key."
  },
  {
    "poster": {
      "poster_name": "Alex Wilkinson",
      "poster_handle": "alex.wilkinson"
    },
    "time_stamp": "2020-12-02 14:54:49",
    "edited": {
      "time_stamp": "2020-12-02 14:55:19"
    },
    "text": "In a base HTML file that extends out to templates I have\n```    {{ require_css(get_asset_url('../../css/CompanyStyling.css')) }} {{```\nwhich works well at applying that style to all templates - similar to how setting a domain css style sheet works.\n\nHowever, when you preview a module in the online HubSpot IDE while working on it, that style sheet is not applied.\n\nIs there any workaround for that? The solutions I know of:\n\nA) Use a domain style sheet but then I’m pretty sure that CSS will get loaded twice. I think domain styles only work for HubSpot CMS enterprise level as well.\n\nB) Attach the CSS style sheet to the module directly while working on it, but then you have to remember to add/remove it all the time.\n\nAm I missing a simple solution that solves this issue?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-12-02 15:03:57"
      },
      {
        "time_stamp": "2020-12-02 15:06:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-12-02 15:03:57",
    "text": "I'd just apply the module to a template, then preview the template as you style the module instead of using the module preview."
  },
  {
    "poster": {
      "poster_name": "Alex Wilkinson",
      "poster_handle": "alex.wilkinson"
    },
    "time_stamp": "2020-12-02 15:06:51",
    "edited": {
      "time_stamp": "2020-12-02 15:06:56"
    },
    "text": "… that’s wildly intelligent, haha. Not sure why I didn’t think of that. :thinking_face:\n\nAlso I found this:\n\n```The require_css function will only load that CSS file once, regardless of how many times that same file is required by modules and templates on a particular page.```\n<https://developers.HubSpot.com/docs/cms/building-blocks/modules/files>\n\nSo it looks like even if you just attached it to the modules to preview it, it’s smart enough to only load it once anyway."
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-12-02 16:35:27",
    "text": "With the language extension its a snap. I write all my custom modules fields in json with the language extenstion. No IDE for me"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-12-02 16:39:00",
    "text": "Just wanted to provide an update. Switch over to new auth method and everything works super smooth. Thanks <@U26B530N6>"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-12-02 18:42:38",
    "text": "That’s a great idea, <@U24GZQ3GF>. I also find myself still using the UI to create fields. For fetching, I have a readme.txt file open in my editor at all times with often used commands like fetch. for example:\n\n`hs fetch --portal=XXXXXX \"Project_2020/modules/Hero.module\" \"Project_2020/src/modules/Hero.module\" --overwrite`\n\nthen i just do a quick replace on *Hero* to grab a different/new module.\n\nit saves me all that time typing out commands repeatedly."
  }
]
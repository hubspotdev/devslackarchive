[
  {
    "poster": {
      "poster_name": "Hector Kurtyanek",
      "poster_handle": "hkurtyanek"
    },
    "time_stamp": "2024-05-08 04:15:18",
    "text": "Hey, really enjoying working with UI extensions, however have noticed some quirks along the way. One being that when developing locally I can't us a return statement in my serverless functions, only a callback works in actually passing data back to the react component. However, when deploying the extension only the return statement works (very crude outline below of what I'm talking about) Wonder if anyone has come across this before or if I'm missing something? Cheers :slightly_smiling_face:\n```exports.main = async (context = {}, callback) =&gt; {\n  // Weird issue, you need to use callback when developing locally\n  // but only return works when fully deployed\n  // callback(someData);\n  return someData;\n};```",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-05-08 11:19:09"
      },
      {
        "time_stamp": "2024-05-09 02:22:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-05-08 11:17:45",
    "text": "<https://developers.cloudflare.com/browser-rendering/> <@U03BVLC2LDN>, I've been testing out Cloudflares browserless api and it's pretty awesome"
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-05-08 11:19:09",
    "text": "Hey Hector, can you update your CLI to the latest version?\n```npm i -g @HubSpot/cli@latest```"
  },
  {
    "poster": {
      "poster_name": "Bashir",
      "poster_handle": "ayo_idan"
    },
    "time_stamp": "2024-05-08 12:03:00",
    "text": "Nice! \n\nAnd let me guess, it’s free or costs a tiny token? <@U01QVR44MEY> "
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-05-08 12:03:57",
    "text": "yeah it's free for the first good amount, but then after that it's a super small cost per call"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-05-08 12:05:29",
    "text": "pricing is actually based on the CF workers model <https://developers.cloudflare.com/workers/platform/pricing/>"
  },
  {
    "text": "Pls where are you seeing this.. trying to find the page. Did you see this limit ",
    "time_stamp": "2024-05-08 12:05:38"
  },
  {
    "poster": {
      "poster_name": "Bashir",
      "poster_handle": "ayo_idan"
    },
    "time_stamp": "2024-05-08 12:06:11",
    "text": "Can work around it.. but just two at a time. Hian!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-05-08 12:06:45",
    "text": "yeah but you can have multiple runs per browser per minute"
  },
  {
    "poster": {
      "poster_name": "Bashir",
      "poster_handle": "ayo_idan"
    },
    "time_stamp": "2024-05-08 12:10:08",
    "text": "True… in the case I was initially building. I’ll need a separate browser each time… cos X number of users could be generating a PDF. So each will run in its own Lane. \n\nIt’s not a big hassle I guess… I was hoping it could be increased based on plan or by buying something extra. Depending on how much, it would be complete. "
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-05-08 12:10:34",
    "text": "100%"
  },
  {
    "text": "Hi all! Would anyone be able to provide an example of how you are opening a &lt;Panel&gt; component in a .jsx file? The example project provided by HS is written in typescript and I am struggling with implementing it in my extension card. This is the dummy code that I am using to test the Panel with:",
    "time_stamp": "2024-05-08 13:56:03",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-05-08 14:03:04"
      },
      {
        "time_stamp": "2024-05-08 14:06:05"
      },
      {
        "time_stamp": "2024-05-08 14:08:57"
      },
      {
        "time_stamp": "2024-05-08 14:11:02"
      },
      {
        "time_stamp": "2024-05-08 14:11:31"
      },
      {
        "time_stamp": "2024-05-08 14:12:07"
      },
      {
        "time_stamp": "2024-05-08 14:20:10"
      },
      {
        "time_stamp": "2024-05-09 07:06:11"
      },
      {
        "time_stamp": "2024-05-09 09:03:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-05-08 14:03:04",
    "edited": {
      "time_stamp": "2024-05-08 14:04:06"
    },
    "text": "Hey Annie, our docs have an example and more details on how to use the component. Cheers :sunny: <https://developers.HubSpot.com/docs/platform/ui-components/panel>"
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-05-08 14:06:05",
    "text": "The biggest thing to note is we require a `user input` in order to open a panel. In the callback of `onClick` on buttons/etc we pass an object that has functions you can use. Here's the example in the docs above :point_up:\n```&lt;Button onClick={(event, reactions) =&gt; { reactions.openPanel('my-panel')}}&gt;\n    Open Panel\n  &lt;/Button&gt;```\n"
  },
  {
    "text": "Hey Seth, thanks for the quick reply! I've been through that doc with a fine tooth comb today lol, I have this onClick() event set up on a button inside a table cell... my console.log statements (checking for true value for isPanelOpen) are coming back as expected but still nothing:",
    "time_stamp": "2024-05-08 14:08:57",
    "edited": {
      "time_stamp": "2024-05-08 14:10:08"
    }
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-05-08 14:11:02",
    "text": "Try your button like this\n\n```&lt;Button onClick={(__,reactions) =&gt; {handleAddItem(option.values.item), reactions.openPanel(\"edit_panel\")}```\n"
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-05-08 14:11:31",
    "text": "Yo don't need a boolean `panelOpen` state, we control the open/close state behind the scenes with these functions"
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-05-08 14:12:07",
    "edited": {
      "time_stamp": "2024-05-08 14:12:19"
    },
    "text": "so instead of\n```isPanelOpen && <Panel ...> </Panel>```\njust do\n\n```<Panel> .... </Panel>```"
  },
  {
    "poster": {
      "poster_name": "Annie Short",
      "poster_handle": "annie.short"
    },
    "time_stamp": "2024-05-08 14:20:10",
    "text": "<@U04EJHVD8FM> That worked! Thank you so much for saving the day!!"
  }
]
[
  {
    "poster": {
      "poster_name": "Mattis Rosenkranz",
      "poster_handle": "m.rosenkranz"
    },
    "time_stamp": "2024-02-21 05:38:50",
    "edited": {
      "time_stamp": "2024-02-21 05:47:55"
    },
    "text": "Hey, I am including an svg file in my main css I import in my modules that uses tailwind. Unfortunately the dev server doesn’t create a usable url for the file (“outside of Vite serving allow list”). When I import the same svg directly in a module it creates a valid url and the usage in the css also works.\n```.rich-text a {\n    @apply after:content-[url('./assets/images/link-arrow.svg')];\n}```\n```import linkArrow from '../../../assets/images/link-arrow.svg';\nimport '../../../main.css';```\nDoes anybody know whats going on?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-21 06:46:15"
      },
      {
        "time_stamp": "2024-02-21 08:26:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mattis Rosenkranz",
      "poster_handle": "m.rosenkranz"
    },
    "time_stamp": "2024-02-21 06:01:35",
    "text": "Yeah, very useful feature:ok_hand::skin-tone-2: Is it possible to pass data into the hublDataTemplate e.g. a menu id retrieved from a menu field?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-02-21 06:07:06",
    "text": "Yes, inside that Hubble template string you can access {{ <http://module.XXX|module.XXX> }} just like you could inside of a HubL tonight at module"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 06:46:15",
    "text": "I’d be curious to know as well "
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 07:12:13",
    "text": "Morning, I happened to check if my most cms-react built page can be pre-rendered and it looks like it cannot be due to something connected to my TailwindStyles.jsx partial:\n```  &amp;quot;{% js_partial      path='@projects/theme-assets-p...: 50 ms.&amp;quot;: {\n    &amp;quot;js_partial (@projects/theme-assets-project/app/components/partials/TailwindStyles.jsx): 50 ms.&amp;quot;: {\n      &amp;quot;request.geoip_city: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.geoip_organization: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.geoip_region: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.geoip_country: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.geoip_dma: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.remote_ip: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.referrer: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.cookies: 0 ms.&amp;quot;: 0,\n      &amp;quot;request.headers: 0 ms.&amp;quot;: 0\n    }\n  },```\nany idea what this might be connected to?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-21 07:13:35"
      },
      {
        "time_stamp": "2024-02-21 07:13:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-02-21 07:13:35",
    "text": "need more than this output - would you DM me the larger error context"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 07:13:54",
    "text": "sure thing"
  },
  {
    "poster": {
      "poster_name": "Alexander Filipenko",
      "poster_handle": "alex423"
    },
    "time_stamp": "2024-02-21 08:00:05",
    "text": "Hey :wave-yeti:\nI am trying to add forms into the react components.\nA solution I see is to fetch from the API, but then a proxy is needed, so an extra unneeded step since the react is within HubSpot.\nIs it possible to somehow else retrieve the forms JSON data in the react project ?",
    "reply_count": 16,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-21 08:17:12"
      },
      {
        "time_stamp": "2024-02-21 08:32:02"
      },
      {
        "time_stamp": "2024-02-21 08:43:09"
      },
      {
        "time_stamp": "2024-02-21 08:43:26"
      },
      {
        "time_stamp": "2024-02-21 08:44:07"
      },
      {
        "time_stamp": "2024-02-21 08:59:20"
      },
      {
        "time_stamp": "2024-02-21 09:23:54"
      },
      {
        "time_stamp": "2024-02-21 11:11:30"
      },
      {
        "time_stamp": "2024-02-21 11:15:18"
      },
      {
        "time_stamp": "2024-02-21 11:16:23"
      },
      {
        "time_stamp": "2024-02-21 11:16:37"
      },
      {
        "time_stamp": "2024-02-21 11:17:14"
      },
      {
        "time_stamp": "2024-02-21 11:17:30"
      },
      {
        "time_stamp": "2024-02-21 11:18:29"
      },
      {
        "time_stamp": "2024-02-21 11:19:12"
      },
      {
        "time_stamp": "2024-02-21 11:19:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2024-02-21 08:17:12",
    "text": "Do you want to send data to the CRM via HubSpot forms in React or have custom-built forms in React that would send data to the CRM?"
  },
  {
    "poster": {
      "poster_name": "Mattis Rosenkranz",
      "poster_handle": "m.rosenkranz"
    },
    "time_stamp": "2024-02-21 08:26:22",
    "edited": {
      "time_stamp": "2024-02-21 08:27:23"
    },
    "text": "Same thing if I just do this\n```.rich-text a:after {\n    content: url('./assets/images/link-arrow.svg');\n}```"
  },
  {
    "poster": {
      "poster_name": "Alexander Filipenko",
      "poster_handle": "alex423"
    },
    "time_stamp": "2024-02-21 08:32:02",
    "text": "Basically we have a HubSpot theme, and now we are adding react components into it. So the forms would be appearing on the HubSpot theme, in HubSpot. The forms are from the same account as the theme.\nWe want to customise the form fully, thus would like to receive the form as just JSON rather than embed it, as that doesn't allow much customizability."
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 08:43:09",
    "edited": {
      "time_stamp": "2024-02-21 08:43:37"
    },
    "text": "Ive faced a similar problem before, the only solution i’ve seen is either hardcoding the form, reconstructing it from the form field or building custom cms input for it and then havingn a clientside ajax call for the post"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 08:43:26",
    "text": "Don’t know what the HubSpots team recommendation for this is however"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 08:44:07",
    "text": "But they slowly are rolling out custom components that to match CMS fields so this should be added in the future"
  },
  {
    "poster": {
      "poster_name": "Alexander Filipenko",
      "poster_handle": "alex423"
    },
    "time_stamp": "2024-02-21 08:59:20",
    "text": "yeah, that's a solution, but then again, it would be preferable to let the form be editable, but fetching it every time, might slow things down :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 09:23:54",
    "text": "You’re not fetching it, its passed from the cms fields so the SSR should still be fine as it is and shouldnt affect load times"
  },
  {
    "poster": {
      "poster_name": "Alexander Filipenko",
      "poster_handle": "alex423"
    },
    "time_stamp": "2024-02-21 11:11:30",
    "text": "But if I add the form simply through HS module, it won't give me JSON data, but rather just html, do you know a way to get it as JSON without the API call for get form ?"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 11:15:18",
    "text": "I mean dont you need the end output to be HTML what is the goal here? If its just styling you can do this with css selectors "
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 11:16:23",
    "edited": {
      "time_stamp": "2024-02-21 11:16:34"
    },
    "text": "Reconstructing the form from the API is a pain, I’ve done it with a nextjs project in the past and the components to make this work were jjst full of switch statements due to the different field structures there are"
  },
  {
    "poster": {
      "poster_name": "Alexander Filipenko",
      "poster_handle": "alex423"
    },
    "time_stamp": "2024-02-21 11:16:37",
    "text": "In a perfect world yes, but we need complicated styling, which would be much easier done with a custom handler converting JSON to html"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 11:17:14",
    "text": "HubSpots boilerplate theme has a forms.css and all selectors youd ever neee for HubSpot specific forms are in there"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 11:17:30",
    "text": "This is the better approach as it will also result in unity across the board"
  },
  {
    "poster": {
      "poster_name": "Alexander Filipenko",
      "poster_handle": "alex423"
    },
    "time_stamp": "2024-02-21 11:18:29",
    "text": "I guess that does make some sense, I should look into the styling some more, maybe I can get it to render properly, because the CSS we used now to style the embded form is just pure :spaghetti:"
  },
  {
    "poster": {
      "poster_name": "Alexander Filipenko",
      "poster_handle": "alex423"
    },
    "time_stamp": "2024-02-21 11:19:12",
    "text": "thank you <@U05CAJG8D98> :thankyou:"
  },
  {
    "poster": {
      "poster_name": "Anze",
      "poster_handle": "anzekopko2002"
    },
    "time_stamp": "2024-02-21 11:19:28",
    "text": "Yea just check the boilerplate theme HubSpot has. That shluld always be a base for any website in HubSpot as of right now. The react part currently should just be used for building complex components"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-02-21 11:27:09",
    "text": "Hello :wave:\n\nWe are releasing a new feature for CMS React modules, `hublDataTemplate`  that helps connect data available in HubL to your React modules\n\nHere is documentation for this feature:\n<https://github.HubSpot.com/cms-react/reference/js-modules.html#hubldatatemplate>",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-21 11:28:26"
      },
      {
        "time_stamp": "2024-02-21 13:18:58"
      },
      {
        "time_stamp": "2024-02-21 13:26:10"
      },
      {
        "time_stamp": "2024-02-21 13:27:42"
      },
      {
        "time_stamp": "2024-02-21 13:29:45"
      },
      {
        "time_stamp": "2024-02-21 13:32:26"
      },
      {
        "time_stamp": "2024-02-21 13:36:08"
      },
      {
        "time_stamp": "2024-02-21 13:36:35"
      },
      {
        "time_stamp": "2024-09-09 07:25:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-02-21 11:28:26",
    "edited": {
      "time_stamp": "2024-02-21 11:29:03"
    },
    "text": "With the latest version of `cms-dev-server` you are able to resolve your local `hublDataTemplate` via the `/preview/module` route\n\nLet us know if you have questions on either of those features, thanks!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 13:18:58",
    "text": "<@U04DLJH3W94> can I access hublData when proxying? I'm following the github example more or less but see null for data"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 13:26:10",
    "text": "even if I just follow the documentation example and do a simple version—hublData is null (testing hslocal with /preview/module)"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-02-21 13:27:42",
    "text": "For proxying use cases, a build must be ran first, local edits won't be reflected without a new build"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 13:29:45",
    "text": "ok, good to know. what about for the <http://hslocal.net|hslocal.net> version? would I be able to preview that with data from `blog_recent_tag_posts()` ?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 13:32:26",
    "text": "and can I just build or do I have to upload? for the proxy version (I always just upload, not sure if there even is a build)"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-02-21 13:36:08",
    "text": "Yes, sorry, a new build+deploy for proxy use case\n\n\nCan you post the export you are trying?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 13:36:35",
    "text": "I'll send you a DM with the export"
  }
]
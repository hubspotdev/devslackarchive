[
  {
    "poster": {
      "poster_name": "David Essery",
      "poster_handle": "david893"
    },
    "time_stamp": "2020-10-16 07:40:13",
    "edited": {
      "time_stamp": "2020-10-16 07:43:34"
    },
    "text": "Hi Guys, I am looking at this support article <https://developers.HubSpot.com/docs/cms/building-blocks/modules/files> that says you can load an image using module_asset_url \"for images added as module linked assets\" but I can't find any documentation on how to link an image asset, CSS and JS sure, but not images. Any one done this before?\n\nSolved: I added it through the Design Manager and it added the following code to my meta.json file:\n\n```\"other_assets\" : [ {\n    \"url\" : \"<https://www.myurl.com/myfile.jpg>\",\n    \"autoload\" : false,\n    \"name\" : \"myfile.jpg\"\n  } ],```"
  },
  {
    "poster": {
      "poster_name": "Avery Wardrup",
      "poster_handle": "avery093"
    },
    "time_stamp": "2020-10-16 08:25:38",
    "text": "<@UQWGKUEN7> thank you for your response. That did not work though."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-10-16 08:55:40",
    "text": "```{% set recent_posts = blog_recent_tag_posts('default', module.category_slug , 20) %}```\nWorks fine for me - I would make sure that your formatting your slug correctly or just use the hyphonated/lowercase version of the tag youre looking for instead of the slug."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-10-16 08:57:26",
    "edited": {
      "time_stamp": "2020-10-16 08:57:37"
    },
    "text": "<@U01AZNM91B7> Maybe hit it with an `|string`  Filter if for some reason its not a string already"
  },
  {
    "poster": {
      "poster_name": "Avery Wardrup",
      "poster_handle": "avery093"
    },
    "time_stamp": "2020-10-16 09:08:54",
    "text": "<@UQWGKUEN7> that did it. While we’re in it. I am trying to pass a custom field from that is set in the blog to the loop. Here is the code from the blog template.\n`{% inline_text field=\"location\" value=\"{{ module.location }}\" %}`"
  },
  {
    "poster": {
      "poster_name": "Avery Wardrup",
      "poster_handle": "avery093"
    },
    "time_stamp": "2020-10-16 09:09:04",
    "text": "<@UQWGKUEN7> Here is the part of the loop where I am currently attempting to pull it through.\n`&lt;div class=\"recent-title\"&gt;{{ recent_post.widgets.case_study_location.body.html }}&lt;/div&gt;`"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-10-16 09:17:58",
    "text": "<@U01AZNM91B7> I think the inline text field breaks down to .body.value instead of body.html — although if you put that module on a test page or preview the page and then click on the hubpsot icon in the upper right corner &gt; developer info. It will pull up a big JSON array where you can figure out what the actual path is for that content. Or you can just do {{ recent_post.widgets.case_study_locations|pprint }} and find the rest of your path there too."
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2020-10-16 09:24:05",
    "text": "Hi <@UE70ED6JV> could you please send me a link to the page editor? it would make it easier for me to debug and figure out what's causing the issue."
  },
  {
    "poster": {
      "poster_name": "Avery Wardrup",
      "poster_handle": "avery093"
    },
    "time_stamp": "2020-10-16 09:25:11",
    "text": "<@UQWGKUEN7> That worked! You’re a sage!"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-10-16 09:48:35",
    "text": "Haha awesome! Happy to help!"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2020-10-16 10:53:02",
    "edited": {
      "time_stamp": "2020-10-16 10:53:35"
    },
    "text": "```styles='{\n\t\"background\": {\n\t\t\"background_image\": {\n\t\t\t\"src\": \"imageurl\",\n\t\t\t\"alt\": \"tile-bg\",\n\t\t\t\"width\": 2880,\n\t\t\t\"height\": 1420\n\t\t}\n\t}\n}',```"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2020-10-16 10:53:20",
    "text": "<@UG6LUDECB> try that"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2020-10-16 10:58:55",
    "edited": {
      "time_stamp": "2020-10-16 11:02:33"
    },
    "text": "Here is how you can get the correct structure <https://www.loom.com/share/7e39370f6faf47e2bc23d64f06328db1>"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-10-16 14:57:28",
    "text": "Im trying to get a basic “Or” custom regex to work in order to conditionally display a custom field on the Page editor. `(condition_1) | (condition_2)` Doesnt seem to be valid. Now im no regex wizard but this should work according to some regex sites… and when I add them individually without the “or” operator it works. Any thoughts on how to get this to roll?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-16 15:02:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stephen Karpeles",
      "poster_handle": "stephen254"
    },
    "time_stamp": "2020-10-16 15:00:32",
    "text": "Is it possible to access global variables (like colors for example) within a module's CSS?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-17 18:17:33"
      },
      {
        "time_stamp": "2020-10-17 21:47:29"
      },
      {
        "time_stamp": "2020-10-18 03:41:37"
      },
      {
        "time_stamp": "2020-10-18 13:26:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-16 15:00:45",
    "text": "no it isnt.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-16 15:02:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-16 15:00:53",
    "text": "unfortunatly"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-10-16 15:02:16",
    "text": "Figured it out. Take the spaces out around the pipe and it works"
  },
  {
    "poster": {
      "poster_name": "Stephen Karpeles",
      "poster_handle": "stephen254"
    },
    "time_stamp": "2020-10-16 15:02:29",
    "text": "Cool, okay - well thanks for the heads up! Better to at least know for sure :sunglasses:"
  }
]
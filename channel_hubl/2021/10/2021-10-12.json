[
  {
    "poster": {
      "poster_name": "Delene Khoo",
      "poster_handle": "delene"
    },
    "time_stamp": "2021-10-12 02:34:32",
    "edited": {
      "time_stamp": "2021-10-12 03:12:55"
    },
    "text": "Hey Channel, hoping to get some help with a module I created, which we are using in a confirmation-style email to our customers.\n```{% email_each list=\"deal.line_items\" item=\"line_item\"%}\n&lt;b&gt;Workshop Date and Time(s):&lt;/b&gt; {{line_item.workshop_date}} - {{line_item.start_time_s_}}&lt;br&gt;\n&lt;b&gt;Number of Workshops:&lt;/b&gt; {{line_item.quantity}} x {{line_item.delivery_method}}\n{% endemail_each %}```\nI was hoping the list would sort in order according to the line item table in the deal (we have sorted this by \"_line_item.workshop_date_\", however the order appears to be random.  Any idea on how I can get this to sort ascending by workshop date?  Thanks so much for your help",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-10-12 02:41:26"
      },
      {
        "time_stamp": "2021-10-12 03:13:10"
      },
      {
        "time_stamp": "2021-10-12 03:19:01"
      },
      {
        "time_stamp": "2021-10-12 19:28:43"
      },
      {
        "time_stamp": "2021-10-13 01:38:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2021-10-12 02:41:26",
    "text": "Hey <@U02J53TQ8MN>, you could check out the Programmable Email beta and see if it would work for your use case <https://knowledge.HubSpot.com/email/create-programmable-emails>"
  },
  {
    "poster": {
      "poster_name": "Delene Khoo",
      "poster_handle": "delene"
    },
    "time_stamp": "2021-10-12 03:13:10",
    "edited": {
      "time_stamp": "2021-10-12 03:13:24"
    },
    "text": "Thanks <@U9KA594Q3>, had a look at the Programmable Email beta and it doesn't seem to work for our use case.. any other suggestions on what I could try?  I've tried adding a sort filter to the code but still haven't had any luck\n```\n{% email_each list=\"deal.line_items\" item=\"line_item\" %}\n{% for item in line_item | sort(false, false, \"workshop_date\")%}\n&lt;b&gt;Workshop Date and Time(s):&lt;/b&gt; {{line_item.workshop_date}} - {{line_item.start_time_s_}}&lt;br&gt;\n&lt;b&gt;Number of Workshops:&lt;/b&gt; {{line_item.quantity}} x {{line_item.delivery_method}}\n{% endfor %}\n{% endemail_each %}```\n"
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2021-10-12 03:19:01",
    "text": "What doesn’t work about it for your use case? Without programable email enabled the HubL functions `sort` etc won’t be available"
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-10-12 07:23:11",
    "edited": {
      "time_stamp": "2021-10-12 07:23:28"
    },
    "text": "<@UR3UTHHEZ> Did you notice the *datetimeformat* capability of HubL:\n\n*Filter:*\n<https://developers.HubSpot.com/docs/cms/hubl/filters#datetimeformat>\n\n*Function:*\n<https://developers.HubSpot.com/docs/cms/hubl/functions#datetimeformat>"
  },
  {
    "poster": {
      "poster_name": "Tony Harris",
      "poster_handle": "anthony.harris"
    },
    "time_stamp": "2021-10-12 09:05:56",
    "edited": {
      "time_stamp": "2021-10-12 09:06:51"
    },
    "text": "Does any one know how to get the relative theme path get_asset_url dynamically?  EG... background: url(\"{{ get_asset_url('/honey-badger-theme/images/Up-Arrow.png') }}\") no-repeat;\n\n I need  -  background: url(\"{{ get_asset_url('/THIS-DYNAMIC/images/Up-Arrow.png') }}\") no-repeat;",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-10-12 11:31:48"
      },
      {
        "time_stamp": "2021-10-12 12:59:56"
      },
      {
        "time_stamp": "2021-10-13 02:02:13"
      },
      {
        "time_stamp": "2021-10-13 02:03:09"
      },
      {
        "time_stamp": "2021-10-13 02:03:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Paul Cass",
      "poster_handle": "webmaster737"
    },
    "time_stamp": "2021-10-12 11:26:44",
    "text": "<@UK9BKNBD5> Yes I had to use that to create the ISO format manually, which is fine, I just thought there might be a way to do this another way. Thanks for that though."
  },
  {
    "poster": {
      "poster_name": "Paul Cass",
      "poster_handle": "webmaster737"
    },
    "time_stamp": "2021-10-12 11:31:48",
    "text": "I might be misunderstanding here but could you do something like `{{ get_asset_url( '/' + DYNAMIC + '/images/Up-Arrow.png') }}`"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-10-12 12:59:56",
    "text": "`{{ get_asset_url('./images/Up-Arrow.png') }}`\njust use a relative path"
  },
  {
    "poster": {
      "poster_name": "Delene Khoo",
      "poster_handle": "delene"
    },
    "time_stamp": "2021-10-12 19:28:43",
    "text": "Hi <@U9KA594Q3>, sorry! I completely misinterpreted what the beta allows as didn't realise the sort function would be considered advanced syntax! It hasn't worked for my code even after enabling - do you think it may be an issue with the code?"
  },
  {
    "poster": {
      "poster_name": "Delene Khoo",
      "poster_handle": "delene"
    },
    "time_stamp": "2021-10-12 19:45:08",
    "text": "Hey <@UFC6BLEAV>, stumbled upon this thread from years ago - did you manage to get your email_each list to sort using the code above? I'm trying to do something similar however after adding the sort filter in my code, my module stops displaying anything.  Can you share what worked for you?"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2021-10-12 20:48:04",
    "text": "Hey Delen, I know we resolved it but not sure if I still have access to that client portal"
  },
  {
    "text": "Trying to pull a listing of posts that have the tag of the current page someone is one (ex: /blog/tag/tagname). Can anyone help? What am I doing wrong, I've tried 100 different variations of this",
    "time_stamp": "2021-10-12 20:53:18",
    "reply_count": 28,
    "reply_users_count": 7,
    "replies": [
      {
        "time_stamp": "2021-10-13 08:20:28"
      },
      {
        "time_stamp": "2021-10-13 08:21:41"
      },
      {
        "time_stamp": "2021-10-13 08:22:00"
      },
      {
        "time_stamp": "2021-10-13 08:22:48"
      },
      {
        "time_stamp": "2021-10-13 08:22:54"
      },
      {
        "time_stamp": "2021-10-13 08:25:38"
      },
      {
        "time_stamp": "2021-10-13 08:28:18"
      },
      {
        "time_stamp": "2021-10-13 08:35:10"
      },
      {
        "time_stamp": "2021-10-13 08:41:43"
      },
      {
        "time_stamp": "2021-10-13 08:54:35"
      },
      {
        "time_stamp": "2021-10-13 08:56:52"
      },
      {
        "time_stamp": "2021-10-13 08:57:54"
      },
      {
        "time_stamp": "2021-10-13 08:59:08"
      },
      {
        "time_stamp": "2021-10-13 09:13:23"
      },
      {
        "time_stamp": "2021-10-13 09:14:08"
      },
      {
        "time_stamp": "2021-10-13 12:58:56"
      },
      {
        "time_stamp": "2021-10-14 11:53:28"
      },
      {
        "time_stamp": "2021-10-14 11:55:08"
      },
      {
        "time_stamp": "2021-10-14 12:45:19"
      },
      {
        "time_stamp": "2021-10-14 12:46:49"
      },
      {
        "time_stamp": "2021-10-14 13:01:24"
      },
      {
        "time_stamp": "2021-10-14 13:28:50"
      },
      {
        "time_stamp": "2021-10-14 15:17:59"
      },
      {
        "time_stamp": "2021-10-26 11:23:20"
      },
      {
        "time_stamp": "2021-10-26 12:14:06"
      },
      {
        "time_stamp": "2021-10-26 12:21:53"
      },
      {
        "time_stamp": "2021-10-26 12:50:46"
      },
      {
        "time_stamp": "2021-11-02 12:41:20"
      }
    ]
  }
]
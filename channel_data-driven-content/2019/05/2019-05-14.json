[
  {
    "poster": {
      "poster_name": "Yukta Nigam",
      "poster_handle": "yuktanigam"
    },
    "time_stamp": "2019-05-14 05:49:37",
    "text": "Hey<@UHFRK8DFT>\nyou can take reference from here:\n<https://developers.HubSpot.com/docs/methods/hubdb/v2/create_row> to add data dynamically to hubdb table using Api key...For that you also need third party server."
  },
  {
    "poster": {
      "poster_name": "Karan Kumar",
      "poster_handle": "karanjalendere"
    },
    "time_stamp": "2019-05-14 06:25:47",
    "text": "I did but my code is not working properly"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-14 13:11:02",
    "edited": {
      "time_stamp": "2019-05-14 13:13:29"
    },
    "text": "okay. Fun question.\n\nGiven this situation: *Table A, Table B, and Table C* have foreign ID columns referencing *Table D*. When working within a template invoking *Table D dynamic content* can you refer up to the parent tables *A, B, and C* with currently available functions? (a.k.a. Find table and row that references the foreign ID and access that rows content?)\n\nOR would I have to add multiple Foreign ID columns to *Table D* to reference the individual rows from *A, B, and C*, respectively? This backtracking of a foreign ID isn't referenced in the design docs and I'm assuming this second route is my option...",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-14 13:20:16"
      },
      {
        "time_stamp": "2019-05-14 13:21:58"
      },
      {
        "time_stamp": "2019-05-14 13:22:24"
      },
      {
        "time_stamp": "2019-05-15 09:51:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-14 13:20:16",
    "text": "great question. Your inkling is correct. If you’re on dynamic pages for table D, you’re going to have to have foreign IDs back to the other tables to get that data."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-14 13:21:58",
    "text": "If though you’re not using dynamic pages, and coding all of the logic, you can kinda generate those inner pages however you want, and can create data objects that you can use to back-reference those other tables."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-14 13:22:24",
    "text": "I’ll DM you an example"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-05-14 14:17:28",
    "text": "Is there an OR statement in HubDB?",
    "reply_count": 11,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-05-14 14:18:48"
      },
      {
        "time_stamp": "2019-05-14 14:19:16"
      },
      {
        "time_stamp": "2019-05-14 14:19:36"
      },
      {
        "time_stamp": "2019-05-14 14:20:21"
      },
      {
        "time_stamp": "2019-05-14 14:20:45"
      },
      {
        "time_stamp": "2019-05-14 14:21:09"
      },
      {
        "time_stamp": "2019-05-14 14:21:24"
      },
      {
        "time_stamp": "2019-05-14 14:24:49"
      },
      {
        "time_stamp": "2019-05-14 14:36:22"
      },
      {
        "time_stamp": "2019-05-14 14:43:30"
      },
      {
        "time_stamp": "2019-05-14 14:44:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-05-14 14:18:05",
    "text": "i have a column with unique values and i want to pull only certain ones"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-14 14:18:48",
    "text": "Yes, within an if or unless statement you can join logic items using an 'or' or an 'and'"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-05-14 14:19:16",
    "text": "as a hubdb filter?"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-14 14:19:36",
    "text": "Are you looking for a unique column type?"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-14 14:20:21",
    "text": "or are you coding some logic to filter through items that already exist?"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-05-14 14:20:45",
    "edited": {
      "time_stamp": "2019-05-14 14:20:50"
    },
    "text": "no i have a column with say 1,2,3,4,5 values in it and i want to pull only rows with 1 and 3"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-14 14:21:09",
    "text": "okay"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-14 14:21:24",
    "text": "there are a couple of ways of achieving this depending on what you are outputting it to"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-14 14:24:49",
    "text": "you could use a query when you set up your initial loop through the DB with something like this\n```{% for rows in hubdb_table_rows(&lt;tableID&gt;, '?column_id=3?column_id=1') %}```\n\nor you can do some more traditional logic ```{% if a==1 or a==3 %} do this {% endif %}```"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-05-14 14:36:22",
    "text": "the ? isnt working :disappointed:\nproblem with the traditional is i have 1000+ records in the table"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-05-14 14:43:30",
    "text": "<@U504BHZ6K> you can use in filter and give multiple values, column_name__in=1,3"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-05-14 14:44:28",
    "text": "thats what i need thanks <@UG52C29EE>"
  }
]
[
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-08 10:29:00",
    "text": "This is maybe not possible or a strange way of thinking.\nI get HS wants us to use fewer hubDB calls(so they’re limited to 10 or whatever they are).\n\nI feel like it would be useful if we could have functions that enable filtering just like we get with the hubDB functions, but that we can run on variables that already hold that data\n`{% set job_detail_table = hubdb_table_rows(job_detail_table_id, \"orderBy=job_sector&amp;orderBy=job_title\") %}`\n\nAs an example it would be awesome if I could do something like:\n` {%set cool_jobs = filterDB(job_detail_table,\"orderBy=title&amp;level_m1__eq=1\") %}`\nOr put more clearly:\n`{% new var = filterDB(job_detail_table, \"&lt;filterquery&gt;\")%}`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-08 10:59:47",
    "text": "Why not use `selectattr`?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-08 12:04:23",
    "text": "I think my problem is I still don’t fully understand selectattr"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-10-08 12:14:33",
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-filters#selectattr>"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-10-08 12:14:45",
    "text": "me either but now i'm going to nerd out about it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-08 12:18:38",
    "text": "I think honestly it’s the documentation on it that kinda leads to the confusion.\n\nThere isn’t an example of how to use the expression test part of it.\n\n#opensourcedocs"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-08 12:20:15",
    "text": "Yeah it's not very well explained in there"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-08 12:20:46",
    "text": "It's a new feature I added recently"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-08 12:20:51",
    "text": "I can document it better"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-08 12:21:43",
    "text": "With <https://github.com/HubSpot/jinjava/pull/238> you should be able to do anything you can do through the API with `selectattr` and `rejectattr`",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-09 13:50:57"
      },
      {
        "time_stamp": "2018-10-09 14:15:15"
      },
      {
        "time_stamp": "2018-10-09 14:17:31"
      },
      {
        "time_stamp": "2018-10-09 14:18:09"
      },
      {
        "time_stamp": "2018-10-09 14:29:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-08 12:22:28",
    "text": "I think in the docs it might also be helpful to have an example  based on using it with a hubdb or something as that’s probably where most of us will use it most often."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-08 12:22:48",
    "text": "Thank you for clarifying it too Matt"
  },
  null,
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2018-10-08 14:40:20",
    "text": "anyone have a good workaround for not being able to filter on foreign keys? Didn’t realize you couldn’t do that, now I’m trying to see what my options are. Current top contender is creating a duplicate “dumb” column that I can filter on.",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-08 14:47:16"
      },
      {
        "time_stamp": "2018-10-08 14:47:30"
      },
      {
        "time_stamp": "2018-10-08 14:48:42"
      },
      {
        "time_stamp": "2018-10-08 14:49:18"
      },
      {
        "time_stamp": "2018-10-08 14:51:56"
      },
      {
        "time_stamp": "2018-10-08 14:56:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-08 14:47:16",
    "text": "You should be able to filter"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-08 14:47:30",
    "text": "Or are you trying to filter on foreign key property?"
  },
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2018-10-08 14:48:42",
    "text": "the latter"
  },
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2018-10-08 14:49:18",
    "text": "getting an error in the design manager saying “filters are not yet supported for list column type “foreign_id”"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-08 14:51:56",
    "text": "Example query?"
  },
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2018-10-08 14:56:17",
    "text": "DMed"
  },
  null,
  null,
  null
]
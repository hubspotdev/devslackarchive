[
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-03-13 08:46:39",
    "text": "<@UFC6BLEAV> how did `crm_object` work for you?"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 10:27:37",
    "text": "(Cross-posting from <#C960Q64G4|design-manager> )\nIs there a way to get the actual query string values in the template preview? It doesn’t seem like it, I’m not seeing my query string values showing up in the request.query_dict or query.",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-03-13 10:52:53"
      },
      {
        "time_stamp": "2019-03-13 11:08:14"
      },
      {
        "time_stamp": "2019-03-13 11:08:55"
      },
      {
        "time_stamp": "2019-03-13 11:27:59"
      },
      {
        "time_stamp": "2019-03-13 13:08:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-13 10:52:53",
    "text": "try content staging instead"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 11:08:14",
    "text": "Not currently an option with my company for _reasons_ (cough :moneybag: cough)"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 11:08:55",
    "text": "Though if I get enough of these cases perhaps I can start nudging them in that direction…"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 11:27:59",
    "text": "Turns out I can just edit the iframe source directly to add my query var, and that seems to be working for my purposes."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-03-13 12:17:13",
    "text": "Sorry for not replying back.\n\nIt worked a treat. Thanks for your help!\n\nSo I was able to create a custom module that:\n\n1) allows user to input URL of product\n2) system returns product image, name, price in a ‘card’ (UI) as a featured product \n3) OR user can override the dynamically generated image/name/price with their own content (say if they wanted to feature a category or something).\n\nWe use this on the blog and have seen the clients bounce rate almost halved while revenue from blog pages has doubled.\n\n(Initially we were doing this by adding image CTA’s, but that’s way too much effort per blog post).\n\nMy next challenge is learning to create a basic app. I am comfortable with JSON and cURL but not exactly sure how to build the app."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 13:08:42",
    "text": "`{{ request.query }}` or `{{ request.query_dict }}`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-03-13 13:36:12",
    "text": "We now allow macro recursion in HubL up to a max depth of 20.",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-03-13 13:39:55"
      },
      {
        "time_stamp": "2019-03-13 13:43:26"
      },
      {
        "time_stamp": "2019-03-13 13:45:13"
      },
      {
        "time_stamp": "2019-03-13 13:45:45"
      },
      {
        "time_stamp": "2019-03-14 09:00:24"
      },
      {
        "time_stamp": "2019-03-14 09:00:34"
      },
      {
        "time_stamp": "2019-03-14 09:00:42"
      },
      {
        "time_stamp": "2019-03-14 09:00:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-13 13:39:55",
    "text": "<https://www.google.com/search?q=recursion>"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-03-13 13:43:26",
    "text": "You know... i had a moment of frustration looking at the `Did you mean: recursion` thinking it was misspelled or something in the search results...\nthen i realized the meta joke google was pulling...\n:faceplam:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-13 13:45:13",
    "text": "fun-fact that little joke is actually how I actually began to understand what recursion meant"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-13 13:45:45",
    "text": "describing recursion is hard, but experiencing it makes more sense"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2019-03-13 14:56:26",
    "text": "does anyone know what I would try to loop through in hubl if I wanted to loop through all of the authors of a particular blog?"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2019-03-13 14:56:56",
    "text": "I know that the entire blog is ‘contents’ by default, but could not find anything specific to all authors"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 14:57:49",
    "edited": {
      "time_stamp": "2019-03-13 14:58:13"
    },
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#blog-recent-posts#blog-authors>"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 14:58:56",
    "text": "<@U89DUQGKD>"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2019-03-13 14:59:16",
    "text": "perfect!"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2019-03-13 14:59:23",
    "text": "that is exactly what I was looking for. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2019-03-13 14:59:46",
    "text": "I feel like I found 3 different hubl pages on the designers dub-domain, and they were all different"
  }
]
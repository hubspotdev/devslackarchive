[
  {
    "poster": {
      "poster_name": "Philippe Greban",
      "poster_handle": "pg834"
    },
    "time_stamp": "2019-11-27 03:22:23",
    "text": "Hi. I have a question but I don't know if it's the right channel to ask that. Would it be possible to use the \"smart content\" function from HubSpot on an external website?"
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-11-27 03:41:06",
    "text": "Hi, how can I access the form element when using global form events?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-11-27 08:33:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2019-11-27 05:14:39",
    "text": "This is *exactly* my workflow - thank you for the reassurance!"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-11-27 06:03:03",
    "text": "Hi everyone, when you send an email IE email template via HubSpot is there a way to have a “grab offer button” that when clicked brings up a different reply address to the current sent email address and also display a different subject line in the respond? Thanks"
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-11-27 08:30:44",
    "edited": {
      "time_stamp": "2019-11-27 08:31:53"
    },
    "text": "Hello,\nonFormSubmit in global form events returns only an empty array? Is’t a bug?\n<https://developers.HubSpot.com/global-form-events>",
    "reply_count": 19,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-11-27 08:32:17"
      },
      {
        "time_stamp": "2019-11-27 08:33:16"
      },
      {
        "time_stamp": "2019-11-27 08:34:11"
      },
      {
        "time_stamp": "2019-11-27 08:36:59"
      },
      {
        "time_stamp": "2019-11-27 09:12:32"
      },
      {
        "time_stamp": "2019-11-27 09:12:36"
      },
      {
        "time_stamp": "2019-11-27 09:13:13"
      },
      {
        "time_stamp": "2019-11-27 09:16:40"
      },
      {
        "time_stamp": "2019-11-27 09:16:51"
      },
      {
        "time_stamp": "2019-11-27 09:17:24"
      },
      {
        "time_stamp": "2019-11-27 09:18:07"
      },
      {
        "time_stamp": "2019-11-27 09:20:26"
      },
      {
        "time_stamp": "2019-11-27 09:26:41"
      },
      {
        "time_stamp": "2019-11-27 09:50:49"
      },
      {
        "time_stamp": "2019-11-27 10:03:30"
      },
      {
        "time_stamp": "2019-11-27 10:12:11"
      },
      {
        "time_stamp": "2019-11-27 10:13:02"
      },
      {
        "time_stamp": "2019-11-27 10:16:45"
      },
      {
        "time_stamp": "2019-12-18 09:19:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-11-27 08:32:17",
    "text": "What do you mean <@UECV6AFCM>? Returns where?"
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-11-27 08:33:16",
    "text": "Using this\n\n```window.addEventListener('message', event =&gt; {\n   if(event.data.type === 'hsFormCallback' &amp;&amp; event.data.eventName === 'onFormSubmit') {\n\t   console.dir(event.data)\n   }\n});```"
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-11-27 08:33:36",
    "text": "Event holds information about form's ID, which then can be used for example by document.QuerySelector (if by access the form element you mean \"DOM-wise\")."
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-11-27 08:34:11",
    "text": "and when I submit the form the data that should containing an array with the names and values of the fields submitted are empty."
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-11-27 08:36:59",
    "text": "But do you get any object at all? Are you sure you set the event listener correctly? Sorry for the silly questions, but are you also sure about the context in which both: listener and form lie? Meaning, are you 100% sure that the listener is attached to the form (and that it's been attached before the form submission)?"
  },
  {
    "text": "",
    "time_stamp": "2019-11-27 09:12:32"
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-11-27 09:12:36",
    "text": "It looks like this"
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-11-27 09:13:13",
    "text": "And the form is submitted with the data in the form but it doesn’t show up in the event."
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2019-11-27 09:16:40",
    "text": "I think you should read `event.data.data`"
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2019-11-27 09:16:51",
    "text": "`event.data` is the whole global event object"
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-11-27 09:17:24",
    "text": "Hmm, but that's *console.dir(event)*'s result, not *console.dir(event.data)*'s the result - so not exactly the code you copy/pasted above. This makes me skeptical about whether or not you attached your listener properly. Hard to say more without actually looking at the page. What's the URL of that form?"
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-11-27 09:18:07",
    "text": "<@U7NGDL8TS>, you're correct, but look: event.data.data seems to be empty too according to that screenshot."
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2019-11-27 09:20:26",
    "text": "true, Simon do you have a page where we can this happening?"
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2019-11-27 09:26:41",
    "text": "I can reproduce it on my own :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2019-11-27 09:50:49",
    "text": "Turns out that event still has a dependency on jquery like other events :disappointed:\nfor a short term fix if you include jquery on your page it'll start returning the data as documented.\nWe are working to remove the jquery dependencies on cases where we can and this is one of them."
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-11-27 10:03:30",
    "text": "<@U7NGDL8TS>, can you expand on the above. Do you mean that the event.data is populated using jQuery and that was the issue here?"
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2019-11-27 10:12:11",
    "edited": {
      "time_stamp": "2019-11-27 10:13:27"
    },
    "text": "`onFormSubmit` (the one you can add in the `forms.create({'onFormSubmit':})` context has always required jquery.\nSince these new global callbacks events are derived from those old events when we implemented the global event we kept the depenency."
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2019-11-27 10:13:02",
    "text": "Considering the the global event data array has no jquery dependency we can remove that dependency in our code and make it return the data array all the time."
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-11-27 10:16:45",
    "text": "Gotcha, good to know :slightly_smiling_face:"
  }
]
[
  null,
  null,
  null,
  {
    "text": "_OK, posting this to general because it fits in a multiple amount of areas_\n\nIs there anything, i mean *anything* that can be done about the ridiculous amount of `span` tags and `&amp;nbsp;` characters that get added into the WYSIWYG? Its starting to become a real annoyance when I have to go in clean up the code on these constantly. For example, this is inside of an email's editor. I redacted the text (for client reasons) but all the other stuff was never added. It's kinda crazy",
    "time_stamp": "2019-01-14 08:31:58",
    "reply_count": 9,
    "reply_users_count": 7,
    "replies": [
      {
        "time_stamp": "2019-01-14 08:39:42"
      },
      {
        "time_stamp": "2019-01-14 08:42:46"
      },
      {
        "time_stamp": "2019-01-14 08:42:51"
      },
      {
        "time_stamp": "2019-01-14 08:45:46"
      },
      {
        "time_stamp": "2019-01-14 08:57:37"
      },
      {
        "time_stamp": "2019-01-14 09:18:29"
      },
      {
        "time_stamp": "2019-01-14 09:18:54"
      },
      {
        "time_stamp": "2019-01-14 09:21:11"
      },
      {
        "time_stamp": "2019-01-15 02:52:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 08:39:42",
    "text": "I’d like to add that I often get text that isn’t wrapped in any tag."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 08:42:46",
    "text": "every time a span appears, an angel gets its ears"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 08:42:51",
    "text": "meh.  i can work on it"
  },
  {
    "poster": {
      "poster_name": "Patrick Eng",
      "poster_handle": "patrick404"
    },
    "time_stamp": "2019-01-14 08:45:46",
    "text": "Would also love if there was a solution to this. Sometimes get 3 or 4 span tags that have nothing in them and just show up"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-14 08:57:37",
    "text": "most recently, we got where the personalization token for the contact fell to a new line all on its own without any css or anything making it"
  },
  null,
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-01-14 09:18:29",
    "text": "I think it’s a really hard problem. Pretty much every WYSIWYG editor creates markup like this because it’s hard to figure out where the formatting begins and ends. In this case, it’s TinyMCE generating it. Draft.js output is much cleaner, but it’s much more limited in what you can do."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 09:18:54",
    "text": "i like limits :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-01-14 09:21:11",
    "edited": {
      "time_stamp": "2019-01-14 09:23:07"
    },
    "text": "Agreed. This can be a pain. It seems to be an issue with most WYSIWYG editors. I find it easier to paste my content into the Source Code window. This inserts the content as plain text. I then jump back to the RTE to format it with the appropriate tags. This seems to be quicker than stripping out all of the unnecessary tags."
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-01-14 09:47:24",
    "text": "Does anyone have any good IP location testing tools for HubSpot sites both Paid and Test portals that are free, I have TorBrowser that lets me emulate different countries but after a few refreshes it gives me an Error because all HubSpot sites are on CloudFlare network, not sure what that is all about. I have tried a few plugins on Chrome but nothing is really good. So looking for a solution to test code while in US, emulating someone from say DE, FR, IN, etc, to see if my code is running the conditionals",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-16 10:36:41"
      },
      {
        "time_stamp": "2019-01-17 09:14:36"
      },
      {
        "time_stamp": "2019-01-17 13:59:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 09:53:37",
    "text": "I would try something like NordVPN <@UF6M5BW4C>"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 09:54:17",
    "text": "There may be something out there with more servers but last time I checked they had ~50 different countries"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-01-14 09:56:14",
    "text": "<@U26DA9CQ0> so do you pay monthly for this?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-01-15 02:55:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 09:59:51",
    "text": "It’s a subscription yes"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 10:01:30",
    "text": "They have a deal right now where it’s $100 for three years"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-01-14 10:01:35",
    "text": "ah ok, yeah seeing if there is anything that would be potentially free tools to use that other developers are using"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 10:02:32",
    "text": "There are some free VPN tools but be warned, they’re almost always malicious"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-01-14 10:02:37",
    "text": "I would want to try it out before hand so I can verify it is what I want for a testing tool so I will continue to look around, its strange that TorBrowser does a weird block on CloudFlare sites"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 10:02:55",
    "text": "That whole thing about if you don’t pay for the product, you are the product. :stuck_out_tongue:",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-01-14 10:09:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 10:03:23",
    "text": "I haven’t tried any IP swap stuff on TOR before."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 10:04:26",
    "text": "You may be able to get Nord to give you a free month to try it out if you contact them :crossed_fingers:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-14 10:09:09",
    "text": "<https://gph.is/1Gq5LIT>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-14 12:53:05",
    "text": "Cross-post for visibility <https://HubSpotdev.slack.com/archives/C22PDRW72/p1547495067128900>"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-14 13:49:16",
    "text": "I would expect them to exist in the table editor"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-14 13:49:24",
    "text": "Also... This is incredible!"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-14 13:49:34",
    "text": "and very very timely for me"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 13:51:29",
    "text": "they’re talking about the mappings not that data itself. I’d think in the page like the screenshot makes sense. then you separate that from the table. and could have more flexibility out of the HubDB by attaching it to multiple pages with different meta data or something",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-14 13:53:41"
      },
      {
        "time_stamp": "2019-01-14 13:54:06"
      },
      {
        "time_stamp": "2019-01-14 13:54:13"
      },
      {
        "time_stamp": "2019-01-14 13:54:39"
      },
      {
        "time_stamp": "2019-01-14 13:55:26"
      },
      {
        "time_stamp": "2019-01-14 13:55:40"
      },
      {
        "time_stamp": "2019-01-14 13:56:15"
      },
      {
        "time_stamp": "2019-01-14 13:56:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-14 13:53:41",
    "text": "ah, ok.  I think I get it and that makes sense.  I had just assumed that there would be a new column added for page-meta similar to how we have the page path column now"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-14 13:54:06",
    "text": "Hadn't really thought about the option of using the same table on multiple dynamic pages"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 13:54:13",
    "edited": {
      "time_stamp": "2019-01-14 13:55:04"
    },
    "text": "yea the way his screenshot has it, you create a column then you can assign it to be the meta. Basically giving you control over it."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 13:54:39",
    "text": "I don’t know that using the same table for multiple pages is likely to be a common scenario but i can see some times it would come in handy"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-14 13:55:26",
    "text": "Agreed... Now to break the news to the marketer that's spent the last few days entering data into a HubDB that he can add a page-meta column"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 13:55:40",
    "text": "haha"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 13:56:15",
    "text": "well i’d hold off unless they say they’re ready for this to go live"
  },
  null,
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-14 13:56:24",
    "text": "agreed"
  },
  {
    "poster": {
      "poster_name": "Ron",
      "poster_handle": "ron"
    },
    "time_stamp": "2019-01-14 13:57:08",
    "text": "Hello"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-14 13:57:25",
    "text": "Howdy Ron!"
  },
  null,
  {
    "poster": {
      "poster_name": "Ron",
      "poster_handle": "ron"
    },
    "time_stamp": "2019-01-14 14:15:12",
    "text": "Hello <@UFCRRG2N5>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 14:20:12",
    "text": "heh",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-14 14:21:40"
      },
      {
        "time_stamp": "2019-01-14 14:22:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 14:21:40",
    "text": "look what you started lol"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 14:22:16",
    "text": "mission accomplished"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 14:54:46",
    "text": "Hey I’m working in Design Manager for the first time and having crazy caching issues — like I’ve deleted all of the css in a file, published it, and the styles are still being applied even with a hot reload. Is this a tooling thing, or what am I doing wrong?",
    "reply_count": 77,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-01-14 14:56:25"
      },
      {
        "time_stamp": "2019-01-14 15:05:37"
      },
      {
        "time_stamp": "2019-01-14 15:06:32"
      },
      {
        "time_stamp": "2019-01-14 15:06:38"
      },
      {
        "time_stamp": "2019-01-14 15:07:02"
      },
      {
        "time_stamp": "2019-01-14 15:07:24"
      },
      {
        "time_stamp": "2019-01-14 15:07:30"
      },
      {
        "time_stamp": "2019-01-14 15:09:20"
      },
      {
        "time_stamp": "2019-01-14 15:11:04"
      },
      {
        "time_stamp": "2019-01-14 15:11:23"
      },
      {
        "time_stamp": "2019-01-14 15:31:27"
      },
      {
        "time_stamp": "2019-01-14 15:31:57"
      },
      {
        "time_stamp": "2019-01-14 15:32:29"
      },
      {
        "time_stamp": "2019-01-14 15:32:45"
      },
      {
        "time_stamp": "2019-01-14 15:32:59"
      },
      {
        "time_stamp": "2019-01-14 15:33:18"
      },
      {
        "time_stamp": "2019-01-14 15:33:53"
      },
      {
        "time_stamp": "2019-01-14 15:34:23"
      },
      {
        "time_stamp": "2019-01-14 15:36:07"
      },
      {
        "time_stamp": "2019-01-14 15:36:32"
      },
      {
        "time_stamp": "2019-01-14 15:36:52"
      },
      {
        "time_stamp": "2019-01-14 15:36:56"
      },
      {
        "time_stamp": "2019-01-14 15:37:00"
      },
      {
        "time_stamp": "2019-01-14 15:37:03"
      },
      {
        "time_stamp": "2019-01-14 15:37:15"
      },
      {
        "time_stamp": "2019-01-14 15:37:40"
      },
      {
        "time_stamp": "2019-01-14 15:37:42"
      },
      {
        "time_stamp": "2019-01-14 15:38:07"
      },
      {
        "time_stamp": "2019-01-14 15:38:17"
      },
      {
        "time_stamp": "2019-01-14 15:38:23"
      },
      {
        "time_stamp": "2019-01-14 15:38:33"
      },
      {
        "time_stamp": "2019-01-14 15:38:53"
      },
      {
        "time_stamp": "2019-01-14 15:39:08"
      },
      {
        "time_stamp": "2019-01-14 15:39:14"
      },
      {
        "time_stamp": "2019-01-14 15:39:19"
      },
      {
        "time_stamp": "2019-01-14 15:39:28"
      },
      {
        "time_stamp": "2019-01-14 15:39:53"
      },
      {
        "time_stamp": "2019-01-14 15:40:00"
      },
      {
        "time_stamp": "2019-01-14 15:40:55"
      },
      {
        "time_stamp": "2019-01-14 15:41:11"
      },
      {
        "time_stamp": "2019-01-14 15:41:19"
      },
      {
        "time_stamp": "2019-01-14 15:41:33"
      },
      {
        "time_stamp": "2019-01-14 15:41:35"
      },
      {
        "time_stamp": "2019-01-14 15:41:35"
      },
      {
        "time_stamp": "2019-01-14 15:41:52"
      },
      {
        "time_stamp": "2019-01-14 15:41:59"
      },
      {
        "time_stamp": "2019-01-14 15:42:15"
      },
      {
        "time_stamp": "2019-01-14 15:42:30"
      },
      {
        "time_stamp": "2019-01-14 15:43:00"
      },
      {
        "time_stamp": "2019-01-14 15:43:12"
      },
      {
        "time_stamp": "2019-01-14 15:43:17"
      },
      {
        "time_stamp": "2019-01-14 15:43:55"
      },
      {
        "time_stamp": "2019-01-14 15:44:31"
      },
      {
        "time_stamp": "2019-01-14 15:44:40"
      },
      {
        "time_stamp": "2019-01-14 15:46:15"
      },
      {
        "time_stamp": "2019-01-14 15:48:19"
      },
      {
        "time_stamp": "2019-01-14 15:49:03"
      },
      {
        "time_stamp": "2019-01-14 15:54:08"
      },
      {
        "time_stamp": "2019-01-14 15:54:28"
      },
      {
        "time_stamp": "2019-01-14 15:55:15"
      },
      {
        "time_stamp": "2019-01-14 15:55:20"
      },
      {
        "time_stamp": "2019-01-14 15:57:13"
      },
      {
        "time_stamp": "2019-01-14 15:57:23"
      },
      {
        "time_stamp": "2019-01-14 15:58:15"
      },
      {
        "time_stamp": "2019-01-14 15:58:48"
      },
      {
        "time_stamp": "2019-01-14 16:01:28"
      },
      {
        "time_stamp": "2019-01-14 16:01:54"
      },
      {
        "time_stamp": "2019-01-14 16:02:18"
      },
      {
        "time_stamp": "2019-01-14 16:02:55"
      },
      {
        "time_stamp": "2019-01-14 16:02:59"
      },
      {
        "time_stamp": "2019-01-14 16:04:25"
      },
      {
        "time_stamp": "2019-01-14 16:04:30"
      },
      {
        "time_stamp": "2019-01-14 16:19:59"
      },
      {
        "time_stamp": "2019-01-14 16:22:14"
      },
      {
        "time_stamp": "2019-01-14 16:23:11"
      },
      {
        "time_stamp": "2019-01-14 16:27:17"
      },
      {
        "time_stamp": "2019-01-14 16:46:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 14:56:25",
    "text": "HubSpot’s cache when it comes to css and js files can be a little sticky, if you use the :chrome: <#CBBAW6Z3R|community-browser-extension> there is a feature for handling the cache\n<https://github.com/williamspiro/HubSpot-Developer-Extension/wiki/So-you're-having-HubSpot-Caching-Issues%3F>"
  },
  null,
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:05:37",
    "text": "So.. is the way most people develop really\n1. edit css\n2. click `publish changes`\n3. click `bust cache`\n4. see changes?\nThis feels like.. a lot."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:06:32",
    "text": "you don’t always need to bust the cache.\n\nBasically there are certain circumstances where the cache doesn’t auto update right away, other times it will"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:06:38",
    "text": "so basically you just use it as needed."
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:07:02",
    "text": "Got it. Is there a hot key for `publish changes`?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:07:24",
    "text": "`cmd` + `shift` + `P`"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:07:30",
    "text": "Danke"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:09:20",
    "text": "Jon needs a snippet for the spiel"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:11:04",
    "text": "haha I should create a slack bot that detects the word cache and posts my spiel"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:11:23",
    "text": ":bam: "
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:31:27",
    "text": "Any other reason a stylesheet wouldn’t be applied?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:31:57",
    "text": "well how did you link the stylesheet to the template?"
  },
  {
    "text": "",
    "time_stamp": "2019-01-14 15:32:29"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:32:45",
    "text": "and you remembered to publish?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:32:59",
    "text": "Open a preview window"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:33:18",
    "text": "Preview is open. Styles are published."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:33:53",
    "text": "Do you see it in the inspect tool"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:34:23",
    "text": "The css file"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:36:07",
    "text": "Nope"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:36:32",
    "text": "and the css file is also published?"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:36:52",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:36:56",
    "text": "Try adding a different CSS file"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:37:00",
    "text": "See if it appears"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:37:03",
    "text": "That works"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:37:15",
    "text": "okay so it’s a problem with your specific css file"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:37:40",
    "text": "Yes. But… what might that problem be?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:37:42",
    "text": "do you have an `@supports` anywhere in there"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:38:07",
    "text": "No"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:38:17",
    "text": "Remove it and readd"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:38:23",
    "text": "After a publish"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:38:33",
    "text": ":point_up_2:"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:38:53",
    "text": "Delete the css file then re-add?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:39:08",
    "text": "Remove from template"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:39:14",
    "text": "Publish template"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:39:19",
    "text": "Add the case back"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:39:28",
    "text": "Publish again"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:39:53",
    "text": "Or try adding to a different template"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:40:00",
    "text": "See if it shows up"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:40:55",
    "text": "Nothing from add, re-add"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:41:11",
    "text": "and you’ve hard refreshed the design manager tab?"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:41:19",
    "text": "Many times."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:41:33",
    "text": "I think it might be time to call in the :sprocket:"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:41:35",
    "text": "Will the css just not work if there’s an error somewhere?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:41:35",
    "text": "Try different template"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:41:52",
    "text": "Maybe corrupt file"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:41:59",
    "text": "CSS should always load. even if your css file isn’t valid"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:42:15",
    "edited": {
      "time_stamp": "2019-01-14 15:42:24"
    },
    "text": "There are cases where the minifier can mangle your css though, but the file still loads"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:42:30",
    "text": "True"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:43:00",
    "text": "Copy into new css file"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:43:12",
    "text": "And see if new file works"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:43:17",
    "text": "And call support"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:43:55",
    "text": "Not working on a new template. Going to try a new css file."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:44:31",
    "text": "something is definitely up with that css file"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:44:40",
    "text": "if it wont load on another template either"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:46:15",
    "text": "Copy paste into a new file doesn’t work either. Gonna dig through the css real fast and see if something’s really wrong."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:48:19",
    "text": "Remove all from css file and add one style. "
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:49:03",
    "text": "Granted, the file should still be referenced regardless"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:54:08",
    "text": "Ok issue found. Luckily, that file was a duplicate of a file that still worked. I’d only made a few changes. So I checked the diffs, and found it here:"
  },
  {
    "text": "",
    "time_stamp": "2019-01-14 15:54:28"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:55:15",
    "text": "It was the way I tried to comment out the bottom one that bricked it, for whatever reason."
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 15:55:20",
    "text": "So don’t do that."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:57:13",
    "text": "yea the bottom one would still inject all the code in -inside of that comment"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:57:23",
    "text": "so the problem would be if there are any comments inside of there it would break"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 15:58:15",
    "text": "Odd that it wasn't referenced at all in the head"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 15:58:48",
    "text": "yea, it must have detected the error right away - but it should have atleast thrown an errror in your code window"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 16:01:28",
    "text": "Oh but it still works without the comment"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 16:01:54",
    "text": "It’s specifically attempting to comment it that way that creates the problem"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 16:02:18",
    "text": "that’s what I’m saying"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 16:02:55",
    "text": "you are effectively commenting out  a block of css `/* entire css file here*/` problem is that css file has comments inside of it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 16:02:59",
    "text": "meaning that’s invalid css"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 16:04:25",
    "text": "Ohhhhh I see"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 16:04:30",
    "text": "Interesting"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 16:19:59",
    "text": "Reallly thank you guys for all the help."
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 16:22:14",
    "text": "What’s the best paradigm to know what to select in css?"
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-01-14 16:23:11",
    "text": "Seems like even if I add a custom class to a module, there’s a few layers of abstraction beneath it. Having trouble targeting stuff."
  },
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-14 16:27:17",
    "text": "Trial and error ;)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 16:46:22",
    "text": "That'll be $6.50.  lol just pay it forward to the community"
  },
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-01-14 18:25:08",
    "text": "<https://csstriggers.com/>",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-14 19:47:03"
      },
      {
        "time_stamp": "2019-01-14 20:50:20"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-14 19:47:03",
    "text": "Someones thinking about performance.\n\nInteresting that almost everything triggers a paint in webkit but generally webkit is pretty performant "
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Antonio Perez",
      "poster_handle": "antonio"
    },
    "time_stamp": "2019-01-14 19:50:40",
    "text": ":HeyGuys:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-01-14 20:50:20",
    "text": "it just how fast their engine is"
  },
  null,
  null
]
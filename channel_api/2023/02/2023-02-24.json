[
  {
    "poster": {
      "poster_name": "Murthy",
      "poster_handle": "murthy"
    },
    "time_stamp": "2023-02-24 02:03:26",
    "text": "HI all, we use HubSpot forms in our website. these forms use API key. We are supposed to replace these API keys with private app access key. how can I do that ? , I don't see any option to do that in HubSpot console",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-24 02:15:53"
      },
      {
        "time_stamp": "2023-02-24 04:47:05"
      },
      {
        "time_stamp": "2023-02-24 04:47:39"
      },
      {
        "time_stamp": "2023-02-24 05:12:02"
      },
      {
        "time_stamp": "2023-02-24 05:49:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-02-24 02:15:53",
    "text": "<https://developers.HubSpot.com/docs/api/migrate-an-api-key-integration-to-a-private-app>"
  },
  {
    "poster": {
      "poster_name": "prince gupta",
      "poster_handle": "k.prince"
    },
    "time_stamp": "2023-02-24 02:33:45",
    "edited": {
      "time_stamp": "2023-02-24 02:34:29"
    },
    "text": "Hi all, how can I find associationCategory and associationTypeId values for existing associations, so that I can pass these values in creating deals API. Please help me.\n`\"associations\": [`\n                    `{`\n                    `\"to\": {`\n                        `\"id\": 8851`\n                    `},`\n                    `\"types\": [`\n                        `{`\n                        `\"associationCategory\": \"HubSpot_DEFINED\",`\n                        `\"associationTypeId\": 5`\n                        `} ]`\n                    `}]`",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-02-28 21:01:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jordan Medard",
      "poster_handle": "jordan.medard"
    },
    "time_stamp": "2023-02-24 04:05:18",
    "text": "Hello. With deactivation of the API keys, does this require us to create private apps for the services that rely on those such as WordPress?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-24 06:13:50"
      },
      {
        "time_stamp": "2023-02-24 06:19:25"
      },
      {
        "time_stamp": "2023-02-24 06:20:32"
      },
      {
        "time_stamp": "2023-02-24 09:50:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 04:07:35",
    "text": "You would need to be on opteratoions strter to send the email I think"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 04:07:41",
    "text": "no pro or anything"
  },
  {
    "poster": {
      "poster_name": "Murthy",
      "poster_handle": "murthy"
    },
    "time_stamp": "2023-02-24 04:47:05",
    "edited": {
      "time_stamp": "2023-02-24 05:06:57"
    },
    "text": "HI Thanks for the info .\nI have  already created the private app and   added all required scopes.\nWe don't use the api key anywhere in the code.\nwe use HubSpot forms .\nFor each form we get a code snippet like the below\n&lt;script charset=\"utf-8\" type=\"text/javascript\" src=\"&lt;//js.hsforms.net/forms/embed/v2.js&gt;\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  hbspt.forms.create({\n    region: \"na1\",\n    portalId: \"2586902\",\n    formId: \"bc14e430-13f6-4b73-b97c-802333455e6b5\"\n  });\n&lt;/script&gt;\nWe use this in our wordpress app.\n\nWhen any user submits a form , the form gets submitted at <https://forms.hsforms.com/submissions/v3/public/submit/formsnext/multipart/{form_id}>"
  },
  {
    "poster": {
      "poster_name": "Murthy",
      "poster_handle": "murthy"
    },
    "time_stamp": "2023-02-24 04:47:39",
    "text": "I am not sure how the api Key is getting used here ."
  },
  {
    "poster": {
      "poster_name": "Bruno Decruz",
      "poster_handle": "brunodecruz.05"
    },
    "time_stamp": "2023-02-24 05:07:44",
    "text": "Does anyone knows how to if a request was made by an api key, [private app or OAuth _",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-24 06:14:28"
      },
      {
        "time_stamp": "2023-02-24 08:35:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-02-24 05:12:02",
    "edited": {
      "time_stamp": "2023-02-24 05:12:03"
    },
    "text": "It’s not getting used in your example.\nYou’re only using the `formId`.  None of this requires API/Private app."
  },
  {
    "poster": {
      "poster_name": "Aditya Naik",
      "poster_handle": "anaik"
    },
    "time_stamp": "2023-02-24 05:40:36",
    "text": "Hi Team\n\nI have a use case where i need to get content from landing pages/webpages over the API -&gt; Create a variation to the landing page over the API and the -&gt; Upload the translated content back to this newly create variation\nI looked through the APIs but looks like cms/v3/pages/landing-pages doesnt return content for pages. Is there any other API that can help me with this use case",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-24 06:26:37"
      },
      {
        "time_stamp": "2023-02-24 06:31:48"
      },
      {
        "time_stamp": "2023-02-24 06:33:37"
      },
      {
        "time_stamp": "2023-02-24 06:40:40"
      },
      {
        "time_stamp": "2023-02-24 07:04:16"
      },
      {
        "time_stamp": "2023-02-24 07:14:36"
      },
      {
        "time_stamp": "2023-02-24 07:55:35"
      },
      {
        "time_stamp": "2023-02-24 08:25:09"
      },
      {
        "time_stamp": "2023-02-24 08:26:31"
      },
      {
        "time_stamp": "2023-02-24 08:28:10"
      },
      {
        "time_stamp": "2023-02-24 18:59:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Hanna Storaker",
      "poster_handle": "hs054"
    },
    "time_stamp": "2023-02-24 05:45:58",
    "edited": {
      "time_stamp": "2023-02-24 05:47:06"
    },
    "text": "Hi! We are trying to add contact to a contact list with API. This API <https://api.hubapi.com/contacts/v1/lists>  doesn’t seem to work  - is it deprecated? And does anyone know a workaround?",
    "reply_count": 10,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-02-24 05:46:43"
      },
      {
        "time_stamp": "2023-02-24 05:47:40"
      },
      {
        "time_stamp": "2023-02-24 05:48:10"
      },
      {
        "time_stamp": "2023-02-24 05:49:04"
      },
      {
        "time_stamp": "2023-02-24 05:49:35"
      },
      {
        "time_stamp": "2023-02-24 05:51:32"
      },
      {
        "time_stamp": "2023-02-24 05:51:39"
      },
      {
        "time_stamp": "2023-02-24 05:52:45"
      },
      {
        "time_stamp": "2023-02-24 05:53:00"
      },
      {
        "time_stamp": "2023-02-24 05:53:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-02-24 05:46:43",
    "text": "<https://developers.HubSpot.com/docs/api/crm/contacts>"
  },
  {
    "poster": {
      "poster_name": "Hanna Storaker",
      "poster_handle": "hs054"
    },
    "time_stamp": "2023-02-24 05:47:40",
    "text": "But I cant find a way to add the contact to a contact list on that one? <@UBT0AHWLD>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 05:48:10",
    "text": "That endpoint that you're using Hanna is still a good way to do it, do you want to share the request you're trying to use?"
  },
  {
    "poster": {
      "poster_name": "Kim Jonsson",
      "poster_handle": "kim.jonsson89"
    },
    "time_stamp": "2023-02-24 05:48:43",
    "text": "I think I'll give up on this for now. Sadly. THanks for all your help though!"
  },
  {
    "poster": {
      "poster_name": "Hanna Storaker",
      "poster_handle": "hs054"
    },
    "time_stamp": "2023-02-24 05:49:04",
    "text": "{\n    “status”: “error”,\n    “message”: “This hapikey doesn’t exist.“,\n    “correlationId”: “9e352189-8f65-445e-840b-976fae7a5df6\"\n}\n\nWe get this response. I suspect its because its an access token we use from private app instead of API key that has been removed from HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Murthy",
      "poster_handle": "murthy"
    },
    "time_stamp": "2023-02-24 05:49:08",
    "text": "Thanks Matias."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 05:49:35",
    "text": "Yep so are you using the private app token in a header and not the url of the request"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 05:49:53",
    "text": "oh that's a bummer, well let me know if you pick it up again"
  },
  {
    "poster": {
      "poster_name": "Hanna Storaker",
      "poster_handle": "hs054"
    },
    "time_stamp": "2023-02-24 05:51:32",
    "text": "oh so we should have it as bearer token instead?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 05:51:39",
    "text": "exactly"
  },
  {
    "poster": {
      "poster_name": "Kim Jonsson",
      "poster_handle": "kim.jonsson89"
    },
    "time_stamp": "2023-02-24 05:52:20",
    "text": "Yeah I've been trying to fix this thing for years but never went deeper than I have now. It seems like it's highly complicated when it shouldn't be."
  },
  {
    "poster": {
      "poster_name": "Kim Jonsson",
      "poster_handle": "kim.jonsson89"
    },
    "time_stamp": "2023-02-24 05:52:33",
    "text": "I basically want the e-signature feature without the e-signature, hehe..."
  },
  {
    "poster": {
      "poster_name": "Hanna Storaker",
      "poster_handle": "hs054"
    },
    "time_stamp": "2023-02-24 05:52:45",
    "text": "perfect! thank you"
  },
  {
    "poster": {
      "poster_name": "Kim Jonsson",
      "poster_handle": "kim.jonsson89"
    },
    "time_stamp": "2023-02-24 05:52:56",
    "text": "It would really make it easier for customers to make a buying decision when they have a nice shiny \"Accept\" button on quotes."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 05:53:00",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 05:53:16",
    "text": "just ping me if you have any trouble setting that up"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 05:53:22",
    "text": "for sure"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 06:09:20",
    "text": "the only way to use that api is to purchase it. \n\ndepending on your use case, you can create a workflow email that sends emails, based on a contact property update. update all the fields via the api you need for the email, then trigger the email via the workflow. \n\n"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 06:10:19",
    "text": "what’s going on? do you get an error message? are any of your values null or undefined? "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 06:13:50",
    "text": "what does wordpress do with the HubSpot api? "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 06:14:28",
    "text": "settings, integrations, then get into your api key /logs\n\nsame with private app"
  },
  {
    "poster": {
      "poster_name": "Jordan Medard",
      "poster_handle": "jordan.medard"
    },
    "time_stamp": "2023-02-24 06:19:25",
    "text": "TBH, I thought the API key was used to integrate HubSpot and WordPress, but now I'm not sure about that. I hven't found anywhere in the WP settings where I can enter or edit the API key"
  },
  {
    "poster": {
      "poster_name": "Jordan Medard",
      "poster_handle": "jordan.medard"
    },
    "time_stamp": "2023-02-24 06:20:32",
    "text": "I know I've needed the API key in the past, but I do not remember where or what it was used for"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 06:26:37",
    "text": "can you use this? <https://legacydocs.HubSpot.com/docs/methods/pages/get_pages_page_id>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 06:31:48",
    "text": "`/cms/v3/pages/site-pages/:pageId`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 06:33:37",
    "text": "that is what you want to use *`/cms/v3/pages/landing-pages/{objectId}`*"
  },
  {
    "poster": {
      "poster_name": "Aditya Naik",
      "poster_handle": "anaik"
    },
    "time_stamp": "2023-02-24 06:40:40",
    "edited": {
      "time_stamp": "2023-02-24 06:41:20"
    },
    "text": "`/cms/v3/pages/site-pages/:pageId`-&gt; Does this return content? i dont think so it does"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 07:04:16",
    "text": "We use this to copy website pages between portals"
  },
  {
    "poster": {
      "poster_name": "Aditya Naik",
      "poster_handle": "anaik"
    },
    "time_stamp": "2023-02-24 07:14:36",
    "text": "yes that would because you are just coping it but i need to get content for a landing page"
  },
  {
    "poster": {
      "poster_name": "Aditya Naik",
      "poster_handle": "anaik"
    },
    "time_stamp": "2023-02-24 07:55:35",
    "text": "So may be i will have to rely on v2 legacy apis? "
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-24 08:20:59",
    "text": "Is there a equivalent of this for Tickets? <https://legacydocs.HubSpot.com/docs/methods/contacts/merge-contacts>\n\nI haven't been able to find any",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-24 08:28:00"
      },
      {
        "time_stamp": "2023-02-24 08:28:37"
      },
      {
        "time_stamp": "2023-02-24 08:28:42"
      },
      {
        "time_stamp": "2023-02-24 08:28:54"
      },
      {
        "time_stamp": "2023-02-24 08:34:58"
      },
      {
        "time_stamp": "2023-02-24 08:35:31"
      },
      {
        "time_stamp": "2023-02-24 08:35:58"
      },
      {
        "time_stamp": "2023-02-24 08:36:09"
      },
      {
        "time_stamp": "2023-02-24 08:36:22"
      },
      {
        "time_stamp": "2023-02-24 08:37:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 08:25:09",
    "text": "We get all of the content with that api and then create a page in another portal, push that data into the new page, and if we have a publish checkmark, then it publishes it using the page publishing api"
  },
  {
    "text": "",
    "time_stamp": "2023-02-24 08:26:31"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 08:28:00",
    "text": "Yeah 100%"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 08:28:10",
    "text": "publishing is handled outside here — but that is what we are doing.\n\nWe copy the theme in the backend, then use our front end that uses this to select pages and copy them. This is the code that allows us to copy pages between portals. I’m not sure what else I can tell you — this works to get content"
  },
  {
    "text": "",
    "time_stamp": "2023-02-24 08:28:37"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 08:28:42",
    "text": "<https://developers.HubSpot.com/docs/api/crm/crm-custom-objects>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 08:28:54",
    "text": "I don't know why they don't put it in the tickets tab"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-24 08:34:58",
    "text": "wow good find, thank you"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-24 08:35:31",
    "text": "lol it being under custom objects makes 0 sense imho"
  },
  {
    "poster": {
      "poster_name": "Bruno Decruz",
      "poster_handle": "brunodecruz.05"
    },
    "time_stamp": "2023-02-24 08:35:48",
    "text": "thx bro"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 08:35:58",
    "text": "Well it's kinda something that you just have to keep in the back of your head"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 08:36:09",
    "text": "all objects pretty much have the same capabilities"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 08:36:22",
    "text": "from a CRUD perspective especially"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-24 08:37:07",
    "text": "yeah thats true"
  },
  {
    "poster": {
      "poster_name": "Logan Armstrong",
      "poster_handle": "logan565"
    },
    "time_stamp": "2023-02-24 09:49:00",
    "text": "Sure, here it is so far. (I'm using python if that's what's causing the issue of object vs array). Right now it's just returning the entirety of the property\n\n```import os\nimport requests\nfrom pprint import pprint\nfrom HubSpot import HubSpot\nfrom HubSpot.crm.contacts import SimplePublicObjectInput, ApiException\n\ndef main(event):\n\n  HubSpot = HubSpot(access_token=os.getenv('PropertyChanges'))\n  \n  try:\n    api_response = HubSpot.crm.properties.core_api.get_by_name(object_type=\"0-1\", property_name=\"amf_coach\", archived=False)\n    pprint(api_response)\n    \n  except ApiException as e:\n    print(\"Exception when calling core_api-&gt;get_by_name: %s\\n\" % e)```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 09:49:47",
    "text": "yeah so the map method is just for javascript but we can build something for python"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 09:49:55",
    "text": "what are you expecting this code to do"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 09:50:28",
    "text": "yeah, so if you go to settings, integrations, api, then check the logs every day you can find out if you are using it.\n\nYou can also just deactivate it, and then when someone isn’t receiving data anymore and starts complaining that something broke, you will know what it was for.\n\nBut yes, HubSpot analytics is through the HubSpot tracking code, and no need for api keys"
  },
  {
    "poster": {
      "poster_name": "Logan Armstrong",
      "poster_handle": "logan565"
    },
    "time_stamp": "2023-02-24 10:00:22",
    "text": "I thought I had found <https://www.quora.com/Is-there-a-Python-equivalent-to-JavaScripts-map-function#:~:text=Yes%2C%20Python%20has%20a%20map%20function%20as%20part%20of%20the%20built%2Din%20library.|a map function for python> that did the same thing, and added a new variable:\n\n`property_values = map(lambda option:option['value'], api_response)`\n\nbut with that i was getting the object isn't iterable error. I'm just looking to pull only the array of options from the property read. from there I think I can parse out only the option values. the issue is that when reading the property it also pulls all the other metadata\n\n```{'archived': False,\n'archived_at': None,\n'calculated': False,\n'created_at': datetime.datetime(2023, 2, 8, 15, 52, 45, 523000, tzinfo=tzlocal()),\n'created_user_id': '45656937',\n'description': 'The coach assigned to a Fellow',\n'display_order': -1,\n'external_options': False,\n'field_type': 'select',\n'form_field': True,\n'group_name': 'onboarding',\n'has_unique_value': False,\n'hidden': False,\n'HubSpot_defined': None,\n'label': 'AMF_Coach',\n'modification_metadata': {'archivable': True,\n'read_only_definition': False,\n'read_only_options': None,\n'read_only_value': False},\n'name': 'amf_coach',```\nbefore giving the options as an array themselves"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 10:10:25",
    "edited": {
      "time_stamp": "2023-02-24 11:09:29"
    },
    "text": "Hello, I am in the process of switching our account over to a private app since API keys are being deprecated. Unfortunately just saw this today - deadline is the 28th :confounded:\n\nWe were previously querying contact by email using \"<https://api.hubapi.com/contacts/v1/contact/email/USER_EMAIL/profile>\". I went through the new CRM documentation and do not see any endpoints that allow for the same behavior. Instead, I do see an option to get all contact with a specified filter. When I tried this, it returned contacts that did not fit my filter (searching for my email associate with a single contact). See code in comment - any help is greatly appreciated!",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-24 10:10:52"
      },
      {
        "time_stamp": "2023-02-24 11:00:02"
      },
      {
        "time_stamp": "2023-02-24 11:00:07"
      },
      {
        "time_stamp": "2023-02-24 11:08:58"
      },
      {
        "time_stamp": "2023-02-24 11:10:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 10:10:52",
    "text": "```curl --location --request GET '<https://api.hubapi.com/crm/v3/objects/contacts?limit=10&amp;archived=false>' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer OUR_TOKEN \\\n--data-raw '{\n    \"filterGroups\":[\n      {\n        \"filters\":[\n          {\n            \"propertyName\": \"email\",\n            \"operator\": \"EQ\",\n            \"value\": \"<mailto:krista@getpaloma.com|krista@getpaloma.com>\"\n          }\n        ]\n      }\n    ]\n}'```"
  },
  {
    "poster": {
      "poster_name": "Bruno Decruz",
      "poster_handle": "brunodecruz.05"
    },
    "time_stamp": "2023-02-24 10:12:32",
    "text": "Hello everyone does anyone know if the fact that the apikeys are deprecated means that they will not work any longer or it is just that it doesnt have any support ?",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-02-24 10:18:08"
      },
      {
        "time_stamp": "2023-02-24 10:19:45"
      },
      {
        "time_stamp": "2023-02-24 10:20:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 10:18:08",
    "text": "Hi! I actually reached out to support today and they will NOT continue to work."
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 10:19:45",
    "text": "\"What is going to be deprecated is the authentication method, if you are using API keys to authenticate this will not work anymore. Instead, you should use Private Apps, these apps have their own authentication method through OAuth\"\n\n\nI gave them a specific use case to triple check and they said it will not continue to work.\n\n<https://api.hubapi.com/contacts/v1/contact/email/krista@getpaloma.com/profile?hapikey=OUR_HubSpot_API_KEY>"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 10:20:05",
    "text": "Here are the resources I was given\n\nDeveloper Forum: <https://community.HubSpot.com/t5/APIs-Integrations/bd-p/integrations>\nDeveloper Slack: <https://developers.HubSpot.com/slack>\nAnd if you are interested in having some specialized for this, you can look at our Partners:\n<https://ecosystem.HubSpot.com/marketplace/solutions/?eco_search=API>\nAnd also, our Developers made a video explaining the Migration Process:\n<https://www.youtube.com/watch?v=F3Qd9Hp4giM>\nMigration documentation\n<https://developers.HubSpot.com/docs/api/migrate-an-api-key-integration-to-a-private-app>"
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-02-24 11:00:02",
    "text": "I don’t believe that endpoint supports filters…. to use the filters you have above you must POST to the search endpoint: `/crm/v3/objects/contacts/search`"
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-02-24 11:00:07",
    "text": "<https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 11:08:58",
    "text": "oh man. thanks so much. I completely misread that. Thank you! tested and worked :white_check_mark:"
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-02-24 11:10:16",
    "text": "nice! happy to help."
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 11:28:34",
    "text": "How long does it take after a form submission that a new Contact is available to be queried via the API? Is there a documented timeframe?",
    "reply_count": 45,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-02-24 11:43:51"
      },
      {
        "time_stamp": "2023-02-24 11:46:54"
      },
      {
        "time_stamp": "2023-02-24 11:47:21"
      },
      {
        "time_stamp": "2023-02-24 11:47:40"
      },
      {
        "time_stamp": "2023-02-24 11:48:15"
      },
      {
        "time_stamp": "2023-02-24 11:48:15"
      },
      {
        "time_stamp": "2023-02-24 11:48:51"
      },
      {
        "time_stamp": "2023-02-24 11:49:26"
      },
      {
        "time_stamp": "2023-02-24 11:51:00"
      },
      {
        "time_stamp": "2023-02-24 11:51:56"
      },
      {
        "time_stamp": "2023-02-24 11:52:00"
      },
      {
        "time_stamp": "2023-02-24 11:52:17"
      },
      {
        "time_stamp": "2023-02-24 11:52:34"
      },
      {
        "time_stamp": "2023-02-24 11:52:45"
      },
      {
        "time_stamp": "2023-02-24 11:52:54"
      },
      {
        "time_stamp": "2023-02-24 11:54:32"
      },
      {
        "time_stamp": "2023-02-24 12:56:52"
      },
      {
        "time_stamp": "2023-02-24 12:58:10"
      },
      {
        "time_stamp": "2023-02-24 12:58:34"
      },
      {
        "time_stamp": "2023-02-24 12:58:36"
      },
      {
        "time_stamp": "2023-02-24 12:58:56"
      },
      {
        "time_stamp": "2023-02-24 12:59:00"
      },
      {
        "time_stamp": "2023-02-24 12:59:08"
      },
      {
        "time_stamp": "2023-02-24 12:59:51"
      },
      {
        "time_stamp": "2023-02-24 13:01:16"
      },
      {
        "time_stamp": "2023-02-24 13:05:54"
      },
      {
        "time_stamp": "2023-02-24 13:06:12"
      },
      {
        "time_stamp": "2023-02-24 13:06:22"
      },
      {
        "time_stamp": "2023-02-24 13:06:29"
      },
      {
        "time_stamp": "2023-02-24 13:06:37"
      },
      {
        "time_stamp": "2023-02-24 13:06:49"
      },
      {
        "time_stamp": "2023-02-24 13:07:05"
      },
      {
        "time_stamp": "2023-02-24 13:07:15"
      },
      {
        "time_stamp": "2023-02-24 13:08:00"
      },
      {
        "time_stamp": "2023-02-24 13:09:28"
      },
      {
        "time_stamp": "2023-02-24 13:09:30"
      },
      {
        "time_stamp": "2023-02-24 13:10:21"
      },
      {
        "time_stamp": "2023-02-24 13:12:29"
      },
      {
        "time_stamp": "2023-02-24 13:12:35"
      },
      {
        "time_stamp": "2023-02-24 13:12:46"
      },
      {
        "time_stamp": "2023-02-24 13:19:35"
      },
      {
        "time_stamp": "2023-02-24 13:20:55"
      },
      {
        "time_stamp": "2023-02-24 13:21:04"
      },
      {
        "time_stamp": "2023-02-24 13:21:06"
      },
      {
        "time_stamp": "2023-02-24 14:36:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:43:51",
    "edited": {
      "time_stamp": "2023-02-24 11:44:01"
    },
    "text": "Don't think there is a documented timeframe but I've seen it take about 1.5 seconds"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:46:54",
    "edited": {
      "time_stamp": "2023-02-24 11:47:45"
    },
    "text": "Haven't ever had it take longer than 5 seconds, never seen it anywhere near this but I would think that's the upper limit"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:47:21",
    "text": "keep in mind though that the search endpoint and the graphql endpoint operate a little slower"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 11:47:40",
    "text": "yeah, i am using search endpoint. need to query by email address"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:48:15",
    "text": "you could just use the normal endpoint and use idProperty=email"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 11:48:15",
    "text": "unfortunately, hubl doesn't have the contact information on page 2 if a contact submits a form and then is redirected to a 2nd page"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:48:51",
    "text": "yeah you might need to add a delay although, even with that it's probably going to be cached for a little bit"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:49:26",
    "edited": {
      "time_stamp": "2023-02-24 11:49:40"
    },
    "text": "Unless of course you were using the email address for query with hubl then that shouldn't be cached, for too long"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 11:51:00",
    "text": "&gt; you could just use the normal endpoint and use idProperty=email\nEnlighten me"
  },
  {
    "text": "",
    "time_stamp": "2023-02-24 11:51:56"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:52:00",
    "text": "<https://developers.HubSpot.com/docs/api/crm/contacts>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:52:17",
    "text": "you can get objects by unique ids in HubSpot"
  },
  {
    "time_stamp": "2023-02-24 11:52:34",
    "text": "mind blown"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:52:45",
    "text": "it's awesome for sure"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:52:54",
    "text": "helps keep to systems in sync"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 11:54:32",
    "text": "multiple uuids across systems"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 12:43:01",
    "text": "Last question, sorry all.\n\nConverting our HubSpot behavioral event creation to the `/events/v3/send` endpoint.\n\nI keep getting `json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)`\n\nSee comment in ticket for code. Ive tried formatting every way I can think of.",
    "reply_count": 42,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-24 12:43:37"
      },
      {
        "time_stamp": "2023-02-24 12:44:09"
      },
      {
        "time_stamp": "2023-02-24 12:57:48"
      },
      {
        "time_stamp": "2023-02-24 12:58:18"
      },
      {
        "time_stamp": "2023-02-24 12:58:37"
      },
      {
        "time_stamp": "2023-02-24 13:01:56"
      },
      {
        "time_stamp": "2023-02-24 13:03:30"
      },
      {
        "time_stamp": "2023-02-24 13:03:40"
      },
      {
        "time_stamp": "2023-02-24 13:03:50"
      },
      {
        "time_stamp": "2023-02-24 16:55:42"
      },
      {
        "time_stamp": "2023-02-24 20:26:13"
      },
      {
        "time_stamp": "2023-02-24 20:26:33"
      },
      {
        "time_stamp": "2023-02-24 20:52:25"
      },
      {
        "time_stamp": "2023-02-24 21:29:37"
      },
      {
        "time_stamp": "2023-02-24 21:30:32"
      },
      {
        "time_stamp": "2023-02-24 21:31:07"
      },
      {
        "time_stamp": "2023-02-24 21:43:25"
      },
      {
        "time_stamp": "2023-02-24 21:43:37"
      },
      {
        "time_stamp": "2023-02-24 21:43:52"
      },
      {
        "time_stamp": "2023-02-24 21:44:43"
      },
      {
        "time_stamp": "2023-02-24 21:54:46"
      },
      {
        "time_stamp": "2023-02-24 21:56:04"
      },
      {
        "time_stamp": "2023-02-24 21:56:23"
      },
      {
        "time_stamp": "2023-02-24 21:56:49"
      },
      {
        "time_stamp": "2023-02-24 21:57:15"
      },
      {
        "time_stamp": "2023-02-24 21:57:23"
      },
      {
        "time_stamp": "2023-02-24 21:57:43"
      },
      {
        "time_stamp": "2023-02-24 21:58:09"
      },
      {
        "time_stamp": "2023-02-24 21:58:24"
      },
      {
        "time_stamp": "2023-02-24 21:58:31"
      },
      {
        "time_stamp": "2023-02-24 21:59:01"
      },
      {
        "time_stamp": "2023-02-24 21:59:46"
      },
      {
        "time_stamp": "2023-02-24 22:00:09"
      },
      {
        "time_stamp": "2023-02-24 22:00:17"
      },
      {
        "time_stamp": "2023-02-24 22:00:19"
      },
      {
        "time_stamp": "2023-02-24 22:00:34"
      },
      {
        "time_stamp": "2023-02-24 22:01:05"
      },
      {
        "time_stamp": "2023-02-24 22:01:27"
      },
      {
        "time_stamp": "2023-02-24 22:04:38"
      },
      {
        "time_stamp": "2023-02-24 22:06:49"
      },
      {
        "time_stamp": "2023-02-24 22:26:03"
      },
      {
        "time_stamp": "2023-02-24 22:26:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 12:43:37",
    "text": "```url = \"<https://api.hubapi.com/events/v3/send>\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'Authorization': 'Bearer ' + \"OUR TOKEN\"\n}\npayload = {\"email\":email,\"eventName\":OUR_EVENT_NAME,\"properties\":{\"date\":date}}\nr = requests.request(\"POST\", url, headers=headers, data=json.dumps(payload))```"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 12:44:09",
    "text": "I double checked the event name, the payload format, the property on the event in the dashboard to make sure it was added."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 12:56:52",
    "text": "if you need any content accessible on the next page, put a timeout on form submission and throw up a loading icon and a message, then redirect and you should have it there"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 12:57:48",
    "edited": {
      "time_stamp": "2023-02-24 12:58:02"
    },
    "text": "Try using this code real quick:\n```payload = json.dumps({\n  \"email\": email,\n  \"eventName\": OUR_EVENT_NAME,\n  \"properties\": {\n    \"date\": 1677268622000\n  }\n})```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 12:58:10",
    "text": "```  async function dataToHubSpot(fields, companyName) {\n    console.log(fields);\n    formSubmitButton.classList.add('loading');\n    formSubmitButton.textContent = 'Loading...';\n    var data = {\n      'fields': fields,\n      \"context\": {\n        {% if request.cookies.HubSpotutk %}\"hutk\": \"{{ request.cookies.HubSpotutk }}\",{% endif %}\n        \"pageUri\": \"{{ request.full_url }}\",\n        \"pageName\": \"{{ content.title }}\"\n      },\n      \"legalConsentOptions\": {\n        \"consent\": { // Include this object when GDPR options are enabled\n          \"consentToProcess\": true,\n          \"text\": \"I agree to allow, store and process my personal data.\"\n        }\n      },\n      \"skipValidation\": true\n    }; \n    var url = '<https://api.hsforms.com/submissions/v3/integration/submit/{{hub_id}}/{{module.form_for_saving_data.form_id}}>';\n\t\tawait $.ajax({\n      url:url,\n      type:\"POST\",\n      data:JSON.stringify(data),\n      contentType:\"application/json; charset=utf-8\",\n      dataType:\"json\",\n      success: function(response){\n        const redirectPageUrl = '{{ module.redirect_course_page_url.href }}';\n        const redirectDelay = {{ module.delay_before_redirect }} * 1000;\n        \n        setTimeout(() =&gt; {\n          window.location.href = `${redirectPageUrl}?company=${companyName}`;\n        }, redirectDelay ? redirectDelay : 2500)\n      }\n    });\n  }```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 12:58:18",
    "text": "```r = requests.request(\"POST\", url, headers=headers, data=payload)```"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 12:58:34",
    "text": "thanks. i am doing things to this effect and it's working. i decided to do some settimeouts with retries on the 2nd page. it pauses for about a 1/4 second, does a query, and retries if it doesn't find anything. it typically takes 1-3 queries. i may move the pause to 1/2 second to do less queries"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 12:58:36",
    "text": "that is using the forms api on a HubSpot page, but I always have content accessible after my 2500 pause"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 12:58:37",
    "text": "I know the date is a little wrong but just humor me real quick"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 12:58:56",
    "text": "yup"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 12:59:00",
    "text": "that will be perfect"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 12:59:08",
    "text": "I’d look at throttling your connection and tesing"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 12:59:51",
    "text": "thanks. that's what i'm doing. it'd be nice if there was a way to have the hubl elements on a page auto-refresh or refresh on command"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:01:16",
    "text": "yeah because they are serverside rendered the only way to really do that is through a refresh"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 13:01:56",
    "text": "i got the same error sorta... different format tho\n\n\n```{'status': 'error', 'message': 'Invalid input JSON on line 1, column 1: Cannot construct instance of `com.HubSpot.behavioral.events.core.BehavioralEventHttpCompletionRequest$Json` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value (\\'{\"email\": \"<mailto:krista@getpaloma.com|krista@getpaloma.com>\", \"eventName\": OUR_EVENT_NAME, \"properties\": {\"date\": 1677268622000}}\\')', 'correlationId': 'a920644b-1aa1-4423-abbe-1fbaeba0b80e'}```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:03:30",
    "text": "oh very strange, running a test on my end"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 13:03:40",
    "text": "thank you!!!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:03:50",
    "edited": {
      "time_stamp": "2023-02-24 13:03:55"
    },
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:05:54",
    "text": "on some tests, it takes 15 queries at that includes a 1/2 second pause before each until the contact is found. big bummer"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:06:12",
    "text": "that's a 7.5 second window for a contact via a form to appear in the API"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:06:22",
    "text": "using the search endpoint?"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:06:29",
    "text": "in this case, yeah."
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:06:37",
    "text": "i was trying with the other, but couldn't get it working"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:06:49",
    "text": "the docs are for updating. you sure its for querying too?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:07:05",
    "text": "Yes, I'm sure"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:07:15",
    "text": "any help with syntax? using node"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:08:00",
    "text": "same as any other request just like this though:\n```<https://api.hubapi.com/crm/v3/objects/contacts/nerds@gmail.com?idProperty=email>```"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:09:28",
    "text": "i was trying using `hs.crm.contacts.basicApi.getById` . maybe i should just use `hs.apiRequest` with more raw http info"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:09:30",
    "text": "or axios"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:10:21",
    "text": "ok one moment"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:12:29",
    "text": "```const contactId = \"<mailto:nerds@gmail.com|nerds@gmail.com>\";\nconst properties = [\n  \"firstname,email,lastname\"\n];\nconst propertiesWithHistory = undefined;\nconst associations = undefined;\nconst archived = false;\nconst idProperty = \"email\";\n\nconst apiResponse = await HubSpotClient.crm.contacts.basicApi.getById(contactId, properties, propertiesWithHistory, associations, archived, idProperty);```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:12:35",
    "text": "this should work for you"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 13:12:46",
    "text": "hand typed"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:19:35",
    "text": "working"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:20:55",
    "text": "i was passing in `[]` instead of `undefined` for association"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:21:04",
    "text": "was failing"
  },
  {
    "poster": {
      "poster_name": "Scott Hemmeter",
      "poster_handle": "scott362"
    },
    "time_stamp": "2023-02-24 13:21:06",
    "text": "working now"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 14:36:57",
    "text": "oh perfect"
  },
  {
    "poster": {
      "poster_name": "Alberto Zordan",
      "poster_handle": "alberto.zordan"
    },
    "time_stamp": "2023-02-24 15:00:11",
    "text": "Hello everyone!\nIs there a way to listen for the creation of a note on a ticket (which is associated to a contact) in order to associate the same note directly to the contact as well?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-02-24 15:51:46"
      },
      {
        "time_stamp": "2023-02-24 16:54:10"
      },
      {
        "time_stamp": "2023-02-24 16:54:50"
      },
      {
        "time_stamp": "2023-02-27 04:20:04"
      },
      {
        "time_stamp": "2023-06-05 17:46:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 15:51:46",
    "text": "engagements don’t retrigger an object"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 16:54:10",
    "text": "And what that means is you can trigger a workflow one time on an engagement that is attached to an object. After that, you can’t reenroll an object UNLESS it is a property update."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 16:54:50",
    "text": "So you will have to work backwards and do like a cron where you search out all the engagements, then make assocaitions"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 16:55:42",
    "text": "<@U01QVR44MEY> any chance you were able to find any solution? Thinking about posting on the developer thread"
  },
  {
    "poster": {
      "poster_name": "Aditya Naik",
      "poster_handle": "anaik"
    },
    "time_stamp": "2023-02-24 18:59:53",
    "text": "Ok"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 20:26:13",
    "text": "sorry bro I left the office"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 20:26:33",
    "text": "doing a couple of things now and will check back on this in a few"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 20:52:25",
    "text": "No it’s totally fine!!!!! I’m happy for any help at all. "
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 21:29:37",
    "text": "cool cool, yeah running a couple more tests now, was working on my end a couple of hours ago and couldn't get that same error that you got, but trying to get it now"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:30:32",
    "text": "Do you mind sending me a request that did work for you? "
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:31:07",
    "text": "I’ll try to tweak it to what I need. I’m honestly stumped as hell. "
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 21:43:25",
    "text": "this code worked fine for me:\n```import requests\nimport json\n\nurl = \"<https://api.hubapi.com/events/v3/send/>\"\n\npayload = json.dumps({\n  \"email\": \"<mailto:nerds@gmail.com|nerds@gmail.com>\",\n  \"eventName\": \"pe5093936_test_api_event\",\n  \"properties\": {\n    \"default_property\": \"1677268622000\"\n  }\n})\nheaders = {\n  'Authorization': 'Bearer pat-na1-xxxxxxx',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 21:43:37",
    "text": "200 success code"
  },
  {
    "text": "this is my event:",
    "time_stamp": "2023-02-24 21:43:52"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:44:43",
    "text": "I am so confused by this lol. I don’t understand the difference. Does it just not like the key name being “date”. Let me try this one sec"
  },
  {
    "text": "",
    "time_stamp": "2023-02-24 21:54:46"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:56:04",
    "text": "```url = f\"<https://api.hubapi.com/events/v3/send>\"\npayload = json.dumps({\n  \"email\": \"<mailto:krista@getpaloma.com|krista@getpaloma.com>\",\n  \"eventName\": \"pe4546074_api_test2\",\n  \"properties\": {\n    \"date\": \"1677268622000\"\n  }\n})\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Typ': \"application/json\",\n    'Authorization': 'Bearer xxxxxxx',\n}\nr = requests.request(\"POST\", url, headers=headers, data=payload)```"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:56:23",
    "text": "I feel like i've loosing brain cells lol"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 21:56:49",
    "text": "do you also want to pass a utk"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 21:57:15",
    "text": "just to double check"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 21:57:23",
    "text": "that it's not something with the email"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:57:43",
    "text": "we're not saving it so its an extra query for me so preferably not ... it wasnt required so better for us"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:58:09",
    "text": "we have never used utk previously"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:58:24",
    "text": "before migrating to the latest endpoints"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 21:58:31",
    "text": "you've used this api previously?"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:59:01",
    "text": "the deprecated endpoints that used api keys"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 21:59:46",
    "text": "my whole issue today is that i logged in and saw the warning banner that all api keys will not be supported tuesday so im switching everything over according to their docs. been real stressful"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 22:00:09",
    "text": "yeah I've been doing a similar thing"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 22:00:17",
    "text": "last minute cramming"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 22:00:19",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 22:00:34",
    "text": "aw damn sorry to hear that. yeah not the friday i thought i would have lol. this is my last hurdle"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 22:01:05",
    "edited": {
      "time_stamp": "2023-02-24 22:04:02"
    },
    "text": "but really... i dont understand why my code sample just now is different than yours and mine fails"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 22:01:27",
    "text": "i might take a look tomorrow and step away because i feel like im just missing something super obvious"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 22:04:38",
    "text": "Yeah sounds good, I'll try and see if I can get the error you're getting"
  },
  {
    "poster": {
      "poster_name": "Krista Triviso",
      "poster_handle": "krista661"
    },
    "time_stamp": "2023-02-24 22:06:49",
    "text": "appreciate the comradery... needed it!!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 22:26:03",
    "text": "Honestly you might try getting one event from the api and just running the same thing as a post request"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-24 22:26:24",
    "text": "without the object id and other stuff that gets created after creation of course"
  }
]
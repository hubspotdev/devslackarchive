[
  {
    "poster": {
      "poster_name": "John Carl Macasero",
      "poster_handle": "jcpmacasero"
    },
    "time_stamp": "2024-07-09 01:00:18",
    "text": "Parameters such as the Subject and Body are what I currently need. If there are additional options to make the integration more flexible, that would be even better."
  },
  {
    "poster": {
      "poster_name": "Tom Durston",
      "poster_handle": "tom984"
    },
    "time_stamp": "2024-07-09 05:51:12",
    "text": "<@U03FJQPSC0Y> <@U05KNCMAE7N> Hey guys, wondering if anyone else has requested the ability to specify meeting properties such as meeting type and meeting title when using the SCHEDULE_MEETING action with the CRM Action Components? Right now you can only specify the association type/id of the object that you want to associate the meeting with, but it would be nice to be able to a set default value or specify meeting type and meeting title properties when doing this.",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-07-09 08:35:25"
      },
      {
        "time_stamp": "2024-07-09 08:49:04"
      },
      {
        "time_stamp": "2024-07-09 14:31:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-07-09 08:24:54",
    "text": "If she updates it via the UI then it will trigger `onCrmPropertiesUpdate`"
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-07-09 08:35:25",
    "text": "cc: <@U05ENUJF7B5>"
  },
  {
    "poster": {
      "poster_name": "Deidra Kandra",
      "poster_handle": "dkandra"
    },
    "time_stamp": "2024-07-09 08:49:04",
    "text": "I don’t believe the activity creator currently supports that type of configuration through the message bus. Can you share a little more about your use case?\n\ncc <@U04CMAG0MHU>"
  },
  {
    "poster": {
      "poster_name": "Gary Wong",
      "poster_handle": "gary"
    },
    "time_stamp": "2024-07-09 10:16:51",
    "text": "I’m looking for a little help with a custom CRM card I’m building.  The card creates a quote (via serverless function) much like the sample app (Generating Quotes).  After creating the quote, I want to show a button to edit or preview the quote, but I can’t seem to get that to work.\n\nI tried using CRMActionCard, CRMActionLink, and CRMCardActions - they’re all grayed out.   If I hard coded one of the buttons with the new quote ID and refreshed, they work just fine,  So it’s probably because the quote is not recognized as being available yet after I create the quote.\n\nI tried adding a button to issue a refreshObjectProperties() but that didn’t work either.\n\nAny ideas?  Thank you!",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-07-09 10:45:22"
      },
      {
        "time_stamp": "2024-07-09 10:51:02"
      },
      {
        "time_stamp": "2024-07-15 10:41:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gary Wong",
      "poster_handle": "gary"
    },
    "time_stamp": "2024-07-09 10:45:22",
    "text": "So I threw in a CrmAssociationTable with quotes in the card.  After the quote is created, if I wait about 6 seconds and then fired off a refreshObjectProperties(), the table will show the new quote.  So that’s my backup for now, but it would be great to be able to get a link/button to preview/ or edit the quote right away."
  },
  {
    "poster": {
      "poster_name": "Cristóbal Parraguez",
      "poster_handle": "cparraguez"
    },
    "time_stamp": "2024-07-09 10:51:02",
    "text": "I had a similar experience working with the quotes api,  I think the link takes a couple seconds to generate for example, and this was like 2 years ago but I agree with you on the component improvements"
  },
  {
    "poster": {
      "poster_name": "Tom Durston",
      "poster_handle": "tom984"
    },
    "time_stamp": "2024-07-09 14:31:36",
    "text": "Yeah for sure. We have people booking meetings for other people at our company. Currently we can do that with either a Meeting Link or using the meeting button on a CRM object record.\n\nThe meeting link is good for ensuring that you are assigning the proper meeting type, title, body, etc to the booking, and that it's linking to the right person's calendar, but the drawback is that you run the risk of people overwriting contact records with the firstname, lastname, and email props that are required on all meeting link forms.\n\nThe meeting button in the CRM is good because you don't run the risk of overwriting data, however you have to select a meeting type, select the right person's calendar, and you lose the uniformity of the default title, meeting body, etc.\n\nHaving the ability to set some additional props using the SHEDULE_MEETING action gives you the peace of mind that no one is overwriting contact properties with a meeting link, and it also ensures that the meeting type and standard props that you want set as defaults are always set. Essentially getting the best of both options, and much less risk of either overwriting data or scheduling the wrong meeting, scheduling a meeting using the wrong calendar, and having non-uniform Booking Titles/Bodies.\n\nSeems like a small thing but it's not uncommon for someone to enter the wrong persons name when using a meeting link (which has it's own trickle down effects when it comes time to email or market to that person). It's just this persistent back-door that people use to unintentionally muddy our data, and we've been trying to find a work-around for quite some time now, so honestly anything would help."
  }
]
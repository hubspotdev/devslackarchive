[
  null,
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-02-21 08:53:04",
    "text": "Hey I’m finding this is not working/triggering consistently. \n```{{resize_image_url(widget.top_half_image.src, 600, 450, 0,false,false) }}```\n\nI’m guessing one of my false booleans is what’s causing it to not always re-size but the result should be consistent on page loads. I’m finding when I refresh it sometimes doesn’t use the resize url\n\nThe image that was uploaded is  massive - so it should always resize down because file size will always be lower and it wont be upscaling the image either."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 08:53:58",
    "text": "odds of the resize function actually working is about 50% of the time."
  },
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:20:27",
    "text": "I have found that you needs to be complete `{{ resize_image_url(\"URL HERE\", WIDTH, HEIGHT, LENGTH) }}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 09:20:54",
    "edited": {
      "time_stamp": "2018-02-21 09:21:07"
    },
    "text": "it is though, i set all of the possible parameters including the booleans"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:21:03",
    "text": "what is false , false?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:21:13",
    "text": "Ah.."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:21:17",
    "text": "I havent used that."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 09:21:30",
    "text": "the two booleans: “upscale: boolean, use the resized image dimensions even if they would scale up the original image (images may appear blurry)\nupsize: boolean, return the resized image even if it is larger than the original in bytes”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 09:22:18",
    "text": "I’m guessing what’s causing it to only fire sometimes is there’s a bug in their code detecting if the returned file size is bigger than the original"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:26:18",
    "text": "I used this all day yesterday and it worked flawlessly"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:27:10",
    "text": "i have been using it to do lazy loading images. Start with a small 10px image and replace it with a resized larger image/"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:27:28",
    "text": "<https://www.bluleadz.com/blog>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:27:30",
    "text": "Example"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 09:27:39",
    "text": "what I’m finding is it works only half the time - it fails properly when it fails because the image still gets displayed.\n\nhaha <@U38EZFVFE> just ready your latest comment, you’re a man after my own heart that was my plan for how to use this in the future"
  },
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:32:10",
    "text": "Pretty easy."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 09:33:39",
    "text": "yea, and totally worth doing now that HS gave us the function. Beforehand it’d be a lot of work convincing marketers to make mini versions of their images for it"
  },
  {
    "poster": {
      "poster_name": "Bradley Haveman",
      "poster_handle": "bradley"
    },
    "time_stamp": "2018-02-21 09:38:22",
    "text": "Mind sharing how you do it <@U38EZFVFE>?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 09:39:37",
    "edited": {
      "time_stamp": "2018-02-21 09:40:24"
    },
    "text": "didn’t look at how chad’s doing it but 1 way is to set img elements or backgrounds to use the resize url with max width and height of 10px, then add a data url to the div or img element data-lazy=“normal size imageURL”\n\nThen use JS to swap it out\nCould even actually use css only to do it if you were feeling adventurous - now that I think of it"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:41:22",
    "text": "Load the Lazyload.js library and fire this  `// Lazy Load Image and Backgrounds\n    var newmyLazyLoad = new LazyLoad({\n        'elements_selector': \"[data-src]\",\n        'threshold': 50\n    });`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:41:28",
    "text": "<https://github.com/verlok/lazyload>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:41:48",
    "text": "I load it localy"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-21 09:42:12",
    "text": "drop the image source into a data-src attr and walla"
  },
  {
    "poster": {
      "poster_name": "Bradley Haveman",
      "poster_handle": "bradley"
    },
    "time_stamp": "2018-02-21 09:43:00",
    "text": "Boom, sick thanks"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-02-21 10:00:15",
    "edited": {
      "time_stamp": "2018-02-21 10:11:01"
    },
    "text": "WOAH now the function is blatantly ignoring my parameters!\n<https://spin.d.pr/Ul97qB+>\n<https://spin.d.pr/Vfh4Eb+>\nThe difference in this situation is I specified a length greater than 0\n\n*HS Devs - The boolean parameters are pretty important please fix these!*"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 10:53:08",
    "text": "Also related to the HS resize function - what happens if someone uploads an svg? - personally I’d kinda hope it wouldn’t do anything. worst scenario would be if it rasterized the svg."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-02-21 10:54:21",
    "text": "it won’t touch an svg. I’ll look into the boolean issue"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-02-21 11:13:12",
    "text": "You’re right that it forces upscaling and upsizing if a length is specified. I just don’t recall why. :simple_smile:"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-02-21 11:40:09",
    "text": "in any case, fix in progress"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-02-21 14:39:09",
    "text": "Is it possible to do a hubl conditional statement in Site Header HTML?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-02-21 14:39:56",
    "text": "i.e. I'd like to load different meta tags on the blog than on all other pages",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-02-21 14:48:28"
      },
      {
        "time_stamp": "2018-02-21 14:49:14"
      },
      {
        "time_stamp": "2018-02-21 15:05:55"
      },
      {
        "time_stamp": "2018-02-21 21:35:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-02-21 14:48:28",
    "text": "<@U54TVT3C1> I don't see why not? I have seen HubL usage in the header html before"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-02-21 14:49:14",
    "text": "Great!  I know I could have probably just tried it, but I really love having this slack available for questions like this."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-21 15:05:55",
    "edited": {
      "time_stamp": "2018-02-21 15:18:44"
    },
    "text": "yes you can definitely do that, I’ve personally done it before.\n\nThough not advised unless you dont have time to do it the right way - you can also put hubl supported modules right inside class fields and other areas of the design manager. It’s messy and I don’t recommend it because it may not be intended functionality, but it’s technically possible."
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-02-21 15:31:48",
    "text": "has anybody used the new Page field? {{ page_by_id(item.link_to_page) }} … How do you use it?"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-02-21 15:32:10",
    "text": "The result in not an url"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-02-21 15:32:23",
    "text": "It is but 404"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-02-21 15:33:57",
    "text": "I believe you need to pass in the page id instead of the url"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-02-21 16:49:29",
    "text": "how will i write that? i need to use it as a href",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-02-21 19:20:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-02-21 19:20:36",
    "text": "PM the template to me"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-02-21 21:35:35",
    "text": "That's a cool idea!"
  }
]
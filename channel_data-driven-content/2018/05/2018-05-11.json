[
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-11 07:17:01",
    "text": "Me either - going to be using that today"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-11 07:17:27",
    "text": "What's the standard used for country codes (to be clear I'm using the right list of potential values)"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-11 07:20:32",
    "text": "Where can we find a list of geo vars like those?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 07:51:57",
    "text": "Using request variables prevents your page from being cached so there is a tradeoff",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-05-11 08:01:26"
      },
      {
        "time_stamp": "2018-05-11 08:58:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-05-11 07:53:27",
    "text": "Haven’t stared this project yet "
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-11 08:01:26",
    "text": "Thanks for the heads up - Is that in its entirety or you'd attempt to cache the non-dynamic portions"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-05-11 08:58:54",
    "text": "entirely"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-05-11 09:02:25",
    "text": "<https://dev.maxmind.com/geoip/legacy/codes/iso3166/>"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-11 13:04:50",
    "text": "how does one get the parent page URL of the dynamic Rows from which the current slug was generated? i.e. is there a way to reference the website page and/or landing page base url upon which the dynamic table of hs_paths is appended?"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-05-11 13:11:19",
    "text": "do you mean from the hubdb api?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-05-11 13:43:14"
      },
      {
        "time_stamp": "2018-05-11 15:31:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 13:18:42",
    "edited": {
      "time_stamp": "2018-05-11 13:18:48"
    },
    "text": "I think within a template"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 13:19:16",
    "text": "`{{ content.absolute_url }}`"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-11 13:43:14",
    "text": "No I mean in HubL - the landing page or website page where you select the HubDB table to use for dynamic pages - I'm interested in THAT specific slug when building the template"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:26:11",
    "text": "Hi yall. I can not get my hubdb tabel to update."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:27:19",
    "edited": {
      "time_stamp": "2018-05-11 14:27:27"
    },
    "text": "I added a multiple select field and it isnt showing in the table data"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:28:17",
    "text": "caching maybe? try adding a query param"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:28:35",
    "text": "it literally isnt there <https://api.hubapi.com/hubdb/api/v2/tables/695121/rows?portalId=2459745>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:29:33",
    "text": "Just added another columns and again no dice."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:30:48",
    "text": "<@U6GNQ7JBU> any insight to this?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:30:52",
    "text": "hmm.. maybe the interface itself in the backend isn’t saving"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:30:59",
    "text": "do you see console errors in the hubDB screen?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:31:01",
    "text": "Let me check"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:31:01",
    "text": "no js errors"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:31:04",
    "text": "thanks/"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:31:30",
    "text": "Link to table UI"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:31:44",
    "text": "You'll want to hit <https://api.hubapi.com/hubdb/api/v2/tables/695121/rows/draft?portalId=2459745>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:32:40",
    "text": "<https://app.HubSpot.com/hubdb/2459745/table/695121>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:33:45",
    "text": "Checking"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:34:23",
    "text": "Thanks <@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:34:42",
    "text": "I just added a test multiselect column",
    "reply_count": 21,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-05-11 14:35:00"
      },
      {
        "time_stamp": "2018-05-11 14:35:13"
      },
      {
        "time_stamp": "2018-05-11 14:35:21"
      },
      {
        "time_stamp": "2018-05-11 14:35:29"
      },
      {
        "time_stamp": "2018-05-11 14:35:33"
      },
      {
        "time_stamp": "2018-05-11 14:35:48"
      },
      {
        "time_stamp": "2018-05-11 14:35:59"
      },
      {
        "time_stamp": "2018-05-11 14:36:07"
      },
      {
        "time_stamp": "2018-05-11 14:36:16"
      },
      {
        "time_stamp": "2018-05-11 14:36:26"
      },
      {
        "time_stamp": "2018-05-11 14:36:41"
      },
      {
        "time_stamp": "2018-05-11 14:36:54"
      },
      {
        "time_stamp": "2018-05-11 14:37:34"
      },
      {
        "time_stamp": "2018-05-11 14:38:20"
      },
      {
        "time_stamp": "2018-05-11 14:38:24"
      },
      {
        "time_stamp": "2018-05-11 14:41:07"
      },
      {
        "time_stamp": "2018-05-11 14:41:16"
      },
      {
        "time_stamp": "2018-05-11 14:41:56"
      },
      {
        "time_stamp": "2018-05-11 14:45:20"
      },
      {
        "time_stamp": "2018-05-11 14:49:55"
      },
      {
        "time_stamp": "2018-05-11 14:50:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:35:00",
    "text": "<@U38EZFVFE> thread here"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:35:13",
    "text": "I do not see it"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:35:21",
    "text": "Oh as in through the API you don't see it?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:35:29",
    "text": "The row data for that column?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:35:33",
    "text": "Nope."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:35:48",
    "text": "O dont see the column"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:35:59",
    "text": "in the api"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:36:07",
    "text": "It's there under <http://api.hubapi.com/hubdb/api/v2/tables/695121/rows/draft|api.hubapi.com/hubdb/api/v2/tables/695121/rows/draft>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:36:16",
    "text": "Did you update it?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:36:26",
    "text": "As in hit the update button"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:36:41",
    "text": "trying to retrieve it via hubdb_table_rows"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:36:54",
    "text": "As it i have worn that thing out"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:37:34",
    "text": "Just got this in consolde.. PUT <https://api.HubSpot.com/hubdb/api/v2/tables/695121/publish?portalId=2459745&amp;clienttimeout=30000> 500 ()"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:38:20",
    "text": "Debugging locally right now"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:38:24",
    "text": "Give me a few minutes"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:41:07",
    "text": "yeah no probs"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:41:16",
    "text": "What ius your twitter handle?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:41:56",
    "text": "`@HubSpotSupport` :wink:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-11 14:45:20",
    "text": "You should be good now"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:49:55",
    "text": "THANKS A MILLION"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-11 14:50:04",
    "text": "It sucks to he gimped like that"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-05-11 15:31:29",
    "text": "`{{ content.slug }}` ?"
  }
]
[
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 05:41:53",
    "text": "Is it a good idea to use bootstrap4 (creating .css and .js files inside Design-Manager) and load it via \"Linked Stylesheets\"?"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 05:42:08",
    "text": "maybe there is some other \"better\" way?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:02:07",
    "text": "yes that is one way to do it. though you should be aware, you will need to modify the css a little if using drag n drop templates, as those force the HubSpot bootstrap 2 grid"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:02:56",
    "text": "if you make any strides toward that and want to contribute some code <#CCQSQ2C6L|crankshaft> is an open source framework some of us in the community are working on. unfortunately it’s just been a little slow going"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:26:30",
    "text": "I just finished this tutorial, and made everything the same and it looks the same. BUT the choice button is not working... even though the value is changing (I left HUBL snippet inside HTML so I can see)"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:26:50",
    "text": "is there something changed with designer??"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:26:53",
    "text": "<https://app.HubSpot.com/learning-center/5368158/tracks/34/290/1574>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:27:41",
    "text": "btw your link has your portal id in it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:27:52",
    "text": "so no one can look at the link without having access to your portal"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:29:29",
    "text": "that is good :smile:"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:29:34",
    "text": "ok I fixed it now"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:29:46",
    "text": "it was the \" in wrong place"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:29:54",
    "text": "yep that’ll do it"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:30:19",
    "text": "one more hint i need"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:30:30",
    "text": "how to make module full width"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:30:42",
    "text": "what rule i need to overwrite"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:30:55",
    "text": "that requires the template’s flex column to be full width",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-21 15:37:24"
      },
      {
        "time_stamp": "2019-02-21 15:43:52"
      },
      {
        "time_stamp": "2019-02-22 07:16:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:31:33",
    "text": "you can use CSS to force a module to be full width regardless but that would probably look bad in most situations and requires some math"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:32:11",
    "edited": {
      "time_stamp": "2019-01-29 07:32:39"
    },
    "text": "ok... maybe i need to say `body: width: 100%`?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:32:37",
    "text": "width 100% will make your module fill it’s container."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:32:48",
    "text": "if the flex column is not full width, then your module will not be"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:33:07",
    "text": "yes. you are right"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:33:16",
    "text": "i need to make flex container 100% width"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:33:25",
    "text": "but isn't it already by default 100%"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:35:26",
    "text": "nah... that's the body"
  },
  {
    "text": "",
    "time_stamp": "2019-01-29 07:36:42"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:36:49",
    "text": "this left gap I mean"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:37:09",
    "edited": {
      "time_stamp": "2019-01-29 07:37:31"
    },
    "text": "isn't that because by default the body is not 100% wide"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:39:09",
    "text": "preview without options"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:39:52",
    "text": "it's same"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:40:05",
    "text": "but I don't have any rules for body"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:40:17",
    "text": "this is normal"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-29 07:40:25",
    "text": "Are you cancelling out the default margins?"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:40:31",
    "text": "I mean by default the body is not 100% wide"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:40:40",
    "text": "No I am not"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:40:53",
    "text": "at least I don't know if I am"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-29 07:40:59",
    "text": "By default the body has some margin and padding, so try resetting those to 0."
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:41:16",
    "text": "yes that is what I am talking about"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:41:36",
    "text": "by default the content will not be from side to side"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:41:50",
    "text": "i need to set margin and padding for body"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:43:15",
    "text": "<https://www.w3schools.com/cssref/css_default_values.asp>"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:43:20",
    "edited": {
      "time_stamp": "2019-01-29 07:43:33"
    },
    "text": "```\nbody\ndisplay: block;\nmargin: 8px;\n```"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:43:39",
    "text": "that is causing the gap"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:48:53",
    "text": "what If I create a module and it depends on bootstrap4 and someone loads that module in a page where bootstrap is not loaded... that module wont work properly...\nthis is the part that I don't get...\nMaybe modules can load their own separate css file? and loading the whole bootstrap4 for a module also doesn't seem to be right... Oh please someone clear this out for me :disappointed_relieved:"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:51:15",
    "edited": {
      "time_stamp": "2019-01-29 07:51:39"
    },
    "text": "So yes... a module can load it's own css file.... but what if page loads also bootstrap4 and module also loads bootstrap4 then I would have the same .css file loaded twice???"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-29 07:52:11",
    "text": "I think we need to understand the bigger picture here. Is this for a template you are building for the marketplace? or is this template for client/personal use?"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-29 07:52:27",
    "text": "Isn’t there some magic in HubSpot that prevents loading the same resource twice?"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:52:37",
    "text": "I have a template and now I am building modules"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:52:52",
    "text": "and on template is already bootstrap4"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-29 07:53:37",
    "edited": {
      "time_stamp": "2019-01-29 07:53:42"
    },
    "text": "ok so when you build your modules out, you can use the same classes and stuff from the main bootstrap 4. You wont see teh scaffolding or anything like that on the module when you are previewing it, instead, create the module, add it to a page and use that page as your preview for the module"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 07:54:15",
    "text": "If you are submitting the module to the marketplace then you’d want to avoid using a full framework"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:54:22",
    "text": "yes and what if someone wants to load that module on a template where there is no bootstrap"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-29 07:54:39",
    "text": "Seems like at that point you should just write the CSS specifically for the module."
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-29 07:54:49",
    "text": "That’s the point of modules, is to encapsulate their own code."
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:54:56",
    "text": "true"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:55:00",
    "text": "makes sense"
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-29 07:56:22",
    "text": "<@UF8D6BJCA> you look like bad-ass-motherfucker on that profile image... just needs title \"Tough Life...\""
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-29 07:56:30",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-29 07:57:32",
    "text": "def looks like a headshot from the Sons of Anarchy show"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-29 11:19:16",
    "text": "ok, random question on if anyone knows what the %'s are for email that flags HS? For example, if you have a bounce rate of 12% on an email you get a notification. What are the thresholds on unsubscribes and spam reports? I'm trying to complie metrics for our team to say \"This is what we need to convey to clients that anything over X% for XYZ will be problematic and means you really need to review you contacts\""
  }
]
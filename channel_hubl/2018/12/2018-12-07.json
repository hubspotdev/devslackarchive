[
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 05:17:27",
    "text": "{{ content.meta.is_staged_page }}  == true|false",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-12-07 07:11:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 05:17:50",
    "text": "<@U7SL518D6>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 06:31:58",
    "text": "What pocket did you pull that out of?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 06:36:42",
    "text": "the almighty Developer Info"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 06:38:33",
    "text": "The missing holy book"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 06:41:44",
    "edited": {
      "time_stamp": "2018-12-07 06:41:49"
    },
    "text": "Actually remove the .meta and it will work perfectly"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 06:42:06",
    "text": "`{{ content.is_staged_page }}`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 06:42:20",
    "text": "i guess the .meta is implied"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 07:11:41",
    "text": "super awesome thank you Chad"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 07:12:05",
    "text": "very cool, exactly what I needed"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 07:12:22",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 07:12:37",
    "text": "When in dout"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-12-07 07:13:53",
    "text": "His name is Monster <@U38EZFVFE> :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 07:14:04",
    "text": "ha"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 07:18:16",
    "text": "only when he is wearing his superhero plaid shirt"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 07:18:22",
    "text": ":chad2:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 07:18:32",
    "text": "Plaid Chad to the rescue"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 07:19:03",
    "text": ":chad:  Alter Ego Chad"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 07:19:26",
    "text": "i never trusted that white shirted chad"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 07:19:39",
    "text": "who knows what he is up to"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 10:01:35",
    "text": "Not as \"Blue Collar\""
  },
  {
    "time_stamp": "2018-12-07 10:26:54",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 10:28:56",
    "text": "I should watch that again"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 10:41:43",
    "text": "I wish Keanu Reeves was not in it. My biggest complaint",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-07 10:46:02"
      },
      {
        "time_stamp": "2018-12-07 10:47:08"
      }
    ]
  },
  {
    "time_stamp": "2018-12-07 10:44:38",
    "text": "",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-07 10:47:19"
      },
      {
        "time_stamp": "2018-12-07 12:42:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 10:46:02",
    "edited": {
      "time_stamp": "2018-12-07 10:46:15"
    },
    "text": "I thought he actually did a decent job, his acting let you project emotions on to him because he was emotionless through most of it, fits the narrative lol"
  },
  {
    "time_stamp": "2018-12-07 10:46:21",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 10:47:08",
    "text": "yeah, i guess.  i will let it slide"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 10:47:19",
    "text": "lol never realized that was him"
  },
  {
    "time_stamp": "2018-12-07 11:28:19",
    "text": "",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-07 11:30:33"
      },
      {
        "time_stamp": "2018-12-07 12:44:58"
      },
      {
        "time_stamp": "2018-12-07 12:45:32"
      },
      {
        "time_stamp": "2018-12-07 12:46:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 11:30:33",
    "text": "is it wrong that I watched this movie purely so I could get the context behind a joke in Deadpool?"
  },
  {
    "poster": {
      "poster_name": "Hayley K.",
      "poster_handle": "hkornilenko"
    },
    "time_stamp": "2018-12-07 12:11:14",
    "edited": {
      "time_stamp": "2018-12-07 12:11:44"
    },
    "text": "{QUESTION} Is it possible in HubSpot to conditionally render a module based on a category?\n\nContext -- we have over 45 webinars we want to share to our clients.  But that is a lot and not everyone needs each one.  My thought was to filter them based on category and load them on the page.  I want to make it into a module that anyone on our site can use."
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-07 12:15:07",
    "text": "can you just use the native topic loop page?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-07 12:18:20"
      },
      {
        "time_stamp": "2018-12-07 12:22:01"
      },
      {
        "time_stamp": "2018-12-07 12:23:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-07 12:15:50",
    "text": "<http://example.com/topic/upcoming-webinars|example.com/topic/upcoming-webinars>"
  },
  {
    "poster": {
      "poster_name": "Hayley K.",
      "poster_handle": "hkornilenko"
    },
    "time_stamp": "2018-12-07 12:18:20",
    "text": "Yes, I could but that would be adding an additional page to the site for each category.  I was trying to see if I can leverage a more dynamic approach... I could be making things unnecessarily difficult."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 12:19:56",
    "edited": {
      "time_stamp": "2018-12-07 13:13:27"
    },
    "text": "Absolutely possible. ~I would suggest creating a \"parent module\" that conditionally renders your child module and has a field for marketers to select the categories for that instance.~ I'm pretty sure you can nest modules this way, at least. EDIT: I was wrong, sorry for the false alarm everyone, I thought you could use {% module %} inside module HubL, that stinks. This is still possible but would need to be done in a coded template rather than a module. <@U22PKFRU5> <@U22PNRAJD> is adding this type of function on the team's radar, being able to call a module from within another module? Will also post in <#C26E7JT8V|ideas>",
    "reply_count": 8,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2018-12-07 12:24:17"
      },
      {
        "time_stamp": "2018-12-07 12:33:15"
      },
      {
        "time_stamp": "2018-12-07 12:44:29"
      },
      {
        "time_stamp": "2018-12-07 12:46:21"
      },
      {
        "time_stamp": "2018-12-07 12:46:34"
      },
      {
        "time_stamp": "2018-12-07 12:50:38"
      },
      {
        "time_stamp": "2018-12-07 13:09:37"
      },
      {
        "time_stamp": "2018-12-07 13:11:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-07 12:21:35",
    "text": "wait, you can nest custom modules? How?"
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-07 12:22:01",
    "edited": {
      "time_stamp": "2018-12-07 12:22:17"
    },
    "text": "maybe tell yourself it's better for SEO and tracking? That's what I would do :smile:"
  },
  {
    "poster": {
      "poster_name": "Hayley K.",
      "poster_handle": "hkornilenko"
    },
    "time_stamp": "2018-12-07 12:23:55",
    "text": "True!"
  },
  {
    "poster": {
      "poster_name": "Hayley K.",
      "poster_handle": "hkornilenko"
    },
    "time_stamp": "2018-12-07 12:24:17",
    "text": "And if I want the filter capability on the user side?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-12-07 12:33:15",
    "text": "If it's entirely on the user side, what about using something like isotope for filtering?  Or is performance a concern for loading everything?"
  },
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 12:42:59",
    "text": "what???"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 12:44:29",
    "text": "OR an ajaxy solution."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 12:44:58",
    "text": "LOL.. yes yes it is. both of these movies get me so pumped."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 12:45:32",
    "text": "And the cool part is that he is really good with a gun."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 12:46:21",
    "text": "Hey can you elaborate on this nesting modules thing. I’m doing something right now that litterally that would make this task way easier"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 12:46:34",
    "text": "I know that the module tag does not work inside of a custom module"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-07 12:46:58",
    "text": "<https://www.youtube.com/watch?v=_yk7K8-HnfI>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 12:50:38",
    "text": "please tell more!"
  },
  {
    "text": "We have a very long page of previous webinars we have hosted.  Right now it is a mess and I want to be able to filter them, or have them conditionally render based on a users action -- ie click a category or tag.\n\nI have written the custom module to make the marketing teams life easier for uploading the webinars.  But I need to sort out the filter option.\n\nDoes this help??  <@U7SL518D6>",
    "time_stamp": "2018-12-07 13:04:07"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:07:52",
    "text": "regarding the filtering - easy suggestion, on your .card-deck  element, render data attributes for each of the things you’re filtering by.\n\nExample if the cards have categories, you’d have an attribute `data-category=\"CATEGORY NAME OR ID HERE\"`"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 13:09:37",
    "text": "^ Nevermind then Jon, that was what I was thinking of; it's how I would do it in React or Vue, that's why I said \"pretty sure at least\" lol. It would probably need to be done at the template level then."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:10:32",
    "text": "Then `$(\".card-deck\").each()` to loop through all the cards getting all of their category names and add them to an array. loop through that array to generate a select field or checkbox input, and onChange of those elements `.hide()` and `.show()` the cards based on if they match the filters"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:11:23",
    "text": "yea, and in a coded template or a hubl module in a site that still has those"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:14:10",
    "text": "fadeOut"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:14:27",
    "text": "Make it purdy"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:14:38",
    "text": "Or addClass"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:14:57",
    "text": "And have some crazy css transitions"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:16:26",
    "text": "If you’re feeling adventurous, you could do the whole thing in vue too, and it would just work backwards, youd pass all the data into a vue data object then just v-for the cards. and manipulate the data instead of dealing with the hiding and showing stuff. Then you get the added benefit of this amazingness\n<https://spin.d.pr/Io3SQV+>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:17:04",
    "text": "That is pretty amazing"
  },
  null,
  null,
  null,
  null
]
[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2019-02-27 02:32:18",
    "text": "If like me you build a one off page that really doesn’t need it, just open a &lt;style&gt; tag and open a comment /* i think at some point the comment does get closed but then it get’s ignored as broken CSS :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Christoph Klepke",
      "poster_handle": "christoph.klepke"
    },
    "time_stamp": "2019-02-27 03:17:05",
    "text": "Hi there gang. I have a question regrading the `blog_tags` function. As far as I understand it, it shows the most used tags across all blogpost of one specific blog. What if I only want the tags from one specific post on the page? Is there a method to do this? All I want is the respective tahs of an article showing in the top section of the article.\nThank you very much for your help. Really appreciate it.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-27 09:40:58"
      },
      {
        "time_stamp": "2019-02-27 09:41:42"
      },
      {
        "time_stamp": "2019-02-28 02:07:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-02-27 03:50:19",
    "text": "Hi! Another question; is it possible to get the menu voice from an advanced menu and print out as I want the markup? I would like that we can manage/edit the menu via the menu tool of HubSpot, but then in the template I want to print out the menu as I want.",
    "reply_count": 16,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-02-27 06:40:52"
      },
      {
        "time_stamp": "2019-02-27 07:33:32"
      },
      {
        "time_stamp": "2019-02-27 07:40:45"
      },
      {
        "time_stamp": "2019-02-27 07:54:23"
      },
      {
        "time_stamp": "2019-02-27 07:55:08"
      },
      {
        "time_stamp": "2019-02-27 07:59:51"
      },
      {
        "time_stamp": "2019-02-27 08:09:16"
      },
      {
        "time_stamp": "2019-02-27 08:09:26"
      },
      {
        "time_stamp": "2019-02-27 08:10:46"
      },
      {
        "time_stamp": "2019-02-27 08:10:59"
      },
      {
        "time_stamp": "2019-02-27 09:11:51"
      },
      {
        "time_stamp": "2019-02-27 09:24:18"
      },
      {
        "time_stamp": "2019-02-27 09:24:32"
      },
      {
        "time_stamp": "2019-02-27 09:24:51"
      },
      {
        "time_stamp": "2019-02-27 10:52:15"
      },
      {
        "time_stamp": "2019-02-28 02:33:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-02-27 06:20:14",
    "text": "I'm working on an email-template and i'm struggling with getting the datetimeformat right. I've set the \"Date and number format\" to Sweden in the Account default settings.\n\n{{ module.datetime|datetimeformat('%A, %e %B') }}\n\nI'd like it to return the months and days full name in swedish.\n\nAny suggestions, haven't found much in HS-knowledge?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-27 06:40:52",
    "text": "This is a highly desired item but not yet doable. if you want a menu with a custom markup try using the Simple Menu as a global Item. It wont allow you to use the menu manager though"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 07:33:32",
    "text": "Not documented yet, but you can try the `menu(menu_id)` function"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-27 07:40:45",
    "text": "Herm... when did this happen?"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-02-27 07:54:23",
    "text": "<@U6GNQ7JBU> Oh nice, I will try this!"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 07:55:08",
    "text": "The full possibilities are `menu(menu_id, root_type, root_key)`"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-02-27 07:59:51",
    "text": "<@U6GNQ7JBU> And how can I use it with Hubl?\n{% for menu_item in menu() %}?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 08:09:16",
    "text": "Depends on which root_type you use"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 08:09:26",
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-tags#menu>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 08:10:46",
    "text": "It is a nested node structure. Each node has variables `label`, `url`, `children`…"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 08:10:59",
    "text": "Where children is a list of that nodes child nodes"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-02-27 09:11:51",
    "text": "<@U6GNQ7JBU>\nI'm trying to following:\n\n{% menu = menu(&lt;my_menu_id&gt;,'site_root','horizontal') %}\n   {% for item_menu in menu %}\n   {{ item_menu.label }}\n{% endfor %}\n\nBut I don't get any label"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 09:24:18",
    "text": "Should be `menu = menu(&lt;my_menu_id&gt;,'site_root').children `"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 09:24:32",
    "text": "Since `site_root` is an empty node at the top of your site root"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 09:24:51",
    "text": "Where the children are the top-level nodes"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-27 09:40:58",
    "text": "Heya <@UAXL2G8NL> in the blog post template you can use the HubL code `content.topic_list` to display the topics assigned on that particular blog. I highly encourage you to play around the Developer Info as well to check what HubL variables are available on that page/post"
  },
  {
    "text": "",
    "time_stamp": "2019-02-27 09:41:42"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-27 10:52:15",
    "edited": {
      "time_stamp": "2019-02-27 10:52:20"
    },
    "text": "That is awesome. you have made my dreams come true <@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-27 11:08:09",
    "text": "Is there any way we could print the Label on a Choice field? As I understand it only prints the chosen value."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-27 14:37:32",
    "edited": {
      "time_stamp": "2019-02-27 14:39:20"
    },
    "text": "nevermind the fact this could be a bad idea in the wrong hands.\n\n*Does HubSpot actively prevent recursive macros?*\n\nto clarify putting a macro inside of itself.\n\nI have a project where this would be really stinkin’ useful but am hitting a snag. I know my macro would not continue infinitely.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-27 15:31:15"
      },
      {
        "time_stamp": "2019-02-27 15:55:09"
      },
      {
        "time_stamp": "2019-02-27 16:01:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-27 14:47:48",
    "text": "I’m gonna lean towards yes there’s something server-side preventing recursion"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-27 14:48:53",
    "text": "<https://github.com/HubSpot/jinjava/issues/77>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-27 14:50:00",
    "text": "heh the solution someone had is essentially what I’m trying to do, but it’s not actually working"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-27 15:31:15",
    "text": "yes. We’ve seen customers get into trouble with that too many times."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-27 15:55:09",
    "text": "how about put training wheels on the functionality, like was done with HubDB, and blog functions.\n\nlimit recursion to x levels deep?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-27 16:01:33",
    "text": "that way the people who know what they’re doing can solve for most situations. while preventing people who don’t know enough to be doing it, from taking down servers with infinite loops"
  }
]
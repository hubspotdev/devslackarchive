[
  {
    "text": "I am using a CrmAssociationTable component which I only have 3 columns but I don't have proper control over controlling the size / styling of the columns.  I don't want a scroll bar when clearly there is plenty of room to display these 3 columns.  Am I missing something?  (see the screen shot - the part on the right is another card in the sidebar just for reference next to the middle record column)",
    "time_stamp": "2024-12-09 01:11:16",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-12-09 03:45:46"
      },
      {
        "time_stamp": "2024-12-09 06:38:54"
      },
      {
        "time_stamp": "2024-12-09 06:44:32"
      },
      {
        "time_stamp": "2024-12-09 06:50:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stacey Thomas",
      "poster_handle": "stacey.thomas"
    },
    "time_stamp": "2024-12-09 03:45:46",
    "text": "I would +1 a feature request on this personally, as I don't think its currently possible and I actually avoid using this element for that reason.\n\nFor now, I would format a table using individually received associated properties, and then have more control over styling it."
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-12-09 06:38:54",
    "text": "Thanks for that advice.  It's just that using this component was easier because I didn't have to write additional backend code to bring in the associated data.  I don't believe I can do that with actions.fetchCrmObjectProperties which I believe will only bring in direct properties of that main object, not associations data.  Maybe there is another action that will?  If not, I can bite the bullet and write the code needed on my backend, was just was trying to quickly use a component that didn't require the extra step :thinking_face:  In general, I wish there was more styling to control layout in many of these components."
  },
  {
    "poster": {
      "poster_name": "Stacey Thomas",
      "poster_handle": "stacey.thomas"
    },
    "time_stamp": "2024-12-09 06:44:32",
    "text": "Yeah it's a real pain, and alot of extra work compared to how the component works on it's own. I agree it's a shame that more styling isnt available, I have the same issue with my tables in this way (a column that only contains a short string takes up 40% of the width...) and it's annoying from a user perspective as well.\n\nNot sure if anyone else has any idea of how this is possible without making a call to get associated objects ID's, getting the properties from them that you need to filter, doing said filtering, and then retrieving properties to display?"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-12-09 06:50:26",
    "text": "I'm a little lucky in my use case because all the data I want is coming from an integration with another system and I have that data saved in  my local database in my backend (that is a personal must have for me usually if I can).  So I don't have to get the association - I made the associations with a custom object when I brought in all the data.  Now I *could* just bring it over again from the local db.   But this issue in general requires some updated components I believe.  I hope they consider that."
  },
  {
    "poster": {
      "poster_name": "Christian Barras",
      "poster_handle": "tirabc"
    },
    "time_stamp": "2024-12-09 07:13:25",
    "text": "<@U01QVR44MEY> <@U05KNCMAE7N> any idea for this ?"
  },
  {
    "poster": {
      "poster_name": "Oliver Bojahr",
      "poster_handle": "oliver.bojahr"
    },
    "time_stamp": "2024-12-09 07:30:15",
    "edited": {
      "time_stamp": "2024-12-09 07:32:47"
    },
    "text": "Likely a Bug:\n\nWe're using conditional logic but it does not recognize changes made to properties on our page using `CrmPropertyList`.\n\nConsider you have a controlling property A and and a required property B.\n\n1. Set property B in `CrmPropertyList` -> Property B has been saved\n2. Set Property A the side panel opens but property B is empty, although it has been set before."
  },
  {
    "poster": {
      "poster_name": "Aanchal Sheth (HubSpot PM)",
      "poster_handle": "asheth"
    },
    "time_stamp": "2024-12-09 08:40:01",
    "text": "Hi Christian,\nYes, you're right that your older card should be working. It is your choice if you would like to rebuild with UI Extensions :slightly_smiling_face: The new React-based framework is much more powerful and <https://developers.HubSpot.com/beta-docs/guides/crm/public-apps/migrate-a-public-app-to-projects|here's how to migrate an existing app to a new framework>."
  },
  {
    "poster": {
      "poster_name": "Austin RZ",
      "poster_handle": "austin101"
    },
    "time_stamp": "2024-12-09 09:15:04",
    "text": "From what I've read this isn't really supported yet - you'll need to either maintain one codebase for your UI extensions and modify the files in your CICD flow (e.g. check environment, set values, upload/deploy code to respective environment extension/app), or maintain multiple codebases for your different environments and specify the values manually, while keeping the actual code between the folders in sync as you change/deploy the extensions to each environment"
  },
  {
    "poster": {
      "poster_name": "Purusothaman K",
      "poster_handle": "pk"
    },
    "time_stamp": "2024-12-09 21:41:43",
    "text": "Hi Team,\nWe already have a HubSpot Marketplace app. We have recently updated it to include the UI Extension feature. Could anyone guide us on how to submit these changes for a security review? Additionally, I would appreciate it if you could outline the entire process for submission.\nThank you in advance for your help!",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-12-11 08:26:42"
      },
      {
        "time_stamp": "2024-12-11 21:35:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sriya Mitra",
      "poster_handle": "sriya.mail"
    },
    "time_stamp": "2024-12-09 21:59:54",
    "text": "Hi I am looking for a sample example of a github project that highlights how a HubSpot  public App is build ( except the quick start example) There are lot of private app example but not any with Public app with Fetch() call. Would appreciate if there is an end to end example of that with Oauth ( Redirect URL)  example .",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-12-11 08:23:45"
      },
      {
        "time_stamp": "2024-12-19 20:52:59"
      }
    ]
  }
]
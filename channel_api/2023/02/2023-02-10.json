[
  {
    "poster": {
      "poster_name": "Andrea Candian",
      "poster_handle": "andrea.candian"
    },
    "time_stamp": "2023-02-10 02:49:33",
    "edited": {
      "time_stamp": "2023-02-10 02:49:56"
    },
    "text": "I have some problems too: I can get a list of the engagements connected to a contact, but apart from the ID it's unknown if those are emails o what type of engagements... How I am supposed to retrieve theme if I cannot know their type?"
  },
  {
    "poster": {
      "poster_name": "Andrea Candian",
      "poster_handle": "andrea.candian"
    },
    "time_stamp": "2023-02-10 03:25:13",
    "text": "Hi I'm trying to read the attachments of a contact via API:\nwith the <https://developers.HubSpot.com/docs/api/crm/associations|Association API> i get a list of IDs and the type of the association is 9 = Engagements.\nBut _*which engagements*_?? Email? Call? there's a separate api for each of those\nHow can I understand which one do I have to use?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-02-10 07:29:05"
      },
      {
        "time_stamp": "2023-02-10 07:29:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 07:05:30",
    "text": "Each of the engagements are an object just like contacts, companies, and deals. So you have to get each of the types individually (calls, emails, etc...) for the full object, or you can just get the objectids for the attachments and then lookup the associations for it."
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 07:11:26",
    "text": "Unfortunately, it still didn't work."
  },
  {
    "poster": {
      "poster_name": "Andrea Candian",
      "poster_handle": "andrea.candian"
    },
    "time_stamp": "2023-02-10 07:26:48",
    "edited": {
      "time_stamp": "2023-02-10 07:27:37"
    },
    "text": "This is crazy, if each engagements is a different object why if you search for a contact associations the type of the association is only \"Egangements\"?\nDo they want me to consumen all the API calls?"
  },
  {
    "poster": {
      "poster_name": "Andrea Candian",
      "poster_handle": "andrea.candian"
    },
    "time_stamp": "2023-02-10 07:29:05",
    "text": ":exploding_head:\n<https://HubSpotdev.slack.com/archives/C2YHAHB6K/p1676037930309679?thread_ts=1674129869.653469&amp;cid=C2YHAHB6K>"
  },
  {
    "poster": {
      "poster_name": "Andrea Candian",
      "poster_handle": "andrea.candian"
    },
    "time_stamp": "2023-02-10 07:29:13",
    "text": "This cannot be true..."
  },
  {
    "poster": {
      "poster_name": "Raphael Santos da Desk Manager",
      "poster_handle": "raphael.santos"
    },
    "time_stamp": "2023-02-10 07:36:50",
    "edited": {
      "time_stamp": "2023-02-10 07:38:56"
    },
    "text": "Hello Guys, good morning how are you?\nI'm trying to get the \"line items\" data for a given DEAL, but the API\ndeals/search does not return these values ​​separately, it just adds up the total items.\nIs it possible to get this return?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-10 07:45:20"
      },
      {
        "time_stamp": "2023-02-10 07:52:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrea Candian",
      "poster_handle": "andrea.candian"
    },
    "time_stamp": "2023-02-10 07:45:20",
    "text": "Did you use the association API? Deals and product are different objects"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-10 07:45:59",
    "text": "I would believe so, but I’m not 100% sure. I don’ t believe language creates a new blog"
  },
  {
    "poster": {
      "poster_name": "Raphael Santos da Desk Manager",
      "poster_handle": "raphael.santos"
    },
    "time_stamp": "2023-02-10 07:52:41",
    "text": "I just managed to realize this, I saw that it really does not bring this information together, before that I need to create this association.\nThank you very much, I will try to create and return anything here :)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 08:00:52",
    "text": "What did you find though? was it a custom property"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 08:02:31",
    "text": "I think it was, but when I created a new custom property of datetime data type, the <http://make.com|make.com> integration still gave the same value (midnight today UTC)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 08:04:38",
    "text": "Did you create that property using the API?"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 08:04:49",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 08:05:36",
    "text": "and you did make sure to send the data to the new property instead of the old one right? also can I see the request you used to create the property?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 08:06:12",
    "text": "That's not how association types come it, they will say something like CALL_TO_CONTACT or CONTACT_TO_EMAIL"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 08:09:18",
    "edited": {
      "time_stamp": "2023-02-10 08:11:01"
    },
    "text": "```const HubSpot = require('@HubSpot/api-client');\n\nconst HubSpotClient = new HubSpot.Client({\"accessToken\":XXXXXXXXXXXXX});\n\nconst PropertyCreate = { name: \"created_datetime\", label: \"Creation Date/Time\", type: \"datetime\", fieldType: \"date\", groupName: \"invoicing\", options: [], displayOrder: 2, hasUniqueValue: false, hidden: false, formField: true };\nconst objectType = \"ticket\";\n\ntry {\n  const apiResponse = await HubSpotClient.crm.properties.coreApi.create(objectType, PropertyCreate);\n  console.log(JSON.stringify(apiResponse.body, null, 2));\n} catch (e) {\n  e.message === 'HTTP request failed'\n    ? console.error(JSON.stringify(e.response, null, 2))\n    : console.error(e)\n}```"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 08:10:44",
    "text": "I made sure I mapped it to the new property, too."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 08:12:55",
    "text": "type needs to be dateTime"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 08:13:33",
    "text": "ugh"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 08:13:49",
    "text": "that's annoying"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 08:13:59",
    "text": "HubSpot might take into account the lowercase but just want to double check"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-02-10 08:14:12",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Bruno Decruz",
      "poster_handle": "brunodecruz.05"
    },
    "time_stamp": "2023-02-10 09:00:34",
    "text": "how i can mention a user in a meeting by HubSpot api",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-02-10 09:08:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:08:56",
    "text": "<https://HubSpotdev.slack.com/archives/CBA9UA4EN/p1676044838342689>"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:20:59",
    "text": "Hey all,\n\nHas anyone managed to figure out how to set what domain a file can use via the API?",
    "reply_count": 65,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-02-10 09:21:36"
      },
      {
        "time_stamp": "2023-02-10 09:21:48"
      },
      {
        "time_stamp": "2023-02-10 09:22:04"
      },
      {
        "time_stamp": "2023-02-10 09:22:29"
      },
      {
        "time_stamp": "2023-02-10 09:22:42"
      },
      {
        "time_stamp": "2023-02-10 09:22:52"
      },
      {
        "time_stamp": "2023-02-10 09:22:57"
      },
      {
        "time_stamp": "2023-02-10 09:23:45"
      },
      {
        "time_stamp": "2023-02-10 09:23:56"
      },
      {
        "time_stamp": "2023-02-10 09:24:02"
      },
      {
        "time_stamp": "2023-02-10 09:24:22"
      },
      {
        "time_stamp": "2023-02-10 09:24:52"
      },
      {
        "time_stamp": "2023-02-10 09:25:02"
      },
      {
        "time_stamp": "2023-02-10 09:25:09"
      },
      {
        "time_stamp": "2023-02-10 09:25:29"
      },
      {
        "time_stamp": "2023-02-10 09:25:36"
      },
      {
        "time_stamp": "2023-02-10 09:31:11"
      },
      {
        "time_stamp": "2023-02-10 09:31:14"
      },
      {
        "time_stamp": "2023-02-10 09:31:57"
      },
      {
        "time_stamp": "2023-02-10 09:40:54"
      },
      {
        "time_stamp": "2023-02-10 09:41:32"
      },
      {
        "time_stamp": "2023-02-10 09:46:54"
      },
      {
        "time_stamp": "2023-02-10 09:47:07"
      },
      {
        "time_stamp": "2023-02-10 09:47:34"
      },
      {
        "time_stamp": "2023-02-10 09:47:42"
      },
      {
        "time_stamp": "2023-02-10 09:48:00"
      },
      {
        "time_stamp": "2023-02-10 09:48:23"
      },
      {
        "time_stamp": "2023-02-10 09:48:35"
      },
      {
        "time_stamp": "2023-02-10 09:48:38"
      },
      {
        "time_stamp": "2023-02-10 09:48:41"
      },
      {
        "time_stamp": "2023-02-10 09:49:32"
      },
      {
        "time_stamp": "2023-02-10 09:56:25"
      },
      {
        "time_stamp": "2023-02-10 10:04:14"
      },
      {
        "time_stamp": "2023-02-10 10:07:58"
      },
      {
        "time_stamp": "2023-02-10 10:08:19"
      },
      {
        "time_stamp": "2023-02-16 12:01:29"
      },
      {
        "time_stamp": "2023-02-17 11:55:42"
      },
      {
        "time_stamp": "2023-02-17 12:13:10"
      },
      {
        "time_stamp": "2023-02-17 12:20:57"
      },
      {
        "time_stamp": "2023-02-17 12:23:31"
      },
      {
        "time_stamp": "2023-02-17 12:24:39"
      },
      {
        "time_stamp": "2023-02-17 12:25:38"
      },
      {
        "time_stamp": "2023-02-17 12:26:00"
      },
      {
        "time_stamp": "2023-02-17 12:26:32"
      },
      {
        "time_stamp": "2023-02-17 12:26:51"
      },
      {
        "time_stamp": "2023-02-17 12:27:04"
      },
      {
        "time_stamp": "2023-02-17 12:27:07"
      },
      {
        "time_stamp": "2023-02-17 12:27:10"
      },
      {
        "time_stamp": "2023-02-17 12:27:20"
      },
      {
        "time_stamp": "2023-02-17 12:27:31"
      },
      {
        "time_stamp": "2023-02-17 12:27:37"
      },
      {
        "time_stamp": "2023-02-17 12:27:43"
      },
      {
        "time_stamp": "2023-02-17 12:27:45"
      },
      {
        "time_stamp": "2023-02-17 12:28:11"
      },
      {
        "time_stamp": "2023-02-17 12:28:21"
      },
      {
        "time_stamp": "2023-02-17 12:29:46"
      },
      {
        "time_stamp": "2023-02-17 12:29:57"
      },
      {
        "time_stamp": "2023-02-17 12:30:23"
      },
      {
        "time_stamp": "2023-02-17 12:35:00"
      },
      {
        "time_stamp": "2023-02-17 12:37:12"
      },
      {
        "time_stamp": "2023-02-17 12:38:08"
      },
      {
        "time_stamp": "2023-02-17 12:41:37"
      },
      {
        "time_stamp": "2023-02-17 13:04:25"
      },
      {
        "time_stamp": "2023-02-23 09:58:52"
      },
      {
        "time_stamp": "2023-02-23 09:59:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:21:36",
    "text": "For file manager access or for a webpage?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:21:48",
    "text": "Sorry, for uploading files"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:22:04",
    "text": "All the files I upload through API go to a HubSpot temp domain instead of a actual domain, which causes errors loading in content :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:22:29",
    "text": "File uploaded to the CMS/Design manager? or the file tool?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:22:42",
    "text": "File tool"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:22:52",
    "text": "Looking right now"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:22:57",
    "text": "Sweet thanks dude"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:23:45",
    "text": "<https://knowledge.HubSpot.com/files/copy-and-update-the-url-of-files-uploaded-to-the-file-manager>\n\nLooks like you can do it this way"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:23:56",
    "text": "Think I found how to do it running tests"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:24:02",
    "text": "oh sweet"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:24:22",
    "text": "and you don't want to do it the above way?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:24:52",
    "text": "Nah - files coming in via an API should go to one domain and the others should go to another. It's a stupid situation lol"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:25:02",
    "text": "understood"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:25:09",
    "text": "Basically: if you try to put a subtitle track to a video, it _must_ have the same origination domain as the original video player"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:25:29",
    "text": "lol that's ridiculous"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:25:36",
    "text": "yeah its the oddest thing"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:31:11",
    "text": "just realized I didn't have another domain connected to this account"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:31:14",
    "text": "one moment"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:31:57",
    "text": "np ty for helping"
  },
  {
    "text": "7%",
    "time_stamp": "2023-02-10 09:40:54"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:41:32",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:46:54",
    "text": "found the solution"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:47:07",
    "text": "as long as the domain is under public no index"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:47:34",
    "text": "you can just swap the everything before /hubfs/ with your perferred domain"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:47:42",
    "text": "oh wow thats a awesoem find"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:48:00",
    "text": "is that through the domain settings?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:48:23",
    "text": "Nope HubSpot just hosts the files on all domains"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:48:35",
    "text": "ohhhh"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:48:38",
    "text": "interesting"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 09:48:41",
    "text": "sweet thanks dude"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:49:32",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 09:56:25",
    "text": "I clicked all the options for my domain but I think you should only need to have website setup"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-02-10 10:04:14",
    "text": "Yeah...I didn't even think of trying something like programaticcaly adding the domain, I was just straight up using the file system lol but this worked, thank you"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 10:07:58",
    "text": "of course, yeah certain things like that they should definitely mention in the docs"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 10:08:19",
    "text": "<@U03MLCLS5BN> do you think you might be able to mention this to the writer?"
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-02-10 10:56:13",
    "text": "```Cannot read properties of undefined (reading 'properties')```\nIt’s saying that contactResult.body is undefined after the first API call. I would console.log contactResult and go from there. You may be passing in a contact objectId that does not exist?\n\nAlso I don’t think it’s possible to have two contacts with the same email address in HubSpot."
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2023-02-10 10:58:32",
    "text": "The Node client is prone to bugs and errors, in my experience, deeming it fairly unreliable. Particularly so recently - I’ve had multiple integrations that were previously working without issue, failing on me. I was unable to find a fix within the client itself, so opted to migrate everything to using axios.\n\nNeedless to say, I’d strongly suggest using something you can reliably depend on, such as axios, fetch, or request.\n\nWhile you can probably identify the engagement type you’r working with - you can use the v1 of the engagements API to get all of them. Link <https://legacydocs.HubSpot.com/docs/methods/engagements/get-all-engagements|here.>\n\nGoing to assume you’ve already seen the v3. If not, let me know and I can link you there."
  },
  {
    "poster": {
      "poster_name": "Reed Iandolo",
      "poster_handle": "riandolo"
    },
    "time_stamp": "2023-02-10 14:16:26",
    "text": "Wanted to bring an API documentation mistake up that hopefully someone on the HubSpot team can get eyes on.\nThe <https://developers.HubSpot.com/docs/api/crm/search|Search API documentation> is very trickily incorrect. In the second shell script section where it is describing how to include multiple filters to have AND or OR operators, it gives the following example\n```curl <https://api.hubapi.com/crm/v3/objects/contacts/search> \\\n  --request POST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n    \"filterGroups\":[{\n      \"filters\": [\n        {\n          \"propertyName\": \"firstname\",\n           \"operator\": \"EQ\",\n            \"value\": \"Alice\"\n        }],\n      \"filters\":[\n          {\n            \"propertyName\": \"lastname\",\n            \"operator\": \"NEQ\",\n            \"value\": \"Smith\"\n          }],\n     \"filterGroups\":[{\n        \"filters\": [\n            {\n            \"propertyName\": \"email\",\n            \"operator\": \"HAS_PROPERTY\"\n           }\n]}\n]\n}]\n}'```\nIf you actually pull the JSON out into an editor and format it, you’ll notice that within the first “filterGroups” section, there are two identically named keys of “filters”. If you actually use this, the API will NOT give back an error, but instead will only include one of the filters in the actual search. Because of this it seemingly behaves like it is working when it is not. I am going to even disregard the second filter group and just focus on the first filter group, which if you pull it out of the docs is as follows. HubSpot describes this as “For example, the request below searches for all contacts with a first name of `Alice` AND a last name that is not `Smith`_,”_\n```{\n    \"filterGroups\":[{\n      \"filters\": [\n        {\n          \"propertyName\": \"firstname\",\n           \"operator\": \"EQ\",\n            \"value\": \"Alice\"\n        }],\n      \"filters\":[\n          {\n            \"propertyName\": \"lastname\",\n            \"operator\": \"NEQ\",\n            \"value\": \"Smith\"\n          }]\n}]\n}```\nWhen running this query I get the following result in my test instance I get a total of 167 results\n```{\n    \"filterGroups\":[{\n      \"filters\":[\n          {\n            \"propertyName\": \"lastname\",\n            \"operator\": \"NEQ\",\n            \"value\": \"Smith\"\n          }]\n}]\n}```\nWhen running this I also get exactly 167 results, meaning the API in the first call is only parsing the second filter\n\nIf instead I run the below search in the format that I believe it should be\n```  {\n    \"filterGroups\": [\n        {\n            \"filters\": [\n                {\n                    \"propertyName\": \"firstname\",\n                    \"operator\": \"EQ\",\n                    \"value\": \"Alice\"\n                },\n                {\n                    \"propertyName\": \"lastname\",\n                    \"operator\": \"NEQ\",\n                    \"value\": \"Smith\"\n                }\n            ]\n        }\n    ]\n  }```\nI get back exactly one result for my “Alice Green” contact as expected",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-10 14:17:35"
      },
      {
        "time_stamp": "2023-02-10 14:18:12"
      },
      {
        "time_stamp": "2023-02-10 14:18:30"
      },
      {
        "time_stamp": "2023-02-23 09:57:28"
      },
      {
        "time_stamp": "2023-02-23 09:57:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 14:17:35",
    "text": "Yeah those docs are due for an overhaul"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 14:18:12",
    "text": "<@U03MLCLS5BN> do you think you can mention this to the team, I know we've talked about getting changes to the search endpoint docs before but haven't really seen any changes"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-10 14:18:30",
    "text": "Super confusing for new devs to understand how the filters work"
  }
]
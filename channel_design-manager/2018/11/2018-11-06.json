[
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "text": "why???",
    "time_stamp": "2018-11-06 07:34:04"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 07:34:44",
    "text": "removes any content that i add"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 07:36:01",
    "text": "well"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 07:36:08",
    "text": "i can put words in it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 07:36:16",
    "text": "doesnt like code"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 07:40:33",
    "text": "<@UD53A9UUR> try pasting your code then immediately hitting any letter on your keyboard. you can then erase it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 07:40:38",
    "text": "see if it still erases"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 07:41:23",
    "text": "The app is built with react so I’m thinking they’re not handling pastes properly on that field. So it resets the field."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 07:41:40",
    "text": "k.  in a meeting. will give it a shot after"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-06 07:47:15",
    "text": "<@U7SL518D6> I think that is the issue. I have had that issue and used text fields for code many times recently"
  },
  {
    "poster": {
      "poster_name": "Talia Swartz",
      "poster_handle": "tswartz"
    },
    "time_stamp": "2018-11-06 08:11:02",
    "text": "Hey all! So here's the deal with HTML in text fields: We scrape out `&lt;script&gt;`s for XSS purposes on save. We also scrape out certain attributes like `class` because we want HTML to stay in the HTML+HubL section as much as possible. However, the scraping obviously sucks because your HTML just disappears with no messaging or warning. It's on my to-do list for this week to revisit this, and to basically make this experience _not_ suck. We've been considering the following: still scrape out `script`s but for other unallowed HTML just show an error message instead of making it disappear.\n\nNow that all said - it appears in Dennis's case he wants to create a field where you can embed a Meeting, and we actually built a Meeting field a while back but didn't release it to customers (I kind of forgot about it until just now tbh). I just talked to Shawn and we would like to actually release it, which would hopefully make it unnecessary to add the embed script anyway. But we're still gonna look into the HTML scraping stuff anyway too. I'm aiming to get the Meeting field out to you guys today."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 08:11:05",
    "text": "i tried typing in html and blah"
  },
  {
    "text": "",
    "time_stamp": "2018-11-06 08:11:20"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 08:11:47",
    "text": "also, i did happen to find that meetings module"
  },
  {
    "poster": {
      "poster_name": "Talia Swartz",
      "poster_handle": "tswartz"
    },
    "time_stamp": "2018-11-06 08:12:24",
    "text": "ok got it, would that do what you need in the mean time while we revisit the HTML in Text field stuff?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 08:12:33",
    "text": "yup"
  },
  {
    "poster": {
      "poster_name": "Talia Swartz",
      "poster_handle": "tswartz"
    },
    "time_stamp": "2018-11-06 08:12:49",
    "text": "ok great, updates to come on the HTML stuff then"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 08:12:56",
    "text": "thanks much!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 08:29:03",
    "text": "*Custom Modules in Email Templates*\nIs there a reason we cannot have in our custom modules a CSS pane and a CSS - inlined pane?\nI get not having JS -(it’s litterally not supported)\n\nJust thought it’d be nice if we could have CSS that the HS inliner would inline, as well as css it wont inline(for stuff like media queries)\n\nOtherwise our code in the custom modules becomes easily impossible to maintain, because we have to paste in our inlined code here.\n\nMy vision is that the way this would work would be that the top of the email has 2 style tags. one that gets inlined and one that doesn’t.\nAll of the css from the modules gets sucked up into these tags in the order the module is in the mail.\n\nI also think, if a module is set to both the email type and another type,  there should be a way to toggle between the email version and website version.\n\nYou might be thinking, “why would you want to do that?” well firstly the code you use to make an email is horrendous, and if you can have a module be multiple types then it would make sense for it to be able to be used this way."
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 13:09:48",
    "text": "that problem with typing in the help text area, and the autosave wiping out what you’re typing is still occuring",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-06 13:13:33"
      },
      {
        "time_stamp": "2018-11-06 13:14:42"
      },
      {
        "time_stamp": "2018-11-06 13:14:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ariel Luque",
      "poster_handle": "aluque"
    },
    "time_stamp": "2018-11-06 13:13:33",
    "text": "Have not been able to deploy the fix yet due to bugs in our component library."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 13:14:42",
    "text": "That’s what the github blame button is for"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 13:14:43",
    "text": "lol"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 14:48:59",
    "text": "would be pretty nice if we could code fold hubl if statements for loops and unless’s"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 14:59:58",
    "text": "i want emmet first"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-06 15:00:01",
    "text": "please"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 15:12:40",
    "edited": {
      "time_stamp": "2018-11-06 15:12:52"
    },
    "text": "I have a chaotic night tonight working late on a project otherwise I’d put more time into seeing if I can roll emmet into the <#CBBAW6Z3R|community-browser-extension>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-06 15:15:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-06 15:15:38",
    "edited": {
      "time_stamp": "2018-11-06 15:15:57"
    },
    "text": "if anyone wants to give it a shot, this is the issue for it: <https://github.com/williamspiro/HubSpot-Developer-Extension/issues/89>"
  }
]
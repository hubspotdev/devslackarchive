[
  {
    "poster": {
      "poster_name": "Sami Sundberg",
      "poster_handle": "sami.sundberg"
    },
    "time_stamp": "2024-05-17 03:53:03",
    "text": "Is there a smart way to globally identify if a block has content in it? To make it concrete, we have a `front-page.html` template that extends the `base.html` template. The defined blocks are `header` and `hero`. I would like to pass information to the `header` block about whether the `hero` block has content or not, as this should set the header's background color to either white or transparent. Or is it possible to read the content of the `hero` block from within the `header` block?"
  },
  {
    "poster": {
      "poster_name": "Wesley Clock",
      "poster_handle": "wesley575"
    },
    "time_stamp": "2024-05-17 08:25:08",
    "text": "You've been smart and helpful - I've got one more question for you.\n\nI have that valuation that gets printed onto the page ($100,000)\nHow can I turn that into a range. Example: value - (value + 200)\nResulting in: $100,000 - $100,200"
  },
  {
    "poster": {
      "poster_name": "Kayron Macon",
      "poster_handle": "kayron"
    },
    "time_stamp": "2024-05-17 08:46:59",
    "text": "not able to get this to work"
  },
  {
    "poster": {
      "poster_name": "Tony Felice",
      "poster_handle": "tf959"
    },
    "time_stamp": "2024-05-17 15:37:38",
    "edited": {
      "time_stamp": "2024-05-17 15:40:00"
    },
    "text": "This goes craaaazy. There literally HAS to be a cleaner way to do this. There HAS to be. Right?!?!\n\n(assume data has a valid recordset).  I tried selectattr, but the docs on that are sparse, and couldn’t figure out how to format that against a many-to-one. I’m literally just trying to bring the rows most relevant to the page to the front of the array.\n  `{% set pre = []  %}`\n    `{% set post = []  %}`\n    `{% for row in data %}`\n        `{% for specialty in row.specialties %}`\n            `{% if row.specialties[loop.index0].hs_id == 166377284954 %}`\n                `{% do pre.append( row ) %}`\n            `{% else %}`\n                `{% do post.append( row ) %}`\n            `{% endif %}`\n        `{% endfor %}`\n    `{% endfor %}`\n`{# is there not a better way to concat arrays? #}`\n    `{% for el in post %}`\n        `{% do pre.append( el ) %}`\n    `{% endfor %}`\n    `{% set data = pre %}`",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-05-23 14:11:25"
      },
      {
        "time_stamp": "2024-06-05 16:05:19"
      }
    ]
  }
]
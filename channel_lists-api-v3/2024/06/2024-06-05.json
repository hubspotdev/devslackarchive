[
  {
    "poster": {
      "poster_name": "Adrian Hannigan",
      "poster_handle": "adrian513"
    },
    "time_stamp": "2024-06-05 04:21:32",
    "text": "Hi, I'm trying to call `/crm/v3/lists/{listId}/memberships/join-order` as per the docs but I get a 404 error response with the message `This endpoint is not currently supported` - can anybody point me in the direction of why I'm getting that error message?",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-06-05 08:03:12"
      },
      {
        "time_stamp": "2024-06-05 08:09:13"
      },
      {
        "time_stamp": "2024-06-05 08:19:49"
      },
      {
        "time_stamp": "2024-06-05 08:26:47"
      },
      {
        "time_stamp": "2024-06-05 09:58:30"
      },
      {
        "time_stamp": "2024-06-05 10:13:09"
      },
      {
        "time_stamp": "2024-11-07 14:28:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Justin Bevolo",
      "poster_handle": "jbevolo"
    },
    "time_stamp": "2024-06-05 08:03:12",
    "text": "Hi Adrian - taking a look."
  },
  {
    "poster": {
      "poster_name": "Justin Bevolo",
      "poster_handle": "jbevolo"
    },
    "time_stamp": "2024-06-05 08:09:13",
    "text": "Give it another shot when you get a chance, it should be enabled for you now."
  },
  {
    "poster": {
      "poster_name": "Adrian Hannigan",
      "poster_handle": "adrian513"
    },
    "time_stamp": "2024-06-05 08:19:49",
    "text": ":+1: working now, thank you. As a side note - are there any plans to enable Webhooks for Lists, to allow the ability to receive events when a contact is added to or removed from a List? Or for the ability to use the Contacts Webhook to listen for those property changes?"
  },
  {
    "poster": {
      "poster_name": "Justin Bevolo",
      "poster_handle": "jbevolo"
    },
    "time_stamp": "2024-06-05 08:26:47",
    "text": "It is not currently on the roadmap, but I will bring it up with the team."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-06-05 09:54:15",
    "text": "hey <@U05Q2R4ESCA> any update from the Workflow team?"
  },
  {
    "poster": {
      "poster_name": "Will",
      "poster_handle": "wdowd"
    },
    "time_stamp": "2024-06-05 09:58:30",
    "text": "What would your expectations around that webhook be? We generate tens of billions of those membership change events every day, and *very* quickly for e.g. list edits/creates"
  },
  {
    "poster": {
      "poster_name": "Adrian Hannigan",
      "poster_handle": "adrian513"
    },
    "time_stamp": "2024-06-05 10:13:09",
    "text": "Our HubSpot Marketplace app creates topic clusters to show what content topics generate the most engagement, and can recommend similar content (from a companies own content or external partner/syndicated content) for audiences. We enable narrowing/filtering this down to lists of Contacts, but to make sure this stays up to date and relevant we need to know when a Contact has joined or left a list.\n\nCurrently the only way for us to check if Contacts have joined a list is to check daily if a list's `hs_last_record_added_at` has changed since we last checked and add the new contacts accordingly, and if a lists `hs_last_record_removed_at` has changed then we have to fetch all the contact IDs that are a member of that list to check which have left accordingly.\n\nToday we currently receive Webhooks for contact property updates for the few properties we need to consume, so being able to also receive that a contact's list memberships have changed would be helpful. But also the ability to receive a Webhook from the list itself would also enable us to not have to manually check.\n\nWe've already consumed around 1.4million of those events in the last 30 days for around 60 app installs, so I know the scale would only increase, but it would save us time manually checking, and we can add the event to a queue as our platform doesn't need to be real time.\nI also wish we were also able to select portal ids to blacklist in the Webhooks section of the developer account portal to limit bad actors/accounts we no longer want to consume since we can't force uninstall our app from an account, so that we don't have to consume and then dump the event, but that's a different story."
  },
  {
    "poster": {
      "poster_name": "Justin Bevolo",
      "poster_handle": "jbevolo"
    },
    "time_stamp": "2024-06-05 10:50:07",
    "text": "Hi Justin - they are continuing to make progress. It seems like they are preparing for a public beta soon. I will post here when I have additional updates."
  }
]
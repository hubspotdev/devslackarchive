[
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:46:45",
    "text": "``` {% widget_container \"main_flexible\" %}\n    \n    \n    {% module \"module_1535137547367381\" module_id=\"3569098\" label=\"Main Header\", no_wrapper=True %}\n    {% module \"module_15351407250061920\" module_id=\"3570063\" label=\"homepage\", no_wrapper=True %}\n    {% module \"module_15351520001242493\" module_id=\"3569866\" label=\"Services\", no_wrapper=True %}\n    {% module \"module_15351521018362516\" module_id=\"3571778\" label=\"Portfolio\", no_wrapper=True %}\n    {% module \"module_15351521559152539\" module_id=\"3571779\" label=\"Testimonials\", no_wrapper=True %}\n    {% module \"module_15351522504602562\" module_id=\"3571780\" label=\"Contact\", no_wrapper=True %}\n\n    {% end_widget_container %} ```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:48:04",
    "text": "ahh, you’re using it on custom modules and they’re inside of a flex column. no_wrapper=true wont work on modules inside of a flex column because the wrapping tags are used to make those modules editable/drag n droppable in the editor."
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:48:32",
    "text": "right"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:48:41",
    "text": "makes sense :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:49:22",
    "text": "i noticed you changed the snippet for adding modules into coded templates"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:50:17",
    "text": "I didn’t, but the HS team did. They changed from id to path - both are supported. but the idea is when you have a bunch of id’s you don’t know what the heck they are and you don’t know where in your finder they are"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:50:36",
    "text": "having the path names makes it more predictable/easier to use. Also makes it easier to do local dev"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:52:03",
    "text": "yeah … it’s better like this … still don’t know why i’m getting that id or path error"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:52:26",
    "text": "i haven’t mentioned  any id’s anywhere"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:53:03",
    "text": "it’s an error in their error reporting system it’s not your fault"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 11:53:28",
    "text": "it allows you to use the path OR the ID, you have to have one of them, that’s what it’s telling you. It’s a false alarm shouldn’t be showing since you have path"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:54:02",
    "text": "ok … hope will be sorted soon"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-02-25 11:54:07",
    "text": "thanks for your time"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:20:04",
    "text": "why when i do a sort on topic names does it return the topic in a [ ]?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:20:08",
    "text": "`{{ item|sort(False, False, \"name\") }}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:22:27",
    "text": "because topics are arrays with a slug and a name"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:22:51",
    "text": "but i just ask for {{ item }}, i dont get the []"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:23:03",
    "text": "i figured it had something to do with being in a n array"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:23:11",
    "text": "I think it’s a shorthand thing they did to make our life slightly easier"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:23:26",
    "text": "there are a few things like that I’ve noticed"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:23:30",
    "text": "so i just need to replace?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:23:47",
    "text": "not a biggie.  just more curious that anything"
  },
  {
    "time_stamp": "2019-02-25 12:24:01",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:24:08",
    "text": "well, idk about replace, you could just do `item.name`"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:24:14",
    "text": "ahhhhh"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:24:17",
    "text": "smart"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:25:13",
    "text": "so"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:25:14",
    "text": "`{{ item.name|sort(False, False, \"name\") }}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:25:28",
    "text": ":faceplam:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:25:31",
    "text": "heh"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:26:26",
    "text": "lol you loop through ` item|sort(False, False, \"name\") ` in a for loop and `{{item.name}}` where you want to print it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:26:41",
    "text": "i got it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:26:46",
    "text": "i got it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:26:50",
    "text": "dont you worry"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:26:53",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:26:55",
    "text": ":worried:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:27:40",
    "text": "i mean. it is right there in the docs.  jeeze, d"
  },
  {
    "time_stamp": "2019-02-25 12:27:59",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:28:32",
    "text": "dog needs to learn how to drift"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 12:28:46",
    "text": "as do i"
  },
  {
    "text": "Any idea why this repeater module isn't working? It is seeing the &lt;h6&gt; hubl, but the image and sponsor description aren't coming through.",
    "time_stamp": "2019-02-25 12:53:03",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-25 13:08:16"
      },
      {
        "time_stamp": "2019-02-25 13:08:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 12:58:16",
    "text": "stupid question <@U795QFHDE> but it has to be asked. do you have a default image set? if not it wont show"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-02-25 13:02:59",
    "text": "Just set the default image and still cant get it to show on publish"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-02-25 13:03:11",
    "text": "Only thing showing is the h6 tag for some reason, grr."
  },
  {
    "poster": {
      "poster_name": "Danielle Peters",
      "poster_handle": "dpeters"
    },
    "time_stamp": "2019-02-25 13:03:41",
    "text": "since you’re in that for loop, do you need to do `item.` instead of `module.`?"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-02-25 13:05:31",
    "text": "`item` fixed the p tag, still nothing on the img"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 13:08:16",
    "text": "remove the if statement and see if anything shows up"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 13:08:27",
    "text": "also <@U26H0JQ05> is right, you’re calling the image like you would if it wasn’t in a repeater"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 13:08:42",
    "text": "and def change module to item"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 13:08:47",
    "text": "for sample code chandler do copy snippet on your repeater group and paste it in, compare to your code"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-25 13:08:50",
    "text": "should become obvious"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-02-25 13:09:53",
    "text": "yep. thanks guys"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 13:10:24",
    "text": "wouldnt it be magical if when you flipped the repeater switch, the items in it magically changed to item instead of module in the html panel"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-25 13:10:41",
    "text": "i know...i know..it wont, but...sigh"
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 14:29:58",
    "edited": {
      "time_stamp": "2019-02-25 14:33:30"
    },
    "text": "ok guys, I've got the weirdest thing going on here... Trying to use contact properties in a mail template but this happens here...\n```\n{% set my_property = contact.my_property %}\n{% set foo_bar = 'foobar' %}\n\n{{ my_property }} // prints out 'foobar'\n{{ foo_bar }} // prints out 'foobar' as well\n\n{% if my_property == 'foobar' %}\n    {# Nope... doesn't hit the if... #}\n    FOOBAR!\n{% else %}\n    {# But instead prints out: \"foobar is not foobar\" #}\n    {{ my_property }} is not foobar\n{% endif %}\n\n{% if foo_bar == 'foobar' %}\n    {# yep, this works.. #}\n    Foobar is indeed foobar...\n{% endif %}\n```",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-25 14:42:51"
      },
      {
        "time_stamp": "2019-02-25 15:05:06"
      },
      {
        "time_stamp": "2019-02-25 15:33:51"
      },
      {
        "time_stamp": "2019-02-25 15:34:19"
      },
      {
        "time_stamp": "2019-02-25 15:36:42"
      },
      {
        "time_stamp": "2019-02-25 15:36:51"
      },
      {
        "time_stamp": "2019-02-25 15:40:08"
      },
      {
        "time_stamp": "2019-02-25 15:40:12"
      },
      {
        "time_stamp": "2019-02-25 15:41:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 14:34:30",
    "text": "what is going on here? When I `pprint` the contact property, it just tells me it's a string, just like the `foo_bar` variable, it's all the same, it's equal, it should just fall in the `if` clause and tell me foobar is, well, foobar..."
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 14:34:42",
    "text": "what is this kind of voodoo?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-25 14:42:51",
    "text": "I am guessing it is this <https://github.com/HubSpot/jinjava/issues/271>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-25 15:05:06",
    "text": "You can try `contact.my_property|string` in the comparison as the workaround"
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 15:33:51",
    "text": "tried all that... I did found this though; <https://community.HubSpot.com/t5/CMS-Development/Contact-Property-If-Statement-in-Email/td-p/1895>"
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 15:34:19",
    "text": "would that be true? contact properties being evaluated _after_ the hubl?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-25 15:36:42",
    "text": "Oh this is in email"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-25 15:36:51",
    "text": "Yea that is true unfortunately"
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 15:40:08",
    "text": "oh man... that's kind of disappointed.."
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 15:40:12",
    "text": "didn't expect that"
  },
  {
    "poster": {
      "poster_name": "Jurjen Sytsma",
      "poster_handle": "jurjen"
    },
    "time_stamp": "2019-02-25 15:41:21",
    "text": "there wouldn't be a nifty workaround for that? or plans to make this happen somewhere in the future?"
  }
]
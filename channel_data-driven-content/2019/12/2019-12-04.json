[
  {
    "poster": {
      "poster_name": "Stephen Kvedaras",
      "poster_handle": "stephen.kvedaras"
    },
    "time_stamp": "2019-12-04 03:06:40",
    "text": "Hey guys, would this work? I want to get a row where a contact property matches a row's column value.\n\n```{% for row in hubdb_table_rows(1234, \"dbcolumn_name={{ contact.property_name }}\") %}\n  the value for row {{ row.hs_id }} is {{ row.&lt;column name&gt; }}\n{% endfor %}```",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-12-04 09:32:23"
      },
      {
        "time_stamp": "2019-12-05 05:37:06"
      },
      {
        "time_stamp": "2019-12-05 08:47:47"
      },
      {
        "time_stamp": "2019-12-05 10:38:24"
      },
      {
        "time_stamp": "2019-12-06 06:45:05"
      },
      {
        "time_stamp": "2019-12-09 07:08:29"
      },
      {
        "time_stamp": "2019-12-09 07:52:43"
      },
      {
        "time_stamp": "2019-12-09 07:53:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2019-12-04 03:30:13",
    "text": "Hello, trying to run a nested HubDB lookup within a loop"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2019-12-04 03:30:25",
    "text": "But its failing on the 10th row, anyone seen this before?"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2019-12-04 03:32:15",
    "text": "```{% set queryparams1 = queryparams ~ \"limit=30&amp;prop_tags__contains=LaunchingSoon&amp;orderBy=-prop_listed_date\" %}\n{% for row in hubdb_table_rows('677198', queryparams1) %}\n  &lt;tr class=\"property-list-row\"&gt;\n    &lt;td&gt;{ {{ row.hs_id }}&lt;/td&gt;                          \n    {% set queryparams2 = queryparams ~ \"rexid=\" + row.prop_agent_id %}\n    {% for agent in hubdb_table_rows(678810, queryparams2) %}\n    &lt;td&gt;\n    {{ agent.name }} \n    &lt;/td&gt;\n  {% endfor %}\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2019-12-04 03:59:32",
    "edited": {
      "time_stamp": "2019-12-04 04:01:17"
    },
    "text": "Ok, so here is the issue, you can only execute this query 10 times, as per <https://designers.HubSpot.com/docs/tools/hubdb>"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2019-12-04 04:04:51",
    "text": "Any smart ideas on a join query would be welcome! Thanks."
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2019-12-04 05:18:20",
    "text": "Ended up piping out the whole table :("
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-12-04 09:28:18",
    "text": "Hey! I've got a question related to Dynamic Pages and HubDB. Per analogy to employees example (<https://designers.HubSpot.com/docs/tutorials/how-to-build-a-dynamic-team-member-page-with-hubdb>), I would like to have a listing, but with employees in different departments, where the department is in URL: /{department}/{employee name}.\n\nAs far as I know, Dynamic Pages work with 1-level slugs like {employee name}. So the workaround is to create a dynamic page for each {department} first.\n\nBut what if my {department} are dynamic as well (based on HubDB table's contents) and/or what if I might have 100 departments?\n\nIs URL rewriting the only solution here?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-12-04 09:30:32"
      },
      {
        "time_stamp": "2019-12-04 09:32:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-12-04 09:28:46",
    "text": "<@U7D5W6EVA> I worked around such joins by nested loops (but that's nasty)"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-12-04 09:30:32",
    "text": "Perhaps <https://designers.HubSpot.com/how-to-build-multilevel-dynamic-templates>?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-12-04 09:32:23",
    "text": "it should work. did u see any issues?"
  },
  {
    "poster": {
      "poster_name": "Aleksander Krupski",
      "poster_handle": "a.krupski"
    },
    "time_stamp": "2019-12-04 09:32:40",
    "text": "Thanks <@U6GNQ7JBU>, that's probably one way to solve it (although not perfect)"
  }
]
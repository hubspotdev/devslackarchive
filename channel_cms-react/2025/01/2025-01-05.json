[
  {
    "text": "<@U02G7H60YCS> I meant at the editor level, the \"Thank you message\" field (like in the image).\nAfter more testing, the problem seems to be that anything that is enclosed between HTML tags gets removed.\nIn my image, that message will not show as it is enclosed into `<p></p>` as it is a paragraph.\nIf you remove the message completely, save the page, refresh the page and paste a new text without HTML tags (rich text editor showing `style`  for the text), it will show as Thanks you message.",
    "time_stamp": "2025-01-05 03:46:29",
    "edited": {
      "time_stamp": "2025-01-05 03:48:07"
    }
  },
  {
    "poster": {
      "poster_name": "Kostiantyn",
      "poster_handle": "konstantin597"
    },
    "time_stamp": "2025-01-05 05:13:51",
    "text": "<@U02G7H60YCS> I tried both by default and not.\n`ProductCardsComponent`\n```export const Component = ({ fieldValues, hublData }: ModuleProps&lt;Props&gt;) =&gt; {\n  const { colors, preheader, cards, content } = fieldValues;\n  return (\n    &lt;div\n      className={`overflow-x-hidden ${colors.background.rgba ? \"py-16 lg:py-[100px]\" : \"pb-[20px] lg:pb-[60px]\"}`}\n      style={{\n        backgroundColor: `${colors.background.rgba ? colors.background.rgba : \"transparent\"}`\n      }}\n    &gt;\n      &lt;div className=\"container\"&gt;\n        &lt;HeaderSection preheader={preheader} content={content} /&gt;\n\n        &lt;Island\n          module={ProductSlider}\n          hublData={hublData}\n          cards={cards}\n          clientOnly\n        /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};```\n`ProductSlider.tsx (Simple variant)`\n```&lt;IconsBlock\n  iconsHubl={iconHubl[i]?.cardBlockIcons}\n  icons={icons}\n  className=\"!gap-y-4\"\n  group={`cards[${i}]`}\n/&gt;```\n`IconsBlock.tsx`\n```&lt;Icon\n  className={`lg:size-4 transition-colors ${useBackground &amp;&amp; background.rgba ? \"group-hover:!fill-white\" : \"\"}`}\n style={{ fill: useBackground &amp;&amp; color.rgba\n                      ? color.rgba\n                      : \"var(--additional-color)\"\n  }}\n  fieldPath={`${group ? group + \".\" : \"\"}icons[${i}].icon`}\n /&gt;```\n`fields`\n```export const fields = (\n  &lt;ModuleFields&gt;\n    &lt;ContentFields withButtons={false}&gt;\n      &lt;RepeatedFieldGroup\n        label=\"Cards\"\n        name={\"cards\"}\n      &gt;\n        &lt;FieldGroup label=\"Image/icon\" name={\"mediaGroup\"} expanded={false}&gt;\n          &lt;BooleanField label=\"Select icon\" name=\"useIcon\" display=\"toggle\" /&gt;\n          &lt;ImageField\n            label=\"Image\"\n            name=\"image\"\n            resizable={false}\n            visibility={{\n              controlling_field: \"cards.mediaGroup.useIcon\",\n              operator: \"EQUAL\",\n              controlling_value_regex: \"false\"\n            }}\n          /&gt;\n          &lt;IconField\n            label=\"Icon\"\n            name=\"icon\"\n            visibility={{\n              controlling_field: \"cards.mediaGroup.useIcon\",\n              operator: \"EQUAL\",\n              controlling_value_regex: \"true\"\n            }}\n          /&gt;\n          &lt;ColorField\n            label=\"Icon color\"\n            name={\"iconColor\"}\n            showOpacity\n            visibility={{\n              controlling_field: \"cards.mediaGroup.useIcon\",\n              operator: \"EQUAL\",\n              controlling_value_regex: \"true\"\n            }}\n          /&gt;\n        &lt;/FieldGroup&gt;\n        &lt;TextField label=\"Title\" name=\"title\" /&gt;\n        &lt;TextField label=\"Text\" name=\"text\" /&gt;\n        &lt;RepeatedblockWithIconFields group=\"cards\" /&gt;\n        &lt;RepeatedButtonsFields min={0} max={1} /&gt;\n      &lt;/RepeatedFieldGroup&gt;\n    &lt;/ContentFields&gt;\n    &lt;StylesFields /&gt;\n  &lt;/ModuleFields&gt;\n);```"
  }
]
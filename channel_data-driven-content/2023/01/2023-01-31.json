[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-01-31 08:19:09",
    "text": "Hey <@UG52C29EE> I was wondering if you were working on this and maybe some updates are causing unexpected behaviors?\n\n*Currently graphql is no longer returning results with any null values _for [HS_Enum] properties_* and I’m wondering if it is being worked on or if I should freak out a little :sweat_smile:\n\nFor example:\ngql var set\n`#  $foo: {{ request.query_dict.property_name || '' }}`\n\ntype set\n`$foo: [HS_Enum]`\n\nfilter using `__in`:\n`&lt;property_name&gt;__in=$foo`"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2023-01-31 08:33:55",
    "text": "taking a look"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2023-01-31 11:19:55",
    "text": "I think I need to revert my fix that I pushed yesterday to make _*HS_Enum thing*_ to work properly. But you will see original error again after I revert it. We will need to handle few things holistically to avoid such issues and it will take a week or so.. For now I will revert."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 11:20:16",
    "text": "Thanks <@UG52C29EE>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-01-31 11:20:33",
    "text": "awesome thanks so much"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-01-31 11:48:39",
    "text": "Will this take effect by EOD or should my client expect tomorrow <@UG52C29EE>?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2023-01-31 12:12:09",
    "text": "I will update you before EOD if we can push it to PROD."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-01-31 12:15:03",
    "text": "awesome, i’ll patch things on my end til it’s resolved"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-01-31 12:15:12",
    "text": "thank you"
  },
  {
    "poster": {
      "poster_name": "Kevin-C",
      "poster_handle": "kevin285"
    },
    "time_stamp": "2023-01-31 14:22:36",
    "text": "<@U04L8B6J95G> have you been able to confirm that \"50\" is the id you're looking for? Maybe its \"48\"?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2023-01-31 15:04:30",
    "text": "The revert is done and it should work now."
  }
]
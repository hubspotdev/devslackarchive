[
  {
    "poster": {
      "poster_name": "Victoria Gumaer",
      "poster_handle": "vgumaer"
    },
    "time_stamp": "2019-06-18 05:50:43",
    "text": "Ha!  Makes sense and you are most certainly not a fool :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-06-18 16:06:59",
    "text": "It would be nice to have a field for authors where they could put their title"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-18 16:07:38",
    "text": "custom fields for authors in general would be nice"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-06-18 16:07:41",
    "text": "I’ve grabbed it before by making them put a comma after their and then their title, then extracting it with regex"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-18 16:07:59",
    "text": "think <@U2H3TT8F2> had once suggested this and had some good thoughts around how it could work"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-06-18 16:08:00",
    "text": "But that’s not wonderfully elegant"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-06-18 16:09:11",
    "text": "Also adding different social media accounts"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-18 16:09:22",
    "text": "temporary workaround you could do - but definitely overkill for just getting titles - HubDB with each author as a row. In your blog listing check if current author is in the hubdb, if it is display that row’s data"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-06-18 16:32:32",
    "text": "When we did it we just used span tags and classes inside the author bio then hid the info through css on the pages that needed it."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-06-18 16:33:08",
    "text": "For the newer one we did what Jon alluded to above with the hubdb but we had more info than just titles."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-06-18 16:33:25",
    "text": "And used the hubdb as a employee listing thing"
  }
]
[
  {
    "poster": {
      "poster_name": "Thangaraj M",
      "poster_handle": "gkthangarajvvp"
    },
    "time_stamp": "2023-09-25 02:15:09",
    "edited": {
      "time_stamp": "2023-09-25 02:47:13"
    },
    "text": "Hi All?\nI am trying to create a timeline event\nI am trying to achieve it by using client-side ie react\nBut API is getting cors error\n\nAPI Used : `<https://api.hubapi.com/crm/v3/timeline/events>`\nWith authorization\n\nOutput\n`Access to XMLHttpRequest at '<https://api.hubapi.com/crm/v3/timeline/events>' from origin '<http://localhost:3000>' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.`\n\nIt is possible to use HubSpot api with react right?\n\nHow to solve the issue?\nAnyone came across  this issue?"
  },
  {
    "poster": {
      "poster_name": "Zoloholic",
      "poster_handle": "vishane"
    },
    "time_stamp": "2023-09-25 03:14:28",
    "edited": {
      "time_stamp": "2023-09-25 03:16:48"
    },
    "text": "&gt; Hi All,\n&gt; \n&gt; How do i use the api to get the files(attachments) that are associated with a deal object when using the get deal object api.\n&gt; \n&gt; I figured it out ..using v1 api ... but i want to use v3 api"
  },
  {
    "poster": {
      "poster_name": "Manuel Buck",
      "poster_handle": "manuel074"
    },
    "time_stamp": "2023-09-25 04:37:56",
    "text": "Hi, I'd like to enable an external tool to add entries to HubDB via the API. However, I want to restrict their access to only adding entries, without the ability to modify or delete tables (which is currently the case when adding the HubDB scope to the app). Is there a way to achieve this with a professional license?"
  },
  {
    "poster": {
      "poster_name": "Manuel Buck",
      "poster_handle": "manuel074"
    },
    "time_stamp": "2023-09-25 05:35:39",
    "text": "Hi Andrew, did you find a solution for this? Would be interested if this is possible without creating a custom API or something else in between.."
  },
  {
    "poster": {
      "poster_name": "Muhammad Daniyal",
      "poster_handle": "muhammad.daniyal"
    },
    "time_stamp": "2023-09-25 07:56:26",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Muhammad Daniyal",
      "poster_handle": "muhammad.daniyal"
    },
    "time_stamp": "2023-09-25 07:56:38",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Muhammad Daniyal",
      "poster_handle": "muhammad.daniyal"
    },
    "time_stamp": "2023-09-25 07:56:55",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Muhammad Daniyal",
      "poster_handle": "muhammad.daniyal"
    },
    "time_stamp": "2023-09-25 07:57:09",
    "text": "So, what could be the issue ? Can anyone help me out here !"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-09-25 09:35:36",
    "text": "Diese Nachricht enthält interaktive Elemente."
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-09-25 10:17:39",
    "text": "Anyone have experience getting all forms back from the get all forms API endpoint? I’m sending a GET to `forms/v2/forms` and getting back 128 individual forms, but when I look in the UI there are 138 Forms. The discrepancy is because the API is only sending back “regular” forms, and not including “nonHubSpot”, “pop up” and “blog comment” forms. Any Idea how I can get the API to return these forms as well? I tried `&amp;formTypes=ALL` but that gives back a buck of meeting links and other forms I’m not interested in. Any thoughts are greatly appreciated."
  },
  {
    "poster": {
      "poster_name": "Giles Palmer",
      "poster_handle": "giles"
    },
    "time_stamp": "2023-09-25 17:56:03",
    "text": "Hi\n\nI have a serverless function that fetches a row from a HubDb table:\n\n\n`const response = await this._hsClient.apiRequest({`\n            `method: 'get',`\n            `path: `/cms/v3/hubdb/tables/5008079/rows/${rowId}`,`\n        `});`\n\nWhen I run the code locally I can get the expected response as JSON using:\n\n`const json = await response.json();`\n\nHowever when I deploy the function to HubSpot I get the following error:\n\n`TypeError: response.json is not a function`\n\nHowever I can get the JSON when deployed on HubSpot with:\n\n`const json = response.body;`\n\nI've checked the Node version etc and they are the same.  Any ideas why this is the case?  thanks."
  }
]
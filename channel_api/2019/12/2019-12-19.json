[
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 03:28:27",
    "text": "It’s working for me, i setup a test where i would invalidate the access token by calling .del on the Node Cache"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 03:28:42",
    "text": "it refreshed the token fine, so i wonder if you’re not asking for the right scopes/permissions?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 03:34:47",
    "edited": {
      "time_stamp": "2019-12-19 03:34:53"
    },
    "text": "<https://github.com/kieranja/oauth-quickstart-nodejs/blob/master/index.js> added two endpoints - if you first start the app, and Install the app, you can then visit <http://localhost:3000/test-api?hub_id=xx> to test the api works. Then after that, you can run <http://localhost:3000/test-api-refresh=xx> to invalidate the access token by deleting it from the cache. Then invoke the test-api again."
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 07:05:00",
    "text": "Is it possible to use the API to get a list of contacts who:\n1. opened a specific marketing email\n2. clicked on a specific marketing email\n"
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 07:24:31",
    "text": "<@UFBNA9K9A>"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-12-19 07:25:21",
    "text": "Your best bet is to probably use the Lists API <https://developers.HubSpot.com/docs/methods/lists/contact-lists-overview>"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-12-19 07:25:57",
    "text": "It’s easiest ot set up the list in the UI and poll the members of that list via the API, but it’s also possible to create Lists via the API with the criteria as you described"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-12-19 07:26:37",
    "text": "You may need to also make some calls to the Marketing Email API <https://developers.HubSpot.com/docs/methods/lists/marketing-email-overview> to get the Id to plug into the list critera"
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 07:27:24",
    "text": "oooh really, if I can use the criteria that I described above to create the list then its possible"
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 07:27:38",
    "text": "Thanks you <@UFBNA9K9A> let me look into it further",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-12-19 07:29:06"
      },
      {
        "time_stamp": "2019-12-19 07:29:53"
      },
      {
        "time_stamp": "2019-12-19 07:30:23"
      },
      {
        "time_stamp": "2019-12-19 11:07:21"
      },
      {
        "time_stamp": "2019-12-19 11:10:09"
      },
      {
        "time_stamp": "2019-12-19 11:12:09"
      },
      {
        "time_stamp": "2019-12-19 11:14:40"
      },
      {
        "time_stamp": "2019-12-19 11:16:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-12-19 07:29:06",
    "text": "No problem. As a way to get you started, I recommend you set the critera you want int eh UI and get the LIst via teh API so you can see how the JSON is structured.  We don’t have all criteria fully documented so that’s going to be the easiest way to see how things should be structured when you go to create lists with similar criteria"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-12-19 07:29:53",
    "text": "It’s also important to note that accounts do have limits on how many lists they can create (the number depends on their product level) so you should consider deleting lists when you no longer need them"
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 07:30:23",
    "text": "Awsome <@UFBNA9K9A> this is so much helpful"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:10:27",
    "text": "I don't understand how this could work since you are getting `hubId` with nodeCache put when you set it you called it `tokenInfo.hub_id`  at this line <https://github.com/kieranja/oauth-quickstart-nodejs/blob/adf3893e8a6f843b1e183019c313dba9da75f5f0/index.js#L173>"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:11:47",
    "edited": {
      "time_stamp": "2019-12-19 08:12:01"
    },
    "text": "also, at the same line it feels weird to me that you store the key access token under the name of hub Id"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:12:13",
    "edited": {
      "time_stamp": "2019-12-19 08:12:39"
    },
    "text": "Sorry if I'm missing out on something I'm new to programming"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:18:02",
    "edited": {
      "time_stamp": "2019-12-19 08:18:43"
    },
    "text": "I changed that line for `accessTokenCache.set(hubId, tokens.access_token, Math.round(tokens.expires_in * 0.75));` and it worked for a while yesterday at the end of the day, but this morning I still get the same error of \"Error exchanging refresh token for access token\""
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:19:55",
    "text": "Just to confirm"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:20:14",
    "edited": {
      "time_stamp": "2019-12-19 08:21:26"
    },
    "text": "You need to ensure the node application is running all the time - you cant stop and start it. That example only stores the values in memory. If you want to persist them (which you will need to) you’ll have to use a database or some other persistent store"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:21:18",
    "text": "It is hosted on heroku and I feel it \"sleeping\" when no request are made"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:21:53",
    "edited": {
      "time_stamp": "2019-12-19 08:22:36"
    },
    "text": "I have this kind of log when I make a new request \"State changed from down to starting\""
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:23:57",
    "text": "yeah so it might be that it keeps getting restarted"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:24:16",
    "text": "You shouldnt rely on it staying up, so it might make sense to implement a database connection/file storage."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:24:27",
    "text": "That’ll be your issue"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:25:43",
    "text": "I found this post <https://quickleft.com/blog/6-easy-ways-to-prevent-your-heroku-node-app-from-sleeping/>"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:25:59",
    "text": "I'll try the #1.. it might worth the try"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:26:05",
    "edited": {
      "time_stamp": "2019-12-19 08:26:31"
    },
    "text": "Yeah, but with all applications - it will crash eventually. So I would say you should really look at storing the code somewhere."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:27:17",
    "text": "never set up a database. do you have a good resource for me?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:29:22",
    "text": "So for something so simple, you may not need a database. It might just be worth using amazon S3"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:29:36",
    "edited": {
      "time_stamp": "2019-12-19 08:30:09"
    },
    "text": "I think if you want to keep this simple - i would really look at just using hapi keys. This, to me seems like the right use case for them."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:33:19",
    "text": "yes but if the app sleeps or crash I will still have the refreshing token problem even if I use hapikey, right?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:33:52",
    "text": "nope"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 08:34:08",
    "edited": {
      "time_stamp": "2019-12-19 08:34:15"
    },
    "text": "you dont need any of the oauth flow for the hapi key (for making api requests)"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 08:35:15",
    "text": "yes but receiving the webhook events to my route will require a token, no?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 09:04:32",
    "text": "receiving the webhook events wont, no. setting them up requires app installation."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 09:05:57",
    "text": "As the app is already installed your endpoint should be getting webhooks now"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 10:34:12",
    "text": "all right then I'll work the hapi key for mvp and improve it afterward"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-12-19 10:34:17",
    "text": "thanks for your help"
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 11:07:21",
    "text": "Isn't this a better option <@UFBNA9K9A> <https://developers.HubSpot.com/docs/methods/email/email_events_overview>"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-12-19 11:10:09",
    "text": "I suppose it depends on your end goal.  There may be a lot of things in the Email Events API that you won’t need so you have to deal with looping through pages of data to get the list of contacts you want.  Using the Lists API gets you there with fewer API calls.  The Email Events API gives you more atomic level data so it’s more flexible for future use cases"
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 11:12:09",
    "text": "Oooh I see but will it be easy to refine the Events API so that it gives the data that will meet this criteria\n\n*get a list of contacts who:*\n1. opened a specific marketing email\n2. clicked on a specific marketing email\n"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-12-19 11:14:40",
    "text": "With the Email Events API, the filtering for open events vs click events are on your end. With the LIsts API, HubSpot handles the filtering for you.  Filtering isn’t the most difficult thing to do so you could go either way"
  },
  {
    "poster": {
      "poster_name": "Wilbert Muza",
      "poster_handle": "titusmuza"
    },
    "time_stamp": "2019-12-19 11:16:01",
    "edited": {
      "time_stamp": "2019-12-19 11:16:28"
    },
    "text": "I got it man, you are the champ. I think the Lists API will help us reduce much work and resources to process the contacts."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-19 15:03:09",
    "text": "no worries - if you need a hand with anything else, will be here :slightly_smiling_face:"
  }
]
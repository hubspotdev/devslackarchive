[
  {
    "poster": {
      "poster_name": "Dipesh Patel",
      "poster_handle": "dipesh.99869"
    },
    "time_stamp": "2024-10-24 06:06:02",
    "text": "Hello Everyone,\n\nI am not able to get File Content with API <https://api.hubapi.com/files/v3/files/{fileId}>.  Anyone will help me? I want to fetch attached with Contact records.\n\nThanks in advance"
  },
  {
    "text": "It was from the `<https://api.hubapi.com/conversations/v3/custom-channels?hapikey={{app_access_token}}&amp;appId={{app_id}}>.` The response, see the image attached, gives me a URL which after I log in I get the 404 Not Found that I sent previously.",
    "time_stamp": "2024-10-24 06:48:09"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tommymartinez1363"
    },
    "time_stamp": "2024-10-24 06:48:44",
    "text": "Thanks for inguqiring, if you need anything else from me, i'd be happy to help!"
  },
  {
    "text": "Hey everyone,\n\nHow would I rearrange / hide certain fields in a HubSpot create object form via API?\nSee attached, I don't want the event ID to appear and I would like to re-arrange the other fields.\n\nThis is how the form shows when I create a custom object via API :slightly_smiling_face:",
    "time_stamp": "2024-10-24 07:12:29"
  },
  {
    "poster": {
      "poster_name": "Alex Kutalo",
      "poster_handle": "dalexey025"
    },
    "time_stamp": "2024-10-24 07:46:32",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-24 07:59:56",
    "text": "You need to use your developer hapikey, you can find it on the app dashboard of your developer account"
  },
  {
    "poster": {
      "poster_name": "joe conery",
      "poster_handle": "joe277"
    },
    "time_stamp": "2024-10-24 11:59:28",
    "text": "Having an issue creating a custom object via POST request:\n\n```the_url = '<https://api.HubSpot.com/crm/v3/schemas>'\n    post_info = {\n        'name': 'prospectorcontact',\n        'description': 'itbnet_prospectorcontact table from dynamics',\n        'labels': {\n            'singular': 'prospectorcontact',\n            'plural': 'prospectorcontacts'\n        },\n        'primaryDisplayProperty': 'ulprospectorcontactid',\n        'secondaryDisplayProperties': ['firstname', 'lastname'],\n        'searchableProperties': [],\n        'requiredProperties': [],\n        'properties': properties_arr\n    }```\n```create table status: 403\ncreate table response: {\"status\":\"error\",\"message\":\"The scope needed for this API call isn't available for public use. If you have questions, contact support or post in our developer forum.\",\"correlationId\":\"28162aa9-9023-4841-ab9c-abd6eb088889\",\"links\":{\"support\":\"<https://help.HubSpot.com/>\",\"forum\":\"<https://community.HubSpot.com/t5/APIs-Integrations/bd-p/integrations>\"},\"category\":\"MISSING_SCOPES\"}```"
  },
  {
    "poster": {
      "poster_name": "joe conery",
      "poster_handle": "joe277"
    },
    "time_stamp": "2024-10-24 12:01:51",
    "text": "^^^ I am able to create a custom object through the browser.. So it's not a permission issue of generally being able to do that"
  },
  {
    "poster": {
      "poster_name": "joe conery",
      "poster_handle": "joe277"
    },
    "time_stamp": "2024-10-24 12:02:22",
    "text": "I am trying this in a private happ"
  },
  {
    "poster": {
      "poster_name": "joe conery",
      "poster_handle": "joe277"
    },
    "time_stamp": "2024-10-24 12:03:40",
    "text": "in a sandbox account"
  },
  {
    "poster": {
      "poster_name": "joe conery",
      "poster_handle": "joe277"
    },
    "time_stamp": "2024-10-24 12:10:52",
    "text": "and I just retried with every scope checkbox marked in my private app. Still no luck",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-10-24 20:20:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Devansh Sharma",
      "poster_handle": "devansh.s"
    },
    "time_stamp": "2024-10-24 13:45:30",
    "text": "Looking for the same. Did you find any solution?"
  },
  {
    "poster": {
      "poster_name": "Devansh Sharma",
      "poster_handle": "devansh.s"
    },
    "time_stamp": "2024-10-24 13:48:04",
    "text": "How to find only overdue task for today (specific date)? Seems like there is no filter in this API: <https://developers.HubSpot.com/docs/api/crm/tasks>",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-10-29 04:05:57"
      },
      {
        "time_stamp": "2024-10-29 04:10:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "OB Dev",
      "poster_handle": "dsitchon"
    },
    "time_stamp": "2024-10-24 16:16:50",
    "text": "Hi, anyone know how we can filter the contacts pull via api if lastmodifieddate is only from CRM UI?"
  },
  {
    "poster": {
      "poster_name": "Aldo Carrillo",
      "poster_handle": "aldo948"
    },
    "time_stamp": "2024-10-24 20:20:27",
    "text": "You need to contact support and request access to custom objects "
  },
  {
    "text": "Hey team, I've done a bit of searching for this topic but I still seem to be unable to get past my issue -- V2 Signature Validation for Custom Workflow Actions\n\nI've tried using both the library as well as doing it by hand and I get the same result (doesn't match the signature)\n\nAttached I've included the two code snippets used to hash/validate and an example of a string pre-hash which includes the Client Secret, the HTTP method, full URI and the request body string\n\nIf anyone has any ideas I'm open to anything right now",
    "time_stamp": "2024-10-25 00:02:19",
    "edited": {
      "time_stamp": "2024-10-25 00:03:45"
    },
    "reply_count": 108,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-10-25 09:10:06"
      },
      {
        "time_stamp": "2024-10-27 09:36:52"
      },
      {
        "time_stamp": "2024-10-27 11:54:01"
      },
      {
        "time_stamp": "2024-10-27 11:54:49"
      },
      {
        "time_stamp": "2024-10-27 11:55:08"
      },
      {
        "time_stamp": "2024-10-27 11:55:24"
      },
      {
        "time_stamp": "2024-10-27 11:55:47"
      },
      {
        "time_stamp": "2024-10-27 11:56:06"
      },
      {
        "time_stamp": "2024-10-27 11:56:28"
      },
      {
        "time_stamp": "2024-10-27 11:58:05"
      },
      {
        "time_stamp": "2024-10-27 23:57:20"
      },
      {
        "time_stamp": "2024-10-29 07:45:25"
      },
      {
        "time_stamp": "2024-11-01 13:38:17"
      },
      {
        "time_stamp": "2024-11-03 22:31:32"
      },
      {
        "time_stamp": "2024-11-03 22:38:22"
      },
      {
        "time_stamp": "2024-11-04 09:37:36"
      },
      {
        "time_stamp": "2024-11-04 09:38:26"
      },
      {
        "time_stamp": "2024-11-04 09:38:42"
      },
      {
        "time_stamp": "2024-11-04 09:39:43"
      },
      {
        "time_stamp": "2024-11-04 09:43:47"
      },
      {
        "time_stamp": "2024-11-04 09:45:15"
      },
      {
        "time_stamp": "2024-11-04 09:49:14"
      },
      {
        "time_stamp": "2024-11-04 09:49:37"
      },
      {
        "time_stamp": "2024-11-04 09:54:09"
      },
      {
        "time_stamp": "2024-11-04 09:54:45"
      },
      {
        "time_stamp": "2024-11-04 09:55:10"
      },
      {
        "time_stamp": "2024-11-04 13:27:47"
      },
      {
        "time_stamp": "2024-11-04 13:34:27"
      },
      {
        "time_stamp": "2024-11-04 13:42:51"
      },
      {
        "time_stamp": "2024-11-04 13:43:35"
      },
      {
        "time_stamp": "2024-11-04 13:43:57"
      },
      {
        "time_stamp": "2024-11-04 13:43:57"
      },
      {
        "time_stamp": "2024-11-04 13:44:31"
      },
      {
        "time_stamp": "2024-11-04 13:45:01"
      },
      {
        "time_stamp": "2024-11-04 13:46:06"
      },
      {
        "time_stamp": "2024-11-04 13:46:47"
      },
      {
        "time_stamp": "2024-11-04 13:47:21"
      },
      {
        "time_stamp": "2024-11-04 13:47:37"
      },
      {
        "time_stamp": "2024-11-04 13:50:51"
      },
      {
        "time_stamp": "2024-11-04 13:51:13"
      },
      {
        "time_stamp": "2024-11-04 13:51:23"
      },
      {
        "time_stamp": "2024-11-04 13:51:25"
      },
      {
        "time_stamp": "2024-11-04 13:51:31"
      },
      {
        "time_stamp": "2024-11-04 13:51:55"
      },
      {
        "time_stamp": "2024-11-04 13:52:06"
      },
      {
        "time_stamp": "2024-11-04 13:52:19"
      },
      {
        "time_stamp": "2024-11-04 13:52:21"
      },
      {
        "time_stamp": "2024-11-04 13:52:27"
      },
      {
        "time_stamp": "2024-11-04 13:53:28"
      },
      {
        "time_stamp": "2024-11-04 13:53:30"
      },
      {
        "time_stamp": "2024-11-04 13:53:34"
      },
      {
        "time_stamp": "2024-11-04 13:53:47"
      },
      {
        "time_stamp": "2024-11-04 13:54:01"
      },
      {
        "time_stamp": "2024-11-04 13:54:49"
      },
      {
        "time_stamp": "2024-11-04 13:55:22"
      },
      {
        "time_stamp": "2024-11-04 13:56:28"
      },
      {
        "time_stamp": "2024-11-04 13:57:18"
      },
      {
        "time_stamp": "2024-11-04 14:02:43"
      },
      {
        "time_stamp": "2024-11-04 14:03:19"
      },
      {
        "time_stamp": "2024-11-04 14:03:37"
      },
      {
        "time_stamp": "2024-11-04 14:04:04"
      },
      {
        "time_stamp": "2024-11-04 14:05:42"
      },
      {
        "time_stamp": "2024-11-04 14:05:51"
      },
      {
        "time_stamp": "2024-11-04 14:06:44"
      },
      {
        "time_stamp": "2024-11-04 14:07:28"
      },
      {
        "time_stamp": "2024-11-04 14:08:25"
      },
      {
        "time_stamp": "2024-11-04 14:08:38"
      },
      {
        "time_stamp": "2024-11-04 14:08:41"
      },
      {
        "time_stamp": "2024-11-04 14:08:56"
      },
      {
        "time_stamp": "2024-11-04 14:13:12"
      },
      {
        "time_stamp": "2024-11-04 14:13:41"
      },
      {
        "time_stamp": "2024-11-04 14:14:16"
      },
      {
        "time_stamp": "2024-11-04 14:14:44"
      },
      {
        "time_stamp": "2024-11-04 14:14:46"
      },
      {
        "time_stamp": "2024-11-04 14:14:53"
      },
      {
        "time_stamp": "2024-11-04 14:15:03"
      },
      {
        "time_stamp": "2024-11-04 14:15:21"
      },
      {
        "time_stamp": "2024-11-04 14:15:35"
      },
      {
        "time_stamp": "2024-11-04 14:15:55"
      },
      {
        "time_stamp": "2024-11-04 14:15:56"
      },
      {
        "time_stamp": "2024-11-04 14:16:02"
      },
      {
        "time_stamp": "2024-11-04 14:16:08"
      },
      {
        "time_stamp": "2024-11-04 14:16:28"
      },
      {
        "time_stamp": "2024-11-04 14:16:39"
      },
      {
        "time_stamp": "2024-11-04 14:16:50"
      },
      {
        "time_stamp": "2024-11-04 14:16:52"
      },
      {
        "time_stamp": "2024-11-04 14:16:56"
      },
      {
        "time_stamp": "2024-11-04 14:17:50"
      },
      {
        "time_stamp": "2024-11-04 14:24:51"
      },
      {
        "time_stamp": "2024-11-04 14:25:29"
      },
      {
        "time_stamp": "2024-11-04 14:25:55"
      },
      {
        "time_stamp": "2024-11-04 14:27:31"
      },
      {
        "time_stamp": "2024-11-04 14:27:55"
      },
      {
        "time_stamp": "2024-11-04 14:27:58"
      },
      {
        "time_stamp": "2024-11-04 14:28:09"
      },
      {
        "time_stamp": "2024-11-04 14:28:28"
      },
      {
        "time_stamp": "2024-11-04 14:34:53"
      },
      {
        "time_stamp": "2024-11-04 14:35:02"
      },
      {
        "time_stamp": "2024-11-04 15:03:45"
      },
      {
        "time_stamp": "2024-11-04 15:23:40"
      },
      {
        "time_stamp": "2024-11-04 15:27:30"
      },
      {
        "time_stamp": "2024-11-04 22:56:48"
      },
      {
        "time_stamp": "2024-11-04 22:57:39"
      },
      {
        "time_stamp": "2024-11-05 07:05:34"
      },
      {
        "time_stamp": "2024-11-05 07:06:16"
      },
      {
        "time_stamp": "2024-11-05 07:06:32"
      },
      {
        "time_stamp": "2024-11-05 07:07:07"
      },
      {
        "time_stamp": "2024-11-05 10:56:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Austin RZ",
      "poster_handle": "austin101"
    },
    "time_stamp": "2024-10-25 00:05:11",
    "text": "as an aside, is there a simple enough way to determine the calling HubSpot account (i.e. `portalId`) through an outbound GET request from HubSpot (to my app)? Seems the only options are to make it a POST/PUT or finagle an identifier or key into the request header"
  },
  {
    "text": "<@U05882YN32M>\n\nI am using the same API and want to get list details of contact.\nbut, it gives wrong count.\n\nCan you please check and help me?",
    "time_stamp": "2024-10-25 00:53:40"
  }
]
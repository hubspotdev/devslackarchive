[
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "text": "I’m looping though a set of topics an article has and am checking them against a HubDB table filled with topics, when a match is found. I want the loop to show that topic, but not show any matches after that. Wat am I missing :confused:",
    "time_stamp": "2018-10-17 13:28:13"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-17 13:37:38",
    "text": "oh wait i think i have something"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-17 13:38:27",
    "text": "how about loop through the blog topics for each topic that matches throw it in an array then at the end of the loop  `{{array_name[0].name}}`"
  },
  {
    "text": "But now i need to get the matching color",
    "time_stamp": "2018-10-17 13:38:35"
  },
  null,
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-17 14:24:39",
    "edited": {
      "time_stamp": "2018-10-17 14:24:47"
    },
    "text": "<@U38EZFVFE> compare two arrays without a loop :confused:"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-17 14:25:05",
    "text": "Doesnt look like anything like that exists in jinja"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-17 14:25:12",
    "text": "stringify them"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-17 14:25:27",
    "edited": {
      "time_stamp": "2018-10-17 14:25:34"
    },
    "text": "are you looking to see if they are the same?"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-17 14:26:37",
    "text": "I’m trying to see how many values of one array exist in the other"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-17 14:26:48",
    "text": "hmm."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-17 14:27:12",
    "text": "yeah.. that a bit beyond jinja"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-17 14:27:23",
    "text": "it is a templating language"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-17 14:28:22",
    "text": "Yeah… :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-17 14:45:32",
    "text": "Guessing there also isnt a wait to break out of a loop either?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-17 15:07:53",
    "text": "there is …. <@U7SL518D6> did you have a way to do that?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-17 15:11:07",
    "text": "you can chain |selectattrs I wont claim I fully understand how select attr works, Matt Coley was going to update some documentation on that to make it more clear - there’s a part of selectattr that’s not in the documentation."
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-17 15:17:01",
    "edited": {
      "time_stamp": "2018-10-17 15:22:48"
    },
    "text": "if you’re trying to find out how many elements of another array are in your current array you could do it like this: note  I haven’t tested this code but as long as there aren’t syntax errors should work:\n```\n{%- set array1=[1,2,3,4,5] -%}\n{%- set array2=[1,5] -%}\n{%- set items_in_both_arrays = [] -%}\n{%- for itemA in array1 -%}\n    {%-for itemB in array2 -%}\n        {%- if itemA == itemB -%}\n              {%- set _magic= items_in_both_arrays.append(itemA) -%}\n        {%- endif -%}\n    {%- endfor -%}\n{%- endfor -%}\n{%- for item in items_in_both_arrays -%}\n{{item}}\n{%- endfor -%}\nOr if you only want to print the first one\n{{items_in_both_arrays|first}}\n\n{#- Jon was here, keep it on the hush hush :P -#}\n```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-17 15:23:00",
    "text": "hope that helps"
  },
  {
    "text": "```\n&lt;div&gt;\n\t{% custom_widget \"custom_widget\" widget_name='Custom Module Name' %}\n&lt;/div&gt;\n```\nDoes anyone know why this error occurs? Snippet from this <https://designers.HubSpot.com/docs/hubl/hubl-supported-tags#custom-modules>",
    "time_stamp": "2018-10-17 16:45:03",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-10-17 20:25:09"
      },
      {
        "time_stamp": "2018-10-17 20:28:44"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-10-17 20:25:09",
    "text": "You cannot nest a custom widget  tag in a module"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-10-17 20:28:44",
    "text": "See <https://designers.HubSpot.com/docs/modules/reference>"
  },
  null
]
[
  {
    "poster": {
      "poster_name": "Rachel Gatlin",
      "poster_handle": "rachel904"
    },
    "time_stamp": "2022-03-17 11:33:07",
    "text": "Could someone help me figure out a problem? I have a HubDB table full of brand consistent color combinations (ie: a specific bg and text color combo). I want to include this as color options in a module so the background and text color options are only those from the ones in the table.  I’m sorta stuck on how to begin coding this.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-03-17 11:38:19"
      },
      {
        "time_stamp": "2022-03-17 13:27:19"
      },
      {
        "time_stamp": "2022-03-17 13:48:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-03-17 11:38:19",
    "text": "Hey Rachel, I think you’re looking for a HubDB row field: <https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields#hubdb-row>"
  },
  {
    "poster": {
      "poster_name": "Rachel Gatlin",
      "poster_handle": "rachel904"
    },
    "time_stamp": "2022-03-17 13:27:19",
    "text": "Yeah, I know that. My block is coming from how to logically do it. So if you select color combo a, then the background and text color defined in that table row get applied to the element"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-03-17 13:48:02",
    "text": "You’ve got a few options there depending on your requirements. The safest way would likely be, assuming the hex values are available in the row data, to reference them in a `require_css` block referencing that specific module instance. If you don’t need to support IE, I’d probably go the custom css properties route, setting a `--background-color` and `--text-color` value as an inline style and then reference those props in the CSS window."
  }
]
[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 07:36:45",
    "text": "using just `item` isn't correct"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 07:37:15",
    "text": "for the url it would be item.url or whatever the field is called inside the module <@UN6E9GCN5>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 07:37:41",
    "text": "if you go to your repeater field group, you can click copy snippet and it willo output the proper items and how they are called"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 07:37:45",
    "text": "you'll need to get that right first"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 07:38:25",
    "text": "then depe3nding on what you are calling the item and placing into the \"href\" you may need to do something like `{{ item.whatever|lower|replace(' ', '-') }}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 07:38:33",
    "text": "Then you need to setup a script to handle this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 07:39:08",
    "text": "Personally I would use buttons on this instead of links, and use jquery/javascript to add remove an active class from all items, then add the active class to the newly triggered item."
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2020-01-07 07:52:11",
    "text": "Hello everyone, happy new year !\n\nContext : Website on Drupal + Blog/LP on HubSpot CMS\nObjective : Smart Content on Drupal website\n\nI know that the only element that could be used for smart content in an external website is CTA\n\nDoes some you know if there is some trick to go deeper ?\nIs it possible to get CRM info ? (like developper info when we are on HUbSpot Website...)\n\nOr is it really impossible to have smart content on external website ?\n\nThanks a lot !",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-01-07 08:38:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 08:38:58",
    "text": "what kinda content are you looking to do?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 10:55:33",
    "text": "Hey everyone.  I’m wondering if there’s something similar to `indexOf()` in HUBL.\n\nMy use case is this.  I want to write a conditional to check if a text field I’m using for an HREF contains a URL with my root domain, and if not, add `target=\"_blank\"` to the `&lt;a&gt;`"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 11:05:03",
    "text": "Nevermind.  I found `string_containing`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-01-07 11:24:47",
    "text": ":open_mouth:"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:24:16",
    "text": "Hello all! How can I use hubl inside a string variable that would be use to append a &lt;style&gt; element in the DOM. In the following code, `{{ module.map_id }}` and `{{ module.marker_icon.src }}` don't work...\n```var css = 'body {margin: 0; padding: 0;} #{{ module.map_id }} {position: absolute; top: 0; bottom: 0; width: 100%;}  /*marker style*/ .marker { background-image: url('{{ module.marker_icon.src }}');  background-size: cover; width: 20px; height: 20px; border-radius: 50%; cursor: pointer;} /*pop-up style*/ .mapboxgl-popup {max-width: 200px;} .mapboxgl-popup-content {text-align: center;}'; \nvar head = document.head || document.getElementsByTagName('head')[0];\nvar style = document.createElement('style');\n\nhead.appendChild(style);\n\nstyle.type = 'text/css';\nif (style.styleSheet){\n  // This is required for IE8 and below.\n  style.styleSheet.cssText = css;\n} else {\n  style.appendChild(document.createTextNode(css));\n}```\nthanks!",
    "reply_count": 54,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-01-07 12:39:54"
      },
      {
        "time_stamp": "2020-01-07 12:40:37"
      },
      {
        "time_stamp": "2020-01-07 12:42:17"
      },
      {
        "time_stamp": "2020-01-07 12:42:34"
      },
      {
        "time_stamp": "2020-01-07 12:43:12"
      },
      {
        "time_stamp": "2020-01-07 12:43:54"
      },
      {
        "time_stamp": "2020-01-07 12:43:59"
      },
      {
        "time_stamp": "2020-01-07 12:44:26"
      },
      {
        "time_stamp": "2020-01-07 12:44:58"
      },
      {
        "time_stamp": "2020-01-07 12:45:33"
      },
      {
        "time_stamp": "2020-01-07 12:45:51"
      },
      {
        "time_stamp": "2020-01-07 12:48:22"
      },
      {
        "time_stamp": "2020-01-07 12:49:27"
      },
      {
        "time_stamp": "2020-01-07 12:50:01"
      },
      {
        "time_stamp": "2020-01-07 12:50:33"
      },
      {
        "time_stamp": "2020-01-07 12:50:37"
      },
      {
        "time_stamp": "2020-01-07 12:50:37"
      },
      {
        "time_stamp": "2020-01-07 12:51:06"
      },
      {
        "time_stamp": "2020-01-07 12:53:34"
      },
      {
        "time_stamp": "2020-01-07 12:53:53"
      },
      {
        "time_stamp": "2020-01-07 12:54:12"
      },
      {
        "time_stamp": "2020-01-07 12:55:07"
      },
      {
        "time_stamp": "2020-01-07 12:58:43"
      },
      {
        "time_stamp": "2020-01-07 12:59:01"
      },
      {
        "time_stamp": "2020-01-07 12:59:24"
      },
      {
        "time_stamp": "2020-01-07 12:59:53"
      },
      {
        "time_stamp": "2020-01-07 12:59:59"
      },
      {
        "time_stamp": "2020-01-07 13:00:03"
      },
      {
        "time_stamp": "2020-01-07 13:00:12"
      },
      {
        "time_stamp": "2020-01-07 13:00:20"
      },
      {
        "time_stamp": "2020-01-07 13:00:24"
      },
      {
        "time_stamp": "2020-01-07 13:01:23"
      },
      {
        "time_stamp": "2020-01-07 13:02:48"
      },
      {
        "time_stamp": "2020-01-07 13:03:03"
      },
      {
        "time_stamp": "2020-01-07 13:03:07"
      },
      {
        "time_stamp": "2020-01-07 13:03:47"
      },
      {
        "time_stamp": "2020-01-07 13:05:59"
      },
      {
        "time_stamp": "2020-01-07 13:06:26"
      },
      {
        "time_stamp": "2020-01-07 13:06:43"
      },
      {
        "time_stamp": "2020-01-07 13:06:47"
      },
      {
        "time_stamp": "2020-01-07 13:10:54"
      },
      {
        "time_stamp": "2020-01-07 13:22:02"
      },
      {
        "time_stamp": "2020-01-07 13:23:17"
      },
      {
        "time_stamp": "2020-01-07 13:23:28"
      },
      {
        "time_stamp": "2020-01-08 08:31:47"
      },
      {
        "time_stamp": "2020-01-08 08:32:02"
      },
      {
        "time_stamp": "2020-01-08 08:39:09"
      },
      {
        "time_stamp": "2020-01-08 09:00:54"
      },
      {
        "time_stamp": "2020-01-08 09:01:09"
      },
      {
        "time_stamp": "2020-01-08 09:06:33"
      },
      {
        "time_stamp": "2020-01-08 09:07:39"
      },
      {
        "time_stamp": "2020-01-08 09:12:29"
      },
      {
        "time_stamp": "2020-01-08 09:19:12"
      },
      {
        "time_stamp": "2020-01-08 09:26:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:39:54",
    "text": "Are you working in a custom module?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:40:37",
    "text": "if so, you need to put this in `&lt;style&gt;` tags in the HTML + HUBL window"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:42:17",
    "text": "yes I'm working in a custom module."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:42:34",
    "text": "do a `{% require_css %}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:43:12",
    "text": "```{% require_css %}\n&lt;style&gt;\n//css using hubl variables\n&lt;/style&gt;\n{% end_require_css %}```\n"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:43:54",
    "text": "I think you need a\n```{% require_js position=\"footer\" %}\n    &lt;script&gt;\n        console.log(\"The COS is awesome!\");\n    &lt;/script&gt;\n{% end_require_js %}```\n"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:43:59",
    "text": "but my &lt;style&gt; is generated by javascript"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:44:26",
    "text": "with this line `var style = document.createElement('style');`"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:44:58",
    "text": "yeah, just use &lt;script&gt; tags in the HTML and HUBL window, otherwise HUBL doesn’t work.\n\nrequire_js will enqueue it wherever you need it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:45:33",
    "edited": {
      "time_stamp": "2020-01-07 12:45:38"
    },
    "text": "sorry, I was paying half attention to the question, thanks ian"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:45:51",
    "text": "No worries.  I knew what you meant <@U25PYL3Q8>"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:48:22",
    "edited": {
      "time_stamp": "2020-01-07 12:48:42"
    },
    "text": "I don't get how using require_js will help me to use my hubl field into my javascript string..."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:49:27",
    "text": "It won’t.  it will enqueue your scripts appropriately instead of just occurring wherever the HTML is for your module."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:50:01",
    "text": "It’s there so that you can write JS in the HTML + HUBL window and enqueue it properly"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:50:33",
    "text": "my code is already in the HTML + HUBL"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:50:37",
    "text": "oh"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:50:37",
    "text": "window"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:51:06",
    "text": "okay, then what isn't working"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:53:34",
    "text": "{% require_css %}\n&lt;style&gt;\nbody {\n    margin: 0; \n    padding: 0;\n} \n#{{ module.map_id }} {\n    position: absolute;\n    top: 0; \n    bottom: 0; \n    width: 100%;\n}\n/*marker style*/ \n.marker { \n    background-image: url('{{ module.marker_icon.src }}');  \n    background-size: cover; \n    width: 20px; \n    height: 20px; \n    border-radius: 50%; \n    cursor: pointer;\n} \n/*pop-up style*/ \n.mapboxgl-popup {\n    max-width: 200px;\n} .mapboxgl-popup-content {\n    text-align: center;\n} \n&lt;/style&gt;\n{% end_require_css %}\n``````"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:53:53",
    "text": "I'd put that all at the bottom of my html/hubl window if I was doing this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:54:12",
    "text": "no reason to load it with js, that is just taking more time to do somethign that is native"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:55:07",
    "text": "Are the IDs or any of these thigns inside a repeater? That could be why this isnt' working"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2020-01-07 12:57:20",
    "text": "Is it possible to pull a module inside of a module with HubL",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-01-07 12:58:15"
      },
      {
        "time_stamp": "2020-01-07 13:31:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:58:15",
    "text": "I don’t think so.  You can use partials though (with a warning)"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:58:43",
    "text": "no they are not in a repeater"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:59:01",
    "text": "Not grouped either?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 12:59:24",
    "text": "not grouped"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 12:59:53",
    "text": "welp.  that should be working"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 12:59:59",
    "text": "do you have an error or have an understanding why it wasn't working?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 13:00:03",
    "text": "did you get an error when adding to the head?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 13:00:12",
    "edited": {
      "time_stamp": "2020-01-07 13:00:53"
    },
    "text": "I need to load it with JS so if the module I'm working on is added to a template, it adds the `&lt;style&gt;` to the `&lt;head&gt;`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 13:00:20",
    "text": "is the css not forming properly?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 13:00:24",
    "text": "right, is it not going into the head?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 13:01:23",
    "edited": {
      "time_stamp": "2020-01-07 13:01:38"
    },
    "text": "no but If I remove the hubl fields it works"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 13:02:48",
    "text": "I think it might be your background image style"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 13:03:03",
    "text": "I tried the `escapejs` filter but I have the same result\n```{% set map_id = \"{{ module.map_id }}\" %}\n{% set marker_src = \"{{ module.marker_icon.src }}\" %}\n  \nvar css = 'body {margin: 0; padding: 0;} #{{ map_id|escapejs }} {position: absolute; top: 0; bottom: 0; width: 100%;}  /*marker style*/ .marker { background-image: url('{{ marker_src|escapejs }}');  background-size: cover; width: 20px; height: 20px; border-radius: 50%; cursor: pointer;} /*pop-up style*/ .mapboxgl-popup {max-width: 200px;} .mapboxgl-popup-content {text-align: center;}';\nvar head = document.head || document.getElementsByTagName('head')[0];\nvar style = document.createElement('style');\n\nhead.appendChild(style);\n\nstyle.type = 'text/css';\nif (style.styleSheet){\n  // This is required for IE8 and below.\n  style.styleSheet.cssText = css;\n} else {\n  style.appendChild(document.createTextNode(css));\n}```"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 13:03:07",
    "text": "youve got ' which is closing the string"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 13:03:47",
    "text": "try this:\n```var css = 'body {margin: 0; padding: 0;} #{{ module.map_id }} {position: absolute; top: 0; bottom: 0; width: 100%;}  /*marker style*/ .marker { background-image: url(\"{{ module.marker_icon.src }}\");  background-size: cover; width: 20px; height: 20px; border-radius: 50%; cursor: pointer;} /*pop-up style*/ .mapboxgl-popup {max-width: 200px;} .mapboxgl-popup-content {text-align: center;}'; \nvar head = document.head || document.getElementsByTagName('head')[0];\nvar style = document.createElement('style');\nhead.appendChild(style);\nstyle.type = 'text/css';\nif (style.styleSheet){\n  // This is required for IE8 and below.\n  style.styleSheet.cssText = css;\n} else {\n  style.appendChild(document.createTextNode(css));\n}```"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 13:05:59",
    "text": "well.. that is weird.. I had already tried that without success and now it is working."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 13:06:26",
    "text": "thanks guys!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 13:06:43",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-07 13:06:47",
    "text": "nice!"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 13:10:54",
    "text": "My pleasure.  Nothing worse than hitting a wall.  Another set of eyes always helps"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-07 13:22:02",
    "text": ":sweat_smile:  yes thanks"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 13:23:17",
    "text": "By the way, nice to see another HubSpot developer north of the US border"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-01-07 13:23:28",
    "text": "I’m Toronto based"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-01-07 13:31:09",
    "text": "No Recursive modules are not a thing. But I would use a partial well!"
  }
]
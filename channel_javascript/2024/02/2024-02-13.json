[
  {
    "poster": {
      "poster_name": "Kayron Macon",
      "poster_handle": "kayron"
    },
    "time_stamp": "2024-02-13 08:57:34",
    "edited": {
      "time_stamp": "2024-02-13 08:58:04"
    },
    "text": "Hello,\nDoes anyone know best practices for loading cdns,\ncurrently have them loaded in associated modules\n{% require_js %}\n<script defer src=\"<https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js>\"></script>    <script defer src=\"<https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollTrigger.min.js>\"></script>\n|{% end_require_js %}",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-13 09:00:47"
      },
      {
        "time_stamp": "2024-02-13 09:03:23"
      },
      {
        "time_stamp": "2024-02-13 09:54:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2024-02-13 09:00:47",
    "text": "I use {% require_head %} for the same thing, which works for me. Ensures the scripts are added &amp; loaded in the head and not in the body where module is located"
  },
  {
    "poster": {
      "poster_name": "Kayron Macon",
      "poster_handle": "kayron"
    },
    "time_stamp": "2024-02-13 09:03:23",
    "text": "thank you"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2024-02-13 09:54:23",
    "edited": {
      "time_stamp": "2024-02-13 09:55:44"
    },
    "text": "Use this instead {{ require_js (' { script url}', 'head')}} as a third parameter you can add defer"
  },
  {
    "text": "UPDATE: I changed the form to a html raw form, and I believe it’s working - is that the case, they need to be html raw?\n\nhey all, I’m unable to see the DOM elements of a HubSpot form in console or find them using javascript unless I search for the element by class name first in DevTools. I’ve tried using the event listener and a mutation observer to only look for the dom elements when ready, and it says it’s ready it won’t find them unless I’ve searched the code for some reason. It’s a HubSpot form being embedded in a module on a HubSpot website page. I’ve managed to use a mutation observer to find the dom elements of another form on a landing page on a module loaded form and can’t think why it would be different with a website page although it is a different account. Would love some help as i’m trying to release this form today\n\n  `window.addEventListener('message', event => {`\n   `if(event.data.type === 'hsFormCallback' && event.data.eventName === 'onFormReady') {`\n       `// the form is ready to manipulate!`\n     `console.log(\"Local Form is rendered\")`",
    "time_stamp": "2024-02-13 19:56:46",
    "edited": {
      "time_stamp": "2024-02-13 21:28:02"
    },
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-14 06:22:39"
      },
      {
        "time_stamp": "2024-02-14 08:18:30"
      },
      {
        "time_stamp": "2024-02-14 14:54:58"
      }
    ]
  }
]
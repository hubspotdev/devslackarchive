[
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2023-04-26 05:44:26",
    "text": "You can do something like this.\n```{# Get JSON #}\n{%- macro get_json(path) -%}\n\t{%- macro json() -%}{%- include path -%}{%- endmacro -%}\n\t{{ json()|regex_replace('&lt;!--(.*?)--&gt;', '') }}\n{%- endmacro -%}\n\n{# Store JSON #}\n{# NOTE: File extension must be HTML #}\n{% set json = get_json('xxxxx.html')|fromjson %}```"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-26 05:59:27",
    "text": "Thatâ€™s a very good solution! "
  },
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2023-04-26 11:54:06",
    "text": "Does anyone know of a way to send an OwnerID just via hubl in an email? I know there are the various additions you can make to get emails, full name, etc. I actually want the ID if possible without having to resort to ops hub."
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2023-04-26 15:28:00",
    "text": "Question: If you use the hubdb_table_rows(table_id, queryparam) function and the query parameter contains an ampersane (&amp;) is there a way to escape it because the HubDB returns all results before the ampersand based on something I am trying to fix for a client. So for example if the client's name is 'A&amp;A Electronic Assembly' the query parameter would be something like: \"name__icontains=A&amp;A Electronic Assembly\". But it doesn't search the hubDB table for the whole term. I found a workaround but its a complete hack. Anyone with thoughts on how to correctly handle query parameters that contain an '&amp;' in it? Any help would be appreciated. Thanks.",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-04-27 00:55:39"
      },
      {
        "time_stamp": "2023-04-27 06:01:06"
      },
      {
        "time_stamp": "2023-05-03 09:10:09"
      },
      {
        "time_stamp": "2023-05-03 09:10:29"
      },
      {
        "time_stamp": "2023-05-05 09:23:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-04-27 00:55:39",
    "text": "<@U04GMCM7AP3>,\n\nTry to replace \"&amp;\" with %26 (Encoding) using the replace function.\n\nIt should work."
  }
]
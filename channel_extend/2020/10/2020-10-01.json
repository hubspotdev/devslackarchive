[
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2020-10-01 06:25:53",
    "text": "Today's the day! You can still register here <https://developers.HubSpot.com/developer-day-2020>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 07:58:29",
    "text": "1.5 min to dev day start = time to get more coffee!"
  },
  {
    "text": "Waiting  ... !",
    "time_stamp": "2020-10-01 07:59:18"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2020-10-01 08:00:55",
    "text": "Ready and so pumped for this!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 08:02:59",
    "text": "WOOOOOOO!!!! Here we go!!!! :sprocket-dance:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2020-10-01 08:03:19",
    "text": "looking forward to it"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski",
      "poster_handle": "anton.bujanowski"
    },
    "time_stamp": "2020-10-01 08:03:36",
    "text": "Let's go!"
  },
  {
    "time_stamp": "2020-10-01 08:03:45",
    "text": "party"
  },
  {
    "poster": {
      "poster_name": "Patrick O'Donoghue",
      "poster_handle": "patrick.odonoghue"
    },
    "time_stamp": "2020-10-01 08:04:15",
    "text": "\"We are family :notes:\" you guys are brightening up my day"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 08:06:19",
    "text": "anyone hoping Dharmesh starts playing the keyboard?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 08:08:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 08:06:21",
    "edited": {
      "time_stamp": "2020-10-01 08:06:28"
    },
    "text": "Hey folks during the stream we’ll be adding some reference handy reference links to this page. <https://developers.HubSpot.com/developer-day-2020/resources>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 08:07:07",
    "text": ":developers-developers-developers:"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 08:08:50",
    "text": "Hey piano man, you know Code Monkey?"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 08:12:57",
    "text": "really hoping he does a dad joke"
  },
  {
    "text": "",
    "time_stamp": "2020-10-01 08:14:00"
  },
  {
    "poster": {
      "poster_name": "Viktor Brech",
      "poster_handle": "viktor.brech"
    },
    "time_stamp": "2020-10-01 08:15:26",
    "text": "This Slack server needs Dharmesh emojis",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 08:32:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 08:16:22",
    "edited": {
      "time_stamp": "2020-10-01 08:19:13"
    },
    "text": "i came in late. who was the woman moderating with Dharmesh?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 08:21:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-10-01 08:21:28",
    "text": "HubSpot VP of Ecosystem Nancy Riley — <https://www.linkedin.com/in/nancyjeanriley/>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 08:32:49",
    "text": "Will def make this happen :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2020-10-01 08:42:26",
    "text": "Hope you're all enjoying!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 08:48:47",
    "text": "Resource page Vue refreshing w/ new content is pretty dope",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 08:49:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 08:49:35",
    "text": "thats the :amazing: creation of <@U7SL518D6>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:09:23",
    "text": "great job <@U014UPFSTNK>!"
  },
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:14:29",
    "text": "huzzah <@UCH1L597V>!!!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 09:15:51",
    "text": "really digging this break music... HubSpot should put this on their phone support hold playlist :P",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 09:16:16"
      },
      {
        "time_stamp": "2020-10-01 09:16:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:16:16",
    "text": ":thinking_face:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:16:49",
    "text": "maybe i have had too much coffee, but that timer is stressing me out"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 09:18:43",
    "edited": {
      "time_stamp": "2020-10-01 09:18:47"
    },
    "text": "<@U3T21PDBK> If you’re the one who asked about where to get the CRM Extensions in postman, we created a Collection for anyone to download/import, linked to from the <https://developers.HubSpot.com/developer-day-2020/resources|DevDay resource page>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 09:20:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 09:19:42",
    "text": "<@U014UPFSTNK> I’m really, really impressed about the crm extension talk. Seriously, incredible job :slightly_smiling_face:\nAlso I have to admit, I had no clue that Postman let you host target webhook urls. Really handy!!",
    "reply_count": 34,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-01 09:22:21"
      },
      {
        "time_stamp": "2020-10-01 09:22:33"
      },
      {
        "time_stamp": "2020-10-01 09:46:13"
      },
      {
        "time_stamp": "2020-10-01 09:51:53"
      },
      {
        "time_stamp": "2020-10-01 09:58:03"
      },
      {
        "time_stamp": "2020-10-01 09:59:30"
      },
      {
        "time_stamp": "2020-10-01 09:59:39"
      },
      {
        "time_stamp": "2020-10-01 10:33:05"
      },
      {
        "time_stamp": "2020-10-01 10:34:37"
      },
      {
        "time_stamp": "2020-10-01 10:35:58"
      },
      {
        "time_stamp": "2020-10-01 10:36:22"
      },
      {
        "time_stamp": "2020-10-01 10:37:15"
      },
      {
        "time_stamp": "2020-10-01 10:37:53"
      },
      {
        "time_stamp": "2020-10-01 10:40:54"
      },
      {
        "time_stamp": "2020-10-01 10:42:15"
      },
      {
        "time_stamp": "2020-10-01 10:45:47"
      },
      {
        "time_stamp": "2020-10-01 10:46:27"
      },
      {
        "time_stamp": "2020-10-01 10:46:31"
      },
      {
        "time_stamp": "2020-10-01 10:46:48"
      },
      {
        "time_stamp": "2020-10-01 10:47:52"
      },
      {
        "time_stamp": "2020-10-01 10:48:16"
      },
      {
        "time_stamp": "2020-10-01 10:48:41"
      },
      {
        "time_stamp": "2020-10-01 10:48:45"
      },
      {
        "time_stamp": "2020-10-01 10:49:10"
      },
      {
        "time_stamp": "2020-10-01 10:49:19"
      },
      {
        "time_stamp": "2020-10-01 10:49:35"
      },
      {
        "time_stamp": "2020-10-01 10:49:38"
      },
      {
        "time_stamp": "2020-10-01 10:50:00"
      },
      {
        "time_stamp": "2020-10-01 10:50:03"
      },
      {
        "time_stamp": "2020-10-01 10:50:27"
      },
      {
        "time_stamp": "2020-10-01 10:51:25"
      },
      {
        "time_stamp": "2020-10-01 10:51:43"
      },
      {
        "time_stamp": "2020-10-01 10:53:49"
      },
      {
        "time_stamp": "2020-10-01 10:54:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-01 09:20:17",
    "text": "thanks Sean!"
  },
  {
    "poster": {
      "poster_name": "Tom Elliott (Left Hook)",
      "poster_handle": "tom.elliott"
    },
    "time_stamp": "2020-10-01 09:20:20",
    "text": "Direct link here:\n<https://lefthook.com/HubSpot-dev-day>"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 09:20:53",
    "text": "AJJJJJJJ let's go"
  },
  {
    "time_stamp": "2020-10-01 09:21:32",
    "text": "it crowd",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-01 09:23:52"
      },
      {
        "time_stamp": "2020-10-01 09:24:18"
      },
      {
        "time_stamp": "2020-10-01 09:24:51"
      },
      {
        "time_stamp": "2020-10-01 09:25:01"
      },
      {
        "time_stamp": "2020-10-01 09:25:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 09:22:21",
    "text": "Thanks!\n\nAnd totally, Postman does a lot of interesting stuff.\n\nOne catch/important thing is that they host mocks, which are different than webhook receivers.\n\nYou _can_ make postman intercept a request and you can log it out the same way as <http://webhook.site|webhook.site> or <http://requestbin.com|requestbin.com> or beecepter"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 09:22:33",
    "text": "But those are a bit harder"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 09:23:52",
    "text": "Fun fact, literally got a call from a family member after recording this about computer questions"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:24:18",
    "text": "aj.  we need to talk about wall art"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 09:24:51",
    "text": "I took it all down lol"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:25:01",
    "text": "ha!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 09:25:13",
    "text": "my giant velvet elvis picture just couldnt make it in there :wink:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:31:36",
    "text": "well done, <@U2H3TT8F2>",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-01 09:31:45"
      },
      {
        "time_stamp": "2020-10-01 09:32:06"
      },
      {
        "time_stamp": "2020-10-01 09:32:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:31:45",
    "text": "proud of you"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-10-01 09:31:47",
    "text": "We may need to start a GoFundMe so <@U2H3TT8F2> can get some furniture"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 09:32:06",
    "text": "Thanks Dad :slightly_smiling_face: :HubSpotheart:"
  },
  {
    "time_stamp": "2020-10-01 09:32:08",
    "text": "proud dad"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-01 09:33:18",
    "text": "excited about crm co in modules! :exploding_head:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:33:19",
    "text": ":will:"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2020-10-01 09:33:35",
    "text": "so Smart Content for Custom Modules is coming sometime this year?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 09:43:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2020-10-01 09:33:44",
    "text": "Smart content in Custom Modules :tada:",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-01 09:34:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-01 09:34:13",
    "text": "yaaaassssss"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-10-01 09:41:36",
    "text": "To follow along, check out <https://github.com/HubSpot/cms-custom-objects-example>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 09:43:15",
    "text": "We are working toward having a beta for this ready by years end. We can’t guarantee we will have it this year but we are def working toward it."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-10-01 09:46:11",
    "text": "And make sure to fill out the beta request form, or DM me to get your account ungated for the beta features in this project!"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 09:46:13",
    "text": "Following up on this- <@UKN05SLNR> I’m actually wrong you can just go to the browser ({{yourteam}}.<http://postman.co/mocks|postman.co/mocks> and look at the mock server call log <https://share.getcloudapp.com/9ZuB25rX>\n\nIt just doesn’t show you the full query string, but otherwise it captures everything else that the other services I mentioned capture.\n\n(You could conceivably take the query string and make your mock’ed endpoint return the query string in the body :shrug: )"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 09:49:22",
    "text": "So if I'm looking for a cabin in VT, <@U6W3H6YN8> you're my guy right?"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 09:51:53",
    "text": "For sure, but the point is you can use it to get a partially functional Crm Extension running before having to set up the true webhook reciever"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:53:02",
    "text": "Wondering how many devs here will be cloning this,  quitting their jobs and becoming realtors"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2020-10-01 09:53:11",
    "text": "Haha"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2020-10-01 09:53:15",
    "text": ":smile:"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2020-10-01 09:57:18",
    "text": "crm objects dynamic pages :clap::skin-tone-3:"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2020-10-01 09:57:28",
    "text": "wow"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 09:58:03",
    "text": "hey btw this may interest you, you mentioned that we are still on legacy docs for crm extensions. This isnt quite true.. and I think maybe a sign that this isnt very clear :stuck_out_tongue:\n\n<https://developers.HubSpot.com/docs/api/crm/extensions/custom-cards?_ga=2.184578606.643230626.1601563431-287583937.1599662082>\n\nThe idea is that there are several apis that `extend` the crm, and this one is for the `custom cards` part"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 09:58:54",
    "text": "thank you, realtor <@U6W3H6YN8>!"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 09:59:30",
    "text": "Even so, the `Webhooks` tab is still pretty much the same, and has some updates that need to happen.\n\nHowever in the meantime, there is an endpoint you can see called `SampleResponse` which shows off the new, v3 webhook url payload one can optionally use (by seeing that `\"responseVersion\": \"v3\"` field)"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 09:59:39",
    "text": "Its the same functionality, just organized a bit better"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 09:59:57",
    "text": "<@UAYMEC3LJ>’s talk has me like this: <http://gph.is/1KmgWbn>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:04:59",
    "text": "&gt; complicated .. AF"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 10:05:53",
    "text": "<@UAYMEC3LJ> my phone doesn’t make that sound! lol"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2020-10-01 10:06:09",
    "text": "LOL"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-10-01 10:06:19",
    "text": "that is funny how G2 build their event platform on HS and HS build the Inbound platform outside of HS"
  },
  {
    "time_stamp": "2020-10-01 10:09:33",
    "text": "brilliant"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:10:58",
    "text": ":applause: <@UAYMEC3LJ>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-01 10:11:18",
    "text": "very creative solutions <@UAYMEC3LJ>!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 10:12:29",
    "edited": {
      "time_stamp": "2020-10-01 10:12:46"
    },
    "text": "pretty confident Mark Ryba is the _only person_ at SmartBug. (kidding it’s a big company but he has his hands in everything SmartBug does.)"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 10:12:51",
    "text": "Fun Fact: Mark did the AV for the dev day last year",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-01 10:15:00"
      },
      {
        "time_stamp": "2020-10-01 11:00:28"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2020-10-01 10:15:00"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-01 10:16:01",
    "text": "<@U26BLKGE4> rockin that Brave browser :100: :muscle::skin-tone-2: :sunglasses:"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 10:16:17",
    "text": "when you know, you know"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-10-01 10:21:41",
    "text": "looking forward to the musical portion of this segment"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-10-01 10:22:02",
    "text": ":musical_keyboard:",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-01 10:24:32"
      },
      {
        "time_stamp": "2020-10-01 10:25:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:23:11",
    "text": "<@U26BLKGE4> crushing it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 10:24:19",
    "text": "SJ has swagger. Think that’s the right way to put it."
  },
  {
    "poster": {
      "poster_name": "Erica Gabel",
      "poster_handle": "erica"
    },
    "time_stamp": "2020-10-01 10:24:21",
    "text": "Great Topics!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:24:32",
    "text": "is it a coincidence that the presentations began with dharmesh had a keyboard and mark ended it with keyboards?"
  },
  {
    "time_stamp": "2020-10-01 10:25:09",
    "text": "tinfoil hat"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2020-10-01 10:31:18",
    "text": "where do you create the custom objects in the crm? i see the field available in the custom modules"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:33:01",
    "edited": {
      "time_stamp": "2020-10-01 10:44:13"
    },
    "text": "<https://developers.HubSpot.com/developer-day-2020/resources>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:33:03",
    "text": "!!!!"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:33:05",
    "text": "Ah that’s great- is that recently updated from the past few months? It had previously just pointed to the legacydocs"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:34:37",
    "text": "<@UKN05SLNR> quick note… I think the sample data is corrupt, with a comma somewhere"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:35:30",
    "edited": {
      "time_stamp": "2020-10-01 10:35:46"
    },
    "text": "anyone here wanting to discuss development workflows, let me know!  This is a topic I want to add to <http://community.HubSpot.com|community.HubSpot.com>!!"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:35:58",
    "text": "Yup just confirmed, Line 51"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:36:22",
    "edited": {
      "time_stamp": "2020-10-01 10:36:30"
    },
    "text": "Removing that `,` will fix the response so it will be valid JSON for the Extension"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:37:15",
    "text": "Yeah last couple months. Given that this api is mostly about the config part, which is really just done via the Developer Portal UI, its not very exciting.\n\nThanks for pointing out that problem, i’ll get the sample data fixed"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:37:53",
    "text": "Yeah, although I’m pretty excited about the API for automatically creating these with a HubSpot App Builder tool we’re thinking of building :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 10:39:58",
    "text": "Regarding performance suggestions for building on CMS Hub\n<https://developers.HubSpot.com/docs/cms/guides/speed>\n\nMark’s Resources can be found here <https://developers.HubSpot.com/developer-day-2020/resources>"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:40:54",
    "text": "Hmm actually i’m not seeing the error in the json.\nYou’re referring to the `Returns an example card detail response` endpoint, Response&gt;example, right?"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:42:15",
    "text": "Oh I see you meant in the `Webhooks`  tab, yeah that’s the old version, but still a bug and i’ll report it.\n\nJust to be clear though, when I said the `v3` webhook payload, I meant in the `Endpoint` tab, example card endpoint - take a peek"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:45:47",
    "text": "Ah okay gotcha, peaking now"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:46:27",
    "text": "FWIW can I suggest changing “Webhook” to “Fetch Request”?"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:46:31",
    "text": "Or “Data Fetch”?"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:46:48",
    "text": "As it’s not really the same as the CRM Webhooks"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:47:52",
    "text": "lol, we had quite the conversation about exactly that"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:48:16",
    "text": "Our new api review process is actually kind of amazing. We went pretty deep on a lot of simple things like names"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:48:41",
    "text": "Heard, names are deceptively not simple :joy:"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:48:45",
    "text": "We do the same thing"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:49:10",
    "text": "Webhooks would be, really, POST requests made to external URLs based on internal events, vs. GETs/fetches"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:49:19",
    "text": "Seeing now the new sample body"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:49:35",
    "text": "```{\n  \"responseVersion\": \"v3\",\n  \"cardLabel\": \"Tickets\",\n  \"allItemsLinkUrl\": \"<https://example.com/all-items-link-url>\",\n  \"totalCount\": 1,\n  \"topLevelActions\": {\n    \"secondary\": [\n      {\n        \"type\": \"IFRAME\",\n        \"width\": 640,\n        \"height\": 480,\n        \"url\": \"<https://example.com/secondary-iframe>\",\n        \"label\": \"test_label_secondary\",\n        \"propertyNamesIncluded\": []\n      }\n    ],\n    \"settings\": {\n      \"propertyNamesIncluded\": [\n        \"some_crm_property\"\n      ],\n      \"width\": 640,\n      \"label\": \"Edit\",\n      \"type\": \"IFRAME\",\n      \"url\": \"<https://example.com/iframe-contents>\",\n      \"height\": 480\n    },\n    \"primary\": {\n      \"propertyNamesIncluded\": [],\n      \"width\": 640,\n      \"label\": \"test_label_primary\",\n      \"type\": \"IFRAME\",\n      \"url\": \"<https://example.com/primary-iframe>\",\n      \"height\": 480\n    }\n  },\n  \"sections\": [\n    {\n      \"id\": \"123\",\n      \"title\": \"API-22: APIs working too fast\",\n      \"linkUrl\": \"<http://example.com/1>\",\n      \"tokens\": [\n        {\n          \"name\": \"created\",\n          \"label\": \"test_label\",\n          \"dataType\": \"DATE\",\n          \"value\": \"2016-08-04\"\n        }\n      ],\n      \"actions\": [\n        {\n          \"type\": \"ACTION_HOOK\",\n          \"httpMethod\": \"POST\",\n          \"url\": \"<https://example.com/action-hook-frame>\",\n          \"label\": \"action-hook-label\",\n          \"propertyNamesIncluded\": [\n            \"email\",\n            \"firstName\"\n          ]\n        },\n        {\n          \"type\": \"ACTION_HOOK\",\n          \"confirmation\": {\n            \"prompt\": \"action-confirmation-body-prompt\",\n            \"confirmButtonLabel\": \"Continue\",\n            \"cancelButtonLabel\": \"Cancel\"\n          },\n          \"httpMethod\": \"POST\",\n          \"url\": \"<https://example.com/confirmation-action-hook>\",\n          \"label\": \"confirmation-hook-label\",\n          \"propertyNamesIncluded\": []\n        },\n        {\n          \"type\": \"IFRAME\",\n          \"width\": 640,\n          \"height\": 480,\n          \"url\": \"<https://example.com/iframe-action-label>\",\n          \"label\": \"iframe-action-label\",\n          \"propertyNamesIncluded\": [\n            \"property1\",\n            \"property2\",\n            \"property3\"\n          ]\n        }\n      ]\n    }\n  ]\n}```"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:49:38",
    "text": "Our thinking was that the type of url this is really is a `webhook` url, as that’s what this mechanism is.\n\nAnd within HubSpot, there are various Apis/Features that make use of a `webhook url` to send a `Webhook`, but for different purposes:\n• Subscription Webhooks, or as you;re probably referring to as CRM Webhooks\n• Workflow webhooks\n• Crm extensions\n• Ecommbridge stores\n• etc"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:50:00",
    "text": "Not saying it’s carved in stone, but the idea was to try and use a single word for `target url` moving forward"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:50:03",
    "text": "Yup that’s the new json"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:50:27",
    "text": "I’m happy to call them “sections” vs. Card Properties :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:51:00",
    "text": "oh hi!"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:51:25",
    "text": "Any notes/explanation on what “`propertyNamesIncluded` does? Does that dictate which property values to pass into the iframe via Query Params?"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-10-01 10:51:43",
    "text": "Or do those now become available via a JS API?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:53:47",
    "text": ":heart: to the community here!!"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:53:49",
    "text": "Yeah, like I said, deep name review. I was ultra confused on calling things cards, when really its one card, multiple sections"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-10-01 10:54:07",
    "edited": {
      "time_stamp": "2020-10-01 10:54:11"
    },
    "text": "`propertyNamesIncluded` are supposed to be the Crm Object properties that are sent with the webhook api call"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-10-01 10:54:39",
    "text": "Thank you HubSpotters for showing us devs some love!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:54:49",
    "text": "well done <@UQNEXHW14>!!!",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-01 10:55:46"
      },
      {
        "time_stamp": "2020-10-01 10:55:57"
      },
      {
        "time_stamp": "2020-10-01 10:56:19"
      },
      {
        "time_stamp": "2020-10-01 11:11:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 10:55:28",
    "text": "great production!"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-10-01 10:55:46",
    "text": "I think she should replace Chris Wallace, she’s good!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:55:57",
    "text": "i was going to go there"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 10:55:58",
    "edited": {
      "time_stamp": "2020-10-01 10:56:06"
    },
    "text": "Let us know you thoughts on this years developer day. Fill in our survey here: <https://forms.gle/yb8FKSQnDypVwqxj8>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:56:14",
    "text": "let’s talk about this music",
    "reply_count": 11,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-01 10:56:33"
      },
      {
        "time_stamp": "2020-10-01 10:56:55"
      },
      {
        "time_stamp": "2020-10-01 10:57:14"
      },
      {
        "time_stamp": "2020-10-01 10:57:33"
      },
      {
        "time_stamp": "2020-10-01 11:05:12"
      },
      {
        "time_stamp": "2020-10-01 11:05:53"
      },
      {
        "time_stamp": "2020-10-01 11:06:29"
      },
      {
        "time_stamp": "2020-10-01 11:06:37"
      },
      {
        "time_stamp": "2020-10-01 11:06:39"
      },
      {
        "time_stamp": "2020-10-01 11:07:26"
      },
      {
        "time_stamp": "2020-10-01 11:08:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-10-01 10:56:19",
    "text": "I’ll send CNN an email now"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 10:56:33",
    "text": "did <@U26BLKGE4> play the keys?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 10:56:55",
    "text": "man I got a new synth in with vocoder stuff, I coulda sang for you mark if you played something"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 10:57:14",
    "text": "seriously though"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 10:57:33",
    "edited": {
      "time_stamp": "2020-10-01 10:57:41"
    },
    "text": "I picked up this guy mark, keeping with the special editions since you got me moving in that direction <https://www.sweetwater.com/store/detail/MicroFreakSE--arturia-microfreak-vocoder-edition-hybrid-synthesizer?mrkgadid=3344196834&amp;mrkgcl=28&amp;mrkgen=gpla&amp;mrkgbflag=0&amp;mrkgcat=keyboards&amp;synthesizers&amp;&amp;acctid=21700000001645388&amp;dskeywordid=92700046938655603&amp;lid=92700046938655603&amp;ds_s_kwgid=58700005285225282&amp;ds_s_inventory_feed_id=97700000007215323&amp;dsproductgroupid=712001387647&amp;product_id=MicroFreakSE&amp;prodctry=US&amp;prodlang=en&amp;channel=online&amp;storeid=&amp;device=c&amp;network=g&amp;matchtype=&amp;locationid=9012253&amp;creative=360738227918&amp;targetid=pla-712001387647&amp;campaignid=2055912416&amp;gclid=CjwKCAjw_NX7BRA1EiwA2dpg0i1k6hHPBUSVrwM4BlgmEHDk8LlZcsXgDD52nhXYWHz8WoYAsjs7XxoCIiYQAvD_BwE&amp;gclsrc=aw.ds>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-10-01 11:00:28",
    "text": "we need to add this to next years for sure lol"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2020-10-01 11:01:26",
    "text": "did i miss the announcement for the swag?",
    "reply_count": 34,
    "reply_users_count": 8,
    "replies": [
      {
        "time_stamp": "2020-10-01 11:05:30"
      },
      {
        "time_stamp": "2020-10-01 11:12:17"
      },
      {
        "time_stamp": "2020-10-01 11:15:39"
      },
      {
        "time_stamp": "2020-10-01 11:18:26"
      },
      {
        "time_stamp": "2020-10-01 11:19:40"
      },
      {
        "time_stamp": "2020-10-01 11:20:05"
      },
      {
        "time_stamp": "2020-10-01 11:20:29"
      },
      {
        "time_stamp": "2020-10-01 11:20:41"
      },
      {
        "time_stamp": "2020-10-01 11:20:58"
      },
      {
        "time_stamp": "2020-10-01 11:24:36"
      },
      {
        "time_stamp": "2020-10-01 11:25:04"
      },
      {
        "time_stamp": "2020-10-01 11:25:40"
      },
      {
        "time_stamp": "2020-10-01 11:25:56"
      },
      {
        "time_stamp": "2020-10-01 11:27:33"
      },
      {
        "time_stamp": "2020-10-01 11:27:49"
      },
      {
        "time_stamp": "2020-10-01 11:28:09"
      },
      {
        "time_stamp": "2020-10-01 11:29:54"
      },
      {
        "time_stamp": "2020-10-01 11:30:22"
      },
      {
        "time_stamp": "2020-10-01 11:33:53"
      },
      {
        "time_stamp": "2020-10-01 11:33:53"
      },
      {
        "time_stamp": "2020-10-01 11:34:09"
      },
      {
        "time_stamp": "2020-10-01 11:34:31"
      },
      {
        "time_stamp": "2020-10-01 11:40:35"
      },
      {
        "time_stamp": "2020-10-01 11:44:02"
      },
      {
        "time_stamp": "2020-10-01 11:44:23"
      },
      {
        "time_stamp": "2020-10-01 12:03:07"
      },
      {
        "time_stamp": "2020-10-01 12:03:18"
      },
      {
        "time_stamp": "2020-10-01 12:05:15"
      },
      {
        "time_stamp": "2020-10-01 12:12:41"
      },
      {
        "time_stamp": "2020-10-01 12:12:52"
      },
      {
        "time_stamp": "2020-10-01 12:14:05"
      },
      {
        "time_stamp": "2020-10-01 12:14:46"
      },
      {
        "time_stamp": "2020-10-01 12:16:57"
      },
      {
        "time_stamp": "2020-10-02 12:53:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:01:35",
    "text": "i may have missed that as well"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 11:05:12",
    "text": "that's sick man"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 11:05:30",
    "text": "<@UQNEXHW14>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:05:53",
    "text": "its fun. I'm using probably 1/1000 of the cool things it can do"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 11:06:29",
    "text": "hmmm, like a third-party CSS or JS library?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:06:37",
    "text": "LOL"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:06:39",
    "text": "full circle"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:07:26",
    "edited": {
      "time_stamp": "2020-10-01 11:07:40"
    },
    "text": "If I'm starting fresh I just avoid those things. Learning how to do that one item in a library in regular code is ~always~ worth it"
  },
  {
    "time_stamp": "2020-10-01 11:08:22",
    "text": "preach"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2020-10-01 11:11:33",
    "text": "I would have rushed the stage, so probably not the best candidate lol"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2020-10-01 11:12:17",
    "text": "My random name generator is warming up, please hold"
  },
  {
    "time_stamp": "2020-10-01 11:15:39",
    "text": "suspense"
  },
  {
    "time_stamp": "2020-10-01 11:18:26",
    "text": "random"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 11:19:40",
    "text": "Who let <@UDEASNWEB> have access to next year’s swag?"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2020-10-01 11:19:54",
    "edited": {
      "time_stamp": "2020-10-01 11:20:55"
    },
    "text": "There was a question about adding IDs and Classes to Custom Modules, not sure if this is on the roadmap from the HubSpot team, but what I do is create fields to handle this control manually.\n\n{{ module.background }} and {{ module.section_padding }} - choice fields with pre-defined CSS classes as options\n{{ module.anchor_id }} - plain text field\n{{ module.hide_section }} - Boolean field\n```&lt;div class=\"{{ module.background }} {{ module.section_padding }}\" id=\"{{ module.anchor_id }}\" {% if module.hide_section %}style=\"display:none\"{% endif %}&gt;\n\n&lt;!-- module code --&gt;\n\n&lt;/div&gt;```",
    "reply_count": 6,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2020-10-01 11:31:41"
      },
      {
        "time_stamp": "2020-10-01 11:33:26"
      },
      {
        "time_stamp": "2020-10-01 11:33:28"
      },
      {
        "time_stamp": "2020-10-01 11:41:25"
      },
      {
        "time_stamp": "2020-10-01 13:14:21"
      },
      {
        "time_stamp": "2020-10-01 13:22:35"
      }
    ]
  },
  {
    "time_stamp": "2020-10-01 11:20:05",
    "text": "i'm special"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 11:20:29",
    "text": "you should totally make one of those that’s the sprocket"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 11:20:41",
    "text": "people would line up for that"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 11:20:58",
    "text": "and by “people” i mean “me,” and maybe i would be the only one in line"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 11:24:36",
    "text": "now that i am an employee, i need to figure out where the swag closet is located."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 11:25:04",
    "text": "Note to self: Hide the key."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 11:25:40",
    "text": "locks cant stop me now that i have my HubSpot cape"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2020-10-01 11:25:56",
    "text": "Forget tshirts I want a cape"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 11:27:33",
    "edited": {
      "time_stamp": "2020-10-01 11:29:24"
    },
    "text": "Gotta admit the cape is pretty great.\nFun-fact if you ever see a zoom/presentation with me it’s hanging on my wall. Love that thing.\n\nAlso fun fact, during my first months at HubSpot I visited our Cambridge office and wore the cape around the office for like 2 days. There were lots of eyes following me. I like to think they just wished they had one."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 11:27:49",
    "text": "<@UAYMEC3LJ>, come do a guest post for me on the community and i will make sure you have one.  even if i have to steal <@U7SL518D6>’s"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2020-10-01 11:28:09",
    "text": "cape and tshirt, wont mind both :cat:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 11:29:54",
    "text": "i bet himanshu has one, <@UCH1L597V>!"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2020-10-01 11:30:22",
    "text": "deal! <@UD53A9UUR>"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2020-10-01 11:31:41",
    "text": "I do the same"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2020-10-01 11:33:26",
    "text": "the only thing that i could use would be a global variable that i van use as the mobile braking point and use it inside the css section … so if i chang it in the main css file to not have to go trough all the module to update that number"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-01 11:33:28",
    "edited": {
      "time_stamp": "2020-10-01 11:34:55"
    },
    "text": "I usually do id=\"example-module--{{name|md5]}\" for IDs, that way it's unique to the instance in case a module is used multiple times on a page."
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2020-10-01 11:33:53",
    "text": "never saw wearing him <@UD53A9UUR> but he might have kept that for a purpose"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 11:33:53",
    "text": "i have a blanket and wore it as a cape at the office. i called it my business cape."
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 11:34:09",
    "text": "my HubSpot business cape"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 11:34:31",
    "text": "and a colleague’s husband stopped by for lunch, saw it, and said “oh, you have a business cape.” we were instant friends."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 11:40:35",
    "text": "<@UCH1L597V>, i will have a conversation with him.  if he has it, he needs to share it.  if he doesnt, i need to work on that as he is a HUGE help on the community"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:41:25",
    "edited": {
      "time_stamp": "2020-10-01 11:41:52"
    },
    "text": "<@U26BLKGE4>, I use `{% set moduleIdName = 'module_' ~ name %}` -- why do you do the md5 filter?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:44:02",
    "text": "Did the developers of your random number generator push a large release and it caused a bug in the app?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-10-01 11:44:23",
    "text": "It's been abotu 35 minutes so right about now is when the bug should fix itself lol"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2020-10-01 12:03:07",
    "text": "Results are in"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2020-10-01 12:03:18",
    "text": "alas, no one in THIS thread was selected"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2020-10-01 12:05:15",
    "text": "We've pulled the three lucky winners and will be emailing them shortly. Please trust that in the in 2021 folks who want HS swag should be able to get some :slightly_smiling_face: You'll be the first to know!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-01 12:12:41",
    "text": "i think this generator was rigged against us :stuck_out_tongue_winking_eye:"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 12:12:52",
    "text": "it’s okay. i have my cape, next time i go to my office."
  },
  {
    "time_stamp": "2020-10-01 12:14:05",
    "text": "sad super hero"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-01 12:14:46",
    "text": "<@UD53A9UUR> hate to tell ya but it was. Thats what happens when you don the sprocket :P HubSpotters dont get to win the cool swag."
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-10-01 12:16:57",
    "text": "no they just have a damn closet full."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2020-10-01 13:14:21",
    "text": "I do something pretty similar to this too. What would be really cool is to have it integrated into the drag-and-drop editor, so page authors can assign my custom classes to entire sections. That's kinda the one thing keeping me from fully embracing the drag-and-drop stuff."
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-10-01 13:22:35",
    "text": "If you're module is very JavaScript heavy, <https://github.com/HubSpot/cms-react-boilerplate/blob/master/src/modules/app.module/module.html> also may be interesting"
  }
]
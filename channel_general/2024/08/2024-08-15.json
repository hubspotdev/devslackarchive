[
  {
    "poster": {
      "poster_name": "Ryan Patel",
      "poster_handle": "ryan.patel"
    },
    "time_stamp": "2024-08-15 01:21:33",
    "text": "Hello, is there any way to add header and footer snippets to a knowledge base?",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-08-15 02:50:56"
      },
      {
        "time_stamp": "2024-08-15 02:57:38"
      },
      {
        "time_stamp": "2024-08-15 03:01:53"
      },
      {
        "time_stamp": "2024-08-15 03:06:49"
      },
      {
        "time_stamp": "2024-08-15 03:08:51"
      },
      {
        "time_stamp": "2024-08-16 01:45:19"
      },
      {
        "time_stamp": "2024-08-16 04:48:01"
      }
    ]
  },
  {
    "text": "as of now - unfortunately no. There's a public KB customization beta, you can check out.\n\nFrom my experience - the best solution for a customizable KB is a blog with custom templates which are looking like a KB",
    "time_stamp": "2024-08-15 02:50:56"
  },
  {
    "poster": {
      "poster_name": "Ryan Patel",
      "poster_handle": "ryan.patel"
    },
    "time_stamp": "2024-08-15 02:57:38",
    "text": "Thanks for the reply. Is there functionality to add snippets in the new customisation beta?"
  },
  {
    "text": "according to this part of description, you're able to add snippets to header on a global level.\nAlso you could try to add it in the pages settings, if your KB is hosted on a seperate (sub)domain.\n\nAnother idea: Create a seperate file like \"snippets.html\" in the design-manager and put your `{% require_js %}`, `{% require_head %}`, `{% require_footer %}`  into this file. Once created, link this file in the KB settings. Might work",
    "time_stamp": "2024-08-15 03:01:53"
  },
  {
    "poster": {
      "poster_name": "Ryan Patel",
      "poster_handle": "ryan.patel"
    },
    "time_stamp": "2024-08-15 03:06:49",
    "text": "This is great thank you. Is there a link to that page with the details of the knowledge base beta?"
  },
  {
    "text": "It should beright inside your portal. Click on the portal name(top right), select \"Product Updates\", select \"All product updates\" in the left sidebar and search for \"knowledge base\"",
    "time_stamp": "2024-08-15 03:08:51"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-08-15 05:41:30",
    "text": "This from a search leads me to think footer is definitely better option: Placing JavaScript in the head offers code separation and early access benefits but may lead to rendering blockage and slower page loading. Conversely, JavaScript in the footer provides faster page load times and minimizes SPOF risks but can result in delayed execution for certain functionalities."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-15 06:04:13",
    "edited": {
      "time_stamp": "2024-08-15 06:06:26"
    },
    "text": "Firstly it doesn’t matter, The developer docs says it goes in the head unless you add position:footer, and this change broke my page since I had a line of js that needs to run before my other files load.\n\nSecondly putting script files in the footer is outdated logic\nIf you are including script files you should load them in the header but use async or defer, this allows the files to be downloaded simultaneously on a separate thread (also not impacting render blocking) If you use async and put them in the footer there is no point in using async as it will just load it after anyway.\n\nTo be fair in the case of the require_js tag it’s more likely you’ll be adding script code. In this case you may only want your js to run after the page has loaded and then you would put it in the footer. However as I said in this case I have 1 line of code that needs to run first.\n\n(You’re talking to someone that spent way too much time trying to get pagespeed scores of 100)"
  },
  {
    "poster": {
      "poster_name": "RJ Hallin",
      "poster_handle": "robert.hallinjr"
    },
    "time_stamp": "2024-08-15 10:26:17",
    "text": "Hi everyone! Curious to see if anyone has any experience downsampling images in conjunction with the HubSpot CMS\nThanks!",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-08-15 14:02:50"
      },
      {
        "time_stamp": "2024-08-16 03:55:56"
      },
      {
        "time_stamp": "2024-08-16 06:54:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2024-08-15 11:59:09",
    "text": "Hey <@U07FBTXPE2V>, you could set up a <https://developers.HubSpot.com/docs/cms/data/memberships|membership page/portal> which has a registration/login and provide the quote URLs based on the company URL"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-15 14:02:50",
    "edited": {
      "time_stamp": "2024-08-15 14:03:08"
    },
    "text": "HubSpot CMS handles most of this for you, assuming you're using images loaded through the image/file management system - it'll try to serve an optimized image based on the html size attributes\n• <https://knowledge.HubSpot.com/files/automatic-image-resizing-on-HubSpot-content>\n• <https://developers.HubSpot.com/docs/cms/developer-reference/cdn#image-compression-optimization-and-automatic-image-resizing>\nYou can force resize in your module/template code if you want: <https://developers.HubSpot.com/docs/cms/hubl/functions#resize-image-url>\n\nThere's some relevant details on this too: <https://developers.HubSpot.com/docs/cms/guides/speed>"
  }
]
[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 03:53:53",
    "text": "maybe just the textarea fieldType would do this?\n<https://developers.HubSpot.com/docs/api/crm/properties>"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 03:55:06",
    "text": "There is also a json field where I guess with some encoding and decoding you could store it, but it wouldn’t be straight forward"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 03:58:23",
    "text": "have you tried the unescape html?\n<https://developers.HubSpot.com/docs/cms/hubl/filters#unescape-html>"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 07:17:25",
    "text": "Hello community\n{% set email =  request.query_dict.email %}\nHow can I found contact information using this query dict, using HUBL code",
    "reply_count": 17,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-06-13 07:39:22"
      },
      {
        "time_stamp": "2024-06-13 07:40:19"
      },
      {
        "time_stamp": "2024-06-13 07:40:57"
      },
      {
        "time_stamp": "2024-06-13 07:41:19"
      },
      {
        "time_stamp": "2024-06-13 07:41:44"
      },
      {
        "time_stamp": "2024-06-13 07:42:13"
      },
      {
        "time_stamp": "2024-06-13 07:44:08"
      },
      {
        "time_stamp": "2024-06-13 07:44:12"
      },
      {
        "time_stamp": "2024-06-13 07:44:42"
      },
      {
        "time_stamp": "2024-06-13 07:45:47"
      },
      {
        "time_stamp": "2024-06-13 07:46:56"
      },
      {
        "time_stamp": "2024-06-13 07:51:38"
      },
      {
        "time_stamp": "2024-06-13 07:53:49"
      },
      {
        "time_stamp": "2024-06-13 07:56:29"
      },
      {
        "time_stamp": "2024-06-13 08:04:15"
      },
      {
        "time_stamp": "2024-06-13 08:07:12"
      },
      {
        "time_stamp": "2024-06-13 08:14:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:39:22",
    "edited": {
      "time_stamp": "2024-06-13 07:40:20"
    },
    "text": "request.query_dict gets url query parameters\n\ne.g. if the url was <http://example.com?email=me@gmail.com|example.com?email=me@gmail.com>\n\n{% set email = request.query_dict.email %} would set the email from the url"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 07:40:19",
    "text": "Thanks Matt scott\nbut I need contact information using this email id"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:40:57",
    "text": "from the CRM?"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 07:41:19",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:41:44",
    "text": "I believe HubSpot doesn’t let you get CRM contact data unless you’re on private pages"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:42:13",
    "text": "<https://developers.HubSpot.com/docs/cms/data/crm-objects>"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 07:44:08",
    "text": "I think I need use to API for getting contact data, Without using HUBL code."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:44:12",
    "text": "At this point is the contact know via cookies?\ncan you use the {{contact}} variable?\n<https://developers.HubSpot.com/docs/cms/hubl/variables>"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 07:44:42",
    "text": "Yes, there is no way to find contact details using email id, without using membership."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:45:47",
    "text": "Yeah you’d have to use the API’s, but you can’t run them client side as it would expose the key, so you can use serverless functions in HubSpot or setup your own serverless functions if you don’t have access to HubSpot’s"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 07:46:56",
    "text": "yes, I'm working on that, If you have any code for ref. please share,\nI'm using this code\nconst axios = require('axios');\nlet data = '';\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: '<https://api.hubapi.com/contacts/v1/search/query?q=developerhub8@gmail.com>',\n  headers: {\n    'Authorization': '*****'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) =&gt; {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) =&gt; {\n  console.log(error);\n});"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:51:38",
    "edited": {
      "time_stamp": "2024-06-13 07:52:56"
    },
    "text": "i’d probably use the contacts api\n<https://developers.HubSpot.com/docs/api/crm/contacts>\n\nif you use the batch one you can use the idProperty to change it from record id to email\n\n```curl --request POST \\\n  --url '<https://api.hubapi.com/crm/v3/objects/contacts/batch/read?archived=false>' \\\n  --header 'authorization: Bearer YOUR_ACCESS_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"idProperty\": \"email\",\n  \"inputs\": [\n    {\n      \"id\": \"me@email.com\"\n    }\n  ],\n  \"properties\": [\n    \"firstname\",\n    \"surname\"\n  ]\n}'```"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 07:53:49",
    "text": "(i just copied the curl example from the docs, but you can use axios to do it better)"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 07:56:29",
    "text": "ok thank you"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-06-13 08:04:15",
    "text": "I would be sure to use the newer v3 version like in Matt's example - your example uses the older v1 legacy api which still works but newer is better to be using I think"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 08:07:12",
    "text": "Ag yeah didn’t notice it was v1 just saw it was search api, which you can use the newer version of that too\n<https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "poster": {
      "poster_name": "Kaushik",
      "poster_handle": "kaushik.abhicenation"
    },
    "time_stamp": "2024-06-13 08:14:32",
    "text": "Thank You <@UDJV5B73R>,\nI have find contact details using API"
  },
  {
    "poster": {
      "poster_name": "Joe Dee",
      "poster_handle": "jody2be"
    },
    "time_stamp": "2024-06-13 09:08:20",
    "text": "Ohh u mean... fetch ALL destinations and display, but afterwards hide what is not needed? Wouldn't this kind of be the same issue where the destination comes fromt he contact after the hubl is rendered?"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 09:48:03",
    "text": "JSON field? I will have to check that out. I have been banging my head with this.."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 09:52:33",
    "edited": {
      "time_stamp": "2024-06-13 09:52:39"
    },
    "text": "yeah it’s also defined in that link i shared you will just have to use the api to create your property"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 09:53:17",
    "text": "Ah my bad didn’t read it properly\njson\tA text value stored as formatted JSON, used only for internal properties. Properties of this type cannot be created or edited, and are not visible in HubSpot."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-06-13 09:59:35",
    "text": "I guess string &gt; textarea would be most likely, but don’t know if it has any validation"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 13:00:05",
    "text": "Hi all! Does anyone know how I could achieve something similar to this (below isn’t valid):\n```{% set templateContent = include \"./partials/test-proxy-partial.html\"  %}```",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-06-13 14:44:57"
      },
      {
        "time_stamp": "2024-06-13 14:52:39"
      },
      {
        "time_stamp": "2024-06-13 14:56:14"
      },
      {
        "time_stamp": "2024-06-13 15:03:26"
      },
      {
        "time_stamp": "2024-06-13 15:07:55"
      },
      {
        "time_stamp": "2024-06-13 15:09:31"
      },
      {
        "time_stamp": "2024-06-13 15:10:13"
      },
      {
        "time_stamp": "2024-06-13 15:12:04"
      },
      {
        "time_stamp": "2024-06-13 15:14:03"
      },
      {
        "time_stamp": "2024-06-13 15:14:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-06-13 14:44:57",
    "text": "I imagine you should be able to do it with the block syntax for `set`:\n```{% set templateContent %}\n  {% include \"./partials/text-proxy-partial.html\" %}\n{% endset %}```"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 14:52:39",
    "text": ":exploding_head:  - OMG!!!! <@U04AQA0QM8E> I did not know you could set vars using block “mode” - That WORKED amazing! Thanks a lot!"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-06-13 14:56:14",
    "text": "I actually just discovered it, myself — I haven’t even gotten to use it in production yet. :)"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 15:03:26",
    "text": "Well it worked wonderfully. The reason I wanted that was to also encode the template to base64"
  },
  {
    "poster": {
      "poster_name": "Kyle Maguire",
      "poster_handle": "kyle.maguire"
    },
    "time_stamp": "2024-06-13 15:06:31",
    "text": "Hi :slightly_smiling_face: I need to build out a custom search page but can’t seem to get anywhere"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-06-13 15:07:55",
    "text": "Excellent! For the sake of my own curiosity, how are you performing that base64 conversion?"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 15:09:31",
    "text": "```{{ templateContent|b64encode }}```"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 15:10:13",
    "text": "However, if you pass it to JS, I am not sure we can decode it using atob"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-06-13 15:12:04",
    "text": "Hah, I thought there was a base64 filter, but it doesn’t appear to be in the documentation for some reason!\n\nWell, I have an extra tip for you then; filters can be applied directly to set blocks at definition:\n```{% set templateContent|b64encode %}\n  // content goes here\n{% endset %}```"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 15:14:03",
    "text": ":exploding_head:  I was tempted to ask!"
  },
  {
    "poster": {
      "poster_name": "Rolando Carias",
      "poster_handle": "rolando"
    },
    "time_stamp": "2024-06-13 15:14:13",
    "text": ":slightly_smiling_face:"
  }
]
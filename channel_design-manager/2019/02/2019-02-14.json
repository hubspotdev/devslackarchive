[
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 01:50:39",
    "text": "Hey guys,\n\nI've been dealing with a very strange conundrum in a Custom Module that uses the {% include %} syntax to include Global Groups into a page depending on the option. Here's the Design Forum Post I created for that:\n<https://community.HubSpot.com/t5/CMS-Development/Simple-Custom-Module-not-being-rendered-correctly/td-p/252083>\n\nCan anyone help or point me in a helpful direction?"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2019-02-14 07:50:33",
    "text": "seems like they don’t want us to use includes in custom modules in general in design manager V2"
  },
  {
    "text": "",
    "time_stamp": "2019-02-14 07:50:38"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:51:25",
    "text": "Correct you should avoid using an include inside of a module"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:51:54",
    "text": "what’s the specific situation you’re trying to accomplish by doing it I may have a workaround for ya"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 07:52:24",
    "text": "This is a module used on 100's of page templates and pages to handle the Header that is shown on them."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:52:43",
    "text": "okay so why isn’t the code inside that module instead of a .html file?"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2019-02-14 07:53:24",
    "text": "you can still use global sitevars… {% import “path/html/site-variables.html” as sitevars %}… but includes you can’t… which honestly is a little frustrating i think there are some decent use cases"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 07:53:48",
    "text": "Because this was the way the module was deisgned by other people before I came on the scene, and they wanted to be able to easily change what is rendered through those Global Groups"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2019-02-14 07:53:50",
    "text": "but yeah… for example if you want it to change our menus, use the menu field type right in your custom module"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:54:13",
    "text": "the import method is a workaround you can use for not having includes. It’s a little bit of a hack and wouldn’t encourage it unless you have a good use-case"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:54:21",
    "text": "recently had to use it and it works great"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2019-02-14 07:54:30",
    "text": "good to know jon"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:55:31",
    "text": "so can you explain why you need to use an include instead of simply adding the html and HubL directly into the custom module and replacing any HubL tags with fields in the module?"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2019-02-14 07:56:05",
    "text": "_in other news this is probably a known issue but does anybody else find it frustrating when you open a module, don’t actually modify anything, but HubSpot shows it as italic and with an asterisk denoting you have unpublished changes… makes it really hard to know when you ACTUALLY have unpublished changes_",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-14 11:22:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:56:06",
    "text": "The only situation I can think of where using an include in a module is necessary is if you are trying to repeat some HTML across several different modules"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2019-02-14 07:56:16",
    "text": "right"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 07:57:29",
    "text": "Because the end user wants to be able to easily change the contents of those Header Options in those Global Groups, instead of having developers change the html"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 07:57:31",
    "edited": {
      "time_stamp": "2019-02-14 07:57:34"
    },
    "text": "does it make sense?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:58:10",
    "text": "no it doesn’t really make sense because you can make the module have fields to control all of that. you don’t need the include for that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:58:31",
    "text": "and that module can be set globally inside that header global group"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 07:58:44",
    "text": "so any fields they pick values for will affect the whole site"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:00:15",
    "text": "it's more about the layout of the header that could be changed in a Global Group using the drag and drop builder instead of changing html/HubL\nbut it's alright, I'll look into the alternatives for the client, they just asked me to change they Global Groups that they include yusing this module, and in doing so I ran into the errors"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:00:38",
    "text": "thanks for pointing me in the right direction and letting me know about possible workarounds :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:01:47",
    "text": "I'll get beack to you guys if I have any more questions and will ook into possible changes to that module"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 08:03:47",
    "text": "yea, I’d go the route of making the custom module contain all of the stuff you want instead of the html file. it’s more flexible, less prone to problems down the road.\n\nThe import trick which basically mimics the include functionality, is not something I’d advise for most scenarios. The only time it is worthwhile is if you have multiple modules which will use the exact same code in part of the module, and you want to have only one place to maintain it."
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:05:00",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:22:49",
    "edited": {
      "time_stamp": "2019-02-14 08:25:04"
    },
    "text": "Hey guys, I just tried to experiment with using the {% import “path/html/site-variables.html” as sitevars %} syntax doing something like this:\n\n{% import 'generated_global_groups/3162082770.html' as newmenu %}\n    {{ newmenu }}\n\nbut instead of displaying the Global Group I get a JSON without any content:\n{language_overrides=null, has_menu_tag=true, master_language=null, in_container=false, widget_attributes=null}"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:22:52",
    "edited": {
      "time_stamp": "2019-02-14 08:22:54"
    },
    "text": "is this normal behaviour?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 08:25:48",
    "text": "are you now trying to display a global group inside of a custom module?\n\nThat’s not going to work"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 08:26:48",
    "text": "whatever you’re attempting to do, I think there’s likely a much better way"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:28:13",
    "text": "yes, I wanted to try replacing the {% include %} with {% import %} tp se if it will work because if that was the case it would have saved my client a lot of time :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 08:28:41",
    "text": "yea, import and include work differently"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:28:48",
    "edited": {
      "time_stamp": "2019-02-14 08:28:50"
    },
    "text": "I thought that you can go between one or the other but apparently you can't :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:29:24",
    "text": "the main idea is to stick as much as possible to the original design of that custom module if I can, that's the reasoning behind me trying this"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-14 08:29:27",
    "text": "There is a way to import actual html (which is what I mentioned above) but I really think that’s the wrong choice for what you need to do"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:30:19",
    "text": "Yes, you're right :slightly_smiling_face:\nImporting actual HTML wouldn't help, I just needed to see if I could fix this old module somehow but it seems more and more like it will need to be redone in some way or another"
  },
  {
    "poster": {
      "poster_name": "Alex Paul",
      "poster_handle": "alex.paul"
    },
    "time_stamp": "2019-02-14 08:38:17",
    "edited": {
      "time_stamp": "2019-02-14 08:38:53"
    },
    "text": "Thanks for your time and answers guys! It really helped me get to the bottom of the problem, after days of going back and forth with unhelpful HubSpot support :slightly_smiling_face: you guys are amazing!"
  },
  {
    "poster": {
      "poster_name": "Michele Herzog",
      "poster_handle": "mherzog"
    },
    "time_stamp": "2019-02-14 11:22:30",
    "text": "Aware and working on it <@U24GZQ3GF>!"
  }
]
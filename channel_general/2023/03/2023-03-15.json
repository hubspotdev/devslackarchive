[
  {
    "poster": {
      "poster_name": "Ankit Parmar",
      "poster_handle": "ankit897"
    },
    "time_stamp": "2023-03-15 07:01:36",
    "text": "<https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields-overview>"
  },
  {
    "poster": {
      "poster_name": "Sami Sundberg",
      "poster_handle": "sami.sundberg"
    },
    "time_stamp": "2023-03-15 07:03:25",
    "text": "<@U0133LK9GP9> I think that works only for modules or have I missed something."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 08:54:35",
    "text": "1. no, you could do this with webhooks (not ops hub webhooks, just <https://developers.HubSpot.com/docs/api/webhooks|normal ones and an app>)\n2. Just like the above answer you don't need ops hub for a basic webhook integration, if you're wanting to use datasyncs though you'll definitely want to get ops hub\n3. You need to be on the pro plan to use custom code actions"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 08:54:40",
    "text": "<https://www.HubSpot.com/products/operations>"
  },
  {
    "poster": {
      "poster_name": "MB",
      "poster_handle": "millieband"
    },
    "time_stamp": "2023-03-15 09:09:04",
    "text": "<@U01QVR44MEY> this is brilliant!! Exactly what I was looking for. Thank you so much :sparkles::sparkles::sparkles: game changer!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 09:09:33",
    "text": "Of course, glad I (mostly Max though) could help"
  },
  {
    "subtype": "bot_message",
    "text": ":HubSpotheart:*Help your fellow HubSpot Developers!*:HubSpotheart:\n\nThis Slack lives and breathes by its community. If you're posting a question, take a moment and click around a few channels to see if there are any questions you can help answer. Instant karma!",
    "username": "Help the Community",
    "time_stamp": "2023-03-15 09:55:10"
  },
  {
    "poster": {
      "poster_name": "Mohamad Saab",
      "poster_handle": "mohamad.saab"
    },
    "time_stamp": "2023-03-15 10:12:58",
    "text": "Hello, is there a way to reset the original source of contacts in HubSpot manually at all? Or Is it at least possible through operations hub? Is there a code that I could use for that matter? Thank you!"
  },
  {
    "text": "Hi everyone, In HubSpot setting tab - &gt; Customize the right sidebar section-&gt; shall we add our own custom cards like reports, custom CRM card data? Attached image for your reference. Can you any one help me is it possible?",
    "time_stamp": "2023-03-15 10:58:04",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 11:17:38"
      },
      {
        "time_stamp": "2023-03-15 11:18:17"
      },
      {
        "time_stamp": "2023-03-15 23:00:39"
      },
      {
        "time_stamp": "2023-03-16 00:42:46"
      },
      {
        "time_stamp": "2023-03-16 07:07:06"
      },
      {
        "time_stamp": "2023-03-16 07:07:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 11:17:38",
    "edited": {
      "time_stamp": "2023-03-15 11:17:46"
    },
    "text": "Yes you can move your custom crm cards around in there but you cant have reports in there"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 11:18:17",
    "text": "The only way you could get reports in there, is if you made a project based crm card and included a report in the custom crm card"
  },
  {
    "poster": {
      "poster_name": "Asiya Fatima",
      "poster_handle": "afatima"
    },
    "time_stamp": "2023-03-15 11:22:23",
    "text": "Hi everyone, I am not a developer but I am looking for one who can help me with finding the problem with HubSpot tracking code. I was asked to reach out to developers here by HubSpot support so the problem can be identified on the back end",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 13:40:45"
      },
      {
        "time_stamp": "2023-03-15 13:54:07"
      },
      {
        "time_stamp": "2023-03-15 13:59:17"
      },
      {
        "time_stamp": "2023-03-15 13:59:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Roberto Pacheco",
      "poster_handle": "roberto476"
    },
    "time_stamp": "2023-03-15 12:16:20",
    "text": "one question: before the new “custom modules in blog posts” feature, we used to add custom modules there with the snippets, now all that is broken, is there a way of restore that? now that modules are not rendering and im loosing all the info there :disappointed:"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2023-03-15 13:40:45",
    "text": "Hey Asiya, if you have budget to hire developers to help with this, you can post this in <#CBNDYJJAZ|jobs>... otherwise, it may help to provide a bit more detail to see if there is a more simple fix that someone can help with here"
  },
  {
    "poster": {
      "poster_name": "Asiya Fatima",
      "poster_handle": "afatima"
    },
    "time_stamp": "2023-03-15 13:54:07",
    "text": "Hey, we have a form submission website/landing page built on bubble where we installed the HubSpot's tracking code. But HubSpot is still not capturing any form submissions. I was asked to reach out to a developer here who can check the website on the back end to see if the tracking code is installed correctly or not. If it is not installed correctly, please let me know how to do so correctly. If it is installed correctly, please let me know what is the problem with the website/form that HubSpot is not capturing any submissions.  <@UQNEXHW14>"
  },
  {
    "poster": {
      "poster_name": "Asiya Fatima",
      "poster_handle": "afatima"
    },
    "time_stamp": "2023-03-15 13:59:17",
    "text": "<https://tutor.neuroneducation.com/registration_form/online-tutoring>"
  },
  {
    "poster": {
      "poster_name": "Asiya Fatima",
      "poster_handle": "afatima"
    },
    "time_stamp": "2023-03-15 13:59:25",
    "text": "This is the website"
  },
  {
    "poster": {
      "poster_name": "Michael Brumm",
      "poster_handle": "michael.j.brumm"
    },
    "time_stamp": "2023-03-15 14:04:00",
    "text": "Hi everyone,\nGeneral question re: *multilingual embedded forms*\n\nClient has requested to use HS embedded forms for an event template on their *Wordpress* site that supports 3-6 languages depending on the event.\n\nDoes this sound like the right course of action?\n1. Set up initial form (ex. English) with the event campaign selected (ex Some Event 2023)\n2. Translate the form to the desired languages (ex German, Italian, etc)\n3. Use a Wordpress language plugin to determine language and then embed the corresponding HS form\nClient will then see all leads in the \"Some Event 2023\" campaign",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 14:06:30"
      },
      {
        "time_stamp": "2023-03-15 14:12:15"
      },
      {
        "time_stamp": "2023-03-15 14:13:38"
      },
      {
        "time_stamp": "2023-03-15 14:15:04"
      },
      {
        "time_stamp": "2023-03-15 14:16:51"
      },
      {
        "time_stamp": "2023-03-15 14:17:38"
      },
      {
        "time_stamp": "2023-03-15 14:17:53"
      },
      {
        "time_stamp": "2023-03-15 14:19:47"
      },
      {
        "time_stamp": "2023-03-15 14:20:15"
      },
      {
        "time_stamp": "2023-03-15 14:21:07"
      },
      {
        "time_stamp": "2023-03-15 14:25:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 14:06:30",
    "text": "Yeah that's how I would personally do it, you could even just have a hidden field across those forms that lets you know that they all a for the same place"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 14:12:15",
    "text": "The embed code will change across the forms so you'll need to set those conditionally but you know that I think"
  },
  {
    "poster": {
      "poster_name": "Michael Brumm",
      "poster_handle": "michael.j.brumm"
    },
    "time_stamp": "2023-03-15 14:13:38",
    "text": "I'm trying to see if they will want to translate the whole site vs just these event landing pages(mini sites)"
  },
  {
    "poster": {
      "poster_name": "Michael Brumm",
      "poster_handle": "michael.j.brumm"
    },
    "time_stamp": "2023-03-15 14:15:04",
    "text": "As of now, it looks like they might just manually build the pages and that way they can just insert the corresponding embed form\n\n<https://SITE.com/EVENT-NAME/en/>\n<https://SITE.com/EVENT-NAME/fr/>"
  },
  {
    "poster": {
      "poster_name": "Michael Brumm",
      "poster_handle": "michael.j.brumm"
    },
    "time_stamp": "2023-03-15 14:16:51",
    "text": "Anything else I missing that I should inform my client about this approach? Limitations? Tracking?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 14:17:38",
    "text": "I mean personally I would build this out on HubSpot cms and then you don't need to manually rebuild the pages and you don't have to worry about switching the forms"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 14:17:53",
    "text": "but the approaching you're thinking of isn't a bad one"
  },
  {
    "poster": {
      "poster_name": "Michael Brumm",
      "poster_handle": "michael.j.brumm"
    },
    "time_stamp": "2023-03-15 14:19:47",
    "text": "Yeah, staying on HS would  be the best approach.  Their main site is on Wordpress and they want to pull their existing content from HubSpot (subdomains) to the main site in this redesign project"
  },
  {
    "poster": {
      "poster_name": "Michael Brumm",
      "poster_handle": "michael.j.brumm"
    },
    "time_stamp": "2023-03-15 14:20:15",
    "edited": {
      "time_stamp": "2023-03-15 14:20:33"
    },
    "text": "I pushed that we keep as is and update the HS landing page framework to mirror the new design"
  },
  {
    "poster": {
      "poster_name": "Michael Brumm",
      "poster_handle": "michael.j.brumm"
    },
    "time_stamp": "2023-03-15 14:21:07",
    "text": "Thanks for confirming this approach, appreciate it <@U01QVR44MEY>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 14:25:08",
    "text": "Yeah of course"
  },
  {
    "poster": {
      "poster_name": "Yiz Segall",
      "poster_handle": "yiz.segall"
    },
    "time_stamp": "2023-03-15 16:21:40",
    "edited": {
      "time_stamp": "2023-03-16 01:46:36"
    },
    "text": "looking to get 2 folks to try out an app that helps you understand persona and company level linkedin spend return by importing your company level linkedin spend data into your company records for free. If you're interested, spend on LinkedIn, it also connects to Salesforce via HubSpot -&gt; PM me",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-03-15 16:35:13"
      },
      {
        "time_stamp": "2023-03-15 16:35:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:35:13",
    "text": "<https://HubSpotdev.slack.com/archives/C2YGWHDKQ/p1678862176147879>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:35:26",
    "text": "Let me know if you need me to be one of your people"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:47:59",
    "text": "This error is doing my head in - any help is appreciated"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:48:01",
    "text": "Error: HubSpot API request failed (Response Code: 404): &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/&gt; &lt;title&gt;Error 404 Not Found&lt;/title&gt; &lt;/head&gt; &lt;body&gt;&lt;h2&gt;HTTP ERROR 404&lt;/h2&gt; &lt;p&gt;Resource not found&lt;/p&gt; &lt;/body&gt; &lt;/html&gt;"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:48:20",
    "text": "```const ACCESS_TOKEN = 'ACCESS_TOKEN_GOES_HERE';\n\nfunction onOpen() {\n  const ui = SpreadsheetApp.getUi();\n  const menu = ui.createMenu('HubSpot');\n  menu.addItem('Test Merge', 'testMergeContacts');\n  menu.addToUi();\n}\n\nfunction testMergeContacts() {\n  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Sheet1');\n  const log = [];\n\n  const existingContacts = getStoredContacts(sheet);\n  const newContacts = getAllContacts(log);\n  const allContacts = existingContacts.concat(newContacts);\n\n  storeContacts(sheet, allContacts);\n\n  const groupedContacts = groupContacts(allContacts);\n  mergeContacts(groupedContacts, log);\n\n  sheet.getRange('A1').setValue(log.join('\\n'));\n}\n\nfunction callHubSpotApi(url, method = 'get', payload) {\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${ACCESS_TOKEN}`,\n    },\n    muteHttpExceptions: true,\n  };\n\n  if (payload) {\n    options.payload = JSON.stringify(payload);\n  }\n\n  const response = UrlFetchApp.fetch(url, options);\n  if (response.getResponseCode() !== 200) {\n    const responseCode = response.getResponseCode();\n    const responseText = response.getContentText();\n    const errorMessage = `HubSpot API request failed (Response Code: ${responseCode}): ${responseText}`;\n    throw new Error(errorMessage);\n  }\n\n  return JSON.parse(response.getContentText());\n}\n\nfunction getAllContacts(log) {\n  let contacts = [];\n  const batchSize = 100;\n  const checkMergesAt = 1000;\n  let contactsSinceLastMergeCheck = 0;\n  \n  const scriptProperties = PropertiesService.getScriptProperties();\n  let after = scriptProperties.getProperty('after') || '';\n\n  while (contactsSinceLastMergeCheck &lt; checkMergesAt) {\n    const apiUrl = `<https://api.hubapi.com/crm/v3/objects/contacts?limit=${batchSize}&amp;properties=email,firstname,lastname,phone,SPID,createdate,HubSpot_owner_id${after> ? `&amp;after=${after}` : ''}`;\n\n    const response = callHubSpotApi(apiUrl);\n    contacts = contacts.concat(response.results);\n    contactsSinceLastMergeCheck += response.results.length;\n\n    if (!response.paging || !response.paging.next) {\n      break;\n    }\n    after = response.paging.next.after;\n    Utilities.sleep(500); // Adjust the delay in milliseconds according to your API rate limits\n  }\n\n  scriptProperties.setProperty('after', after);\n\n  log.push(`Retrieved contacts up to the limit.`);\n  return contacts;\n}\n\nfunction groupContacts(contacts) {\n  const groups = {};\n\n  contacts.forEach(contact =&gt; {\n    const email = contact.properties.email || '';\n    const firstname = contact.properties.firstname || '';\n    const lastname = contact.properties.lastname || '';\n    const phone = contact.properties.phone || '';\n\n    const key = [email, firstname + ' ' + lastname, phone].join('|');\n\n    if (!groups[key]) {\n      groups[key] = [];\n    }\n\n    groups[key].push(contact);\n  });\n\n  return Object.values(groups).filter(group =&gt; group.length &gt; 1);\n}\n\nfunction mergeContacts(groups, log) {\n  for (const group of groups) {\n    group.sort((a, b) =&gt; {\n      if (a.properties.SPID &amp;&amp; !b.properties.SPID) return -1;\n      if (!a.properties.SPID &amp;&amp; b.properties.SPID) return 1;\n      return new Date(a.properties.createdate) - new Date(b.properties.createdate);\n    });\n    const primaryContact = group.shift();\n    for (const secondaryContact of group) {\n      log.push(`Merging contact ${secondaryContact.id} into ${primaryContact.id}`);\n      callHubSpotApi(`<https://api.hubapi.com/crm/v3/objects/contacts/${primaryContact.id}/merge>`, 'post', { objectId: secondaryContact.id });\n    }\n  }\n}\n\nfunction getStoredContacts(sheet) {\n  const data = sheet.getRange('B1:B').getValues();\n  const contacts = data\n    .filter(row =&gt; row[0] !== '')\n    .map(row =&gt; JSON.parse(row[0]));\n\n  return contacts;\n}\n\nfunction storeContacts(sheet, contacts) {\n  const data = contacts.map(contact =&gt; [JSON.stringify(contact)]);\n  sheet.getRange(1, 2, data.length, 1).setValues(data);\n}```"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:54:58",
    "text": "code breakdown by function"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:58:12",
    "text": "`onOpen` function\n1. `function onOpen() {`\n    ◦ Define the `onOpen` function that runs when the Google Sheet is opened.\n2. `const ui = SpreadsheetApp.getUi();`\n    ◦ Get the user interface for the active spreadsheet.\n3. `const menu = ui.createMenu('HubSpot');`\n    ◦ Create a custom menu item called 'HubSpot'.\n4. `menu.addItem('Test Merge', 'testMergeContacts');`\n    ◦ Add a menu item called 'Test Merge' that runs the `testMergeContacts` function when clicked.\n5. `menu.addToUi();`\n    ◦ Add the custom menu to the user interface.\n6. `}`\n    ◦ Close the `onOpen` function.\n`testMergeContacts` function\n1. `function testMergeContacts() {`\n    ◦ Define the `testMergeContacts` function that runs when the 'Test Merge' menu item is clicked.\n2. `const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Sheet1');`\n    ◦ Get the 'Sheet1' from the active spreadsheet.\n3. `const log = [];`\n    ◦ Initialize an empty array for logging.\n4. `const existingContacts = getStoredContacts(sheet);`\n    ◦ Call the `getStoredContacts` function to get the stored contacts from the sheet.\n5. `const newContacts = getAllContacts(log);`\n    ◦ Call the `getAllContacts` function to get all contacts from HubSpot and pass the `log` array.\n6. `const allContacts = existingContacts.concat(newContacts);`\n    ◦ Concatenate the existing contacts and new contacts into a single array.\n7. `storeContacts(sheet, allContacts);`\n    ◦ Call the `storeContacts` function to store the combined list of contacts in the sheet.\n8. `const groupedContacts = groupContacts(allContacts);`\n    ◦ Call the `groupContacts` function to group the contacts based on unique keys.\n9. `mergeContacts(groupedContacts, log);`\n    ◦ Call the `mergeContacts` function to merge the duplicate contacts and pass the `log` array.\n10. `sheet.getRange('A1').setValue(log.join('\\n'));`\n    ◦ Set the value of cell A1 in the sheet to the log messages, separated by newline characters.\n11. `}`\n    ◦ Close the `testMergeContacts` function.\n`callHubSpotApi` function\n1. `function callHubSpotApi(url, method = 'get', payload) {`\n    ◦ Define the `callHubSpotApi` function with parameters `url`, `method` (defaulting to 'get'), and `payload`.\n2. `const options = {`\n    ◦ Initialize an `options` object for the HTTP request.\n3. `method,`\n    ◦ Set the method property to the provided `method` value.\n4. `headers: {`\n    ◦ Create a headers object for the request.\n5. `'Content-Type': 'application/json',`\n    ◦ Set the 'Content-Type' header to 'application/json'.\n6. `'Authorization':` Bearer ${ACCESS_TOKEN}`,`\n    ◦ Set the 'Authorization' header to use the provided `ACCESS_TOKEN`.\n7. `},`\n    ◦ Close the headers object.\n8. `muteHttpExceptions: true,`\n    ◦ Set the `muteHttpExceptions` option to true to prevent the script from stopping if an HTTP exception occurs.\n9. `};`\n    ◦ Close the `options` object.\n10. `if (payload) {`\n    ◦ Check if the `payload` argument is provided.\n11. `options.payload = JSON.stringify(payload);`\n`options` object by converting it to a JSON string.\n\n`}`\n    ◦ Close the `if (payload)` conditional block.\n1. `const response = UrlFetchApp.fetch(url, options);`\n    ◦ Fetch the URL using the `options` object and store the response.\n2. `if (response.getResponseCode() !== 200) {`\n    ◦ Check if the response code is not 200 (success).\n3. `const responseCode = response.getResponseCode();`\n    ◦ Get the response code.\n4. `const responseText = response.getContentText();`\n    ◦ Get the response text.\n5. `const errorMessage = \\`HubSpot API request failed (Response Code: ${responseCode}): ${responseText}`;`\n    ◦ Create an error message with the response code and text.\n6. `throw new Error(errorMessage);`\n    ◦ Throw a new Error with the error message.\n7. `}`\n    ◦ Close the `if (response.getResponseCode() !== 200)` conditional block.\n8. `return JSON.parse(response.getContentText());`\n    ◦ Parse the response content text as JSON and return the result.\n9. `}`\n    ◦ Close the `callHubSpotApi` function.\n"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 19:02:29",
    "text": "etc."
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 19:02:41",
    "text": "think the issue is with the API endpoint",
    "reply_count": 33,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 21:02:10"
      },
      {
        "time_stamp": "2023-03-15 21:02:43"
      },
      {
        "time_stamp": "2023-03-15 21:02:55"
      },
      {
        "time_stamp": "2023-03-15 21:05:35"
      },
      {
        "time_stamp": "2023-03-15 21:06:57"
      },
      {
        "time_stamp": "2023-03-16 10:32:46"
      },
      {
        "time_stamp": "2023-03-16 11:08:03"
      },
      {
        "time_stamp": "2023-03-16 11:09:24"
      },
      {
        "time_stamp": "2023-03-16 11:12:40"
      },
      {
        "time_stamp": "2023-03-16 11:13:43"
      },
      {
        "time_stamp": "2023-03-16 11:14:18"
      },
      {
        "time_stamp": "2023-03-16 11:14:34"
      },
      {
        "time_stamp": "2023-03-16 11:15:36"
      },
      {
        "time_stamp": "2023-03-16 11:15:47"
      },
      {
        "time_stamp": "2023-03-16 11:16:44"
      },
      {
        "time_stamp": "2023-03-16 11:16:50"
      },
      {
        "time_stamp": "2023-03-16 11:17:05"
      },
      {
        "time_stamp": "2023-03-16 11:17:05"
      },
      {
        "time_stamp": "2023-03-16 11:17:21"
      },
      {
        "time_stamp": "2023-03-16 11:17:25"
      },
      {
        "time_stamp": "2023-03-16 11:17:29"
      },
      {
        "time_stamp": "2023-03-16 11:17:47"
      },
      {
        "time_stamp": "2023-03-16 11:17:54"
      },
      {
        "time_stamp": "2023-03-16 11:18:22"
      },
      {
        "time_stamp": "2023-03-16 11:18:25"
      },
      {
        "time_stamp": "2023-03-16 11:18:32"
      },
      {
        "time_stamp": "2023-03-16 11:18:36"
      },
      {
        "time_stamp": "2023-03-16 11:18:38"
      },
      {
        "time_stamp": "2023-03-16 11:18:45"
      },
      {
        "time_stamp": "2023-03-17 14:22:43"
      },
      {
        "time_stamp": "2023-03-17 14:22:49"
      },
      {
        "time_stamp": "2023-03-17 14:30:19"
      },
      {
        "time_stamp": "2023-03-17 14:30:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 21:02:10",
    "text": "<https://HubSpotdev.slack.com/archives/C2YHAHB6K/p1678927033026379>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 21:02:43",
    "edited": {
      "time_stamp": "2023-03-15 21:11:17"
    },
    "text": "Just curious how much of this code and question is AI generated?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 21:02:55",
    "text": "Looking into it now"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 21:05:35",
    "text": "This line is bad:\n\n```callHubSpotApi(`<https://api.hubapi.com/crm/v3/objects/contacts/${primaryContact.id}/merge>`, 'post', { objectId: secondaryContact.id });```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 21:06:57",
    "text": "should be:\n\n```callHubSpotApi(`<https://api.hubapi.com/crm/v3/objects/contacts/merge>`, 'post', {\n  primaryObjectId: primaryContact.id,\n  objectIdToMerge: secondaryContact.id\n});```"
  },
  {
    "poster": {
      "poster_name": "prasad",
      "poster_handle": "prasad.nandamuri"
    },
    "time_stamp": "2023-03-15 23:00:39",
    "text": "<@U01QVR44MEY> for your quick response, I created the custom CRM card but I am unable to see at \"Add card\" section it's showing only on custom tab."
  },
  {
    "poster": {
      "poster_name": "prasad",
      "poster_handle": "prasad.nandamuri"
    },
    "time_stamp": "2023-03-16 00:42:46",
    "text": "I got it <@U01QVR44MEY> thanks for your help"
  }
]
[
  {
    "poster": {
      "poster_name": "Vanessa Nobre",
      "poster_handle": "vanessa804"
    },
    "time_stamp": "2019-03-29 02:58:22",
    "text": "Hello! Is there a way to include the Site Search Input module (<https://blog.HubSpot.com/customers/introducing-HubSpots-site-search>) in a custom coded template via Hubl?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-29 04:53:57"
      },
      {
        "time_stamp": "2019-03-29 04:54:43"
      },
      {
        "time_stamp": "2019-03-29 09:32:42"
      }
    ]
  },
  {
    "text": "If you add the site search module to a Drag and Drop templates. You can right click on it and edit source code.",
    "time_stamp": "2019-03-29 04:53:57"
  },
  {
    "text": "There you can clone it or get the Snippet",
    "time_stamp": "2019-03-29 04:54:43"
  },
  {
    "poster": {
      "poster_name": "Vanessa Nobre",
      "poster_handle": "vanessa804"
    },
    "time_stamp": "2019-03-29 09:32:42",
    "text": "Thank you <@UATE4ATHP>!"
  },
  {
    "poster": {
      "poster_name": "William",
      "poster_handle": "cwilbanks"
    },
    "time_stamp": "2019-03-29 10:14:44",
    "text": "I am trying to call a custom blog title widget value {{ post.widgets.blog_display_title.value }} in the weekly subscription email but can't seem to call anything but {{post.title}}. Can anybody help with this?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-04-01 08:53:29"
      },
      {
        "time_stamp": "2019-04-01 09:44:35"
      },
      {
        "time_stamp": "2019-04-02 02:15:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:18:11",
    "edited": {
      "time_stamp": "2019-03-29 11:19:19"
    },
    "text": "Sanity check\n\nI’m getting a java.lang.NullPointerException on a line that has:\n` {% for rec in sorted|sort(reverse=False, case_sensitive=False, attribute='sortorder') %}`\n\nprinting `{{sorted}}`\n\nreturns\n```\n[{sortorder=27, post=BlogPost 8507307021 Edwin J. lastName}, {sortorder=1, post=BlogPost 8168855959 Jason Smith}] ```\n(text edited to obfuscate IDs and peoples names)",
    "reply_count": 13,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-03-29 11:23:32"
      },
      {
        "time_stamp": "2019-03-29 11:25:45"
      },
      {
        "time_stamp": "2019-03-29 11:25:53"
      },
      {
        "time_stamp": "2019-03-29 11:27:14"
      },
      {
        "time_stamp": "2019-03-29 11:27:17"
      },
      {
        "time_stamp": "2019-03-29 11:28:05"
      },
      {
        "time_stamp": "2019-03-29 11:28:09"
      },
      {
        "time_stamp": "2019-03-29 11:29:33"
      },
      {
        "time_stamp": "2019-03-29 11:35:28"
      },
      {
        "time_stamp": "2019-03-29 11:38:22"
      },
      {
        "time_stamp": "2019-03-29 11:39:23"
      },
      {
        "time_stamp": "2019-03-29 11:39:46"
      },
      {
        "time_stamp": "2019-03-29 11:42:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:18:31",
    "text": "anyone got a theory as to what I’m doing wrong?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-03-29 11:23:32",
    "edited": {
      "time_stamp": "2019-03-29 11:23:54"
    },
    "text": "printing `sorted` or `rec`?\n(the item or the full array?)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:25:45",
    "text": "so sorted returns what is listed above.\n\nI’ll print rec"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-03-29 11:25:53",
    "text": "What happens if you try it without the named arguments?  just doing ` {% for rec in sorted|sort(False,False,'sortorder') %}`"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-03-29 11:27:14",
    "edited": {
      "time_stamp": "2019-03-29 11:28:19"
    },
    "text": ":point_up_2:tho, if that doesn't work you can maybe try with:\n`sorted|dictsort(false,\"sortorder\")`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:27:17",
    "text": "rec = ```\n{sortorder=1, post=BlogPost 8490303777 Hernando de lastname}```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:28:05",
    "text": "removing named arguements has no effect"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:28:09",
    "text": "I’ll try dict sort"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-03-29 11:29:33",
    "edited": {
      "time_stamp": "2019-03-29 11:29:43"
    },
    "text": "also, how did you created the sortorder? Is it on a template level or in a CM?\nBecause maybe you need to change how you call that attr like\n`widget_data.module_XXXXX.sortorder`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:35:28",
    "text": "the value is coming through so it’s not that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:38:22",
    "text": "dict sort is working but I’m now getting 32 warnings about something else. (not errors though so not a big deal. think it’s just that some vars aren’t set in the posts I’m calling)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:39:23",
    "text": "appreciate the help guys. I’ll see if I can just make dict sort work\n\n<@UFBNA9K9A> idk if you have any sway here, but it’d be nice if dictsort supported the reverse param like sort does"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-29 11:39:46",
    "text": "guess though that’s what `|reverse` is for"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-03-29 11:42:19",
    "text": "<@UFWNSVCHE> FYI, feedback for the CMS team.  I’ll report the bug that resulted in Java error showing up. We really should be obfuscating that and providing a helpful error if something really is wrong"
  }
]
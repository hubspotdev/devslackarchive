[
  null,
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-22 06:50:06",
    "text": "Anyone else have an issue with a Primary Domain that doesn't seem to be available for use with Website Pages after being successfully verified?"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-05-22 06:55:55",
    "text": "nvm - it was because the default domains were all hide-ified in the advanced menu on DM2 :wink:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 07:53:52",
    "text": "What is the best way to reverse an expression test in an if statement? I have a nested repeater and I’m trying to only show some values if the nested repeater is empty. This is what I have:\n`{% for item in module.full_page_section %}`\n`    {% if !item.full_page_section_slide %}`\n`        // Content only shows if nested repeater is empty //`\n`    {% endif %}`\n`    {% for item2 in item.full_page_section_slide %}`\n`        // Nested repeater content //`\n`    {% endfor %}`\n`{% endfor %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-22 07:57:59",
    "text": "{% unless %}"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 08:13:02",
    "text": "I can’t seem to get this to evaluate true, I’ve tried:\n`{% unless full_page_section_slide %}`\n`{% unless item.full_page_section_slide %}`\n`{% unless item2 in item.full_page_section_slide %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-22 08:22:19",
    "text": "I think the issue for you is that full_page_section_slide doesn’t evaluate to true itself, it has properties within it like .src"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-22 08:22:41",
    "text": "or `.value`"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 08:23:12",
    "text": "I’ll try that. I thought that it would since it was a repeater."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-05-22 08:23:29",
    "text": "HubL supports “not in” as of a month ago <https://github.com/HubSpot/jinjava/pull/187>"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 08:23:30",
    "text": "A repeater group."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-22 08:23:38",
    "text": "haha finally"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-05-22 08:31:39",
    "text": "Is there a way when exporting report from HubSpots dashboards that you can remove the HubSpot logo branding that exports?"
  },
  {
    "text": "I think I found the issue. Even though my nested repeater doesn’t have any items in it, it still registers as having one empty item. So the back end looks like this",
    "time_stamp": "2018-05-22 08:41:10"
  },
  {
    "text": "But there really is one in there somehow",
    "time_stamp": "2018-05-22 08:41:48"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 08:44:13",
    "text": "So this doesn’t work:\n`{% if item.full_page_section_slide|length == 0 %}`\nBecause even if there is no repeater group added it evaluates to length = 4.",
    "reply_count": 46,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-05-22 10:30:42"
      },
      {
        "time_stamp": "2018-05-22 10:30:55"
      },
      {
        "time_stamp": "2018-05-22 10:31:36"
      },
      {
        "time_stamp": "2018-05-22 10:32:04"
      },
      {
        "time_stamp": "2018-05-22 10:32:10"
      },
      {
        "time_stamp": "2018-05-22 10:32:14"
      },
      {
        "time_stamp": "2018-05-22 10:32:49"
      },
      {
        "time_stamp": "2018-05-22 10:33:18"
      },
      {
        "time_stamp": "2018-05-22 10:35:48"
      },
      {
        "time_stamp": "2018-05-22 10:36:13"
      },
      {
        "time_stamp": "2018-05-22 10:37:00"
      },
      {
        "time_stamp": "2018-05-22 10:37:29"
      },
      {
        "time_stamp": "2018-05-22 10:38:39"
      },
      {
        "time_stamp": "2018-05-22 10:38:57"
      },
      {
        "time_stamp": "2018-05-22 10:38:59"
      },
      {
        "time_stamp": "2018-05-22 10:39:04"
      },
      {
        "time_stamp": "2018-05-22 10:39:10"
      },
      {
        "time_stamp": "2018-05-22 10:39:51"
      },
      {
        "time_stamp": "2018-05-22 10:40:35"
      },
      {
        "time_stamp": "2018-05-22 10:40:38"
      },
      {
        "time_stamp": "2018-05-22 10:40:51"
      },
      {
        "time_stamp": "2018-05-22 10:41:00"
      },
      {
        "time_stamp": "2018-05-22 10:41:08"
      },
      {
        "time_stamp": "2018-05-22 10:41:43"
      },
      {
        "time_stamp": "2018-05-22 10:41:56"
      },
      {
        "time_stamp": "2018-05-22 10:42:04"
      },
      {
        "time_stamp": "2018-05-22 10:42:21"
      },
      {
        "time_stamp": "2018-05-22 10:42:46"
      },
      {
        "time_stamp": "2018-05-22 10:43:20"
      },
      {
        "time_stamp": "2018-05-22 10:46:00"
      },
      {
        "time_stamp": "2018-05-22 10:46:00"
      },
      {
        "time_stamp": "2018-05-22 10:46:08"
      },
      {
        "time_stamp": "2018-05-22 10:46:13"
      },
      {
        "time_stamp": "2018-05-22 10:48:15"
      },
      {
        "time_stamp": "2018-05-22 10:48:36"
      },
      {
        "time_stamp": "2018-05-22 10:55:59"
      },
      {
        "time_stamp": "2018-05-22 10:57:16"
      },
      {
        "time_stamp": "2018-05-22 10:57:21"
      },
      {
        "time_stamp": "2018-05-22 10:57:25"
      },
      {
        "time_stamp": "2018-05-22 10:57:37"
      },
      {
        "time_stamp": "2018-05-22 10:57:42"
      },
      {
        "time_stamp": "2018-05-22 10:58:25"
      },
      {
        "time_stamp": "2018-05-22 11:00:31"
      },
      {
        "time_stamp": "2018-05-22 11:01:59"
      },
      {
        "time_stamp": "2018-05-22 11:43:09"
      },
      {
        "time_stamp": "2018-05-22 11:43:11"
      }
    ]
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:30:42",
    "text": "you need to be using loop.index instead of all that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:30:55",
    "text": "if you are checking to see what iteration you are on"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:31:36",
    "text": "Hey! I’m not trying to get the iteration, just trying to see if the loop is empty."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:32:04",
    "text": "before your loop"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:32:10",
    "text": "{{ item.full_page_section_slide|pprint }}"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:32:14",
    "text": "see what it displays"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:32:49",
    "text": "you should be able to just do"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:33:18",
    "text": "{% if item.full_page_section_slide %} &lt;!-- evaluates true if there is content in there ---&gt; {% endif %}"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:34:45",
    "text": "any reason why when doing a search by adding the module I would get a 404 error on the RESULTS page",
    "reply_count": 12,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-05-22 10:46:07"
      },
      {
        "time_stamp": "2018-05-22 10:46:54"
      },
      {
        "time_stamp": "2018-05-22 10:47:03"
      },
      {
        "time_stamp": "2018-05-22 10:47:17"
      },
      {
        "time_stamp": "2018-05-22 10:47:38"
      },
      {
        "time_stamp": "2018-05-22 10:47:41"
      },
      {
        "time_stamp": "2018-05-22 10:48:13"
      },
      {
        "time_stamp": "2018-05-22 10:48:40"
      },
      {
        "time_stamp": "2018-05-22 10:48:54"
      },
      {
        "time_stamp": "2018-05-22 10:48:57"
      },
      {
        "time_stamp": "2018-05-22 10:55:13"
      },
      {
        "time_stamp": "2018-05-22 11:01:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:34:47",
    "text": "<https://www.millerwelding.com/test>"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:35:48",
    "text": "So inside of the repeater is another repeater, which is a group of fields. And even if I don’t add any of those repeater groups, hubl is looping over the fields so it always evaluates true."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:36:13",
    "text": "hmm"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:37:00",
    "text": "can you paste in your module code?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:37:29",
    "text": "&lt;section class=“nautical-full-page-section”&gt;\n  &lt;div id=“fullpage”&gt;\n    {% for item in module.full_page_section %}\n      &lt;div class=“section”&gt;\n        {% if item.full_page_section_slide.first|length != 0 %}\n          {% if item.section_top_image.src %}\n            &lt;img class=“fullpage-top-image” src=“{{ item.section_top_image.src }}” alt=“{{ item.section_top_image.alt }}“&gt;\n          {% endif %}\n          {% if item.section_title %}\n            &lt;h1 class=“fullpage-title”&gt;{{ item.section_title }}&lt;/h1&gt;\n          {% endif %}\n          {% if item.section_copy %}\n            &lt;span class=“fullpage-copy”&gt;{{ item.section_copy }}&lt;/span&gt;\n          {% endif %}\n          {% if item.section_bottom_image.src %}\n            &lt;img class=“fullpage-bottom-image” src=“{{ item.section_bottom_image.src }}” alt=“{{ item.section_bottom_image.alt }}“&gt;\n          {% endif %}\n        {% endif %}\n        {% for item2 in item.full_page_section_slide %}\n          &lt;div class=“slide”&gt;\n\t\t\t\t\t\t{% if item2.slide_top_image.src %}\n              &lt;img class=“fullpage-top-image” src=“{{ item2.slide_top_image.src }}” alt=“{{ item2.slide_top_image.alt }}“&gt;\n            {% endif %}\n            {% if item2.slide_title %}\n            \t&lt;h1 class=“fullpage-title”&gt;{{ item2.slide_title }}&lt;/h1&gt;\n            {% endif %}\n            {% if item2.slide_copy %}\n            \t&lt;span class=“fullpage-copy”&gt;{{ item2.slide_copy }}&lt;/span&gt;\n            {% endif %}\n            {% if item2.slide_bottom_image.src %}\n              &lt;img class=“fullpage-bottom-image” src=“{{ item2.slide_bottom_image.src }}” alt=“{{ item2.slide_bottom_image.alt }}“&gt;\n            {% endif %}\n          &lt;/div&gt;\n        {% endfor %}\n      &lt;/div&gt;\n    {% endfor %}\n  &lt;/div&gt;\n&lt;/section&gt;"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:38:39",
    "text": "Sent you a screenshot, may be easier to read"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:38:57",
    "text": "I pasted code into editor"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:38:59",
    "text": "so either way --"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:39:04",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:39:10",
    "text": "so what are you tryign to accomplish again?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:39:51",
    "text": "So my nested repeater group, even if there aren’t any items is spitting out four divs &lt;div class=“slide”&gt;&lt;/div&gt;"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:40:35",
    "text": "{% if item2.slide_top_image.src %}"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:40:38",
    "text": "put that line"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:40:51",
    "text": "above the &lt;div clas=\"slide"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:41:00",
    "text": "and the endif aroudn the closing tag"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:41:08",
    "text": "that way if there isn't an image it won't display the entire thing"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:41:43",
    "text": "So the rub is that sometimes there won’t be images there! Maybe I’ll just set a boolean that they have to check."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:41:56",
    "text": "so sometimes it will eb text only?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:42:04",
    "text": "is there an item that is across the board?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:42:21",
    "text": "The title, but that has default text."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:42:46",
    "text": "I’m screwed no matter what."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:43:20",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:46:00",
    "text": "after this line"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:46:00",
    "text": "{% for item2 in item.full_page_section_slide %}"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-22 10:46:07",
    "text": "By default the search module will send you to the search result page linked in your site settings"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:46:08",
    "text": "{{ item2|pprint }}"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:46:13",
    "text": "and do that with one with slides and without slides"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-22 10:46:54",
    "text": "<https://app.HubSpot.com/settings/1551291/website/pages/www.millerwelding.com/system-pages>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:47:03",
    "text": "so you need to setup a page"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-22 10:47:17",
    "text": "Yep, if you go to new file and click search result template"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:47:38",
    "text": "okay I think I can get that from there"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:47:41",
    "text": "I appreciate it"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-22 10:48:13",
    "text": ":+1: It's not included by default since we want people to set it up"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:48:15",
    "text": "So on the full section I get:\n`(PyMap: {slide_top_image={src=, alt=null}, slide_title=Section Title, slide_copy=Section Title, slide_bottom_image={src=, alt=null}})`"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:48:36",
    "text": "Empty I get:\n`(PyMap: {src=, alt=null})\n(String: Section Title)\n(String: Section Title)\n(PyMap: {src=, alt=null})`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:48:40",
    "text": "makes sense.  If it isn't setup there could be a check to notify the person in a tooltip / popup"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:48:54",
    "text": "hey you need to do this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:48:57",
    "text": "because it wont' work"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:55:13",
    "text": "New file.. where is that at? Is there documentation I can follow?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:55:59",
    "text": "Because of the default text you are killing yourself"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:57:16",
    "text": "I guess you could do a booleon"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:57:21",
    "text": "or get rid of default text"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 10:57:25",
    "text": "That’s what I’m doing"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:57:37",
    "text": "I wonder if you have something setup in the fields inside that group that are forcing something in there"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:57:42",
    "text": "you could also check"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 10:58:25",
    "text": "for the image being blank and the default text being the default text...."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 11:00:31",
    "text": "I’m just going to use the boolean until I can get a hold of the wonderful <@U6W3H6YN8> and beg him to fix it."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-22 11:01:05",
    "text": "<https://knowledge.HubSpot.com/articles/kcs_article/cos-general/how-do-i-set-up-a-results-page-for-my-search-field-in-HubSpot>"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-05-22 11:01:59",
    "text": "Thanks for sweating it out with me though! Usually when I have a problem I wrestle with it for hours, then post it here, then figure out the solution on my own about 2 minutes later. This one seems to be not my fault though."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 11:43:09",
    "text": "LOL"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 11:43:11",
    "text": "Sames for me"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-22 13:16:57",
    "text": "HubSpot’s rich text fields seem to hate wistia with a passion all of a sudden, jacking up the code."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-22 13:17:51",
    "text": "and using the insert embed code button is weirdly inconsistent on if it’s going to drop in hubl or a broken version of the html"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 13:20:03",
    "text": "I had problems with wistia embedding in HubSpot a while back, I think I ended up injecting the ID into something on page load or using their JS API to load videos. I had huge problems with videos duplicating and being crazy inside the editor and on teh page"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-22 13:30:41",
    "text": "yea so I figured out under different circumstances the rich text editor does different things to the video code. sometimes completely mangling it.\n\nI managed to stumble upon an undocumented(as far as I know) hubl tag.\n\n`{{ script_embed('wistia', 'b20ir10ai0', ', ', 'inline,responsive,popover,popoverAnimateThumbnail') }}`\n\nThe comma separated params are the video player options, the weird b20 string is the video id."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-05-22 13:31:57",
    "text": "nice!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-22 13:33:07",
    "text": "I’m a fan of the hubl code method(makes embed codes safer in the rich text fields) but holy hell does that “insert embed code” feature need some testing with wistia."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-22 13:41:06",
    "text": "yeppers"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-22 13:41:19",
    "edited": {
      "time_stamp": "2018-05-22 13:41:27"
    },
    "text": "I have made my own before."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-05-22 13:41:43",
    "text": "kinda oembed-y"
  },
  null,
  null
]
[
  {
    "poster": {
      "poster_name": "Oscar Sidebo",
      "poster_handle": "sideboo"
    },
    "time_stamp": "2021-03-03 11:07:10",
    "text": "Hi everyone! I’m new here and had a question on integrating React with HubSpot CMS.\n\nI’m using the React boilerplate which works fine to “inject” to HubSpot as a custom module.\n\nMy client wants to be able to rearrange sections within the app I’m building in React. Is there a way to allow for drag and drop customization WITHIN a custom module (that in this case is a React App).  Or would this mean I’ll have to build several React Apps each as individual  modules.  If that’s the case I’ll probably scrap React entirely and try something else since it seem like a lot of overhead. Curious to hear how people are approaching this as just starting off a project and don’t want to paint myself into a corner :joy:"
  },
  {
    "poster": {
      "poster_name": "Jhon Michael Bolima",
      "poster_handle": "jmbolima12"
    },
    "time_stamp": "2021-03-03 14:56:49",
    "edited": {
      "time_stamp": "2021-03-08 14:46:11"
    },
    "text": "Hi guys, I need to be enlightened and I think you can help me. I am using react in our project. The problem is cross-filtering in two objects is not yet available in serverless function. Now, someone suggested that I should use the HubL function(crm_association) and  it will be the solution for cross-filtering. The problem is that JavaScript can't pass variables to HubL. What we need is a dynamic function wherein it will accept inputs from the user. Do you think it is possible or feasible?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-03-03 15:00:49"
      },
      {
        "time_stamp": "2021-03-03 15:15:24"
      },
      {
        "time_stamp": "2021-03-03 15:29:26"
      },
      {
        "time_stamp": "2021-03-03 17:56:24"
      },
      {
        "time_stamp": "2021-03-04 03:03:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-03-03 15:00:49",
    "edited": {
      "time_stamp": "2021-03-03 15:02:58"
    },
    "text": "Just to be sure I understand the question. *You have two custom object types - you are trying to compare object instances in those types to each other filtering out some of them?*\n\nWhile the custom objects API may not have a comparison/filtering endpoint that fits quite what you are trying to do.\n\nYou should be able to do the comparison directly in your serverless function. You would take the response from both API calls getting the objects and use JavaScript to filter out items you don’t need.\n\nThen in your function’s response, you return just the data you want available to your page.\n\nApologize if I’m slow for any follow up questions I’m head down trying to get some projects done. I appreciate any community members who chime in with help."
  },
  {
    "poster": {
      "poster_name": "Jhon Michael Bolima",
      "poster_handle": "jmbolima12"
    },
    "time_stamp": "2021-03-03 15:15:24",
    "edited": {
      "time_stamp": "2021-03-03 15:29:38"
    },
    "text": "Thank you <@U7SL518D6> for the answer. Much appreciated!\nYou're right, that's what I am currently doing but since the CRM Search has a limitation, I will get some data that are not needed or there are data not will be returned since the other property that needed to be filtered is in the other object.\nThe solution I make is to put together the properties in one object. I know this is not a long-term solution but if you guys have other solutions let me know. :D"
  },
  {
    "poster": {
      "poster_name": "Jhon Michael Bolima",
      "poster_handle": "jmbolima12"
    },
    "time_stamp": "2021-03-03 15:29:26",
    "text": "and if some one will give me the answer to my question if crm_association or other hubl function is feasible in an app like this that needed a user's input that would be great."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-03-03 17:56:24",
    "edited": {
      "time_stamp": "2021-03-03 17:58:26"
    },
    "text": "Regarding the HubL idea. Since it’s server side you would need to conduct a page refresh every time you wanted to pull the data. Not really ideal for a react app.\n\nYou would be able to pass parameters to your HubL functions using Query parameters in the URL. Again doing that is what requires a page refresh.\n\n-----------\n\nInstead you can continue down the serverless function path. You can use webpack to include libraries to help process the data if needed.\n\nOtherwise we just kicked off a beta which would enable you to upload a custom package.json to include custom third-party dependencies in your functions. This removes the need for webpack.\n\nYou also would be able to test your functions locally.\n\nDetails on that can be found here:\n<https://HubSpotdev.slack.com/archives/C011F74BKQW/p1614090633018100>"
  }
]
[
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-08 08:31:55",
    "text": "<@U04N6N424MB> GraphQL would handle this better right? <@U0397BZRK6G> I've also seen this happen before but it's usually within about 15 secs, what are the times that you're seeing?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-01-08 08:32:52",
    "text": "theres like a list of properties that escape me now that if you include force the page to not be cached....you can include one of those to \"trick\" it into never caching"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-01-08 08:32:57",
    "text": "but yeah"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2024-01-08 08:36:34",
    "text": "Hey guys, thanks for the input! We're seeing a wide variety of times. Sometimes updates to objects are reflected within 5 minutes. Sometimes a couple hours have went by and no change is reflected. Troubleshooting with different machines and variables to try to pinpoint."
  },
  {
    "text": "Hey all,\n\nIs anyone else seeing these errors and missing GQL files fromt he dropdown in the design manager?",
    "time_stamp": "2024-01-08 13:40:15",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-01-08 13:40:43"
      },
      {
        "time_stamp": "2024-01-08 13:40:55"
      },
      {
        "time_stamp": "2024-01-09 06:45:23"
      },
      {
        "time_stamp": "2024-01-09 10:04:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin-C",
      "poster_handle": "kevin285"
    },
    "time_stamp": "2024-01-08 13:40:43",
    "text": "The first is from a module thats not been updated in sometime, and the second is a result of trying to clone the GQL file"
  },
  {
    "poster": {
      "poster_name": "Kevin-C",
      "poster_handle": "kevin285"
    },
    "time_stamp": "2024-01-08 13:40:55",
    "edited": {
      "time_stamp": "2024-01-08 13:41:02"
    },
    "text": "The data is not being returned on the front end :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Kevin-C",
      "poster_handle": "kevin285"
    },
    "time_stamp": "2024-01-08 14:01:32",
    "text": "Bumping this as we've seen the same and had no luck using the cache preventing variables.\n<@U0397BZRK6G> its worth noting that we've been able to fix every instance of this issue using GQL as <@U01QVR44MEY> has suggested."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-01-08 14:02:14",
    "text": "have you tried passing a variable into graphql?"
  },
  {
    "poster": {
      "poster_name": "Kevin-C",
      "poster_handle": "kevin285"
    },
    "time_stamp": "2024-01-08 14:03:36",
    "edited": {
      "time_stamp": "2024-01-08 14:03:45"
    },
    "text": "<@U04N6N424MB> yep, 90% of our queries have dynamic data passed to them"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2024-01-08 14:22:35",
    "text": "One thing in this particular setup is the use of company associations on the custom object. This determines some of the content display. Any suggestions on that piece if we were to move this whole setup to GraphQL?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-01-08 14:22:56",
    "text": "you can pull those associations directly in graphql"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-08 14:23:02",
    "edited": {
      "time_stamp": "2024-01-08 14:23:13"
    },
    "text": "oh yeah you'll love pulling associations with graphql"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2024-01-08 14:23:56",
    "text": "sweet! Gonna dig into this further. Thanks guys!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-08 14:24:00",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-01-08 14:24:35",
    "text": "also there is inherently a few seconds delay to data in HS"
  },
  {
    "text": "so what if you try a fake expression like\n\n\n```{% set catDrugs = request_contact.is_logged_in ? request_contact.is_logged_in : false %}```\nand see if that forces it to not cache",
    "time_stamp": "2024-01-08 14:25:40"
  }
]
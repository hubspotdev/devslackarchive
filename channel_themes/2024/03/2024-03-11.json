[
  {
    "poster": {
      "poster_name": "Maxwell Brosofsky",
      "poster_handle": "mbrosofsky"
    },
    "time_stamp": "2024-03-11 06:39:20",
    "text": "Hey <@UG7S8J18D>, the theme settings colors, fonts, and other overrides (Theme Definition) are saved in HubSpot's \"backend\". This backend table can only be written to via the theme settings page, and is essentially just a \"list\" of overrides for each field in the fields.json file.\n\nWhen a page is rendered, HubSpot essentially puts this file and the fields.json file together to populate all of the tokens used throughout any of the theme's assets.\n\nWhen cloned this theme definition is cloned as well, so you're getting a true \"clone\" of everything you've already done."
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-03-11 06:41:02",
    "text": "Hi Max. I really appreciate you explaining that. So is it the page clone or theme clone that would retain those override values?"
  },
  {
    "poster": {
      "poster_name": "Maxwell Brosofsky",
      "poster_handle": "mbrosofsky"
    },
    "time_stamp": "2024-03-11 06:44:58",
    "text": "A Theme clone would retain the values set in the theme's theme settings page.\nA Page clone would retain any values set in the page's modules/settings\n\nA page clone would typically utilize the same theme as it's \"original\", so the theme settings would be the same?\n\nMight not be understanding the question though more :coffee:  is needed :sob:"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-03-11 06:45:34",
    "text": "No this is perfect explanation"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-03-11 06:46:19",
    "text": "Is there anything in the clone theme that connects them to the backend table? Would it break if the theme name was changed?"
  },
  {
    "poster": {
      "poster_name": "Maxwell Brosofsky",
      "poster_handle": "mbrosofsky"
    },
    "time_stamp": "2024-03-11 06:46:59",
    "text": "So the values are \"cloned\" at the time of cloning, but if I went back in and made edits to the original, those wouldn't \"sync up\""
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-03-11 06:46:59",
    "text": "Or does each theme get a cloned version of backend override"
  },
  {
    "poster": {
      "poster_name": "Maxwell Brosofsky",
      "poster_handle": "mbrosofsky"
    },
    "time_stamp": "2024-03-11 06:47:38",
    "text": "The Theme Settings/Definition are per theme, so each theme (clone, original, child, etc..) gets their own set of overrides"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-03-11 06:48:02",
    "text": "Got it"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-03-11 06:48:40",
    "text": "Would it be ok with you if I summarized this in a blog post on my site? I do that to remember stuff like this"
  },
  {
    "poster": {
      "poster_name": "Maxwell Brosofsky",
      "poster_handle": "mbrosofsky"
    },
    "time_stamp": "2024-03-11 06:49:31",
    "edited": {
      "time_stamp": "2024-03-11 06:50:02"
    },
    "text": "Go for it! I'm _probably_ not usually all of the right terminology, and there's probably a bit more too it from a technical perspective, but I'm all for distribution of knowledge"
  },
  {
    "text": "",
    "time_stamp": "2024-03-11 06:50:09"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-03-11 06:50:25",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2024-03-11 12:38:51",
    "text": "<@U04MN8Q0PA7> I finally came back to a project to try this out. I noticed the docs reference a `fonts.json` file and a `font.json` file.\n\nGoing by your instructions above I take it that you never used the fonts.json file? I wonder if this is just a typo in the docs :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-03-11 12:40:50",
    "text": "As far as I can tell, `fonts.json` is a typo — the only way I could get things working in my projects was to use a separate `font.json` file for each custom typeface used in the project."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2024-03-11 12:43:58",
    "text": "<@U2H3TT8F2> it looks like there is a typo in the <https://developers.HubSpot.com/docs/cms/building-blocks/themes/custom-fonts|theme custom fonts docs> which has caused confusion. fwiw it’d also be helpful to show how to include multiple font families cause designers gotta make it look like a rAnSOm note\n\ncc <@UD53A9UUR>"
  },
  {
    "time_stamp": "2024-03-11 12:51:40",
    "text": "comic sans"
  },
  {
    "poster": {
      "poster_name": "Sasha Sosin",
      "poster_handle": "sasha"
    },
    "time_stamp": "2024-03-11 12:52:31",
    "text": "It's a typo. I got it working with the right file name."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:53:05",
    "text": "i think you learn better when you have to fight for it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:53:28",
    "text": "but i will get that typo updated :face_with_rolling_eyes:"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-03-11 12:54:06",
    "text": "It’s like those fake cities that get included on maps. Include intentionally incorrect information in the documentation to make sure someone actually read it when they ask questions."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:54:19",
    "text": "EXACTLY"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2024-03-11 12:54:21",
    "text": "I’ve given up on this feature for years because of that typo lmao"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:54:24",
    "text": "and you are welcome"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:54:47",
    "text": "we filtered out the bad coders AKA John"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:55:06",
    "text": "&gt; fwiw it’d also be helpful to show how to include multiple font families\nwill see if we can get some language for this as well"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2024-03-11 12:57:05",
    "text": "Well, it looks like Dennis has this from here :smile:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:57:16",
    "text": "duh"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2024-03-11 12:57:19",
    "text": "We will def get this updated sorry for the confusion on all this folks"
  },
  {
    "time_stamp": "2024-03-11 12:57:42",
    "text": "cat typing"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-03-11 12:57:42",
    "text": "7 month old thread!"
  }
]
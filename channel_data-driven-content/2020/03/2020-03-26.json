[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-03-26 06:09:26",
    "text": "Is there a way to query HubDB to match a column with spaces in the content as an exact match? So far I have\n```{% set query = '&amp;type=__eq' ~ category ~ '&amp;orderBy=length' %}```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-03-26 06:09:33",
    "text": "but that does not work"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-03-26 06:31:49",
    "text": "I could make that field a choice field instead…",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-03-26 06:56:31"
      },
      {
        "time_stamp": "2020-03-26 06:56:54"
      },
      {
        "time_stamp": "2020-03-26 07:21:01"
      },
      {
        "time_stamp": "2020-03-26 07:21:30"
      },
      {
        "time_stamp": "2020-03-26 07:24:02"
      },
      {
        "time_stamp": "2020-03-26 14:03:10"
      },
      {
        "time_stamp": "2020-03-26 14:04:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-03-26 06:56:31",
    "text": "Got it. In case anyone is curious, I needed to use a select column instead of text, set a variable to all the available choices, and then use the id from those choices in the query."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-03-26 06:56:54",
    "text": "(based on the real-estate example: <https://designers.HubSpot.com/docs/tutorials/how-to-build-a-real-estate-listing-with-hubdb>)"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-03-26 07:21:01",
    "text": "You could just URL escape the space as %20"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2020-03-26 07:21:30",
    "text": "There’s a urlencode filter as well"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2020-03-26 07:24:02",
    "text": "Also, the syntax should be something like `{% set query = '&amp;type__eq=' ~ category ~ '&amp;orderBy=length' %}` . The `__eq` comes before the `=`. Also, it shouldn't be necessary because the `__eq` operator is implied. `&amp;type=`  would mean the same thing as `&amp;type__eq`."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-03-26 13:20:28",
    "text": "Hey all, how should I write if statements using multi-select HubDB fields? The following doesn't work\n```{% if {{ dynamic_page_hubdb_row.auteurs.value }} is containing Option 1 %} \n   &lt;p&gt;Text if Option 1 is selected&lt;/p&gt;\n{% elif {{ dynamic_page_hubdb_row.auteurs.value }} is containing Option 1 and Option 2 %}\n    &lt;p&gt;Text if Option 1 and 2 are selected&lt;/p&gt;       \n{% else %}\n    &lt;p&gt;Text if nothind is selected&lt;/p&gt;              \n{% endif %}```",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-03-26 14:01:42"
      },
      {
        "time_stamp": "2020-03-26 14:03:17"
      },
      {
        "time_stamp": "2020-03-26 14:10:36"
      },
      {
        "time_stamp": "2020-03-26 14:24:19"
      },
      {
        "time_stamp": "2020-04-13 15:24:13"
      },
      {
        "time_stamp": "2020-04-15 08:49:21"
      },
      {
        "time_stamp": "2020-04-15 08:50:46"
      },
      {
        "time_stamp": "2020-04-15 09:21:21"
      },
      {
        "time_stamp": "2020-04-15 10:46:25"
      },
      {
        "time_stamp": "2020-04-15 10:51:04"
      },
      {
        "time_stamp": "2020-04-15 10:52:04"
      },
      {
        "time_stamp": "2020-04-16 08:19:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-03-26 13:54:07",
    "text": "How does this output exactly is it an array? [Option 1, Option 2, etc]",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-03-26 14:04:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-03-26 14:01:42",
    "edited": {
      "time_stamp": "2020-03-26 14:02:41"
    },
    "text": "you don't need the double brackets when you're already inside a HubL statement and you'll probably want to add quotes to your options if they are strings"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-03-26 14:03:10",
    "text": "Thanks for the replies. The real-estate way ended up being the most elegant solution."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-03-26 14:03:17",
    "text": "e.g. `{% if dynamic_page_hubdb_row.auteurs.value is containing \"Option 1\" %}`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-03-26 14:04:00",
    "text": "<@U3A4KEWK1> Thanks. Got it."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-03-26 14:04:07",
    "text": "a quick way to figure this out is to just print the value to the page"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2020-03-26 14:10:36",
    "text": "Multi-select columns output an array of objects, something like this: `[{ name: 'Option 1', order: 0, id: 1}, { name: 'Option 2', order: 1, id: 1 }]` . Don't remember the exact keys off the top of my head, but it's something like that.\nBest way I know of to test it is by filtering it down with the `|selectattr` filter. It would be something like this:\n```{% if (dynamic_page_hubdb_row.auteurs|selectattr('name', 'equalto', 'Option 1')|count &gt; 0) and (dynamic_page_hubdb_row.auteurs|selectattr('name', 'equalto', 'Option 2')|count &gt; 0) %}\n  Options 1 and 2 are selected.\n{% elif (dynamic_page_hubdb_row.auteurs|selectattr('name', 'equalto', 'Option 1')|count &gt; 0) %}\n  Just option 1 is selected.\n{% else %}\n  Nothing is selected.\n{% endif %}```\n"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-03-26 14:24:19",
    "text": "Thanks guys it works!"
  }
]
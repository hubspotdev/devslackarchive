[
  {
    "poster": {
      "poster_name": "Jon Fulk",
      "poster_handle": "jonfulk"
    },
    "time_stamp": "2022-07-08 06:29:57",
    "edited": {
      "time_stamp": "2022-07-08 06:31:46"
    },
    "text": "so initial thoughts: there are some missing commas between some of these objects (see section with missing commas below). It should have the format of `[{},{},{},{}]`\n```{\n\"objectTypeId\": \"0-1\",\n\"name\": \"residential_pool_pro\",\n\"value\": \"residential_pool_pro\"\n}\n{\n\"objectTypeId\": \"0-1\",\n\"name\": \"commercial_pool_pro\",\n\"value\": \"commercial_pool_pro\"\n}\n{\n\"objectTypeId\": \"0-1\",\n\"name\": \"distributor\",\n\"value\": \"distributor\"\n}\n{\n\"objectTypeId\": \"0-1\",\n\"name\": \"homeowner\",\n\"value\": \"homeowner\"\n}\n{```\nI would recommend that you look at the `i_am_a` custom property that’s been added to the contact and be sure that all of the `value`s from this JSON are listed as possible options for that field. I’m not super familiar with the way forms work in HS, but I am pretty sure the `value`  coming in from the request body needs to match the internal names of the options in order for it to be considered valid. While touch vs. click probably has nothing to do with it, there is probably a difference in the way the value is added to the request body in one app vs in another… maybe even a minor typo."
  },
  {
    "poster": {
      "poster_name": "Test",
      "poster_handle": "vic"
    },
    "time_stamp": "2022-07-08 06:31:12",
    "text": "Hi. Anyone know how to create contact properties/custom fields in the API?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-07-08 06:32:41"
      },
      {
        "time_stamp": "2022-07-08 06:34:35"
      },
      {
        "time_stamp": "2022-07-08 06:36:45"
      },
      {
        "time_stamp": "2022-07-08 06:37:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon Fulk",
      "poster_handle": "jonfulk"
    },
    "time_stamp": "2022-07-08 06:32:41",
    "text": "<https://knowledge.HubSpot.com/crm-setup/manage-your-properties>"
  },
  {
    "poster": {
      "poster_name": "Raul Stoica",
      "poster_handle": "raul.stoica"
    },
    "time_stamp": "2022-07-08 06:34:13",
    "text": "Hi all!\nI have a simple form with multiple fields. When doing a webhook POST call, one of the fields is not sent. When looking at the 'View submissions', the field that is not sent shows an error :\n```There was a problem creating or updating a License record from this submission.```\n Could this be the reason why the field is not sent? Also, how would I go about fixing this? Thank you!"
  },
  {
    "poster": {
      "poster_name": "Test",
      "poster_handle": "vic"
    },
    "time_stamp": "2022-07-08 06:34:35",
    "edited": {
      "time_stamp": "2022-07-08 06:34:54"
    },
    "text": "<@U02CUFSCXHQ> Yes, but is there a way to do it from the code, the API, and not from the HubSpot graphical interface?"
  },
  {
    "poster": {
      "poster_name": "Jon Fulk",
      "poster_handle": "jonfulk"
    },
    "time_stamp": "2022-07-08 06:36:45",
    "text": "sure: <https://developers.HubSpot.com/docs/api/crm/properties>"
  },
  {
    "poster": {
      "poster_name": "Test",
      "poster_handle": "vic"
    },
    "time_stamp": "2022-07-08 06:37:36",
    "text": "Thank you so much"
  },
  {
    "poster": {
      "poster_name": "Antonio Quadrado",
      "poster_handle": "antonio122"
    },
    "time_stamp": "2022-07-08 07:16:48",
    "text": "Hi guys. I hope this is the right place to ask this. I am developing an app and want to use HubSpot e-mail sending capabilities. I know that I can use the API to send either using SingleSend or the SMTP api directly but I am struggling to understand how I should obtain the OAuth token from within my application. I have done the OAuth tutorial but it basically requires a user to login in the browser and give access to the app before receiving the token. Is there any resource where it demonstrates how to obtain the token solely using code? Thank you",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-07-08 07:25:37"
      },
      {
        "time_stamp": "2022-07-08 07:45:38"
      },
      {
        "time_stamp": "2022-07-08 08:43:34"
      },
      {
        "time_stamp": "2022-07-08 11:33:36"
      },
      {
        "time_stamp": "2022-07-11 02:34:19"
      },
      {
        "time_stamp": "2022-07-11 06:33:44"
      },
      {
        "time_stamp": "2022-07-11 06:45:32"
      },
      {
        "time_stamp": "2022-07-11 07:01:27"
      },
      {
        "time_stamp": "2022-07-11 07:05:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Laura Evans",
      "poster_handle": "laura146"
    },
    "time_stamp": "2022-07-08 07:17:05",
    "text": "THANK YOU!! "
  },
  {
    "poster": {
      "poster_name": "Jon Fulk",
      "poster_handle": "jonfulk"
    },
    "time_stamp": "2022-07-08 07:25:37",
    "text": "I’m not sure about what resources there are outside of <https://developers.HubSpot.com/docs/api/working-with-oauth|this doc,> but if I understand correctly, you should be able to make the request to exchange the client id and client secret for an access token directly from code. You’ll just need to save those somewhere securely initially. In the past, when I did integrations with Facebook (things have changed with FB auth since I was using it), we would have the user log in once to give the app access, which allowed us to store the client id and client secret in our database, and then whenever we wanted to make a request on their behalf, we would exchange those for a temporary access token. Not sure if this helps at all."
  },
  {
    "poster": {
      "poster_name": "Antonio Quadrado",
      "poster_handle": "antonio122"
    },
    "time_stamp": "2022-07-08 07:45:38",
    "text": "In that scenario how can I automatize the process? I will always have to login manually with the HubSpot account in order to receive the first tokens and then store them locally so I can reuse them, right? What if my next request is done after the token have expired? I am guessing I could use the refresh_token to request a new access_token? It seems bit messy and convoluted."
  },
  {
    "poster": {
      "poster_name": "Antonio Quadrado",
      "poster_handle": "antonio122"
    },
    "time_stamp": "2022-07-08 08:43:34",
    "text": "After some more digging i think what fits my needs is to use a private app with an access key as described <https://developers.HubSpot.com/docs/api/private-apps|here>. Not sure if there's any drawback but it seems to solve my problem. Would like to hear from you, guys, though."
  },
  {
    "poster": {
      "poster_name": "Jon Fulk",
      "poster_handle": "jonfulk"
    },
    "time_stamp": "2022-07-08 11:33:36",
    "text": "full disclosure, i haven’t used oauth with HubSpot yet, but…\n&gt;  I will always have to login manually with the HubSpot account in order to receive the first tokens and then store them locally so I can reuse them, right? What if my next request is done after the token have expired? I am guessing I could use the refresh_token to request a new access_token?\nNo. The client id and client secret don’t change. You would log in once to get those, yes, but after that, they are stored and you use them each time to get a fresh access token. The access token is temporary and would need to be refreshed using either (i’m guessing here), a valid access token or the client id and client secret (likely the latter case would be getting a new token and not refreshing one that’s about to expire)\n\nUsing a private app with an access key is likely what you need. I haven’t looked into the options and just focused on your question at-hand."
  }
]
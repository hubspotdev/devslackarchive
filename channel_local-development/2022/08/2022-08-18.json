[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-18 06:46:37",
    "text": "How did you solve this?"
  },
  {
    "poster": {
      "poster_name": "Andrey Balandin",
      "poster_handle": "andrey.balandin"
    },
    "time_stamp": "2022-08-18 06:49:08",
    "text": "I didn't make a HubSpot CTA just designed an a tag to look like a CTA and wrote JavaScript to look for utm parameters and append it to the a tag our team didn't really need reporting in HubSpot but instead in their reporting tool which is why they needed the utm parameters to transfer to a custom platform page"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-18 06:50:56",
    "text": "Using the api is going to be key. It's complicated. This isn't an easy task. "
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-08-18 13:00:34",
    "edited": {
      "time_stamp": "2022-08-18 13:26:56"
    },
    "text": "Is there a better way to handle directory renaming? Right now I:\n1. Rename within Design Manager, acknowledging that it might break dependences.\n2. Follow up with the git mv command preserving history in Git\n3. fix broken dependencies\nI avoid this when it’s just the label that needs to change. This is more for when another developer unnecessarily created lengthy folder names or included spaces, and I need to clean things up for my own sanity.\n\nThere must be better way than how I’m doing this…"
  }
]
[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 03:35:13",
    "text": "that’s really strange, how are you accessing the course? this should only happen if you keep going to the  sandbox screen of the discovery kit"
  },
  {
    "text": "",
    "time_stamp": "2019-01-31 03:54:19"
  },
  {
    "poster": {
      "poster_name": "Radu Andruseac",
      "poster_handle": "radu654"
    },
    "time_stamp": "2019-01-31 03:54:34",
    "text": "I am accessing it from here"
  },
  {
    "poster": {
      "poster_name": "Radu Andruseac",
      "poster_handle": "radu654"
    },
    "time_stamp": "2019-01-31 03:55:50",
    "edited": {
      "time_stamp": "2019-01-31 04:06:45"
    },
    "text": "yes it is strange, and every time i log in with an existing account a new one is created.."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 04:21:54",
    "text": "very weird those two things shouldnt even be related"
  },
  {
    "poster": {
      "poster_name": "Shamash Athoraya",
      "poster_handle": "shamash.athoraya"
    },
    "time_stamp": "2019-01-31 04:22:16",
    "text": "The problem was that the `*rest-of-url` only includes everything up to the query string, i.e. everything after the ? is discarded. So I had to set variables for each parameter. I ended up with something like this `<http://files.example.com/assets/*rest-of-url?:first-param-name=:first-param-value&amp;:second-param-name=:second-param-value|files.example.com/assets/*rest-of-url?:first-param-name=:first-param-value&amp;:second-param-name=:second-param-value>`. To catch instances where there's only one parameter or more than two I had to set up separate redirects for those scenarios as well."
  },
  {
    "poster": {
      "poster_name": "Elvis",
      "poster_handle": "milas.elvis"
    },
    "time_stamp": "2019-01-31 04:54:15",
    "edited": {
      "time_stamp": "2019-01-31 04:54:28"
    },
    "text": "I saw yesterday somewhere a detail about which template does a webpage use.... now I can't find it...."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 05:44:07",
    "text": "pages can use page templates, blogs use blog listing and detail templates, system templates like errors, subscription, etc have their own corresponding template types.\n\na coded template can be any of those types of templates"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-31 07:19:51",
    "text": "I have about 20 of those, too!"
  },
  {
    "poster": {
      "poster_name": "Radu Andruseac",
      "poster_handle": "radu654"
    },
    "time_stamp": "2019-01-31 07:30:24",
    "edited": {
      "time_stamp": "2019-01-31 07:30:33"
    },
    "text": "hopefully someone from HubSpot can look into this"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-01-31 07:50:47",
    "text": "Random question. When a HubSpot site is in development without any connected domains, for example when it's using the ...<http://hs-sites.com|hs-sites.com> URL, is it by default hidden from SERPs and not being indexed?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 07:51:35",
    "text": "yes the <http://hs-sites.com|hs-sites.com> domain by default if I remember correct have nofollow noindex"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 07:51:43",
    "text": "same goes for content staging"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-01-31 07:51:53",
    "text": "excellent. thanks <@U7SL518D6>!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 08:49:17",
    "text": "in an RSS email, there is the \"summary\" tag, is there a way to simply break out just the image from this? as right now both the image and summary are in the same tag",
    "reply_count": 17,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-31 09:25:52"
      },
      {
        "time_stamp": "2019-01-31 09:27:56"
      },
      {
        "time_stamp": "2019-01-31 09:28:20"
      },
      {
        "time_stamp": "2019-01-31 09:28:30"
      },
      {
        "time_stamp": "2019-01-31 09:28:33"
      },
      {
        "time_stamp": "2019-01-31 09:28:39"
      },
      {
        "time_stamp": "2019-01-31 09:30:00"
      },
      {
        "time_stamp": "2019-01-31 09:30:23"
      },
      {
        "time_stamp": "2019-01-31 09:31:06"
      },
      {
        "time_stamp": "2019-01-31 09:31:28"
      },
      {
        "time_stamp": "2019-01-31 09:31:36"
      },
      {
        "time_stamp": "2019-01-31 09:31:51"
      },
      {
        "time_stamp": "2019-01-31 09:32:31"
      },
      {
        "time_stamp": "2019-01-31 09:32:49"
      },
      {
        "time_stamp": "2019-01-31 09:34:31"
      },
      {
        "time_stamp": "2019-01-31 09:34:31"
      },
      {
        "time_stamp": "2019-01-31 09:34:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:06:59",
    "text": "im going to go out on a limb and say you cant use `regex_replace` in an eamil when it comes to RSS fields"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-31 09:08:27",
    "text": "I've got a page with an old HTML module that has about 7700 lines (after I've reduced them down by reducing unnecessary line breaks and such), and it's grinding the page editor to a halt when it's open. I know the HTML module isn't really supported anymore, but I don't suppose anyone has any idea how to improve the performance of this aside from converting it to a proper module with a repeater group or using HubDB?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 09:16:52",
    "text": "`{% text \"location\" label=\"Location\" value=\"Appleton,WI\" overrideable=true %}`   For the life of me I can’t figure out why this text tag is not editable in the blog post editor"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 09:17:05",
    "text": "the value is displaying though"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:25:52",
    "text": "{{ post.featured_image }}"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:27:56",
    "text": "that will fetch the image, if your adding images in the summary(above the read more tag) i would refrain from that."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:28:20",
    "text": "i dont think this works with RSS emails though. It didnt seem to pull the image in."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:28:30",
    "text": "Let me check if they even added it as a feat image though"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:28:33",
    "text": "who knows with clients"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:28:39",
    "text": ":wink:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:30:00",
    "text": "so it looks like they did add it, but i dont think this works for RSS emails where the RSS email module works. It looks like HS doesnt have featured image in the blog rss.xml files as a separate item"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:30:23",
    "text": "We often use 2 featured images. One for listing and one for sharing purposes(secondary) with text in the image for LinkedIn etc"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:31:06",
    "text": "You can create an email custom module and set the post-array"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:31:28",
    "text": "lol i totally fogot about CM's for email :faceplam:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:31:36",
    "text": "They never updated to the new DM so they were auto updated"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:31:51",
    "text": "I'm telling our PM to recommend building a newer email template now that we have better things to work with"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:32:31",
    "text": "just {% set posts = blog_recent_posts(group.id, [num of posts]) %}"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:32:49",
    "text": "then just set the array {% for post in posts %}"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:34:31",
    "text": "then for example add\n&lt;h1&gt;{{ post.title }}&lt;/h1&gt;\n{{ post.featured_image }}\n&lt;a href=\"{{ post.absolute_url }}\"&gt;Read more&lt;/a&gt;"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-31 09:34:31",
    "text": "I could do this (and most likley will) during the email rebuild. Right now, the tempalte they are using is so old and really needs an update. Thanks for pointing me in this direction though as i totally forgot about CM's in email lol"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-01-31 09:34:49",
    "text": "glad to help"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 09:54:53",
    "text": "is that tag inside the blog post content block?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 09:55:02",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 09:55:21",
    "text": "thats the answer then :smile:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 09:55:22",
    "text": "and I have another page which has `{% text \"category_5\" label=\"Category 5\", value=\"Reading\" %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 09:55:33",
    "text": "that one works fine, and it is inside the blog post content block"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 09:55:55",
    "text": "that is a CM so inside CM you can't add widgets, those are overwritten as `overrideable=false`"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 09:55:57",
    "edited": {
      "time_stamp": "2019-01-31 10:01:59"
    },
    "text": "oh but is it dynamic? can you edit it?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 09:57:31",
    "text": "if that was the case then HubL supported tags are completely useless now. They’ve previously always been allowed in the blog post content module and I have tons of sites with that implemented"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2019-01-31 09:58:05",
    "text": "Trying putting it in the head and then just referencing it in the blog section for HTML markup. I noticed at some point this stopped being allowed and putting it in the head seems to work :man-shrugging: "
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 09:58:29",
    "text": "thank you Reg that sounds like it might just work. Will let everyone know"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 10:01:20",
    "edited": {
      "time_stamp": "2019-01-31 10:01:35"
    },
    "text": "yeah thats what I do too, not the best to keep all organised tho"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2019-01-31 10:02:19",
    "text": "Yeah it doesn’t seem right or best practice by any means - but it works :grinning:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:03:20",
    "text": "oy. I think even that method might be messed up now."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:04:34",
    "text": "So the field displays but the module name in dev info is different than export_to_template_context used to work in addition the module doesn’t have the same structure so I’m trying to figure out how to get at the value"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:06:31",
    "text": "<https://spin.d.pr/xKk6Jq+>\n<https://spin.d.pr/X9H3UN+>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:06:42",
    "text": "it appears it’s even ignoring export to template context now"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:07:07",
    "text": "and yes I’m aware that sometimes fields would get stored in 2 places in dev info. this is the only instance of it"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2019-01-31 10:18:24",
    "edited": {
      "time_stamp": "2019-01-31 10:25:37"
    },
    "text": "Hey <@UF951R38B> try {{ widget_data.location.value }}"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:22:12",
    "text": "danm"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:22:16",
    "text": "thank you for trying"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2019-01-31 10:24:55",
    "text": "oh NVM, I was copying a rich text for the .html {{ widget_data.location.value }} works"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2019-01-31 10:25:04",
    "text": ":smile:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:30:19",
    "text": "Reg’s solution works!!!!!!\nman that’s so weird"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:49:38",
    "text": "I am so flippin confused. Developer info changed again, it now looks how it used to when you would do this <https://spin.d.pr/fQzAxf+>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 10:50:30",
    "text": ":crossed_fingers: hopefully that means someone fixed the core problem that caused this whole thing"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-31 11:01:37",
    "text": "I think it depends how you access to it, all_widgets has a different structure than the other (don't remember right now)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 11:08:19",
    "text": "it does but the other methods don’t actually work anymore\n\nall_widgets and content.widgets_data don’t work"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-31 11:08:45",
    "text": "Just the way that Reg posted seems to work and it doesn’t follow the Dev info"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-31 11:20:00",
    "text": "I'm builiding an exporter --"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-31 11:20:08",
    "text": "so I don't have to find and replace lol"
  },
  {
    "text": "Anyone else having this issue when adding modules to a flexible column?",
    "time_stamp": "2019-01-31 11:22:27",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-01-31 12:09:32"
      },
      {
        "time_stamp": "2019-01-31 12:09:51"
      },
      {
        "time_stamp": "2019-01-31 12:11:57"
      },
      {
        "time_stamp": "2019-01-31 12:24:46"
      },
      {
        "time_stamp": "2019-01-31 12:25:55"
      },
      {
        "time_stamp": "2019-01-31 14:09:21"
      },
      {
        "time_stamp": "2019-01-31 14:14:57"
      },
      {
        "time_stamp": "2019-02-01 12:53:48"
      }
    ]
  },
  {
    "text": "Is there a way to get blog author image to show up next to author name with a {{ post.blog_post_author.display_name }} call? Part two of that question, can you style the image with some CSS?",
    "time_stamp": "2019-01-31 11:38:41",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-31 11:44:34"
      },
      {
        "time_stamp": "2019-01-31 11:45:12"
      },
      {
        "time_stamp": "2019-01-31 11:47:13"
      },
      {
        "time_stamp": "2019-01-31 11:58:06"
      },
      {
        "time_stamp": "2019-01-31 11:58:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-01-31 11:44:34",
    "text": "You should be pull in the img src from the author profile by using {{ blog_author.avatar }} per the documentation here <https://designers.HubSpot.com/docs/hubl/hubl-supported-variables#blog-variables>"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-01-31 11:45:12",
    "edited": {
      "time_stamp": "2019-01-31 11:45:27"
    },
    "text": "You could add a class to the image in your blog code and then style that class if you want, so something like &lt;img src=\"{{ blog_author.avatar }} class=\"author-image\"&gt;"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-01-31 11:47:13",
    "text": "Thanks!"
  },
  {
    "text": "Possible to wrap the img in some sort of if statement in case the author doesnt have an avatar image?",
    "time_stamp": "2019-01-31 11:58:06"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-01-31 11:58:48",
    "text": "Yup so you can just do {% if blog_author.avatar %} your code here {% endif %}"
  },
  {
    "poster": {
      "poster_name": "Clare",
      "poster_handle": "cpak"
    },
    "time_stamp": "2019-01-31 12:09:32",
    "text": "Do you have a link to the page?"
  },
  {
    "poster": {
      "poster_name": "Clare",
      "poster_handle": "cpak"
    },
    "time_stamp": "2019-01-31 12:09:51",
    "text": "I’m not seeing it on my end"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-31 12:11:57",
    "text": "<https://app.HubSpot.com/content/4976390/edit/7334742518/content>"
  },
  {
    "poster": {
      "poster_name": "Clare",
      "poster_handle": "cpak"
    },
    "time_stamp": "2019-01-31 12:24:46",
    "text": "Thanks for the link. Seems like this might be browser related. I’m on High Sierra using Chrome 71, Firefox 64, and Safari 11, but I’m unable to reproduce what’s in your screenshot"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-31 12:25:55",
    "text": "interesting, It's happening for me in Chrome 72 on Mojave"
  },
  {
    "poster": {
      "poster_name": "Clare",
      "poster_handle": "cpak"
    },
    "time_stamp": "2019-01-31 14:09:21",
    "text": "Thanks for that tidbit - I’m able to repro. I’ll take a deeper dive and update you when this is all set"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-01-31 14:14:57",
    "text": "Thanks so much <@UCV0BC2A3>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-31 18:35:15",
    "text": "Any HubSpot on? Looks like we got the new URL redirect items but I can't figure out a way to import bulk redirects -- Just migrated 880 blog posts......"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-31 18:39:02",
    "text": "<https://app.HubSpot.com/domains/{hubid}/url-redirects>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-31 18:41:41",
    "text": "if you need to access the old platform use this <https://app.HubSpot.com/content/{hubid}/settings/url-mappings>"
  }
]
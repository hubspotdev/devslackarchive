[
  {
    "poster": {
      "poster_name": "Raghav Aggarwal",
      "poster_handle": "raghav.aggarwal"
    },
    "time_stamp": "2024-05-03 01:23:20",
    "text": "Thanks for pointing it out, I was missing associations, but even after associating it I am still not able to see my meetings. I tried associating from contacts to meetings and vice-versa but of no avail so far."
  },
  {
    "poster": {
      "poster_name": "Raghav Aggarwal",
      "poster_handle": "raghav.aggarwal"
    },
    "time_stamp": "2024-05-03 03:19:49",
    "text": "Sorry I missed to add that I am getting an error for invalid_association_type, when I try to associate the meting to the contact. Can you suggest if  need to create an association in my HubSpot account first? Or are there some associations created by default?"
  },
  {
    "poster": {
      "poster_name": "Jacinta Smith",
      "poster_handle": "jacinta.smith"
    },
    "time_stamp": "2024-05-03 04:00:16",
    "text": "Hi All! Hoping you can help! if there's a way to filter the results when getting all companies? I'm currently using\n```api_client.crm.companies.get_all(properties=[\"salesforceaccountid\"], archived=False)```\nbut I would like to only get results that have a salesforce account id in order to make the code quicker and reduce the amount of requests. I can't find anything about it in the developer documentation?\nThanks so much!!",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-05-03 06:09:59"
      },
      {
        "time_stamp": "2024-05-03 06:11:47"
      },
      {
        "time_stamp": "2024-05-03 06:13:58"
      },
      {
        "time_stamp": "2024-05-03 06:14:16"
      },
      {
        "time_stamp": "2024-05-03 06:16:44"
      },
      {
        "time_stamp": "2024-05-03 06:19:59"
      },
      {
        "time_stamp": "2024-05-03 06:23:33"
      },
      {
        "time_stamp": "2024-05-03 06:25:13"
      },
      {
        "time_stamp": "2024-05-03 06:38:35"
      },
      {
        "time_stamp": "2024-05-03 06:41:04"
      }
    ]
  },
  {
    "text": "You can use the SearchCRM and add filters for what you want to search for.  There are some limitations using this but I would try it and see if it works for you.",
    "time_stamp": "2024-05-03 06:09:59"
  },
  {
    "poster": {
      "poster_name": "Jacinta Smith",
      "poster_handle": "jacinta.smith"
    },
    "time_stamp": "2024-05-03 06:11:47",
    "text": "Thank you so much Scott! I will give this a go! :raised_hands:"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-05-03 06:13:58",
    "edited": {
      "time_stamp": "2024-05-03 06:14:15"
    },
    "text": "BTW, adding the properties attribute like your example above tells the api what properties to return, not which to search for"
  },
  {
    "poster": {
      "poster_name": "Jacinta Smith",
      "poster_handle": "jacinta.smith"
    },
    "time_stamp": "2024-05-03 06:14:16",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "Jacinta Smith",
      "poster_handle": "jacinta.smith"
    },
    "time_stamp": "2024-05-03 06:16:44",
    "text": "Yeah I needed to add that to get the property. Without it it didn’t return the Salesforce I’d\nSo I want to filter on it and return it"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-05-03 06:19:59",
    "edited": {
      "time_stamp": "2024-05-03 06:21:30"
    },
    "text": "I have so many custom properties in  our portals that my apps set up two constants for each object (deals, line-items, etc) with a list of standard and custom properties to return and in each method of my services controller I can add whichever I need at the time."
  },
  {
    "poster": {
      "poster_name": "Jacinta Smith",
      "poster_handle": "jacinta.smith"
    },
    "time_stamp": "2024-05-03 06:23:33",
    "text": "Thats great! Any insights to help us would be appreciated :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-05-03 06:25:13",
    "text": "If I can help I will - feel free to ask"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-05-03 06:38:35",
    "text": "here is an example of one of my search filters (these are custom properties in my portal) - you can get more in for the SearchCRM in the link below\n```let filterGroups = [];\nlet filter_group = {};\nfilter_group = {\n    \"filters\": [\n        {\n            \"propertyName\": \"archive_dsb_cost\",\n            \"operator\": 'NOT_HAS_PROPERTY'\n        },\n        {\n            \"propertyName\": \"dsb_quote\",\n            \"operator\": 'NOT_HAS_PROPERTY'\n        }                ]\n};\nfilterGroups[0] = filter_group;```\n<https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-05-03 06:41:04",
    "text": "another example\n```let filters = [];\nlet filter = {\n    \"propertyName\": \"deal_number\",\n    \"operator\": 'EQ',\n    \"value\": bid_number.toString()\n}\nfilters[0] = filter;```\n"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-05-03 06:48:00",
    "text": "if you go to <https://developers.HubSpot.com/docs/api/crm/associations|this page> and scroll down, you should find a table with association type ids.  you can also make a call to the associations API to get all of the ids"
  },
  {
    "poster": {
      "poster_name": "Raghav Aggarwal",
      "poster_handle": "raghav.aggarwal"
    },
    "time_stamp": "2024-05-03 13:41:25",
    "text": "Thanks for the help dennis! It was exactly what I needed. I used the API to retrieve all the associations and it was found that the association type I was using earlier was not correct. It is resolved now. Thanks you so much once again!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-05-03 13:42:01",
    "text": "glad it worked out!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2024-05-03 13:42:07",
    "text": "go code amazing things now!"
  }
]
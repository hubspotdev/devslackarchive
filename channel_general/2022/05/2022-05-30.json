[
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-05-30 01:50:24",
    "edited": {
      "time_stamp": "2022-05-30 01:51:59"
    },
    "text": "Hi <@U01PZF9BCMQ> which idea is better?\n1. Develop website in wordpress and integrate HubSpot plugin (HubSpot account) \n2. Direct make website inHubSpot?"
  },
  {
    "poster": {
      "poster_name": "Sudip Acharya",
      "poster_handle": "sudip.acharya"
    },
    "time_stamp": "2022-05-30 01:52:42",
    "text": "Could you please  suggest me which idea will be better and easy to implement tracking code?"
  },
  {
    "poster": {
      "poster_name": "Sudip Acharya",
      "poster_handle": "sudip.acharya"
    },
    "time_stamp": "2022-05-30 01:55:06",
    "text": "I am very new in HubSpot so please guide me to implement tracking code."
  },
  {
    "poster": {
      "poster_name": "Matt",
      "poster_handle": "mtunney"
    },
    "time_stamp": "2022-05-30 05:30:40",
    "text": "Hi\nIs the auto-populate form fields from url params a HubSpot feature?\nI could have sworn it was a browser native feature"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2022-05-30 08:17:10",
    "edited": {
      "time_stamp": "2022-05-30 08:18:28"
    },
    "text": "Hi everyone. I somehow can not get the v3 signature verification working, and I have no clue what I am doing wrong. I tried the following functions:\n```const verifyWebhookSignature = (request) =&gt; {\n  const timeStamp = request.headers['x-HubSpot-request-timestamp']\n  const signature = request.headers['x-HubSpot-signature-v3']\n  const requestUrl = new URL(request.url, 'https://' + request.headers['host'])\n  const requestUri = requestUrl.href\n  const requestInfo = CryptoJS.enc.Utf8.stringify(request.method + requestUri + request.rawBody + timeStamp)\n  const string = decodeURIComponent(requestInfo)\n  const base64 = CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(string, CLIENT_SECRET))\n  return base64 == signature\n}\n\nconst verifySignature = function (req) {\n  const requestUrl = new URL(req.url, `https://${req.headers['host']}`);\n  const requestUri = requestUrl.href;\n  const incomingSignature = req.headers['x-HubSpot-signature-v3'];\n  const timeStamp = req.headers['x-HubSpot-request-timestamp'];\n  const requestInfo = `${req.method}${requestUri}${req.rawBody}${timeStamp}`;\n  const decodedString = decodeURIComponent(requestInfo);\n  const hash = createHmac('sha256', CLIENT_SECRET)\n    .update(decodedString)\n    .digest('base64');\n\n  if (hash == incomingSignature) {\n    console.log('match!');\n    return true;\n  } else {\n    console.log('whoops');\n    return false;\n  }\n};```\nBut neither seem to give me the same hash as HubSpot sends me.\n\n<@UFBNA9K9A> Got any clue what I am doing wrong here? I tried with both request.body and request.rawBody.",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-05-30 11:03:48"
      },
      {
        "time_stamp": "2022-05-31 03:43:11"
      },
      {
        "time_stamp": "2022-05-31 03:43:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Katzian",
      "poster_handle": "andreas.katzian"
    },
    "time_stamp": "2022-05-30 10:18:33",
    "text": "Hi, just try:\n`&lt;li style=\"font-size: 16px; color: white;\"&gt;`\n\nIn this case, you can also omit the color within your `&lt;span&gt;` element or the `&lt;span&gt;` element at all."
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-05-30 11:03:48",
    "text": "Code from the docs isn't working either"
  },
  {
    "poster": {
      "poster_name": "Jeremias Herner",
      "poster_handle": "jeremias.herner"
    },
    "time_stamp": "2022-05-30 15:44:11",
    "text": "Hi <@U03HFB9FN77> thanks you! Where exactly do I need to insert \"&lt;li style=\"font-size: 16px; color: white;\"&gt;\"?"
  },
  {
    "poster": {
      "poster_name": "Andreas Katzian",
      "poster_handle": "andreas.katzian"
    },
    "time_stamp": "2022-05-30 15:47:41",
    "text": "Hey <@U03HHNXMFEG>, at each list item in your example. So, e.g. replace\n`&lt;li style=\"font-size: 16px;\"&gt;&lt;span style=\"color: #FFFFFF;\"&gt;In-depth Questionnaires&lt;/span&gt;&lt;/li&gt;`\nwith\n`&lt;li style=\"font-size: 16px; color: #FFF;\"&gt;In-depth Questionnaires&lt;/li&gt;`"
  },
  {
    "poster": {
      "poster_name": "Jeremias Herner",
      "poster_handle": "jeremias.herner"
    },
    "time_stamp": "2022-05-30 15:54:46",
    "text": "Thank you so much! :)"
  }
]
[
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-10-30 08:01:39",
    "edited": {
      "time_stamp": "2018-10-30 08:02:15"
    },
    "text": "It certainly would be dandy if we could create custom classes, to be served up in a select menu within Rich Text Editor Modules for application on individual block elements. I believe the only method of applying classes for elements within a RTE is within the Source Code?\n\nThis would be crazy handy in controlling craziness from content editors, while still allowing flexibility in structure without having to dig into the HTML .",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-10-30 12:14:42"
      },
      {
        "time_stamp": "2018-10-30 12:15:20"
      },
      {
        "time_stamp": "2018-10-30 12:24:46"
      },
      {
        "time_stamp": "2018-10-30 12:25:15"
      },
      {
        "time_stamp": "2018-10-30 14:26:58"
      },
      {
        "time_stamp": "2018-10-31 08:21:53"
      },
      {
        "time_stamp": "2018-10-31 08:25:11"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2018-10-30 12:14:42",
    "text": "Hey <@UDFTHC6PK>, can you give an example of where you'd want to use that?"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-10-30 12:15:20",
    "text": "<@U8THBCFC4> Absolutely!"
  },
  {
    "text": "With this concept, the primary user would be the content editor, with developers establishing a preset list of classes to apply to text elements within the page while working within a Rich Text Editor in the Page Editor.\n\nThis would assist with design hierarchy ordering that doesn't match 1-1 with the ideal DOM structure -- which tends to happen when SEO is taken into account. (I currently am working with a client that has...extreme keyword love).\n\nFor example -- a design is requesting that the largest text element is an h2 or an h3, because the keywords for SEO lie in a smaller element that lives just above, and THAT smaller element should be the h1.\n\nAs it currently exists, a person with HTML knowledge and a working knowledge of the CSS classes within the theme has to go in and modify that within the HTML editor. I'm thinking we allow developers to create a working list of modifier classes and apply that to the block elements by using a dropdown list within the style dropdown menu of RTEs.\n\nala",
    "time_stamp": "2018-10-30 12:24:46"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-10-30 12:25:15",
    "text": "<@U8THBCFC4> Let me know if that makes sense."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-30 14:26:58",
    "text": "I agree with this suggestion - I do want to resurface a similar suggestion though someone had a while back that got a lot of dev support -\n\nRich Text Field Extensions/Buttons - it was suggested that similar to how we can create CMâ€™s that we could create buttons that would display in Rich Text fields, and we would use javascript to actually implement what it did.\n\nFor example if  the user selected text then hit the button - we would be able to detect the selected text and wrap the item in a div with a class, or another html structure."
  },
  null
]
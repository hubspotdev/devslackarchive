[
  {
    "poster": {
      "poster_name": "Mustapha Aoussar",
      "poster_handle": "mustapha.aoussar"
    },
    "time_stamp": "2018-11-29 02:41:10",
    "text": "<@UE24LMGSZ> <@U6GNQ7JBU> Thank you so much!!:pray:"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 08:40:08",
    "text": "Has anyone tried doing a choice module populated with a HubDB row in a custom module? Seems like this isnt really possible to do with the new custom modules.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-29 10:21:23"
      },
      {
        "time_stamp": "2018-11-29 13:01:05"
      },
      {
        "time_stamp": "2018-11-29 13:02:58"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 10:21:23",
    "text": "it isn’t possible - there’s a way to make a choice tag populate with values from a HubDB instead but it’s definitely a hack and could break down the road"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 10:25:58",
    "text": "HubL doc maintainers - the `include()` function is not in the hubl supported functions docs",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-29 10:38:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-29 10:38:36",
    "edited": {
      "time_stamp": "2018-11-29 10:40:08"
    },
    "text": "It’s tucked in <https://designers.HubSpot.com/docs/hubl/intro-to-hubl#other-hubl-features> with {% extends %}, since it’s more of a block/tag than a function, but I agree it’s a weird place"
  },
  {
    "subtype": "channel_leave",
    "text": "<@UCDN320HX> has left the channel",
    "time_stamp": "2018-11-29 10:57:04"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 13:01:05",
    "text": "Yeah i used it in templates and in a couple old modules back in the day, but its a bummer its not possible. It seems like such a powerful thing…"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 13:02:58",
    "edited": {
      "time_stamp": "2018-11-29 13:03:08"
    },
    "text": "Yea I agree. it’s probably just too complex to work out the UI on the developer side for it."
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 13:27:54",
    "text": "Does anyone know if you can get the values of template-level Hubl variables from within a custom module? We only know how to do it with widgets."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 13:30:14",
    "text": "I’ve done it - just trust me it’s really complicated and depending on what your doing can easily break. if I remember right I had to do |selectattr on something in dev info to pull it off. afraid I don’t have the code handy"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 13:33:16",
    "text": "Thanks <@U7SL518D6>, guess ill test some other alternatives then"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 13:33:28",
    "text": "Lifes not easy :shrug:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 13:34:49",
    "text": "if you do try that route - while I don’t have the code handy the way I figured out what to do was I went in the dev info, found where the module was referenced, then tried to work my way down the tree then selecting that module with selectattr and then grabbing the values."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 13:35:18",
    "text": "just know you can’t use any data that could change when referencing it or else the whole thing breaks."
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 14:29:19",
    "edited": {
      "time_stamp": "2018-11-29 14:29:42"
    },
    "text": "Can you get the label of a choice module in a custom module? Looks like `module.my_block.value` doesn’t work?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-29 14:38:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-29 14:37:20",
    "text": "`$('select option:selected').text()`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:37:41",
    "text": "not sure if that was a joke"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:38:29",
    "text": "if trying to output it directly in the module itself you can use the copy snippet feature. if you are trying to get it outside of said module you have to do what I said in the message above, it’s kind of a pain"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-29 14:41:50",
    "text": "Ha. No. I just read the first line on my phone. "
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-29 14:41:53",
    "text": "Apologies"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:41:55",
    "text": "gotta wrap that bad boy in HUBL"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:42:08",
    "text": "`{{ $('select option:selected').text() }}`",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-29 14:42:59"
      }
    ]
  },
  {
    "text": "Love some help with a seemingly basic question.  Does any know if we’re able to use  “and” (&amp;&amp;) or “or” ( || ) logic within a condition statement?\n\nI basically want this condition to read:\n\nshow if img_num is img_3 or img_4",
    "time_stamp": "2018-11-29 14:42:26",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-29 14:43:41"
      },
      {
        "time_stamp": "2018-11-29 14:44:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:42:59",
    "text": "oh boy"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:43:40",
    "text": "Maybe with the regex thing"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:43:41",
    "text": "unfortunately I’m pretty confident you cannot."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2018-11-29 14:44:03",
    "text": "<@U26DA9CQ0> I’ve been trying that as well. No luck (yet)."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:44:17",
    "text": "What you CAN do is put a group around the field that way you can have 2 conditions, one on the group one on the field"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:47:08",
    "text": "(img_4|img_3)"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:47:11",
    "text": "That doesn’t work?"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2018-11-29 14:47:43",
    "text": "Let me give it a try"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 14:48:06",
    "text": "I did figure out a weird workaround to what i was doing",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-29 14:48:33"
      },
      {
        "time_stamp": "2018-11-29 15:09:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:48:21",
    "text": "I don’t think it would because technically you’d want the logic to be `is equal to img_3 || is equal to img_4"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:48:33",
    "text": "would be interested in hearing what you did"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:48:44",
    "text": "Right but that regex will ring true if it’s either one of those"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2018-11-29 14:48:47",
    "text": "<@U26DA9CQ0> I think you nailed it!"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:48:55",
    "text": ":hammer:"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2018-11-29 14:48:58",
    "text": "Thank you. Got one more test, but close."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2018-11-29 14:49:13",
    "text": "<@U26DA9CQ0> :beer: &lt;-- owe you one."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:49:41",
    "text": "Hit me up if you’re ever in Burlington and I’ll take you up on that"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-29 14:49:50",
    "text": "He accepts old netbooks as payment"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:50:03",
    "text": "Yeah or send me netbooks"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-29 14:50:55",
    "text": "I love that someone was like “Phones are getting huge, there must be a market for laptops that are smaller than phones.”"
  },
  {
    "time_stamp": "2018-11-29 14:53:57",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-29 14:54:14",
    "text": "I don't get it, but I could not not select that gif"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 14:55:05",
    "text": "lol wut"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-11-29 15:09:31",
    "text": "its alittle tough to explain, the issue was connected to something much larger"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-29 15:12:27",
    "text": "is this a version of that QWOP game?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-29 15:13:07",
    "text": "certainly looks like it - they wanted to make it harder so the instructions and key labels are in japanese"
  },
  {
    "poster": {
      "poster_name": "Hugo Buelvas",
      "poster_handle": "hugo.buelvas"
    },
    "time_stamp": "2018-11-29 16:15:02",
    "text": "Hi Guys, I have a question, is it possible to get the information of a contact using hubl from a landing page?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-29 16:16:29",
    "text": "as in information from the contact properties?"
  },
  {
    "poster": {
      "poster_name": "Hugo Buelvas",
      "poster_handle": "hugo.buelvas"
    },
    "time_stamp": "2018-11-29 16:17:52",
    "text": "yes, i need get the properties of a contact using a id from him"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-29 16:18:03",
    "text": "<https://designers.HubSpot.com/docs/hubl/how-to-use-developer-info-on-cos-pages>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-29 16:18:37",
    "text": "try using the dev info, you can usually do things like `{{request.contact.id}}` or something like that"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-29 16:18:54",
    "text": "the dev info will have all the variables you can pull with HubL from a page"
  },
  {
    "poster": {
      "poster_name": "Hugo Buelvas",
      "poster_handle": "hugo.buelvas"
    },
    "time_stamp": "2018-11-29 16:20:05",
    "text": "ohhh ok, i'll try, thanks"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-29 16:20:16",
    "text": "np let us know if you have additional questions"
  },
  {
    "poster": {
      "poster_name": "Hugo Buelvas",
      "poster_handle": "hugo.buelvas"
    },
    "time_stamp": "2018-11-29 16:20:52",
    "text": "sure :slightly_smiling_face:"
  },
  null,
  null,
  null,
  null
]
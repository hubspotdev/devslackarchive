[
  {
    "text": "Hello, I am experiencing issues in integrating a public APP, I am playing around with the oauth repo provided by HubSpot, I setted up the environment correctly but I am unable to install the app. I also tried to use url provided by the section Install URL but it's not working. Thank you very much",
    "time_stamp": "2023-02-15 04:35:50",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-15 04:36:26"
      },
      {
        "time_stamp": "2023-02-15 04:36:55"
      },
      {
        "time_stamp": "2023-02-15 04:38:00"
      },
      {
        "time_stamp": "2023-02-15 07:16:17"
      },
      {
        "time_stamp": "2023-02-15 07:17:44"
      },
      {
        "time_stamp": "2023-02-15 07:18:10"
      },
      {
        "time_stamp": "2023-02-15 07:20:25"
      },
      {
        "time_stamp": "2023-02-15 07:51:03"
      },
      {
        "time_stamp": "2023-02-15 07:51:30"
      },
      {
        "time_stamp": "2023-02-15 07:51:48"
      },
      {
        "time_stamp": "2023-02-15 07:51:55"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2023-02-15 04:36:26"
  },
  {
    "text": "",
    "time_stamp": "2023-02-15 04:36:55"
  },
  {
    "poster": {
      "poster_name": "Alberto",
      "poster_handle": "alberto.carbognin"
    },
    "time_stamp": "2023-02-15 04:38:00",
    "text": "We are trying to install the app in a HubSpot account that is not a developer"
  },
  {
    "poster": {
      "poster_name": "Isabela Nery",
      "poster_handle": "isabela.nery"
    },
    "time_stamp": "2023-02-15 05:40:48",
    "text": "<@U04FNHJ0U2J>, thanks for the tips! I could confirm the form submission has only created 01 contact, and for each new submission, instead of creating a new contact, it just keeps updating this one it created.\n\nDo you know if thereâ€™s any way to configure the form so for each new submission, a new contact is created?"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-02-15 05:50:36",
    "text": "Hi, can someone help me here?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:08:45",
    "text": "Oh so basically all you have at the beginning is a line item id, then you want to lookup the deal, and then use that deal to find all the other line item info"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:12:11",
    "text": "of course, let me know how it goes"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 07:13:02",
    "text": "but are they connected? because the line item will be added with different information in each deal id, the same line item"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 07:13:28",
    "text": "because they will have custom information in the line item that will change to each deal"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:13:30",
    "text": "Yes the line item and deal are connected but the the line items aren't connected to each other"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:13:46",
    "text": "So you have to chain your api requests a little"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:14:13",
    "text": "the above one that I sent is perfect for the second part, but you first need to find the associated deal for a certain line item"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:14:48",
    "edited": {
      "time_stamp": "2023-02-15 07:14:50"
    },
    "text": "<https://elements.getpostman.com/view/import?collection=8b5f74a661b06f5a54bd&amp;referrer=https%3A%2F%2Fdevelopers.HubSpot.com%2Fdocs%2Fapi%2Fcrm%2Fdeals>\n\nThis should help get you going, let me know if you run into any problems"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:16:17",
    "text": "Is this app being hosted locally?"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 07:17:14",
    "text": "how do I find it if the same line item is connected to different deals?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:17:44",
    "text": "also on the `&amp;scope=` I would change it to `&amp;scope=${encodeURIComponent(SCOPES.join(\" \"))}`"
  },
  {
    "poster": {
      "poster_name": "Alberto",
      "poster_handle": "alberto.carbognin"
    },
    "time_stamp": "2023-02-15 07:18:10",
    "edited": {
      "time_stamp": "2023-02-15 07:18:20"
    },
    "text": "yes it is hosted locally"
  },
  {
    "poster": {
      "poster_name": "Eric Fiori",
      "poster_handle": "ericf"
    },
    "time_stamp": "2023-02-15 07:19:41",
    "text": "OAuth refresh tokens have a life of ~ 30 min - is there a way to config that for testing reasons? I'd like to test the refresh process but don't want to wait 30 min every time",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-02-15 07:52:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alberto",
      "poster_handle": "alberto.carbognin"
    },
    "time_stamp": "2023-02-15 07:20:25",
    "text": "Also by changing the code I got the same error. I also have the same error by trying from the \"Install URL (OAuth)\"section"
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-02-15 07:37:17",
    "text": "Have you tried setting `hs_marketable_status` to true or false via API?"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 07:49:35",
    "text": "Hello, is it possible to use the Company Search endpoint with a custom property ?",
    "reply_count": 41,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-15 07:52:45"
      },
      {
        "time_stamp": "2023-02-15 07:52:59"
      },
      {
        "time_stamp": "2023-02-15 07:58:49"
      },
      {
        "time_stamp": "2023-02-15 07:59:35"
      },
      {
        "time_stamp": "2023-02-15 07:59:53"
      },
      {
        "time_stamp": "2023-02-15 08:00:00"
      },
      {
        "time_stamp": "2023-02-15 08:00:21"
      },
      {
        "time_stamp": "2023-02-15 08:00:49"
      },
      {
        "time_stamp": "2023-02-15 08:00:55"
      },
      {
        "time_stamp": "2023-02-15 08:01:44"
      },
      {
        "time_stamp": "2023-02-15 08:02:27"
      },
      {
        "time_stamp": "2023-02-15 08:02:35"
      },
      {
        "time_stamp": "2023-02-15 08:02:55"
      },
      {
        "time_stamp": "2023-02-15 08:03:52"
      },
      {
        "time_stamp": "2023-02-15 08:04:18"
      },
      {
        "time_stamp": "2023-02-15 08:07:07"
      },
      {
        "time_stamp": "2023-02-15 08:07:33"
      },
      {
        "time_stamp": "2023-02-15 08:09:11"
      },
      {
        "time_stamp": "2023-02-15 08:10:03"
      },
      {
        "time_stamp": "2023-02-15 08:12:37"
      },
      {
        "time_stamp": "2023-02-15 08:12:43"
      },
      {
        "time_stamp": "2023-02-15 08:13:27"
      },
      {
        "time_stamp": "2023-02-15 08:14:01"
      },
      {
        "time_stamp": "2023-02-15 08:14:16"
      },
      {
        "time_stamp": "2023-02-15 08:15:18"
      },
      {
        "time_stamp": "2023-02-15 08:15:27"
      },
      {
        "time_stamp": "2023-02-15 08:15:32"
      },
      {
        "time_stamp": "2023-02-15 08:18:18"
      },
      {
        "time_stamp": "2023-02-15 08:20:58"
      },
      {
        "time_stamp": "2023-02-15 08:21:31"
      },
      {
        "time_stamp": "2023-02-15 08:22:34"
      },
      {
        "time_stamp": "2023-02-15 08:22:37"
      },
      {
        "time_stamp": "2023-02-15 08:22:44"
      },
      {
        "time_stamp": "2023-02-15 08:22:48"
      },
      {
        "time_stamp": "2023-02-15 08:23:29"
      },
      {
        "time_stamp": "2023-02-15 08:24:04"
      },
      {
        "time_stamp": "2023-02-15 08:24:19"
      },
      {
        "time_stamp": "2023-02-15 08:25:58"
      },
      {
        "time_stamp": "2023-02-15 08:26:17"
      },
      {
        "time_stamp": "2023-02-15 08:26:18"
      },
      {
        "time_stamp": "2023-02-15 08:26:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alberto",
      "poster_handle": "alberto.carbognin"
    },
    "time_stamp": "2023-02-15 07:51:03",
    "text": "By creating a new app with the same configuration it works"
  },
  {
    "poster": {
      "poster_name": "Alberto",
      "poster_handle": "alberto.carbognin"
    },
    "time_stamp": "2023-02-15 07:51:30",
    "text": "I think there are some bugs in the app creation/update beacuse it makes no sense"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:51:38",
    "text": "Line items aren't connected to multiple deals, you can have the same product tied to multiple deals but it would be different line items"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:51:48",
    "text": "Oh very interesting"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:51:55",
    "text": "Glad it's working now though"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:52:36",
    "text": "It was 1800 secs last I checked, you can just refresh a token whenever you want you don't have to wait the full 60 mins"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:52:45",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:52:59",
    "text": "what is the search that you're trying to do?"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 07:58:49",
    "text": "my custom property is `siren` , so iâ€™m trying to do the search with this body :\n```body = {\n          filter_groups: [{\"filters\":[]}],\n          sorts: [{\"propertyName\": \"siren\", \"direction\": \"DESCENDING\"}],\n          query: 655680536,\n          properties: [\"siren\"],\n          limit: 10, after: 0\n        }```\nwhich is the way i do to retrieve a contact by its email."
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 07:59:35",
    "text": "I have a response but results is empty and total is zero but i have a company with this property in my app"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 07:59:53",
    "text": "well you didn't provide any filters so nothing matched"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:00:00",
    "edited": {
      "time_stamp": "2023-02-15 08:00:18"
    },
    "text": "are you trying to get every company?"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:00:21",
    "text": "no i just want to find the company matching the property provided"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:00:49",
    "text": "oh I understand, basically where siren = 655680536?"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:00:55",
    "text": "yes my bad"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:01:44",
    "text": "i tried like this\n```body = {\n          filter_groups: [\n            {\n              \"filters\":[\n                {\n                  propertyName: \"siren\",\n                  operator: 'EQ',\n                  value: 655680536\n                }\n              ]\n            }\n          ],\n        }```\nbut it returns every company in my app :sweat_smile:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:02:27",
    "text": "that's not good"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:02:35",
    "text": "is it a text property or a number one?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:02:55",
    "text": "because that filter is working good on my end (with another custom property)"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:03:52",
    "text": "a text one"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:04:18",
    "text": "you'll want to put paratheses around the number then like this \"655680536\""
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:07:07",
    "text": "it still returns me all the company :confused:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:07:33",
    "text": "just to double check do you want to set one company with a different number and then run that number"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:09:11",
    "text": "I need to know if there is an existing company with the provided siren and if yes have its HubSpot id"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:10:03",
    "text": "Do you want to share the entire body of the request? I'll swap the property with my custom property and test from my end"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:12:37",
    "text": "this was the entire body of my request"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:12:43",
    "text": "am i missing something?"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:13:27",
    "text": "for example to retrieve a contact by its email i do this way\n```   body = {\n          filter_groups: [{\"filters\":[]}],\n          sorts: [{\"propertyName\": \"email\", \"direction\": \"DESCENDING\"}],\n          query: email,\n          properties: [\"email\"],\n          limit: 50, after: 0\n        }```\nand it works fine, so i assumed it would work the same way for a company"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:14:01",
    "text": "No for property filtering it's different"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:14:16",
    "text": "One moment, I'll send the code"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:15:18",
    "text": "```{\n          filter_groups: [\n            {\n              \"filters\":[\n                {\n                  propertyName: \"siren\",\n                  operator: \"EQ\",\n                  value: \"655680536\"\n                }\n              ]\n            }\n          ],\n\"limit\":50,\n\"after\":0\n   }```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:15:27",
    "text": "I would run this code in POSTMAN just to double check"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:15:32",
    "text": "and for faster iteration"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:18:18",
    "text": "still the same result :confused: with a total of 129787, the size of all the companies on my HubSpot"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:20:58",
    "text": "Last try, use this one instead:\n```{\n    \"filterGroups\":[\n      {\n        \"filters\":[\n          {\n            \"propertyName\": \"siren\",\n            \"operator\": \"EQ\",\n            \"value\": \"655680536\"\n          }\n        ]\n      }\n    ]\n  }```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:21:31",
    "text": "and if that doesn't work change the value line to:\n```\"value\": 655680536```"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:22:34",
    "text": "wow it worked"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:22:37",
    "text": "thanks so much"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:22:44",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:22:48",
    "text": "glad it worked"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:23:29",
    "text": "because the key is a string ?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:24:04",
    "text": "There were a couple of errors, in the above request"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:24:19",
    "text": "filter_groups instead of filterGroups for example"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:25:58",
    "text": "yes i see that, but in the ruby doc its filter_groups"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:26:17",
    "text": "anyway it works, thank you for your time :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:26:18",
    "text": "I really don't trust anything the SDK says"
  },
  {
    "poster": {
      "poster_name": "Martin Fesneau",
      "poster_handle": "martin227"
    },
    "time_stamp": "2023-02-15 08:26:52",
    "text": "i wonâ€™t anymore, good tip!"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 08:35:29",
    "text": "yes, but the product would be inserted as a line item inside the deal, correct?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:35:45",
    "text": "Yes but line items are unique to deals"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 08:36:03",
    "text": "in the code\n```{\n    \"filters\": [\n      {\n        \"propertyName\": \"associations.deal\",\n        \"operator\": \"EQ\",\n        \"value\": \"123\"\n      }\n    ],\n    \"properties\":[\"price\",\"quantity\",\"name\"]\n}```\n associations.deal is the bridge that connect both, right?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:36:44",
    "text": "no that's just for finding all the line items for that particular deal. So yes it does connect them in a way"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 08:37:03",
    "text": "okay, thank you so much! I will try to test it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:37:20",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 08:37:25",
    "text": "let me know how it goes"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 08:44:04",
    "text": "I have another question"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 08:44:41",
    "text": "I have to retrieve the timestamp that a certain stage of the deal changes or a certain stage that the product changes (inside the deal)"
  },
  {
    "poster": {
      "poster_name": "Mary Sassaqui",
      "poster_handle": "mary.sassaqui"
    },
    "time_stamp": "2023-02-15 08:45:04",
    "text": "do I have to create new properties or can I retrieve this automatically via api?"
  },
  {
    "poster": {
      "poster_name": "Christian Dow",
      "poster_handle": "christianrdow"
    },
    "time_stamp": "2023-02-15 08:47:21",
    "text": "Hey <@U01GE9FBVFB> - sorry to revive a really old thread here.. any chance you found the solution on this question?"
  },
  {
    "poster": {
      "poster_name": "Omar El Mghari",
      "poster_handle": "omar111"
    },
    "time_stamp": "2023-02-15 09:55:58",
    "text": "hello- Just created my first private App and tested one APIâ€¦now that it worked, where can I retrieve my Production API access key to run the API again my actual HubSpot account?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-15 09:57:31"
      },
      {
        "time_stamp": "2023-02-15 10:02:14"
      },
      {
        "time_stamp": "2023-02-15 10:05:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-02-15 09:57:31",
    "text": "Create another private app with same scopes in the production account"
  },
  {
    "poster": {
      "poster_name": "Omar El Mghari",
      "poster_handle": "omar111"
    },
    "time_stamp": "2023-02-15 10:02:14",
    "text": "I already did but the API call is returning test data not my real contacts."
  },
  {
    "poster": {
      "poster_name": "Omar El Mghari",
      "poster_handle": "omar111"
    },
    "time_stamp": "2023-02-15 10:05:57",
    "text": "sorry, my bad :slightly_smiling_face:  I got confused as the call returned the two test contacts along with other contactsâ€¦so I went ahead and deleted those 2. It is working actually. Thank you."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 10:59:04",
    "text": "You would have to create a property for this and probably a workflow to update it whenever the deal moves stages"
  },
  {
    "poster": {
      "poster_name": "Hugo Barrientos",
      "poster_handle": "hugo915"
    },
    "time_stamp": "2023-02-15 18:33:34",
    "text": "hi to all, I'm pretty new in HubSpot, I'm learning to create an API call for my integration. Now I can create with POST method a new contact and a new deal, but I don't know how to associate contacts to a new deal, could someone explain to me? Regards in advance!",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-15 18:51:48"
      },
      {
        "time_stamp": "2023-02-15 18:52:01"
      },
      {
        "time_stamp": "2023-02-15 18:52:12"
      },
      {
        "time_stamp": "2023-02-15 18:52:28"
      },
      {
        "time_stamp": "2023-02-15 18:52:40"
      },
      {
        "time_stamp": "2023-02-16 08:45:35"
      },
      {
        "time_stamp": "2023-02-16 08:46:32"
      }
    ]
  },
  {
    "text": "You can use the association api for this:",
    "time_stamp": "2023-02-15 18:51:48"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 18:52:01",
    "text": "<https://developers.HubSpot.com/docs/api/crm/contacts>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 18:52:12",
    "text": "1234 is the contact id, and 5678 is the deal id"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 18:52:28",
    "text": "4 is the association type id for associating a contact to a deal"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-15 18:52:40",
    "text": "0-3 is the deal object type id"
  },
  {
    "poster": {
      "poster_name": "Matthew Fall",
      "poster_handle": "matthew506"
    },
    "time_stamp": "2023-02-15 20:24:06",
    "text": "unfortunately not :confused: I had to DELETE to remove all associations, store/make note of the associations I wanted to keep, and then POST to create these associations again."
  },
  {
    "poster": {
      "poster_name": "Vi Vu",
      "poster_handle": "vivu"
    },
    "time_stamp": "2023-02-15 21:29:51",
    "text": "hello, I think `hs_marketable_status` "
  },
  {
    "poster": {
      "poster_name": "Vi Vu",
      "poster_handle": "vivu"
    },
    "time_stamp": "2023-02-15 21:30:01",
    "text": "is cannot set following this post"
  },
  {
    "poster": {
      "poster_name": "Vi Vu",
      "poster_handle": "vivu"
    },
    "time_stamp": "2023-02-15 21:30:04",
    "text": "<https://community.HubSpot.com/t5/APIs-Integrations/Cannot-set-a-contact-s-marketing-status-via-API/m-p/400428>"
  },
  {
    "poster": {
      "poster_name": "Vi Vu",
      "poster_handle": "vivu"
    },
    "time_stamp": "2023-02-15 21:30:16",
    "text": "Can you try to set and get value"
  },
  {
    "poster": {
      "poster_name": "Terry Greenlaw",
      "poster_handle": "terry220"
    },
    "time_stamp": "2023-02-15 22:07:50",
    "text": "Is there an endpoint that returns a list of all endpoints in the API? It would be great to be able to look through it before asking here or via support for a specific task",
    "reply_count": 31,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-16 07:05:41"
      },
      {
        "time_stamp": "2023-02-16 07:05:59"
      },
      {
        "time_stamp": "2023-02-16 07:06:37"
      },
      {
        "time_stamp": "2023-02-16 08:17:19"
      },
      {
        "time_stamp": "2023-02-16 08:17:55"
      },
      {
        "time_stamp": "2023-02-16 08:23:39"
      },
      {
        "time_stamp": "2023-02-16 08:23:42"
      },
      {
        "time_stamp": "2023-02-16 08:24:28"
      },
      {
        "time_stamp": "2023-02-16 08:25:03"
      },
      {
        "time_stamp": "2023-02-16 08:25:34"
      },
      {
        "time_stamp": "2023-02-16 08:26:50"
      },
      {
        "time_stamp": "2023-02-16 08:27:02"
      },
      {
        "time_stamp": "2023-02-16 08:28:19"
      },
      {
        "time_stamp": "2023-02-16 08:29:12"
      },
      {
        "time_stamp": "2023-02-16 08:29:12"
      },
      {
        "time_stamp": "2023-02-16 08:29:31"
      },
      {
        "time_stamp": "2023-02-16 08:30:02"
      },
      {
        "time_stamp": "2023-02-16 08:30:25"
      },
      {
        "time_stamp": "2023-02-16 08:30:29"
      },
      {
        "time_stamp": "2023-02-16 08:31:10"
      },
      {
        "time_stamp": "2023-02-16 08:33:21"
      },
      {
        "time_stamp": "2023-02-16 08:33:27"
      },
      {
        "time_stamp": "2023-02-16 08:33:44"
      },
      {
        "time_stamp": "2023-02-16 08:35:16"
      },
      {
        "time_stamp": "2023-02-16 08:35:30"
      },
      {
        "time_stamp": "2023-02-16 08:36:28"
      },
      {
        "time_stamp": "2023-02-16 08:36:55"
      },
      {
        "time_stamp": "2023-02-16 08:37:11"
      },
      {
        "time_stamp": "2023-02-16 08:37:16"
      },
      {
        "time_stamp": "2023-02-16 08:38:13"
      },
      {
        "time_stamp": "2023-02-16 10:49:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dylan Kapustka",
      "poster_handle": "dylan.kapustka"
    },
    "time_stamp": "2023-02-15 22:11:23",
    "text": "Thank goodness for this Slack channel, otherwise I'd lose countless hours traversing this convoluted documentation :upside_down_face:"
  }
]
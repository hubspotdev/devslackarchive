[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 11:24:45",
    "text": "<@UQWGKUEN7> this doesn't appear to work but was a good idea. I only tested it as default content for a blog post — might work otherwise"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2023-07-05 13:30:01",
    "text": "The above is working fine for me! both methods."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2023-07-05 13:30:56",
    "edited": {
      "time_stamp": "2023-07-05 13:31:38"
    },
    "text": "Although maybe im not understanding what you are actually trying to achieve. I don’t think that there is a way to change the default default text that shows up when you edit the page. But using the default filter will set content if the blog value is blank."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:31:16",
    "text": "oh, interesting, let me check again in case I typoed or something"
  },
  {
    "text": "Shows up blank in page editor when you spin up a new page. But the preview/live page will have the default content in it.",
    "time_stamp": "2023-07-05 13:33:24"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:42:08",
    "text": "you're right! regular content there definitely works"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:42:13",
    "text": "my ultimate goal is to cram in a module"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:42:17",
    "text": "let's see if that works :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:43:42",
    "text": "actually, in any case, it doesn't look like the default content stays editable"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:43:50",
    "text": "it's not included when you click in to edit"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2023-07-05 13:46:17",
    "text": "Right — that default content is jammed in there on render `if` no content is already in the variable that is being filtered. So in other words. If `content.post_body` is `undefined` then the default content will show."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:47:55",
    "text": "I have a unique case where I need to include a module inside of blog post content (by default)"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2023-07-05 13:47:56",
    "text": "What is this module supposed to do? Not quite following what the purpose of this module is. Or connecting how having the default content will help on blog posts in a practical way."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:48:38",
    "text": "it's a crazy web of stuff but ultimately, the important thing is that a module is loaded into a blot post"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:48:51",
    "text": "right now, this works by someone dragging in a module inside of the blog post content area"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:49:00",
    "text": "I was hoping to default it so that they don't need to drag"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2023-07-05 13:51:18",
    "text": "Got it got it. Yea with the new drag and drop templates im not sure off the top of my head if you can bake modules into the `post_body` from the template level."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:52:09",
    "text": "yea, I don't think so but that would probably be useful beyond just my use case"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:52:32",
    "text": "I feel like it's a low priority for HubSpot but dragging each time isn't THAT bad"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:52:39",
    "text": "I'm happy to have the feature"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:52:58",
    "text": "I think they just assume any modules that have to exist can go below/after content"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-05 13:53:02",
    "text": "but that doesn't work in my case"
  }
]
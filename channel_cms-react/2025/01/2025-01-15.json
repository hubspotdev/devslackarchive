[
  {
    "poster": {
      "poster_name": "Aitor",
      "poster_handle": "aitor.tomas"
    },
    "time_stamp": "2025-01-15 01:14:27",
    "edited": {
      "time_stamp": "2025-01-15 01:15:19"
    },
    "text": "As you will be working on this topic, one more thing. I tried to use a global event to populate  `.submitted-message` as a workaround:\n```useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      if (event.data.type === 'hsFormCallback' && event.data.eventName === 'onFormSubmitted' && props.message) {\n        const messageElement = document.querySelector('.submitted-message') as HTMLElement | null;\n\n        if (messageElement !== null) {\n          messageElement.innerHTML = props.message;\n        }\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n  }, []);```\nIt works except if the `Thank you message` contains an inserted HubSpot video. In that case, the field property `message` from the form returns the HTML and Hubl code:\n```<h2>Thanks!</h2>\n\n{% video_player \"embed_player\" overrideable=False, type='hsvideo2', hide_playlist=True, viral_sharing=False, embed_button=False, autoplay=False, hidden_controls=False, loop=False, muted=False, full_width=False, width='1280', height='720', player_id='XXXXXXXX', style='' %}```\nTherefore I cannot use it as a workaround, it seems that Hubl is not converted to HTML in that case."
  }
]
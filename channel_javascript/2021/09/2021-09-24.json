[
  {
    "poster": {
      "poster_name": "Tony Harris",
      "poster_handle": "anthony.harris"
    },
    "time_stamp": "2021-09-24 06:41:08",
    "text": "Hi all we are new to HubSpot and have started building out a theme, we have build the theme in a sandbox account and everything seems fine we are using slick carousel as require js as it in our assets folder... works fine on the sandbox... but we have recently placed a copy of the theme on another account and the staging pages are just not allowing any type of js libraries load in... we have tryed <https://nickpiscitelli.github.io/Glider.js/> as this is not dependant on Jquery even this fails to load, even js files from a cdn"
  },
  {
    "poster": {
      "poster_name": "Tony Harris",
      "poster_handle": "anthony.harris"
    },
    "time_stamp": "2021-09-24 06:42:31",
    "text": "Just wondering if anyone has came across anything like this?"
  },
  {
    "poster": {
      "poster_name": "Tony Harris",
      "poster_handle": "anthony.harris"
    },
    "time_stamp": "2021-09-24 06:47:39",
    "text": "Uncaught TypeError: require is not a function\n    at slick.min.js:1\n    at slick.min.js:1"
  },
  {
    "poster": {
      "poster_name": "Lars-Erik Aabech",
      "poster_handle": "lea184"
    },
    "time_stamp": "2021-09-24 06:55:08",
    "text": "Today I can't reproduce. :man-shrugging:"
  },
  {
    "poster": {
      "poster_name": "Saleh Muhammad",
      "poster_handle": "saleh.muhammad"
    },
    "time_stamp": "2021-09-24 09:32:39",
    "text": "Hi all\nI have an issue with identifying user, So the end goal is to identify user or create user only when he/she starts conversation but for some reason it shows unknown.\n```const w = window;\nconst HubSpot = {\n  execute: (action) =&gt; {\n    // If external API methods are already available, use them.\n    if (w.HubSpotConversations) {\n      action();\n      return;\n    }\n    /*\n      Otherwise, callbacks can be added to the hsConversationsOnReady on the window object.\n      These callbacks will be called once the external API has been initialized.\n    */\n    w.hsConversationsOnReady = w.hsConversationsOnReady || [];\n    w.hsConversationsOnReady.push(action);\n  },\n  setChatflow: () =&gt; {\n    window.history.pushState({}, 'chatflow', '?chatflow=abc_de');\n  },\n  setUserIdentity: ({\n    email,\n    accountId,\n  }) =&gt; {\n    const _hsq = (w._hsq = w._hsq || []);\n    // Identify current user / create contact once user start chatting\n    w.HubSpotConversations.on('conversationStarted', () =&gt; {\n      _hsq.push([\n        'identify',\n        {\n          email,\n          accountId,\n        },\n      ]);\n    });\n  },\n  loadWidget: () =&gt; {\n    const status = w.HubSpotConversations?.widget.status();\n    if (status?.loaded) {\n      w.HubSpotConversations.widget.refresh({ openToNewThread: true });\n    } else {\n      w.HubSpotConversations.widget.load({ widgetOpen: false });\n    }\n  }\n};```\n```const onConversationsAPIReady = () =&gt; {\n    HubSpot.setUserIdentity({\n      email: \"<mailto:example@example.com|example@example.com>\",\n      accountId: \"some-uuid\",\n    });\n    HubSpot.setChatflow();\n    HubSpot.loadWidget();\n};\n\n// Load Widget when ready\nHubSpot.execute(onConversationsAPIReady);```\nCan some one please help here\nThanks"
  },
  {
    "poster": {
      "poster_name": "John McCarthy",
      "poster_handle": "jmccarthy"
    },
    "time_stamp": "2021-09-24 11:14:57",
    "text": "I'm running into an issue where my script isn't working on dependent fields with onFormReady. This can be demoed here <https://devtelnetww.wpengine.com/HubSpot-contact-form-development-2/> . The script makes the field labels float except for dependent fields. To see this, select \"Yes\" for \"Are you a current customer\" and then select any option for \"What can we help you with?\". That dependent field label doesn't float out of the way. Any advice?\n```window.addEventListener('message', event =&gt; {\n  if(event.data.type === 'hsFormCallback' &amp;&amp;\n  event.data.eventName === 'onFormReady') {\n    \njQuery(function ($) {\n  \n var $input = $(\".hs-input\");\n\n$input\n .on(\"focus\", function() {\n  $(this)\n   .parent()\n   .parent()\n   .addClass(\"active\");\n })\n .blur();\n\n$input\n .focusout(function() {\n  if (!$(this).val()) {\n   $(this)\n    .parent()\n    .parent()\n    .removeClass(\"active\");\n  } else {\n   $(this)\n    .parent()\n    .parent()\n    .addClass(\"active\");\n  }\n })\n .focusout();\n })\n  }\n});```\n"
  },
  {
    "poster": {
      "poster_name": "Evan Grim",
      "poster_handle": "whiteship1120"
    },
    "time_stamp": "2021-09-24 17:33:53",
    "text": "I really enjoyed using Cypress"
  },
  {
    "poster": {
      "poster_name": "Evan Grim",
      "poster_handle": "whiteship1120"
    },
    "time_stamp": "2021-09-24 17:34:21",
    "text": "I had some idiosyncratic problems that had to do with our particular setup (don't remember the details) but the tool as a whole felt really robust"
  }
]
[
  {
    "poster": {
      "poster_name": "Don Denton",
      "poster_handle": "don.denton"
    },
    "time_stamp": "2025-01-10 07:00:02",
    "text": "&gt; Again, this does not change this value in the DB, just exposes a different way to reference a module.\nWhoa. Now I understand, and that is incredibly surprising! There’s an id in the database (returned in some cases), but declaring an id just gives you a _completely different handle overloaded on the same property name_ for template reference.\n\nThat sounds crazy (though totally safe too), and I can completely appreciate how a system like this might get to that place. Thanks for all the investigation and explanation. Very illuminating.\n\n"
  },
  {
    "poster": {
      "poster_name": "Jon Miller",
      "poster_handle": "jon894"
    },
    "time_stamp": "2025-01-10 07:33:26",
    "text": "Anytime. The reference in coded template by id seems like an artifact of an old pattern of our system and I am fuzzy on the actual mechanic of the service handling the module id’s beyond what I shared. So there could be details I am misinterpreting/misunderstanding but the gist remains the same… Probably shouldn’t set an explicit module_id on a hubl module :sweat_smile:. "
  }
]
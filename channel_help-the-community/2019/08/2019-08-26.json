[
  {
    "poster": {
      "poster_name": "Karis",
      "poster_handle": "karis.hizon"
    },
    "time_stamp": "2019-08-26 01:03:08",
    "text": "okay, thanks!"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tmahon"
    },
    "time_stamp": "2019-08-26 04:41:47",
    "text": "<@UFCK510Q6> are you targeting the form ID or the class? We recently removed the form `instanceID` which was dynamically generated from the ID. But we did however add in a class attribute which is completely static which can be targeted for styling."
  },
  {
    "text": "Hey everyone! How would you go about creating a module with this type of table? I need some help thinking this through, so I can deliver an easy to manage feature table for my client.\n\nMaybe one field per feature, with booleans for each of the three packages? Multiple sections in the table is a bit of a hassle as well. Not sure what the best solution would be, any suggestions are appreciated!",
    "time_stamp": "2019-08-26 08:00:41",
    "edited": {
      "time_stamp": "2019-08-26 08:02:23"
    },
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-08-26 08:13:25"
      },
      {
        "time_stamp": "2019-08-26 08:18:10"
      },
      {
        "time_stamp": "2019-08-26 08:47:28"
      },
      {
        "time_stamp": "2019-08-26 08:47:58"
      },
      {
        "time_stamp": "2019-08-26 08:49:40"
      },
      {
        "time_stamp": "2019-08-26 08:50:58"
      },
      {
        "time_stamp": "2019-08-26 08:51:42"
      },
      {
        "time_stamp": "2019-08-26 08:59:53"
      },
      {
        "time_stamp": "2019-08-26 09:06:55"
      },
      {
        "time_stamp": "2019-08-26 09:07:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-08-26 08:13:25",
    "edited": {
      "time_stamp": "2019-08-26 08:13:33"
    },
    "text": "Might be a little complex but you could build a repeater in a custom module for this. Then you could essentially have this:\n```\n&lt;table code start&gt;\n   &lt;repeater logic here&gt;\n&lt;table code end&gt;\n```\nYour repeater logic would have a boolean for if its a feature group row, then if so, it shows a text field for the name of it.\n\nIf not, it would then show a text field for feature name, and 3 booleans for the three packages.\n\nThese would of course be wrapped in a `&lt;tr&gt;` and corresponding `&lt;td&gt;`â€™s.\n\nLet me know if this helps point you in the right direction."
  },
  {
    "poster": {
      "poster_name": "Mattias Hagberg",
      "poster_handle": "mattias.hagberg"
    },
    "time_stamp": "2019-08-26 08:18:10",
    "text": "It will definitely be quite complex either way, will have to add loads of fields :slightly_smiling_face: I think your approach sounds nice though, will probably take that route! How would you go along creating multiple sections (eg. several feature tables) in a not-so-headachy way?"
  },
  {
    "poster": {
      "poster_name": "Jay Martin",
      "poster_handle": "terrancemrtn"
    },
    "time_stamp": "2019-08-26 08:31:05",
    "text": "Hi everyone! I'm new to HubSpot, and I was going through the academy to try to get a grasp on things. I got to the practical part of the exam and got stuck lol! Is there anymore documentation that could help me out?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-08-26 08:47:28",
    "text": "as in several feature group titles like the two you have above in the image?"
  },
  {
    "poster": {
      "poster_name": "Mattias Hagberg",
      "poster_handle": "mattias.hagberg"
    },
    "time_stamp": "2019-08-26 08:47:58",
    "text": "Exactly. I guess I have to loop those too?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-08-26 08:49:40",
    "text": "so using the custom repeater, you would be able to identify those items and then have a class assigned to the `&lt;tr&gt;` for it. Let me see if I quickly write up something for a starting point for you"
  },
  {
    "poster": {
      "poster_name": "Mattias Hagberg",
      "poster_handle": "mattias.hagberg"
    },
    "time_stamp": "2019-08-26 08:50:58",
    "text": "I think I got it :slightly_smiling_face: ```(PyList: [{section_title=First section, features=[{feature_title=This feature, tier_1=true, tier_2=true, tier_3=true}, {feature_title=That feature, tier_1=false, tier_2=true, tier_3=true}]}, {section_title=Second section, features={feature_title=, tier_1=false, tier_2=false, tier_3=false}}])```"
  },
  {
    "poster": {
      "poster_name": "Mattias Hagberg",
      "poster_handle": "mattias.hagberg"
    },
    "time_stamp": "2019-08-26 08:51:42",
    "edited": {
      "time_stamp": "2019-08-26 08:59:37"
    },
    "text": "And then I'm just doing ```{% for section in module.feature_section %}\n  {{ section.section_title }}\n  {% for feature in section.features %}\n    {{ feature.feature_title }}\n    {# etc #}\n  {% endfor %}\n{% endfor %}```"
  },
  {
    "text": "Gives me something like this :slightly_smiling_face:",
    "time_stamp": "2019-08-26 08:59:53"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-08-26 09:06:55",
    "text": "yep, that would be the course of action I would take"
  },
  {
    "poster": {
      "poster_name": "Mattias Hagberg",
      "poster_handle": "mattias.hagberg"
    },
    "time_stamp": "2019-08-26 09:07:40",
    "text": "Then I think I got it all sorted for now. Thanks for helping me get the right mindset, much appreciated!"
  },
  {
    "poster": {
      "poster_name": "Jenny Sowyrda",
      "poster_handle": "jsowyrda"
    },
    "time_stamp": "2019-08-26 10:57:07",
    "text": "Hey everyone! I have a community user looking for some assistance in setting up a custom element in their menu; any thoughts/suggestions or insights would be appreciated: <https://community.HubSpot.com/t5/CMS-Development/Activating-HubSpot-Chat-via-Javascript/m-p/287628#M13384>",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-08-26 13:50:28"
      },
      {
        "time_stamp": "2019-08-26 23:49:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Maria Filipe",
      "poster_handle": "maria.filipe"
    },
    "time_stamp": "2019-08-26 13:50:28",
    "text": "Hi Jenny, does using the anchor #hs-chat-open work?"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2019-08-26 23:49:29",
    "text": "I've added a response."
  },
  {
    "poster": {
      "poster_name": "Karis",
      "poster_handle": "karis.hizon"
    },
    "time_stamp": "2019-08-26 23:59:39",
    "text": "yeah i did, but i was able to fix it tho, thanks!"
  }
]
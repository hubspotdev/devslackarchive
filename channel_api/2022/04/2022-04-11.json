[
  {
    "poster": {
      "poster_name": "Dmitry Shepelev",
      "poster_handle": "dmitry.shepelev"
    },
    "time_stamp": "2022-04-11 06:36:11",
    "text": "Hi\nDid everyone use <https://developers.HubSpot.com/docs/api/webhooks|webhook api> ?\nI have a couple questions about authorization. I tried to use *key* and also created *oauth accessToken* with different scopes, but it’s not clear for me how it should works.\n\nI run\n```curl -H \"Authorization: Bearer token_here\" <https://api.HubSpot.com/webhooks/v1/286411/subscriptions>```\nand got the following response (but we’ve added this permission to this oauth token):\n```This oauth-token (token_here) does not have proper permissions! (requires all of [developers-read])\"```\nCan anyone clean up this behaviour?"
  },
  {
    "poster": {
      "poster_name": "Gagan Sohanpal",
      "poster_handle": "gagan_sohanpal"
    },
    "time_stamp": "2022-04-11 06:36:46",
    "text": "Look"
  },
  {
    "time_stamp": "2022-04-11 10:00:54",
    "text": "Reminder: *Want to be the first to know when a new API is available or an existing API has a new version?*  We publish all of that on our <https://developers.HubSpot.com/changelog|Developer Changelog>.  While we do our best to avoid <https://developers.HubSpot.com/docs/breaking-change-definition|breaking changes> to our APIs, sometimes for security, and reliability we have to. The Changelog is where we’ll post announcements ahead of time about it. <https://developers.HubSpot.com/changelog|Subscribe to the Developer Changelog> to stay up-to-date on what’s happening in the world of HubSpot development."
  },
  {
    "poster": {
      "poster_name": "Sebastian Orellana",
      "poster_handle": "as.orellana"
    },
    "time_stamp": "2022-04-11 11:40:25",
    "edited": {
      "time_stamp": "2022-04-11 11:41:34"
    },
    "text": "Hello, team! im doing an app with webhook and trying to fetch more information with the API like the message itself, contact info, deals associated, etc.\nThe data i receive from the webhook (conversation.creation and conversation.newMessage) are something like:\n```  NesMessage:{\n    \"eventId\": \"100\",\n    \"subscriptionId\": 1546825,\n    \"portalId\": 21754921,\n    \"occurredAt\": 1649698671461,\n    \"subscriptionType\": \"conversation.newMessage\",\n    \"attemptNumber\": 0,\n    \"objectId\": 123,\n    \"changeSource\": \"CRM\"\n  }\nCreated: {\n    \"eventId\": \"100\",\n    \"subscriptionId\": 1546826,\n    \"portalId\": 21754921,\n    \"occurredAt\": 1649698671461,\n    \"subscriptionType\": \"conversation.creation\",\n    \"attemptNumber\": 0,\n    \"objectId\": 123,\n    \"changeSource\": \"CRM\",\n    \"changeFlag\": \"NEW\"\n  }```\nis there a way to make requests fetching the information i want?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-04-11 16:27:40"
      },
      {
        "time_stamp": "2022-04-11 16:28:07"
      }
    ]
  },
  {
    "text": "If anyone is having similar issue, the documentation here seem to be incorrect.  The attachment is what it is as of now, however, it should have been `HubSpotClient.cms.hubdb.rowsApi`",
    "time_stamp": "2022-04-11 14:51:22"
  },
  {
    "poster": {
      "poster_name": "Alexander Wazin",
      "poster_handle": "support432"
    },
    "time_stamp": "2022-04-11 16:27:40",
    "text": "There is a conversations beta forum where you can post questions"
  },
  {
    "poster": {
      "poster_name": "Alexander Wazin",
      "poster_handle": "support432"
    },
    "time_stamp": "2022-04-11 16:28:07",
    "text": "<https://community.HubSpot.com/t5/Conversations-API-beta/gh-p/conversations_api>"
  },
  {
    "poster": {
      "poster_name": "Sean Aguinaga",
      "poster_handle": "sean.aguinaga"
    },
    "time_stamp": "2022-04-11 18:03:52",
    "text": "Do webhooks have an idempotency key or anything like that?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-04-11 18:08:00"
      },
      {
        "time_stamp": "2022-04-11 18:08:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sean Aguinaga",
      "poster_handle": "sean.aguinaga"
    },
    "time_stamp": "2022-04-11 18:08:00",
    "text": "Trying to handle things like if an attribute is changed in the CRM, then quickly re-changed, and the first one took longer to execute - so that the first input value (that was maybe a mistake) is stored - which is not what we would want to happen"
  },
  {
    "poster": {
      "poster_name": "Sean Aguinaga",
      "poster_handle": "sean.aguinaga"
    },
    "time_stamp": "2022-04-11 18:08:35",
    "text": "Should I use my own db to keep track of things and roll back or what?"
  }
]
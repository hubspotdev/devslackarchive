[
  {
    "poster": {
      "poster_name": "Juergen Koeck",
      "poster_handle": "juergen.koeck"
    },
    "time_stamp": "2020-07-15 02:29:22",
    "text": "Hey all.\nWe’re trying to clean up our JS file for our HS CMS website using the chrome dev tools coverage featurew. The min.js version of the file (hub generated) holds around 23k lines while our original JS file is only 10k lines long. How is that possible?\nWe tried to side by side compare the two files, but they look completely different and we can’t really find any matching code parts in the two documents (using cmd+f / strg+f)."
  },
  {
    "poster": {
      "poster_name": "Andrew Wilson",
      "poster_handle": "socialmedia"
    },
    "time_stamp": "2020-07-15 08:39:14",
    "text": "Does anybody have any ideas? I'm Looking for a solution regarding forms and personalization tokens. We have a form with a field for \"company name\"; when a guest fills out the form they are redirected to a thank-you page or shown an inline thank-you message. The URL that they are redirected to contains a token <http://example.com//{{|example.com//{{> personalization_token('contact.employed_by__c', 'TRG-general') }}-retirement-guide.pdf\". The issue that I am having is that the time from when the form is submitted to the thank you page redirect is to fast. There is not a enough time for the contact to be created on the back-end (takes 10-20 seconds) and the token defaults instead of serving the dynamic content. Been trying to target the form submit button with JS to try and delay the redirect but haven't been successful. Ideally a modal would display after submit and timeout after 15000 and then redirect to the dynamic URL. Hopefully that would be enough time for the token to work. Anybody know of a solution to this?"
  },
  {
    "poster": {
      "poster_name": "Marcelo Eduardo Da Ros Arana",
      "poster_handle": "marcelo.daros"
    },
    "time_stamp": "2020-07-15 11:33:56",
    "text": "Hi everybody. i have a problem in one form. When i set values of fields using JQuery, i need to trigger the change event. If not, HubSpot doesn't recognize the new value. What i normally do is this: *$(\"#hora_de_inicio-0034afe0-b55f-4d68-84a8-c1d43961e95b\").trigger(\"change\")*"
  },
  {
    "poster": {
      "poster_name": "Marcelo Eduardo Da Ros Arana",
      "poster_handle": "marcelo.daros"
    },
    "time_stamp": "2020-07-15 11:34:09",
    "text": "but i'm getting this error: *Uncaught TypeError: $(...).trigger is not a function*"
  },
  {
    "poster": {
      "poster_name": "Marcelo Eduardo Da Ros Arana",
      "poster_handle": "marcelo.daros"
    },
    "time_stamp": "2020-07-15 11:34:31",
    "text": "however, when i apply the trigger function with an element outside the form, it works. Any idea?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-07-15 11:59:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stephanie O'Gay Garcia",
      "poster_handle": "stephanie"
    },
    "time_stamp": "2020-07-15 11:59:34",
    "text": "HubSpot forms load after the rest of the content, so I find it works best to use <https://legacydocs.HubSpot.com/global-form-events|an onFormReady event listener> to detect the form load and add in any additional JS."
  },
  {
    "poster": {
      "poster_name": "Marcelo Eduardo Da Ros Arana",
      "poster_handle": "marcelo.daros"
    },
    "time_stamp": "2020-07-15 13:42:44",
    "text": "Thanks! it's a good advice. although the reason of my problem was because i was using an embed form and i cannot call the elements the same way when it's an iframe."
  }
]
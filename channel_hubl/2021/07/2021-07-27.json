[
  {
    "poster": {
      "poster_name": "Michael Niemeijer",
      "poster_handle": "michael915"
    },
    "time_stamp": "2021-07-27 01:28:22",
    "text": "Hi All, My question is more of an opinion kind of question I guess. but I’ve been working with HubSpot for 2 month now. Having set up a local environment, I’m now trying to come up with a plan to implement SASS to have a better workflow for the website.\n\nWanted to know what you guys think of using CSS with HUBL, who uses this and think that its’ a better /worse idea to use SASS. or can you maybe combine the two? Looking forward to your responses!",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-07-27 08:04:33"
      },
      {
        "time_stamp": "2021-07-27 14:06:11"
      },
      {
        "time_stamp": "2021-07-28 06:02:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sean Metcalf",
      "poster_handle": "sean160"
    },
    "time_stamp": "2021-07-27 08:04:33",
    "edited": {
      "time_stamp": "2021-07-27 11:04:01"
    },
    "text": "Personally, using HUBL in CSS has worked for me in just about every situation - You can create reusable macros and variables the same. The added bonus of using HUBL is that there's 0 setup and you can tie many of your variables to the fields.json file so they're dynamic to the end user."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2021-07-27 11:09:15",
    "text": "We are currently seeing some new tags/functions that requires underscore while old tags are not underscored nor camelCase like.\nExamples:\n`{% endmacro %}`\n`{% end_require_css %}`\nCan we have a convention? I understand that jinjava inherit from Jinja paterns, but HubL functions are not.\nA few alias to solve that would be great."
  },
  {
    "text": "Any idea how JSON fields work in a form's embed code?\n\nI'm trying to make the notification list possible to be defined at the page level, in this case it is `new_notification_list`\nWhat kind of JSON data should I pass there?\nJust { email1, email2 }?\n\n   `{% form`\n              `form_to_use=\"{{ module.form_col.form.form_id }}\"`\n              `response_response_type=\"{{ module.form_col.form.response_type }}\"`\n              `response_message=\"{{ module.form_col.form.message }}\"`\n              `response_redirect_id=\"{{ module.form_col.form.redirect_id }}\"`\n              `response_redirect_url=\"{{module.form_col.form.redirect_url}}\"`\n              `gotowebinar_webinar_key=\"{{ module.form_col.form.gotowebinar_webinar_key }}\"`\n              `title=\"{{ module.form_col.form_title }}\"`\n              `notifications_are_overridden = true`\n              `notifications_override_email_addresses = new_notification_list`\n            `%}`",
    "time_stamp": "2021-07-27 11:54:27",
    "edited": {
      "time_stamp": "2021-07-27 11:58:51"
    }
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-07-27 14:06:11",
    "edited": {
      "time_stamp": "2021-07-27 14:06:48"
    },
    "text": "We use both Sass and Hubl, and find it works pretty well, you can still access and use global theme settings via CSS variables, and you can also use Hubl functions with a hacky Sass function, but I haven’t really come up with a way to use pure Hubl, like {% if %} blocks and such, unfortunately. Personally, Hubl + Sass has been fine for most of my use-cases except some very niche things I’ve wanted to do."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-07-27 14:11:24",
    "edited": {
      "time_stamp": "2021-07-27 14:12:15"
    },
    "text": "So I’m doing\n```    --__private__heading-h#{$i}-font-size: {{ theme.typography.h#{$i}.size }}{{ theme.typography.h#{$i}.size_unit }};\n    --heading-h#{$i}-font-size: var(--__private__heading-h#{$i}-font-size, var(--font-scale-#{$scale}));```\nI’m making the size optional here and not specified by default in the global theme settings, so in this case, it should be using the `--font-scale` fallback, but it’s not, because I have the `size_unit` default set to `rem` so for example it’s outputting `--__private__heading-h1-font-size: rem;` which results in it not using the fallback. Any ideas to get around this?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-07-27 14:11:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-07-27 14:11:32",
    "text": "<@U7V9DQ31P>"
  },
  {
    "text": "Hey all, first time posting on the Slack!!\nI'm having some strange behavior when using the postal_location function inside a loop.\n\nSo I set my control:\n```{{postal_location(33431)}}```\nand it returns:\n```LatLon{latitude=26.3799, longitude=-80.0975}```\nAs expected\n\nBut when looping through a list of ZIPs:\n```{% for comp in companys %}{# companys is an iterable dict w/ zip code #}\n  {{postal_location(comp.zip)}}\n  {{postal_location(comp.zip, 'us')}}\n{% endfor %}```\nIt returns:\n```LatLon{latitude=0.0, longitude=0.0}\nLatLon{latitude=0.0, longitude=0.0}```\nfor the ZIP used in the control.\n\nSee screen shot for reference:",
    "time_stamp": "2021-07-27 15:35:28"
  }
]
[
  {
    "poster": {
      "poster_name": "Mike Sherman",
      "poster_handle": "mikesherman"
    },
    "time_stamp": "2021-05-11 04:39:53",
    "edited": {
      "time_stamp": "2021-05-11 04:40:51"
    },
    "text": "Greetings all!\nI have template with modules that gets deployed to different environments and ideally I would be able to be able just define a default src for an image that will dynamically work when the template is copied over to different environments. So for example, if I have an image field and there is a placeholder image at '/template/images/placeholder.jpg' is there a way to add that to a module's fields.json default src key?\n\n```{\n  \"type\" : \"image\",\n  \"id\": \"background_image\",\n  \"name\": \"background_image\",\n  \"label\": \"Background Image\",\n  \"required\" : false,\n  \"locked\" : false,\n  \"responsive\" : true,\n  \"resizable\" : false,\n  \"show_loading\" : false,\n  \"default\" : {\n    \"size_type\" : \"auto\",\n    \"src\" : \"[DYNAMIC_PATH_FOR_PLACEHOLDER_IMAGE??]\",\n    \"alt\" : null,\n    \"loading\": \"disabled\"\n  }\n}```\nThanks in advance!",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-12 07:31:49"
      },
      {
        "time_stamp": "2021-05-12 17:38:34"
      }
    ]
  },
  {
    "text": "Does anyone have any idea why the form options wont show on custom form modules? The first image shows the options on the default HubSpot form module, and the second one shows a custom module with a form that i included. I need the Follow up options to be added in my form",
    "time_stamp": "2021-05-11 08:13:50"
  },
  {
    "text": "Figured it out! The default HubSpot Form module has all these fields integrated!",
    "time_stamp": "2021-05-11 08:27:31"
  },
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-05-11 08:51:02",
    "text": "thanks <@UQERM7BLY> this helped me alot!"
  },
  {
    "text": "I'm trying to pull an uploaded image into a :before class. I'm thinking the data attribute is text only? Anyway, what I have isn't working, and I'm not sure where to go from here. Any ideas?",
    "time_stamp": "2021-05-11 15:34:21",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-05-11 19:23:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-05-11 15:35:08",
    "text": "Css"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-05-11 15:35:35",
    "text": "Just an inline set of styles",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-05-11 15:37:02"
      },
      {
        "time_stamp": "2021-05-11 15:37:31"
      },
      {
        "time_stamp": "2021-05-11 15:38:30"
      },
      {
        "time_stamp": "2021-05-12 00:34:11"
      },
      {
        "time_stamp": "2021-05-13 07:58:41"
      },
      {
        "time_stamp": "2021-05-14 01:01:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Amanda",
      "poster_handle": "amanda596"
    },
    "time_stamp": "2021-05-11 15:37:02",
    "text": "Hey Chad! Are you replying to me? I've thought about this, but I don't know how to apply CSS to this element: {% inline_rich_text field=\"result\" value=\"{{ item }}\" %}"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-05-11 15:37:31",
    "text": "You have to wrap it in another element"
  },
  {
    "poster": {
      "poster_name": "Amanda",
      "poster_handle": "amanda596"
    },
    "time_stamp": "2021-05-11 15:38:30",
    "text": "Right, I'm having trouble getting it to work with my flex settings, but I could then just try to adjust the flex to get that working correctly instead"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-05-11 19:23:51",
    "text": "Hey Amanda - you really have a whole array of options to solve this. You could move your css into the html section and wrap it in a require_css tag then assign the url value directly to the css from a hubl tag. You could also just build a span connected to your p tag that youâ€™re generating in that for loop and in-line the background image there. "
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2021-05-12 00:34:11",
    "text": "You can do something like\n```{% for item in module.repeater %}\n&lt;IMG src=\"{{item.src}}\" alt=\"{{item.alt}}\" class=icon\"&gt;{{item.description}} {% endfor %}```\nNo need for the whole function snippet.\n\nYou could do this with e.g with a select option for predefined fontawesome icons of you would like to\n\nYou can do something like\n```&lt;ul&gt;\n{% for item in module.repeater %}\n&lt;li&gt;&lt;I class=\"fas fa-{{item.icon}} fa-2x icon\"&gt;{{item.description}}&lt;/I&gt;&lt;/li&gt; {% endfor %}\n&lt;/ul&gt;```"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2021-05-12 00:38:59",
    "text": "This works just fine but if you want a more complex styling+hover+focus state you should write a custom css class and use it in the button (with the \"link(no styling)\" option) selected"
  }
]
[
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:34:58",
    "text": "Hey guys Isnt it posible to use plain old `hubdb_table` to return into about columns and whats inside the table as well. Like rows and row info?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:36:01",
    "text": "I thought it was `hubdb_table_info` (just going off top of my head didn’t check the docs)"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:36:39",
    "text": "no hubdb_table outpuits table level info but i thought you could drill down with that as well ans a series of for loops"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:38:04",
    "text": "“To get information on a table including its name, columns, last updated, etc, use the hubdb_table function.”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:38:11",
    "text": "you are correct"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:38:22",
    "text": "yeah what im prying to do is get"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:38:26",
    "text": "for instance"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:38:31",
    "text": "you can get columns that way but not rows"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:38:55",
    "text": "{{ table.columns.name.value }}"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:38:59",
    "text": "but in a loop"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:39:16",
    "text": "yea that should be totally possible"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:39:27",
    "text": "it isnt werkin"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:39:32",
    "text": ":disappointed:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:39:37",
    "text": "post the hubl"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:39:48",
    "text": "[redact IDs]"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:40:25",
    "text": "yeah one sec"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:41:10",
    "text": "```\n{% set events = hubdb_table(module.select_an_events_table) %}\n{% for filter in events.columns %}\n      {{ filter.location }}\n{% endfor %}\n```",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-05 11:54:03"
      },
      {
        "time_stamp": "2019-03-05 12:03:10"
      },
      {
        "time_stamp": "2019-03-05 14:39:59"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2019-02-22 07:43:32"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:44:13",
    "text": "I thought it6 was possible so i wouldnt have to have two different calls to the table"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:45:10",
    "text": "nevermind."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:45:17",
    "text": "i used .name and it worked"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:45:45",
    "text": "but i wanted to get that coulumns options"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:47:02",
    "text": ":thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:51:19",
    "text": "no dice i guess."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:51:48",
    "text": "it would be nice if we had one call where all data (if you put in the work) could be avialable."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:51:58",
    "text": "making two calls sucks."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:52:31",
    "text": "I do agree it’d be nice but they probably avoided that to prevent returning too much data"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:52:46",
    "text": "only hubdb_rows counts as a HubDB call"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 07:52:49",
    "text": "so atleast theres that benefit"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-22 07:55:44",
    "text": "`filter.options`?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 07:59:41",
    "text": "<@U7SL518D6> that is similar to graphql"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 08:00:22",
    "text": "yea if done wrong its bad but if you limit your query it super powerful."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 08:01:18",
    "text": "yea, I think they were thinking about - how do we make this easy to use, and encourage best practices without everyone defaulting to “give me all the info” and then just discarding half of it, wasting resources"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 08:01:19",
    "text": "the other thing i likle doing is creating arrays ans working against those."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 08:01:49",
    "text": "yea I find I have to do that a lot, my clients seem to mostly have complicated needs"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 08:02:21",
    "text": "working on a project that involves around 13 HubDBs so far and 2 modules are used to display that information."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-22 08:07:01",
    "text": "woah"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-22 08:09:06",
    "text": "woah is right. It’s a beast to work on. I apologize ahead of time if any of you every have to inherit this project lol while I’ve commented the code really well there’s just so much going on with it that I can’t keep it all in my head at one time."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 08:16:18",
    "text": "i have had those projects"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 08:16:26",
    "text": "<http://americantorchtip.com|americantorchtip.com>",
    "reply_count": 5,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-25 07:05:07"
      },
      {
        "time_stamp": "2019-02-25 07:05:57"
      },
      {
        "time_stamp": "2019-02-25 07:06:43"
      },
      {
        "time_stamp": "2019-02-25 07:07:39"
      },
      {
        "time_stamp": "2019-02-25 07:07:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 08:16:31",
    "text": "that is one of them..."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-22 08:16:32",
    "text": ":slightly_smiling_face:"
  }
]
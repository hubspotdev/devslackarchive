[
  {
    "poster": {
      "poster_name": "Wojtek",
      "poster_handle": "wojciech.satyla"
    },
    "time_stamp": "2023-11-07 03:08:43",
    "text": "Hi all. I have to display a blog post content on a website page (hero image and description to be more specific).\n\nI tried to use content_by_id function , but it gives me only title, name, url... pprint also didn't show anything useful.\n\nIs there any option to do this by hubl?"
  },
  {
    "text": "Does anybody know if it is possible to customise the order of the blog post content custom modules? For example, the “website header” module is at the very top of my header.html partial, and the very first module on the page, but shows midway down the modules list",
    "time_stamp": "2023-11-07 04:08:01"
  },
  {
    "poster": {
      "poster_name": "Team Kamkod",
      "poster_handle": "team015"
    },
    "time_stamp": "2023-11-07 04:49:17",
    "text": "Hi there!\nAnyone knows how to access a company with a custom association label (deal&lt;&gt;company association) in a quote module?\nThis code sets the primary company: _{% set BUYER_COMPANY = QUOTE.associated_objects.company %},_ and I’m looking for the associated company with a “Distributor” label."
  },
  {
    "poster": {
      "poster_name": "Dirk van der Giesen",
      "poster_handle": "dvandergiesen"
    },
    "time_stamp": "2023-11-07 08:03:45",
    "text": "Niko super thx for your reply i am going to test it out and let you know :-)"
  },
  {
    "poster": {
      "poster_name": "Dirk van der Giesen",
      "poster_handle": "dvandergiesen"
    },
    "time_stamp": "2023-11-07 08:56:48",
    "text": "Niko it works. Just missed the quotes\n``` {% set objects = objects|unique(\"collectie\") %}```"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-11-07 11:17:11",
    "text": "Oh, that’s interesting to hear — I always took the `export_to_template_context` documentation at its word when it says that it doesn’t work on custom modules. Thanks for sharing your updated fix!"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-11-07 12:58:07",
    "edited": {
      "time_stamp": "2023-11-07 13:01:38"
    },
    "text": "I have a client that wants to fetch content for all their blog posts on the blog listing page, so they can be filtered and searched with javascript. The filter and search functionalities all work fine\n\nHowever, they have 415 blog posts! And blog_recent_posts and blog_popular_posts have a maximum of returning 200. Anybody know of a way to batch blog_recent_posts more than once in order to fetch all 415 posts for a blog?\n\nIf this can be done in HubL, I can store all posts in a javascript array and apply filter and search functions accordingly.\n\nI was thinking if there was some parameter I could add to the blog_recent_posts function like \"offset\", than I could use blog_total_post_count and simple math to get the offset for the next batch... but this parameter doesn't seem to exist from the docs",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-11-07 17:55:29"
      },
      {
        "time_stamp": "2023-11-08 05:35:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-11-07 17:55:29",
    "text": "The limit on how many blog posts you can pull per page using HubL is pretty firm — you’ll need to take another approach besides loading all of the posts at once and shuffling them around on the DOM. Even if you could fix this problem in the immediate term, you’d run into the same problem again once you hit the next, harder wall.\n\nThere are a few approaches I can think of to handle this:\n1. Simplify a bit and rely on the built-in filter-by-tag and search functionalities. You won’t get the ‘slickness’ of a JS solution, but you can get things looking and working pretty nicely with some elbow grease, and you really improve scalability and reliability by using the platform as ‘intended.’\n2. There might be some sort of solution to be had using the <https://developers.HubSpot.com/docs/api/cms/blog-post|Blog Post API> to retrieve posts. This will let you get that SPA-like experience with instant results and complex filters. But, each search and filter is going to take multiple calls, so you’ll have to be pretty deliberate in making sure you account for your portal’s rate limits.\n3. Use an external search/filtering tool like Algolia to sort/search/retrieve posts via API calls. You’ll probably have to set up an integration to sync your post metadata over, though.\n    ◦ If your blog is on its own subdomain, you could simplify this by using Google Custom Search? Filtering by tags might take some Doing, though."
  },
  {
    "poster": {
      "poster_name": "Angelic Sanoy",
      "poster_handle": "info.samthing"
    },
    "time_stamp": "2023-11-07 23:41:15",
    "edited": {
      "time_stamp": "2023-11-07 23:42:45"
    },
    "text": "Hi <@U7SL518D6>: How about you want to hide the first and second recent blog?\n\nTried to use {% unless loop.index == 1 && 2 %} and {% unless loop.index == 2 %}  or {% unless loop.first && loop.second %} but I don't think are right syntax\n\n`blog_recent_posts(\"blog\",1)` for the top post then in your main forloop you will have to exclude the first value using loop.index `{%unless loop.index === 1%}` your code to display the post `{%endunless%}`"
  },
  {
    "text": "Hi, does anyone have idea that how to get sender profile pic URL in custom quote.",
    "time_stamp": "2023-11-08 00:01:41",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-11-08 06:31:58"
      }
    ]
  }
]
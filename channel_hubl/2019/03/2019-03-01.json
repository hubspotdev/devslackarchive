[
  {
    "text": "",
    "time_stamp": "2019-03-01 05:36:51"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2019-03-01 05:49:04",
    "text": "Hi I have blog_page_link(last_page_num) and  blog_page_link(next_page_num)  and I need to create a navigation like  &lt; 1 2 3 4 5 [...] &gt;  I think I need total count of posts of the blog and total posts on the current listning. Is there any hubl function for this job? Otherwise I need the variable names : current_page, total_posts_in_blog and total_showing_posts if you could help me with these I will be happy.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-01 05:56:54"
      },
      {
        "time_stamp": "2019-03-01 06:07:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mattias Hagberg",
      "poster_handle": "mattias.hagberg"
    },
    "time_stamp": "2019-03-01 05:56:54",
    "text": "Perhaps something like this? A bit messy, but as far as I can see, there's no built in function for this in hubl.\n\n<http://community.HubSpot.com/t5/CMS-Development/How-to-Create-pagination-in-blog/m-p/209048/highlight/true#M8546|community.HubSpot.com/t5/CMS-Development/How-to-Create-pagination-in-blog/m-p/209048/highlight/true#M8546>"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2019-03-01 06:07:28",
    "text": "You are the king <@UGA6NJFUM> Thank you!"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2019-03-01 07:01:23",
    "text": "Hi again, it seems that string comparison does not work or I do something wrong. In a foreach of topics I compare the global topic with items topic as: {{ (topic &amp;&amp; topic_item==topic) ? 'class=\"active\"' : '' }} but couldn't get active class yet.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-03-01 07:55:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-01 07:07:35",
    "text": ":brain:  + :bomb: = :exploding_head:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-03-01 07:30:57",
    "text": "is there a hubl variable that prints the current year?"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2019-03-01 07:35:12",
    "text": "Maybe local_dt|datetimeformat('%Y')"
  },
  {
    "poster": {
      "poster_name": "Lindsey Newman",
      "poster_handle": "lindseyn"
    },
    "time_stamp": "2019-03-01 07:35:32",
    "text": "There is: {{ year }}"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2019-03-01 07:36:42",
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-variables>"
  },
  {
    "poster": {
      "poster_name": "Mattias Hagberg",
      "poster_handle": "mattias.hagberg"
    },
    "time_stamp": "2019-03-01 07:55:42",
    "edited": {
      "time_stamp": "2019-03-01 07:56:20"
    },
    "text": "I think that should/could be written as ```class=\"{%if topic &amp;&amp; topic_item==topic %}active{% endif %}\"```"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-01 10:16:55",
    "edited": {
      "time_stamp": "2019-03-01 10:18:00"
    },
    "text": "pre-selected `choice` fields are not rendering on modules on initial load. I have to change the radio button for the value to reflect on the front end."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-01 10:17:05",
    "text": "Anyone else have this issue?"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-03-01 11:01:50",
    "text": "Not sure if this is possible in HubL and I haven't read the Jinja template docs yet but is it possible to print both `key` and `value` pair on a `dict` variable? Example:\n\n```\n{% set pages = { \n    \"Link 1\": \"first.html\", \n    \"Link 2\": \"second.html\", \n    \"Link 3\": \"third.html\" \n%}\n```",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-01 11:05:43"
      },
      {
        "time_stamp": "2019-03-01 11:07:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-01 11:05:43",
    "text": "<https://designers.HubSpot.com/docs/hubl/for-loops#key-value-pairs-in-loops>"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-03-01 11:07:52",
    "text": "Awesome! Thanks <@U3T21PDBK>. Didn't noticed this was already on HubSpot's documentation"
  },
  {
    "poster": {
      "poster_name": "Amit Rai",
      "poster_handle": "amit"
    },
    "time_stamp": "2019-03-01 11:19:41",
    "text": "Is there a way to get `hs_lang` globally?"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-03-01 11:29:20",
    "text": "Most of our blog tags have spaces in them and I'm trying to use the function `blog_recent_topic_posts()` which takes as the second parameter the blog tag. However the function requires the tag be hyphenated to replace the spaces. I'm trying to make this as a module so our marketing people can choose the tag for each module, but when I add the field for the selector \"tag\" and set a value return type as name, it returns the name with spaces not hyphens, therefore it doesn't work.\n\nIs there a better way to approach this so users can choose the tag for the module and it will populate with hyphens instead of spaces into my blog_recent_topic_posts() function?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 11:31:28",
    "text": "why not use the slug?"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-03-01 11:42:20",
    "text": "Probably a dumb question, but how do I grab the slug? I don't see a module field for a slug? Do I have to use the topic module field to return the topic id and then somehow get the slug from the id?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 11:44:24",
    "text": "nope, take your value the topic field is giving you, add `.slug`"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-03-01 12:06:36",
    "text": "I think I'm going crazy. I was wrong the first time, just printing out {{ module.blog_tag }} using the module tag field does display correctly with hyphens. However when I use it in this function `{% for content in blog_recent_tag_posts('blog', '{{ module.blog_tag }}', 4) %}` it does not work. But if I manually replace {{ module.blog_tag }} with the exact same string it prints out, it does work. Do I have syntax wrong for the second parameter somehow?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-01 12:09:24"
      },
      {
        "time_stamp": "2019-03-01 12:09:44"
      },
      {
        "time_stamp": "2019-03-01 12:10:25"
      },
      {
        "time_stamp": "2019-03-01 12:11:12"
      },
      {
        "time_stamp": "2019-03-01 12:11:16"
      },
      {
        "time_stamp": "2019-03-01 12:11:19"
      },
      {
        "time_stamp": "2019-03-01 12:11:51"
      },
      {
        "time_stamp": "2019-03-01 12:12:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 12:09:24",
    "edited": {
      "time_stamp": "2019-03-01 12:11:04"
    },
    "text": "`{% for content in blog_recent_tag_posts('blog', module.blog_tag , 4) %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 12:09:44",
    "edited": {
      "time_stamp": "2019-03-01 12:10:47"
    },
    "text": "you were trying to print the variable inside of a function call. `{{}}` means print `{%%}` means do something `{%--%}` means you’re a boss and you’re doing something"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-03-01 12:10:25",
    "text": "yeah, cannot I not do that? how do I put the variable in as the second param?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 12:11:12",
    "text": "copy and paste my code snippet"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 12:11:16",
    "text": "replace yours with it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 12:11:19",
    "text": "it’ll work"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-03-01 12:11:51",
    "text": "oh, I see... Thanks Jon!!!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 12:12:31",
    "text": ":jon-m: :high-five:"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-03-01 15:32:51",
    "text": "Is there any documentation for the *icon* module field? I couldn't really find much useful. I'm trying to insert a fontawesome icon field in a module, but the resulting icon is large and isn't obeying the css style as it's being drawn as an svg. The icon snippet includes icon name, style, and unicode variables, and presumably I need to use the `style=\"{{ module.resource_1_icon.type }}\"` to setup the style, but I can't find documentation on how/where to do this. Anyone know how to style icons for the module icon field?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-01 15:33:37"
      },
      {
        "time_stamp": "2019-03-01 15:38:43"
      },
      {
        "time_stamp": "2019-03-01 16:59:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 15:33:37",
    "text": "afraid the icon field is currently in a broken/unfinished state"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 15:38:43",
    "text": "if you manage to find a way to get it to work properly let me know would love to see how you did it. for now though I’d roll your own if you need a field like that"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-03-01 16:59:33",
    "text": "Got it, thanks Jon. Will let you know if I figure it out, but it was more a nice to have vs. something necessary, so will probably abandon it."
  },
  {
    "poster": {
      "poster_name": "Emman",
      "poster_handle": "emmanueldubria"
    },
    "time_stamp": "2019-03-01 17:38:41",
    "text": "Hi Guys, any tips on creating a dynamic columns when creating a module? for example, you have 5 items, you will dynamically create 2 rows, 3 items for the first row and 2 items to the second one.? Any snippet would help.. thanks!"
  }
]
[
  {
    "poster": {
      "poster_name": "Emil",
      "poster_handle": "hi926"
    },
    "time_stamp": "2023-05-22 09:59:19",
    "edited": {
      "time_stamp": "2023-05-22 10:00:05"
    },
    "text": "do you have an update on the timeline/status of coded dnd areas?\nis it currently be possible to get access?"
  },
  {
    "poster": {
      "poster_name": "Noel Williams",
      "poster_handle": "noel.williams"
    },
    "time_stamp": "2023-05-22 12:57:35",
    "edited": {
      "time_stamp": "2023-05-22 12:58:01"
    },
    "text": "Is anyone using programmable email beta? I'm having some issues that I thought were bugs. However, after reading this doc I came across in the community, it looks like there are several limitations. I'm trying to create a dynamic CTA module pulling data from HubDB that's dependent on a contact property. However, you can't assign HubDB results to a variable and it not break additional instances of the module. You also have to be careful not to use the same variable name in another module as that breaks things as well. I'm not sure how you would go about this without assigning to a variable? This is a simplified version of the code\n```\n{% if contact.brand %}\n  {% set QUERY = \"brand_concept_code__eq=\" ~ contact.brand.value ~ \"&amp;limit=1\" %}\n  {% set ROWS = hubdb_table_rows(678870, QUERY) %}\n  {% if ROWS %}\n    {% set row = ROWS[0] %}\n    {% set button_link = row[link_option] %}\n  {% endif %}\n{% else %}\n  {% set button_text = module.button_text %}\n  {% set button_link = module.defaults.default_button_link.href %}\n{% endif %}\n &lt;a href=\"{{ button_link }}\"&gt;{{button_text}}&lt;/a&gt;```",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-05-23 10:39:31"
      },
      {
        "time_stamp": "2023-05-23 12:19:23"
      },
      {
        "time_stamp": "2023-05-23 12:27:51"
      },
      {
        "time_stamp": "2023-05-23 13:08:28"
      },
      {
        "time_stamp": "2023-05-23 13:37:50"
      },
      {
        "time_stamp": "2023-05-23 14:17:01"
      },
      {
        "time_stamp": "2023-05-23 15:25:15"
      },
      {
        "time_stamp": "2023-05-24 07:48:22"
      },
      {
        "time_stamp": "2023-05-24 08:02:15"
      }
    ]
  }
]
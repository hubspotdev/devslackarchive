[
  {
    "poster": {
      "poster_name": "Benjamin Dubois",
      "poster_handle": "benjamin.dubois"
    },
    "time_stamp": "2020-08-04 07:23:48",
    "text": "Thanks for responding,\nLooks like the type of the id swap from int to string when imported/exported into the CSV file.\nI ended up using\nPOST /crm/v3/objects/companies/batch/update\nas you said, and everything works well!\nThanks again and have a good day :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "James Truty",
      "poster_handle": "james602"
    },
    "time_stamp": "2020-08-04 07:33:29",
    "text": "thanks for the response - heading in that direction!"
  },
  {
    "poster": {
      "poster_name": "Gil Turetsky",
      "poster_handle": "gturetsky"
    },
    "time_stamp": "2020-08-04 10:47:01",
    "text": "Is there an API endpoint that mirrors the \"Folders\" at *Marketing &gt; Email &gt; Manage &gt; Folders*?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-08-04 10:48:14"
      },
      {
        "time_stamp": "2020-08-04 11:01:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gil Turetsky",
      "poster_handle": "gturetsky"
    },
    "time_stamp": "2020-08-04 10:48:14",
    "text": "I don't think these are the same \"folders\" as this <https://legacydocs.HubSpot.com/docs/methods/files/get_folders|endpoint>"
  },
  {
    "poster": {
      "poster_name": "Gil Turetsky",
      "poster_handle": "gturetsky"
    },
    "time_stamp": "2020-08-04 11:01:42",
    "text": "It looks like the UI is hitting this endpoint: `<https://api.HubSpot.com/cosemail/v1/emails/folders/tree>`"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-08-04 11:11:56",
    "text": "I haven’t heard any issues with the throttling.\n\nIt’s worth noting that it’s not going to be exact, it’s more like a funnel than a filter. The webhook system is going to try and count the number of requests sent and account for that before sending the next payload, but with so many systems in play, there’s no garuntee it will get it exact within a short time frame.\n\nIn your linked question, I would be more concern if after that spike of 35 request sin a few seconds, this developer got even more until the 20 minutes had elapsed."
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-08-04 11:12:38",
    "text": "As for the logs, happy to dig in, but make sure you’re considering the batch. We log everything as the individual event, as that makes the most sense.\n\nBut we don’t send each event individually, we send them in batches, so the batch id is important"
  },
  {
    "poster": {
      "poster_name": "Sean Duane",
      "poster_handle": "sduane"
    },
    "time_stamp": "2020-08-04 11:13:19",
    "text": "If you want to DM me specific appIds and attemptIds I could try and take a peak when I have a free moment"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-08-04 13:12:08",
    "text": "Did something just change in the v3 Tickets API? I'm seeing very different results coming out of it",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-08-04 14:23:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-08-04 14:23:40",
    "text": "I built an integration with it in the last couple of weeks, maybe I could comment if you have more specifics?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-08-04 14:24:25",
    "text": "Yeah, I thought something like this must have happened, party on, glad it's working now!"
  },
  {
    "poster": {
      "poster_name": "Ralph Vugts",
      "poster_handle": "ralph.vugts"
    },
    "time_stamp": "2020-08-04 15:34:28",
    "text": "Thanks Sean - have DM’d you"
  },
  {
    "poster": {
      "poster_name": "Lee Howard",
      "poster_handle": "lehoward"
    },
    "time_stamp": "2020-08-04 16:31:45",
    "edited": {
      "time_stamp": "2020-08-04 16:33:29"
    },
    "text": "Hello!  I am working with the v3 api `@HubSpot/api-client` to create timeline events from my app.  I want to create a timeline event for every registration in our database.  I am trying to avoid duplicating entries so I am setting the id to the registration_pk from our database which is unique for every registration.\n\n`await hsclient.crm.timeline.eventsApi.create(event)`\n\nSo I created the timeline events on a test account and of course it works and I get an error ” `An event already exists with that id (2347317). Events are immutable since you are enabled for unified events.` ” if I try to create a duplicate event.\n\nBut now that the events have been created on the test account they can’t be recreated even on another test account.  I deleted all contacts on the test account, but I still get the error.  Is there any way to remove timeline events entirely or allow duplicates only in other accounts.\n\nAlso if I attempt to do a batch create the whole batch will fail if one event already exists - this means that if there is a possibility of a duplicate then I will need to submit all events individually.\n\nIt is possible that I am just using it wrong, but any suggestions would be appreciated.",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-08-04 18:30:37"
      },
      {
        "time_stamp": "2020-08-05 06:31:12"
      },
      {
        "time_stamp": "2020-08-05 06:32:07"
      },
      {
        "time_stamp": "2020-08-05 06:34:08"
      },
      {
        "time_stamp": "2020-08-05 09:19:56"
      },
      {
        "time_stamp": "2020-08-05 09:20:28"
      },
      {
        "time_stamp": "2020-08-05 12:56:04"
      },
      {
        "time_stamp": "2020-08-07 12:28:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-08-04 18:30:37",
    "text": "\"The id property in this request can be any string. This is meant to be generic enough to fit whatever ID scheme you use to keep track of these events in your system. The PUT requests are idempotent on this id, so another PUT with the same id will not create a new event, but will update the existing event. This id must be unique across all accounts using the integration.\"\n\nSo, you need to add some per-account uniqueness if you want to make it more unique.\n\nThis API claims it supports create-or-update: <https://legacydocs.HubSpot.com/docs/methods/timeline/batch-create-or-update-events> . Can you get more specific about what went wrong when you tried it? We might have to look at the exact requests you are sending not just the JS invocation..."
  }
]
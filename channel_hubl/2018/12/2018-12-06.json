[
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-06 10:03:30",
    "text": "*Question :thinking_face: *- When talking to confident HubSpot developers, I often hear that once a dev learns HubL ... it speeds up development time. Then when they have to work in WordPress, they groan because they won't be able to leverage HubL.",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-06 10:20:58"
      },
      {
        "time_stamp": "2018-12-06 10:23:02"
      },
      {
        "time_stamp": "2018-12-06 10:27:16"
      },
      {
        "time_stamp": "2018-12-06 14:39:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-06 10:03:34",
    "text": "&gt; :point_right: Do you feel this is true?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-12-06 10:21:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-06 10:03:35",
    "text": "&gt; :point_right: If so, what specifically about HubL helps speed up dev time?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-06 10:03:56"
      },
      {
        "time_stamp": "2018-12-06 10:05:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-06 10:03:56",
    "text": "Please comment with thoughts :slightly_smiling_face: Trying to understand."
  },
  {
    "poster": {
      "poster_name": "mvillalobos",
      "poster_handle": "mvillalobos"
    },
    "time_stamp": "2018-12-06 10:05:55",
    "edited": {
      "time_stamp": "2018-12-06 10:06:34"
    },
    "text": "I think generally speaking groaning about WP is because I haven't taken the time to learn PHP. Hubl made more sense to me because it resembles languages I already knew so it was easier to learn"
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-12-06 10:11:02",
    "text": "Does anyone know if you can override a blog post meta description tag with, for example, the first 120 characters of a post"
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-12-06 10:14:29",
    "text": "Without having to re-create the XML file"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-06 10:20:58",
    "text": "well may not be the answer you’re looking for but, learning HubL speeds up HS dev time significantly.\n\nWhen I have to work on WP It’s not the language itself that’s annoying but it’s that HubSpot’s way of giving access to all of the variables and everything needed and taking away a lot of the security risks and complicatedness before I get in to do anything that’s what makes HubL nicer to work in sometimes.\n\nThat and the coding patterns tend to be consistent. With PHP since the language is so old and has gone through so many changes it’s got baggage, and so many ways of coding the same thing that it’s like strapping rockets to a dinosaur."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-06 10:21:14",
    "edited": {
      "time_stamp": "2018-12-06 10:23:28"
    },
    "text": "Sort of? but at the same time, depending on your configuration, could also always use Laravel blade or twig which has basically the same syntax. been looking for an excuse to try this starter theme: <https://roots.io/sage/>"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-06 10:23:02",
    "text": "I think the other huge factor is structure. the great thing about PHP is it's a true serverside language, you can do almost anything with it. The downside, you can do almost anything with it, and there's a bunch of different ways to approach the same problem. HubSpot's structure can be frustrating sometimes, but once you learn how to work within it, _that's_ the way to do it, much less re-learning"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-06 10:27:16",
    "edited": {
      "time_stamp": "2018-12-06 10:58:22"
    },
    "text": "Plus one of the things I like about building something on HubSpot - there’s actually a more limited number of methods of doing it.\n\nexample if I need to build a team member gallery on a WP site, I could install a bloated plugin, build my own plugin, build part of a template with advanced custom fields, build a shortcode to inject it in. etc. insert development montage. Meaning I’m going to spend a ton of time planning and rearchitecting my code.\n\nWith HubSpot it’s different I instantly know right off the bat 3 ways I can implement it(HubDB, Blog, Custom Module), and it all depends on the clients needs what method is right for the job. Thus I spend less time planning more time building, and I know the pitfalls and advantages of each method way better because there are fewer methods."
  },
  {
    "text": "",
    "time_stamp": "2018-12-06 10:48:56"
  },
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-12-06 10:49:12",
    "text": "Hi guys, has anyone built a store locator in HubSpot before?"
  },
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-12-06 10:49:50",
    "text": "I've made a start with a little help from the HubSpot docs about making a map, but I've been asked to remove the geolocating checking and instead use a search to find the places"
  },
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-12-06 10:50:50",
    "text": "Can anyone give me any pointers to where I need to look to achieve this, relatively new to HubL so trying to cram as much info in as possible atm :grimacing:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-06 10:51:12",
    "text": "There is a good demo using real estate as an example"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-06 10:51:22",
    "text": "Think that has what you need"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-06 10:52:20",
    "text": "<https://designers.HubSpot.com/docs/tutorials/how-to-build-a-real-estate-listing-with-hubdb>"
  },
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-12-06 10:54:25",
    "edited": {
      "time_stamp": "2018-12-06 10:54:36"
    },
    "text": "Okay makes sense, so I don't need to use any further features of the Google Maps API to search HubDB and place the locations on the map?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2018-12-06 13:18:20",
    "text": "Question: Is there a good way to restrict the date range that popular posts are pulled from? I have used the blog_popular_posts function to get the most popular posts, but I only want to show the popular posts from the last 2 years. In my mind I could create an if statement looking at the publish date of the article, but if I do that it will just not show the post instead of also getting another more recent popular post.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-06 15:16:21"
      },
      {
        "time_stamp": "2018-12-06 15:53:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2018-12-06 14:39:29",
    "text": "sorry I had to lol, you're comparing hubl - a significantly limited language to PHP? Anyone that's worked with PHP for a decent amount of time would be able to achieve anything that hubl could do without batting an eyelid."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-12-06 15:16:21",
    "edited": {
      "time_stamp": "2018-12-06 16:48:16"
    },
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-tags#blog-related-posts> might suit your needs\n\nEDIT: Sorry did not fully read your question, sorry :rolling_on_the_floor_laughing:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-06 15:49:09",
    "text": "anyone know if there’s a var for identifying if the current page is in content staging or not? I have rollbar installed through content settings on an old site and am trying to make it so I can identify whether the errors are occuring on the live site or in content staging in an easy way"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-06 15:53:28",
    "text": "how do you get the unix timestamp for today’s date?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-06 15:56:11",
    "text": "can you use javascript to get the url?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-06 15:57:24",
    "text": "I’d rather not, I mean I guess I could just get the page’s URL in HubL, and check the domain, just hoped there was an even lazier method"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-06 15:57:51",
    "text": "no se, mi amigo"
  }
]
[
  {
    "poster": {
      "poster_name": "Brandon Eccles",
      "poster_handle": "brandoneccles"
    },
    "time_stamp": "2019-11-12 06:00:25",
    "text": "Does anyone know the best way to disguise 3rd party API keys when making calls from HubSpot pages? For example I’d like to build a HubSpot page that makes a `GET` request to display our Canny changelog entries. I don’t want to put our Canny API key in my front-end request though. Any ideas on how to go about accomplishing this?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-11-12 06:07:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-11-12 06:07:04",
    "text": "Create an API and whitelist the HubSpot urls."
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-11-12 06:12:34",
    "edited": {
      "time_stamp": "2019-11-12 06:14:01"
    },
    "text": "The stange thing about the samples is that the php code still uses Ryan Winchesters repo. But that is abandoned <https://packagist.org/packages/ryanwinchester/HubSpot-php>"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-11-12 07:42:03",
    "text": "Can someone confirm there is no way to get all the tickets of an associated contact via the API?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-11-12 07:43:45"
      },
      {
        "time_stamp": "2019-11-12 07:45:01"
      },
      {
        "time_stamp": "2019-11-12 07:45:37"
      },
      {
        "time_stamp": "2019-11-12 07:46:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aitor",
      "poster_handle": "aitor.tomas"
    },
    "time_stamp": "2019-11-12 07:43:45",
    "text": "you can do it via the CRM associations API: <https://developers.HubSpot.com/docs/methods/crm-associations/get-associations>"
  },
  {
    "poster": {
      "poster_name": "Aitor",
      "poster_handle": "aitor.tomas"
    },
    "time_stamp": "2019-11-12 07:45:01",
    "text": "I think for the definition ID (tickets to contact) you  have to use 16"
  },
  {
    "poster": {
      "poster_name": "Aitor",
      "poster_handle": "aitor.tomas"
    },
    "time_stamp": "2019-11-12 07:45:37",
    "edited": {
      "time_stamp": "2019-11-12 07:45:44"
    },
    "text": "GET `crm-associations/v1/associations/:contactId/HubSpot_DEFINED/16`"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-11-12 07:46:16",
    "edited": {
      "time_stamp": "2019-11-12 07:47:18"
    },
    "text": "Didn't know that endpoint, thank you"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-11-12 13:22:32",
    "text": "<@UFBNA9K9A> it would be nice if you could provide sample that shows how to handle/filter responses. For instance use the \"get all contacts\" API to retrieve all the contacts that have a known value for a specific property  or a specific value for a specific property. Thanks"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 13:23:44",
    "text": "That makes perfect sense, I’ll add that to our list"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 13:23:49",
    "text": "Thank you!"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-11-12 13:24:28",
    "text": "Hello all. Does anyone know if a chart that illustrates all associations within HubSpot exists? <https://developers.HubSpot.com/docs/methods/crm-associations/crm-associations-overview>",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-11-12 13:29:32"
      },
      {
        "time_stamp": "2019-11-12 13:34:45"
      },
      {
        "time_stamp": "2019-11-12 14:08:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 13:29:32",
    "text": "I’m not sure if this is what you are looking for but here is an ERD that shows the relationships between most of the objects <https://developers.HubSpot.com/docs/crm-integration-guide/overview>"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-11-12 13:34:45",
    "text": "this is perfect! thank you!"
  },
  {
    "poster": {
      "poster_name": "Bob Walsh",
      "poster_handle": "bob.walsh"
    },
    "time_stamp": "2019-11-12 14:08:22",
    "text": "Thanks <@UFBNA9K9A> - very helpful."
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:03:57",
    "text": "is there a way to get ALL posts using the `GET /contentsearch/v2/search` API?",
    "reply_count": 14,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-11-12 15:08:32"
      },
      {
        "time_stamp": "2019-11-12 15:09:55"
      },
      {
        "time_stamp": "2019-11-12 15:10:39"
      },
      {
        "time_stamp": "2019-11-12 15:11:50"
      },
      {
        "time_stamp": "2019-11-12 15:12:15"
      },
      {
        "time_stamp": "2019-11-12 15:12:39"
      },
      {
        "time_stamp": "2019-11-12 15:13:06"
      },
      {
        "time_stamp": "2019-11-12 15:14:29"
      },
      {
        "time_stamp": "2019-11-12 15:20:44"
      },
      {
        "time_stamp": "2019-11-12 15:21:12"
      },
      {
        "time_stamp": "2019-11-12 15:21:13"
      },
      {
        "time_stamp": "2019-11-12 15:21:19"
      },
      {
        "time_stamp": "2019-11-12 15:21:25"
      },
      {
        "time_stamp": "2019-11-12 15:25:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:04:08",
    "edited": {
      "time_stamp": "2019-11-12 15:04:13"
    },
    "text": "if I use `&amp;term=` it returns 0"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 15:08:32",
    "text": "Hey <@UGNQANS0Y> Can I ask why you are using that API?  I would think a better API to get all posts would be thise on<https://developers.HubSpot.com/docs/methods/blogv2/get_blog_posts>"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:09:55",
    "text": "oh, i didn't know about this endpoint"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:10:39",
    "text": "I'm using the API because I can't test a search form reloading the same page in the preview of the template. I setup a new blog as a sandbox environment but I got an empty listing and I can't test the search form"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 15:11:50",
    "text": "if this is in the front end then the API I gave you won’t work because it needs Oauth or an API key so we block cross origin requests so people don’t expose those"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:12:15",
    "edited": {
      "time_stamp": "2019-11-12 15:12:40"
    },
    "text": "right, i was just seeing the `hapikey` requirement"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 15:12:39",
    "text": "for testing, I would think the best thing is to just search for a term you know exists"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:13:06",
    "edited": {
      "time_stamp": "2019-11-12 15:13:31"
    },
    "text": "well, our client wants to show all posts to the user when they land in the page"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:14:29",
    "edited": {
      "time_stamp": "2019-11-12 15:14:45"
    },
    "text": "if I import the posts from an existing blog to a new blog (a sandbox blog where i'm testing the new template) i create would that create duplicate content within the CMS?"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:20:44",
    "edited": {
      "time_stamp": "2019-11-12 15:20:58"
    },
    "text": "oooh, the form worked when I added these to the form\n\n```\n&lt;input type=\"hidden\" name=\"blog_listing\" value=\"true\"&gt;\n&lt;input type=\"hidden\" name=\"portalId\" value=\"2478981\"&gt;\n&lt;input type=\"hidden\" name=\"template_file_path\" value=\"file.html\"&gt;\n```"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 15:21:12",
    "text": "great!"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:21:13",
    "text": "without using the API, just the blog loop"
  },
  {
    "poster": {
      "poster_name": "Juan Olvera",
      "poster_handle": "jolvera"
    },
    "time_stamp": "2019-11-12 15:21:19",
    "text": "thanks for the help!"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-12 15:21:25",
    "text": "no problem"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-11-12 15:25:31",
    "text": "To answer about importing content from one blog to another. Yes that would create duplicate content. But because your staged blog is just for development purposes you're not linking out to it. You can also put a robots meta tag in the header of the template or use the robots.txt field under settings to block search engines from seeing the duplicate content"
  }
]
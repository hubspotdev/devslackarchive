[
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-07 11:08:58",
    "text": "for those who need to use `|batch()` with hubdb"
  },
  {
    "text": "",
    "time_stamp": "2018-09-07 11:09:16"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-09-07 11:19:38",
    "text": "Amazing <@U38EZFVFE> thanks for sharing"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-07 11:24:42",
    "text": "Yeah man."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-07 11:25:42",
    "text": "FYI `[1], [2], [3]` are the table columns"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 13:56:01",
    "text": "Any ETA on __filters for “Foreign ID” columns when using HubL ?"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 13:57:03",
    "text": "this would drastically reduce the overhead on a number of user tasks but I can’t use it yet because I can’t check if a specific value was selected by the user using __contains"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 13:57:28",
    "text": "Open to alternative method of checking the array (saving it to a var then checking X in [list of values])"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-07 14:06:41",
    "text": "You can use filters using the foreign row IDs but I can add the ability to use the value from the column you select in the UI"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 14:12:14",
    "text": "Just to be clear on what I’m asking - I want to be able to make a query of &amp;foreign_id__contains=&lt;arbitrary_value&gt;"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 14:12:37",
    "text": "and it would return rows where the foreign id values selected contains the value passed"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 14:13:02",
    "text": "I get a nice red error saying filters aren’t available on foreign ID atm"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-07 14:13:12",
    "text": "Let me look"
  },
  {
    "text": "",
    "time_stamp": "2018-09-07 14:13:48"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-07 14:19:57",
    "text": "Easy fix one moment",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-09-07 15:07:56"
      },
      {
        "time_stamp": "2018-09-07 15:08:03"
      },
      {
        "time_stamp": "2018-09-07 15:08:21"
      },
      {
        "time_stamp": "2018-09-10 10:54:50"
      },
      {
        "time_stamp": "2018-09-10 10:57:44"
      },
      {
        "time_stamp": "2018-09-10 11:19:51"
      },
      {
        "time_stamp": "2018-09-10 11:31:43"
      },
      {
        "time_stamp": "2018-09-10 11:58:12"
      },
      {
        "time_stamp": "2018-09-10 12:01:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 15:07:56",
    "text": "<@U6GNQ7JBU> feel free to ping me when you’ve got an update - gotta run for the weekend though"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-07 15:08:03",
    "text": "thanks for the quick reply!"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-07 15:08:21",
    "text": "Np will have to do a little bit more work to get this working but should be ready by monday"
  }
]
[
  {
    "text": "I'm developing a custom module that I've created using js in my .html file. I am trying to configure fields within the js of the file and whenever I have a static value the works as expected but using HubL variable syntax breaks it. Any advice?",
    "time_stamp": "2022-07-20 11:34:54",
    "reply_count": 34,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-07-20 12:48:07"
      },
      {
        "time_stamp": "2022-07-20 12:53:29"
      },
      {
        "time_stamp": "2022-07-20 13:01:46"
      },
      {
        "time_stamp": "2022-07-20 13:11:25"
      },
      {
        "time_stamp": "2022-07-20 13:15:07"
      },
      {
        "time_stamp": "2022-07-20 13:18:42"
      },
      {
        "time_stamp": "2022-07-20 13:41:39"
      },
      {
        "time_stamp": "2022-07-20 13:42:42"
      },
      {
        "time_stamp": "2022-07-20 13:43:54"
      },
      {
        "time_stamp": "2022-07-20 13:44:50"
      },
      {
        "time_stamp": "2022-07-20 13:46:11"
      },
      {
        "time_stamp": "2022-07-20 13:46:25"
      },
      {
        "time_stamp": "2022-07-20 13:48:13"
      },
      {
        "time_stamp": "2022-07-20 13:49:18"
      },
      {
        "time_stamp": "2022-07-20 13:54:23"
      },
      {
        "time_stamp": "2022-07-20 13:56:38"
      },
      {
        "time_stamp": "2022-07-20 13:57:25"
      },
      {
        "time_stamp": "2022-07-20 13:57:34"
      },
      {
        "time_stamp": "2022-07-20 13:58:17"
      },
      {
        "time_stamp": "2022-07-20 13:58:37"
      },
      {
        "time_stamp": "2022-07-20 13:59:44"
      },
      {
        "time_stamp": "2022-07-20 14:00:32"
      },
      {
        "time_stamp": "2022-07-20 14:02:45"
      },
      {
        "time_stamp": "2022-07-20 14:04:26"
      },
      {
        "time_stamp": "2022-07-20 14:05:00"
      },
      {
        "time_stamp": "2022-07-20 14:07:40"
      },
      {
        "time_stamp": "2022-07-20 14:10:54"
      },
      {
        "time_stamp": "2022-07-20 14:16:39"
      },
      {
        "time_stamp": "2022-07-20 14:17:55"
      },
      {
        "time_stamp": "2022-07-20 14:19:35"
      },
      {
        "time_stamp": "2022-07-20 14:20:05"
      },
      {
        "time_stamp": "2022-07-20 14:20:54"
      },
      {
        "time_stamp": "2022-07-20 14:22:16"
      },
      {
        "time_stamp": "2022-07-20 14:32:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2022-07-20 12:07:21",
    "text": "This is already configurable according to the documentation <https://developers.HubSpot.com/docs/cms/building-blocks/modules/configuration#meta-json>"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 12:48:07",
    "text": "Does it actually break? Or does the syntax highlighting just break?\n\nIt’s a bit difficult to tell whats all going on here - Is this an actual module? It looks more like an HTML partial or template? Typically I would imagine you only really want to access the value for those prompts on the bottom? Putting the whole field there might be breaking it. Any JS errors popping up in the console?"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 12:53:29",
    "text": "This is an actual module, I've just created by injected all js in the .html file. The console is only showing warnings that my HubL wont be parsed in my JS.\n\nThe module actually does break and the preview renders blank. I tried wrapping in quotes, no quotes, but I *do* only want to access the values of the prompts."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:01:46",
    "text": "Would you mind taking a Screenshot of the whole DM window? Fields pane included?"
  },
  {
    "text": "I replaced some parts of the syntax to just be the field value with quotes but still not rendering in my preview",
    "time_stamp": "2022-07-20 13:11:25"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:15:07",
    "text": "Got it got it. The only thing that looks odd to me here is that you have the body, head, and html elements in here.\n\nIf you go into the preview and view page source then look for this script tag does it look like its rendering how it should?"
  },
  {
    "text": "It renders what im looking for but its not responsive to any of the field values which is weird. for example, If i change my button color field, nothing happens.",
    "time_stamp": "2022-07-20 13:18:42"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:41:39",
    "text": "Right that likely has to do with how the color is formatted. Do you know what its expected to look like being passed into the config there? Currently it would look something like\n```...\nbackground: \"#ffffff 80\"\n...```\nWhich just guessing is likely not what it’s expected to be."
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 13:42:42",
    "text": "a simple hex code is expected"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:43:54",
    "text": "Ok — then just get rid of the {{module.button_color.opacity}}"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 13:44:50",
    "text": "just tried, still unresponsive :pensive:"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:46:11",
    "text": "Is it expecting the actual hash too “#” or just the 6 hex digits?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:46:25",
    "text": "Can you put this on a test page and link to it?"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 13:48:13",
    "text": "it would expect a hash as well but i was assuming that configuring the field as a \"color\" type field would return a hash plus a valid hex code.\n\nis there anything I need to add in order for the variable  to be read within a script?"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 13:49:18",
    "edited": {
      "time_stamp": "2022-07-20 13:51:37"
    },
    "text": "<http://20688444.HubSpotpagebuilder.com/test-website-page-overlay|test page here>\nIt seems to only be inheriting the default styling settings (inline in the iframe)"
  },
  {
    "text": "Looks like this is how everything is currently coming out. Look right?",
    "time_stamp": "2022-07-20 13:54:23"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 13:56:38",
    "text": "yes, that looks correct"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:57:25",
    "text": "Ahh I htink I see the issue"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 13:57:34",
    "text": "that has all of the default field values pulling in"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:58:17",
    "text": "Run all of your text fields through an |escapejs filter — specifically the “Header” in panel."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:58:37",
    "text": "But also do the text ones on the bottom too - if this works"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:59:44",
    "text": "`module.header_text|escapejs`  or `module.header_text|escapejson`  since it’s technically going in json"
  },
  {
    "text": "Should hopefully escape that apostrophe",
    "time_stamp": "2022-07-20 14:00:32"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 14:02:45",
    "text": "can i do that in DM or do i need to do that locally?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 14:04:26",
    "text": "You should be able to change `{{module.header_text}}`  to `{{module.header_text|escapejson}}`"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 14:05:00",
    "text": "ah yeah- no changes"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 14:07:40",
    "text": "grrrrr try replacing `|escapejson`  with\n```|replace(\"'\", \"\\\\'\")```\n"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 14:10:54",
    "text": ":pensive:that did not work. Let me just change the text to avoid an apostrophe for now...and see if there is anything that might be throwing this off"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 14:16:39",
    "text": "Hmmm I just ran a test and |escapejson seems to be parsing it out correctly for me"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 14:17:55",
    "text": "I think it escaped properly but the fields are still unresponsive"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 14:19:35",
    "text": "Yea you are missing closing brackets on your prompts objects"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 14:20:05",
    "text": "should be `{text: 'prompt...' },` "
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 14:20:54",
    "text": "oh my.... that will definitely be the fix"
  },
  {
    "poster": {
      "poster_name": "Adrienne Williams",
      "poster_handle": "adwilliams"
    },
    "time_stamp": "2022-07-20 14:22:16",
    "text": "thank you for peer programming !!!! that worked !!"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 14:32:25",
    "text": "Wooohooo!"
  }
]
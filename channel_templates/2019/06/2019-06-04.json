[
  {
    "poster": {
      "poster_name": "Diego Partipilo",
      "poster_handle": "diego.partipilo"
    },
    "time_stamp": "2019-06-04 05:28:20",
    "text": "Hello Everyone! Can someone help me please? I am making a lay structure in a template. I have a *Main container group* then inside I have a *content container* then inside I have 2 other containers, and one of them has several module groups inside. For some reason the *footer module* which is outside the *main container* in the template,  is showing inside the *content container* html structure.. and adopting all CSS applied to the *content container*. This is driving me crazy I don't know what else I can do.",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-06-04 06:56:39"
      },
      {
        "time_stamp": "2019-06-04 07:00:37"
      },
      {
        "time_stamp": "2019-06-04 07:01:15"
      },
      {
        "time_stamp": "2019-06-04 07:06:46"
      },
      {
        "time_stamp": "2019-06-04 07:09:16"
      },
      {
        "time_stamp": "2019-06-04 07:11:07"
      },
      {
        "time_stamp": "2019-06-04 07:12:40"
      },
      {
        "time_stamp": "2019-06-04 08:34:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-04 06:56:39",
    "text": "use css specificity.  include .body-container-wrapper in your selector for the main content container"
  },
  {
    "poster": {
      "poster_name": "Diego Partipilo",
      "poster_handle": "diego.partipilo"
    },
    "time_stamp": "2019-06-04 07:00:37",
    "text": "Thanks for replying!! I found my problem... One of the modules inside one of the groups had an unclosed \"div\" and that was causing the html to include the footer inside the container... what can be improved is maybe showing errors for unclosed html elements."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-04 07:01:15",
    "text": "ahhh, yea unclosed elements will get ya every time"
  },
  {
    "poster": {
      "poster_name": "Diego Partipilo",
      "poster_handle": "diego.partipilo"
    },
    "time_stamp": "2019-06-04 07:06:46",
    "edited": {
      "time_stamp": "2019-06-04 07:07:22"
    },
    "text": "What is weird is that I would think that the unclosed element would have problems with the following element not with the whole container... specially because the unclosed element was never the last of the group. ;/"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-04 07:09:16",
    "text": "yea, some times the browsers save you on unclosed elements other times they do unexpected things"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-04 07:11:07",
    "text": "the following element thing, is kind of an example of that.\n\nfor example you could actually have a full page that doesn’t have closing  tags. technically it would be invalid but browsers would still render it. The browsers made choices to do this sort of stuff to prevent sites getting completely broken by developers doing that."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-04 07:12:40",
    "text": "at one point in time some people wanted to exploit that principle and build sites intentionally like that.\n\ndidn’t take long though for everyone as a whole to go - yea no this is a bad idea. even just from the code authoring perspective."
  },
  {
    "poster": {
      "poster_name": "Diego Partipilo",
      "poster_handle": "diego.partipilo"
    },
    "time_stamp": "2019-06-04 08:34:42",
    "text": "haha! of course! IT'S WRONG! but well I am happy that I found it! :slightly_smiling_face:"
  }
]
[
  {
    "poster": {
      "poster_name": "Alice Hill",
      "poster_handle": "alice.hill"
    },
    "time_stamp": "2021-08-09 04:12:50",
    "text": "Hi, i'm new to the channel and completely new to API's. i've been reading around alot but not found my answer, is it possible to extract from HubSpot campaign info, i.e. what campaign, who was in it (recipients), and sent/clicked/delivered metrics etc. based on their treament given (i.e. email sent).",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-08-09 06:35:14"
      },
      {
        "time_stamp": "2021-08-09 07:36:41"
      },
      {
        "time_stamp": "2021-08-09 07:37:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "JeroenBuelens",
      "poster_handle": "jeroen.buelens"
    },
    "time_stamp": "2021-08-09 06:35:14",
    "text": "<https://community.HubSpot.com/t5/HubSpot-Ideas/Complete-HubSpot-Campaigns-API/idi-p/20184>\n\nCampaigns themselves have been in \"development\" and campaigns don't have a full api yet to get their specific info through api, i'm sorry"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-08-09 07:14:35",
    "edited": {
      "time_stamp": "2021-08-09 07:16:04"
    },
    "text": "If you are redirecting to the page that shows the results immediately after the user submits the form then you are likely going to load the page before the page was updated with the new data.\n\nWhen you submit the form it sends the data to our API storing it in a database. if you redirect immediately after submit, that data likely is getting stored while you are making the request for the page already, so it will not be able to print data that was submitted because you requested the page before the page could be rendered with it.\n\nThere are many ways around this but the recommended path is to store a cookie on form submit and retrieve it on the thank you page/results page.\n\nYou could also opt for local storage, or change the redirect URL to include the data you need to render as query parameters. (If you do this, make sure to sanitize the data from the query parameter."
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-08-09 07:32:58",
    "text": "Great, thank you! Do you by any chance have any suggestions of documentation for this?"
  },
  {
    "poster": {
      "poster_name": "Alice Hill",
      "poster_handle": "alice.hill"
    },
    "time_stamp": "2021-08-09 07:36:41",
    "text": "Hi Jeroen, thanks for the update, such a shame."
  },
  {
    "poster": {
      "poster_name": "Alice Hill",
      "poster_handle": "alice.hill"
    },
    "time_stamp": "2021-08-09 07:37:11",
    "text": "Does anyone know much about the use of the HubSpot connector within azure data factory? wonder if that could be another way around to pull the info i need?"
  },
  {
    "poster": {
      "poster_name": "Lucas brum",
      "poster_handle": "lbrum"
    },
    "time_stamp": "2021-08-09 07:55:21",
    "text": "Hi I'm Lucas Brum, I'm new in HubSpot and new in Developer Backend, I need know, how many mails convert to a sales, but don't know how datas i'm need cross for get this data, any one here can help me?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-08-10 16:49:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-08-09 08:23:11",
    "text": "We don’t have HubSpot specific documentation related to this but setting and retrieving a cookie isn’t too difficult.\n\nThe Mozilla doc on it is a little bit overly detailed, don’t let that fool you though.\n\n<https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies>\n\nThe specific section you want to look at is:\n<https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#:~:text=JavaScript%20access%20using%20Document.cookie>\n\nbasically you’d set the cookie to store whatever data you need to have available on the next page, then you retrieve that data and print it to the page."
  },
  {
    "poster": {
      "poster_name": "Austin Elwell",
      "poster_handle": "austin.elwell"
    },
    "time_stamp": "2021-08-09 09:29:29",
    "text": "Hello, I have been using the Files API for a couple weeks and just a few days ago started running into an issue. I am attempting to upload a file from a url using the API, specifically this endpoint: <https://developers.HubSpot.com/docs/api/files/files|POST >*<https://developers.HubSpot.com/docs/api/files/files|/files/v3/files/import-from-url/async>* and I want to get the HubSpot ID of the uploaded file back. I know the upload endpoint only sends back a task ID, so I have been using a loop to check the status of the upload, and return the ID when the status is complete. This has been working for me until a few days ago. Now I am receiving the following 404 error when I check the status of the upload. Nothing has changed in my script, and the loop starts checking the status immediately after the POST returns with the Task ID. Also, the file does upload properly into HubSpot and remains in my folder, so the ‘looks like this has been removed’ message is incorrect. Would appreciate any help.\n```\"response\": {\n\t\t\"statusCode\": 404,\n\t\t\"body\": {\n\t\t\t\"status\": \"error\",\n\t\t\t\"message\": \"Object not found.  id are usually numeric.\",\n\t\t\t\"correlationId\": \"a2422120-e5f9-45b8-8a1d-b93d162c20b9\",\n\t\t\t\"context\": {\n\t\t\t\t\"id\": [\n\t\t\t\t\t\"AAAADDmv_3o\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"category\": \"OBJECT_NOT_FOUND\"\n\t\t}\n\t},\n\t\"expects\": {\n\t\t\"statusCode\": [\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t204\n\t\t]\n\t},\n\t\"message\": \"Not found. Looks like this has been removed.\"\n}```",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-08-10 09:20:33"
      },
      {
        "time_stamp": "2021-08-10 16:50:25"
      },
      {
        "time_stamp": "2021-08-10 16:51:44"
      },
      {
        "time_stamp": "2021-08-10 16:56:42"
      },
      {
        "time_stamp": "2021-08-10 16:57:15"
      }
    ]
  },
  {
    "time_stamp": "2021-08-09 10:00:15",
    "edited": {
      "time_stamp": "2021-08-09 10:00:19"
    },
    "text": "Reminder: *Want to be the first to know when a new API is available or an existing API has a new version?*  We publish all of that on our <https://developers.HubSpot.com/changelog|Developer Changelog>.  While we do our best to avoid <https://developers.HubSpot.com/docs/breaking-change-definition|breaking changes> to our APIs, sometimes for security, and reliability we have to. The Changelog is where we’ll post announcements ahead of time about it. <https://developers.HubSpot.com/changelog|Subscribe to the Developer Changelog> to stay up-to-date on what’s happening in the world of HubSpot development."
  },
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "connorwbarley"
    },
    "time_stamp": "2021-08-09 15:40:35",
    "edited": {
      "time_stamp": "2021-08-09 15:41:46"
    },
    "text": "Hey Team! Just wanted to check to see if anything had changed for the `onFormSubmit` callback for forms. I feel like this used to work but not sure:\n\n```hbspt.forms.create({\n\tregion: \"na1\",\n\tportalId: \"3430672\",\n\tformId: \"redacted\",\n        onFormSubmit: function($form) {\n          var firstname = $(\"input[name='firstname']\").value;\n          console.log(firstname);\n        } \n});```\nJust trying to grab the fields from the form when the form's submitted. `$(\"input[name='firstname']\").val()`  returned undefined for some reason even when the for was yet to be submitted but was filled out.\n\nIs there perhaps an object that gets returned upon submission that i could use instead of relying on DOM elements?\n\nAlso lmk if i should post this in <#CBA9UA4EN|javascript> or somewhere else",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-08-09 16:22:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "connorwbarley"
    },
    "time_stamp": "2021-08-09 16:22:14",
    "edited": {
      "time_stamp": "2021-08-09 16:22:39"
    },
    "text": "nvm! I just used the global object:\n\n```&lt;script&gt;\n  window.addEventListener('message', event =&gt; {\n    if(event.data.type === 'hsFormCallback' &amp;&amp; event.data.eventName === 'onFormSubmit') {\n      var submissionObj = {};\n      var inputFields = event.data.data;\n      inputFields.forEach(item =&gt; {\n        submissionObj[item[\"name\"]] = item['value'];\n      });\n\n      var firstname = submissionObj.firstname;\n      var lastname = submissionObj.lastname;\n      var email = submissionObj.email;\n      var message = submissionObj[\"0-2/description\"];\n\n      _learnq.push([\"identify\", {\n        \"$email\": email,\n        \"$first_name\": firstname,\n        \"$last_name\": lastname\n      }]);\n      \n\t  _learnq.push([\"track\", \"Submitted Custom Order Form\", {\n        \"Details\": message\n      }]);\n    }\n  });\n&lt;/script&gt;e```"
  },
  {
    "poster": {
      "poster_name": "Ryan Barone",
      "poster_handle": "ryan928"
    },
    "time_stamp": "2021-08-09 18:09:55",
    "edited": {
      "time_stamp": "2021-08-10 20:25:12"
    },
    "text": "Hi team,\n\nWhen first setting up, we were trying to sync date fields between Intercom and HubSpot, as first subscription date is an integral part of our sales flow.\n\nSomeone on the HubSpot team (won’t name for privacy purposes) was very helpful and got this syncing perfectly.\n\nThis is what we were instructed to do:\n&gt; “For each date field in intercom that we want to map we need to use API and the following script to create a HubSpot field that Intercom will sync with”\n&gt; “related help article: <https://legacydocs.HubSpot.com/docs/methods/contacts/v2/create_contacts_property>”\n```// Change top 3 lines\n{\n  \"name\": \"internal property name\",   \n  \"label\": \"property name\",\n  \"description\": \"property description\",\n  \"groupName\": \"contactinformation\",\n  \"type\": \"datetime\",\n  \"fieldType\": \"date\",\n  \"formField\": true\n}```\nThe dates were syncing between Intercom and HubSpot perfectly from March until sometime in July. Sometime in July, they stopped syncing.\n\nI checked the “Field Mappings” tab under Integrations &gt; Intercom &gt; Field Mappings, and the fields still show there, checked as (should be) syncing, and “sync is ON”.\n\nHowever, the date fields still are no longer syncing.\n\nIntercom has a value for the field, but HubSpot has no value for the field.\n\nCan someone assist in figuring out why the date fields are not syncing and how we can get them to sync between Intercom and HubSpot again?",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-08-10 16:51:30"
      },
      {
        "time_stamp": "2021-08-10 20:23:48"
      },
      {
        "time_stamp": "2021-08-10 20:25:05"
      },
      {
        "time_stamp": "2021-08-10 20:38:58"
      },
      {
        "time_stamp": "2021-08-25 00:26:19"
      },
      {
        "time_stamp": "2021-08-25 10:54:09"
      },
      {
        "time_stamp": "2021-08-25 10:56:58"
      },
      {
        "time_stamp": "2021-08-25 10:58:46"
      }
    ]
  }
]
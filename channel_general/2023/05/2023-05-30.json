[
  {
    "poster": {
      "poster_name": "Rob Harris",
      "poster_handle": "robh"
    },
    "time_stamp": "2023-05-30 05:51:53",
    "text": "You can create developer accounts that have access to everything and are needed for the practicums for the certifications.\n\nAll certs can be found here - <https://academy.HubSpot.com/>"
  },
  {
    "poster": {
      "poster_name": "Bo Høirup Pedersen",
      "poster_handle": "bohoirup"
    },
    "time_stamp": "2023-05-30 07:01:14",
    "text": "Hi, anyone know which public IP HubSpot is coming from? I need to open for HubSpot webhooks through my firewall, but only HubSpot (nothing else)."
  },
  {
    "subtype": "bot_message",
    "text": ":orange_heart:*Please take a moment to review our Code of Conduct*:orange_heart:\n\nWe want the HubSpot Developer community to be inclusive and welcoming. By following our Code of Conduct, you can help ensure that's the case.\n\nTL;DR:\n• Be respectful\n• Be inclusive (try not to say, \"Hey guys, hey boys, hey [any specific group]\")\n• No self promotion, except for <#C0121KGC6RM|showcase> and <#CBNDYJJAZ|jobs> \n• No unsolicited DMs\nRead the <https://developers.HubSpot.com/slack/code-of-conduct|whole thing here> - and thanks for being a part of the HubSpot Developer Community!\n\nWant to report.a violation? DM <@UQNEXHW14> or fill out the <https://form.asana.com/?k=p7aM0fpd3G4JGETDL_nYXg&amp;d=8587152060687|anonymous form here>.",
    "username": "Code of Conduct Reminder",
    "time_stamp": "2023-05-30 08:00:20",
    "edited": {
      "time_stamp": "2023-05-30 08:00:25"
    }
  },
  {
    "poster": {
      "poster_name": "Rafael",
      "poster_handle": "tauler"
    },
    "time_stamp": "2023-05-30 08:33:53",
    "text": "Hi team, I need help with the following, when a user logged in my app, I need to identify him when  he use the widget, from the backend I consume an endpoint to get token, this token is generated correctly, but what I am having problems is to identify this visitor, I always get an unknown visitor in the HubSpot inbox, this is mi code :                                                                                                              &lt;script type=\"text/javascript\"&gt;\n``` axios.get('/create-HubSpot-contact')\n    .then(function (response) {\n                            \n        window.hsConversationsSettings = {\n             loadImmediately: false,\n             identificationEmail: &lt;?php echo json_encode(auth()-&gt;user()-&gt;email); ?&gt;,\n             identificationToken: response.data.token,\n        }; \n                            \n        if(window.HubSpotConversations) {\n\n           window.HubSpotConversations.widget.load();\n       }                         \n                                   \n    })\n     .catch(function (error) {\n            console.log(error);\n      });                    \n       \n&lt;/script&gt;```\n"
  },
  {
    "poster": {
      "poster_name": "Anthony Dang",
      "poster_handle": "anthonydotnet"
    },
    "time_stamp": "2023-05-30 08:45:04",
    "text": "I’m a noob to HubSpot CMS, and would like to know if there are some automation options for some specific cases. I cannot find what I need in the docs. I might not have looked in the right place :/\n\n1. We have a Policies “main page”, with 50 policy child-pages. Can I automatically render a-tags for them? Any way to do it in code or other? I don’t want our editors to manually create a-tags in the parent page every time a child page is created.\n2. I would like to automatically create a website breadcrumb. There are 100's of pages, and I just want them to render a list of parent pages.\n\n3. I want the ability to pull a specific content blocks from another page. That way I do not have to duplicate the content.",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-05-31 03:35:28"
      },
      {
        "time_stamp": "2023-06-01 22:52:18"
      },
      {
        "time_stamp": "2023-06-02 09:04:34"
      },
      {
        "time_stamp": "2023-06-06 04:25:10"
      },
      {
        "time_stamp": "2023-06-13 07:45:46"
      }
    ]
  }
]
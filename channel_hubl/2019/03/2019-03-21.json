[
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2019-03-21 04:48:25",
    "edited": {
      "time_stamp": "2019-03-21 04:50:04"
    },
    "text": "shouldn’t this function be pulling the featured image from a page or post, including landing pages? ```page_by_id(item.select_page_or_blog).featured_image``` - is not doing it for the landing page featured image",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-03-21 07:45:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-03-21 07:44:35",
    "text": "I think this belongs here: <https://www.linkedin.com/feed/update/urn:li:activity:6514489929622519808>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-03-21 07:45:12",
    "text": "What do you get if you do `page_by_id(item.select_page_or_blog)|pprint`?"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2019-03-21 11:53:17",
    "text": "Hi guys! Anyone knows any instructions on how to implement the search functionality via code? I found two articles (<https://designers.HubSpot.com/blog/introducing-site-search> and <https://designers.HubSpot.com/blog/adding-a-search-results-page-to-your-HubSpot-hosted-site>) but they both reference the drag and drop editor. Is there a way to do it with Hubl?"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2019-03-21 13:15:40",
    "text": "Where did this conversation start?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-03-21 13:17:32",
    "text": "I can't remember the exact Channel but I know Jon had mentioned this being an issue. Looks to be with using the drag and drop blog builder and the blog content module specifically"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-03-21 13:18:59",
    "text": "Could have been here <https://HubSpotdev.slack.com/archives/C26E7JT8V/p1552937596104100> but not sure if it came up anywhere else."
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2019-03-21 13:21:33",
    "text": "bump the upvote button if you’re running into problems because of this change. Also sharing your use-case scenarios helps the HS devs understand why it’s important."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-21 13:39:15",
    "text": "<@U7UBMQMDK> the conversation is still continuing"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:20:01",
    "text": "Is there a way to print blog posts in reverse order, without using the reverse tag. I'm having issues with `{% for content in rec_posts|reverse %}` posts are out of order. Someone had another solution earlier but I can't seem to find it."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-21 14:21:06",
    "text": "yep look look up `|sort` in the hubl filters"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:27:15",
    "text": "{% set rec_posts = blog_recent_topic_posts('7249483386', 'event', 5) %}\n{% for content in rec_posts|reverse %}"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:27:48",
    "text": "becomes:\n{% set rec_posts = blog_recent_topic_posts('7249483386', 'event', 5) %}\n{% for item in rec_posts|sort(False, False, 'name') %}"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:27:50",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-21 14:28:55",
    "text": "something close to that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-21 14:28:58",
    "text": "yea"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-21 14:29:42",
    "text": "publish_date"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:30:22",
    "text": "where does that go"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-21 14:30:36",
    "text": "in place of name"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:51:55",
    "text": "Essentially have an issue where my events are published through an event blog and the posts get displayed in reverse order because 99% of the time the oldest post will be the most current event. Though in the instance an event is added late it jumbles the whole list up. Not sure that there is any other work around for this than changing the publish date of the post"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:52:18",
    "text": "Can you sort with a custom filter, other than \"publish_date\""
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-21 14:54:48",
    "text": "the work around is not easy"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-21 14:55:36",
    "text": "basically you have to have a field for the date of the event, and you sort by that date. seeing as you can’t put HubL tags in the blog content module anymore it got a little harder too"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:57:13",
    "text": "I acquire the event date within the post itself through `{{ module.start_time|datetimeformat('%b. %d, %I:%M %p')  }}`"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-03-21 14:57:26",
    "text": "just not sure if i can utilize this data when it comes time to sort the posts"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-21 14:58:50",
    "text": "unfortunately not. Only system default fields."
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2019-03-21 15:41:52",
    "text": "Oh yea, this will be an issue for us too."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-21 15:50:37",
    "text": "I think the greatest  question is - this functionality already worked and from us dev’s perspective it didn’t cause any issues. So what is the logical reason to stop allowing it?"
  },
  {
    "poster": {
      "poster_name": "Marko",
      "poster_handle": "marko"
    },
    "time_stamp": "2019-03-21 19:38:00",
    "edited": {
      "time_stamp": "2019-03-21 20:06:28"
    },
    "text": "is there any way to use `selectattr` with a bool field? specifically for both `truthy` and `!truthy` values"
  },
  {
    "poster": {
      "poster_name": "Marko",
      "poster_handle": "marko"
    },
    "time_stamp": "2019-03-21 19:51:13",
    "edited": {
      "time_stamp": "2019-03-21 19:51:21"
    },
    "text": "this is trying to implement the method noted in this page as the way to use a table multiple times in the same component: <https://designers.HubSpot.com/docs/tools/hubdb>"
  },
  {
    "poster": {
      "poster_name": "Marko",
      "poster_handle": "marko"
    },
    "time_stamp": "2019-03-21 20:56:11",
    "text": "`tableRows|selectattr('&lt;checkbox field&gt;', 'equalto', 1)` (or use `0` for false)"
  }
]
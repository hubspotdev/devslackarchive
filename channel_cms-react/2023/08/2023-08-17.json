[
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-17 08:50:29",
    "text": "Hi all - as of `cms-components` and `cms-dev-server` version 0.8.0 that was just released, we now offer built-in support for `styled-components` and `styled-jsx` CSS-in-JS styling for your components. Check out the <https://github.com/HubSpot/cms-js-building-block-examples/blob/main/docs/reference.md#styling|styling section of our docs> for more info on how to set up those libraries to include styles in the server response. Please let us know if you have any questions or run into any issues!"
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2023-08-17 09:34:31",
    "text": "Hey,\n\nIs it possible to make changes to the vite.config.js?\n Example:\n```css: {\n  preprocessorOptions: {\n    scss: {\n      additionalData: `@import \"./assets/global.scss\";`\n    }\n  }\n},\n\n```\n\nMain problem is i want to use global sass variables across components scss",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-17 09:52:10"
      },
      {
        "time_stamp": "2023-08-17 09:52:44"
      },
      {
        "time_stamp": "2023-08-17 09:52:49"
      },
      {
        "time_stamp": "2023-08-17 09:53:08"
      },
      {
        "time_stamp": "2023-08-17 09:53:27"
      },
      {
        "time_stamp": "2023-08-17 09:54:28"
      },
      {
        "time_stamp": "2023-08-17 09:56:52"
      },
      {
        "time_stamp": "2023-08-17 10:03:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-17 09:52:10",
    "text": "Hello Erik -\n\nCurrently we don't support users customizing the Vite config.\n\nOut of curiosity, the intention here is that all `scss` files would then have access to whatever variables are present in `global.scss` ?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-17 09:52:44",
    "text": "This is instead of say a component level `scss` files importing from `global.scss` directly?"
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2023-08-17 09:52:49",
    "text": "Yea"
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2023-08-17 09:53:08",
    "text": "To avoid having to include everything everywherwâ€¦"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-17 09:53:27",
    "text": "I understand, certainly a useful tool."
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2023-08-17 09:54:28",
    "text": "An alternative would be the ability to output a css-file from thw global scss and just import the other sass files there"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-17 09:55:48",
    "text": "Hello Janne - unfortunately there is not a way in the JS Building Block context to do this. I can't promise anything on timing, however we do wan to support CTAs fully in the future."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-17 09:56:52",
    "text": "I will look into allowing use defined Vite options for this specifically, but can't promise anything yet."
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2023-08-17 10:03:52",
    "text": "Great, thanks "
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-17 17:40:08",
    "edited": {
      "time_stamp": "2023-08-17 17:53:50"
    },
    "text": "Hey HS team, what's your recommendation for sharing CSS across hubl theme and app?\n\n*Context:* We're currently evaluating css modules &amp; styledcomponents &amp; styledjsx - I feel we'll need to have some global styles and css variables available to all modules (likely to storybook too). Given the nature of the hybrid hubl/react - any thoughts on this? Is <https://github.com/HubSpot/cms-js-building-block-examples/tree/d475e3fd415f612e5d6641584aadfb16a8a5b6c5/styling|this> the current recommendation?",
    "reply_count": 17,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-08-17 17:40:18"
      },
      {
        "time_stamp": "2023-08-17 17:55:28"
      },
      {
        "time_stamp": "2023-08-17 17:56:00"
      },
      {
        "time_stamp": "2023-08-17 17:56:07"
      },
      {
        "time_stamp": "2023-08-18 06:42:01"
      },
      {
        "time_stamp": "2023-08-18 09:11:54"
      },
      {
        "time_stamp": "2023-08-18 09:13:34"
      },
      {
        "time_stamp": "2023-08-18 09:13:52"
      },
      {
        "time_stamp": "2023-08-18 09:14:41"
      },
      {
        "time_stamp": "2023-08-18 09:15:26"
      },
      {
        "time_stamp": "2023-08-18 09:15:38"
      },
      {
        "time_stamp": "2023-08-18 09:17:47"
      },
      {
        "time_stamp": "2023-08-18 09:18:18"
      },
      {
        "time_stamp": "2023-08-18 09:18:59"
      },
      {
        "time_stamp": "2023-08-18 09:20:20"
      },
      {
        "time_stamp": "2023-08-18 09:20:56"
      },
      {
        "time_stamp": "2023-08-18 12:58:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-17 17:40:18",
    "text": "If we go w/ CSS-in-JS, would we be able to benefit fully from a ThemeProvider since it's not an SPA tree?"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-17 17:55:28",
    "text": "Oh, there's styledcompoents and stylejsx examples! I didn't drill deep enough :flushed:"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-17 17:56:00",
    "text": "no worries they are hours old!"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-17 17:56:07",
    "text": "will add more thoughts here tomorrow"
  }
]
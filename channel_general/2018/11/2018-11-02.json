[
  null,
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-11-02 06:32:11",
    "text": "I have created a few support tickets on this issue and nothing ever gets solved. I have completely given up on this because have a feeling hs wants us to use their native video solutions anyways.\n\nI have wrapped the Wistia code in a div with a class and worked around it that way"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-11-02 08:52:14",
    "text": "<@U26BPJGS0> slack me if this still issue and I can fix it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:00:07",
    "text": "do i need to be writing validation rules for file uploads on HubSpot forms or do the wizards deal with that up in the clouds?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-06 09:43:44"
      },
      {
        "time_stamp": "2018-11-06 09:45:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:29:18",
    "text": "tough crowd"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-02 09:29:36",
    "text": "boooooo"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-02 09:30:05",
    "text": "Just kidding I have no idea!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 09:30:36",
    "text": "To answer your question I think they handle testing if it’s a valid or safe file name for hosting on HS, beyond that if you want special formatting of that name you probably need to specify"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:33:38",
    "text": "cool"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:33:47",
    "text": "and thanks"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:33:58",
    "text": "exit ---&gt; stage right"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-02 09:35:28",
    "text": "I read that in Snagglepuss’ voice"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:35:41",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:35:47",
    "text": "glad someone remembers"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-02 09:36:41",
    "text": "Heavens to Murgatroyd !"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:36:49",
    "text": "ha"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:36:55",
    "text": "thank you!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 09:37:12",
    "text": "the kids these days dont know a good cartoon character"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-11-02 09:41:08",
    "text": "We need a Snagglepuss emoji, so that he may live on in our hearts for time immemorial."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 10:25:07",
    "text": "when you submit a form on HS and redirect to a URL a submission guid is added to the URL. What is this id exactly?\n\nI need to validate if the ID is valid versus someone randomly entering characters after submissionGuid"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 10:25:37",
    "edited": {
      "time_stamp": "2018-11-02 10:45:53"
    },
    "text": "I thought it was the id of the form submitted but it’s not. it appears to be unique each time a form is submitted. So *I’m assuming it’s an id unique to the user’s submission.* That said if that’s true, *how would I get a list of all of the submission ID’s for a form?* If I have that I could check if the item is in that list",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-02 12:41:29"
      },
      {
        "time_stamp": "2018-11-02 12:41:57"
      },
      {
        "time_stamp": "2018-11-02 12:42:41"
      },
      {
        "time_stamp": "2018-11-02 12:51:40"
      },
      {
        "time_stamp": "2018-11-02 12:52:59"
      },
      {
        "time_stamp": "2018-11-02 13:00:43"
      },
      {
        "time_stamp": "2018-11-02 13:04:11"
      },
      {
        "time_stamp": "2018-11-02 13:05:14"
      },
      {
        "time_stamp": "2018-11-02 13:05:17"
      },
      {
        "time_stamp": "2018-11-02 13:05:34"
      }
    ]
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-02 12:41:29",
    "edited": {
      "time_stamp": "2018-11-02 12:51:21"
    },
    "text": "Hey <@U7SL518D6>, it refers to the id of the conversion event, in this case the id tied to that specific submission. There’s no public way to fetch data based on that ID, nor a way to see an aggregation of all conversion events (~I don’t believe-- I can double check on that~ confirmed there is no public API for fetching form submission data). You _could_ however fetch recently updated contacts via <https://developers.HubSpot.com/docs/methods/contacts/get_recently_updated_contacts>"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-02 12:41:57",
    "text": "which should list that ID in `form-submissions: []`"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-02 12:42:41",
    "text": "There might be some useful threads on the API forum, for what it’s worth: <https://integrate.HubSpot.com/t/getting-submissionguid-data/7324>"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 12:51:40",
    "text": "thanks for the info, that might do the trick.\n\nJust to kinda give you guys an understanding to why I’m even doing this - I have a client, they have a resource gallery, they want it so they can have pages with a form, when you submit the form you are taken to the resource gallery.\n\nThe resource gallery needs to check whether the user filled out that form or not.  The contact being added to a list takes longer than the form’s redirect so by the time it gets to the page the user doesn’t have the contact record yet."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 12:52:59",
    "edited": {
      "time_stamp": "2018-11-02 12:53:17"
    },
    "text": "SO, I’m testing if they have submission guid in the url so I know they came from a form, ideally I want to make sure that submission was real.\n\nI feel like there should be a way for HS to actually resolve this issue in a way. - for example if the redirect URL is to a HS page the form submission data could be accessible to the page. (that’s if the contact record can’t just be set faster)"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-02 13:00:43",
    "edited": {
      "time_stamp": "2018-11-02 13:01:04"
    },
    "text": "Yeah the race for contact / list membership update has been a long-fought thing to work around. I don’t think it would hurt to poke around / possibly post a question to the API community forum. It’s been a minute since I’ve worked with either the forms / contacts API, so there might be some interesting workaround out there (especially since this is a pretty common want that other devs are trying to solve)"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-02 13:04:11",
    "edited": {
      "time_stamp": "2018-11-02 13:04:17"
    },
    "text": "A workaround I’ve seen people do in the past is pass the submitted form data into the redirect url using pure JS to account for the contact update delay <https://integrate.HubSpot.com/t/include-form-fields-as-redirect-url-parameters-on-an-embedded-form/3545/2>"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-02 13:05:14",
    "text": "Going that route, the global events are useful <https://developers.HubSpot.com/global-form-events>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 13:05:17",
    "text": "yea have considered doing that, as well as a cookie method. Appreciate all the ideas"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-11-02 13:05:34",
    "text": ":thumbsup: sure thing!"
  },
  null,
  {
    "text": "I'm sure this has been asked before, but I couldn't find anything in search. Is there anyway to speed up clearing out the cache when updating templates?\nI'm making updates in Design Tools and sometimes I refresh the page and see updates right way. Most of the time though I save and publish the template and it's just a guess if I get the new template or not.\nFor example this screenshot shows one page in a standard chrome window using the old version of the template, then incognito shows a newer version, neither though show the newest version.\nIs there any tricks to keeping HubSpot from caching the template while I'm working on it?",
    "time_stamp": "2018-11-02 13:32:59",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-02 14:15:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-11-02 13:34:15",
    "text": "You could try adding this to the end of your url: ?cacheBuster=5539"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-11-02 13:34:35",
    "text": "Are you using the HubSpot developer chrome extension?",
    "reply_count": 9,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2018-11-02 13:35:53"
      },
      {
        "time_stamp": "2018-11-02 13:37:46"
      },
      {
        "time_stamp": "2018-11-02 13:39:24"
      },
      {
        "time_stamp": "2018-11-02 13:39:42"
      },
      {
        "time_stamp": "2018-11-02 13:41:27"
      },
      {
        "time_stamp": "2018-11-02 13:42:45"
      },
      {
        "time_stamp": "2018-11-02 13:43:21"
      },
      {
        "time_stamp": "2018-11-02 14:38:26"
      },
      {
        "time_stamp": "2018-11-02 14:40:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 13:35:53",
    "text": "<https://spin.d.pr/D2LmWX>"
  },
  {
    "poster": {
      "poster_name": "Andy Mc",
      "poster_handle": "andy"
    },
    "time_stamp": "2018-11-02 13:37:46",
    "text": "perfect-o. thanks.  I didn't have the extension before, but seems like it's going to become my best friend"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 13:39:24",
    "edited": {
      "time_stamp": "2018-11-02 13:41:07"
    },
    "text": "if you end up having any questions on the extension or are interested in contributing down the road we have a slack channel for it: <#CBBAW6Z3R|community-browser-extension> and there’s a github link in the slack channel’s topic"
  },
  {
    "poster": {
      "poster_name": "Andy Mc",
      "poster_handle": "andy"
    },
    "time_stamp": "2018-11-02 13:39:42",
    "text": "ah sweet. thanks!"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2018-11-02 13:41:27",
    "text": "thanks for this <@U54TVT3C1>!"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-11-02 13:42:45",
    "text": "Thanks go to <@U7SL518D6> <@U7ADCU3BM> <@U6W3H6YN8>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 13:43:21",
    "text": "<@U7ADCU3BM> needs an emoticon"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-02 14:15:00",
    "text": "url?v=1 then just count up to bust the cache"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:25:06",
    "edited": {
      "time_stamp": "2018-11-02 14:27:02"
    },
    "text": "it appears that forms are no longer editable in post templates.. *am I missing something from this hubl that is now required to make it editable in the post editor?*\n`{% form \"Contact Form\", title='Contact', overrideable=true%}`\n\nI know this is was possible in the past because I had to do it a lot.\n\nI’m coming close to creating a dummy custom module to just have a form field in it to pull this off, there’s gotta be a better way."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:30:12",
    "text": "really?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:30:53",
    "text": "that was a useless response"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:30:55",
    "text": "Thats what it seems like."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:30:58",
    "text": "i am trying it out"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:31:07",
    "text": "my response.  not yours :)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:31:24",
    "text": "my response lol was to the “really?”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:33:01",
    "text": "I have a good feeling the custom module route is going to work it just feels icky doing that because this used to work, and is the more correct way to do it."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:34:11",
    "text": "by editable, you mean selecting a form when creating a post, right?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:34:36",
    "text": "correct, you should be able to select the form and see those fields like “redirect or thank you message”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:34:58",
    "text": "what I’m seeing is the form is showing in the post but you can’t change anything about it."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:35:17",
    "text": "i just added to a a dummy blog "
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:35:21",
    "text": "and it works as expected"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:35:48",
    "text": "can you paste your form code?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:35:52",
    "text": "ha"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:35:55",
    "text": "just wondering if I’m forgetting something obvious"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:35:56",
    "text": "i pasted yours"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:36:00",
    "text": "ah"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:36:02",
    "edited": {
      "time_stamp": "2018-11-02 14:36:11"
    },
    "text": "well wtfriday"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:36:20",
    "text": "i pay more money to HubSpot than you do"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:36:26",
    "text": "hahaha"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:37:22",
    "text": "i got nothing"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:38:17",
    "text": "think I’m gonna have to contact support"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-11-02 14:38:26",
    "text": ":joy:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:38:28",
    "text": "best of luck"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:38:35",
    "text": "happy friday"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 14:38:39",
    "text": "You too"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-11-02 14:40:09",
    "text": ":thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-11-02 16:39:40",
    "text": "html email question.\nUsing the &lt;style … id=“hs-inline-css”&gt; trick from <https://designers.HubSpot.com/docs/cos/email-template-markup>\n\nI have custom css styles inside that style tag and I want those styles to be inlined for HTML I am storing in a  contact property which is being merged into the email.\n\nHowever, the inliner doesn’t seem to be working for property values that are merged into the email."
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-11-02 16:39:46",
    "text": "has anyone else seen that?"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-11-02 16:40:19",
    "text": "this is a coded email template"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-11-02 17:44:03",
    "text": "I don't think you're going to be able to use contact properties in that way."
  }
]
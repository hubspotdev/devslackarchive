[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 09:46:47",
    "text": "<https://developers.HubSpot.com/docs/api/events/cookie-banner>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 09:46:51",
    "text": "yes you can"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 09:47:46",
    "text": "YO! Is there a listener for the cookie consent banner? Im not seeing a method in here for it",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-02-24 09:51:50"
      },
      {
        "time_stamp": "2023-02-24 09:53:08"
      },
      {
        "time_stamp": "2023-02-24 10:39:49"
      },
      {
        "time_stamp": "2023-02-24 14:57:26"
      },
      {
        "time_stamp": "2023-02-24 14:57:49"
      },
      {
        "time_stamp": "2023-02-24 15:00:43"
      },
      {
        "time_stamp": "2023-02-27 07:29:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-02-24 09:51:50",
    "text": "Yes, take a look <https://developers.HubSpot.com/docs/api/events/cookie-banner|here>, there's a listener you can add that triggers when consent changes"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 09:53:08",
    "text": "yeah, I’ve been all over this page — I want to know when it pops up, and was hoping for something HS provides instead of writing a script for it"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2023-02-24 10:39:49",
    "text": "i dont' think there is.... I think you're best bet is to use a MutationObserver\n\n\n```new MutationObserver((mutationsList) =&gt; {\n  mutationsList.forEach((mutation) =&gt; {\n    mutation.addedNodes.forEach((node) =&gt; {\n      if (node.id === 'hs-banner-parent') {\n        console.log('banner added');\n      }\n    });\n  });\n}).observe(document.querySelector('body'), { childList: true, subtree: true });```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 14:57:26",
    "text": "ya i ended up just triggering on window load. i might miss out but the pages load pretty fast. "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 14:57:49",
    "text": "i wrote some code with mutation observer and was messing with promises and i made it so overly complicated "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-02-24 15:00:43",
    "text": "and if you want to know why I was workign on this: <https://deckerdevs.com/home-2023>"
  }
]
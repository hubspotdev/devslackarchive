[
  {
    "poster": {
      "poster_name": "Jhon",
      "poster_handle": "michael.bolima"
    },
    "time_stamp": "2023-07-19 08:28:55",
    "text": "great help. thanks!"
  },
  {
    "text": "To debug the issue with `<http://hslocal.net|hslocal.net>` what happens if you run the `dig` and/or `nslookup` commands in the terminal of your machine?",
    "time_stamp": "2023-07-19 08:36:39"
  },
  {
    "poster": {
      "poster_name": "Stephen Brown",
      "poster_handle": "brownstephen202"
    },
    "time_stamp": "2023-07-19 09:40:32",
    "text": "C:\\Users\\Brownstephen101\\Documents\\01. Vena\\react-test\\cms-js-building-block-examples\\hello-world&gt;dig <http://hslocal.net|hslocal.net>\n'dig' is not recognized as an internal or external command,\noperable program or batch file.\n\nC:\\Users\\Brownstephen101\\Documents\\01. Vena\\react-test\\cms-js-building-block-examples\\hello-world&gt;nslookup <http://hslocal.net|hslocal.net>\nDNS request timed out.\n    timeout was 2 seconds.\nServer:  UnKnown\nAddress:  ::1\n\nDNS request timed out.\n    timeout was 2 seconds.\nDNS request timed out.\n    timeout was 2 seconds.\nDNS request timed out.\n    timeout was 2 seconds.\n^C"
  },
  {
    "poster": {
      "poster_name": "Elena Hearty",
      "poster_handle": "elena.hearty"
    },
    "time_stamp": "2023-07-19 10:33:11",
    "text": "Hey there, I’m *loving* this beta so far, but I did notice that the FontFieldType that I’ve added to my module doesn’t seem to load external fonts no matter what I do. Is there a working example anywhere that I might be able to look at?",
    "reply_count": 8,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-07-19 11:54:50"
      },
      {
        "time_stamp": "2023-07-20 11:10:12"
      },
      {
        "time_stamp": "2023-07-20 11:36:15"
      },
      {
        "time_stamp": "2023-07-20 11:38:09"
      },
      {
        "time_stamp": "2023-07-20 11:57:13"
      },
      {
        "time_stamp": "2023-07-20 11:58:20"
      },
      {
        "time_stamp": "2023-07-20 12:03:19"
      },
      {
        "time_stamp": "2023-07-20 12:09:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-19 11:52:57",
    "text": "<@U04DLJH3W94> I'm testing now(ish) but it looks like it breaks hover animations for me...maybe?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-19 11:53:03",
    "text": "do I need to update the CLI or version of anything?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-19 11:54:50",
    "text": "on a related note, what is the recommended way to load external/file-based fonts when using js-rendering?"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2023-07-19 13:52:59",
    "text": "Shouldn't need a CLI update no, and it shouldn't affect things like hover animations, are you still seeing that issue with the original project?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-19 13:55:39",
    "text": "the hover works on the \"live\" version but not on the proxied version"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-07-19 13:55:48",
    "text": "I'll message you the site"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2023-07-19 14:00:18",
    "text": "Do you see any failed CSS requests etc while proxying?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-07-19 14:00:59",
    "text": "It could be something like CSS files showing up in a different order in the HTML in the proxy vs live request"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-07-19 14:01:27",
    "edited": {
      "time_stamp": "2023-07-19 14:01:34"
    },
    "text": "(we should avoid/prevent that, but it wouldn’t surprise me if we had an issue like that right now)"
  },
  {
    "text": "Huh, that is weird. I’m no DNS expert but my best guess is that some custom DNS setup on your machine (and/or company network/firewall thing?) is not resolving <http://hslocal.net|hslocal.net>. We’ve registered that domain and made it point to 127.0.0.1 (localhost) but your dig command shows that your machine is not getting that resolution.\n\nAnd I assume you could go to a page like <https://mxtoolbox.com/DNSLookup.aspx> and see that other servers can resolve <http://hslocal.net|hslocal.net> -&gt; 127.0.0.1.\n\nAt this point you probably can always use localhost:3000 and not worry about <http://hslocal.net|hslocal.net>. However, I’m curious if this could be a problem with the way we’ve setup DNS records for <http://hslocal.net|hslocal.net>, if there is a common(ish) company/firewall setup that doesn’t work with <http://hslocal.net|hslocal.net>, or if this is more of a one-off kind of problem. So if you have an IT person with your company to talk to and have a chance, asking them if they know why <http://hslocal.net|hslocal.net> doesn’t work for you (and how to fix it?) would be helpful :pray:",
    "time_stamp": "2023-07-19 14:15:18"
  },
  {
    "poster": {
      "poster_name": "Stephen Brown",
      "poster_handle": "brownstephen202"
    },
    "time_stamp": "2023-07-19 15:05:11",
    "text": "How would I go about adding repeater groups to the fields.jsx file. For example, if I had this code, which is 3 different fieldgroups with identical content, but I wanted to make it a repeater with a default of 3 instances instead of 3 different groups. I tried looking for it in the documentation but I don't see it.\n\n```import React from 'react';\nimport {\n  FieldGroup,\n  ModuleFields,\n  TextField,\n  ColorField,\n  RichTextField,\n} from '@HubSpot/cms-components/fields';\n\nexport const fields = (\n  &lt;ModuleFields&gt;\n    &lt;FieldGroup name=\"group_1\" label=\"Page 1\" expanded={false}&gt;\n      &lt;TextField\n        label=\"Title\"\n        name=\"title\"\n        default=\"Page 1\"\n        required\n      /&gt;\n      &lt;RichTextField\n        label=\"Content\"\n        name=\"content\"\n        default=\"Page 1 Content. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n        required\n      /&gt;\n    &lt;/FieldGroup&gt;\n    &lt;FieldGroup name=\"group_2\" label=\"Page 2\" expanded={false}&gt;\n      &lt;TextField\n        label=\"Title 2\"\n        name=\"title\"\n        default=\"Page 2\"\n        required\n      /&gt;\n      &lt;RichTextField\n        label=\"Content\"\n        name=\"content\"\n        default=\"Page 2 Content. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n        required\n      /&gt;\n    &lt;/FieldGroup&gt;\n    &lt;FieldGroup name=\"group_3\" label=\"Page 3\" expanded={false}&gt;\n      &lt;TextField\n        label=\"Title 3\"\n        name=\"title\"\n        default=\"Page 3\"\n        required\n      /&gt;\n      &lt;RichTextField\n        label=\"Content\"\n        name=\"content\"\n        default=\"Page 3 Content. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n        required\n      /&gt;\n    &lt;/FieldGroup&gt;\n    &lt;ColorField\n      label=\"Active Tab Color\"\n      name=\"active_tab_color\"\n      default={{ color: '#F7761F' }}\n    /&gt;\n  &lt;/ModuleFields&gt;\n);```",
    "reply_count": 9,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-07-20 06:31:15"
      },
      {
        "time_stamp": "2023-07-20 09:11:05"
      },
      {
        "time_stamp": "2023-07-20 10:12:32"
      },
      {
        "time_stamp": "2023-07-20 11:20:00"
      },
      {
        "time_stamp": "2023-07-20 11:21:54"
      },
      {
        "time_stamp": "2023-07-20 11:48:14"
      },
      {
        "time_stamp": "2023-07-20 11:52:22"
      },
      {
        "time_stamp": "2023-10-02 06:03:41"
      },
      {
        "time_stamp": "2023-10-02 07:07:24"
      }
    ]
  }
]
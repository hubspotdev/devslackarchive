[
  {
    "poster": {
      "poster_name": "Sylvain Tirreau",
      "poster_handle": "sylvain402"
    },
    "time_stamp": "2023-06-09 02:09:01",
    "edited": {
      "time_stamp": "2023-06-09 02:12:18"
    },
    "text": "Hello,\n\nIn my main template I've defined a macro (in a partial file):\n\n```{% macro get_foo(bar) %}\n   Foo...\n{% endmacro %}```\nI've defined a module I insert in my template with `{%module \"foo_usage\"...` \n\nIn my module, I did this:\n\n`{{ get_foo(module.bar) }}`\n\nIt should works, but I've an error ``Could not resolve function 'get_foo'`.\n\nBut I don't think it's a real error: in the template scope, this macro should be available. We can see it if we use a variable instead of a macro.\n\nIf I do this in my main template (always with a partial file):\n\n`{% set foo=\"bar\" %}`\n\nI can call this variable in my module and `{{ foo }}` doesn't give me a error in it.\n\nI can bypass this error by defining \"foo\" in a variable instead of a macro, but I have to pass a argument from my module to the macro.\n\nMy questions:\n1. Can we call a macro like we call a variable from module to template; if yes, this error could be removed, no?\n2. If not, how can we pass an argument from a module to an external macro (the idea is to reuse the external macro from several places because the logical of this macro is used in many places)\nThanks a lot.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-06-12 15:44:25"
      }
    ]
  }
]
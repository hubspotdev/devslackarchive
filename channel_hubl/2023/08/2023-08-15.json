[
  {
    "poster": {
      "poster_name": "Jo Bell",
      "poster_handle": "jo.bell"
    },
    "time_stamp": "2023-08-15 04:50:44",
    "text": "*Hello - anyone used datasets before?* ",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-15 04:51:01"
      },
      {
        "time_stamp": "2023-08-15 04:51:20"
      },
      {
        "time_stamp": "2023-08-15 04:51:30"
      },
      {
        "time_stamp": "2023-08-15 04:51:33"
      },
      {
        "time_stamp": "2023-08-15 04:51:55"
      },
      {
        "time_stamp": "2023-08-15 04:52:13"
      },
      {
        "time_stamp": "2023-08-15 10:53:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jo Bell",
      "poster_handle": "jo.bell"
    },
    "time_stamp": "2023-08-15 04:51:01",
    "text": "Trying to calculate age group using IF statement"
  },
  {
    "poster": {
      "poster_name": "Jo Bell",
      "poster_handle": "jo.bell"
    },
    "time_stamp": "2023-08-15 04:51:20",
    "text": "Age is a calc field property based on today's date - DOB"
  },
  {
    "poster": {
      "poster_name": "Jo Bell",
      "poster_handle": "jo.bell"
    },
    "time_stamp": "2023-08-15 04:51:30",
    "text": "and I cannot seem to get the IF statement to actually work"
  },
  {
    "poster": {
      "poster_name": "Jo Bell",
      "poster_handle": "jo.bell"
    },
    "time_stamp": "2023-08-15 04:51:33",
    "text": "any ideas?"
  },
  {
    "poster": {
      "poster_name": "Jo Bell",
      "poster_handle": "jo.bell"
    },
    "time_stamp": "2023-08-15 04:51:55",
    "text": "Get this error: `[missing \"en-gb.reporting-data.durations.years\" translation]`"
  },
  {
    "poster": {
      "poster_name": "Jo Bell",
      "poster_handle": "jo.bell"
    },
    "time_stamp": "2023-08-15 04:52:13",
    "text": "Field formula = `IF([CONTACT.age]&lt;25,\"under 25\", \"other\")`"
  },
  {
    "poster": {
      "poster_name": "Maia Torell",
      "poster_handle": "maia.torell"
    },
    "time_stamp": "2023-08-15 07:01:36",
    "text": "For those of you that has created Mega menus with HubDB. Did you make a way for a user to edit the menu or is the editing strictly possible through code? My concern is that adding items to the table would mess with the styling of the menu as different dropdowns is showing different content. Did you create separate tables for each dropdown?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-08-16 13:57:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kayron Macon",
      "poster_handle": "kayron"
    },
    "time_stamp": "2023-08-15 10:52:44",
    "text": "do || and &amp;&amp; work in hubl? in if statements? trying to write my code as functional as possible",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-08-15 11:39:31"
      },
      {
        "time_stamp": "2023-08-15 11:41:05"
      },
      {
        "time_stamp": "2023-08-15 11:41:29"
      },
      {
        "time_stamp": "2023-08-15 11:48:09"
      },
      {
        "time_stamp": "2023-08-15 11:56:21"
      },
      {
        "time_stamp": "2023-08-15 15:14:47"
      },
      {
        "time_stamp": "2023-08-16 10:05:33"
      },
      {
        "time_stamp": "2023-08-16 10:36:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kayron Macon",
      "poster_handle": "kayron"
    },
    "time_stamp": "2023-08-15 10:53:49",
    "text": "yes im familiar if I saw more code maybe I can help"
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2023-08-15 11:39:31",
    "text": "they do"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-08-15 11:41:05",
    "text": "`{% if car.hs_object_id == products2.results[0].hs_object_id || car.hs_object_id == products2.results[1].hs_object_id %}` would that be a correct way to use them?"
  },
  {
    "poster": {
      "poster_name": "Kayron Macon",
      "poster_handle": "kayron"
    },
    "time_stamp": "2023-08-15 11:41:29",
    "text": "is there a better way to iterate through an array?"
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2023-08-15 11:48:09",
    "text": "yep, that should work. Not sure how you’re iterating, but there aren’t a ton of options with hubl. the map(), attr() and selectattr() filters can be handy, depending on what you’re doing. But the for loops will be the answer more often than not. If you need to assign variables within a loop for use in the outer scope - declaring an object outside of the loop and assigning keys/whatever it is you need within the loop itself is a method that can be used. Which you may already know."
  },
  {
    "poster": {
      "poster_name": "Kayron Macon",
      "poster_handle": "kayron"
    },
    "time_stamp": "2023-08-15 11:56:21",
    "text": "thank you!"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-08-15 15:14:47",
    "text": "Both the `&amp;&amp;` and `||` operators work in HubL, but the “canonical” style for them seems to be to use the English words for them (`and`, `or`, `not`, `is`, etc.) Presumably, this is so they match the format of the expression tests.\n\nIn most cases resembling the sample snipped you’ve given, you’d probably want to use <https://developers.HubSpot.com/docs/cms/hubl/operators-and-expression-tests#containing|the >`containing`<https://developers.HubSpot.com/docs/cms/hubl/operators-and-expression-tests#containing| expression test>, which checks the contents of an array for the specified value. In this case, that’d probably look something like:\n```{% if products2.results is containing car.hs_object_id %}\n   ...\n{% endif %}```\nHowever, since you’re checking against an attribute of a dictionary contained within a list, there’s a somewhat oblique way to accomplish that without excessive manual casing; a `for` loop in combination with <https://developers.HubSpot.com/docs/cms/hubl/filters#selectattr|the >`selectattr`<https://developers.HubSpot.com/docs/cms/hubl/filters#selectattr| filter>:\n```{% for product in products2.results|selectattr(\"hs_object_id\", \"equalto\", car.hs_object_id) %}\n\n  {# \n  This only renders if car.hs_object_id matches an hs_object_id in products2.results. \n\n  This functionally operates as an \"if\" statement when testing for unique values.\n  #}\n\n{% endfor %}```\nIt’s not the most intuitive code, so I’d recommend commenting it if you ever use that particular technique, but it can save you in situations that might otherwise call for lengthy, manual case statements or deeply nested loops."
  }
]
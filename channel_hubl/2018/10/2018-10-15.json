[
  null,
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 08:28:16",
    "text": "I’m sure that I’m being a moron here, but why does `{{ topic }}` work on my topic listing page but `{{ topic.name }}` and `{{ topic.slug }}` do not?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-15 08:45:09"
      },
      {
        "time_stamp": "2018-10-15 08:47:20"
      },
      {
        "time_stamp": "2018-10-15 08:47:49"
      },
      {
        "time_stamp": "2018-10-15 08:49:03"
      },
      {
        "time_stamp": "2018-10-15 08:49:10"
      },
      {
        "time_stamp": "2018-10-15 08:50:58"
      },
      {
        "time_stamp": "2018-10-15 08:51:07"
      },
      {
        "time_stamp": "2018-10-15 08:51:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2018-10-15 08:45:09",
    "text": "can you post the code snippet?"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2018-10-15 08:47:20",
    "text": "The topics should be pulled in a for loop from topic_list - something like this: {% for topic in post.topic_list %}\n                                    \t&lt;a class=\"topic-link\" href=\"{{ group.absolute_url }}/topic/{{ topic.slug }}\"&gt;{%if loop.index &gt; 1 %},{% endif %} {{ topic.name }}&lt;/a&gt;\n                                    {% endfor %}"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2018-10-15 08:47:49",
    "text": "in this instance post is the contents loop"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 08:49:03",
    "text": "So this is just for the topic listing page"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 08:49:10",
    "text": "```                &lt;div class=\"content\"&gt;\n                  &lt;h1&gt;The Delcor Connection&lt;/h1&gt;\n                  {% if topic %}\n                  \t&lt;span&gt;Topic: {{ topic.slug }}&lt;/span&gt;\n                  {% else %}\n                  \t&lt;span&gt;Subheader text for the blog header goes right here. It can drop to a couple of lines as needed.&lt;/span&gt;\n                  {% endif %}\n              \t&lt;/div&gt;```"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 08:50:58",
    "text": "So if you’re click on the link for “topic1” it brings you to this page. The hero has to change it’s title to be the topic."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 08:51:07",
    "text": "`{{ topic }}` works fine"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 08:51:17",
    "text": "except that it pulls the slug instead of the name"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 09:25:48",
    "text": "Figured it out, I just used this which returned the Topic Listing topic name:\n```// If Topic Listin\n{% if topic %}\n\t&lt;span&gt;Topic: {{ page_meta.meta_description }}&lt;/span&gt;\n{% else %}  ```",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-15 09:26:42"
      },
      {
        "time_stamp": "2018-10-15 09:31:24"
      },
      {
        "time_stamp": "2018-10-15 09:31:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2018-10-15 09:26:42",
    "text": "Glad you figured it out, I was just thinking of something similair"
  },
  null,
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 09:31:24",
    "text": "This actually works a little better since a pipe is included in the string that I referenced:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 09:31:26",
    "text": "```&lt;span&gt;Topic: {{ page_meta.html_title|replace('|','') }}&lt;/span&gt;```"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-15 09:59:33",
    "text": "Is there no way to produce a unsubscribe link on a webpage?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-15 10:11:28",
    "text": "You tried dropping this guy on there?:\n`{{ unsubscribe_section }}`\nThat may only work on emails.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-10-15 10:24:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-15 10:24:15",
    "text": "yeah that didnt do anything :confused:"
  },
  null,
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-15 16:00:05",
    "text": "Is there a way to get the ?width query to work on images loaded on your own domain? That looks like it works with images loaded on the cdn, but not your own",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-15 16:01:50"
      },
      {
        "time_stamp": "2018-10-15 16:03:01"
      },
      {
        "time_stamp": "2018-10-15 16:03:26"
      },
      {
        "time_stamp": "2018-10-15 16:16:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-15 16:01:50",
    "edited": {
      "time_stamp": "2018-10-15 16:02:15"
    },
    "text": "are you using the hubl resize image url function? it should generate the appropriate resize url regardless of domain"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-15 16:03:01",
    "text": "I totally didnt know that existed, I feel so dumb"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-15 16:03:26",
    "text": "it's relatively new"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-15 16:16:27",
    "text": "That explains it, thanks!"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Andrew Dolan",
      "poster_handle": "andrew"
    },
    "time_stamp": "2018-10-15 20:16:20",
    "text": "True, and I could use a for loop for all the file types in an array. Thanks :grin:"
  },
  null,
  null,
  null,
  null
]
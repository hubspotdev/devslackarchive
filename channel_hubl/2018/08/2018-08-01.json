[
  {
    "poster": {
      "poster_name": "Zilla Team",
      "poster_handle": "support"
    },
    "time_stamp": "2018-08-01 01:09:13",
    "edited": {
      "time_stamp": "2018-08-01 01:09:36"
    },
    "text": "I have called the image as {{ module.image.src }} , but it seems to be not available outside the module area. I want to use that image outside the module. Is there any way I could use this"
  },
  {
    "poster": {
      "poster_name": "Miteshkumar Padariya",
      "poster_handle": "mitesh"
    },
    "time_stamp": "2018-08-01 01:11:08",
    "text": "Check this: <https://designers.HubSpot.com/docs/hubl/export-to-template-context>"
  },
  {
    "poster": {
      "poster_name": "Zilla Team",
      "poster_handle": "support"
    },
    "time_stamp": "2018-08-01 04:41:14",
    "text": "<@UBZ8C6DTK> thanks for your reply"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-01 08:04:47",
    "text": "Is there a way beyond CSS to hide the `.hs-tools-menu`  Not showing up in a couple of my clients' portals and I can't figure out why",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-08-01 08:08:14"
      },
      {
        "time_stamp": "2018-08-01 08:12:17"
      },
      {
        "time_stamp": "2018-08-01 08:16:03"
      },
      {
        "time_stamp": "2018-08-01 08:16:38"
      },
      {
        "time_stamp": "2018-08-01 08:23:03"
      },
      {
        "time_stamp": "2018-08-01 08:31:31"
      },
      {
        "time_stamp": "2018-08-01 08:32:42"
      },
      {
        "time_stamp": "2018-08-01 08:50:28"
      },
      {
        "time_stamp": "2018-08-01 08:53:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-08-01 08:08:14",
    "edited": {
      "time_stamp": "2018-08-01 08:11:19"
    },
    "text": "Most often JS TypeErrors and undefined functions are the culprit for the tools menu not rendering. If you send an example along, happy to look"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-01 08:12:17",
    "text": "one second"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-01 08:16:03",
    "text": "<http://www.libertystaffing.ca/>"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-01 08:16:38",
    "text": "Only throwing one JS error"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-08-01 08:23:03",
    "text": "Hm weird its something about `HubSpot_default/shared/responsive/theme-foundation-v1-0.min`"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-01 08:31:31",
    "text": "hmm... definitely is.  I commented out the reference to theme foundation and now it's showing up"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-01 08:32:42",
    "text": "Breaks a ton of other stuff, but the menu shows up"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-01 08:50:28",
    "text": "Yeah, usually there is an on page JS error that prevents this from loading. If they used jjquery 3.0 lol"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-01 08:53:20",
    "text": "Agreed <@U25PYL3Q8>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 09:03:51",
    "text": "is there a way to output todays date in HubL like you can grab the year with `{{year}}`?",
    "reply_count": 14,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-08-01 09:04:50"
      },
      {
        "time_stamp": "2018-08-01 09:06:12"
      },
      {
        "time_stamp": "2018-08-01 09:06:23"
      },
      {
        "time_stamp": "2018-08-01 09:06:37"
      },
      {
        "time_stamp": "2018-08-01 09:06:49"
      },
      {
        "time_stamp": "2018-08-01 09:15:27"
      },
      {
        "time_stamp": "2018-08-01 09:17:13"
      },
      {
        "time_stamp": "2018-08-01 09:17:27"
      },
      {
        "time_stamp": "2018-08-01 09:17:40"
      },
      {
        "time_stamp": "2018-08-01 09:17:56"
      },
      {
        "time_stamp": "2018-08-01 09:20:42"
      },
      {
        "time_stamp": "2018-08-01 09:21:50"
      },
      {
        "time_stamp": "2018-08-01 09:23:37"
      },
      {
        "time_stamp": "2018-08-01 11:42:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 09:04:50",
    "text": "Short answer yes - but I don’t have it off hand"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 09:06:12",
    "text": "local_dt|datetimeformat(“%b %d, %Y”) or w/e combo of formatting you want"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 09:06:23",
    "text": "or just {{local_dt}} if you want"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 09:06:37",
    "text": "awesome! thank you!"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 09:06:49",
    "text": "year would be {{local_dt|datetimeformat(“%Y”)}}"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 09:15:27",
    "edited": {
      "time_stamp": "2018-08-01 09:15:53"
    },
    "text": "just an FYI - I think if you use local_dt it will affect cacheability because it has to re-process that every page load. Using Javascript instead will prevent that.\n\nThere may be something working behind the scenes though for something like that that would allow it to still cache idk."
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 09:17:13",
    "text": "In before <@U6GNQ7JBU>?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 09:17:27",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 09:17:40",
    "text": "I am also trying to use {{ unixtimestamp() }} but its giving me an error"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 09:17:56",
    "text": "Essentially I am trying to grab todays date and subtract 6 months"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 09:20:42",
    "text": "IF the caching does get affected (and your page is otherwise {{request.object}} or {{contact.object}} free, then you’re probably best off doing as Jon mentioned and going pure JS route"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 09:21:50",
    "text": "otherwise, if you’re already breaking caching, I’ve got something you may be able to use"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 09:23:37",
    "text": ":+1: I might end up going the JS route should be easy, its for a sample in a blog post so nothing thats major"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 10:24:58",
    "text": "Can we not have `{% color %}` be used with `export_to_template_context`?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 10:27:15",
    "text": "Ignore above, i forgot the whole `widget_data.` portion ugh"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-01 11:42:01",
    "edited": {
      "time_stamp": "2018-08-01 11:42:08"
    },
    "text": "So here’s a “difference in publish date vs today” calculation I put together: ```{# -------------------- DATE / CONTENT AGE CHECK ----------------------- #}\n            {% set pub_year = post.publish_date|datetimeformat(\"%y\") %}\n            {% set pub_month = local_dt|datetimeformat(\"%m\")|multiply(30) - post.publish_date|datetimeformat(\"%m\")|multiply(30) %}\n            {% set pub_day = local_dt|datetimeformat(\"%d\") - post.publish_date|datetimeformat(\"%d\") %}\n\n            {%- if pub_year &lt; local_dt|datetimeformat(\"%y\") -%}\n                {% set date_diff = pub_month|add(pub_day)|add(365) %}\n            {% else %}\n                {% set date_diff = pub_month|add(pub_day) %}\n            {%- endif -%}``` The problem is that I approximate months to 30 days (rather than following their actual day counts) <@U2H3TT8F2>"
  },
  {
    "time_stamp": "2018-08-01 13:24:05",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-01 13:24:22",
    "text": "When i forget the widget_data"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-01 14:06:14",
    "text": "My feeling about the `widget_data` <https://gph.is/XIieHi>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 14:15:54",
    "text": "I concur and I can never remember when it’s widget_data vs widgets"
  },
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-08-01 14:38:13",
    "text": "Anyone know when to use “item.*” vs “name_of_parent_field.*” when using hubl?"
  },
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-08-01 14:39:11",
    "text": "ie it’s somewhat counterintuitive which suffix to use when adding conditionals in a repeater field."
  },
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-08-01 14:39:55",
    "text": "Sorry, prefix."
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-01 15:01:56",
    "text": "Is there a way to set `extra_classes` parameter on a custom module? WITHOUT having to add it to the template?\n\nFor example, I want it to be able to add `extra classes` to the wrapper element everytime a module is dragged into the page via the content editor, so that I can target the wrapper element with css"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 15:04:54",
    "text": "interesting - no I don’t think that’s possible but you could target a class you put on the flex column and target the generic element inside of it with your styles"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 15:06:18",
    "text": "or if it’s a module itself you’re needing to do this with, maybe include that wrapper on the inside of the module instead.(depending on your usecase)\n\nOr last but not least you could use javascript to target the module inside the flex column then you can do whatever you need to."
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-01 15:33:27",
    "text": "so far I have gotten away with 0 javascript on the whole site - wanted to keep it that way! wonderful world of almost mass css3 support we live in!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 15:34:53",
    "edited": {
      "time_stamp": "2018-08-01 15:35:05"
    },
    "text": "agreed, I’m a big fan of using CSS to solve most problems.\n\nSometimes though it’s unavoidable to need js"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-01 15:35:45",
    "text": "my use case is the position:sticky: <https://developer.mozilla.org/en-US/docs/Web/CSS/position>\nwhich requires that the parent element contain all the elements that  you want the sticky element to glide over"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-01 15:36:13",
    "text": "with the wrapper, thats not possible"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 15:36:14",
    "text": "ahh fun I’m litterally working on something with that right now"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-01 15:36:19",
    "text": "haha :wink:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 15:36:32",
    "text": "btw you should throw in the sticky polyfill if you care about IE support"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-01 15:37:43",
    "text": "Related to the css for everything bit.\n\njust remember if you ever think you can’t do something in CSS,Remember, someone built a working game of Connect 4 using just css and checkboxes\n<https://codepen.io/finnhvman/pen/xXpzVN>",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-08-02 07:32:45"
      },
      {
        "time_stamp": "2018-08-02 07:58:38"
      },
      {
        "time_stamp": "2018-08-02 08:01:19"
      }
    ]
  },
  null
]
[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-08-28 07:12:56",
    "text": "what do you mean by chapter?"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2019-08-28 14:29:33",
    "edited": {
      "time_stamp": "2019-08-28 14:30:11"
    },
    "text": "Anyone know why the HubL datetimeformat filter would be outputting “GMT-07:00” instead of “PDT”? I’ve tried various permutations (with and without timezone offset in the original timestamp, with and without the optional locale parameter in the filter call)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-08-28 14:30:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-28 14:30:30",
    "text": "Can you post an example?"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2019-08-28 14:31:56",
    "text": "`\"2018-08-27T11:00:00-0700\"|strtotime(\"yyyy-MM-dd'T'HH:mm:ssZ\")`"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2019-08-28 14:32:35",
    "text": "And then running that value through `datetimeformat(\"%l:%M %p %Z\", 'America/Los_Angeles')`",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-08-28 14:45:27"
      },
      {
        "time_stamp": "2019-08-28 14:45:32"
      },
      {
        "time_stamp": "2019-08-28 14:58:23"
      },
      {
        "time_stamp": "2019-08-28 15:18:28"
      },
      {
        "time_stamp": "2019-08-28 15:18:52"
      },
      {
        "time_stamp": "2019-08-28 15:28:26"
      },
      {
        "time_stamp": "2019-08-29 09:53:35"
      },
      {
        "time_stamp": "2019-08-29 09:54:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-28 14:45:27",
    "text": "I believe that should work in theory"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-28 14:45:32",
    "text": "Let me look why it isn;t"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2019-08-28 14:58:23",
    "text": "FWIW, I’ve also had trouble getting strtotime to parse any string other than a full ISO8601 timestamp"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-28 15:18:28",
    "text": "<https://github.com/HubSpot/jinjava/pull/368>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-28 15:18:52",
    "text": "Looks like we were doing the python to Java conversion incorrectly for `%Z`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-28 15:28:26",
    "text": "<@UMCBG6QK0> Do you have an example of when `strtotime` fails to parse?"
  }
]
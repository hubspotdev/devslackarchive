[
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-02-21 03:09:48",
    "edited": {
      "time_stamp": "2019-02-21 03:19:50"
    },
    "text": "someone knows a hubL var when AMP version is activated? (rather than the `request` or `Query`). I need to change something in the global header for the amp version",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-02-21 11:30:32"
      },
      {
        "time_stamp": "2019-02-21 11:38:06"
      },
      {
        "time_stamp": "2019-02-21 11:52:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Locke",
      "poster_handle": "dustin"
    },
    "time_stamp": "2019-02-21 10:39:17",
    "text": "Is there a hubL tag for the site home page?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-21 11:22:15",
    "edited": {
      "time_stamp": "2019-02-21 11:22:37"
    },
    "text": "<@UEZGAHP4H> `{{domain_settings.site_settings.company_domain}}` or just `{{company_domain}}` Naturally, this would only work if your whole site was hosted on the HS CMS"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 11:25:26",
    "text": "you could use the internal name of the homepage `{{ page_meta.name }}`"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 11:25:49",
    "text": "assuming this is not a general use case thing"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-21 11:25:50",
    "text": "that will only give you the name I think they want the URL"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 11:25:58",
    "text": "ahhhh"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 11:26:06",
    "text": "well apologies :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-21 11:30:32",
    "text": "I assume you probably already checked but there might be a secret var in developer info"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-02-21 11:33:24",
    "text": "root domain of a current page `{{ site_settings.domain }}`"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-02-21 11:38:06",
    "edited": {
      "time_stamp": "2019-02-21 11:38:13"
    },
    "text": "well, I can't see the available vars in amp environment :expressionless:, so not really"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-02-21 11:52:32",
    "text": "only booleans i could find was\n`ampMode`\n`request.amp_mode`\n`template_meta.amp_validated`"
  },
  {
    "text": "Hello, does anyone know if its possible to move the GDPR related text under the button in a form module? If not, is there a workaround?",
    "time_stamp": "2019-02-21 13:57:38"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:00:39",
    "text": "javascript"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-21 14:01:34",
    "text": "```\nwindow.addEventListener('message', event =&gt; {\n   if(event.data.type === 'hsFormCallback' &amp;&amp; event.data.eventName === 'onFormReady') {\n       $('.the-gdpr-class').appendTo('.the-form-class');\n   }\n});\n```"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-21 14:01:37",
    "text": "That might work"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:02:24",
    "text": "dont you have to have that in the form callback?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-21 14:02:57",
    "text": "I have that in my cheatsheet, so it must work!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:03:10",
    "text": "consider it stolen"
  },
  {
    "time_stamp": "2019-02-21 14:03:40",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:03:53",
    "text": "changes how i handle forms in my modules"
  },
  {
    "time_stamp": "2019-02-21 14:04:07",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:06:40",
    "text": "does this js code work only for coded templates... cause I'm working in a template builder file..."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:07:01",
    "text": "and it don't seem to work"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:07:41",
    "text": "better work.  i just stole it"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-21 14:16:26",
    "text": "You changed the classes and everything?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:20:05",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:20:28",
    "text": "If there is more than on class to the form do I need to include them all"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:20:50",
    "text": "'.class-1 .class-2 .class-3'"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:28:06",
    "text": "now it works"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-21 14:28:13",
    "text": "Ah good!"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:28:15",
    "text": "with just one class"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-21 14:28:21",
    "text": "It should just need one class"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:28:30",
    "text": "yes exactly"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-21 14:29:07",
    "text": "As long as it’s unique to the form. If you had two things with the same class on your page it would append the GDPR text to the first one that appears in the DOM."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:29:39",
    "text": "I was trying to include this in a &lt;script&gt; tag, but It worked when I included it to my m#in .js file"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:30:02",
    "text": "yes I understand thank you"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-02-21 14:30:12",
    "text": "main*"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-21 14:38:29",
    "edited": {
      "time_stamp": "2019-02-21 14:38:31"
    },
    "text": "starred and pinned that so it doesnt go away magically"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:39:34",
    "text": "do stars only appear in the channel in which they were starred?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:40:11",
    "text": "doh"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:40:27",
    "text": "why did i believe that i would be able to see your stars??"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-21 14:40:33",
    "text": "i thought you were doing me a service"
  },
  {
    "time_stamp": "2019-02-21 14:40:45",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-21 14:41:25",
    "text": "well i pinned it so you should see that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-21 14:42:47",
    "text": ":themoreyouknow:"
  }
]
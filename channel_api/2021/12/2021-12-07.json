[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2021-12-07 02:17:49",
    "text": "I think you for all your cases you may just need to use 2 or more api calls, e.g. Search CRM api then use Associations api\n\nthe search api also allows you to search by associations\n\n<https://developers.HubSpot.com/docs/api/crm/search>\n<https://developers.HubSpot.com/docs/api/crm/associations>\n\nAlso note there is both a v3 Associations API and v4 beta associations api the v3 API should do everything you need though"
  },
  {
    "poster": {
      "poster_name": "Romain GIROD",
      "poster_handle": "romain.girod"
    },
    "time_stamp": "2021-12-07 02:25:49",
    "text": "problem solved !\nthanks"
  },
  {
    "poster": {
      "poster_name": "Dries Bonte",
      "poster_handle": "dries"
    },
    "time_stamp": "2021-12-07 07:35:33",
    "text": "<https://legacydocs.HubSpot.com/docs/methods/forms/submit_form>\nWhen will this be documented in the new version?\nIn the respons you get the redirectURI, is the submissionGUID in the querystring included as well?"
  },
  {
    "poster": {
      "poster_name": "RanJ",
      "poster_handle": "randy.okelly"
    },
    "time_stamp": "2021-12-07 08:44:43",
    "text": "Hi <@UN7CEHC9X> … one of our direct partners wants to send leads through an API as opposed to a lead list twice per week. Hoping to improve response rates and MQL to Opportunities"
  },
  {
    "poster": {
      "poster_name": "RanJ",
      "poster_handle": "randy.okelly"
    },
    "time_stamp": "2021-12-07 08:45:17",
    "text": "Hi <@UD53A9UUR>. Not at the moment"
  },
  {
    "poster": {
      "poster_name": "Roman Kozak",
      "poster_handle": "roman.gruit"
    },
    "time_stamp": "2021-12-07 10:39:35",
    "text": "This API documentation might help you. If there is anything specific you would like to discuss in detail, I’m here for that.\n<https://developers.HubSpot.com/docs/api/crm/contacts>"
  },
  {
    "poster": {
      "poster_name": "Dan",
      "poster_handle": "nuovaou"
    },
    "time_stamp": "2021-12-07 11:10:36",
    "edited": {
      "time_stamp": "2021-12-08 07:43:21"
    },
    "text": "hi everyone. I’m new here. Support also suggested me to ask here all my questions… so I’ll give it a try :smile:\n\nThe following points are the ones for which I couldn’t find an answer in the documentation. If some are already covered somewhere, I apologize. I did my best :)\n\n*1. Search for phone when spaces don’t match*\nI’m using the endpoint `/v3/objects/contacts/search` to look for a contact based on a phone number.\nIt works fine when the phone number is exactly the same, including spaces, etc. but if there’s even one space in a different position, the endpoint doesn’t find the contact.\nThis is a major issue for me, since I can’t rely on users always having all numbers formatted perfectly as I expect them.\nHow can I solve this?\n\n*2. Create deal and link to contact in one call*\nWhen creating a new deal linked to a contact, at the moment I need to do\n• one call to `POST /v3/objects/deals`\n• one call to `PUT objects/deals/:deal_id/associations/contacts/:contact_id/deal_to_contact`\nCan I do the same in just one call?\n\n*3. Retrieve all activities per deal in one call*\nAt the moment I’m using way too many calls to retrieve all the activities for a deal. This is what I’m doing:\n• `GET ​​/v3/objects/deals/:deal_id/associations/tasks`\n• `GET ​​/v3/objects/deals/:deal_id/associations/meetings`\n• `GET ​​/v3/objects/deals/:deal_id/associations/calls`\n• `GET ​​/v3/objects/deals/:deal_id/associations/emails`\n• For each id returned for each associations list, do a `GET /v1/engagements/:id`\nThis becomes slow very quickly, and seems like a big waste of calls.\nHow can I get all activities for a deal in one call - or at least optimize this?\n\n*3. UPDATE:* Looks like you can get all the associations for the deal at once using `/v3/objects/deals/:id?associations=CALLS,TASKS,EMAIL,etc.` but then you still need to fetch the activities one by one. This seems very strange, and incredibly slow considering a deal can have dozens of activities. If anyone has a better way, please share :)\n\n*4. Retrieve phones for contact*\nWhere can I find the phone numbers of a contact?\n \n*5. Save multiple phone numbers to a contact*\nI can save the phone number for a contact while creating it by passing a `phone` parameter to `POST /v3/objects/contacts` - and I guess I can update it, as well, but how do I add a new phone number to an existing contact?\n\n*6. Retrieve company name (I have to use hub_domain)*\nHow can I find the company name for the user? The closest I could get is doing a `GET to /v1/access-tokens/` and using the `hub_domain` parameter instead, but it’s not user friendly.\n\n*7. Retrieve profile picture*\nCan I retrieve the url of the user’s avatar or reconstruct it in a reliable way?\n\n*8. Retrieve data center urls for current user*\nI need to provide direct links to deals, contacts, etc. To do that I should know which subdomain to point to for each user. For example, `app-_*eu1*<http://_.HubSpot.com|_.HubSpot.com>` - If I simply point to a generic `<http://app.HubSpot.com|app.HubSpot.com>` it doesn’t work.\nWhere can I find the right subdomain for the user?\n\n*9. Direct link to activities*\nRelated to #8, how can I provide direct links to specific activities?\n\n*10. Release as beta*\nOnce the app goes through the review process, would it be possible to roll it out gradually or let a few users test it, before making it public to the world?",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-12-08 03:17:35"
      },
      {
        "time_stamp": "2021-12-08 03:58:12"
      },
      {
        "time_stamp": "2021-12-08 06:13:23"
      },
      {
        "time_stamp": "2021-12-08 06:28:27"
      },
      {
        "time_stamp": "2021-12-08 06:55:02"
      },
      {
        "time_stamp": "2021-12-08 07:35:56"
      },
      {
        "time_stamp": "2021-12-08 07:37:04"
      },
      {
        "time_stamp": "2021-12-08 07:50:53"
      }
    ]
  }
]
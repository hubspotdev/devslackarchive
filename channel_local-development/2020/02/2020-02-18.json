[
  {
    "poster": {
      "poster_name": "Ed Hansen",
      "poster_handle": "edh"
    },
    "time_stamp": "2020-02-18 01:38:09",
    "text": "Hey guys, does anyone could help me out figuring out how to use this `npx hs watch --portal=&lt;name&gt; &lt;src&gt; &lt;dest&gt;` "
  },
  {
    "poster": {
      "poster_name": "Ed Hansen",
      "poster_handle": "edh"
    },
    "time_stamp": "2020-02-18 01:38:38",
    "text": "cant seem to find out what the `src` would be and the `dest`"
  },
  {
    "poster": {
      "poster_name": "Morn√© Esterhuizen",
      "poster_handle": "morne.esterhuizen"
    },
    "time_stamp": "2020-02-18 07:22:43",
    "text": "Hi <@UT6D1NGF5> - The `&lt;src&gt;` would be the *project folder name* on your l*ocal machine* and `&lt;dest&gt;` would be the *project folder name* in your *HubSpot portal*.\n\nYou can read more about it here:\n<https://designers.HubSpot.com/docs/tools/local-development>"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-02-18 18:13:47",
    "edited": {
      "time_stamp": "2020-02-18 18:14:07"
    },
    "text": "Just to clarify, if we are building coded templates we can't use the \"add module\" feature in the page editor, correct?",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-02-18 18:14:37"
      },
      {
        "time_stamp": "2020-02-18 18:15:11"
      },
      {
        "time_stamp": "2020-02-18 19:43:23"
      },
      {
        "time_stamp": "2020-02-18 19:47:47"
      },
      {
        "time_stamp": "2020-02-18 20:37:39"
      },
      {
        "time_stamp": "2020-02-18 20:40:15"
      },
      {
        "time_stamp": "2020-02-19 07:40:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-02-18 18:14:37",
    "text": "I would have to use a DnD template, for this functionality?"
  },
  {
    "time_stamp": "2020-02-18 18:15:11",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-02-18 19:43:23",
    "edited": {
      "time_stamp": "2020-02-18 19:44:38"
    },
    "text": "This is actually not true. Developers can utilize coded files while content creators can still have a flexible and drag and drop interface to use in the editor.\n\nI would check out the <#CMXUWUY5D|hs-cms-boilerplate> project! It utilizes the new drag and drop HubL syntax, which supports layout, style and content control add within the editor. <https://github.com/HubSpot/cms-theme-boilerplate>. If you use this syntax, the \"add\" sidebar will be available!\n\nUpload this project to your account and check out the experience."
  },
  {
    "text": "This is what the page building experience is like utilizing the boilerplate / dnd HubL syntax",
    "time_stamp": "2020-02-18 19:47:47"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-02-18 20:37:39",
    "text": "Ah thanks <@U6W3H6YN8>! i work on an inhouse team so it takes me a little while to jump on with new features."
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-02-18 20:40:15",
    "text": "I am going to try to integrate some of the dnd features  and maybe my marketing team won't hate me as much for \"having so much control\" just cuz I decided to code the website instead of build the whole thing in dnd"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-02-19 00:58:55",
    "text": "Question on updating modules: If I adjust the markup, will my modules adopt said markup changes? I am renaming some classes to clean up css a bit but I am not seeing the changes relfected in the markup of the moduels",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-02-19 06:27:43"
      },
      {
        "time_stamp": "2020-02-19 10:17:17"
      },
      {
        "time_stamp": "2020-02-19 10:18:55"
      },
      {
        "time_stamp": "2020-02-19 13:41:23"
      },
      {
        "time_stamp": "2020-02-19 14:04:50"
      },
      {
        "time_stamp": "2020-02-19 14:05:06"
      }
    ]
  }
]
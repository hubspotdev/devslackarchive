[
  {
    "poster": {
      "poster_name": "Tony Harris",
      "poster_handle": "anthony.harris"
    },
    "time_stamp": "2021-07-22 04:58:35",
    "text": "Hello all just a quick question the number field... How do we get a default 0 instead of null? For instance \"Number fields default number is 0\" Applying this in css we get invalid property which i am guessing is null..."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-07-22 05:51:09",
    "text": "On your variable add |default('0')"
  },
  {
    "poster": {
      "poster_name": "Tony Harris",
      "poster_handle": "anthony.harris"
    },
    "time_stamp": "2021-07-22 06:01:03",
    "text": "<@U38EZFVFE> Ah thats great thank you very much :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Tony Harris",
      "poster_handle": "anthony.harris"
    },
    "time_stamp": "2021-07-22 06:01:18",
    "text": "Just did it like so border-radius: {{ item.column_one.box_border_radius | default('0') }}px;"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-07-22 08:40:27",
    "text": "Your very welcome"
  },
  {
    "poster": {
      "poster_name": "Chris Robock",
      "poster_handle": "crobock"
    },
    "time_stamp": "2021-07-22 21:29:17",
    "text": "Hey all.  I’m new to HubL, and am working with setting up a simple script to read rows from a HubDB, find the items I want, and iterate over them to place them in a table.  Simple enough.  Now I’m trying to set up error handling so that if it returns no rows based on the request, to return a statement that no results were found.  I tried setting up a nested if statement inside the existing if statement, but that ended up throwing up an error.  What would be the best way to handle this if hubdb_table_rows was equal to null?  Here’s my code so far:\n\n```{% if request.query_dict['row_id'] %}\n  \n  {% set row = hubdb_table_row(table_id, request.query_dict['row_id']) %}\n  &lt;h1&gt;{{ row.store_name }}&lt;/h1&gt;\n  &lt;h3&gt;{{ row.address }}&lt;/h3&gt;\n  &lt;h3&gt;{{ row.city }}, {{ row.state }}, {{ row.post_code }}&lt;/h3&gt;\n  &lt;h3&gt;{{ row.phone_number }}&lt;/h3&gt;\n{% elif request.query_dict['lat'] %}\n      \n      {% set params = \"orderBy=geo_distance(location,\" ~ request.query_dict['lat'] ~ \",\" ~ request.query_dict['lon'] ~ \")\" %}\n      {% set params = \"geo_distance(location,\" ~ request.query_dict['lat'] ~ \",\" ~ request.query_dict['lon'] ~ \",mi)__lt=100.0&amp;\" ~ params %}\n      \n        &lt;table&gt;\n        {% for row in hubdb_table_rows(table_id, params) %}\n          \n          &lt;tr&gt;\n              &lt;th colspan = \"3\"&gt;&lt;h3&gt;&lt;a href=\"?{{ request.query }}&amp;row_id={{ row.hs_id }}\"&gt;{{ row.store_name }}&lt;/a&gt;&lt;/h3&gt;&lt;/th&gt;\n          &lt;/tr&gt;\n          &lt;tr&gt;\n              &lt;td&gt;{{ row.address }}&lt;/td&gt;\n              &lt;td&gt;{{ row.city }}, {{ row.state }}&lt;/td&gt;\n              &lt;td&gt;{{ row.location|geo_distance(request.query_dict['lat'], request.query_dict['lon'], \"mi\")|round(2) }} mi away&lt;/td&gt;\n\n          &lt;/tr&gt;\n\n        {% endfor %}\n        &lt;/table&gt;\n      \n{% else %}\n  Please allow us to read your location so we can show you the closest services to you.```\n",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-23 09:36:50"
      },
      {
        "time_stamp": "2021-07-23 10:08:47"
      }
    ]
  }
]
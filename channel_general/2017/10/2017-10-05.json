[
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2017-10-05 06:47:25",
    "text": "Very basic question, I have two blogs in a client’s website \nOne in French : /blog (it’s my primary language)\nOne in English : en/blog\n*How can I tell HubSpot that the second one has to be in English Language ?*\n\nBecause when I inspect my English Blog, all meta are in French :disappointed: \nThanks for your help"
  },
  {
    "poster": {
      "poster_name": "Deven Davies",
      "poster_handle": "deven_ic"
    },
    "time_stamp": "2017-10-05 07:06:46",
    "text": "The explanation is lengthy but here is a helpful article: <https://knowledge.HubSpot.com/articles/kcs_article/cos-general/how-to-manage-multi-language-content-with-HubSpots-cos>"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2017-10-05 07:26:42",
    "text": "This article just speak about Website Page or Landing Page that are easily translated.\n\nHere’s my configuration\n- 2 languages : French as primary , then English (/en)\n- I create a language.html file to write my different translations\n\n`{% if (request.path is string_containing “en/“) or (request.path ==“en”)  %}\n    {% set followUs = “Follow us” %}\n{% else %}\n    {% set followUs = “Suivez-nous” %}\n{% endif %}`\nI can access to a language variable with lang.followUs\n\n- For Website Page and LP it’s OK : I can use LANG variables and my URLs are automatically change.\n\nMy problem is with Blog.\nFirst mess : Native Language Switcher doesn’t work.\nI create a JS file to force language but URL doesn’t change so I always have french URLs in English Version :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-10-05 10:55:03",
    "text": "The blog doesnt have a translation system"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-10-05 10:55:09",
    "text": "like pages"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-10-05 10:55:28",
    "text": "You can make 2 blogs."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-10-05 10:55:39",
    "text": "and attach one of them to its own url"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-10-05 10:55:57",
    "text": "<@U3TR96G84>"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-10-05 11:16:23",
    "text": "<@U3TR96G84> <@U38EZFVFE> The 2 blog system is the best approach here... my only other suggestion would be to rig up your template with 2 custom modules that contain the entirety of your post_body in each language and to then have your template read the request.path as you were doing and displaying the correct module (as well as using the logic to flip between the two versions of variables set by the modules in places like the title, meta description, etc...)"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-10-05 11:17:50",
    "text": "That is pretty elegant but it doesnt change the url"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-10-05 11:18:26",
    "text": "I think he has two different urls for the different languages"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2017-10-05 11:18:48",
    "text": "You could have blog/es and blog/fr and run them as 2 different. Or you could use the query_dict.lang and put conditions around the blog loop"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-10-05 11:26:53",
    "text": "working with <@U25C65C3S>'s solution: If you have 2 blogs (1 per language) you can also cross reference the corresponding blog_post.id (w/e the actual dict field name is) in a module then if the person uses the language switcher, call a blog_post_by_id(widgets.module.body.value) to get the dict with all of the alternate language content"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-10-05 11:27:21",
    "text": "so in the /fr/ blog content, you'd have a module \"alt_language\" that you'd put the english blog post id"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-10-05 11:27:39",
    "text": "and vice versa in /en/"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-10-05 16:11:01",
    "text": "When publishing a coded file in current design manager, afer clicking publish, I can hit enter at the modal confirming. When publishing a custom module, I'm not able to hit enter."
  }
]
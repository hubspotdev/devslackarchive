[
  null,
  {
    "poster": {
      "poster_name": "Robert Pupaza",
      "poster_handle": "robert.pupaza"
    },
    "time_stamp": "2018-10-29 06:05:30",
    "text": "Hello, community, I am not sure if this is the correct channel for my kind of issue, please let me know where is normally suppose to be posted. My issue is related to forms.\nI have created a form with a custom date picker using a 3rd party js library called flatpickr and one thing that I noticed is that when I test that functionality on a staging page works fine but when I publish it to live, a console error pops out saying that 'endDatePicker.parseDate is not a function'. I am using the same custom module for both live and staging versions.\n\nI can't stop thinking that this might be an HS problem and how is handling the date format.\n\nAny help is much appreciated.\n\nhere is some code: *if needed I can PM the page links*\n\nJS code used in both version:\n```  onFormReady: function($form){\n      var startDateInput = $('.holiday-lp-form .hs-dateinput input[name=\"first_day_of_leave\"]');\n      var endDateInput = $('.holiday-lp-form .hs-dateinput input[name=\"last_day_of_leave\"]');\n      \n      $(\".holiday-lp-form .hs-dateinput input\").flatpickr({\n        dateFormat: \"Y-m-d\",\n        minDate: new Date(),\n        onChange: function(selectedDates, dateStr, instance) {\n          $(this).trigger('change') ; \n          var endDatePicker = endDateInput.flatpickr();\n          console.log('dateSTR = ' + dateStr);\n          console.log('startDateVaalue = ' + endDatePicker);\n          var startDateValue = endDatePicker.parseDate(dateStr, \"Y-m-d\");\n          console.log(startDateValue);\n          var endDateValue = endDateInput.val();\n          endDatePicker.set({ minDate: startDateValue })\n\n          if (endDateValue === '') {\n            endDatePicker.jumpToDate(startDateValue);\n          }\n        },\n      }); \n ```\nlive version throws this error: \"endDatePicker.parseDate is not a function\".\nstage version: works fine."
  },
  null,
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-29 09:22:08",
    "text": "Do media queries in Gmail App on android just not work? Im trying to resize some headers and it doesnt look to be working at all with `data-hse-inline-css=\"true\"`",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-10-29 09:45:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-29 09:34:17",
    "text": "Media queries can't be inlined"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-29 09:35:02",
    "text": "And iirc gmail strips out the head, so it's relying on inlined CSS"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-29 09:35:45",
    "text": "At least some versions of Gmail don't support `@media`, anyway: <https://www.campaignmonitor.com/css/media-queries/media/>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-29 09:45:31",
    "edited": {
      "time_stamp": "2018-10-29 09:45:59"
    },
    "text": "You use two style elements one with and without the inline attribute., Media query in the non inlined one"
  },
  {
    "poster": {
      "poster_name": "Shamash Athoraya",
      "poster_handle": "shamash.athoraya"
    },
    "time_stamp": "2018-10-29 10:15:30",
    "text": "Me too <@U6W3H6YN8> "
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-29 11:27:22",
    "text": "Hi guys, finding HubSpot really interesting. Building a custom module at the moment. Could any one of you please help me on how to get the link from the page type input field."
  },
  {
    "text": "",
    "time_stamp": "2018-10-29 11:27:38"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-29 11:27:57",
    "text": "I've tried {{ page }} &amp; {{ page.url }} doesn't seem to work. Any ideas?"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-29 11:28:01",
    "text": "Thanks a lot :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-29 11:36:23",
    "text": "Did you try going to actions and copying the snippet?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-29 11:36:42",
    "text": "That’s usually a good indication of how a particular field works"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-29 11:36:55",
    "text": "Yeah, it's greyed out :confused:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-29 11:37:16",
    "text": "I think in the page case it’s something like `{{ module.page|absolute_url }}`"
  },
  {
    "text": "",
    "time_stamp": "2018-10-29 11:37:27"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-29 11:38:40",
    "text": "Try that absolute URL thing I posted"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2018-10-29 11:39:21",
    "text": "`{{ page_by_id(module.page_field).url }}` works aswell"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-29 11:40:45",
    "text": "That's fab brad! Thanks a million! : )"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-29 11:40:49",
    "text": "&lt;a href=\"{{ page_by_id(slide.page).url }}\"&gt; works!"
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-10-29 13:08:29",
    "text": "Feel free to DM portal ID"
  },
  null,
  null
]
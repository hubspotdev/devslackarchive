[
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2021-09-10 02:14:31",
    "text": "Fantastic, <@UN0NUBU3S> is there an ETA on this at all?"
  },
  {
    "poster": {
      "poster_name": "Logan Allen",
      "poster_handle": "lallen"
    },
    "time_stamp": "2021-09-10 06:54:36",
    "text": "No definitive ETA, but it’s a top priority of ours :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-09-10 09:35:26",
    "edited": {
      "time_stamp": "2021-09-10 09:36:50"
    },
    "text": "`scope_css` is cool. Now, `scope_js` when? :smile: As it is currently, it’s a bit of a pain to get the JavaScript to work correctly when dealing with multiple of the same module on the page.",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-09-10 09:41:59"
      },
      {
        "time_stamp": "2021-09-10 09:45:46"
      },
      {
        "time_stamp": "2021-09-10 09:48:31"
      },
      {
        "time_stamp": "2021-09-10 09:50:24"
      },
      {
        "time_stamp": "2021-09-10 09:53:27"
      },
      {
        "time_stamp": "2021-09-10 13:07:10"
      },
      {
        "time_stamp": "2021-09-10 14:13:37"
      },
      {
        "time_stamp": "2021-09-10 14:31:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-09-10 09:41:59",
    "edited": {
      "time_stamp": "2021-09-10 09:43:41"
    },
    "text": "Have you read this?\n<https://developers.HubSpot.com/docs/cms/building-blocks/modules/files>\n\nIt shows how to write javaScript so that you can handle instance specific code with 1 normal JS file."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-09-10 09:45:46",
    "edited": {
      "time_stamp": "2021-09-10 09:48:28"
    },
    "text": "Yes… Anything in particular I should be looking at? The issue is when you need to access Hubl in the JS, so you use `require_js` then it’s just kind of hacky and annoying to work around to get it to work with multiple of the same module. Being able to access Hubl in the module.js would also fix this."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-09-10 09:48:31",
    "text": "Well in that situation you could create an array in the first instance and just push your data to that array for each instance on the page."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-09-10 09:50:24",
    "edited": {
      "time_stamp": "2021-09-10 09:53:14"
    },
    "text": "Yeah, I believe that’s what I’ve done in the past, it’s just a bit annoying. It would just be nice to not have to deal with it, and just have it work. Just like `scope_css`  wasn’t required, you could accomplish the exact same thing in multiple ways (far easier than you can with this JS situation imo) it is still a nice quality of life addition."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-09-10 09:53:27",
    "edited": {
      "time_stamp": "2021-09-10 13:51:58"
    },
    "text": "Not saying we wouldn’t add some form of convenience feature like this.\n\nI guess, what exactly would you want `scope_js` to actually do?\n\nIf you have to load your full script for each instance then it’d hurt your loading performance."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-09-10 13:07:10",
    "text": "Yeah, any repetitive js will ultimately increase the page’s scripting time"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-09-10 14:13:37",
    "edited": {
      "time_stamp": "2021-09-10 14:15:03"
    },
    "text": "How do you guys generally handle it then, if you have multiple tab group modules on a page, for instance? Are you just abusing `closest`? I can’t think of exactly the issues I’ve had offhand, it’s not often I need to use Hubl in JavaScript and have multiple of the same module on a page,  but next time I run into it, I’ll post about my issues here."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-09-10 14:31:10",
    "text": "That may not be the ideal use-case example for the particular problem we’re discussing.\n\nThe way I’d approach it is to use HubL, HTML, &amp; CSS for rendering the tab interface and tab panels. Then use JavaScript basically just to handle passing the state to the aria attributes. The CSS would do the actual visual state handling/hiding showing the content based on the aria state. <https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-2/tabs.html|Effectively I’d do this>.\nThe JavaScript would look similar to that <https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-2/js/tabs.js|example> but stripped back a lot. (probably don’t need the delete tab capability for example).\n\nThis JS isn’t written instance specific, so as long as you have the right HTML structure in the page it will properly handle every instance."
  }
]
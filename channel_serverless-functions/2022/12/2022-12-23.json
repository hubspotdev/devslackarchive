[
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 08:37:16",
    "text": "bout ready to throw HubSpot out a window - has anyone run into a issue where HubSpot refuses to actually run serverless functions even though theres no errors in build / deploy? Getting a \"axios is not a function\" error ,even though Axios is installed and in package.json",
    "reply_count": 29,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-12-23 08:44:50"
      },
      {
        "time_stamp": "2022-12-23 08:45:58"
      },
      {
        "time_stamp": "2022-12-23 08:56:37"
      },
      {
        "time_stamp": "2022-12-23 08:57:32"
      },
      {
        "time_stamp": "2022-12-23 09:03:13"
      },
      {
        "time_stamp": "2022-12-23 09:04:02"
      },
      {
        "time_stamp": "2022-12-23 09:16:20"
      },
      {
        "time_stamp": "2022-12-23 09:18:10"
      },
      {
        "time_stamp": "2022-12-23 09:51:10"
      },
      {
        "time_stamp": "2022-12-23 09:51:51"
      },
      {
        "time_stamp": "2022-12-23 09:53:31"
      },
      {
        "time_stamp": "2022-12-23 10:00:28"
      },
      {
        "time_stamp": "2022-12-23 10:01:24"
      },
      {
        "time_stamp": "2022-12-23 10:13:19"
      },
      {
        "time_stamp": "2022-12-23 10:17:03"
      },
      {
        "time_stamp": "2022-12-23 10:57:34"
      },
      {
        "time_stamp": "2022-12-23 10:59:59"
      },
      {
        "time_stamp": "2022-12-23 11:00:13"
      },
      {
        "time_stamp": "2022-12-23 11:04:11"
      },
      {
        "time_stamp": "2022-12-23 11:26:57"
      },
      {
        "time_stamp": "2022-12-23 11:29:37"
      },
      {
        "time_stamp": "2022-12-23 11:31:01"
      },
      {
        "time_stamp": "2022-12-23 11:31:28"
      },
      {
        "time_stamp": "2022-12-23 11:33:54"
      },
      {
        "time_stamp": "2022-12-23 11:34:54"
      },
      {
        "time_stamp": "2022-12-23 11:36:59"
      },
      {
        "time_stamp": "2022-12-23 11:37:12"
      },
      {
        "time_stamp": "2022-12-23 12:47:44"
      },
      {
        "time_stamp": "2022-12-23 12:54:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 08:44:50",
    "text": "HubSpot doesn't allow you to use package.json files in serverless functions, so I'm not sure where you're getting your error. Axios comes as a preinstalled module in HubSpot serverless functions. If you're not getting an error when running the code on HubSpot, there are ways to find out what is going on with it. Hard to help when there is no code example."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 08:45:58",
    "text": "It does let you use package.json you just have to deploy it locally"
  },
  {
    "text": "When I try to push to my HubSpot accounts, I get an error in my terminal. It won't allow me. So you must know something I don't. Maybe the package.json file is messing up the code because its already installed automatically by HubSpot.",
    "time_stamp": "2022-12-23 08:56:37",
    "edited": {
      "time_stamp": "2022-12-23 08:56:52"
    }
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 08:57:32",
    "text": "Again, it would help to view the actual code in order to help look for the issue you're having."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 09:03:13",
    "text": "the code is literally exports.main = async ({params}, sendResponse) =&gt; {\n  const data = await axios.get('<https://catfact.ninja/fact>');\n\nsendResponse({body: \"hit\"})\n}\n\nso its something with HubSpots dogshit compiler"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 09:04:02",
    "text": "might've fixed it though"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 09:16:20",
    "text": "<https://www.webdew.com/blog/how-to-install-npm-packages>\n\nhere's a decent guide btw for using package.json"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 09:18:10",
    "text": "ugh same error"
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 09:51:10",
    "edited": {
      "time_stamp": "2022-12-23 09:51:24"
    },
    "text": "I personally use request over axios.\n```request(options, function(error, response, body) {\nsendResponse({\nbody: { response: \"\" },\nstatusCode: 200\n});\n});```"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 09:51:51",
    "text": "yeah request has been deprecated tho so its dangerous waters :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 09:53:31",
    "text": "I think its a issue with HubSpot and Webpack - if you try to include axios , webpack will naturally inline it. but HubSpot is already doing this, so it just errors out. HubSpot needs a way to turn off the included libraries when uploading externally"
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 10:00:28",
    "text": "That makes sense about why it would mess up. So wouldn't you remove Axios from the webpack compilation so it doesn't mess up the included version in HubSpot? What node version are you using btw?"
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 10:01:24",
    "text": "And even though request has been deprecated, it still will work. Just no mods or additions will be done to request in the future."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 10:13:19",
    "text": "node 16x but also having webpack ignore it just returns a doens't exist error"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 10:17:03",
    "text": "I wonder if this account is just borked - even generating it through HS interface it doesn't work"
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 10:57:34",
    "text": "It could be borked. I'd reach out to HS support and ask about the issue."
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 10:59:59",
    "text": "I know this is basic but did you did import Axios into the code right before the main function?\n```const axios = require('axios');```"
  },
  {
    "poster": {
      "poster_name": "Matt Louden",
      "poster_handle": "matt562"
    },
    "time_stamp": "2022-12-23 11:00:13",
    "text": "I didn't see it in your code example so I thought I would ask"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 11:04:11",
    "text": "yeah sorry forgot to copy that lol"
  },
  {
    "poster": {
      "poster_name": "Ben Anderson",
      "poster_handle": "banderson"
    },
    "time_stamp": "2022-12-23 11:26:57",
    "edited": {
      "time_stamp": "2022-12-23 11:30:29"
    },
    "text": "Hey <@U0336QCR2FQ>, I can take a look at that issue if you'd like. I just bootstrapped a new project and changed the serverless fetch to match the code you pasted above.\n\nThat works for me when using the example project scaffold, which includes `axios` in the `package.json`:\n\n```  \"dependencies\": {\n    \"@HubSpot/api-client\": \"^7.0.1\",\n    \"axios\": \"^0.27.2\"\n  }```"
  },
  {
    "poster": {
      "poster_name": "Ben Anderson",
      "poster_handle": "banderson"
    },
    "time_stamp": "2022-12-23 11:29:37",
    "text": "There are two things that I'm curious about:\n1. You mentioned webpack â€“ are you using webpack to do any bundling for you in that project?\n2. You mentioned `\"axios is not a function\"` error message. That caught my attention because in the code sample you posted axios isn't being invoked as a function, it's using the `get` method a la:  `await axios.get('<https://catfact.ninja/fact>');`  So I just want to be sure that's the exact message you're seeing because that could be a clue"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 11:31:01",
    "text": "Yep that was the exact message"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 11:31:28",
    "text": "I got a little further but then I started getting a really weird error:\n\nSyntaxError: JSON.parse: unexpected keyword at line 1 column 1 of the JSON data\n\neven though there was no errors"
  },
  {
    "poster": {
      "poster_name": "Ben Anderson",
      "poster_handle": "banderson"
    },
    "time_stamp": "2022-12-23 11:33:54",
    "text": "Where are you seeing that error message :point_up_2:? (e,g, private app logs UI, or command line or browser console)"
  },
  {
    "poster": {
      "poster_name": "Ben Anderson",
      "poster_handle": "banderson"
    },
    "time_stamp": "2022-12-23 11:34:54",
    "text": "If the project (or even the one JS file) is not sensitive, I can try to run the exact setup you have to give you a second set of eyes... not sure how doable that is"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-23 11:36:59",
    "text": "For sure; I'll PM you a zip with node_modules removed if thats cool?"
  },
  {
    "poster": {
      "poster_name": "Ben Anderson",
      "poster_handle": "banderson"
    },
    "time_stamp": "2022-12-23 11:37:12",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Ben Anderson",
      "poster_handle": "banderson"
    },
    "time_stamp": "2022-12-23 12:47:44",
    "text": "Okay, I believe I tracked down the root cause of the issue, which is most accurately described in this <https://github.com/axios/axios/issues/5038|axios issue>, and specifically these comments:\n\nâ€¢ \"FYI, If you are a NodeJS user, using commonJS and want to use original interface of axios, you should use `require(\"axios\").default` instead of `require(\"axios\")`\" (<https://github.com/axios/axios/issues/5038#issuecomment-1270982590|comment>)  â€“ this applies to versions &gt;= 1.1.0 I believe\nâ€¢ <https://github.com/axios/axios/issues/5038#issuecomment-1272244005|Confirmation from the maintainer> that it was an accident and something they're trying to avoid in the future\n"
  },
  {
    "poster": {
      "poster_name": "Ben Anderson",
      "poster_handle": "banderson"
    },
    "time_stamp": "2022-12-23 12:54:52",
    "edited": {
      "time_stamp": "2022-12-23 12:56:02"
    },
    "text": "Why it matters here:\nâ€¢ By default, HubSpot projects (using the example template) bundle axios version `0.27.x` so that's what you get automatically\nâ€¢ If you install a more recent version of axios (&gt;= `1.1.x`) then the API as it's imported in node is different, so the code in the example file won't work as-is (`_var_ axios = require('axios');`)\nUsing webpack makes it a little more confusing because of how the build process transforms the content, so there are probably a bunch of ways to fix this, but here are two I'd recommend:\n\n1. Use the default axios instance provided automatically, which you can get by adding some webpack config a la _`externals: 'axios',`_ which will stop bundling an additional version and fall back to the one already in the environment, and things should Just Work :tm: \n2. Keep bundling a specific axios version but change the axios `require` according to that issue thread :point_up_2: \n3. Keep bundling a specific axios version but change the axios `require` to be an import instead `_import_ axios _from_ 'axios';` â€“ this worked but I am not sure how it combines with all the other webpack config options"
  }
]
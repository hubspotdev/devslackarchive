[
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-02-21 09:35:11",
    "text": "Question regarding generated JS/CSS files for custom modules. I have a module that has some JS that our client would like to use on non-HubSpot hosted pages - I was thinking that they may be able to direct link to the CSS/JS files the module generates so we don't have to maintain 2 separate copies of the same JS logic - however I see that when a module is updated - the absolute URL path changes (probably for cachebusting reasons). Is there a way to say \"give me the latest version\" via an absolute URL?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-02-21 11:16:36"
      },
      {
        "time_stamp": "2020-02-21 11:52:15"
      },
      {
        "time_stamp": "2020-02-21 11:53:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-02-21 11:16:36",
    "text": "<@UKJSMBW6A> you could always remove the JS from the “JS” Section of the module - and make a separate JS file.\n\nThen add that file to the html/hubl section of the module using the require_js function\n\n```{{ require_js(\"<http://example.com/path/to/footer-file.js>\", \"footer\") }}```\nThen the path will always be the same and you can grab it to be used on external sites as well."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-02-21 11:25:44",
    "text": "I dont know if there is a native hubl way to do this. The first thing that comes to mind is building a hubDB table with all of the pages that you need in it and looping through that. But Those will all need to be added manually so if there are a lot of pages this likely isnt a great solution.\n\nAlternatively if you dont have hubDB you could build a menu that has every page on it and loop through that menu. It’s a little hacky but it could allow you to grab all of the URL’s - it just takes a bit of setting up.\n\nWhat are you trying to grab all of the pages for?"
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-02-21 11:52:15",
    "text": "i've actually noticed that the URLs will change for separate JS/CSS files when updated too"
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-02-21 11:53:00",
    "text": "I actually came up with a somewhat clever workaround to just put a redirect inside the redirect manager to point to the latest absolute URL of the module assets. - Kinda hacky but does the trick"
  }
]
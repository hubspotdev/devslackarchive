[
  {
    "poster": {
      "poster_name": "Cheryl McNamee",
      "poster_handle": "cmcnamee"
    },
    "time_stamp": "2021-03-19 09:44:26",
    "text": "<@U01C87PNTDE> thank for that!  Would you happen to know why the same parameters might not work correctly when using them in a serverless function?\n\n```  axios\n    .get('<https://api.hubapi.com/hubdb/api/v2/tables/3487807/rows>', {\n      params: {\n        portalId: 8489056,\n        category: 'Commercial',\n        orderBy: '-featured',\n        orderBy: '-hs_created_at',\n      },\n    })```\nThe above returns the data ordered only by -hs_created_at and is ignoring the -featured value."
  },
  {
    "poster": {
      "poster_name": "Stephen Yager",
      "poster_handle": "stephen.yager"
    },
    "time_stamp": "2021-03-19 11:00:49",
    "text": "yes, because that is an object, and you have 2 of the same key for the object, which doesn't work"
  },
  {
    "poster": {
      "poster_name": "Stephen Yager",
      "poster_handle": "stephen.yager"
    },
    "time_stamp": "2021-03-19 11:02:06",
    "text": "i would say, maybe just hard code in your params into the URL"
  },
  {
    "poster": {
      "poster_name": "Cheryl McNamee",
      "poster_handle": "cmcnamee"
    },
    "time_stamp": "2021-03-19 11:26:10",
    "text": "<@U01C87PNTDE> that works perfectly, thank you!"
  },
  {
    "poster": {
      "poster_name": "Jake McLaren",
      "poster_handle": "info721"
    },
    "time_stamp": "2021-03-19 12:23:54",
    "text": "Thanks.  For the non-coding folks out there it would be nice if a hubdb table just had movable rows.\n\nThe client requested an alternate solution for now."
  }
]
[
  {
    "subtype": "tombstone",
    "text": "This message was deleted.",
    "time_stamp": "2019-07-25 12:13:29",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-07-25 12:16:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-25 12:16:40",
    "text": "I’m not following the specifics of the code but in situations like these I’ll throw a console.log of each if condition (your if and then else if) before you actually do the if statement to make sure those are true/false as you expect them to be"
  },
  {
    "poster": {
      "poster_name": "Francois-Xavier",
      "poster_handle": "francois.x.emond.b"
    },
    "time_stamp": "2019-07-25 13:09:11",
    "text": "hey everyone, I am trying to create a search engine for a FAQ page for my client but I am encountering a few issues:\n1.: I am using a HubSpot form to query the search\n2.: I want to use JQuery .click() to save the search string and parse it\n3.:I would like to take that string and use HUBL and HubDB to verify what words in the search String are also keywords in HubDB\n4.: I then want to dynamically populate a span or div with a ul/li that would contain possible answers based on keywords found in the user search query string\n\nso far I have...\n\n1.: the form for the search query. On a submit, it also sends an email containing the string to a remote address so that the marketing team can eventually add more question/answers in HubDB\n2.: I have a function that can detect the click and parse the string\n\nthat is it...\nI can't seem to figure how to assign the return value of my jquery function to a hubl var and then run it in HubDB to check the keywords.",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-25 13:15:29"
      },
      {
        "time_stamp": "2019-07-25 13:15:58"
      },
      {
        "time_stamp": "2019-07-25 13:18:41"
      },
      {
        "time_stamp": "2019-07-25 13:21:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-25 13:15:29",
    "text": "Is there a reason you are using a HubSpot form for this?  IT seems like this might be easier if you just build your own input. A HubSpot form will add a lot of markup and make it harder to grab values"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-07-25 13:15:58",
    "text": "Unless I mis-understand your goals"
  },
  {
    "poster": {
      "poster_name": "Francois-Xavier",
      "poster_handle": "francois.x.emond.b"
    },
    "time_stamp": "2019-07-25 13:18:41",
    "text": "I used jquery to select the input field and submit input. I used the HubSpot form because it made it that much easier to save the search query remotely as an email rather than find a way to add it to hubDB since the search engine is public and doesnt require any authentification."
  },
  {
    "poster": {
      "poster_name": "Francois-Xavier",
      "poster_handle": "francois.x.emond.b"
    },
    "time_stamp": "2019-07-25 13:21:50",
    "edited": {
      "time_stamp": "2019-07-25 13:22:30"
    },
    "text": "it seemed logical and simpler at the time, but since I am fairly uncertain of a way that would allow me to send the data collected with jquery to a hubl var... I am not to sure anymore that it was the best approach"
  }
]
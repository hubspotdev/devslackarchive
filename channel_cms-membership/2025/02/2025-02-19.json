[
  {
    "poster": {
      "poster_name": "Bob Balm",
      "poster_handle": "bob209"
    },
    "time_stamp": "2025-02-19 01:44:59",
    "edited": {
      "time_stamp": "2025-02-19 01:48:15"
    },
    "text": "Hey everyone! I'd love to hear everyone's take on the feasibility of building this concept on HubSpot's CMS:\n\nClient has two companies\n• a warehousing company (stores and ships goods to/from their warehouse, both with their own shipment company and others) \n• and a shipment company (arranges shipments to and from locations, both their own warehouse and other locations). \nBoth companies have a central system, a warehouse management system and a shipping management system, with their own customer portals, that allow end customers to log in and check their goods in stock, status of their shipments etc., and to create new shipments or goods.\n\nGiven that these portals are very basic and not connected, they want to replace those portals with a central one that's also connected to HubSpot.\n\nHubSpot has a couple major pluses for this use case:\n• Membership system that is easy to set up and customize\n• Easy to use page editor, giving them full customizability over their portal's look and feel without needing to know code\n• Custom modules, again adding to the flexibility of the portal setup\n• Serverless Functions, allowing for fetching and submitting data to and from the relevant external platforms, as well as the HubSpot portal itself\n• Of course things like easily exposing CRM data, forms, chatflows and CTA's to further enhance portal management\nBut since I'm not a seasoned developer, I've asked some advice from a third party, and they mentioned that they expect HubSpot to struggle with scaling up a portal like this, because it has no way to run complex business logic in the back-end. I'm not 100% sure what they mean by this. The way I see it, is that the custom modules in HubSpot provide an environment to do front-end with React, and that we can use Serverless functions to manage back-end logic such as integration with the core systems and HubSpot. Of course, Serverless functions have some *<https://developers.HubSpot.com/docs/guides/cms/content/data-driven-content/serverless-functions/overview#limits|limits>*, but I struggle to come up with use cases that would stretch these limits even if we scale the solution to include new functionality. Most of what I expect the portal to need to do is GET a list of records (like shipments) associated to the logged in contact's Company ID, or POST a new Shipment, Good, Order, etc.\n\nWould love to hear the community's take on this! What are some potential limitations in scaling that you foresee?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2025-02-19 17:47:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2025-02-19 17:47:08",
    "text": "Hey Bob,\nWe've done a lot to pull data from clients disparate systems and pull the data into HubSpot. Typically we try to get the data into HubSpot crm to present it on the page (which can be a much more effecient way to load data on the pages for the user).\nOne of the big pieces is if you're using HubSpot's lookups you need to be understanding of their rolling time limits on API calls as those are portal wide, just just for the user. But most of those types of things can be worked around if needed. Happy to discuss deeper if you're looking for a partner/support. Just let me know if you have any deeper questions."
  }
]
[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2023-05-23 07:31:38",
    "text": "Gooooood morning y'all. We're going to be making this channel public, so even more folks can join the conversation around js rendering. This will be done later today(within the next 6 hours or so). If you have any posts you dont want to be public in this channel, please remove them or edit them.  You can use the search feature to search in this channel for posts from you.\n\nThank y'all excited to bring JS Rendering to more awesome folks. :)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 07:33:06",
    "text": "is there a way to avoid CORS issues when fetching in a JS module client side? I want to build a search results module. Do I have to use a serverless function?",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-05-23 09:03:05"
      },
      {
        "time_stamp": "2023-05-23 09:10:13"
      },
      {
        "time_stamp": "2023-05-23 09:10:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 07:44:47",
    "text": "<@U04DVL5T2TE> is this still the case? I'm working on a new serverless function now"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 07:58:17",
    "text": "not 100% sure but i’d be surprised if this changed"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 08:00:06",
    "text": "I'm having that same issue where `hs project upload` doesn't upload the serverless function"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 08:00:28",
    "text": "it looks like past me suggested that it has to be in an `app` folder but that doesn't seem to be enough"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-05-23 08:10:02",
    "text": "<@U04DVL5T2TE> it looks like something probably changed here. I can't upload the serverless folder"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 08:11:10",
    "text": "i need to run an errand in a few minutes, plus i haven’t worked with this type of  serverless function since we last talked - <#C011F74BKQW|serverless-functions> might be a good place to get help from people better equipped"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 08:11:40",
    "text": "ok, thanks"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 08:14:46",
    "text": "actually can you try adding a `.` in your `outputPath` value in `cms-assets.json`?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 08:15:18",
    "text": "wait nevermind sorry confusing two things"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 08:15:42",
    "text": "alright"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 08:16:13",
    "text": "it might be that I'm missing app.json"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 08:16:25",
    "text": "unclear what goes in there, trying to find an example now"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 08:17:15",
    "text": "I think that was it"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 08:18:11",
    "text": "Ah yeah I was just looking into that"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 09:03:05",
    "text": "Assuming serverless functions are required, I'm stuck here unfortunately. I can't get past the error:\n```{\"error\":\"The endpoint GET results has not been configured for portal XXXXXXX\"}```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 09:10:13",
    "text": "should I expect the function to exist when I run `hs functions list`?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 09:10:22",
    "text": "maybe it's not deployed all the way?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 09:37:46",
    "text": "totally lost here, I don't know if the issue is related to js-rendering or to the serverless function."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 12:06:48",
    "text": "is it fine to use a regular serverless function instead of a project-based serverless function? The regular version seems to work and I cannot figure out why the project based version does not",
    "reply_count": 46,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-05-23 14:31:27"
      },
      {
        "time_stamp": "2023-05-23 14:38:14"
      },
      {
        "time_stamp": "2023-05-23 14:38:20"
      },
      {
        "time_stamp": "2023-05-23 14:38:29"
      },
      {
        "time_stamp": "2023-05-23 14:39:19"
      },
      {
        "time_stamp": "2023-05-23 14:41:08"
      },
      {
        "time_stamp": "2023-05-23 14:41:37"
      },
      {
        "time_stamp": "2023-05-23 14:42:06"
      },
      {
        "time_stamp": "2023-05-23 14:42:09"
      },
      {
        "time_stamp": "2023-05-23 14:42:25"
      },
      {
        "time_stamp": "2023-05-23 14:42:33"
      },
      {
        "time_stamp": "2023-05-23 14:42:54"
      },
      {
        "time_stamp": "2023-05-23 14:43:02"
      },
      {
        "time_stamp": "2023-05-23 14:43:04"
      },
      {
        "time_stamp": "2023-05-23 14:43:12"
      },
      {
        "time_stamp": "2023-05-23 14:43:14"
      },
      {
        "time_stamp": "2023-05-23 14:43:18"
      },
      {
        "time_stamp": "2023-05-23 14:43:55"
      },
      {
        "time_stamp": "2023-05-23 14:43:57"
      },
      {
        "time_stamp": "2023-05-23 14:46:09"
      },
      {
        "time_stamp": "2023-05-23 14:46:14"
      },
      {
        "time_stamp": "2023-05-23 14:46:59"
      },
      {
        "time_stamp": "2023-05-23 14:47:03"
      },
      {
        "time_stamp": "2023-05-23 14:47:14"
      },
      {
        "time_stamp": "2023-05-23 14:49:16"
      },
      {
        "time_stamp": "2023-05-23 14:49:28"
      },
      {
        "time_stamp": "2023-05-23 14:49:44"
      },
      {
        "time_stamp": "2023-05-23 14:50:19"
      },
      {
        "time_stamp": "2023-05-23 14:50:36"
      },
      {
        "time_stamp": "2023-05-23 14:50:54"
      },
      {
        "time_stamp": "2023-05-23 14:51:06"
      },
      {
        "time_stamp": "2023-05-23 14:51:13"
      },
      {
        "time_stamp": "2023-05-23 14:52:45"
      },
      {
        "time_stamp": "2023-05-23 14:54:54"
      },
      {
        "time_stamp": "2023-05-23 14:55:06"
      },
      {
        "time_stamp": "2023-05-23 14:57:05"
      },
      {
        "time_stamp": "2023-05-23 14:57:06"
      },
      {
        "time_stamp": "2023-05-23 14:57:14"
      },
      {
        "time_stamp": "2023-05-23 14:59:00"
      },
      {
        "time_stamp": "2023-05-23 15:00:06"
      },
      {
        "time_stamp": "2023-05-23 15:00:19"
      },
      {
        "time_stamp": "2023-05-23 15:03:32"
      },
      {
        "time_stamp": "2023-05-23 15:03:34"
      },
      {
        "time_stamp": "2023-05-23 15:07:18"
      },
      {
        "time_stamp": "2023-05-23 15:07:29"
      },
      {
        "time_stamp": "2023-05-23 15:30:45"
      }
    ]
  },
  {
    "subtype": "channel_convert_to_public",
    "text": "made this channel *public*. Any member in this workspace can see and join it.",
    "time_stamp": "2023-05-23 12:18:57"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:31:27",
    "text": "sorry for the slow reponse - it looks like you maybe got things working? i see your most recent builds has two subbuilds"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:38:14",
    "text": "no worries, I know you guys have a lot going on, I have it working via a separate serverless function"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:38:20",
    "text": "that sites outside of the project"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:38:29",
    "text": "but I cannot get it working otherwise — no idea why"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:39:19",
    "text": "I can try again right now to match up both folders if you are able to take a look"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:41:08",
    "text": "i think your most recent update was what i was going to suggest, the serverless.json looked not how i’d expect"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:41:37",
    "text": "and that you’d want that `method` property"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:42:06",
    "text": "k, just deployed with that version"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:42:09",
    "text": "a version with method"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:42:25",
    "text": "based on your\n```{\"error\":\"The endpoint GET results has not been configured for portal XXXXXXX\"}```\nerror that doesnt seem like the right endpoint name, it should be `test` i think based on your config rather than `results`"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:42:33",
    "text": "maybe you changed that since then"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:42:54",
    "text": "yea, \"test\" is a separate endpoint (that works)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:43:02",
    "text": "results is inside of the project"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:43:04",
    "text": "and does not work"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:43:12",
    "text": "the key in `serverless.json` is still `test` though"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:43:14",
    "text": "in the project"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:43:18",
    "text": "```\"test\": {\n      \"method\": \"GET\",\n      \"file\": \"results.js\"\n    }```"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:43:55",
    "text": "ah, yea, missed that"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:43:57",
    "text": "redploying again"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:46:09",
    "text": "so that endpoints returns a 404"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:46:14",
    "text": "the results version"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:46:59",
    "text": "would the \"projects\" version of the serverless function show up when running `hs functions list`?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:47:03",
    "text": "(because it doesn't)"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:47:14",
    "text": "my guess is yes but i’m not sure"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:49:16",
    "text": "I can try adding an empty `\n```\"appFunctions\": {}```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:49:28",
    "text": "or maybe something is missing from app.json"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:49:44",
    "text": "or maybe everything has to be wrapped in a src folder"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:50:19",
    "text": "I don't necessarily mind using a separate serverless function while some of this stuff gets figured out / moves out of beta"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:50:36",
    "text": "i think `src` would only be necessary if it was set as such in `srcDir` in `hsproject.json`"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:50:54",
    "text": "empty `appFunctions` is worth a try i think that was the solution last time?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:51:06",
    "text": "yea"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:51:13",
    "text": "I had that originally but let's see again"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 14:52:45",
    "edited": {
      "time_stamp": "2023-05-23 14:52:49"
    },
    "text": "its possible you need more in your `app.json`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:54:54",
    "text": "ok, trying that now"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:55:06",
    "text": "```{\n    \"name\": \"results\",\n    \"description\": \"\",\n    \"scopes\": [],\n    \"public\": true,\n    \"extensions\": {}\n  }```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:57:05",
    "text": "failed because of missing scopes"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:57:06",
    "text": "trying again"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:57:14",
    "text": "with scopes from private app"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 14:59:00",
    "text": "changing runtime to 16"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 15:00:06",
    "text": "set to non public in app.json"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 15:00:19",
    "edited": {
      "time_stamp": "2023-05-23 15:00:33"
    },
    "text": "(at least the error messages are helping now)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 15:03:32",
    "text": "k, moving in the right direction"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 15:03:34",
    "text": "got a 500 error"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 15:07:18",
    "text": "simplified version worked!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-05-23 15:07:29",
    "text": "thanks for your help <@U04DVL5T2TE>"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-05-23 15:30:45",
    "text": "awesome! sorry i dropped off there at the end"
  }
]
[
  {
    "poster": {
      "poster_name": "Thomas Bennedb√¶k",
      "poster_handle": "thomas_katalysator"
    },
    "time_stamp": "2017-11-21 04:49:08",
    "edited": {
      "time_stamp": "2017-11-21 06:29:41"
    },
    "text": "<@U24DCSJBE> A little late to the party, but here goes... :grinning:\n\n1) I would love to get rid of the `&lt;fieldset&gt;` elements in multi-column forms as they don't gel with flexbox. Perhaps just replace them with divs\n\n2) A colleague of mine suggested that you replace the `&lt;input type=\"submit&gt;` with a `&lt;button&gt;` element and a `&lt;span&gt;` nested inside that button, containing the button text. This way it would be easier to create custom submit buttons (icons, arrows and whatnot).\n\n3) Some of the forms default CSS is very specific, which makes it a hassle to override :sweat_smile:\n\nHere's a real example:\n\n```.hs-form-54a7c79e-abd4-4d92-8854-9e6c0421a569_d7ee22b6-773b-467c-9903-2533ca9a0852 fieldset.form-columns-3 .input {\nmargin-right: 8px;\n}```\n\nWould be nice if you could tune down the specificity, or even better, enable us to completely disable all default HubSpot styling of a form.\n\nThat was my 2 cents :smile:"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-21 06:12:14",
    "text": "replace input[type=\"submit\"] with button[type=\"submit\"] x :100:  yes"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2017-11-21 06:31:57",
    "text": "Yeah I mentioned this earlier. Don't forget to also log the feedback in the feedback survey that pops up occasionally in the new design manager."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2017-11-21 10:36:53",
    "text": ":thinking_face: interesting, definitely not late to the party <@U4W2EG8RY> :slightly_smiling_face: <@U7V9DQ31P>, your +1 to the submit button, is it for the same reason, to put icons etc in the button?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-21 10:38:41",
    "text": "I usually do, just figured the slack is possibly better since HS devs can ask me questions directly if they want more info."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-21 10:42:20",
    "text": "<@U24DCSJBE> yes, being able to use :before and :after pseudo selectors makes styling them much easier."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-21 10:46:04",
    "text": "I definitely agree on the submit buttons. I've been doing what Thomas posted, targeting very specifically the field's wrapper then adding befores/afters around the submit buttons to fake it. But this isn't as good as his suggestion.\n\nI don't know if I fully agree on getting rid of fieldsets - as I think there might be some accessibility reasons to use fieldset, not sure. If there are none, then by all means go for it, it would indeed make styling a bit easier."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2017-11-21 10:58:42",
    "text": ":thumbsup: gotcha, makes sense. I do believe there are accessibility benefits to the `&lt;fieldset&gt;` wrappers but I'll dig in on that to make sure. Regarding styling, and making that easier, do you have any example designs/forms/pages that you've completed recently that are a good example of a challenging implementation?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-21 12:26:19",
    "edited": {
      "time_stamp": "2017-11-21 12:30:51"
    },
    "text": "This design itself isn't super challenging but is an instance of where we implemented a custom select box \n<http://www.herbein.com/contact>\n\nYou'll see the down arrow is an after on the wrapping tag:\n.hs_industry_dropdown .input:after, .select-wrapper:after\n\nThink we used javascript to add the .select-wrapper class.(it's been awhile since i touched that site)\n\n<https://www.streamcreative.com/contact-us>\nThis site has the same sort of select box change, then the real pain in the butt is the submit button.(hover it)\nSince we're using input type submit instead of button, I had to do a lot of hacking the wrappers to get it to look right.\n\nThe day I worked on this - I immediately regretted getting creative with the button designs/animations."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2017-11-21 12:37:12",
    "text": "Would be nice see a lazy load images for website&amp;blog. Also placeholder is a nice solution\nThe idea in depth: <https://medium.freecodecamp.org/using-svg-as-placeholders-more-image-loading-techniques-bed1b810ab2c>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2017-11-22 10:48:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2017-11-21 12:40:31",
    "text": "Something I needed for a project:\nDifferent system pages (error 404, 500 etc.) per domain because it had different brand/designs",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2017-11-21 13:03:00"
      },
      {
        "time_stamp": "2017-11-21 13:47:40"
      },
      {
        "time_stamp": "2017-11-28 23:27:47"
      },
      {
        "time_stamp": "2017-11-28 23:28:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-21 12:40:33",
    "edited": {
      "time_stamp": "2017-11-21 12:42:13"
    },
    "text": "Another instance with custom forms:\n<https://www.lamacchiagroup.com/contact>\n\nSubmit button is centered, also has a floating triangle.\nNormally the triangle would be done as an after, but due to some other styling(think it was the centering) I couldn't get the after to look right. so I dropped it and went with a background image, that in browsers that support animating background position. I lost some browser compatibility going that route but it was worth it to not deal with hacking the structure of the forms.\n\nAlso a thing that would be nice.\nhaving a HubSpot option for labels appearing like placeholders.\n\nDesigners tend to like this form look a lot, and it's a pain in the butt to implement in hubSpot and still have the form be accessible.\n\nI admit to having dropped labels in some cases because implementing placeholders achieved what the designer wanted much easier than employing css and JS hacks and tricks to get the same effect the proper way."
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2017-11-21 13:03:00",
    "text": "I actually will be tackling same sort of task in near future quite likely. Except as different system templates based on language. I'm initially thinkin about turning the template into a file and wrapping necessary parts into a HubL if tags where I test which language the user is using. Or do some sort of a cookie setup to handle it. Have you come up with some solution for this that you'd like to share?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2017-11-21 13:47:40",
    "text": "Today I tried to do something similar as the langs too, but didn't worked. Because you have a \"primary\" domain and all the 404 errors are redirect to the primary and without slug. So there is no way to control it \"inside\" HS. At least I didn't found any variable like \"previous page\" before redirect in HubL (would be great and the easiest way to get it working I think).\nThe cookie base is a client side solution that should work if you use multidomain cookies I think.\nGood approach!"
  }
]
[
  {
    "poster": {
      "poster_name": "Gil Tchelet",
      "poster_handle": "gilt"
    },
    "time_stamp": "2023-03-22 04:30:10",
    "edited": {
      "time_stamp": "2023-03-22 04:57:54"
    },
    "text": "Hi, I am in the process of creating an integration between a ticketing CRM (called Kustomer) and HubSpot. The integration will create a transcript of a conversation from the CRM as a timeline event in HubSpot. The transcript timeline event will look similar to the <https://i.imgur.com/vAhk29W.png|native Intercom integration> (they don’t have one for Kustomer conversations). I have created the Timeline Event Template. However, I am not sure on the best way to create a conversation transcript token such as the one shown in my image via the API. Can this be done with a “string” token? It would need to be formatted a certain way I assume. Maybe there’s a simpler way to create HTML content inside a timeline event like an actual email. Perhaps you have some advice? Many thanks!!! :pray:",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-22 07:25:00"
      },
      {
        "time_stamp": "2023-03-22 08:05:51"
      },
      {
        "time_stamp": "2023-03-22 08:06:05"
      },
      {
        "time_stamp": "2023-03-22 08:06:25"
      },
      {
        "time_stamp": "2023-03-22 08:16:32"
      },
      {
        "time_stamp": "2023-03-22 08:36:11"
      },
      {
        "time_stamp": "2023-03-22 08:36:34"
      },
      {
        "time_stamp": "2023-03-22 08:38:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jerome Degl’innocenti",
      "poster_handle": "jerome.deglinnocenti"
    },
    "time_stamp": "2023-03-22 06:25:36",
    "text": "No it’s a serverless static using Gatsby"
  },
  {
    "text": "",
    "time_stamp": "2023-03-22 06:35:13"
  },
  {
    "poster": {
      "poster_name": "Jerome Degl’innocenti",
      "poster_handle": "jerome.deglinnocenti"
    },
    "time_stamp": "2023-03-22 06:36:23",
    "text": "I’m also testing in Postman the api. POST <https://api.hubapi.com/files/v3/files> and body json request above"
  },
  {
    "poster": {
      "poster_name": "Jerome Degl’innocenti",
      "poster_handle": "jerome.deglinnocenti"
    },
    "time_stamp": "2023-03-22 06:36:56",
    "text": "Getting error &gt;Error 415 Unsupported Media Type"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 07:25:00",
    "text": "yep a string property is going to be the best option, and you can use \\n to create new lines"
  },
  {
    "poster": {
      "poster_name": "Laura",
      "poster_handle": "laura414"
    },
    "time_stamp": "2023-03-22 07:40:19",
    "text": "Hello,\n\nIs there a way to get an object and its associations (v4) in the same request or do I need to get the associations separately? I’ve found that adding the `associations=companies` query parameter to a get contact by ID request works and returns an `associations` property in addition to the contact response, but it seems to be the v3 associations rather than v4:\n\n```\"associations\": {\n        \"companies\": {\n            \"results\": [\n                {\n                    \"id\": \"7148165620\",\n                    \"type\": \"contact_to_company\"\n                },\n                {\n                    \"id\": \"7113398483\",\n                    \"type\": \"contact_to_company_unlabeled\"\n                },\n                {\n                    \"id\": \"7148165620\",\n                    \"type\": \"contact_to_company_unlabeled\"\n                }\n            ]\n        }\n    }```",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-03-22 11:24:49"
      },
      {
        "time_stamp": "2023-03-22 11:25:11"
      },
      {
        "time_stamp": "2023-03-22 13:47:38"
      },
      {
        "time_stamp": "2023-03-22 13:51:11"
      },
      {
        "time_stamp": "2023-03-22 13:58:10"
      },
      {
        "time_stamp": "2023-03-22 14:00:42"
      },
      {
        "time_stamp": "2023-06-08 09:53:46"
      },
      {
        "time_stamp": "2023-06-09 09:53:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gil Tchelet",
      "poster_handle": "gilt"
    },
    "time_stamp": "2023-03-22 08:05:51",
    "text": "yep, I think I’ll need to use some REGEX and markup to make it look like that prior to sending it"
  },
  {
    "poster": {
      "poster_name": "Gil Tchelet",
      "poster_handle": "gilt"
    },
    "time_stamp": "2023-03-22 08:06:05",
    "text": "does the string token have limited characters <@U01QVR44MEY>?"
  },
  {
    "poster": {
      "poster_name": "Gil Tchelet",
      "poster_handle": "gilt"
    },
    "time_stamp": "2023-03-22 08:06:25",
    "text": "What happens if I have a really long transcript? Does it cut it at the limit or return an error?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 08:16:32",
    "text": "It would return an error but I don't think there's a super short limit, let me check"
  },
  {
    "poster": {
      "poster_name": "Gil Tchelet",
      "poster_handle": "gilt"
    },
    "time_stamp": "2023-03-22 08:36:11",
    "text": "If there is a limit, I would need to also add that limit to the payload I’m sending. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 08:36:34",
    "text": "I don't see any limit any where so I think you're good"
  },
  {
    "poster": {
      "poster_name": "Gil Tchelet",
      "poster_handle": "gilt"
    },
    "time_stamp": "2023-03-22 08:38:03",
    "text": "Nice, thanks"
  },
  {
    "poster": {
      "poster_name": "Saqib Rokadia",
      "poster_handle": "saqib"
    },
    "time_stamp": "2023-03-22 11:15:40",
    "edited": {
      "time_stamp": "2023-03-22 11:29:39"
    },
    "text": "Hi, we're looking for a way to get events on a contact from a 3rd party integration (Mailshake in this particular case).\n\nWe've queried the `<https://api.hubapi.com/events/v3/events>` end point and haven't found them there as those appear to only be marketing events.. Which endpoint should we be using to get those events (these appear to be 3rd party email events)?",
    "reply_count": 19,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-03-22 11:23:43"
      },
      {
        "time_stamp": "2023-03-22 11:33:50"
      },
      {
        "time_stamp": "2023-03-22 11:34:20"
      },
      {
        "time_stamp": "2023-03-22 11:34:44"
      },
      {
        "time_stamp": "2023-03-22 11:35:32"
      },
      {
        "time_stamp": "2023-03-22 11:35:39"
      },
      {
        "time_stamp": "2023-03-22 11:35:58"
      },
      {
        "time_stamp": "2023-03-22 11:39:24"
      },
      {
        "time_stamp": "2023-03-22 12:59:04"
      },
      {
        "time_stamp": "2023-03-22 13:20:55"
      },
      {
        "time_stamp": "2023-03-22 14:34:35"
      },
      {
        "time_stamp": "2023-03-22 16:43:19"
      },
      {
        "time_stamp": "2023-03-23 10:07:38"
      },
      {
        "time_stamp": "2023-03-23 10:15:41"
      },
      {
        "time_stamp": "2023-03-23 10:16:36"
      },
      {
        "time_stamp": "2023-03-23 10:16:56"
      },
      {
        "time_stamp": "2023-07-13 04:06:23"
      },
      {
        "time_stamp": "2023-07-14 10:08:37"
      },
      {
        "time_stamp": "2023-07-14 11:50:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 11:23:43",
    "text": "Can you share a screenshot of how these events appear on the contact record? I'm not familiar with Milkshake"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 11:24:49",
    "text": "v4 should return the same associations as v3, is this not what you're seeing?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 11:25:11",
    "text": "associations wouldn't change between endpoint versions (if they have the same capabilities)"
  },
  {
    "text": "I think these came through MailShake.",
    "time_stamp": "2023-03-22 11:33:50"
  },
  {
    "poster": {
      "poster_name": "Saqib Rokadia",
      "poster_handle": "saqib"
    },
    "time_stamp": "2023-03-22 11:34:20",
    "text": "Sorry autocorrect made that Milkshake instead of MailShake."
  },
  {
    "text": "Here's an example one from the HubSpot app...\n<https://app.HubSpot.com/ecosystem/20650707/marketplace/apps/sales/sales-enablement/mailshake>",
    "time_stamp": "2023-03-22 11:34:44"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 11:35:32",
    "edited": {
      "time_stamp": "2023-03-22 11:35:42"
    },
    "text": "Ok so those are notes and not events. you can pull all the associated notes for a particular deal using the search endpoint and the associated objects parameter"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 11:35:39",
    "text": "<https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "text": "",
    "time_stamp": "2023-03-22 11:35:58"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 11:39:24",
    "text": "To pull all the notes associated with a particular deal using POSTMAN and a private app token, follow these steps:\n\n1. Get the deal ID of the particular deal you want to fetch notes for.\n\n2. Open POSTMAN and create a new POST request to the following URL:\n\n```<https://api.hubapi.com/crm/v3/objects/notes/search>```\n3. Add the following required headers:\n\n- `Content-Type`: `application/json`\n- `Authorization`: `Bearer YOUR_PRIVATE_APP_TOKEN`\n\nReplace `YOUR_PRIVATE_APP_TOKEN` with your actual private app token.\n\n4. In the request body, add the following JSON to search for notes associated with the specified deal ID:\n\n```{\n  \"filterGroups\": [\n    {\n      \"filters\": [\n        {\n          \"propertyName\": \"associations.deal\",\n          \"operator\": \"EQ\",\n          \"value\": \"YOUR_DEAL_ID\"\n        }\n      ]\n    }\n  ]\n}```\nReplace `YOUR_DEAL_ID` with the actual deal ID you want to fetch notes for.\n\n5. Send the request, and POSTMAN will return the results containing all the notes associated with the specified deal.\n\nKeep in mind that the results will be paginated, so you might need to use the `after` parameter to fetch additional pages of results if there are more notes than the default limit."
  },
  {
    "poster": {
      "poster_name": "Saqib Rokadia",
      "poster_handle": "saqib"
    },
    "time_stamp": "2023-03-22 12:59:04",
    "text": "Thanks, looks like I need to regenerate the refresh token since I don't have the tickets scope. It might take me a bit before I can either generate a private app token or generate a new refresh token that has a tickets scope."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 13:20:55",
    "text": "sounds good"
  },
  {
    "poster": {
      "poster_name": "Laura",
      "poster_handle": "laura414"
    },
    "time_stamp": "2023-03-22 13:47:38",
    "text": "No, the above is what I get from `GET <https://api.hubapi.com/crm/v4/objects/contacts/{{contact_id}}?associations=companies>`. I would expect to see something like what I get for `GET <https://api.hubapi.com/crm/v4/objects/contacts/{{contact_id}}/associations/companies>`, which looks like this (with the `typeId` and `label`):\n```{\n    \"results\": [\n        {\n            \"toObjectId\": 7113398483,\n            \"associationTypes\": [\n                {\n                    \"category\": \"HubSpot_DEFINED\",\n                    \"typeId\": 279,\n                    \"label\": null\n                }\n            ]\n        },\n        {\n            \"toObjectId\": 7148165620,\n            \"associationTypes\": [\n                {\n                    \"category\": \"HubSpot_DEFINED\",\n                    \"typeId\": 279,\n                    \"label\": null\n                },\n                {\n                    \"category\": \"HubSpot_DEFINED\",\n                    \"typeId\": 1,\n                    \"label\": \"Primary\"\n                }\n            ]\n        }\n    ]\n}```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 13:51:11",
    "text": "Yeah it's primarily doing that because the first endpoint is specifically made for retrieving object properties (not associations) and the second endpoint is just meant for grabbing associations"
  },
  {
    "poster": {
      "poster_name": "Laura",
      "poster_handle": "laura414"
    },
    "time_stamp": "2023-03-22 13:58:10",
    "text": "Sounds like there’s no way to avoid making two separate calls then. Thanks for your replies!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 14:00:42",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Saqib Rokadia",
      "poster_handle": "saqib"
    },
    "time_stamp": "2023-03-22 14:34:35",
    "text": "We weren't able to find the data we were looking for in either the contact or deal's notes."
  },
  {
    "poster": {
      "poster_name": "Lorena Oyoko",
      "poster_handle": "lorena.oyoko"
    },
    "time_stamp": "2023-03-22 16:24:09",
    "text": "Hi all, I'm trying to retrieve the corresponding names to HubSpot owner ID (Users) via API. Does anyone know if this is possible, and perhaps where the API doc is for it?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-03-22 16:43:43"
      },
      {
        "time_stamp": "2023-03-22 16:43:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 16:43:19",
    "text": "those notes were on the deal are you sure you were checking the right deal? what was the search endpoint returning?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 16:43:43",
    "text": "You'll want to use this endpoint: <https://developers.HubSpot.com/docs/api/crm/owners>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 16:43:54",
    "text": "it is very possible"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-22 17:40:25",
    "text": "Is there anything that triggers off of a comment being made? Maybe a workflow could duplicate the comment to a note?"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-22 17:40:51",
    "text": "(not sure if this is complete BS or even possible, but that's the first place I'd look at)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-22 19:57:07",
    "text": "That is a really good idea, but unfortunately workflows don't support comment triggers yet (webhook also don't support comments). What do you think about this <@UHVJJUWFN> it's a pretty good idea right?"
  },
  null
]
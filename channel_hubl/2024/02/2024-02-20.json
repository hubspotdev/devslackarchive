[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-02-20 06:56:27",
    "edited": {
      "time_stamp": "2024-02-20 06:56:42"
    },
    "text": "isotope has this aren’t looking to build one from scratch"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-02-20 06:57:09",
    "text": "Thanks! it seems like that doesn't actually work unfortunately and the page still caches :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-02-20 06:58:42",
    "text": "can you use more quotes in the query? what happens if you lowercase ?"
  },
  {
    "poster": {
      "poster_name": "Megan Miller",
      "poster_handle": "millerm"
    },
    "time_stamp": "2024-02-20 07:47:01",
    "text": "Thank you! Do you have a link?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-02-20 07:56:56",
    "text": "<https://isotope.metafizzy.co/>"
  },
  {
    "poster": {
      "poster_name": "Megan Miller",
      "poster_handle": "millerm"
    },
    "time_stamp": "2024-02-20 07:58:01",
    "text": "Thank you!"
  },
  {
    "poster": {
      "poster_name": "Megan Miller",
      "poster_handle": "millerm"
    },
    "time_stamp": "2024-02-20 08:42:44",
    "text": "it looks like Isotope is just for filtering. Is there a search bar option?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-02-20 08:50:01",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-02-20 08:50:28",
    "text": "evrythign you set up for fitlering is searchable"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-20 10:42:09",
    "text": "Ah, that’s unfortunate. I’ve experienced something similar with HubDB-powered dynamic pages — even if the pages themselves aren’t cached, they seem to pull/generate from cached HubDB data. In that case, the only fix I’ve found to speed things up manually re-publishing the table from the web interface."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-02-20 10:42:48",
    "text": "Yeah its a bummer. Thanks though for your help!"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2024-02-20 14:02:00",
    "edited": {
      "time_stamp": "2024-02-20 14:02:13"
    },
    "text": "just read that if we use `{{ year }}` it breaks pre-rendering and downgrades to partial pre-rendering?\n\nIf that’s the case, is there anyway hs devs can fix this? Or recommend something else other than manual year updates?",
    "reply_count": 19,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2024-02-21 01:13:44"
      },
      {
        "time_stamp": "2024-02-21 01:32:41"
      },
      {
        "time_stamp": "2024-02-21 06:05:50"
      },
      {
        "time_stamp": "2024-02-21 06:15:12"
      },
      {
        "time_stamp": "2024-02-21 06:16:52"
      },
      {
        "time_stamp": "2024-02-21 06:19:47"
      },
      {
        "time_stamp": "2024-02-21 06:43:31"
      },
      {
        "time_stamp": "2024-02-21 06:55:18"
      },
      {
        "time_stamp": "2024-02-21 07:23:59"
      },
      {
        "time_stamp": "2024-02-21 07:24:42"
      },
      {
        "time_stamp": "2024-02-21 07:25:16"
      },
      {
        "time_stamp": "2024-02-21 07:26:57"
      },
      {
        "time_stamp": "2024-02-21 07:57:24"
      },
      {
        "time_stamp": "2024-02-21 07:58:48"
      },
      {
        "time_stamp": "2024-02-21 07:59:36"
      },
      {
        "time_stamp": "2024-02-21 08:10:23"
      },
      {
        "time_stamp": "2024-02-21 08:10:30"
      },
      {
        "time_stamp": "2024-02-21 08:11:12"
      },
      {
        "time_stamp": "2024-02-21 08:21:06"
      }
    ]
  }
]
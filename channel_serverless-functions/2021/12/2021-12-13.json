[
  {
    "poster": {
      "poster_name": "Angus Gibbs",
      "poster_handle": "agibbs"
    },
    "time_stamp": "2021-12-13 07:56:39",
    "text": "Hey James, have you checked the “event details” in the action logs of the workflow for the custom action to make sure that the outputs are showing up there in the response?"
  },
  {
    "poster": {
      "poster_name": "James Sheales",
      "poster_handle": "james.sheales"
    },
    "time_stamp": "2021-12-13 08:17:05",
    "edited": {
      "time_stamp": "2021-12-13 08:17:33"
    },
    "text": "Hi Angus, yes I have. The custom action runs without error, but trying to copy the 'email-validation' field to a property shows as 'Error: unable to update property'. So I assumed it is todo with my action not outputting correctly"
  },
  {
    "poster": {
      "poster_name": "Sarunas Kavaliauskas",
      "poster_handle": "sarunas.kavaliauskas"
    },
    "time_stamp": "2021-12-14 00:49:39",
    "edited": {
      "time_stamp": "2021-12-14 00:51:06"
    },
    "text": "Hi, trying to use HubSpot client in node serverless function. Using example of\n```  const newTeam = {\n    name: \"Testing Team\",\n    eventId: \"61101537317\",\n    captainUserId: 1,\n  };\n\n  const HubDbTableRowV3Request = {\n    path: \"test_path\",\n    name: \"test_title\",\n    childTableId: 1902373,\n    newTeam,\n  };\n  const tableIdOrName = \"Teams\";\n\n  (async () =&gt; {\n    try {\n      const apiResponse =\n        await HubSpotClient.cms.hubdb.rows.rowsApi.createTableRow(\n          tableIdOrName,\n          HubDbTableRowV3Request\n        );\n      console.log(\"Function executed\");\n\n      console.log(JSON.stringify(apiResponse.body, null, 2));\n    } catch (e) {\n      e.message === \"HTTP request failed\"\n        ? console.error(JSON.stringify(e.response, null, 2))\n        : console.error(e);\n    }\n  })();```\nGetting\n```Cannot read property 'hubdb' of undefined\"```\nAny thoughts ? Wrong npm version ?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-12-15 10:31:43"
      },
      {
        "time_stamp": "2021-12-16 01:52:31"
      }
    ]
  }
]
[
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 12:53:36",
    "text": "Any one with insight into this post: <https://integrate.HubSpot.com/t/publishing-blog-post-using-blog-post-api/14402>"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 12:58:25",
    "text": "```"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 12:58:50",
    "text": "```import requests\n\n\n#  Set the API endpoint\nAPIKEY_VALUE = \"XXX-X-X-XXX\"\nAPIKEY = \"?hapikey=\" + APIKEY_VALUE\nHS_API_URL = \"<http://api.hubapi.com>\"\n\n#  Define actions\nCANCEL = \"/cancel-publish\"\nPUBLISH = \"/schedule-publish\"\n\ndef schedule_post(blog_post_id):\n    \"\"\"\n    Publish, schedule or unpublish a blog post\n    POST /content/api/v2/blog-posts/:blog_post_id/publish-action\n    \"\"\"\n    xurl = \"/content/api/v2/blog-posts/:\" + str(blog_post_id) + PUBLISH\n    url = HS_API_URL + xurl + APIKEY\n    response = <http://requests.post|requests.post>(url)\n    print(response.status_code, response.content, response)\n\n\nschedule_post(6612191199)```"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 12:59:50",
    "text": "I am able to create posts, but unable to publish the draft that I create using a create_post function"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:00:05",
    "text": "```def create_blog_post():\n    \"\"\"Create a new blog post\n    POST /content/api/v2/blog-posts\n    \"\"\"\n    xurl = \"/content/api/v2/blog-posts\"\n    url = HS_API_URL + xurl + APIKEY\n    headers = { \"content-type\" : \"application/json\" }\n    response = <http://requests.post|requests.post>(url, headers=headers, data=json.dumps(new_post))\n    print(response.status_code, response.content, response)\n\ncreate_blog_post()```"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:00:12",
    "text": "make sure it's the full epoch time down to the milliseconds"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:00:29",
    "text": "Is there a number of digits?",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-26 13:01:06"
      },
      {
        "time_stamp": "2018-11-26 13:01:43"
      },
      {
        "time_stamp": "2018-11-26 13:30:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:00:33",
    "text": "and that you trigger the publish with this api: <https://developers.HubSpot.com/docs/methods/blogv2/post_blog_posts_blog_post_id_publish_action>"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:01:06",
    "text": "<https://developers.HubSpot.com/docs/faq/how-should-timestamps-be-formatted-for-HubSpots-apis>"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:01:08",
    "text": "yes so the schedule_posts function uses this endpoint"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:01:43",
    "text": "this might also help you <https://currentmillis.com/>"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:02:37",
    "text": "I also tried setting the epoch time dynamically using Pythons time.time()"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:09:24",
    "text": "Do I need to create a JSON object for publishing a post?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:10:04",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:10:40",
    "text": "e.g. `{\"action\": \"schedule-publish\"}`"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:12:00",
    "text": "```#  Define actions\nCANCEL = \"/cancel-publish\"\nPUBLISH = \"/schedule-publish\"\n\nACTION = {\"action\": PUBLISH} \n\ndef schedule_post(blog_post_id):\n    \"\"\"\n    Publish, schedule or unpublish a blog post\n    POST /content/api/v2/blog-posts/:blog_post_id/publish-action\n    \"\"\"\n    xurl = \"/content/api/v2/blog-posts/:\" + str(blog_post_id) + PUBLISH\n    url = HS_API_URL + xurl + APIKEY\n    response = <http://requests.post|requests.post>(url)\n    print(response.status_code, response.content, response)\n\n\nschedule_post(6615989620)```"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:12:26",
    "text": "So if the ACTION variable is my JSON object how do I properly include it in my function?"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:12:47",
    "text": "Should response = ACTION?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:16:33",
    "text": "the json should be sent in the body of the request message"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:16:45",
    "text": "Thank you."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:16:50",
    "text": ":thumbsup:"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:20:42",
    "edited": {
      "time_stamp": "2018-11-26 13:34:16"
    },
    "text": "```#  Define JSON objects for each action\nPUBLISH = {\"action\": \"schedule-publish\"}\nCANCEL = {\"action\": \"cancel-publish\"}\n\ndef schedule_post(blog_post_id):\n    \"\"\"\n    Publish, schedule or unpublish a blog post\n    POST /content/api/v2/blog-posts/:blog_post_id/publish-action\n    \"\"\"\n    xurl = \"/content/api/v2/blog-posts/:\" + str(blog_post_id) + \"/schedule-publish\"\n    url = HS_API_URL + xurl + APIKEY\n    response = <http://requests.post|requests.post>(url)\n    headers = { \"content-type\" : \"application/json\" }\n    response = <http://requests.post|requests.post>(url, headers=headers, data=PUBLISH)\n    print(response.status_code, response.content, response)\n```"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:20:50",
    "text": "Here is my updated function"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:23:12",
    "text": "I am now receiving a 500 error instead of a 404"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:23:47",
    "text": "```500 b'&lt;html&gt;\\r\\n&lt;head&gt;&lt;title&gt;500 Internal Server Error&lt;/title&gt;&lt;/head&gt;\\r\\n&lt;body bgcolor=\"white\"&gt;\\r\\n&lt;center&gt;&lt;h1&gt;500 Internal Server Error&lt;/h1&gt;&lt;/center&gt;\\r\\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\\r\\n&lt;/body&gt;\\r\\n&lt;/html&gt;\\r\\n' &lt;Response [500]&gt;```"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-11-26 13:30:11",
    "text": "i believe it should be a total of 12 digits"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-26 13:35:00",
    "text": "Trying adding the portal id to the request"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:37:45",
    "text": "Would I add that to the JSON object in the body?"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:37:54",
    "text": "as a second field in the JSON object?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-26 13:44:20",
    "text": "In the query string of the URL"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:45:50",
    "text": "\"/content/api/v2/blog-posts/:\" + str(blog_post_id) + \"/schedule-publish\" + str(PORTAL_ID)"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-26 13:46:51",
    "text": "\"/content/api/v2/blog-posts/:\" + str(blog_post_id) + \"/schedule-publish?\" + str(PORTAL_ID)"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:46:59",
    "text": "thank you!"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:51:51",
    "text": "Receive same error.  Updated function below:"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 13:51:52",
    "text": "```#  Define JSON objects for each action\nPUBLISH = {\"action\": \"schedule-publish\"}\nCANCEL = {\"action\": \"cancel-publish\"}\n\ndef schedule_post(blog_post_id):\n    \"\"\"\n    Publish, schedule or unpublish a blog post\n    POST /content/api/v2/blog-posts/:blog_post_id/publish-action\n    \"\"\"\n    xurl = \"/content/api/v2/blog-posts/:\" + str(blog_post_id) + \"/schedule-publish?\" + str(PORTAL_ID)\n    url = HS_API_URL + xurl + APIKEY\n    response = <http://requests.post|requests.post>(url)\n    headers = { \"content-type\" : \"application/json\" }\n    response = <http://requests.post|requests.post>(url, headers=headers, data=PUBLISH)\n    print(response.status_code, response.content, response)```"
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2018-11-26 14:56:53",
    "text": "<@UAD2SSNCW> by the look of it, the `url` variable would look something like: ```<http://api.hubapi.com/content/api/v2/blog-posts/:[post_id]/schedule-publish?[portal_id][api_key]>```\n`.../schedule-publish` is not the endpoint you want, but `.../publish-action` is. Also, you wouldn't want the `:` before the post ID. Additionally, any query parameters should be set up as key/value pairs, each pair separated by `&amp;`. I also think HS API requires the secure HTTPS protocol. So you'd want the URL to look like so: ```<https://api.hubapi.com/content/api/v2/blog-posts/[post_id]/publish-action?portalId=[portal_id]&amp;hapikey=[api_key]>```\nI've found it's helpful to print out the variables you're putting together (i.e. print the `url` and `PUBLISH` variables to the console, so you can ensure they've been set up correctly.) It's also helpful to inspect the requests you're sending, using something like <https://requestbin.fullcontact.com/>"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-11-26 14:58:41",
    "text": "Any chance you can repost  :) :) <@UDC6ATL20> "
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 15:08:13",
    "text": "Once I add the SSL I no longer receive the 500 error.  New error below:"
  },
  {
    "poster": {
      "poster_name": "jdlayden",
      "poster_handle": "jdlayden"
    },
    "time_stamp": "2018-11-26 15:08:15",
    "text": "```(Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1051)')))```"
  },
  null,
  null
]
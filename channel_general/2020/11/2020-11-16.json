[
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2020-11-16 01:16:29",
    "text": "Sorry for re-asking, is this Serverless scripting the only way?"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-16 03:11:44",
    "text": "Depends on what you need, but HubSpot did release a new API for form submissions recently that bypases the need for authentication"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-16 03:12:23",
    "text": "If using any other API, then yes you would need serverless functions as other HubSpot APIs don't support ajax"
  },
  {
    "poster": {
      "poster_name": "Intland Software",
      "poster_handle": "wp-plugins"
    },
    "time_stamp": "2020-11-16 03:50:19",
    "edited": {
      "time_stamp": "2020-11-16 03:58:53"
    },
    "text": "Thanks!\n\nBut can't we enable CORS in HubSpot CMS somehow? Then we could use the JS script in the HubSpot CMS, to call our PHP script on our servers, that already handles the communication with that third party API."
  },
  {
    "poster": {
      "poster_name": "Bruce Jackson",
      "poster_handle": "bruce.jackson"
    },
    "time_stamp": "2020-11-16 07:22:53",
    "text": "Hello - I'm trying to use workflow webhooks to process some form data. The docs are here:\n<https://knowledge.HubSpot.com/workflows/how-do-i-use-webhooks-with-HubSpot-workflows#verify-request-signatures-in-workflow-webhooks>\nHowever, how can you validate that the request is coming from HubSpot?? You can;t add custom headers, so...?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-11-16 07:47:23",
    "text": "Hey ya’ll! We have a <https://community.HubSpot.com/t5/CMS-Development/Now-Live-Exclusive-CMS-Hub-AMA-Nov-16/td-p/386416|CMS Hub AMA> happening this week on the Community.  Some smart folks from HubSpot will be answering your questions."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-11-16 08:21:45",
    "text": "<@U01FAKXKF4G> if you want to use HubSpot natively to make authenticated API calls from the front end of your website, serverless if the best path. If you have an externally hosted server executing code, you can certainly call that from the front end of your website if it is not authenticated. CORS for that server would not be configured in HubSpot, however, it would be externally configured."
  },
  {
    "poster": {
      "poster_name": "Lukas Pleva",
      "poster_handle": "lpleva"
    },
    "time_stamp": "2020-11-16 08:34:36",
    "text": "Hi all! I am the Product Manager of the team that works on Website Grader. As always, we welcome any and all feedback!\n\n&gt; there is a cache period. I am unsure what the length is, though\nCurrently, the results are cached for 15 minutes. If the grade run errors out, that error is cached for only 1 minute. We reserve the right to change that in the future as needed, though :slightly_smiling_face:\n\n&gt; If you run lighthouse in Chrome you will get a pretty similar result\nFYI, Website Grader is powered by Google Lighthouse behind the scenes.\n\n&gt; if anyone gets that tap target flag on the grader, try this: <https://www.seoptimer.com/tap-target-size-test> it helped me find the culprit.\nFYI, we're in the process of enhancing the SEO Recommendations tool (under Marketing &gt; Planning and Strategy &gt; SEO &gt; Recommendations) to give you the same recommendations as Website Grader, but with additional details that will help you track down the specific issue(s) causing the audit to fail."
  },
  {
    "poster": {
      "poster_name": "Intland Software",
      "poster_handle": "wp-plugins"
    },
    "time_stamp": "2020-11-16 08:58:45",
    "text": "We tried to go with the second option, it doesn't need authentication (htpasswd, etc.), but when some HubSpot-hosted page tries to use it, it gives this in the console:\n\n_\"Access to XMLHttpRequest at '<https://our-external-website.com/script.php?paramater=1>' from origin '<https://our-HubSpot-website.com>' has been blocked by CORS policy: Request header field content-type is not allowed by Access-Control-Allow-Headers in preflight response.\"_\n\nStrange thing is, that it worked a couple of months ago."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-11-16 08:59:40",
    "text": "Yea, the CORS policy of your external service would need to be updated to support requests from your website."
  }
]
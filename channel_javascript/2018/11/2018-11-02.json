[
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-02 07:59:48",
    "text": "adding `#hs-open-chat` to the end of teh url via link of JS will trigger the messages to open"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 08:33:45",
    "edited": {
      "time_stamp": "2018-11-02 08:34:00"
    },
    "text": "ahh, haven’t done this specific thing but all you should need to do is find the button for the chat widget and do a .click(); on it"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-02 10:00:56",
    "text": "the hash method is built in to messages"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-02 10:15:59",
    "text": "Sorry guess I’m still confused as to what you’re asking.\n\nI thought you were trying to make it so you could have a button other than the messages button that when clicked would trigger the messages UI."
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-11-02 13:49:14",
    "text": "So I have a fun situation where a client wants to use an icon within the submit buttons (re: the only element of) of an HS form...\n\nI've been attempting to get the lovely thing to work with using ```::before``` or ```after```.... no dice. However, I can successfully inject the it within a &lt;button&gt; element with some jquery in the custom module I'm building this thing in using the following code\n\n```$(window).on('load', function() {\n\t$( 'input.hs-button.primary.large' ).replaceWith('&lt;button type=\"submit\" value=\"\" class=\"hs-button x-form-cta\" data-reactid=\".hbspt-forms-0.4.1.0\"&gt;  &lt;i class=\"fas fa-chevron-right\"&gt;&lt;/i&gt;  &lt;/button&gt;');\n});```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 13:49:55",
    "text": "will need to use onFormReady"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-11-02 13:50:56",
    "text": "Word. Do you happen to know if the &lt;button&gt; will cause an issue for the form submission functions or if I'm creating a security issue with the replacement?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 13:51:32",
    "text": "i dont think you create any security issues"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 13:51:46",
    "text": "<https://developers.HubSpot.com/manipulating-forms-with-jquery>"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-11-02 13:52:17",
    "text": "ah thanks! I've been in mad google mode... but hadn't found anything overly helpful. I'll dig in"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 13:52:36",
    "text": "yeah, took me a while to figure that out"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 13:52:42",
    "text": "enjoy"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-11-02 13:58:39",
    "text": "For the record, you can't use a pseudoelement with an input type=submit because it's self-closing. It can't have any content in it, including pseudoelements."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-11-02 13:58:44",
    "text": "If you weren't aware."
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-11-02 14:00:46",
    "text": "Thanks <@U3A4KEWK1> -- I realized you couldn't, but hadn't logic-ed out the reason."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-11-02 14:01:13",
    "text": "It's kind of an obscure point :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:01:42",
    "text": "the form submit  is wrapped in a div or something, right?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:01:53",
    "text": "off the top of my head"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-11-02 14:03:13",
    "text": "Yeah, .hs_submit &gt; .actions &gt; .hs-button, or something"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:03:19",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-11-02 14:03:20",
    "text": "Or possibly the other way around"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-11-02 14:04:18",
    "text": "I've definitely \"faked\" buttons with pseudoelements using those wrappers before"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-02 14:05:04",
    "text": "set opacity of input to 0"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2018-11-02 14:05:15",
    "edited": {
      "time_stamp": "2018-11-02 14:05:38"
    },
    "text": "Hey <@UDFTHC6PK> I previously used :before on the .actions wrapper and it seems to work great"
  }
]
[
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-16 13:56:32",
    "text": "INCEPTION.  A  HubL variable within a variable (or conditional).\n\nI'm not sure this is possible yet but this would be awesome.\n<https://www.loom.com/share/684c2af825c94b6ba6f8ca6aa42e8538>",
    "reply_count": 47,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2022-11-16 13:56:47"
      },
      {
        "time_stamp": "2022-11-16 14:15:28"
      },
      {
        "time_stamp": "2022-11-16 14:23:41"
      },
      {
        "time_stamp": "2022-11-16 14:36:58"
      },
      {
        "time_stamp": "2022-11-16 14:53:28"
      },
      {
        "time_stamp": "2022-11-16 14:54:15"
      },
      {
        "time_stamp": "2022-11-16 14:54:45"
      },
      {
        "time_stamp": "2022-11-16 15:00:32"
      },
      {
        "time_stamp": "2022-11-16 15:07:07"
      },
      {
        "time_stamp": "2022-11-16 15:08:59"
      },
      {
        "time_stamp": "2022-11-16 15:14:22"
      },
      {
        "time_stamp": "2022-11-16 15:14:49"
      },
      {
        "time_stamp": "2022-11-16 15:15:22"
      },
      {
        "time_stamp": "2022-11-16 15:16:34"
      },
      {
        "time_stamp": "2022-11-16 15:17:00"
      },
      {
        "time_stamp": "2022-11-16 15:19:14"
      },
      {
        "time_stamp": "2022-11-16 15:47:00"
      },
      {
        "time_stamp": "2022-11-16 17:02:58"
      },
      {
        "time_stamp": "2022-11-16 17:03:29"
      },
      {
        "time_stamp": "2022-11-17 09:40:33"
      },
      {
        "time_stamp": "2022-11-17 09:43:08"
      },
      {
        "time_stamp": "2022-11-17 09:46:40"
      },
      {
        "time_stamp": "2022-11-17 09:59:43"
      },
      {
        "time_stamp": "2022-11-17 10:41:42"
      },
      {
        "time_stamp": "2022-11-17 12:14:16"
      },
      {
        "time_stamp": "2022-11-17 12:16:59"
      },
      {
        "time_stamp": "2022-11-17 12:18:29"
      },
      {
        "time_stamp": "2022-11-17 12:22:11"
      },
      {
        "time_stamp": "2022-11-17 12:23:23"
      },
      {
        "time_stamp": "2022-11-17 12:28:07"
      },
      {
        "time_stamp": "2022-11-17 12:34:56"
      },
      {
        "time_stamp": "2022-11-17 12:38:01"
      },
      {
        "time_stamp": "2022-11-17 12:42:26"
      },
      {
        "time_stamp": "2022-11-17 12:42:52"
      },
      {
        "time_stamp": "2022-11-17 12:51:24"
      },
      {
        "time_stamp": "2022-11-17 13:10:28"
      },
      {
        "time_stamp": "2022-11-17 13:30:52"
      },
      {
        "time_stamp": "2022-11-17 13:31:14"
      },
      {
        "time_stamp": "2022-11-17 13:31:37"
      },
      {
        "time_stamp": "2022-11-17 13:52:05"
      },
      {
        "time_stamp": "2022-11-17 13:53:49"
      },
      {
        "time_stamp": "2022-11-17 13:55:44"
      },
      {
        "time_stamp": "2022-11-17 13:56:27"
      },
      {
        "time_stamp": "2022-11-17 14:04:25"
      },
      {
        "time_stamp": "2022-11-17 14:48:09"
      },
      {
        "time_stamp": "2022-11-17 14:53:28"
      },
      {
        "time_stamp": "2022-11-17 14:54:00"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2022-11-16 13:56:47"
  },
  {
    "poster": {
      "poster_name": "Bernardo Salazar",
      "poster_handle": "bernardo"
    },
    "time_stamp": "2022-11-16 14:15:28",
    "edited": {
      "time_stamp": "2022-11-16 14:16:11"
    },
    "text": "Hi <@UA5DFM7CK>, maybe you can use ~ to join example:\n\n{{ \"col_\" ~ col_num ~ \"_size\" }}"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-16 14:23:41",
    "text": "<@UE5D6CXPA> thanks for the suggestion but that doesn't seem to do the trick"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 14:36:58",
    "edited": {
      "time_stamp": "2022-11-16 14:37:49"
    },
    "text": "I mean you could just sent it as an object, so like\n```{% set col = {\"size\": 5, \"num\": 3} %}\n{{ col.size }}\n{{ col.num }}```\nI know this isn't exactly what you want but might be a little closer"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-16 14:53:28",
    "text": "<@U01QVR44MEY> Thanks for the idea.  I'm actually doing that in placed.  It's more so I need to be able to pass a variable through the macro so I can do something like this.\n\n{{ col_{{num}}.size }}\n\nThat way I can define `{{num}}` in the macro. What i'm attempting it definitely pretty complex."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-16 14:54:15",
    "text": "<@U01QVR44MEY> thanks for the props on my background. I do a lot of youtube vids. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 14:54:45",
    "text": "Yeah it definitely is a little conplex have you tried:\n```{{col_~num~_size}}```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 15:00:32",
    "text": "Yep the above doesn't work, just outputs the num value"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 15:07:07",
    "text": "BINGO!\n```{% set num = 5 %}\n\nnum set\n{% set f_5_N = 10 %}\n&lt;br&gt;\nrandom set\n&lt;br&gt;\nprinted value:\n&lt;br&gt;\n{% set inception = \"{{ f_\"~num~\"_N }}\" %}\n\n{{ inception }}```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 15:08:59",
    "text": "<@UA5DFM7CK>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 15:14:22",
    "text": "Loving the youtube channel"
  },
  {
    "text": "<@U01QVR44MEY> yes!!",
    "time_stamp": "2022-11-16 15:14:49"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 15:15:22",
    "text": "Hate to admit it but I haven't seen inception, I really need to"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-16 15:16:34",
    "text": "Def. Check it out. It will mess with your head in a good way."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-16 15:17:00",
    "text": "Thanks for the help! :facepunch::skin-tone-3:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 15:19:14",
    "text": "Of course, I'll definitely be using this functionality in the future"
  },
  {
    "text": "<@U01QVR44MEY> thought we had it but just got back to my laptop and tried out that syntax. Doesn't like it unless my syntax is off",
    "time_stamp": "2022-11-16 15:47:00"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 17:02:58",
    "text": "Yes, you need to define the variable before you can use it, so mobile_stack would be:\n```{% set mobile_stack = \"{{ col_\"~test~\"_mobile_stack }}\" %}```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-16 17:03:29",
    "text": "then you can use that value by using this `{{ mobile_stack }}`"
  }
]
[
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "connorwbarley"
    },
    "time_stamp": "2019-11-29 09:24:24",
    "text": "hey <@UDU6KEBFB>, you can create future tasks! the timestamp just needs to be in the future"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-11-29 09:24:50",
    "text": "awesome thanks!"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-11-29 13:50:02",
    "edited": {
      "time_stamp": "2019-11-29 14:19:49"
    },
    "text": "hey guys, I'm about to try something new with the API and just like to know if you think its feasible before investing too much time in it. this is how it goes: My goal is to create an app that will create new deal at a specific date when an open deal is closed won with a custom date property specifying the date of the new deal creation. My plan is to leverage the webhook subscription to look for changes on the property deal stage, then i'll filter webhook response with a if/else branch to get the id only if the deal is closed won. Then, i'll use the get recent modified deals api and filter for the id I'm interested in to get the custom date property of that closed deal... after that I'll delay the next action to this date and use the create deal api to create the new deal. I think it works. What do you think? Thanks for your help!",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-12-02 07:32:42"
      },
      {
        "time_stamp": "2019-12-02 14:58:01"
      },
      {
        "time_stamp": "2019-12-03 16:42:03"
      },
      {
        "time_stamp": "2019-12-04 08:45:57"
      },
      {
        "time_stamp": "2019-12-05 02:01:47"
      },
      {
        "time_stamp": "2019-12-05 12:45:24"
      }
    ]
  }
]
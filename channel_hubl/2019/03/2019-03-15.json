[
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-15 07:20:40",
    "text": "I'm using HubDB to organize a catalogs/brochures page full of PDFs. Migrating it from their existing site. They have the file size listed next to the download PDF link. All the files are uploaded through the file manager but since there isn't a document/file picker had to use the URL input."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-15 07:21:27",
    "text": "would be great to automate the file size instead of adding another column"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-15 07:22:39",
    "text": "maybe it would make sense to instead add a filepicker (like the image picker but any file) column type that would output an array of values, one being the file's size. Another could be upload date, etc..."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-15 07:23:02",
    "text": "that way it would be limited to just files hosted within the file manager"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:00:41",
    "text": "Is there a way to get the unique ID for the instance of a module? For example, if I want to generate an ID for a module and there might be multiple copies of it on the same page.",
    "reply_count": 18,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-03-15 09:01:33"
      },
      {
        "time_stamp": "2019-03-15 09:01:35"
      },
      {
        "time_stamp": "2019-03-15 09:01:41"
      },
      {
        "time_stamp": "2019-03-15 09:01:47"
      },
      {
        "time_stamp": "2019-03-15 09:02:01"
      },
      {
        "time_stamp": "2019-03-15 09:03:50"
      },
      {
        "time_stamp": "2019-03-15 09:05:03"
      },
      {
        "time_stamp": "2019-03-15 09:20:49"
      },
      {
        "time_stamp": "2019-03-15 09:21:07"
      },
      {
        "time_stamp": "2019-03-15 09:21:21"
      },
      {
        "time_stamp": "2019-03-15 09:21:34"
      },
      {
        "time_stamp": "2019-03-15 09:21:43"
      },
      {
        "time_stamp": "2019-03-15 09:22:03"
      },
      {
        "time_stamp": "2019-03-15 09:22:04"
      },
      {
        "time_stamp": "2019-03-15 09:22:29"
      },
      {
        "time_stamp": "2019-03-15 09:22:57"
      },
      {
        "time_stamp": "2019-03-15 09:23:39"
      },
      {
        "time_stamp": "2019-03-15 09:25:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:01:33",
    "edited": {
      "time_stamp": "2019-03-15 09:02:00"
    },
    "text": "think the variable name is `{{module.name}}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:01:35",
    "text": "try that"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-15 09:01:41",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:01:47",
    "text": "let me know if it works too I always forget to make a note of this"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-15 09:02:01",
    "text": "john let me in on that secret and i use it as an id in all of modules now"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:03:50",
    "text": "hmm I have a note saying just `{{name}}` try that if `{{module.name}}` fails, let me know which works definitely want to log that"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-03-15 09:05:03",
    "text": "Yeah I believe {{ name }} should do it ^"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:07:49",
    "text": "canâ€™t remember how I did it, but I remember having a similar problem and I think I found a javascript way of getting it - not 100% sure though"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:20:49",
    "text": "That did it, thanks!"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:21:07",
    "text": "Couldn't find it in the documentation"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:21:21",
    "text": "so it was {{name}}?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:21:34",
    "text": "Yeah"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:21:43",
    "text": "I didn't actually try module.name"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:22:03",
    "text": "module.name does not seem to be anything"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:22:04",
    "text": "{{name}} is safer to use anyways"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 09:22:29",
    "text": "{{module.name}} could get screwey if someone created a field called name"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:22:57",
    "text": "I think \"name\" is one of the forbidden names that HubSpot won't let you use"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-03-15 09:23:39",
    "text": "Along with \"label\" and \"body\" and probably some others that I don't know."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-15 09:25:54",
    "text": "{{ dennisrulz }} is encouraged"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-03-15 14:38:29",
    "text": "Best way would be to make a HEAD request in JS and extract the `content-length` header"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-03-15 14:40:09",
    "text": "assuming that URL allowed CORS requests"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-03-15 14:42:11",
    "text": "though it would be much more efficient to do this once. You could write a script that reads your hubdb table, loads each file and writes the size back to hubdb"
  },
  {
    "poster": {
      "poster_name": "Jessica King",
      "poster_handle": "jessica.king"
    },
    "time_stamp": "2019-03-15 16:26:03",
    "text": "Is there a way to access the value of a custom module on a website page from another website page?\nUse case: I am looping through an array of page id's and each page has a thumbnail custom module that I'd like to pull the image source from. Unfortunately, I am not able to set these pages up as a blog since each one of them is highly customized.\nHere's what I have so far. I'm able to correctly pull the page id, but I'm not sure what to do with it after that.\n`{% for item in module.case_study %}\n\t{% if page_by_id(item) is defined %}\n\t\t&lt;div class=\"page\"&gt;\n      &lt;img src=\"{{ item.widgets.P3_March2019_Case-Study-Thumbnail.image.src }}\" /&gt;\n    &lt;/div&gt;\n\t{% endif %}\n{% endfor %}`",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-15 16:36:03"
      },
      {
        "time_stamp": "2019-03-15 17:43:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-03-15 16:36:03",
    "text": "You would have to assign it to a variable and then you can play around with it. In your example, you could do something like\n\n```\n{% for item in module.case_study %}\n\t{% if page_by_id(item) is defined %}\n\n\t\t{% set page = page_by_id(item) %}\n\n\t\t&lt;div class=\"page\"&gt;\n\t\t\t&lt;img src=\"{{ page.widgets.P3_March2019_Case-Study-Thumbnail.image.src }}\" /&gt;\n\t\t&lt;/div&gt;\n\n\t{% endif %}\n{% endfor %}\n```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-15 17:43:08",
    "text": "This is what hubdb is for "
  }
]
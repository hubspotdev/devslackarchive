[
  {
    "poster": {
      "poster_name": "Paskal Wenk",
      "poster_handle": "pw"
    },
    "time_stamp": "2024-07-19 03:19:28",
    "text": "Hello everyone,\n\nI am currently trying to retrieve data such as the quantity of a product from the quote line item. is there a possibility in the workflows to retrieve the quantity of the product?\n\nThe idea is as follows, we sell product a, which charges a budget for customer x and then sell product b, which is deducted from customer x's budget with the quantity.\nI also understand that deal line items are not the same as quote line items, is that correct?\nBecause in a deal you only ever see the line items of the most recent quote and not of all quotes.\n\nThis is a deal based workflow.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-07-22 00:23:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Thiago Meira",
      "poster_handle": "tmeira"
    },
    "time_stamp": "2024-07-19 08:50:11",
    "text": "Dear All! I would like to know how can I generate a report with all workflows names and IDs because I would to bulk upload some of workflows names for naming convention purposes. Any ideas how? Apparently HubSpot support could not help with that. Need this otherwise I will have to update more than 2k workflows manually! :face_with_spiral_eyes:"
  },
  {
    "poster": {
      "poster_name": "Darrian Bagley",
      "poster_handle": "darrianbagley"
    },
    "time_stamp": "2024-07-19 09:30:06",
    "text": "I created a ticket with support and they said they'll bring it to the dev team. Waiting for a follow up. In the meantime, I'll create a community forum thread in case someone is able to find a solution or workaround."
  },
  {
    "poster": {
      "poster_name": "Cameron Harro",
      "poster_handle": "cameron420"
    },
    "time_stamp": "2024-07-19 10:00:09",
    "text": "Hey <@U01QVR44MEY>, in the original picture it looks like the rows are in reverse-chronological order — like the bottom row is action 2, then moves forward in time going up. If so, then it looks like action 3 initiates and then succeeds before moving on to the branch at action 4. In that case, it looks good to me?"
  },
  {
    "poster": {
      "poster_name": "Cameron Harro",
      "poster_handle": "cameron420"
    },
    "time_stamp": "2024-07-19 10:07:44",
    "edited": {
      "time_stamp": "2024-07-19 10:15:16"
    },
    "text": "Yeah, I think otherwise you’d need Ops Pro to do this with a custom coded action."
  },
  {
    "poster": {
      "poster_name": "Neeraj Singh",
      "poster_handle": "neeraj.singh"
    },
    "time_stamp": "2024-07-19 10:08:47",
    "text": "thank you for your reply cameron, i get the way to do this by using calculation in  properties"
  },
  {
    "poster": {
      "poster_name": "Cameron Harro",
      "poster_handle": "cameron420"
    },
    "time_stamp": "2024-07-19 10:09:40",
    "text": "Hey <@UQNEXHW14>, does this seem like something someone should know about internally?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-07-19 10:11:06",
    "text": "yeah the strange thing is that it doesn't succeed, no association was created"
  },
  {
    "poster": {
      "poster_name": "Cameron Harro",
      "poster_handle": "cameron420"
    },
    "time_stamp": "2024-07-19 10:12:27",
    "text": "Weird, what’s the message on the “Succeeded” row for action 3?"
  },
  {
    "poster": {
      "poster_name": "Cameron Harro",
      "poster_handle": "cameron420"
    },
    "time_stamp": "2024-07-19 10:15:44",
    "text": "Totally — just remember you have a limited number of those depending on your subscription."
  },
  {
    "poster": {
      "poster_name": "Neeraj Singh",
      "poster_handle": "neeraj.singh"
    },
    "time_stamp": "2024-07-19 10:16:24",
    "text": "Sure"
  },
  {
    "text": "Just success",
    "time_stamp": "2024-07-19 11:15:02"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2024-07-19 14:18:34",
    "edited": {
      "time_stamp": "2024-07-19 14:22:13"
    },
    "text": "Hello all,\n\nQuestion about retries when exceeding HubSpot api limits in custom coded action.\n\nI noticed that, when I handle errors like this with NodeJS :\n\n```throw new Error('An error occurred!')```\nThe workflow will retry executing the action until it works\n\nWhen I handle error like this with Python :\n\n```raise Exception(\"An error occurred!\")```\nIt throws an error and the workflows action fail.\n\nI thought Python's `raise Exception()`  was the equivalent of JS' `throw new Error()`\n\nShould I use something else?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-07-19 14:42:35"
      },
      {
        "time_stamp": "2024-07-19 16:52:00"
      },
      {
        "time_stamp": "2024-07-19 16:52:21"
      },
      {
        "time_stamp": "2024-07-22 08:09:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2024-07-19 14:42:35",
    "text": "<@UFBNA9K9A> I would be interested in your idea about this one."
  },
  {
    "poster": {
      "poster_name": "Zach Foster",
      "poster_handle": "notzachfoster"
    },
    "time_stamp": "2024-07-19 16:52:00",
    "text": "i would think you're doing the right thing"
  },
  {
    "poster": {
      "poster_name": "Zach Foster",
      "poster_handle": "notzachfoster"
    },
    "time_stamp": "2024-07-19 16:52:21",
    "text": "at least for Node, errors have a `name` property, could be that HubSpot responds differently based one exception/error type"
  }
]
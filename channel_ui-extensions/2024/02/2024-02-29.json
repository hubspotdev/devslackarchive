[
  {
    "poster": {
      "poster_name": "Huanling Lai",
      "poster_handle": "huanling"
    },
    "time_stamp": "2024-02-29 03:40:40",
    "text": "I have learned something wild about CRM cards today and I’m still in shock. I’ll write to describe a simplified version of what has happened.\n\nWe have a card that displays different banners based on conditional logic(Simplified version: if property A, B, C is known -&gt; banner X, else -&gt; banner Y).\n\nI found out today and a team member saw Banner Y in the card whereas I, as super admin, saw Banner X. After some troubleshooting, I figured out that property C has a permission setting that doesn’t allow her to view - hence the property is “unknown” for her and she ended up seeing Banner Y.\n\nNot sure if this is working as designed? <@U03FJQPSC0Y> <@U04EJHVD8FM>",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-29 06:21:34"
      },
      {
        "time_stamp": "2024-02-29 07:15:00"
      },
      {
        "time_stamp": "2024-02-29 07:16:23"
      },
      {
        "time_stamp": "2024-02-29 07:29:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Bashir",
      "poster_handle": "ayo_idan"
    },
    "time_stamp": "2024-02-29 04:43:14",
    "text": "Would likely depend on how you want to use the data. If it’s for viewing purposes, informational purpose, displaying on the card will work. \n\nIf users might have to work with the data, maybe use it in emails or for reporting etc, you will want to store it as a custom object, which also allows you to display as a CRM card. \n\nYou get? "
  },
  {
    "poster": {
      "poster_name": "Sagar Regmi",
      "poster_handle": "sagar.regmi"
    },
    "time_stamp": "2024-02-29 05:51:01",
    "text": "yes thanks for answering , one more question , for eg: if i include the datas in contacts as CRM cards , won't i be able to manipulate data or create reports with it ?"
  },
  {
    "poster": {
      "poster_name": "Tom Durston",
      "poster_handle": "tom984"
    },
    "time_stamp": "2024-02-29 06:21:34",
    "text": "I've found that if you're fetching crm properties using fetchCrmObjectProperties and a user doesn't have access to view that property it seems to treat that property as being null or undefined and so it wouldn't hit the first condition of your if statement. You'll have to give that user at least view only permissions for that property. Alternatively, you can fetch the property data using a graphql query which seems to be unaffected by user permissions."
  },
  {
    "poster": {
      "poster_name": "Huanling Lai",
      "poster_handle": "huanling"
    },
    "time_stamp": "2024-02-29 07:15:00",
    "text": "yes I gave the user view access and the issue resolved. That’s very good to know! I’m not experienced with graphql query but I guess the takeaway would be to always make sure the properties used are viewed by everyone."
  },
  {
    "poster": {
      "poster_name": "Seth Kaplan",
      "poster_handle": "skaplan"
    },
    "time_stamp": "2024-02-29 07:16:23",
    "text": "Definitely working as designed. Those calls are made with the permissions of the user who is logged in. If they don't have access, we don't show it."
  },
  {
    "poster": {
      "poster_name": "Huanling Lai",
      "poster_handle": "huanling"
    },
    "time_stamp": "2024-02-29 07:29:14",
    "text": "noted, thank you Seth!"
  },
  {
    "poster": {
      "poster_name": "Sergi Capellera",
      "poster_handle": "scapellera"
    },
    "time_stamp": "2024-02-29 08:37:01",
    "text": "Hello, I am using the &lt;Table /&gt; component in a custom card. I would like 10 rows to appear in the table and for there to be pagination.\nIn the &lt;CrmAssociationTable /&gt; component there is the pageSize property that serves to limit the number of rows that appear in the table but not in the &lt;Table/&gt; component. Does anyone know how to do this? Thanks in advance",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-29 09:52:43"
      },
      {
        "time_stamp": "2024-02-29 09:56:53"
      },
      {
        "time_stamp": "2024-02-29 10:00:15"
      },
      {
        "time_stamp": "2024-02-29 10:00:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-29 09:52:43",
    "text": "So the pagination components for the table components are handled by table itself (through the pagination props (`paginated={true}` ) but the data you pass through the table won't be changed by the paginations in the table, you have to handle this yourself by changing the data in the table whenever the `onPageChange` triggers"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-29 09:56:53",
    "text": "Here's a super simple extension with table paging: <https://github.com/HubSpotdev/crm-customization-dev-bootcamp/blob/main/cards/01.simple_version/RentalCars/src/app/extensions/CreateRental.jsx>"
  },
  {
    "poster": {
      "poster_name": "Sergi Capellera",
      "poster_handle": "scapellera"
    },
    "time_stamp": "2024-02-29 10:00:15",
    "text": "Ty so much Carter!:5892_parrot:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-29 10:00:49",
    "text": "of course bro, let me know if you run into any issues"
  },
  {
    "poster": {
      "poster_name": "Bashir",
      "poster_handle": "ayo_idan"
    },
    "time_stamp": "2024-02-29 10:52:50",
    "text": "If you use the CRM cards, you won’t be storing the values in HubSpot(except you code it to this). So answer is you won’t because the data won’t be available to work with"
  },
  {
    "poster": {
      "poster_name": "Elise Ferguson",
      "poster_handle": "elise.ferguson"
    },
    "time_stamp": "2024-02-29 13:43:05",
    "text": "So I’m just getting into the CRM “stuff” and we’re building a portal using graphQL queries to grab info from the CRM.  My question is about getting the file name of a CRM File Attachment.  The GraphQL will only return the ID of the attachment and there doesn’t seem to be any way (that I’ve found) to then get the name of said attachment.  Everything I’ve found keeps pointing to the API but if my users are already logged into HubSpot accessing their CRM data, is the API the only way?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-01 08:34:17"
      },
      {
        "time_stamp": "2024-03-04 09:00:38"
      }
    ]
  }
]
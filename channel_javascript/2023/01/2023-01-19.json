[
  {
    "poster": {
      "poster_name": "Anders Jürisoo",
      "poster_handle": "anders.jurisoo"
    },
    "time_stamp": "2023-01-19 04:16:05",
    "edited": {
      "time_stamp": "2023-01-19 04:16:59"
    },
    "text": "```import { Property } from \"@HubSpot/api-client/lib/codegen/crm/properties\";\n\nexport const dealProperties= [\n    {\n        name: \"our_reference\",\n        label: \"Our Reference\",\n        description: \"Our Reference, i.e. the HubSpot Owner\",\n        groupName: \"my_group\",\n        referencedObjectType: \"OWNER\",\n        type: \"enumeration\",\n        fieldType: \"select\",\n        externalOptions: true,\n        options: [],\n        formField: false,\n        hasUniqueValue: false,\n    },\n]\n\n// \"Property 'our_reference' of object type '0-3' has no options but options are required!\"```\nHow can I create a OWNER property with the API? I think I have done it before, but it so hard to get right :sweat_smile:\nTried a few variations, removing the options key etc but no success. Any ideas?"
  },
  {
    "poster": {
      "poster_name": "Bruno Decruz",
      "poster_handle": "brunodecruz.05"
    },
    "time_stamp": "2023-01-19 07:31:34",
    "text": "to the files api"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-01-19 08:49:27",
    "edited": {
      "time_stamp": "2023-01-19 08:49:47"
    },
    "text": "Anybody know of a way to defer loading of recaptcha__en.js applied to site automatically by HubSpot's GDPR tools?",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-01-19 10:09:23"
      },
      {
        "time_stamp": "2023-01-19 10:24:36"
      },
      {
        "time_stamp": "2023-01-19 11:17:20"
      },
      {
        "time_stamp": "2023-01-19 12:25:12"
      },
      {
        "time_stamp": "2023-01-19 16:47:40"
      },
      {
        "time_stamp": "2023-01-19 17:20:27"
      },
      {
        "time_stamp": "2023-01-20 07:10:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-19 09:05:02",
    "text": "What language are you using?"
  },
  {
    "poster": {
      "poster_name": "Bruno Decruz",
      "poster_handle": "brunodecruz.05"
    },
    "time_stamp": "2023-01-19 09:23:34",
    "text": "i am using  javascript"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-01-19 09:46:31",
    "text": "Lol clients will client!!!!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-01-19 10:09:23",
    "text": "why are you deferring it? I’m not sure there is a way, but i’m curious on the use case"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-01-19 10:24:36",
    "text": "it might be render-blocking"
  },
  {
    "poster": {
      "poster_name": "Bruno Decruz",
      "poster_handle": "brunodecruz.05"
    },
    "time_stamp": "2023-01-19 11:00:51",
    "text": "Hello everyone i am kind of stuck with the endpoint to upload files does anyone have an example of a request to that endpoint?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-01-19 11:06:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-19 11:05:56",
    "text": "Here's that endpoint you'll want to use <https://developers.HubSpot.com/docs/api/files/files>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-19 11:06:26",
    "text": "And the example code for javascript for uploading a file from a url:\n```var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"<http://api.hubapi.com|api.hubapi.com>\",\n  \"port\": null,\n  \"path\": \"/files/v3/files/import-from-url/async\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/json\",\n    \"authorization\": \"Bearer YOUR_ACCESS_TOKEN\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({\n  access: 'PUBLIC_INDEXABLE',\n  ttl: 'string',\n  name: 'string',\n  url: 'string',\n  folderId: 'string',\n  folderPath: 'string',\n  duplicateValidationStrategy: 'NONE',\n  duplicateValidationScope: 'ENTIRE_PORTAL',\n  overwrite: true\n}));\nreq.end();```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-19 11:06:40",
    "text": "<https://HubSpotdev.slack.com/archives/CBA9UA4EN/p1674071158944219>"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-01-19 11:17:20",
    "text": "Yes, I think it is render-blocking and negatively affecting Lighthouse PageSpeed scores.\n\nOnly other reference I could find related to this was <https://community.HubSpot.com/t5/CMS-Development/How-to-Defer-or-Preload-Forms-for-CWV/td-p/591355#:~:text=This%20is%20not%20possible%20based%20on%20responses%20i%20have%20had%20from%20HubSpot%20and%20the%20developer%20community.|here>. This makes me think it is not possible to defer, if we have HubSpot's GDPR tools enabled?"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-01-19 12:25:12",
    "text": "I wonder if this method will work <https://community.HubSpot.com/t5/APIs-Integrations/Defer-Scripts-from-HubSpot/td-p/679661#:~:text=Here%27s%20the%20code%C2%A0,%3B%0A%3C/script%3E>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-01-19 16:47:40",
    "text": "That is interesting. I might play with this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2023-01-19 17:20:27",
    "text": "I wasn’t able to make this work in my tests. I attempted this way as well as using require_js with the url.."
  }
]
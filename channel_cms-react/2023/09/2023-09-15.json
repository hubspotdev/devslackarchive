[
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-09-15 08:35:36",
    "text": "I'm trying out this cms-js things after a couple of months, tried downloading the <https://github.com/HubSpot/cms-js-building-block-examples|sample repo here>, opened the styling sample and run `npm run start` , next I clicked on the tailwind example but it looks like no styling is applied except default tailwind resets, is this the expected behaviour?",
    "reply_count": 36,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-09-15 08:40:01"
      },
      {
        "time_stamp": "2023-09-15 08:42:53"
      },
      {
        "time_stamp": "2023-09-15 08:43:40"
      },
      {
        "time_stamp": "2023-09-15 08:45:15"
      },
      {
        "time_stamp": "2023-09-15 08:45:26"
      },
      {
        "time_stamp": "2023-09-15 08:49:08"
      },
      {
        "time_stamp": "2023-09-15 08:50:57"
      },
      {
        "time_stamp": "2023-09-15 08:51:28"
      },
      {
        "time_stamp": "2023-09-15 08:54:08"
      },
      {
        "time_stamp": "2023-09-15 08:55:03"
      },
      {
        "time_stamp": "2023-09-15 08:55:34"
      },
      {
        "time_stamp": "2023-09-15 08:56:33"
      },
      {
        "time_stamp": "2023-09-15 08:56:45"
      },
      {
        "time_stamp": "2023-09-15 08:57:50"
      },
      {
        "time_stamp": "2023-09-15 08:58:18"
      },
      {
        "time_stamp": "2023-09-15 08:58:29"
      },
      {
        "time_stamp": "2023-09-15 08:58:38"
      },
      {
        "time_stamp": "2023-09-15 08:59:26"
      },
      {
        "time_stamp": "2023-09-15 08:59:35"
      },
      {
        "time_stamp": "2023-09-15 08:59:46"
      },
      {
        "time_stamp": "2023-09-15 09:01:34"
      },
      {
        "time_stamp": "2023-09-15 09:02:51"
      },
      {
        "time_stamp": "2023-09-15 09:04:04"
      },
      {
        "time_stamp": "2023-09-15 09:06:56"
      },
      {
        "time_stamp": "2023-09-15 09:08:25"
      },
      {
        "time_stamp": "2023-09-15 09:08:55"
      },
      {
        "time_stamp": "2023-09-15 09:09:57"
      },
      {
        "time_stamp": "2023-09-15 09:10:12"
      },
      {
        "time_stamp": "2023-09-15 09:12:31"
      },
      {
        "time_stamp": "2023-09-15 09:13:39"
      },
      {
        "time_stamp": "2023-09-15 09:14:08"
      },
      {
        "time_stamp": "2023-09-15 09:14:20"
      },
      {
        "time_stamp": "2023-09-15 09:14:26"
      },
      {
        "time_stamp": "2023-09-15 09:14:56"
      },
      {
        "time_stamp": "2023-09-15 09:15:13"
      },
      {
        "time_stamp": "2023-09-15 09:15:54"
      }
    ]
  },
  {
    "text": "Hm, you are not seeing the tailwind classes in `TailwindPartial.jsx` show up?",
    "time_stamp": "2023-09-15 08:40:01"
  },
  {
    "text": "Nope, this is what I see",
    "time_stamp": "2023-09-15 08:42:53"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-09-15 08:43:40",
    "text": "Is I open the tailwind.css file I just see these defaults (they should be compiled but looks like they're not working):\n```@tailwind base;\n@tailwind components;\n@tailwind utilities;```\n"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:45:15",
    "edited": {
      "time_stamp": "2023-09-15 08:45:21"
    },
    "text": "First thing I’d suggest is that your dependencies are up to date with `npm install` inside the styling example (especially if you are coming from a previous pull of the repo?)"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 08:45:26",
    "text": "you mentioned it’s been a couple months - is it possible you have an old version of `cms-dev-server` installed?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:49:08",
    "text": "Hm, is `npm update` required to get bumps to the `latest` version dependencies?"
  },
  {
    "text": "I re-downloaded the repo today and tried running npm install inside the folder but nothing changed, is this the latest version?",
    "time_stamp": "2023-09-15 08:50:57"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:51:28",
    "text": "Yup"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:54:08",
    "text": "Anything interesting in the `npm run start` log? (probably not, but figured I’d check). It does have `HubSpot CMS dev server hosting: styling-project/styling-app …` right?"
  },
  {
    "text": "That's what I see when I run npm run start",
    "time_stamp": "2023-09-15 08:55:03"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:55:34",
    "text": "Ah, that `warn` tells us something :thinking_face: …"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-09-15 08:56:33",
    "text": "Maybe there's something wrong in the tailwind.config.js file? I haven't changed anything btw"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:56:45",
    "edited": {
      "time_stamp": "2023-09-15 08:57:10"
    },
    "text": "What do you see in the log if you add a `console.log(tailwindConfig)` to `postcss.config.mjs`? (I’m curious what the `content` path ends up being)"
  },
  {
    "text": "Here's the log",
    "time_stamp": "2023-09-15 08:57:50"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 08:58:18",
    "text": "hmm maybe a windows issue?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:58:29",
    "text": "That `%20` in the path jumps out to me"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 08:58:38",
    "text": "ah yeah"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-09-15 08:59:26",
    "text": "that could be the cause, I encountered a similar issue with an early version of Nuxt where spaces in the paths where causing errors"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 08:59:35",
    "text": "Is `new URL('./components', import.meta.url).pathname`  encoding the space?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 08:59:46",
    "edited": {
      "time_stamp": "2023-09-15 09:00:35"
    },
    "text": "yeah i think so, that may just need a `decodeURIComponent` wrapping it"
  },
  {
    "text": "Yeah.",
    "time_stamp": "2023-09-15 09:01:34"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 09:02:51",
    "text": "<@UV23JHEJY> what if you add `decodeURIComponent` to the tailwind config like `const componentsDir = decodeURIComponent(new URL('./components', import.meta.url).pathname)`"
  },
  {
    "text": "I wrapped it up with a decodeURIComponent, the path looks fine in the console log but it looks like it's still not working",
    "time_stamp": "2023-09-15 09:04:04"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 09:06:56",
    "text": "Next try is to manually hardcode a windows path  instead of using `componentsDir` , like:\n\n```content: [`C:/Users/Federico Mozzo/Desktop/test/cms-js-building-block-examples/styling/styling-project/styling-app/components/**/*.{js,ts,jsx,ts}`],```"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-09-15 09:08:25",
    "text": "This way it works, strange"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 09:08:55",
    "text": "Ok, I think we need to update our code to something like:\n\n```import { fileURLToPath } from 'url'\nconst componentsDir = fileURLToPath(new URL('./components', import.meta.url))```\n"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-09-15 09:09:57",
    "text": "Nice, I confirm this last solution works, thanks!"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 09:10:12",
    "text": "Great, thanks for working through this with us :raised_hands:"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:12:31",
    "text": "this may work too:\n```content: {\n  relative: true,\n  files: [`./components/**/*.{js,ts,jsx,tsx}`]\n},```\n"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 09:13:39",
    "text": "Created <https://github.com/HubSpot/cms-js-building-block-examples/pull/36>"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:14:08",
    "text": "if it works i think ideally we use a relative path right?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 09:14:20",
    "text": "Let me try…"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:14:26",
    "text": "that worked for me locally"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:14:56",
    "edited": {
      "time_stamp": "2023-09-15 09:15:02"
    },
    "text": "<@UV23JHEJY> could you try the above as well and see if it also solves your problem on windows?\n\n```content: {\n  relative: true,\n  files: [`./components/**/*.{js,ts,jsx,tsx}`]\n},```"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-09-15 09:15:13",
    "text": "Yes, this solution works too"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-09-15 09:15:54",
    "edited": {
      "time_stamp": "2023-09-15 09:15:58"
    },
    "text": "Updated the PR to use the relative path"
  },
  {
    "text": "hi ! i'm trying to clone the contact profile project <https://github.com/HubSpot/cms-js-building-block-examples/tree/main/contact-profile>, and i have this error , why?",
    "time_stamp": "2023-09-15 09:28:14",
    "reply_count": 21,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-09-15 09:31:08"
      },
      {
        "time_stamp": "2023-09-15 09:34:25"
      },
      {
        "time_stamp": "2023-09-15 09:40:13"
      },
      {
        "time_stamp": "2023-09-15 09:50:58"
      },
      {
        "time_stamp": "2023-09-15 09:54:49"
      },
      {
        "time_stamp": "2023-09-15 09:55:22"
      },
      {
        "time_stamp": "2023-09-15 10:05:46"
      },
      {
        "time_stamp": "2023-09-15 10:38:07"
      },
      {
        "time_stamp": "2023-09-15 10:42:29"
      },
      {
        "time_stamp": "2023-09-15 10:42:53"
      },
      {
        "time_stamp": "2023-09-15 10:47:32"
      },
      {
        "time_stamp": "2023-09-15 10:48:20"
      },
      {
        "time_stamp": "2023-09-15 10:51:54"
      },
      {
        "time_stamp": "2023-09-15 10:52:36"
      },
      {
        "time_stamp": "2023-09-15 11:06:21"
      },
      {
        "time_stamp": "2023-09-15 11:08:37"
      },
      {
        "time_stamp": "2023-09-15 11:12:49"
      },
      {
        "time_stamp": "2023-09-15 12:18:09"
      },
      {
        "time_stamp": "2023-09-15 12:25:25"
      },
      {
        "time_stamp": "2023-09-15 12:25:45"
      },
      {
        "time_stamp": "2023-09-15 12:29:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:31:08",
    "edited": {
      "time_stamp": "2023-09-15 09:31:55"
    },
    "text": "hmm that is surprising unless you put a new `hsproject.json` file somewhere or moved the existing one around - what version does `hs --version` return?"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 09:34:25",
    "text": "Hi <@U04DVL5T2TE> ! 4.2.1-beta.0"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 09:40:13",
    "text": "<@U04DVL5T2TE> Anyway, don't worry, I solved it by manually uploading it to the design manager. Thanks again for your prompt response. I would gladly take advantage of your knowledge to ask you another question (answer me if you can, of course): I'm planning to use React building blocks to create a query based on the user's email, which will be the same as the main email of a company. Then, through this company, I would like to print all the contacts associated with that company and, upon clicking, go into detail.\nHow do you recommend proceeding? Is it possible with React building blocks to bypass the limit of 100 objects per query and the limit of 10 queries per page (I remember that with HubL it's like this, with GraphQL, what limits do I have? I may need to anticipate companies that could print more than 1000 objects, I wonder how I can manage dynamic pagination). And how can I handle the details of the associated contacts? Could the routes be dynamic by adding a router or is there something else I can do? Thank you very much."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:50:58",
    "text": "from a UX perspective i would recommend pagination regardless of any limits around objects per query. i’d recommend using URL query params via `request.query_dict`  to get an offset into your graphql query"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:54:49",
    "text": "i think the `contact-profile` example should be helpful, with just a slightly different query: <https://github.com/HubSpot/cms-js-building-block-examples/blob/main/contact-profile/contact-profile-project/contact-profile-app/components/modules/ContactWithAssociations/index.jsx|https://github.com/HubSpot/cms-js-building-block-examples/blob/main/contact-profil[…]rofile-app/components/modules/ContactWithAssociations/index.jsx>"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 09:55:22",
    "edited": {
      "time_stamp": "2023-09-15 09:55:33"
    },
    "text": "note the query parameter being created here: <https://github.com/HubSpot/cms-js-building-block-examples/blob/main/contact-profile/contact-profile-project/contact-profile-app/components/modules/ContactWithAssociations/index.jsx|https://github.com/HubSpot/cms-js-building-block-examples/blob/main/contact-profil[…]rofile-app/components/modules/ContactWithAssociations/index.jsx>\n\nyou could do something similar with `request.query_dict` to get an offset to pass to the query"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 10:05:46",
    "text": "you should be able to pull any associated contact details from within `items` in the query, similar to the companies in the example above"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 10:38:07",
    "text": "Thank you very much! But how do I then create pagination? Since the results will be based on who accesses the page, it will be dynamic pagination. Can I manage the routing with HubSpot? <@U04DVL5T2TE>"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 10:42:29",
    "text": "i’m not sure i understand the issue, i don’t think routing is necessary and just a query param with an offset number will be enough"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 10:42:53",
    "edited": {
      "time_stamp": "2023-09-15 10:43:11"
    },
    "text": "the graphql query can take an `offset` value and that will be dynamic coming in"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 10:47:32",
    "text": "Ah, okay, perfect. I thought that, as in the HubL server-side APIs, there was a limit per call per page. Thank you very much."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 10:48:20",
    "edited": {
      "time_stamp": "2023-09-15 10:48:43"
    },
    "text": "there is but i think you can get away with a single page and a single graphQL call and do what you’re describing"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 10:51:54",
    "text": "Thank you very much, I just wanted to make sure that even if I have more than 1000 objects (contacts in this case) associated, I can manage it with a single page and a single GraphQL query.\n\nSo you suggest to pass {{request.query_dict}}\nlike in email example:\n```export const query = `\n# $email: \"{{ contact.email }}\"```"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 10:52:36",
    "text": ":+1: you can and then passing a `limit` and `offset` to the query will let you paginate into smaller pages within a large set of contacts"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 11:06:21",
    "text": "thank you ben."
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 11:08:37",
    "text": "For the contact details, what do you recommend? Should I create a dynamic route and perform the query on the dynamic page path?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 11:12:49",
    "text": "it’s a little out of my expertise so i’m not 100% sure what the best option is, you could possibly do that, there are other options involving similar query param setups to pass an email or contact ID but they won’t be able to be prerendered by the CMS so the performance will be worse"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 12:18:09",
    "text": "<@U04DVL5T2TE> i have this values in query_dict ( i use your suggested template )\n\n```\"query_dict\": {\n\"hs-version\": \"1\",\n\"hs-signature\": \"mysignature\",\n\"hs-expires\": \"1694805360\",\n\"portalId\": \"my portal id\",\n\"utm_source\": \"sprocket-menu\"\n},```"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2023-09-15 12:25:25",
    "text": ":disappointed: no offset"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 12:25:45",
    "text": "you’re adding `?offset=10` or something like that to your URL when you load the page?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-09-15 12:29:50",
    "text": "some more related documentation here: <https://developers.HubSpot.com/docs/cms/data/use-graphql-data-in-your-website-pages#pass-dynamic-context-into-a-query>"
  }
]
[
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-05-03 04:51:11",
    "edited": {
      "time_stamp": "2018-05-03 04:56:47"
    },
    "text": "Idea: Add a new HubL var to manage conditionals when you are in the previewer (something like is_listing_page but to the content editor so we can use some conditionals and display special content ( or hide it) if you are using the previewer and not in the real page. \nFor now I found a work around managing that with the body class \".HubSpot-disable-focus-styles\" but I would prefer not generate unnecessary info. in the real (published) page even if it's \"hide\" with CSS.\n\nOr if this already exists publish on doc. :slightly_smiling_face:",
    "reply_count": 13,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-05-03 05:03:21"
      },
      {
        "time_stamp": "2018-05-03 07:01:47"
      },
      {
        "time_stamp": "2018-05-03 07:02:10"
      },
      {
        "time_stamp": "2018-05-03 07:19:35"
      },
      {
        "time_stamp": "2018-05-03 07:21:02"
      },
      {
        "time_stamp": "2018-05-03 07:22:40"
      },
      {
        "time_stamp": "2018-05-03 07:33:58"
      },
      {
        "time_stamp": "2018-05-03 07:37:35"
      },
      {
        "time_stamp": "2018-05-03 07:38:08"
      },
      {
        "time_stamp": "2018-05-03 07:39:36"
      },
      {
        "time_stamp": "2018-05-03 08:33:29"
      },
      {
        "time_stamp": "2018-05-03 08:38:35"
      },
      {
        "time_stamp": "2018-05-03 08:41:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-05-03 05:03:21",
    "edited": {
      "time_stamp": "2018-05-03 05:03:37"
    },
    "text": "Found a better way, than CSS. Hope this won't change and make this official :smirk:\n\nrequest.queryDict.inpageEditorUI"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-03 07:01:47",
    "text": "ooh that needs to be documented. I’ve always used the body class name that HS adds to detect the editor"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-05-03 07:02:10",
    "text": "Yet another reason I’d like the documentation to go more wiki like or open source"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-05-03 07:19:35",
    "edited": {
      "time_stamp": "2018-05-03 07:20:41"
    },
    "text": "Yeah, same here. But I was really disappointed because it was a partial solution.\nNow with this method is great because you can expand the UX with helpful text inside the previewer.\n\nThe problem to handle this kind of stuff in an open source wiki is that this is not official and at some point it could disappear without any warning so it's something dangerous to spread this kind of tricks as a public knowledge because it will be adopted in mass which can be really bad"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-03 07:21:02",
    "text": "Oh I totally agree, but if we did it as an open source project HS devs could approve/deny pull requests"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-03 07:22:40",
    "edited": {
      "time_stamp": "2018-05-03 07:24:37"
    },
    "text": "the other thing is we could display a disclaimer stating exactly that “this page references variables/functions that are not officially supported and could change or break at any time, use at your own risk”\n\nAnd because of this people may come up with safe solutions in-case a feature breaks down the road.\n\nsuch as detecting if the variable exists - do this, else do this.\n\nFor example, if all you’re doing is improving the UI in the page editor for a module, and they change that variable, you just fallback to a version without your page editor improvements."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-05-03 07:33:58",
    "text": "agree, could be really great have that kind of information available and completed with third party devs, because who really use the tools and have a lot of different scenarios in \"production\" are us :grin:.\n\nBut at the end this means more maintenance work for HS team and a really huge time consuming task I think"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-03 07:37:35",
    "text": "there are ways to lessen the load of maintenance on their end.\n\nfor example assigning people from the developer community essentially the role of a moderator/editor if they are willing to volunteer that.\n(essentially third party people that will try to uphold standards for the info.) They’d have the ability to approve/deny pull requests"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-05-03 07:38:08",
    "text": "true :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-03 07:39:36",
    "text": "I think some developers/companies would be interested in doing it too, because it reflects on that individual and their company as being kind of a thought leader when it comes to HubSpot development."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-05-03 08:33:29",
    "text": "also I see benefit on maintain it because it can improve our flows and working all in the same direction so its a win-win situation plus gonna be easier to fix something deprecated if more than one need it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-05-03 08:38:35",
    "text": "<https://github.com/HubSpot/jinjava/issues/165>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-03 08:41:23",
    "text": "good find. I’d support this."
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-05-03 14:20:40",
    "text": "Thanks Shawn, looks so much better now!"
  },
  null,
  null
]
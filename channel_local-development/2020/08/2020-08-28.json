[
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-08-28 10:11:34",
    "text": "Hey devs! Who is using :github: or another version control solution as a source of truth for a project/site of theirs? What is working well with the setup? What could be smoother?",
    "reply_count": 68,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2020-08-28 10:31:03"
      },
      {
        "time_stamp": "2020-08-28 11:04:59"
      },
      {
        "time_stamp": "2020-08-28 11:40:50"
      },
      {
        "time_stamp": "2020-08-28 13:53:45"
      },
      {
        "time_stamp": "2020-08-28 14:16:15"
      },
      {
        "time_stamp": "2020-08-28 14:17:26"
      },
      {
        "time_stamp": "2020-08-28 14:30:11"
      },
      {
        "time_stamp": "2020-08-28 14:41:24"
      },
      {
        "time_stamp": "2020-08-28 15:29:16"
      },
      {
        "time_stamp": "2020-08-29 21:02:38"
      },
      {
        "time_stamp": "2020-08-29 21:19:58"
      },
      {
        "time_stamp": "2020-08-29 21:20:20"
      },
      {
        "time_stamp": "2020-08-29 21:20:25"
      },
      {
        "time_stamp": "2020-08-29 21:20:42"
      },
      {
        "time_stamp": "2020-08-29 21:21:10"
      },
      {
        "time_stamp": "2020-08-29 21:21:17"
      },
      {
        "time_stamp": "2020-08-29 21:22:00"
      },
      {
        "time_stamp": "2020-08-29 21:22:10"
      },
      {
        "time_stamp": "2020-08-29 21:22:10"
      },
      {
        "time_stamp": "2020-08-29 21:22:24"
      },
      {
        "time_stamp": "2020-08-29 21:23:28"
      },
      {
        "time_stamp": "2020-08-29 21:23:37"
      },
      {
        "time_stamp": "2020-08-29 21:24:09"
      },
      {
        "time_stamp": "2020-08-29 21:24:15"
      },
      {
        "time_stamp": "2020-08-29 21:24:22"
      },
      {
        "time_stamp": "2020-08-29 21:24:40"
      },
      {
        "time_stamp": "2020-08-29 21:24:44"
      },
      {
        "time_stamp": "2020-08-29 21:24:50"
      },
      {
        "time_stamp": "2020-08-29 21:24:57"
      },
      {
        "time_stamp": "2020-08-29 21:25:05"
      },
      {
        "time_stamp": "2020-08-29 21:25:32"
      },
      {
        "time_stamp": "2020-08-29 21:26:11"
      },
      {
        "time_stamp": "2020-08-29 21:26:28"
      },
      {
        "time_stamp": "2020-08-29 21:26:30"
      },
      {
        "time_stamp": "2020-08-29 21:26:56"
      },
      {
        "time_stamp": "2020-08-29 21:26:56"
      },
      {
        "time_stamp": "2020-08-29 21:27:13"
      },
      {
        "time_stamp": "2020-08-29 21:27:42"
      },
      {
        "time_stamp": "2020-08-29 21:27:47"
      },
      {
        "time_stamp": "2020-08-29 21:28:25"
      },
      {
        "time_stamp": "2020-08-29 21:28:34"
      },
      {
        "time_stamp": "2020-08-29 21:28:44"
      },
      {
        "time_stamp": "2020-08-29 21:28:54"
      },
      {
        "time_stamp": "2020-08-29 21:28:58"
      },
      {
        "time_stamp": "2020-08-29 21:29:03"
      },
      {
        "time_stamp": "2020-08-29 21:29:07"
      },
      {
        "time_stamp": "2020-08-29 21:29:22"
      },
      {
        "time_stamp": "2020-08-29 21:29:35"
      },
      {
        "time_stamp": "2020-08-29 21:29:47"
      },
      {
        "time_stamp": "2020-08-29 21:29:55"
      },
      {
        "time_stamp": "2020-08-29 21:30:05"
      },
      {
        "time_stamp": "2020-08-29 21:30:28"
      },
      {
        "time_stamp": "2020-08-29 21:30:35"
      },
      {
        "time_stamp": "2020-08-29 21:30:39"
      },
      {
        "time_stamp": "2020-08-30 04:23:43"
      },
      {
        "time_stamp": "2020-09-01 00:15:34"
      },
      {
        "time_stamp": "2020-09-03 08:53:02"
      },
      {
        "time_stamp": "2020-09-03 08:54:23"
      },
      {
        "time_stamp": "2020-09-03 08:55:38"
      },
      {
        "time_stamp": "2020-09-03 08:56:37"
      },
      {
        "time_stamp": "2021-01-19 16:36:30"
      },
      {
        "time_stamp": "2021-01-20 00:27:41"
      },
      {
        "time_stamp": "2021-01-20 00:28:53"
      },
      {
        "time_stamp": "2021-01-20 00:32:47"
      },
      {
        "time_stamp": "2021-01-20 00:34:11"
      },
      {
        "time_stamp": "2021-01-20 00:37:10"
      },
      {
        "time_stamp": "2021-01-20 00:37:53"
      },
      {
        "time_stamp": "2021-01-20 00:40:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-08-28 10:12:25",
    "text": "<@U6W3H6YN8> Im just using it for storage at the moment.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-08-28 10:14:26"
      },
      {
        "time_stamp": "2020-08-28 10:14:58"
      },
      {
        "time_stamp": "2020-08-28 10:15:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-08-28 10:14:20",
    "text": "kinda like a backup."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-08-28 10:14:26",
    "text": "What is keeping you from using it as the source of truth?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-08-28 10:14:58",
    "edited": {
      "time_stamp": "2020-08-28 10:15:01"
    },
    "text": "just one more step in set up."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-08-28 10:15:22",
    "text": "i use bitbucket BTW"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-08-28 10:31:03",
    "edited": {
      "time_stamp": "2020-08-28 11:42:00"
    },
    "text": "works well but its a pain to get deployments working like I like them. Master branch pushes auto deploy to production portal and staging branch pushes auto deploy to the another staging portal. Would love to see an easy github action for this :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-08-28 11:04:59",
    "text": "So on pushes to a branch, you would like to have deployments happen to a QA portal. When you merge, you would like a deploy to happen to your production account?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-08-28 11:40:50",
    "text": "yes exactly"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2020-08-28 12:03:53",
    "text": "Hi!  :wave:  We’ve recently been working on some updates that allow developers to set mobile editing controls in the page editor. We are currently in a private beta and are looking for developers that are willing to try out the new functionality. If you’re interested in joining the beta and giving us some feedback, DM me <@U8THBCFC4> and I’ll add you!"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-08-28 13:53:45",
    "text": "Cool, thanks! Filed an issue on this here <https://github.com/HubSpot/HubSpot-cms-tools/issues/304>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-08-28 14:16:15",
    "text": ":eyes:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-08-28 14:17:26",
    "text": "<@UDFTHC6PK> :point_up_2:"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-08-28 14:30:11",
    "edited": {
      "time_stamp": "2020-08-28 14:31:10"
    },
    "text": "whoa I’m not sure I’ve seen this before but thanks for making me aware of it Spiro <https://developers.HubSpot.com/docs/cms/guides/github-integration>"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-08-28 14:41:24",
    "text": "Oh sweet sorry I thought you meant you were using that. Glad you found it :smile:"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-08-28 15:29:16",
    "text": "haha yeah i guess there are a million ways to deploy from github. a quick and simple one would be great though!"
  },
  {
    "poster": {
      "poster_name": "Aaron Dadap",
      "poster_handle": "wesleyadwebster"
    },
    "time_stamp": "2020-08-28 16:25:47",
    "text": "Is this the right place to ask about using React with HubSpot via the React boilerplate ?\n<https://github.com/HubSpot/cms-react-boilerplate>\n\nI installed this awhile ago and couldn't get it to work beyond of the boilerplate content. It loads on my HubSpot File Manager, and can access it but seems to only be reading the App.js from the /dist folder. Would I need to build it out each time? I usually edit files with the\n```hs watch --portal=username &lt;fileSrc&gt; &lt;fileDest&gt;```\nBut I couldnt quite get it to accept a new build or changes to App.js",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-08-30 20:37:05"
      },
      {
        "time_stamp": "2020-09-01 16:58:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aaron Dadap",
      "poster_handle": "wesleyadwebster"
    },
    "time_stamp": "2020-08-28 16:26:36",
    "text": "hope this is making sense. Im going to try again. Also that was a few months ago the initial state slider wasnt working neither. Just trying to set up React environment. I am used to working with ReactJS by itself and think it would be cool to incorporate HubSpot integration for a few projects"
  },
  {
    "text": "Or rather how would one set this up? I can only get to this stage. Btw if the team sees this the \"Click me!\" button doesnt add to the state. I did not change anything this is fresh from the latest React CMS on 8/28/2020\n\nThe code for that part is:\n```import React, { useState } from 'react';\nimport './Card.scss';\n\nfunction Card({ initialClickCount }) {\n  const [clickCount, setClickCount] = useState(initialClickCount);\n  const pluralize = (n, noun, suffix) =>\n    `${n !== 1 ? 'are' : 'is'} ${n} ${noun + (n !== 1 ? suffix : '')}`;\n\n  return (\n    <div className=\"cms-react-boilerplate__card\">\n      <p>\n        {`There ${\n          clickCount > 0\n            ? pluralize(clickCount, 'reason', 's')\n            : 'are so many reasons'\n        } to use HubSpot CMS + React!`}\n      </p>\n      <button className=\"btn\" onClick={() => setClickCount(clickCount + 1)}>\n        Click me!\n      </button>\n    </div>\n  );\n}\n\nexport default Card;```\nWhich from initially looking it makes sense but not sure why its not looking at the state function of clickCount + 1 when pressed",
    "time_stamp": "2020-08-28 16:49:47",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-08-28 16:56:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aaron Dadap",
      "poster_handle": "wesleyadwebster"
    },
    "time_stamp": "2020-08-28 16:56:51",
    "edited": {
      "time_stamp": "2020-08-28 16:57:50"
    },
    "text": "So I managed to actually edit it but correct me if I'm wrong because the only way I am able to see \"live changes\" immediately is if I\n\n1.) Make the changes\n2.) Run 'npm start' and then kill the terminal\n3.) Run\n```hs watch --portal=username &lt;src&gt; &lt;dest&gt; ```\nand then reload the preview on my chrome window to see the right changes being applied.\n\nIt appears that if I want to add or remove I would need to repeat steps 1 - 3 each time?"
  }
]
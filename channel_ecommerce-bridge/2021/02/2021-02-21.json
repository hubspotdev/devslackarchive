[
  {
    "poster": {
      "poster_name": "guriqbal singh dhillon",
      "poster_handle": "guriqbal.d"
    },
    "time_stamp": "2021-02-21 21:46:19",
    "edited": {
      "time_stamp": "2021-02-21 21:48:11"
    },
    "text": "I am trying to import products and orders from whmcs account and I am successfull in import.The second thing that I want is to create a bridge with it .I am using upsert api to create the bridge.I am also able to create bridge with it but what I am seeing is that with using this upsert api , products and deals are duplicating for bridge count. Is there any way that I can take a count in bridge of all my imports without duplicating deals and products?  \n```                   if (empty($id))\n                                {//if product not exists then it will enter here\n\n                                    // $product_id = DB::table('whmcs_sync_products')-&gt;insertGetId(\n                                    //     ['whmcs_id' =&gt; $pid , 'hub_id' =&gt; 0, 'product_name' =&gt; $name, 'app_user_id' =&gt; Auth::user()-&gt;id,'portal_id' =&gt; $portal_id]\n                                    // );\n                                    $product_id = DB::table('whmcs_sync_products')-&gt;insertGetId(['whmcs_id' =&gt; $pid, 'hub_id' =&gt; 0, 'product_name' =&gt; $name, 'portal_id' =&gt; $portal_id, 'synced_user_id' =&gt; Auth::user()-&gt;id]);\n\n                                    $args['url'] = \"<https://api.hubapi.com/crm-objects/v1/objects/products?hapikey=>\" . $hapi_key;\n\n                                    $args['data'] = '[\n                                                              {\n                                                                \"name\": \"name\",\n                                                                \"value\": \"' . $name . '\"\n                                                              },\n                                                              {\n                                                                \"name\": \"description\",\n                                                                \"value\": \"' . $description . '\"\n                                                              },\n                                                              {\n                                                                \"name\": \"price\",\n                                                                \"value\": \"' . $monthly_price . '\"\n                                                              },\n                                                              {\n                                                                \"name\": \"recurringbillingfrequency\",\n                                                                \"value\": \"monthly\"\n                                                              }\n                                                            ]';\n                                    $resultHS = $this-&gt;curlAccessHS('POST', $args);\n\n                                    $log_create = $log_create + 1;\n                                    $this-&gt;products = $log_create;\n\n                                    if (!empty($resultHS))\n                                    {\n                                        if (isset($resultHS-&gt;status) == 'error')\n                                        {\n                                            $res = ['status' =&gt; 'false', 'message' =&gt; $resultHS-&gt;message];\n                                            return $res;\n                                        }\n                                        else\n                                        {\n                                            if(!empty($resultHS-&gt;objectId)){\n                                            $success = DB::table('whmcs_sync_products')-&gt;where('id', $product_id)-&gt;update(['hub_id' =&gt; $resultHS-&gt;objectId]);\n                                            }\n                                            else{\n                                                $success = DB::table('whmcs_sync_products')-&gt;where('id', $product_id)-&gt;update(['hub_id' =&gt; '0']);\n                                            }\n\n\n                                            // insert product into ecommerce bridge\n                                            $args1['url'] = '<https://api.hubapi.com/extensions/ecomm/v2/sync/messages?hapikey=>' . $hapi_key;\n\n                                            $args1['data'] = '{\n                                                          \"storeId\": \"ecommercebridge-whmcs-w-store\",\n                                                          \"objectType\": \"PRODUCT\",\n                                                          \"messages\": [\n                                                            {\n                                                              \"action\": \"UPSERT\",\n                                                              \"externalObjectId\": \"' . $resultHS-&gt;objectId . '\",\n                                                              \"properties\": {\n                                                                \"price\": \"' . $monthly_price . '\",\n                                                                \"product_name\": \"' . $name . '\",\n                                                                \"product_description\": \"' . $description . '\"\n                                                              }\n                                                            }\n                                                          ]\n                                                        }';\n                                            $result1 = $this-&gt;curlAccess1('PUT', $args1);\n\n                                            // insert product into ecommerce bridge\n\n                                        }\n                                    }\n                                    else\n                                    {\n                                        $res = ['status' =&gt; 'false', 'message' =&gt; 'Product not updated properly'];\n                                        return $res;\n                                    }```\n"
  }
]
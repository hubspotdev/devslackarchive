[
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2019-02-07 01:30:19",
    "text": "Hi <@U79N5J2AU> I do not know if you have already looked into it but I would start from seeing if images can be optimized <https://imagekit.io/website-analyzer?taskId=e0a53996c35e238f811537705d6b4aa0&amp;device=desktop> and maybe implement lazyloading for images. Splitting stuff into separate tables should not cause any problems if that is what you need. Since from my understanding if you generate html with hubl it is done before pageload on serverside. 93% of pageload is on images now on that page."
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2019-02-07 01:30:49",
    "text": "<@U79N5J2AU> I recall there being a 10.000 limit of rows in single table"
  },
  {
    "poster": {
      "poster_name": "Furqan Asghar",
      "poster_handle": "mfa213"
    },
    "time_stamp": "2019-02-07 01:32:57",
    "text": "yeah already have images optimized"
  },
  {
    "poster": {
      "poster_name": "Furqan Asghar",
      "poster_handle": "mfa213"
    },
    "time_stamp": "2019-02-07 01:33:19",
    "text": "great, thanks <@U7WV8C5LN>"
  },
  {
    "poster": {
      "poster_name": "Furqan Asghar",
      "poster_handle": "mfa213"
    },
    "time_stamp": "2019-02-07 01:35:58",
    "text": "i see that there's 10 table scans per CMS page. Does that mean we can query 10 different tables per CMS page ? or one table maximum 10 times per CMS page ?"
  },
  {
    "poster": {
      "poster_name": "Furqan Asghar",
      "poster_handle": "mfa213"
    },
    "time_stamp": "2019-02-07 01:36:01",
    "text": "<@U7WV8C5LN>"
  },
  {
    "poster": {
      "poster_name": "Furqan Asghar",
      "poster_handle": "mfa213"
    },
    "time_stamp": "2019-02-07 01:36:12",
    "text": "<https://designers.HubSpot.com/docs/tools/hubdb>"
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2019-02-07 01:39:53",
    "text": "yea then maybe implement the lazyloading to reduce the initial pageload to improve performance"
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2019-02-07 01:41:49",
    "text": "Yea I understand that as a full scan of a table. So whether you need to loop through a single table 10 times or 10 different tables once or something in between. But don’t take that as a solid promise on the case. I have not ran into the limits yet on any solution that I’ve been working with."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-07 08:27:48",
    "text": "you can call `hubdb_table_rows` 10 times with 10 different tables or 10 times with the same table and different queries"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-07 08:28:23",
    "text": "But 10 is a lot. In general it will be faster if you can reduce that number"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-07 10:52:36",
    "text": "The server-side rendering of the page looks fine if you look at the source with hsDebug. The page is also cached, so server rendering time won’t matter much. I would focus on client rendering, especially with all those images. <https://www.datacouncil.ai/speakers?hsDebug=True>"
  }
]
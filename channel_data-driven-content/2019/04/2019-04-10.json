[
  {
    "poster": {
      "poster_name": "Guido Porcaro",
      "poster_handle": "guido.porcaro"
    },
    "time_stamp": "2019-04-10 01:00:35",
    "text": "Nope, working fine here with 3 levels"
  },
  {
    "poster": {
      "poster_name": "Cyril Balatero",
      "poster_handle": "cyril.balatero"
    },
    "time_stamp": "2019-04-10 01:41:46",
    "text": "Kinda strange. Well, thanks! I will figure it out myself :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-04-10 06:55:04",
    "text": "Hey all. I created a multilevel dynamic page template using HubDB. Everything is working as expected with the main table I connected via the settings. I also have a custom module within that same dynamic page template that is supposed to be pulling in data from _another_ HubDB table, however it's not returning any results. Results are returned as expected on other page templates, but not this multilevel dynamic one. It seems that there's a conflict with multiple tables. Has anyone else experienced this?"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-04-10 12:44:52",
    "text": "Is it possible to use a repeater module in an email temp?"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2019-04-10 13:11:21",
    "text": "makes sense, that would be more than enough for 99% of use cases"
  },
  {
    "poster": {
      "poster_name": "Johncarlo S",
      "poster_handle": "johncarlo"
    },
    "time_stamp": "2019-04-10 13:39:05",
    "text": "Is there a way to fill a HubDB with contacts from a specific list? And after that be able to output that list of contacts with specific properties in an email?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-10 13:42:22"
      },
      {
        "time_stamp": "2019-04-10 13:43:15"
      },
      {
        "time_stamp": "2019-04-10 13:47:26"
      },
      {
        "time_stamp": "2019-04-10 13:49:28"
      },
      {
        "time_stamp": "2019-04-10 19:34:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-10 13:42:22",
    "text": "That sounds very dangerous for privacy reasons"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-10 13:43:15",
    "text": "do not store any user/confidential information inside of HubDB it is publicly accessible."
  },
  {
    "poster": {
      "poster_name": "Johncarlo S",
      "poster_handle": "johncarlo"
    },
    "time_stamp": "2019-04-10 13:47:26",
    "text": "Ah okay so it can only be used for anything that needs to be publicly accessible, gotcha. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-10 13:49:28",
    "text": "correct and no problem."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-04-10 19:34:57",
    "text": "You can use the `crm_object` HubL function for this though"
  }
]
[
  null,
  null,
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-12-11 03:34:31",
    "text": "I basically use the same but capitalize with the HubL filter:\n`{{ topic|replace(\"-\",\"  \")|capitalize }}`"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2018-12-11 05:35:06",
    "text": "sorry for late. We used {{ page_meta.html_title|split(' | ', 2)|last }}"
  },
  null,
  {
    "poster": {
      "poster_name": "zgundersen",
      "poster_handle": "zgundersen"
    },
    "time_stamp": "2018-12-11 07:43:29",
    "text": "Trying to figure out what I’m doing wrong here. I’m trying to use a page field within a repeater to set up an easy way for a user to be able to link to existing pages.  Here’s the basic syntax I’m working with:"
  },
  {
    "text": "",
    "time_stamp": "2018-12-11 07:43:50"
  },
  {
    "poster": {
      "poster_name": "zgundersen",
      "poster_handle": "zgundersen"
    },
    "time_stamp": "2018-12-11 07:45:41",
    "text": "My repeater has the hubl variable name of “page_items” and my page field within it has the hubl variable name of “page_link”"
  },
  {
    "poster": {
      "poster_name": "zgundersen",
      "poster_handle": "zgundersen"
    },
    "time_stamp": "2018-12-11 07:45:50",
    "text": "Anything about this jump out at anyone?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-11 08:10:58"
      },
      {
        "time_stamp": "2018-12-11 08:11:34"
      },
      {
        "time_stamp": "2018-12-11 08:35:13"
      },
      {
        "time_stamp": "2018-12-11 08:35:46"
      },
      {
        "time_stamp": "2018-12-11 08:43:41"
      },
      {
        "time_stamp": "2018-12-11 08:52:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:07:04",
    "edited": {
      "time_stamp": "2018-12-11 08:09:15"
    },
    "text": ":question: I have a special  section header module, that the client wants me to combine into several other modules, so they don’t have to place so many modules on the page(as this header will always go with them). I’m trying to brainstorm the right way to go about this as copying and pasting the code into several modules seems like a maintennance nightmare should that code need to change. *How would you guys approach this?*\nThis would be an ideal situation for nested custom modules but alas that’s not allowed.\n\nMy ideas I’ve had so far\n• build add an element to the modules that gets swapped out via javascript with the correct html to maintain consistency. (the whole module’s html would be in the js file)\n• due it the bad way and copy and paste the html into all of these modules and hope to never need to tweak it.",
    "reply_count": 21,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-11 08:13:07"
      },
      {
        "time_stamp": "2018-12-11 08:14:11"
      },
      {
        "time_stamp": "2018-12-11 08:15:15"
      },
      {
        "time_stamp": "2018-12-11 08:15:44"
      },
      {
        "time_stamp": "2018-12-11 08:16:03"
      },
      {
        "time_stamp": "2018-12-11 08:16:06"
      },
      {
        "time_stamp": "2018-12-11 08:16:19"
      },
      {
        "time_stamp": "2018-12-11 08:16:22"
      },
      {
        "time_stamp": "2018-12-11 08:16:33"
      },
      {
        "time_stamp": "2018-12-11 08:16:49"
      },
      {
        "time_stamp": "2018-12-11 08:17:12"
      },
      {
        "time_stamp": "2018-12-11 08:17:25"
      },
      {
        "time_stamp": "2018-12-11 08:17:30"
      },
      {
        "time_stamp": "2018-12-11 08:19:35"
      },
      {
        "time_stamp": "2018-12-11 08:20:54"
      },
      {
        "time_stamp": "2018-12-11 08:21:02"
      },
      {
        "time_stamp": "2018-12-11 09:12:15"
      },
      {
        "time_stamp": "2018-12-11 09:15:02"
      },
      {
        "time_stamp": "2018-12-11 09:15:12"
      },
      {
        "time_stamp": "2018-12-11 09:16:23"
      },
      {
        "time_stamp": "2018-12-11 09:19:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:10:58",
    "text": "what you’re doing looks correct. try using copy snippet on your repeater and look at the code that HS generates, compare it to yours.\n\nThat troubleshooting tactic usually makes it easier to catch"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:11:34",
    "text": "one possible problem you might have is that maybe you’re selecting a blog post. If you are then page_by_id wont work, you’ll need blog post by id"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-11 08:13:07",
    "text": "So you're saying the JS would be an attached file, right? So the logic would be update that file, then the markup content would update across all instances of the module?"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-11 08:14:11",
    "text": "If you needed the excuse, could be a good use-case for Vue components :wink:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:15:15",
    "text": "Yes, that’s basically what I’m thinking. Though VueJS is likely overkill for this specific instance"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:15:44",
    "text": "So I usually include a separate html partial full of macros in my projects"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:16:03",
    "text": "And then do `{% import \"/path/to/components.html\" as components %}`"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:16:06",
    "text": "In the head"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-11 08:16:19",
    "text": "^ But that wouldn't be available in a module, right?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:16:22",
    "text": "and the macro will work inside the modules?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:16:33",
    "text": "As long as it's on a page where it's imported"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:16:49",
    "text": "But you could always import it in the module itself, too. Don't see why that would be a problem."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:17:12",
    "text": "hmm, this is worth a shot, it’s like the best of both worlds. very clever if it works"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:17:25",
    "text": "Anything that gets used over and over goes in there: `{{ components.section_header(\"My Cool Header\") }}`"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:17:30",
    "text": "Something like that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:19:35",
    "text": "hmm, that’s pretty slick, trying it out"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:20:54",
    "text": "if this works as expected. I’m going to make a note to see if this might be useful for <#CCQSQ2C6L|crankshaft> might be some really cool utilities we could make with this."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:21:02",
    "text": "It's super useful"
  },
  {
    "poster": {
      "poster_name": "zgundersen",
      "poster_handle": "zgundersen"
    },
    "time_stamp": "2018-12-11 08:35:13",
    "text": "yes! That’s the issue, I didn’t realize that you needed different syntax for blog posts vs page IDs."
  },
  {
    "poster": {
      "poster_name": "zgundersen",
      "poster_handle": "zgundersen"
    },
    "time_stamp": "2018-12-11 08:35:46",
    "text": "Now I’m wondering if there’s a way to use HubL to detect whether an ID is for a blog post or a page"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 08:43:41",
    "edited": {
      "time_stamp": "2018-12-11 08:45:21"
    },
    "text": "you can, if you look in <#C2YH119N2|hubl> it was posted yesterday I think, as well as multiple other times this past week"
  },
  {
    "poster": {
      "poster_name": "zgundersen",
      "poster_handle": "zgundersen"
    },
    "time_stamp": "2018-12-11 08:52:37",
    "text": "perfect! found it! thank you!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 09:12:15",
    "text": "works flawlessly, just makes the editor go “not recommended in this context” but still allows it"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 09:15:02",
    "text": "Oh, yeah I suppose it would if you used it in a module"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 09:15:12",
    "text": "For me, it just always goes in the head of every template"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 09:16:23",
    "text": "hmm, wonder if that import is taxxing on the server in a custom module, due to every module loading it.\n\nI’d do it in the template but I figure if a template didn’t have it and they add the  module to a page it could cause problems"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 09:19:40",
    "text": "too bad there isn’t something like a require_import"
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 12:26:24",
    "text": "*:rotating_light:Community Announcement:rotating_light:*\nIf anyone ever gets direct messaged with spam, offers, or a scam - please let me know ASAP.\nOur goal is to keep this slack 100% amazing, helpful, fun and free of garbage. Only good people doing good work. :pray:\n\n&gt; (just banned someone spamming. I'm sure it will happen again - so let me know so I can investigate)",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-11 12:27:49"
      },
      {
        "time_stamp": "2018-12-11 12:28:20"
      },
      {
        "time_stamp": "2018-12-11 12:28:57"
      },
      {
        "time_stamp": "2018-12-11 12:28:57"
      },
      {
        "time_stamp": "2018-12-11 12:57:08"
      },
      {
        "time_stamp": "2018-12-11 13:03:45"
      },
      {
        "time_stamp": "2018-12-11 13:18:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 12:27:49",
    "text": "Thank you for laying down the law. curious to know how he tried to scam. Regardless appreciate the quick action"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 12:28:20",
    "text": "Was asking for access to someone upwork account... to do work on their behalf and split profits."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 12:28:57",
    "text": "lol agreed with everyone, weak and stupid scam."
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 12:28:57",
    "text": ":face_with_rolling_eyes:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-11 12:29:34",
    "text": "how long before i am banned.  I am the chief spambot",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-11 12:30:46"
      },
      {
        "time_stamp": "2018-12-11 12:31:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 12:30:46",
    "text": "yea but your spam to providing help ratio is at like 30 humerous posts per 1 helpful post. so you’re good."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-11 12:31:29",
    "text": "ha!"
  },
  {
    "poster": {
      "poster_name": "Jordi Navarrete",
      "poster_handle": "inboundemotion"
    },
    "time_stamp": "2018-12-11 12:33:34",
    "text": "Any place to leave questions for the tomorrow's AMA?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-12-11 13:19:08"
      },
      {
        "time_stamp": "2018-12-11 14:09:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-11 12:57:08",
    "text": "<@U22PKFRU5> Are you interested in discount Oakleys???? A+++++ iPhone FREE"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-11 13:03:45",
    "text": "lol found at <http://totally-real-ifone-4u.ru|totally-real-ifone-4u.ru>"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 13:18:21",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 13:19:08",
    "text": "Hunting the link down.. will post soon"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 14:09:34",
    "text": "You can submit via the registration form (see last question): <https://developers.HubSpot.com/developer-ama-2>\n\nIf you've already registered, please fill it out a second time and include your new questions. :slightly_smiling_face: cc.  <@U2Q5LPHGS>"
  },
  null,
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 18:23:48",
    "text": "Want to stay on top of :sprocket: HubSpot developer products and updates?\n&gt; Make sure to join this new channel :point_right: <#CEQQ9NFK2|releases-and-updates>"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-11 18:24:00",
    "text": ":bmo:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-11 20:35:10",
    "text": "i have looked and havent found dummy content to import into a blog.  would anyone find it helpful to have a repository containing a couple HubSpot importable xml files for testing? ",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-12-12 05:16:45"
      },
      {
        "time_stamp": "2018-12-12 07:09:26"
      },
      {
        "time_stamp": "2018-12-12 07:10:15"
      },
      {
        "time_stamp": "2018-12-12 07:10:53"
      },
      {
        "time_stamp": "2018-12-12 07:16:48"
      },
      {
        "time_stamp": "2018-12-12 08:13:46"
      },
      {
        "time_stamp": "2018-12-12 08:14:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-11 20:35:56",
    "text": "i created one, but may make another to include more options  (comments, featured image, tags etc)  "
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-11 20:36:23",
    "text": "(obviously, if this exists, tell me!)"
  }
]
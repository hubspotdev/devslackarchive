[
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj"
    },
    "time_stamp": "2019-02-08 09:19:54",
    "edited": {
      "time_stamp": "2019-02-08 09:21:23"
    },
    "text": "Has anyone succeeded in writing a button module that can be used in email templates? Looking to allow a user to make their own buttons on the fly like you can in the beta drag and drop editor."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 09:21:04",
    "text": "<@UBJLEPM0W>\n2 ways to do buttons use CTAs/images or use bulletproof buttons\n<https://buttons.cm/>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-08 09:33:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 09:29:06",
    "text": "If you dont care about the \"Views\" portion of the button, you can use bulletproof button and make the href be the href from the CTA embed code"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-08 09:29:18",
    "text": "Anyone know if you can submit v3 Ajax supported Forms with an associated Campaign ID? I dont see anything in the docs\n<https://developers.HubSpot.com/docs/methods/forms/submit_form_v3>",
    "reply_count": 12,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-08 09:30:07"
      },
      {
        "time_stamp": "2019-02-08 09:30:19"
      },
      {
        "time_stamp": "2019-02-08 09:30:45"
      },
      {
        "time_stamp": "2019-02-08 09:31:09"
      },
      {
        "time_stamp": "2019-02-08 09:31:49"
      },
      {
        "time_stamp": "2019-02-08 09:33:12"
      },
      {
        "time_stamp": "2019-02-08 09:33:20"
      },
      {
        "time_stamp": "2019-02-08 09:33:41"
      },
      {
        "time_stamp": "2019-02-08 09:34:11"
      },
      {
        "time_stamp": "2019-02-08 09:34:13"
      },
      {
        "time_stamp": "2019-02-08 09:36:27"
      },
      {
        "time_stamp": "2019-02-08 09:37:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-02-08 09:30:07",
    "text": "Yup, we still support that"
  },
  {
    "text": "",
    "time_stamp": "2019-02-08 09:30:19"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-08 09:30:45",
    "text": "Is that only for sales force though?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-02-08 09:31:09",
    "text": "correct, that’s all we’ve ever supported so that’s what I assumed you were talking about"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-08 09:31:49",
    "text": "Well HS has their own campaigns which is what im referring too"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-02-08 09:33:12",
    "text": "Correct, however Forms don’t associate to Campaigns, you can associate Landing Pages to Campaigns, but not Forms"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-08 09:33:20",
    "text": "gotcha"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-02-08 09:33:41",
    "text": "Contacts get assocated to an HS campaign by interacting with an asset assocaited with a campaign (like a LP, social media post, blog post, etc)"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-02-08 09:33:53",
    "text": "I created an email module for this. it works great! Just dont use percentages."
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-08 09:34:11",
    "text": "So our issue is we have a custom form on a landing page but it is not tracking conversions with the v3 form"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-02-08 09:34:13",
    "text": "it’s a different paradigm than an SFDC campaign where you have direct campaign memberships, but a HS Campaign is really about the content"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-02-08 09:36:27",
    "text": "Ah ok so to get conversion tracking as if it were a native form on the page, your best bet is to put a native form on the page, inspect element and see what other fields are in the `hs_context` hidden field on the form. Keep in mind that those aren’t documented and could change at any point, but that’s as close as you can get to mimicking the analytics of a native Form on an HS landing page"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-08 09:37:36",
    "text": "thanks will try that"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 12:43:07",
    "text": "is there a param to add to `{{ today() }}` to get just the date portion?",
    "reply_count": 18,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-02-08 12:45:46"
      },
      {
        "time_stamp": "2019-02-08 12:49:05"
      },
      {
        "time_stamp": "2019-02-08 12:51:25"
      },
      {
        "time_stamp": "2019-02-08 12:52:09"
      },
      {
        "time_stamp": "2019-02-08 12:52:18"
      },
      {
        "time_stamp": "2019-02-08 12:52:56"
      },
      {
        "time_stamp": "2019-02-08 12:53:02"
      },
      {
        "time_stamp": "2019-02-08 12:54:46"
      },
      {
        "time_stamp": "2019-02-08 12:57:14"
      },
      {
        "time_stamp": "2019-02-08 12:59:30"
      },
      {
        "time_stamp": "2019-02-08 13:00:13"
      },
      {
        "time_stamp": "2019-02-08 13:00:24"
      },
      {
        "time_stamp": "2019-02-08 13:00:33"
      },
      {
        "time_stamp": "2019-02-08 13:00:47"
      },
      {
        "time_stamp": "2019-02-08 13:00:50"
      },
      {
        "time_stamp": "2019-02-08 13:01:11"
      },
      {
        "time_stamp": "2019-02-08 13:02:42"
      },
      {
        "time_stamp": "2019-02-08 13:10:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-02-08 12:45:46",
    "text": "the datetimeformat filter is what you want <https://designers.HubSpot.com/docs/hubl/hubl-supported-filters#datetimeformat>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 12:47:23",
    "edited": {
      "time_stamp": "2019-02-08 12:48:20"
    },
    "text": "getting ``` 1.\nError:Syntax error in \"[missing {{token}} value]\" ``` in a template I’m upgrading(old template was DM1)\n\nthis error is pretty useless.\n\nit looks like it’s saying I am trying to print a hubl var that doesn’t exist. somewhere in the whole drag n drop template, but idk where."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 12:49:05",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 12:49:16",
    "text": "even weirder the error only appears when i try to publish otherwise it says no errors found"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 12:51:25",
    "edited": {
      "time_stamp": "2019-02-08 12:51:47"
    },
    "text": "do you know if you can do something like\n```\n{% set date = 2019-02-10T00:00Z %}\n{% if today() &gt;= date %}\ndothis\n{%endif%}\n```"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 12:52:09",
    "text": "basically trying to hack a template quickly for adding a class to an element on X date"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 12:52:18",
    "text": "this way I dont have to be up at midnight to make a change"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 12:52:56",
    "text": "<@U6GNQ7JBU> pinging you on this just in case you may know a quick answer"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 12:53:02",
    "text": "the client doesnt have staging ability"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 12:54:46",
    "text": "`{% if today()|unixtimestamp &gt;= date_timestamp %}`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 12:57:14",
    "text": "or"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 12:59:30",
    "text": "`{% if today()|unixtimestamp &gt;= strtotime(\"2019-02-10T00:00Z\")|unixtimestamp %}`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 13:00:13",
    "text": "You’ll have to pass in the format as the second param to the strtotime filter"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 13:00:24",
    "text": "Awesome! thank you so much on this. I will end up using the 2nd one.\n\nAlso, whats the best date to unixtimestamp conversion site to use for figuring these out?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 13:00:33",
    "text": "`{% if today()|unixtimestamp &gt;= \"2019-02-10T00:00Z\"|strtotime(format)|unixtimestamp %}`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 13:00:47",
    "text": "<https://www.epochconverter.com/>"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-02-08 13:00:50",
    "text": "`1549774800000` is the unix timestamp for 2019-02-10T00:00Z"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 13:01:11",
    "text": "Make sure to use milliseconds"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-02-08 13:02:42",
    "text": "This is a very helpful extension <https://chrome.google.com/webstore/detail/utime/kpcibgnngaaabebmcabmkocdokepdaki>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:09:32",
    "text": "<https://spin.d.pr/PVoJ4d+>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 13:10:22",
    "text": "Thank you both very much!"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-02-08 13:33:27",
    "text": "Definitely cancel"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:39:47",
    "text": "figured out the issue - appears to be an error sensitivity issue put up an idea in in <#C26E7JT8V|ideas> about addressing it. HubSpot’s copy snippet feature is currently generating code that will trigger this error."
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-08 13:54:24",
    "text": "Hey guys, I'm not sure if this is how it works but can anyone point me in the right direction with my setup on `resize_image_url`? It doesn't seem to scale down on my end.. Here's the test page\n<http://louie-gerodiaz-dev-4791627-4791627-hs-sites-com.sandbox.hs-sites.com/test-page>",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-02-11 08:58:47"
      },
      {
        "time_stamp": "2019-02-11 08:59:41"
      },
      {
        "time_stamp": "2019-02-11 09:13:19"
      },
      {
        "time_stamp": "2019-02-11 09:21:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:55:08",
    "text": "looks like you’re doing it right"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:56:06",
    "text": "it’s just not working, the file size might not be less than it’s large size. (that shouldn’t be the case)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:56:36",
    "text": "post your HubL"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-08 13:57:18",
    "text": "Here's the code `{{ resize_image_url(src, 600, 0, 0) }}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 14:00:24",
    "text": "there’s 2 more values you can add which are booleans, they’re optional but they determine if the resize function should resize even if the filesize is equal to or more than the original"
  },
  {
    "poster": {
      "poster_name": "mvillalobos",
      "poster_handle": "mvillalobos"
    },
    "time_stamp": "2019-02-08 14:00:42",
    "edited": {
      "time_stamp": "2019-02-08 14:00:53"
    },
    "text": "I've been trying to get the `resize_image_url` to work as well and have had no luck...interested in these other values!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 14:00:45",
    "text": "by default they are both false"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 14:01:18",
    "text": "well if you are both using the function like louie is, you’re not doing anything wrong, it seems like a bug on HubSpot’s end most likely"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-08 14:01:59",
    "text": "Yeah, figured those last two booleans should somehow affect the url. But I knew this was working on my previous projects :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 14:02:38",
    "text": "not sure what :sprocket:  person would be relavent to this issue."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-02-08 14:04:36",
    "text": "I don't think it works with gifs"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-02-08 14:04:46",
    "text": "just PNGs and JPGs",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-08 14:15:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-08 14:05:08",
    "text": "Thanks for looking into this anyways <@U7SL518D6> really appreciate it. The HS dev team should get you some beer or something :sweat_smile:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 14:06:05",
    "text": "haha if anything we should just call it even. I owe almost all of the HS dev team beer at this point",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-11 11:01:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 14:13:48",
    "edited": {
      "time_stamp": "2019-02-08 14:13:59"
    },
    "text": "actually I think it’s on me to get them beer now that I think of it, they sent me a bunch of free HubSpot swag this year"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-08 14:15:35",
    "text": "Still not working with JPGs though. Thanks anyways <@U7V9DQ31P> :sweat_smile:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-08 17:18:03",
    "text": "As always, all are welcome at Emmet's. I owe  everyone a round"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-08 17:19:07",
    "text": "Am actually considering brewing some HubSpot beers for inbound "
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 17:35:55",
    "text": "that’d be cool"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-02-08 17:45:24",
    "edited": {
      "time_stamp": "2019-02-08 17:45:35"
    },
    "text": "Ya'll keep talking about Emmets and I assumed it was some kind of hypothetical imaginary insider developer pub spot named after the text-editor plugin. Like \"Arpeggio's\" for musicians or \"Kearning's\" for designers. Just googled and realize its an actual place...",
    "reply_count": 14,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-02-08 17:51:57"
      },
      {
        "time_stamp": "2019-02-08 17:53:58"
      },
      {
        "time_stamp": "2019-02-08 20:34:05"
      },
      {
        "time_stamp": "2019-02-08 20:35:19"
      },
      {
        "time_stamp": "2019-02-08 20:39:27"
      },
      {
        "time_stamp": "2019-02-08 20:41:21"
      },
      {
        "time_stamp": "2019-02-08 20:44:52"
      },
      {
        "time_stamp": "2019-02-08 20:52:51"
      },
      {
        "time_stamp": "2019-02-09 08:52:21"
      },
      {
        "time_stamp": "2019-02-09 08:52:21"
      },
      {
        "time_stamp": "2019-02-09 08:52:59"
      },
      {
        "time_stamp": "2019-02-09 15:45:09"
      },
      {
        "time_stamp": "2019-02-09 17:05:48"
      },
      {
        "time_stamp": "2019-02-09 17:51:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-08 17:51:57",
    "text": "You are correct about it being an imaginary place dedicated to the plugin. I am pushing as hard as I can for HubSpot to incorporate it!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-08 17:53:58",
    "text": "If it exists near the conference, we should go!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 20:34:05",
    "text": "Rofl its a real place? Douglas your assumption was correct. It is a long running joke on the slack because weve been pushing HS to add emmet support to the DM. We came up with tons of hs development related drink and appetizer names"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 20:35:19",
    "text": "And we joked it should be a pop up bar only open during inbound and all devs and HS devs are invited"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-08 20:39:27",
    "text": "It's gonna happen, damnit!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 20:41:21",
    "text": "Hey I'm all for it if you can find a way to raise the money."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-08 20:44:52",
    "text": "Been selling my blood for the cause"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 20:52:51",
    "text": "Lol"
  }
]
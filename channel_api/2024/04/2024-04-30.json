[
  {
    "text": "Hi folks,\nI have published an app on the HubSpot Marketplace, but the issue is - only Super Admins can install it.\n\nIndividual non-super admin users with enough permissions, are not able to install it. What am i doing wrong?\n\nHere are the AuthScopes I am asking permission for :",
    "time_stamp": "2024-04-30 01:26:24",
    "edited": {
      "time_stamp": "2024-04-30 01:26:53"
    },
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-30 02:09:53"
      },
      {
        "time_stamp": "2024-04-30 04:56:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Saravanakumar",
      "poster_handle": "saravanakumar"
    },
    "time_stamp": "2024-04-30 01:28:18",
    "text": "Hi Team,"
  },
  {
    "poster": {
      "poster_name": "Saravanakumar",
      "poster_handle": "saravanakumar"
    },
    "time_stamp": "2024-04-30 01:29:35",
    "text": "I have to pass the portal id in my action payload     {\n      \"functionType\": \"POST_FETCH_OPTIONS\",\n       \"id\":\"campusInput\",\n       \"functionSource\": \"const axios = require('axios');     exports.main = async (event, callback) =&gt; {\\n  try {\\n\n\t    const portalid=  need to get the portal id;\\n\n\t   const response = await axios.get(*'my api url / portalid*');\\n\n\t   const data = response.data.data;      const options = data.map(item =&gt; (\\n     {\\\"label\\\": item.name,\\n      \\\"value\\\":item.id\\n    }));\\n     // Return the options to the workflow\\n    callback({\\n      \\\"options\\\": options\\n    });\\n  } catch (error) {\\n    console.error('Error fetching options:', error);\\n    // Return empty options array in case of error\\n    callback({\\n      \\\"options\\\": []\\n    });\\n  }\\n}\"\n    }"
  },
  {
    "poster": {
      "poster_name": "Saravanakumar",
      "poster_handle": "saravanakumar"
    },
    "time_stamp": "2024-04-30 01:30:38",
    "text": "I have 2 dropdown in my action. dropdown value will be fill based on portal id. I am configurating my api for fetching value for dropdown"
  },
  {
    "poster": {
      "poster_name": "Saravanakumar",
      "poster_handle": "saravanakumar"
    },
    "time_stamp": "2024-04-30 01:31:06",
    "text": "how to get the portal id based on current workflow user?"
  },
  {
    "poster": {
      "poster_name": "Saravanakumar",
      "poster_handle": "saravanakumar"
    },
    "time_stamp": "2024-04-30 01:31:17",
    "text": "Please assist."
  },
  {
    "poster": {
      "poster_name": "kingsley nmoye",
      "poster_handle": "kingsley.nmoye"
    },
    "time_stamp": "2024-04-30 01:39:30",
    "text": "Thanks <@U05EC3L7UF8> the endpoint very useful :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Stacey Thomas",
      "poster_handle": "stacey.thomas"
    },
    "time_stamp": "2024-04-30 02:09:53",
    "text": "Is there something there within scopes that a non-super-admin doesn't have permissions for? If a 'standard' user doesn't have access to some of the permissions set in your scopes that could be why.\nCheck the user also has app marketplace permissions as well, as i think that's also a requirement (we certainly wouldn't want a standard user to start installing apps on our workspace without permissions to do so)."
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 04:17:29",
    "text": ":wave: Hello, team!"
  },
  {
    "text": "I am using HubSpot now i wanna trigger webhook activity when note is created or task or email or call ( the things that lie under activities). I can not see any option regarding this in the webhook. i want to enable webhooks for these actions but i can not find options in the (2nd image).\nso is it not possible or if there is any other option for that",
    "time_stamp": "2024-04-30 04:19:16",
    "reply_count": 19,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-04-30 04:24:49"
      },
      {
        "time_stamp": "2024-04-30 04:26:18"
      },
      {
        "time_stamp": "2024-04-30 04:27:39"
      },
      {
        "time_stamp": "2024-04-30 04:30:07"
      },
      {
        "time_stamp": "2024-04-30 04:35:52"
      },
      {
        "time_stamp": "2024-04-30 06:10:07"
      },
      {
        "time_stamp": "2024-04-30 06:12:49"
      },
      {
        "time_stamp": "2024-04-30 06:21:35"
      },
      {
        "time_stamp": "2024-04-30 06:59:28"
      },
      {
        "time_stamp": "2024-04-30 07:07:06"
      },
      {
        "time_stamp": "2024-04-30 07:33:50"
      },
      {
        "time_stamp": "2024-04-30 07:39:42"
      },
      {
        "time_stamp": "2024-04-30 07:48:02"
      },
      {
        "time_stamp": "2024-04-30 07:56:00"
      },
      {
        "time_stamp": "2024-04-30 07:56:37"
      },
      {
        "time_stamp": "2024-04-30 08:03:43"
      },
      {
        "time_stamp": "2024-04-30 08:12:46"
      },
      {
        "time_stamp": "2024-04-30 08:27:12"
      },
      {
        "time_stamp": "2024-04-30 08:27:55"
      }
    ]
  },
  {
    "text": "Hi everyone,\n\nI am using `/crm/v3/objects/contacts/search` to get all contacts with the request body:\n```{\"limit\": 100, \"after\": \"10000\", \"filterGroups\": [{\"filters\": [{\"value\": \"MY_TYPE\", \"propertyName\": \"contact_type\", \"operator\": \"EQ\"}]}]}```\nI have ~55k contacts so the api will be requested many times, until it fetches all the contacts.\nIt seems that the request is successful until some point but then its failing with the response:\n```{\"status\":\"error\",\"message\":\"There was a problem with the request.\",\"correlationId\":\"8a323fd4-22c7-4c73-a054-58d358a92065\"}```\nCan someone help me out? The error is not helpful at all, so I am not sure how to debug this",
    "time_stamp": "2024-04-30 04:20:35",
    "reply_count": 28,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-04-30 06:12:31"
      },
      {
        "time_stamp": "2024-04-30 06:19:51"
      },
      {
        "time_stamp": "2024-04-30 06:22:30"
      },
      {
        "time_stamp": "2024-04-30 06:22:37"
      },
      {
        "time_stamp": "2024-04-30 06:27:02"
      },
      {
        "time_stamp": "2024-04-30 06:27:09"
      },
      {
        "time_stamp": "2024-04-30 06:28:08"
      },
      {
        "time_stamp": "2024-04-30 06:31:35"
      },
      {
        "time_stamp": "2024-04-30 06:34:34"
      },
      {
        "time_stamp": "2024-04-30 06:34:44"
      },
      {
        "time_stamp": "2024-04-30 06:34:53"
      },
      {
        "time_stamp": "2024-04-30 06:39:15"
      },
      {
        "time_stamp": "2024-04-30 06:59:32"
      },
      {
        "time_stamp": "2024-04-30 07:34:10"
      },
      {
        "time_stamp": "2024-04-30 09:31:48"
      },
      {
        "time_stamp": "2024-04-30 09:32:04"
      },
      {
        "time_stamp": "2024-04-30 09:33:16"
      },
      {
        "time_stamp": "2024-04-30 09:33:35"
      },
      {
        "time_stamp": "2024-04-30 09:34:20"
      },
      {
        "time_stamp": "2024-04-30 09:34:43"
      },
      {
        "time_stamp": "2024-04-30 09:34:50"
      },
      {
        "time_stamp": "2024-04-30 09:35:03"
      },
      {
        "time_stamp": "2024-04-30 09:35:05"
      },
      {
        "time_stamp": "2024-04-30 09:35:12"
      },
      {
        "time_stamp": "2024-04-30 09:35:12"
      },
      {
        "time_stamp": "2024-04-30 09:35:17"
      },
      {
        "time_stamp": "2024-04-30 09:36:04"
      },
      {
        "time_stamp": "2024-04-30 09:36:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2024-04-30 04:24:49",
    "text": "Well you can add a subscription on contact and look for the field \"Last Engagement Date\", when that field is updated (automaticallty when a new engagement is created) this will trigger"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 04:26:18",
    "text": "lemme check it"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 04:27:39",
    "edited": {
      "time_stamp": "2024-04-30 04:27:48"
    },
    "text": "<@UV23JHEJY> any idea where i can find the option for adding subscription"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2024-04-30 04:30:07",
    "text": "Weird, I tried adding that field but it doesn't look like it's available on webhooks subscriptions, you could try copying the value of that field to a new date field with a workflow and check if you can use that field in the subscription"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 04:35:52",
    "text": "i cant get you man. Look whenever i say create a ticket etc my webhook is triggered all permissions are enabled on the webhook. now i simply want to trigger webhook when someone creates an activity say a note call etc. but i am unable to find option"
  },
  {
    "poster": {
      "poster_name": "Vinayak Jhunjhunwala",
      "poster_handle": "vinayak"
    },
    "time_stamp": "2024-04-30 04:56:45",
    "text": "Hmm that's true. On further investigation found out that in the \"tickets\" object, edit permission was misisng."
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:04:17",
    "text": "<@U04D7F7R96E> I wish. Maybe some day. Your best bet right now is what Cristobal suggested, or using the GQL collector to replicate the report data"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:10:07",
    "text": "homeboy I chatted with had success with this method:\nwebhook on property change for Last Activity Date\nuse the data that is returned to get more data using the engagements endpoint for that contact\nbecause last activity date is updated by any activity, you want to query the recent engagements to see what kind of engagement there was.\n<https://knowledge.HubSpot.com/properties/HubSpots-default-contact-properties|default HubSpot properties> can be a goldmine for listening into actions"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-04-30 06:11:10",
    "text": "Thanks Yiz, I appreciate your thoughts.  I just tested my process this morning and I see now that the refresh token no longer works as you say.  I just assumed since a refresh token lasts forever that it would keep working even if the app was uninstalled.  Evidently not, this is good."
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:12:31",
    "text": "that error really sucks lol. question: is there a reason you are doing this using search versus a more batch-friendly endpoint like the GETs or the export API?\nsearch is helpful for asynchronously getting specific data but it kind of sucks for batch data (imo)"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 06:12:49",
    "text": "<@U06B6J5BCRY> is it possible for you to share some kind of an image or even screen recording regarding this. I will be really glad man"
  },
  {
    "poster": {
      "poster_name": "Danai Chronopoulou",
      "poster_handle": "danai"
    },
    "time_stamp": "2024-04-30 06:19:51",
    "text": "I found out that the issue is actually the limitation of 10.000 contacts for the search api.\nSo, the `\"after\": \"10000\"`  is what causes the error :confused:\nI am thinking of using the Get all contacts api instead of the search, but i need to fetch based on filters. Specifically to get all contacts where contact_type=MY_TYPE\nIs this possible?"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:21:35",
    "text": "I didn't write that one myself sadly, I just am _kind of a g_ at navigating the weirdness of the API structure at HubSpot and finding neat exploits like this.\nI was basing this <https://legacydocs.HubSpot.com/docs/methods/engagements/engagements-overview|on the older schema> too but it looks like because notes and calls and all other engagements <https://developers.HubSpot.com/docs/api/crm/engagements|are now treated as objects>, you could do a graphql call to say:\nhey for this contact, gimme their (calls notes tasks) that were created after (00:00 am this morning, or however you want to do the timeframe)\nand it should return you all the relevant objects"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:22:30",
    "text": "oh shit I actually knew that limit my b."
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:22:37",
    "text": "yes indeedy one sec"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:27:02",
    "text": "oh well for one you could use graphql but I swear I have an exploit on a legacy method somewhere"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:27:09",
    "text": "im looking for my script"
  },
  {
    "poster": {
      "poster_name": "Danai Chronopoulou",
      "poster_handle": "danai"
    },
    "time_stamp": "2024-04-30 06:28:08",
    "text": "my code is in python if it helps"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:31:35",
    "text": "I write in JS but the concepts should work. The one I found (which isn't the one I amthinking of) goes like this:\n\ngraphql call to get the IDs of the records I care about (500 limit in the return, but no limit like the 10k total)\nthen I used a batch 'get contacts by VID' call because I wanted to get propertiesWithHistory\nbut that's not what you're doing so let me see if I can find the thing I was thinking of initially"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:34:34",
    "text": "omg wait this might be the one lol:\nCreate a list with your filter\nGet contacts from that list\n\nthey boosted the list processer time, so use a chronjob to wait and check if the list finished processing yet, and it'll do the dirt"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:34:44",
    "text": "<https://legacydocs.HubSpot.com/docs/methods/lists/create_list>"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 06:34:53",
    "text": "<https://legacydocs.HubSpot.com/docs/methods/lists/get_list_contacts>"
  },
  {
    "poster": {
      "poster_name": "Ashwin Patel",
      "poster_handle": "tech521"
    },
    "time_stamp": "2024-04-30 06:37:00",
    "text": "Hey Sen"
  },
  {
    "poster": {
      "poster_name": "Ashwin Patel",
      "poster_handle": "tech521"
    },
    "time_stamp": "2024-04-30 06:38:02",
    "text": "small file works fine but large file redirects to - <http://send.hsbrowserreports.com|send.hsbrowserreports.com>"
  },
  {
    "poster": {
      "poster_name": "Danai Chronopoulou",
      "poster_handle": "danai"
    },
    "time_stamp": "2024-04-30 06:39:15",
    "text": "thank you Matt"
  },
  {
    "text": "<@U06B6J5BCRY> i am unable to find Last Activity Date while creating subscription for company contact or anything else.",
    "time_stamp": "2024-04-30 06:59:28"
  },
  {
    "poster": {
      "poster_name": "Danai Chronopoulou",
      "poster_handle": "danai"
    },
    "time_stamp": "2024-04-30 06:59:32",
    "text": "Or i can get all contacts and filter out based on the property"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 07:07:06",
    "text": "do i need to create a custom property first then subscribe to the change in that?"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 07:33:50",
    "text": "oh the internal name is weird its called notes_last_updated"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 07:34:10",
    "text": "or that!"
  },
  {
    "text": "you could try using this api to monitor - it says oauth is a required scope but I tried it my a private app key and it worked -",
    "time_stamp": "2024-04-30 07:35:33"
  },
  {
    "poster": {
      "poster_name": "Cristóbal Parraguez",
      "poster_handle": "cparraguez"
    },
    "time_stamp": "2024-04-30 07:38:10",
    "text": "Thats perfect, thanks <@U01GW2U4WMA>!"
  },
  {
    "text": "it does not exist? or what",
    "time_stamp": "2024-04-30 07:39:42"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 07:48:02",
    "text": "you're looking at Company properties, this is a Contact properties. generally speaking notes and activity usually take place on a specific contact and are secondarily related to a company"
  },
  {
    "poster": {
      "poster_name": "Richard Owens",
      "poster_handle": "rich151"
    },
    "time_stamp": "2024-04-30 07:50:55",
    "text": "Yeah I’d imagine it’s custom coded, do you have access to the website to add in the tracking code? make sure the domain is added to your analytics tracking as a domain in the settings as well. There was a note that HubSpot would not show some analytics from domains not listed"
  },
  {
    "text": "even though the dropdown list of properties in which to look for a change in a webhook seems like a short list, you can type in any one you want -",
    "time_stamp": "2024-04-30 07:56:00"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 07:56:37",
    "text": "<@U01GW2U4WMA> then i will be needing to create this property right?"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 08:03:43",
    "text": "I mean you can create a custom property if you want but in my portal the last activity date field exists as notes_last_updated and I wouldnt need to create a custom property for this, I don't think it's worth having an extra property, but that's up to you!\nI suppose it's possible the name for your property in your portal is different, you can go to Settings &gt; Properties to check for the internal values"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 08:12:46",
    "text": "thanks for guiding i will check that"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-04-30 08:27:12",
    "text": "<@U0713K4B86S> Yes you will need to make sure your typed-in property matches a real property - creating the property first would be best.  I just did not know at first that you could type them in - the given list is so short I thought it wasn't going to work for my needs - but it does"
  },
  {
    "poster": {
      "poster_name": "muhammad haris",
      "poster_handle": "muhammadhariskuk123"
    },
    "time_stamp": "2024-04-30 08:27:55",
    "text": "<@U01GW2U4WMA> i will try and if not successfull will ping back here"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:31:48",
    "text": "Sup <@U06B6J5BCRY> :wave-yeti:"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:32:04",
    "text": "The new Lists V3 API is :fire:"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 09:33:16",
    "text": "_omg hey SCott_"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:33:35",
    "text": "Just started using the new endpointa, and while a little tough to wrap my head around initially, this would be a pretty solid use case, then just query the list members"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:34:20",
    "edited": {
      "time_stamp": "2024-04-30 09:34:34"
    },
    "text": "curl --request PUT \\\n  --url '<https://api.hubapi.com/crm/v3/lists/your_list_id/update-list-filters?enrollObjectsInWorkflows=false>' \\\n  --header 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"filterBranch\": {\n        \"filterBranches\": [\n            {\n                \"filterBranches\": [\n                    {\n                        \"filterBranches\": [],\n                        \"filters\": [\n                            {\n                                \"property\": \"your_property\",\n                                \"operation\": {\n                                    \"operator\": \"IS_EQUAL_TO\",\n                                    \"includeObjectsWithNoValueSet\": false,\n                                    \"values\": [\n                                        \"123\",\n                                        \"456\",\n                                        \"789\"\n                                    ],\n                                    \"operationType\": \"MULTISTRING\"\n                                },\n                                \"filterType\": \"PROPERTY\"\n                            }\n                        ],\n                        \"objectTypeId\": \"0-2\",\n                        \"operator\": \"IN_LIST\",\n                        \"associationTypeId\": 341,\n                        \"associationCategory\": \"HubSpot_DEFINED\",\n                        \"filterBranchType\": \"ASSOCIATION\",\n                        \"filterBranchOperator\": \"AND\"\n                    }\n                ],\n                \"filters\": [],\n                \"filterBranchType\": \"AND\",\n                \"filterBranchOperator\": \"AND\"\n            }\n        ],\n        \"filters\": [],\n        \"filterBranchType\": \"OR\",\n        \"filterBranchOperator\": \"OR\"\n    }\n}'"
  },
  {
    "text": "Hey everyone :wave-yeti:\n\nI’m using the node api to create &amp; update contacts. I was sending something like this: `573167414752` but the web app denies that formatting, in favor of something as in the third image.\nDoes anyone have tips for how to successfully format cellphone numbers for HubSpot? Or should I just remove the number formatting?",
    "time_stamp": "2024-04-30 09:34:38",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-30 09:45:09"
      },
      {
        "time_stamp": "2024-05-07 15:27:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 09:34:43",
    "text": "oh is that why it's faster did they put the front-end on a better architecture?"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:34:50",
    "text": "yeeeep"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 09:35:03",
    "text": "literally blew my mind when I first saw it finish"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:35:05",
    "text": "lists as an object ftw"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 09:35:12",
    "text": "EVERYTHING IS AN OBJECT"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:35:12",
    "text": ":frame_with_picture:"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 09:35:17",
    "text": "except marketing emails....  :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-04-30 09:36:04",
    "text": "they are technically, just very very lightly implemented"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-30 09:36:36",
    "text": "let me reprase: not a _useful_ relational object the way I want it to be. I actually made a sick exploit this week though"
  },
  {
    "poster": {
      "poster_name": "Stacey Thomas",
      "poster_handle": "stacey.thomas"
    },
    "time_stamp": "2024-04-30 09:45:09",
    "text": "I would personally remove number formatting (lol, but that's just me), but if not you could try something like this (if you know it will always be in the same format).\nCertainly not as sophisticated as it could be, so someone else might have a better suggestion!\n```function formatPhoneNumber(number) {\n  return `+${number.slice(0, 2)}(${number.slice(2, 5)})${number.slice(5, 7)}-${number.slice(7)}`;\n}\nconst phoneNumber = \"573167414752\";\nconst formattedNumber = formatPhoneNumber(phoneNumber);\n// Output of formattedNumber: <tel:+57(316)741-4752|+57(316)741-4752>```"
  },
  {
    "poster": {
      "poster_name": "Ashwin Patel",
      "poster_handle": "tech521"
    },
    "time_stamp": "2024-04-30 14:44:46",
    "text": "can you share the solution please? <mailto:apatel@horsesmouth.com|apatel@horsesmouth.com>"
  },
  {
    "poster": {
      "poster_name": "Parul Sen",
      "poster_handle": "devteam403"
    },
    "time_stamp": "2024-04-30 23:56:09",
    "text": "Sure <@U06UQBW2YSV>"
  }
]
[
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2016-10-25 04:00:04",
    "text": "<@U22PJPGK0> it would be great if we could set up one column to use as a reference and if that column matches then to overwrite (or give options). IE: email column, or address etc."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-10-25 04:26:10",
    "text": "hey <@U23602KDF> can I have hubdb ungated for 347370 please?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-10-25 04:27:27",
    "text": "I agree with <@U25C65C3S> -- if we could set a unique identifier in the import, that would be great. I think making this an \"advanced option\" would be best."
  },
  {
    "poster": {
      "poster_name": "Yuji ODA",
      "poster_handle": "yujiod"
    },
    "time_stamp": "2016-10-25 06:30:34",
    "text": "<@U22PJPGK0>: I suggest primary key option and it will overwrite duplicate key record in CSV import. \nThank you for your consideration."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2016-10-25 08:05:35",
    "text": "thanks, I think I get what you're asking. I'll add it to the todo list"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2016-10-25 10:48:09",
    "text": "<@U22PJPGK0> <@U22PU4G4A> If a column is set to text before import is it possible to change it to handle HTML? Weâ€™ve found only a few records have it but it is causing major problems. Or do we have to recreate the entire database?"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2016-10-25 11:21:59",
    "text": "we don't have a way to convert a column from one to another. What you could do is export the data, delete the text column, add a rich text column with the same name and import the data"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2016-10-25 12:55:48",
    "text": "Thank you <@U22PJPGK0> for the recommendation"
  }
]
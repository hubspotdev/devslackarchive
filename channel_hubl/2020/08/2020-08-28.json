[
  {
    "text": "Thanks for dropping in, <@U7SL518D6> :slightly_smiling_face: The <https://developers.HubSpot.com/docs/cms/hubl/tags#choice|docs on the choice field> does not mention this possibility? Anyways, I've tried variants without the curly brackets, if that's what you mean, but they did not work:\n\n```{% set choices_list = [Foo, Bar] %}\n\n{% choice \"my_choices\" choices=choices_list  %} {# Result in page editor: choices_list #}\n\n{% choice \"my_choices\" choices=\"choices_list\"  %} {# Result in page editor: choices_list #}\n\n{% choice \"my_choices\" choices=\"{{ choices_list }}\" %} {# Result in page editor: Foo, Bar #}```\nWithout the curly brackets, \"choices_list\" will just be interpreted by the page editor as a string/single value (see attached screenshot). That's the reason why I wonder if passing a variable to the `choice` parameter of the `{% choice %}` field is actually a supported feature - it seems a little inconsistent with how these things normally work in the language :slightly_smiling_face:\n\nRegarding \"dynamic\" population of the array: This was more of a comment on how passing variables to the choice field is useful, not the focal point of my question :smile: Anyways, the HubDB solution was just an example, in theory you could do the same with repeated groups in modules: Loop over the repeater and populate the choices array with data from the items inside the group.",
    "time_stamp": "2020-08-28 05:40:41",
    "edited": {
      "time_stamp": "2020-08-28 05:49:44"
    }
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-08-28 06:32:29",
    "text": "All you are doing is creating a variable with an array of strings. It's should t mater where that comes from as long as it's formatted correctly"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives727"
    },
    "time_stamp": "2020-08-28 12:27:08",
    "text": "If I have site search on both <http://mydomain.com|mydomain.com> and <http://subdomain.mydomain.com|subdomain.mydomain.com> is there a way for it to show results for both, on both domains? I'm only showing results for each one.",
    "reply_count": 6,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2020-08-28 14:02:43"
      },
      {
        "time_stamp": "2020-08-28 14:39:47"
      },
      {
        "time_stamp": "2020-10-14 13:10:50"
      },
      {
        "time_stamp": "2020-12-17 15:02:20"
      },
      {
        "time_stamp": "2020-12-18 09:46:05"
      },
      {
        "time_stamp": "2020-12-18 11:52:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-08-28 14:02:43",
    "text": "<@UGWB0PCCV> Any thoughts?"
  },
  {
    "poster": {
      "poster_name": "Cameron Claffey",
      "poster_handle": "cclaffey"
    },
    "time_stamp": "2020-08-28 14:39:47",
    "text": "Hi Chandler,\n\nBy default the site search results module will only return content on the same domain that the search is made from (wherever the site search input module was placed); however you can clone the default site search results module and edit line 74 where the ‘requestUrl’ variable is being built, to append ‘&amp;domain=’ with additional domains you want results returned from. You can add this multiple times so it could read \n\n`requestUrl = SEARCH_URL + searchParams + '&amp;analytics=true&amp;domain=<http://info.mydomain.com|info.mydomain.com>&amp;domain=<http://blog.mydomain.com|blog.mydomain.com>',`\n\nThen you’d just want to make sure that this cloned site search results module is placed in the template file chosen in Settings &gt; Website &gt; Pages &gt; System Pages &gt; Search results page."
  }
]
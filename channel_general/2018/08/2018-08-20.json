[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 07:45:24",
    "edited": {
      "time_stamp": "2018-08-20 07:48:26"
    },
    "text": "*Devs that primarily use coded templates*: *do you guys have a way to make a coded header into a global group?* got a client that’s upgrading from some ancient HubSpot templates which didn’t have any flex columns to a DM2 site with coded templates. The reason for coded templates is they are using HubSpot only for landing pages and the blog, yet want their HubSpot site to be identical to the other site.\n\nAnyways it seems they really liked the drag and drop builder and now I’m in a weird position of possibly trying to create a drag and drop template that uses a coded header or something.\n\nI guess worst case scenario i could build it as a custom module, I just don’t want multiple places to manage code.",
    "reply_count": 14,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-08-20 07:52:25"
      },
      {
        "time_stamp": "2018-08-20 07:52:57"
      },
      {
        "time_stamp": "2018-08-20 07:53:09"
      },
      {
        "time_stamp": "2018-08-20 07:54:02"
      },
      {
        "time_stamp": "2018-08-20 07:56:31"
      },
      {
        "time_stamp": "2018-08-20 07:57:38"
      },
      {
        "time_stamp": "2018-08-20 07:58:04"
      },
      {
        "time_stamp": "2018-08-20 08:04:23"
      },
      {
        "time_stamp": "2018-08-20 08:05:34"
      },
      {
        "time_stamp": "2018-08-20 08:07:46"
      },
      {
        "time_stamp": "2018-08-20 08:12:41"
      },
      {
        "time_stamp": "2018-08-20 08:13:21"
      },
      {
        "time_stamp": "2018-08-20 08:14:50"
      },
      {
        "time_stamp": "2018-08-20 08:17:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2018-08-20 07:52:25",
    "text": "I would build it as a custom module then go back thru replace the coded header with the custom module so you aren’t managing 2 sets of headers"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 07:52:57",
    "text": "yea, that’s kinda where my head is going now… oy kind of a pain in the butt"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 07:53:09",
    "text": "thank you for the feedback"
  },
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2018-08-20 07:54:02",
    "text": "Yeah it really is, I have been in this exact situation for a few different clients now."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-20 07:56:31",
    "text": "Why not just write your header in one html file and then use {% include 'yourFile.html' %}"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 07:57:38",
    "text": "I could definitely be wrong but I don’t think you can use an include in a custom module, and there are no HubL modules in DM2. so I don’t know how that would work"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-20 07:58:04",
    "text": "ahh... I missed the part where you still wanted to use drag and drop"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:04:23",
    "text": "yea… it’s put me in a weird position. we tried to rebuild their new site in an entirely drag n drop format, but determined after sinking way too many hours into it, that  because the code had to be so different it was  causing us to have to re-create a lot of functionality, a lot of it complex accessibility stuff, it just was not possible to re-create in such a way that it was equally as high quality without sinking tons more hours into it.\n\nSo we decided lets go with a coded template and basically just copy n paste all the code over and make only the adaptations needed to make HubSpot custom Modules look good and whatnot"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:05:34",
    "text": "Not to mention if we kept going the drag n drop route, if they ever update the main site, it’d have required a ton of work to update on our end.\n\nThis isn’t a usual scenario for us so it’s definitely been a learning experience"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-20 08:07:46",
    "text": "very interesting situation... Guess you couldn't just export all their drag and drop templates to file and work with them that way?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:12:41",
    "text": "that’s an interesting idea. but kinda does the reverse of what it seems like they want. Specifically one of the things they asked “where are the new header and footer global groups”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:13:21",
    "text": "so they are kinda confused, they’re used to having to drag and drop for every page they build out because they’ve never used flex columns"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-08-20 08:13:21",
    "text": "Morning devs, I'm building a blog and the client would like to have posts with the same tag dynamically brought in to the bottom of the template. Does anyone have a best practice for this?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-08-20 08:13:34",
    "text": "Here is the blog that I'm working on: <https://blog.luxurysimplified.com/spoke/downtown-charleston-renovation-when-a-roof-starts-to-collapse-0-2>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:14:50",
    "text": "And while we want to educate them and go - hey you don’t have to do that anymore, the idea behind templates is you can have a couple templates that cover ALL of your bases. Then they just have to go into the page editor to make new pages. So it’s a weird scenario"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:16:27",
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#blog-recent-topic-posts>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:17:03",
    "text": "This will pull the most recent posts with that same topic/tag and you pop this wherever  you want in your template."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-08-20 08:17:06",
    "text": "Very weird.  A few coded page templates with flex columns would definitely be the ideal solution, but sometimes you gotta do what you gotta do"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 08:18:40",
    "text": "If they want more of a related posts type deal instead see <#CBXTNHPEZ|related-posts-module> There’s a new function/tag that’s being worked on for that."
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-08-20 08:19:31",
    "text": "thanks <@U7SL518D6>"
  },
  null,
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:00:02",
    "text": "has anyone tried the new site search module? is there a way to limit the search to just posts and site page ... basically NO landing pages or thank you pages?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:03:50",
    "edited": {
      "time_stamp": "2018-08-20 12:04:38"
    },
    "text": "<@U2PDTMH53>\nYes you can limit to posts and or site pages. Also it defaults to not include landing pages in the results. In-case you are not in it - there’s a channel where everyone who’s using the site search is kinda discussing implementations and Mcoley is flexing his robot wizard skills tweaking how search works\n<#C9LPMCT35|site-search-feedback>\n\nIn-fact regarding the specific thing you asked about I think the default search module has a comment explaining how to tweak that part. I could be wrong"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:04:54",
    "text": "It’s done as a query param"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:05:10",
    "text": "it's finding thank you pages in my case :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:05:43",
    "text": "I think for the thank you pages you’ll need to do one of two things, add a meta robots no follow no index to the pages or move them to technically be landing pages in the COS"
  },
  {
    "text": "",
    "time_stamp": "2018-08-20 12:06:23"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:07:11",
    "text": "Yea that page if you go to it, I bet it’s a normal website page, and it doesn’t have a meta no robots tag"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:07:48",
    "text": "also ... is puling code from within the &lt;noscriopt&gt; tag",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-08-20 12:08:58"
      },
      {
        "time_stamp": "2018-08-20 12:09:42"
      },
      {
        "time_stamp": "2018-08-20 12:10:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-08-20 12:08:27",
    "text": "&lt;nojscroripieert&gt;"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:08:39",
    "text": "i'm the new developer for that portal ... a lot of wrongs have been done on it by unqualified people :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:08:58",
    "text": "yea displaying noscript content might not be a great thing to index. <@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:09:32",
    "text": "yea been there done that X_X"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:09:42",
    "text": ":eyes:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:10:36",
    "text": "Let me fix"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:11:39",
    "text": "but why does it display that image tag or show teh page at all ... i see it's a landing page"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:11:41",
    "text": "<https://info.thecontractchair.co.uk/search-results?term=furniture&amp;cacheBuster=5552>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:14:02",
    "text": "first- Thanks for using the extension hope you like it lol — if it’s a landing page that’s odd by default it shouldn’t be listing it. has it always been a landing page or was it changed from being a website page?"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:15:06",
    "text": "i don't know ... i'm also seeing another landing page in the results"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:15:10",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:16:16",
    "text": "how can i see if a page is a landing page or a sitepage? ... without looking for it ... this portal is a mess :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:17:16",
    "text": "actualy ... they dont have website in the portal ... just LP/TYP and blog"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:17:24",
    "text": "well you can go to the page itself and hit edit page. other than that not sure it’s possible to reliably tell, HS does add body classes"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:17:43",
    "text": "but those can be wrong depending on how the developer made the template"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:18:24",
    "text": "Yea if they don’t have site pages then that’s the issue - all of their pages would technically be landing pages then"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:18:25",
    "text": "i know ... anyway ... next step is to make propper lp/typ templates for them anyway ..."
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:19:16",
    "text": "i'll leave it for now ... maybe look into that bit where code is being pulled as search results ... and thanks for your time"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:19:49",
    "text": "i like the site search ... i hate the google search, by the way :wink:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 12:20:16",
    "edited": {
      "time_stamp": "2018-08-20 12:21:11"
    },
    "text": "NP since the results are pulled with JS I’m not sure the answer to the html showing there. I know if hubl were used instead for the results you can use the striphtml filter to remove it, if you were seeing that. I haven’t done a ton with the search yet myself but haven’t seen html show in results yet so it might be specific to doing it with JS"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:21:00",
    "text": "anyway ... thanks"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:23:41",
    "text": "So there are no default content types (site pages, knowledge articles, or blog posts) enabled for that domain so it will default to all content types (including landing pages)"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:25:10",
    "text": "so how can i filter the lp/typ out?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:25:27",
    "text": "You won't get any results if you do that?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:26:01",
    "text": "That domain only has landing pages on it right?"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:26:47",
    "text": "and blog posts :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:27:08",
    "text": "so just blog posts ideally"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:27:41",
    "text": "Yea it should already be doing that, let me :eyes:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:45:15",
    "text": "Should be fixed soon"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:45:38",
    "text": "thanks"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-20 12:58:18",
    "text": "Ok I only see blog results now like it should be :+1:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:58:37",
    "text": "yes :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 12:58:43",
    "text": "thanks"
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-08-20 14:27:04",
    "text": "Has anyone ever had a module style not load unless you are in hs-debug mode?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-08-20 18:00:56"
      },
      {
        "time_stamp": "2018-08-20 18:01:36"
      },
      {
        "time_stamp": "2018-08-22 15:40:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-08-20 14:37:09",
    "text": "The issue turned out to be that HubSpot stripped a support query line nested inside of a media query, leaving an extra curly brace and overall screwing up other CSS. :thinking_face:"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 14:44:21",
    "text": "I second what Jim is seeing - suddenly @supports does not appear to be working in custom module css"
  },
  null,
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-08-20 14:49:38",
    "text": "Anyone have a good solution to copy data from a deal record to all corresponding contacts? I need to copy subscription date to a contact field and trigger renewal workflows"
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2018-08-20 15:36:05",
    "text": "hi friends, how you manage the versions of the CSS files on HubSpot?",
    "reply_count": 21,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2018-08-20 15:38:42"
      },
      {
        "time_stamp": "2018-08-20 15:42:29"
      },
      {
        "time_stamp": "2018-08-20 15:43:09"
      },
      {
        "time_stamp": "2018-08-20 16:10:09"
      },
      {
        "time_stamp": "2018-08-20 16:15:36"
      },
      {
        "time_stamp": "2018-08-20 16:27:12"
      },
      {
        "time_stamp": "2018-08-20 16:28:31"
      },
      {
        "time_stamp": "2018-08-20 16:29:13"
      },
      {
        "time_stamp": "2018-08-20 16:30:14"
      },
      {
        "time_stamp": "2018-08-20 16:30:26"
      },
      {
        "time_stamp": "2018-08-20 16:30:46"
      },
      {
        "time_stamp": "2018-08-20 16:35:00"
      },
      {
        "time_stamp": "2018-08-20 16:35:23"
      },
      {
        "time_stamp": "2018-08-20 16:46:20"
      },
      {
        "time_stamp": "2018-08-20 16:46:42"
      },
      {
        "time_stamp": "2018-08-20 16:50:47"
      },
      {
        "time_stamp": "2018-08-20 16:51:07"
      },
      {
        "time_stamp": "2018-08-20 16:52:41"
      },
      {
        "time_stamp": "2018-08-20 16:52:45"
      },
      {
        "time_stamp": "2018-08-20 16:56:38"
      },
      {
        "time_stamp": "2018-08-21 16:13:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 15:38:42",
    "edited": {
      "time_stamp": "2018-08-20 15:38:59"
    },
    "text": "explain the specific problem you’re running into/ trying to solve?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 15:42:29",
    "text": "If you’re talking about css libraries - we usually use a require and pull from a CDN. Some libraries we’ll copy the file into HubSpot and include in the modules that need them themselves."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 15:43:09",
    "text": "and when they need to be updated, if we used the require we just increment the number. if we copied the file we just overwrite over the old file with the updated version"
  },
  null,
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2018-08-20 16:10:09",
    "text": "im trying to figure out how to use gitlab or something like that."
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:15:36",
    "text": "ahhh I see, you’re asking how people use version control systems like git in their workflow so they can deploy to HS on commit.\n\nI don’t personally dev HS sites locally - got into a flow before the the local hubl server got to a point where it’s really useful. -\nI think <@U26BLKGE4> and <@U25PYL3Q8>  dev locally, and might be able to offer insight."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-08-20 16:27:12",
    "text": "I've never figured out how to completely automate it, but we have tried both Github and Bitbucket. Unfortunately our dev team is just two people, so rather than invest in a robust system of automating the upload of committed repos, etc.. it's easier for us to just have a best practice SOP that for every accepted and reviewed commit you update the file in the DM. I do wish that HS could include notes to their built-in version control system; even if it would only be production code, we could create a system that references the development commits so we know where to roll back if we need to."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:28:31",
    "text": "That’s actually a really good feature idea Mark - comments on saves/publishes."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-08-20 16:29:13",
    "text": "Also, worth noting that HS has shown interest recently in providing more local development-focused features, so hopefully we see some improvements that may make more automated workflows possible"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-08-20 16:30:14",
    "text": "and <@U7SL518D6> posting in ideas :wink:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:30:26",
    "text": "lol I am"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-08-20 16:30:46",
    "text": "go for it"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:35:00",
    "text": "y’know in the mean time you could actually do this a ghetto way"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:35:23",
    "text": "like insert a comment at the top of the file and modify that comment every time you publish/save"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-08-20 16:46:20",
    "text": "lmfao, I bet you could even automate the ghetto workaround :stuck_out_tongue:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:46:42",
    "text": ":laughing:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-20 16:50:47",
    "text": "I'm hoping to have a workflow setup before developer day that people can fork and make their own... So you can get a whole dev environment setup to do sass locally and compile the CSS for you, and just needing to paste it into the global file or the module css area. (it automatically copies the completed file into your clipboard)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:51:07",
    "text": "O_O"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-20 16:52:41",
    "text": "<@U22PKFRU5> this may be something for that workshop"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-20 16:52:45",
    "text": "I take it you’re doing a booth at the science fair?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-20 16:56:38",
    "text": "I hadn't agreed to anything yet -- but this makes sense instead of me doing this throughout inbound"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 18:00:56",
    "text": "yes ... many times ... so i just use the extension now"
  },
  {
    "poster": {
      "poster_name": "Adrian C. Black",
      "poster_handle": "adriancblack"
    },
    "time_stamp": "2018-08-20 18:01:36",
    "text": "<https://community.HubSpot.com/t5/Share-Your-Work/HubSpot-Developer-Google-Chrome-Extension/td-p/196534>"
  },
  null,
  null,
  null
]
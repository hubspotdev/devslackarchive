[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 06:41:47",
    "text": "you’ll have to show us the code for the select field otherwise we’re completely guessing as to how you have things set up"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 06:43:23",
    "text": "yes exactly what you just said AJ another solution is also to go to the form editor for that form, under settings there’s a toggle for “unstyled” you need to flip that toggle, that will have the same effect as the css blank attribute."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-03-15 07:34:01",
    "text": "I'll have to check that toggle as I don't think it had that... :thinking_face: "
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 07:36:05",
    "text": "it was hard to find"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 07:37:29",
    "text": "It’s under options: <https://spin.d.pr/r1AvZz+>"
  },
  {
    "text": "Hello everyone, i'm new to HubSpot and i'm still discovering how things works. I have a question, i created a module and i'm trying to set up an image as a background, if i put it inline it works, however , if i put it in the css, it does not work",
    "time_stamp": "2019-03-15 10:49:39"
  },
  {
    "text": "",
    "time_stamp": "2019-03-15 10:49:49"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-15 10:51:36",
    "text": "<@UGXTYTX4Y> that's because HubL only works in the HTML + HUBL section. HubL doesn't get processed in the js or css sections of modules.",
    "reply_count": 14,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-03-15 10:53:10"
      },
      {
        "time_stamp": "2019-03-15 10:53:32"
      },
      {
        "time_stamp": "2019-03-15 10:53:39"
      },
      {
        "time_stamp": "2019-03-15 10:54:38"
      },
      {
        "time_stamp": "2019-03-15 11:00:02"
      },
      {
        "time_stamp": "2019-03-15 13:22:34"
      },
      {
        "time_stamp": "2019-03-15 13:24:07"
      },
      {
        "time_stamp": "2019-03-15 13:31:18"
      },
      {
        "time_stamp": "2019-03-15 13:33:13"
      },
      {
        "time_stamp": "2019-03-18 14:36:20"
      },
      {
        "time_stamp": "2019-03-18 14:39:49"
      },
      {
        "time_stamp": "2019-03-18 14:41:08"
      },
      {
        "time_stamp": "2019-03-18 14:44:16"
      },
      {
        "time_stamp": "2019-03-18 15:06:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ignacio Gomez",
      "poster_handle": "igomez"
    },
    "time_stamp": "2019-03-15 10:53:10",
    "text": "mmm it's pretty frustrating. thank you"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 10:53:32",
    "text": "ignacio the right way of doing that anyways would be to inline that style"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 10:53:39",
    "text": "because if you did have it in the stylesheet"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 10:54:38",
    "text": "and hubl was allowed, you’d nuke the cacheability of your css, and would override other instances of that module, because your background in the last module on your page would get applied to all instances of that module."
  },
  {
    "poster": {
      "poster_name": "Ignacio Gomez",
      "poster_handle": "igomez"
    },
    "time_stamp": "2019-03-15 11:00:02",
    "text": "Get it. Thank you"
  },
  {
    "poster": {
      "poster_name": "Lindsey Newman",
      "poster_handle": "lindseyn"
    },
    "time_stamp": "2019-03-15 12:59:35",
    "edited": {
      "time_stamp": "2019-03-15 12:59:44"
    },
    "text": "How long should it take HubSpot to minify the js/css files linked through the design manager?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-03-15 13:07:13"
      },
      {
        "time_stamp": "2019-03-15 13:09:55"
      },
      {
        "time_stamp": "2019-03-15 13:19:12"
      },
      {
        "time_stamp": "2019-03-15 13:35:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-15 13:07:13",
    "text": "it's usually instant. Whenever it's not minifying there's probably an error such as an undefined HubL variable or an extra semicolon, etc.. the IDE just doesn't tell you there's an error sometimes..."
  },
  {
    "poster": {
      "poster_name": "Lindsey Newman",
      "poster_handle": "lindseyn"
    },
    "time_stamp": "2019-03-15 13:09:55",
    "text": "ah ok let me double check then, file was linked a day ago and wasn't minified so must be something wrong"
  },
  {
    "poster": {
      "poster_name": "Lindsey Newman",
      "poster_handle": "lindseyn"
    },
    "time_stamp": "2019-03-15 13:19:12",
    "text": "doesn't seem to be anything wrong with the js, guess i'll just minify it myself and keep it inline, its only used on one page"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-03-15 13:22:34",
    "text": "You could also toss it in a &lt;style&gt; tag in the HTML pane of the module editor and wrap that with {% require_css %} {% end_require_css %} so it gets pushed to the head of the page (<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#require-css>). Same if you had any JS (you'd just use require_js instead)."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 13:24:07",
    "text": "I think the block syntax of it should be documented"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-03-15 13:31:18",
    "text": "Good point :point_up: and I agree - will check with the appropriate team on that to see if we can get that updated. Can also try to see if we can get {{ name }} added in there as well for modules."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-15 13:33:13",
    "text": "along with the block syntax, it should be explained what all it really does because it seems weird to still need the &lt;style&gt; and &lt;script tags&gt; and whatnot, you’d think everything embedded with the block syntax would get placed into the same style or script tag, and then minified"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2019-03-15 13:35:13",
    "text": "You can make some change to trigger the minification again — like add a comment, etc."
  }
]
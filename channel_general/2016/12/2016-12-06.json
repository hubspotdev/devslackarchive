[
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:33:56",
    "text": "do I ask in here or <#C2YH119N2|hubl> for module construction questions?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-12-06 13:35:14",
    "text": "I woudl just ask it here, dunno if anyone ueses that channel"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:45:10",
    "text": "cool"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:46:05",
    "text": "I'm implementing what I think should be a common content pattern as Template/module/whatever works for a single page"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:46:26",
    "text": "video player up top, and then a list of video thumbnails/titles for the player"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:46:46",
    "text": "what would be the most idiomatic way to implement the repeating video thumbnails within HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:47:03",
    "text": "I see the repeater documentation, but that appears to terminate based on a number, instead of iterating until the collection runs out"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:47:32",
    "text": "each thumbnail has two text variables"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:53:46",
    "text": "I also found <http://designers.HubSpot.com/docs/tutorials/repurposing-HubSpot-blog-templates>"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:53:57",
    "text": "this appears to roughly do what I want, but that seems like a big hack"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:54:02",
    "text": "since each video will not have its own page"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-12-06 13:55:36",
    "text": "I think you want to use a hubDB, as the easiest method of doing this"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:56:03",
    "text": "okay, let me go look up what that is"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 13:59:51",
    "text": "okay, I think I get the gist"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 14:00:35",
    "text": "there wouldn't be a way to automatically import data into one of these, would there?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-12-06 14:01:21",
    "text": "you can import a CSV"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-12-06 14:01:37",
    "text": "after you create the columns inside the database"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 14:02:06",
    "text": "right, I was hoping for maybe a youtube feed but I imagine that's a bit more roll-your-own"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2016-12-06 14:13:32",
    "text": "you could use the youtube api and bring in a playlist"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 14:18:15",
    "text": "yeah I'm grabbing the RSS feed, I was just hoping the RSS importer function would be able to chew on that"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 14:18:20",
    "text": "unfortunately not quite, but it's no big deal"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 14:18:46",
    "text": "is the second `options` argument for `hubdb_table_rows()` documented somewhere"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 14:19:18",
    "text": "ah here we are, it's called `filterQuery`"
  },
  {
    "poster": {
      "poster_name": "Taylor Hunt",
      "poster_handle": "taylorhunt"
    },
    "time_stamp": "2016-12-06 14:19:53",
    "text": "can I call `hubdb_table_rows()` with only one argument?"
  }
]
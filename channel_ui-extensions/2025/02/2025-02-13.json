[
  {
    "poster": {
      "poster_name": "youssef El",
      "poster_handle": "youssef"
    },
    "time_stamp": "2025-02-13 02:19:42",
    "text": "Hi everyone,\nDo u know if there is  a dimension limit on ui cards ? Can't find it on the doc",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2025-02-24 10:16:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2025-02-13 04:52:21",
    "edited": {
      "time_stamp": "2025-02-13 04:55:55"
    },
    "text": "I had issues with my work network when I was on vpn (I work remote) and the network team had to work with me while testing to fix it - not sure what they had to change but firewall is probably blocking something. Here is my thread talking with the HS team about it:  <https://HubSpotdev.slack.com/archives/C05R599UA12/p1729879616123849?thread_ts=1729750865.822499&cid=C05R599UA12>"
  },
  {
    "poster": {
      "poster_name": "Kiara Munz",
      "poster_handle": "kimunz"
    },
    "time_stamp": "2025-02-13 05:53:53",
    "edited": {
      "time_stamp": "2025-02-13 05:55:12"
    },
    "text": "Oh, this is a migrated public app right? You need to enable UIE cards for install portals with the developer flag as mentioned in the docs Scott Marion sent above <https://developers.HubSpot.com/docs/guides/crm/public-apps/migrate-a-public-app-to-projects|\"migrate a public app\">. This was to make sure cards that are in development do not show up for existing customers if the developer does not want them to. Follow the steps in \"<https://developers.HubSpot.com/docs/guides/crm/public-apps/migrate-a-public-app-to-projects#1.-set-test-account-feature-flag|1. Set test account feature flag>\", \"<https://developers.HubSpot.com/docs/guides/crm/public-apps/migrate-a-public-app-to-projects#4.b-gradually-roll-out-app-cards|4.b Gradually roll out app cards>\" and/or \"<https://developers.HubSpot.com/docs/guides/crm/public-apps/migrate-a-public-app-to-projects#4.c-roll-out-to-all-accounts-simultaneously|4.c Roll out to all accounts simultaneously>\""
  },
  {
    "poster": {
      "poster_name": "Praveen",
      "poster_handle": "praveen"
    },
    "time_stamp": "2025-02-13 05:55:31",
    "text": "that's exactly what i needed.\n\njust hit the api to enable it on the portal i was testing on and it now works. thanks a lot"
  },
  {
    "poster": {
      "poster_name": "Aanchal Sheth (HubSpot PM)",
      "poster_handle": "asheth"
    },
    "time_stamp": "2025-02-13 08:56:45",
    "text": ":rocket: *Update: HubSpot’s UI Component Design Patterns Are Here!* :tada:\nWe’ve heard your feedback, and we’re excited to launch our first version of *Design Patterns for UI Components!* These patterns provide *clear UX guidance* to help you build high-quality HubSpot extensions—without needing to be a UX or HubSpot expert.\n\n*What’s New?*\nWe’re making it easier and faster to craft app cards with:\n• :book: *Documentation* for written guidelines and links to the code and kit\n    ◦ <https://developers.HubSpot.com/docs/reference/ui-components/design/patterns/buttons|Design patterns for Button>\n    ◦ <https://developers.HubSpot.com/docs/reference/ui-components/design/patterns/forms|Design patterns for Forms>\n    ◦ <https://developers.HubSpot.com/docs/reference/ui-components/design/patterns/tables|Design patterns for Tables>\n• :art: *Mockups* of UI components – Accessible via the *<https://developers.HubSpot.com/docs/reference/ui-components/figma-design-kit|Figma Design Kit>* [click on the \"*Get the Kit\"* button to always get the latest version of the kit]\n• :hammer_and_wrench: *Code templates* featuring best practices for Forms, Tables, Buttons and Overlays – Available in the *<https://github.com/HubSpot/ui-extensions-examples/tree/main/design-patterns|Samples Repo>*. Use these as boilerplates or inspiration:sparkles:\n *Why Does This Matter?*\n• *Save time* – No more playing detective to figure out HubSpot’s design system! Get clear guidelines that reduce design decisions and let you focus on functionality.\n• *Quicker onboarding for your customers*– Faster setup with *pre-built templates* and *consistent UI patterns* means less troubleshooting, and more intuitive mental models for customers to get their tasks done right!\n• *Build better, more predictable apps* – A shared design approach improves usability, making your extensions feel more intuitive for users.\nWe’re just getting started—expect *more easy-to-use patterns* to come! Got feedback? We’d love to hear it :slightly_smiling_face:",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2025-02-13 09:41:19"
      },
      {
        "time_stamp": "2025-02-13 10:38:37"
      },
      {
        "time_stamp": "2025-02-13 11:09:14"
      }
    ]
  },
  {
    "text": "It's so bad but I really want the pagination on one of my sidebar cards that I used a table component with no body or rows.",
    "time_stamp": "2025-02-13 09:41:19"
  },
  {
    "poster": {
      "poster_name": "Aanchal Sheth (HubSpot PM)",
      "poster_handle": "asheth"
    },
    "time_stamp": "2025-02-13 10:38:37",
    "text": "Oh wow - good to know. Thanks for sharing but also yikes I see the need:eyes:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2025-02-13 11:09:14",
    "text": "```&lt;Flex gap=\"extra-small\" direction=\"column\"&gt;\n          &lt;Input value={search} onInput={setSearch} placeholder=\"Search\" /&gt;\n          &lt;Table bordered={false} \n          paginated={true} \n          pageCount={Math.ceil(filteredSearchResults.length / pageSize)}\n          page={page}\n        onPageChange={setPage}\n        maxVisiblePageButtons={3}\n      &gt;\n      &lt;Flex gap=\"extra-small\" direction=\"column\"&gt;\n        {filteredSearchResults.slice((page - 1) * pageSize, page * pageSize).map((result) =&gt; (\n          &lt;Tile compact={true}&gt;\n            {context.crm.objectTypeId === \"123\" ? (\n              &lt;Flex gap=\"extra-small\" direction=\"row\"&gt;\n              &lt;Checkbox \n                checked={selectedAssociations.includes(result.hs_object_id)} \n                onChange={(checked) =&gt; {\n                  if (checked) {\n                    setSelectedAssociations([...selectedAssociations, result.hs_object_id]);\n                  } else {\n                    setSelectedAssociations(selectedAssociations.filter(id =&gt; id !== result.hs_object_id));\n                  }\n                }}\n              &gt;&lt;/Checkbox&gt;\n              &lt;CrmActionLink \n                actionContext={{\n                  objectId: result.hs_object_id,\n                  objectTypeId: \"2-12897062\"\n                }}\n                actionType=\"PREVIEW_OBJECT\"\n              &gt;{result.name}&lt;/CrmActionLink&gt;\n            &lt;/Flex&gt;\n            ) : (\n              &lt;Flex gap=\"extra-small\" direction=\"row\"&gt;\n                &lt;Checkbox \n                  checked={selectedAssociations.includes(result.hs_object_id)} \n                  onChange={(checked) =&gt; {\n                    if (checked) {\n                      setSelectedAssociations([...selectedAssociations, result.hs_object_id]);\n                    } else {\n                      setSelectedAssociations(selectedAssociations.filter(id =&gt; id !== result.hs_object_id));\n                    }\n                  }}\n                &gt;&lt;/Checkbox&gt;\n                &lt;CrmActionLink \n                  actionContext={{\n                    objectId: result.hs_object_id,\n                    objectTypeId: \"0-2\"\n                  }}\n                  actionType=\"PREVIEW_OBJECT\"\n                &gt;{result.name}&lt;/CrmActionLink&gt;\n              &lt;/Flex&gt;\n            )}\n          &lt;/Tile&gt;\n        ))}\n      &lt;/Flex&gt;\n      &lt;/Table&gt;\n        {selectedAssociations.length &gt; 0 &amp;&amp; &lt;Button onClick={createAssociations}&gt;Create Associations ({selectedAssociations.length})&lt;/Button&gt;} \n      &lt;/Flex&gt;```\nYeah definitely a need, here's what it looks like in code."
  }
]
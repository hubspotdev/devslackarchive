[
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 08:30:11",
    "text": "<@UJLMJNX6G> Never tried but i would like to follow this to see where it gos"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 08:30:36",
    "text": "<@U2H3TT8F2> <@U7SL518D6>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-13 08:31:39",
    "text": "If you are loading from an external resource, you server-side render time is now dependent on the network request to the external resource. If that resource is slow or times out, your page render time will also be slow"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-09-13 08:32:09",
    "text": "I’ve always used javascript for this. as Matt stated it’s way better for performance and cacheability"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 08:35:21",
    "text": "so no."
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:26:56",
    "edited": {
      "time_stamp": "2019-09-13 10:27:00"
    },
    "text": "hey yall, running into an interesting bug. trying to split up blog post content into two sections, so that i can place some content between the two. basically, this: <https://community.HubSpot.com/t5/CMS-Development/Get-blog-s-post-body-without-summary/td-p/8069>"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:28:41",
    "text": "i was using a read more separator to accomplish this. however, in the post editor, the content _after_ the read more separator is no longer clickable/editable. in addition, all content below the read more separator is duplicated in the post editor. everything appears correctly on the front-facing blog but this makes for a confusing and inaccessible editing process for my strategists."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:28:52",
    "text": "are you gonna use the &lt;!--more--&gt; tag as well?"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:29:21",
    "text": "yep! for good measure, I also tried using a custom &lt;!--cta--&gt; which placed the content properly, but the same issues persisted."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:29:59",
    "text": "what was that?"
  },
  {
    "text": "",
    "time_stamp": "2019-09-13 10:30:28"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:31:04",
    "text": "thats what I see on the backend. the content beneath the \"read more\" separator appears like a ghost in the backend, cloned a second time under the related reading section. but when viewing the frontfacing page or source code, it's only there once."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:32:32",
    "text": "are you trying to do two places or more than two?"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:34:12",
    "text": "i only want that \"related reading\" section to be inserted once, but i'd like to give my strategists control over where. so ideally, wherever they place the read more separator, that module gets pulled in"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:39:53",
    "text": "I wonder if there is a way to do a replace only when the page is not in edit mode?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:40:00",
    "text": "instead of splitting it"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:40:16",
    "text": "the other way to do this is with javascript"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:41:25",
    "text": "yeah cool - that would be totally acceptable. it doesnt have to actually appear in edit mode."
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:41:29",
    "text": "can you point me towards an example"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:46:55",
    "text": "what si the item you are adding into the post?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:47:07",
    "text": "can it be converted to a string?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:48:18",
    "text": "or is it just markup?"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:48:21",
    "text": "it's a custom module. the strategists want a way to insert a blog or site page of their choosing. so they need the ability to edit it"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:48:23",
    "text": "{% module \"module_1568152249095914\"..."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:48:35",
    "text": "ok."
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:48:47",
    "text": "(as an aside, thank you for your help and thinking through this challenge with me)",
    "reply_count": 54,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-09-13 10:49:58"
      },
      {
        "time_stamp": "2019-09-13 10:51:17"
      },
      {
        "time_stamp": "2019-09-13 10:52:54"
      },
      {
        "time_stamp": "2019-09-13 10:53:10"
      },
      {
        "time_stamp": "2019-09-13 10:53:39"
      },
      {
        "time_stamp": "2019-09-13 10:53:56"
      },
      {
        "time_stamp": "2019-09-13 10:54:43"
      },
      {
        "time_stamp": "2019-09-13 10:54:55"
      },
      {
        "time_stamp": "2019-09-13 10:55:08"
      },
      {
        "time_stamp": "2019-09-13 10:55:10"
      },
      {
        "time_stamp": "2019-09-13 10:55:25"
      },
      {
        "time_stamp": "2019-09-13 10:55:38"
      },
      {
        "time_stamp": "2019-09-13 10:55:54"
      },
      {
        "time_stamp": "2019-09-13 10:56:20"
      },
      {
        "time_stamp": "2019-09-13 10:56:27"
      },
      {
        "time_stamp": "2019-09-13 10:56:41"
      },
      {
        "time_stamp": "2019-09-13 10:56:43"
      },
      {
        "time_stamp": "2019-09-13 10:56:55"
      },
      {
        "time_stamp": "2019-09-13 10:56:59"
      },
      {
        "time_stamp": "2019-09-13 10:58:55"
      },
      {
        "time_stamp": "2019-09-13 10:59:39"
      },
      {
        "time_stamp": "2019-09-13 10:59:48"
      },
      {
        "time_stamp": "2019-09-13 11:00:02"
      },
      {
        "time_stamp": "2019-09-13 11:00:05"
      },
      {
        "time_stamp": "2019-09-13 11:00:07"
      },
      {
        "time_stamp": "2019-09-13 11:00:11"
      },
      {
        "time_stamp": "2019-09-13 11:00:12"
      },
      {
        "time_stamp": "2019-09-13 11:00:19"
      },
      {
        "time_stamp": "2019-09-13 11:00:33"
      },
      {
        "time_stamp": "2019-09-13 11:00:42"
      },
      {
        "time_stamp": "2019-09-13 11:01:25"
      },
      {
        "time_stamp": "2019-09-13 11:01:40"
      },
      {
        "time_stamp": "2019-09-13 11:01:42"
      },
      {
        "time_stamp": "2019-09-13 11:02:04"
      },
      {
        "time_stamp": "2019-09-13 11:03:06"
      },
      {
        "time_stamp": "2019-09-13 11:03:25"
      },
      {
        "time_stamp": "2019-09-13 11:03:52"
      },
      {
        "time_stamp": "2019-09-13 11:04:11"
      },
      {
        "time_stamp": "2019-09-13 11:04:19"
      },
      {
        "time_stamp": "2019-09-13 11:04:49"
      },
      {
        "time_stamp": "2019-09-13 11:05:10"
      },
      {
        "time_stamp": "2019-09-13 11:05:16"
      },
      {
        "time_stamp": "2019-09-13 11:05:43"
      },
      {
        "time_stamp": "2019-09-13 11:05:46"
      },
      {
        "time_stamp": "2019-09-13 11:05:50"
      },
      {
        "time_stamp": "2019-09-13 11:06:51"
      },
      {
        "time_stamp": "2019-09-13 11:07:07"
      },
      {
        "time_stamp": "2019-09-13 11:07:27"
      },
      {
        "time_stamp": "2019-09-13 11:08:11"
      },
      {
        "time_stamp": "2019-09-13 11:09:16"
      },
      {
        "time_stamp": "2019-09-13 11:10:01"
      },
      {
        "time_stamp": "2019-09-13 11:10:04"
      },
      {
        "time_stamp": "2019-09-13 11:10:24"
      },
      {
        "time_stamp": "2019-09-13 11:11:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:49:58",
    "text": "let sidebar this"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:51:17",
    "text": "add the module before the post body with this added to it `, export_to_template_context=True`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:52:54",
    "text": "then you will be able to grab pieces from the module"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:53:10",
    "text": "im not sure i understand"
  },
  {
    "text": "",
    "time_stamp": "2019-09-13 10:53:39"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:53:56",
    "text": "this is not what you meant, im guessing"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:54:43",
    "text": "wht is in the module btw?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:54:55",
    "text": "is it a content selector?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:55:08",
    "text": "or just a place to add and image and title/link?"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:55:10",
    "text": "let me phrase this problem a different way.. this \"split\" solution is working well except for the fact that whatever is in {  sections[1] }} is no longer clickable/editable in the WYSIWYG editor"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:55:25",
    "text": "i can easily go into the source view, move the placement of the &lt;!--more--&gt; and we are good to go"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:55:38",
    "text": "but i know my strategists will get confused."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:55:54",
    "text": "i understand. the issue is that i think the only way to get arounf that is to remove the &lt;!--more--&gt; or whatever you are using"
  },
  {
    "text": "",
    "time_stamp": "2019-09-13 10:56:20"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:56:27",
    "text": "the custom module allows them to select content"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:56:41",
    "text": "ok."
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:56:43",
    "text": "two text inputs, an image, and a link"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:56:55",
    "text": "basicly we are going to remove the split"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 10:56:59",
    "text": "okay cool"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:58:55",
    "text": "create a string using the `{{ content.widgets.name_of_module.body.parameter }}`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:59:39",
    "text": "so the markup that you have inside of the module will be output into the blog post as a string and we will replace the &lt;!-- commenttag --&gt;"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 10:59:48",
    "text": "make sense?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:00:02",
    "text": "keep in mind Ive never tried this before this is theoretical"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:00:05",
    "text": "not really! :stuck_out_tongue: i'm a designer before a developer."
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:00:07",
    "text": "haha okay great"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:00:11",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:00:12",
    "text": "so is the name the ID? \"module_1568152249095914\""
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:00:19",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:00:33",
    "text": "so the strng is `{{ content.widgets.module_1568152249095914.body.parameter }}`?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:00:42",
    "text": "paranmeter is the attribure in the module"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:01:25",
    "text": "like {{ content.widgets.module_1568152249095914.body.blog_title"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:01:40",
    "text": "that will output the string"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:01:42",
    "text": "ah. okay. hang on"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:02:04",
    "text": "you concan tinate the string like this"
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-09-13 11:02:28",
    "text": "Hi, anyone know if I can get the authors of blog in array",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-09-13 11:14:31"
      },
      {
        "time_stamp": "2019-09-13 11:16:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:03:06",
    "text": "`{% set related - \"&lt;div&gt;\" ~ module....param ~ \"&lt;/div&gt;\" %}`"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:03:25",
    "text": "oh now im afraid you really lost me."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:03:52",
    "text": "a string is text right?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:04:11",
    "text": "text could be a html div"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:04:19",
    "text": "or a word"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:04:49",
    "text": "right"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:05:10",
    "text": "this `content.widgets.module_1568152249095914.body.blog_title` is a variable that represents a blog title"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:05:16",
    "edited": {
      "time_stamp": "2019-09-13 11:05:26"
    },
    "text": "so it is a string too"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:05:43",
    "text": "okay"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:05:46",
    "text": "to connect that to other strings you would us a `~`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:05:50",
    "text": "tilda"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:06:51",
    "text": "`'&lt;div class=\"classname\"&gt;' ~ content.widgets.module_1568152249095914.body.blog_title ~ '&lt;/div&gt;'`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:07:07",
    "text": "that is a div wrappinhg a blog title."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:07:27",
    "text": "but the whole thing is one long string"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:08:11",
    "text": "getting it?"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:09:16",
    "text": "i sort of am. but i have to head into a meeting, and i worry ive taken up too much of your time."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:10:01",
    "text": "hs."
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:10:04",
    "text": "im still a bit lost on how this replaces the split but i'll try to do some more research on this later."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 11:10:24",
    "text": "well this is edge vcase stuff in HubSpot so you kinda have to know what can work where"
  },
  {
    "poster": {
      "poster_name": "Jeff Main",
      "poster_handle": "jmain"
    },
    "time_stamp": "2019-09-13 11:11:02",
    "text": "ah."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-09-13 11:14:31",
    "text": "not sure if their is a hubl variable or function available, but there is an API <https://developers.HubSpot.com/docs/methods/blog/v3/list-blog-authors>"
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-09-13 11:16:24",
    "text": "thankyou <@U7V9DQ31P>, find the function with hubl *blog_authors()*, but now I need get tags by author"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-09-13 12:02:05",
    "text": "Any reason why I wouldn’t get the sprocket showing up on blog listings or posts? I’m trying to get to the developer info in there.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-09-13 12:03:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-09-13 12:03:25",
    "edited": {
      "time_stamp": "2019-09-13 12:03:39"
    },
    "text": "in firefox this often is the issue: <https://www.dropbox.com/s/2qfff6gg4lecei7/Screenshot%202019-09-13%2014.02.57.png?dl=0>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 12:03:28",
    "text": "JS error"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 12:03:56",
    "text": "or Your ad blocker is on"
  },
  {
    "poster": {
      "poster_name": "Lindsey Newman",
      "poster_handle": "lindseyn"
    },
    "time_stamp": "2019-09-13 12:05:32",
    "text": "ad blocker has made a fool of me many times"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 12:05:57",
    "text": "AMEN"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-09-13 12:06:26",
    "text": "firefox is pretty serious about its blocking and has tricked me many times"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-13 12:06:48",
    "text": "Brave does the same thing"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-09-13 12:07:15",
    "text": "i still need to take Brave out for a spin"
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-09-13 16:13:53",
    "text": "Hi, anyone know if I can filter the topic by author in hubl",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-09-13 18:24:53"
      },
      {
        "time_stamp": "2019-09-14 10:42:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-09-13 18:24:53",
    "text": "Loop through the topic and write and write an if statement for the author in it."
  }
]
[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-01-10 07:42:07",
    "text": "will you utilize treeshaking? or just include the whole TW library?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-01-10 07:43:39",
    "edited": {
      "time_stamp": "2022-01-10 07:44:01"
    },
    "text": "I’m not sure how up-to-date  with the boilerplate <https://github.com/ozguruysal/HubSpot-tailwind|this repo> is"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-01-10 07:44:30",
    "text": "maybe <@U0250P48N69> can speak more to this!"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-01-10 07:48:18",
    "text": "also <@UDHT6N5SM> has <https://fasterbetter.dev/blog/HubSpot-webpack/add-tailwind|a blog post> on it!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-01-10 07:49:20",
    "text": "We also have an experiment in the original boilerplate repo.\n<https://github.com/HubSpot/cms-theme-boilerplate/pull/251>\n\nBeware this is an experiment, it may have issues, it’s code may also be behind the current main branch."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-01-10 07:50:33",
    "text": "Thanks <@U7SL518D6>! I was looking for that but couldn’t find it for the life in me"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2022-01-10 07:52:33",
    "text": "<@UBT0AHWLD> has some additional info on a new CDN version that does fancy things to keep file size small"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-10 07:54:15",
    "text": "well, its only the “Play CDN” not for production unfortunately: <https://tailwindcss.com/docs/installation/play-cdn>"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-10 07:55:32",
    "text": "“The Play CDN is designed for development purposes only, and is not the best choice for production.”"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-01-10 10:57:54",
    "edited": {
      "time_stamp": "2022-01-10 11:01:57"
    },
    "text": "You could could build the site with the CDN and then copy the output into a CSS file when it's ready for go live.\n\nIf you ever need to make changes add the CDN back and repeat"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-01-10 11:06:46",
    "text": "only problem is it’s pretty massive. I’d utilize tw’s purge functionality. Caution though, you’ll  need to provide a safelist of classes that any module uses for dynamic values"
  }
]
[
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-06-08 07:26:03",
    "text": "hi all. I am wondering if there is a way to place a search field on the blog listing page and have it return returns on the blog listing page - not send me to the search results page.\n\nI can't seem to find a way, all I can find is to use the built-in HubSpot search module (or make your own off of that). anyone had any luck or other ideas?",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-06-08 07:56:39"
      },
      {
        "time_stamp": "2023-06-08 08:00:32"
      },
      {
        "time_stamp": "2023-06-08 08:01:57"
      },
      {
        "time_stamp": "2023-06-08 08:02:28"
      },
      {
        "time_stamp": "2023-06-08 08:02:55"
      },
      {
        "time_stamp": "2023-06-08 08:03:03"
      },
      {
        "time_stamp": "2023-06-08 08:04:11"
      },
      {
        "time_stamp": "2023-06-08 08:05:00"
      },
      {
        "time_stamp": "2023-06-08 08:05:43"
      },
      {
        "time_stamp": "2023-06-08 08:05:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-08 07:56:39",
    "text": "<@U02V2F8HF3M> It's possible,\n\nCreate new modules first, the first of which will be used for the search form and will fetch articles from this endpoint:{{ domain}}/_hcms/search?term={{search_term}} &amp;limit=50&amp;type=BLOG_POST (This endpoint doesn't require authentication)\n\nNow Add a blank div to the blog listing template.\n\nWhen a user submits a query,  execute API using ajax, then hide default blog listing grid  and append API response data to a blank div and make it visible.\n\nIf you have any questions, please let me know."
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-06-08 08:00:32",
    "text": "thanks <@U022YD6LGAU>. what about also filtering by tags?"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-08 08:01:57",
    "text": "Tag filtering without reload the page?"
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-06-08 08:02:28",
    "text": "yeah...after looking today, I am suprised HubSpot don't allow a frontend JS api to utilise"
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-06-08 08:02:55",
    "text": "the closest I came was to use the endpoint you mention, but you can not pass a `q` param i.e. to get all blog posts, for example"
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-06-08 08:03:03",
    "text": "which I kind of get, but was frustrating"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-08 08:04:11",
    "text": "yes doesn't get too much options for filter the content"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-08 08:05:00",
    "text": "Yes correct in order to filter by tags above endpoint would not work as it will look for param and its mandatory"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-08 08:05:43",
    "text": "I have one solution to get it done, I will send you in a moment"
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-06-08 08:05:54",
    "text": "ok great, appreciate that"
  },
  {
    "poster": {
      "poster_name": "Elise Ferguson",
      "poster_handle": "elise.ferguson"
    },
    "time_stamp": "2023-06-08 09:27:52",
    "text": "Hey all, does anyone know the magnitude of tag_boost for the related_blog_posts call?  Documentation just says a positive number but is that like 1 to 100? 1 to infinity?  what number do I use to get the most related blog posts?"
  },
  {
    "poster": {
      "poster_name": "Zayne Upton",
      "poster_handle": "zayne"
    },
    "time_stamp": "2023-06-08 09:58:01",
    "edited": {
      "time_stamp": "2023-06-08 09:59:16"
    },
    "text": "Hi all. I'm building a customised quote template where I need to display the details of the \"Partner Company\", which is a company associated to the deal by a custom association label \"partner customer\".  For this, I assumed that I could use the function\n\n`{% set partner_company = crm_associations(template_data.quote.associated_objects.deal.hs_object_id, \"USER_DEFINED\", 2) %}`\n`{{ partner_company }}`\n\nHowever, it returns nothing. In fact, I've tried with any other association to the deal and I'm still getting nothing. the deal ID is being returned correctly, but no associated objects are returned.\n\nIs there something I'm missing?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-06-12 01:00:50"
      },
      {
        "time_stamp": "2023-06-12 01:01:25"
      },
      {
        "time_stamp": "2023-06-12 01:02:25"
      },
      {
        "time_stamp": "2023-06-12 01:06:18"
      },
      {
        "time_stamp": "2023-06-13 06:58:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zayne Upton",
      "poster_handle": "zayne"
    },
    "time_stamp": "2023-06-08 10:08:20",
    "text": "Hi Simone. I'm having exactly the same issue. I'm also completely stymied by this. I'll let you know if anyone responds to my question on the same topic."
  },
  {
    "poster": {
      "poster_name": "Noel Williams",
      "poster_handle": "noel.williams"
    },
    "time_stamp": "2023-06-08 13:18:33",
    "edited": {
      "time_stamp": "2023-06-08 13:19:47"
    },
    "text": "I was trying to group custom objects by the role property and sort them based on the display order of the values in the property definition. Took some time to figure this one out, so I thought I would post the code here.\n\n```  {# get property definition #}\n{% set role_labels = crm_property_definition(\"p_team_members\", \"role\") %}\n\n{# group custom objects by role #}\n  {% set grouping = rows.results|groupby(\"role\") %}\n{# create a new list for sorted  #}\n    {% set sortedGrouping = [] %}\n{# loop through roles in property definition #}\n    {% for role in role_labels.options|sort(False, False, \"displayOrder\") %}\n      {% set roleOption = grouping|selectattr('grouper', 'equalto', role.value)|first %}\n      {% if roleOption %}\n        {% do sortedGrouping.append(roleOption) %}\n      {% endif %}\n    {% endfor %}\n{# loop through sorted groups #}\n    {% for group in sortedGrouping %}  \n      &lt;h2&gt;{{ group.grouper }}&lt;/h2&gt;\n      &lt;ul&gt;\n      {% for item in group.list %}\n          &lt;li&gt;{{ item.name }}&lt;/li&gt;\n      {% endfor %}\n      &lt;/ul&gt;\n    {% endfor %} ```"
  }
]
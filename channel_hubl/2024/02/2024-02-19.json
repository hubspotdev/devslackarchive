[
  {
    "poster": {
      "poster_name": "Marcus Öhman",
      "poster_handle": "marcus.ohman"
    },
    "time_stamp": "2024-02-19 01:30:59",
    "text": "solved it like this, base layout (base.html):\n```{% set pageSettings = { theme: 'transparent' } %}\n{% module \"page-settings\"\n  path=\"../../modules/page-settings\",\n  label=\"Page settings\"\n%}```\ncustom module page-settings, module.html:\n```{% do pageSettings.update({ theme: module.page_theme }) %}```\nApparently you can also use `export_to_template_context=True` , even though documentation states <https://developers.HubSpot.com/docs/cms/building-blocks/modules/export-to-template-context#usage-within-custom-modules|you cant use it for custom modules> :thinking:"
  },
  {
    "poster": {
      "poster_name": "Marcus Öhman",
      "poster_handle": "marcus.ohman"
    },
    "time_stamp": "2024-02-19 01:51:12",
    "edited": {
      "time_stamp": "2024-02-19 01:52:13"
    },
    "text": "Apparently this works as well:\nbase.html:\n```{% module \"page-settings\"\n  path=\"../../modules/page-settings\",\n  label=\"Page settings\"\n%}\n{% set pageSettings = content.widgets['page-settings'].body %}```\nmodule.html in page-settings can just be empty\n\nnow the pageSettings variable is an object with all page-settings fields that i can access anywhere needed (pageSettings is also not necessarry, but simplifies access rather than having to write `content.widgets['bic-page-settings'].body` whenever you want to access some setting"
  },
  {
    "poster": {
      "poster_name": "Anthony Perez",
      "poster_handle": "anthony249"
    },
    "time_stamp": "2024-02-19 03:06:54",
    "text": "Hey there, perhaps i am looking over something but is it expected behaviour that in a Dynamic HubDB page the {% form %} syntax from HubSpot doesn’t work? when i load it in on the source page it loads correctly but when i go to one of the dynamically generated pages it’s gone. if this is normal, what is the best way to generate the form then (Embed, js, etc)?"
  },
  {
    "poster": {
      "poster_name": "Anthony Perez",
      "poster_handle": "anthony249"
    },
    "time_stamp": "2024-02-19 03:08:50",
    "text": "Unless you use a versioning control like git, i’m afraid there isnt a way to roll back unfortunately :disappointed:"
  },
  {
    "text": "Guys the crm_object function has a terrible bug. I'm querying a product by name which contains the \"NOT\" word and it seems that HubSpot is treating it as a sql instruction, thus invalidating the query.\nIn the example i'm showing you the exact product, the first query doesn't yield anything.",
    "time_stamp": "2024-02-19 03:29:10",
    "reply_count": 23,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2024-02-19 03:29:20"
      },
      {
        "time_stamp": "2024-02-19 07:50:58"
      },
      {
        "time_stamp": "2024-02-19 07:51:22"
      },
      {
        "time_stamp": "2024-02-19 07:57:22"
      },
      {
        "time_stamp": "2024-02-19 07:57:32"
      },
      {
        "time_stamp": "2024-02-19 08:02:01"
      },
      {
        "time_stamp": "2024-02-19 08:02:51"
      },
      {
        "time_stamp": "2024-02-19 08:14:50"
      },
      {
        "time_stamp": "2024-02-19 08:16:00"
      },
      {
        "time_stamp": "2024-02-19 08:19:48"
      },
      {
        "time_stamp": "2024-02-19 08:19:50"
      },
      {
        "time_stamp": "2024-02-19 08:20:05"
      },
      {
        "time_stamp": "2024-02-19 08:20:17"
      },
      {
        "time_stamp": "2024-02-19 08:20:23"
      },
      {
        "time_stamp": "2024-02-19 08:21:16"
      },
      {
        "time_stamp": "2024-02-19 08:21:25"
      },
      {
        "time_stamp": "2024-02-19 08:21:31"
      },
      {
        "time_stamp": "2024-02-19 08:21:50"
      },
      {
        "time_stamp": "2024-02-19 08:22:10"
      },
      {
        "time_stamp": "2024-02-19 09:11:33"
      },
      {
        "time_stamp": "2024-02-20 06:58:42"
      },
      {
        "time_stamp": "2024-02-23 11:13:10"
      },
      {
        "time_stamp": "2024-02-23 11:13:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2024-02-19 03:29:20",
    "text": "cc <@U01QVR44MEY>"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-02-19 03:30:24",
    "text": "A macro to load fonts sounds like a good idea, however, that looks like a very overly complicated way of doing it!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-19 07:50:58",
    "text": "It looks like it’s working fine"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-19 07:51:22",
    "text": "It found an object that matched what you were asking for"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2024-02-19 07:57:22",
    "text": "Nope it matched only with hs_object_id , look the query with the name"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2024-02-19 07:57:32",
    "text": "it's an empty object"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-19 08:02:01",
    "text": "Interesting, can you make the query: name__eq=NOT GRANTA SCRUB + NOT MASCHERA BURRO"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2024-02-19 08:02:51",
    "text": "Same it doesnt work"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-19 08:14:50",
    "text": "<@U2LEJ045D> any ideas here?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2024-02-19 08:16:00",
    "text": "looking now"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2024-02-19 08:19:48",
    "text": "can you use the neq -- in the query"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2024-02-19 08:19:50",
    "text": "<https://developers.HubSpot.com/docs/cms/hubl/functions>"
  },
  {
    "text": "",
    "time_stamp": "2024-02-19 08:20:05"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2024-02-19 08:20:17",
    "text": "the not equal query --"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2024-02-19 08:20:23",
    "text": "cc <@U01QVR44MEY>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-19 08:21:16",
    "text": "Yeah but his object name has NOT in the name"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-19 08:21:25",
    "text": "That’s not part of the actual query"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2024-02-19 08:21:31",
    "text": "oh"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-19 08:21:50",
    "text": "I believe this isn’t a problem for Graphql just don’t know about the CRM object function"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2024-02-19 08:22:10",
    "text": "yeah I would use GraphQL --"
  },
  {
    "poster": {
      "poster_name": "Federico Bartoli",
      "poster_handle": "federico.bartoli"
    },
    "time_stamp": "2024-02-19 09:11:33",
    "text": ":disappointed:"
  },
  {
    "poster": {
      "poster_name": "Megan Miller",
      "poster_handle": "millerm"
    },
    "time_stamp": "2024-02-19 12:54:09",
    "text": "Hello all! I've been trying to find the needed documentation to make this happen.\nI have a hubdb of a lot of plants. I made a listing page that shows the plants, and the dynamic detail pages are being generated.\nI need to add a search bar and filter. I built one on a previous iteration, but it didn't work reliably (not sure why). and the filter never worked at all.\nI would love to see some sample code how to make a checkbox filter and keyword search. Thank you!\n(current page: <https://content.gardenforwildlife.com/temp-plant-listing-page> - styling coming later)",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-20 06:56:27"
      },
      {
        "time_stamp": "2024-02-20 07:47:01"
      },
      {
        "time_stamp": "2024-02-20 07:56:56"
      },
      {
        "time_stamp": "2024-02-20 07:58:01"
      },
      {
        "time_stamp": "2024-02-20 08:42:44"
      },
      {
        "time_stamp": "2024-02-20 08:50:01"
      },
      {
        "time_stamp": "2024-02-20 08:50:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-02-19 14:25:41",
    "text": "hey all, is there a way to force HubSpot to _not_ cache a page? Having a issue where people are seeing things they shouldn't because HubSpot isn't keeping up to speed with itself, atleast with the graphql consumer",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-19 15:58:12"
      },
      {
        "time_stamp": "2024-02-20 06:57:09"
      },
      {
        "time_stamp": "2024-02-20 10:42:09"
      },
      {
        "time_stamp": "2024-02-20 10:42:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-02-19 14:29:53",
    "text": "im guessing we can't access / ask support to modify the access file"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-19 15:58:12",
    "text": "You actually can, by including functions or variables that prevent caching!\n\nIf you include a <https://developers.HubSpot.com/docs/cms/hubl/variables#general-variables|non-cachable variable like >`local_dt` on the page (even if you don’t use/render it), it’ll re-render the page with every request to ensure that the page’s content is current.\n\nTo check if a page has caching disabled, you can use the `?hsDebug=true` URL property when viewing the page, then check the debug output in at the bottom of the markup in your developer tools. If caching is disabled, you’ll see a message like this one:\n```This page currently CANNOT be prerendered. To improve your site speed and user experience, address the following issue(s):\n- This page uses an uncacheable expression. ([request.headers])```"
  }
]
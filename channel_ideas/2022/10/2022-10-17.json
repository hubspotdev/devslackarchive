[
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-17 12:53:23",
    "edited": {
      "time_stamp": "2022-10-17 12:53:41"
    },
    "text": "Here is an idea for custom module development I think could be particularly useful. At least to me. Custom Module Partials.\n\n<https://www.loom.com/share/1a443ef68ea346ac923fcfd990bda6a5>"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-17 12:57:02",
    "text": "More more idea for the pot. I'd still love a way for module.css to be able to handle `{{ hubl }}`\n\n<https://www.loom.com/share/b958c6d4bc724b6892cdd212f8cfc0a6>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-17 12:59:48",
    "text": "<@UA5DFM7CK> I really like both of these",
    "reply_count": 24,
    "reply_users_count": 8,
    "replies": [
      {
        "time_stamp": "2022-10-17 13:00:58"
      },
      {
        "time_stamp": "2022-10-17 13:01:17"
      },
      {
        "time_stamp": "2022-10-17 13:02:05"
      },
      {
        "time_stamp": "2022-10-17 13:21:26"
      },
      {
        "time_stamp": "2022-10-17 13:22:31"
      },
      {
        "time_stamp": "2022-10-17 14:12:01"
      },
      {
        "time_stamp": "2022-10-17 14:13:15"
      },
      {
        "time_stamp": "2022-10-17 14:13:25"
      },
      {
        "time_stamp": "2022-10-17 14:14:47"
      },
      {
        "time_stamp": "2022-10-17 14:16:21"
      },
      {
        "time_stamp": "2022-10-17 14:16:27"
      },
      {
        "time_stamp": "2022-10-17 14:17:11"
      },
      {
        "time_stamp": "2022-10-17 14:17:42"
      },
      {
        "time_stamp": "2022-10-17 14:17:49"
      },
      {
        "time_stamp": "2022-10-17 14:19:39"
      },
      {
        "time_stamp": "2022-10-18 00:05:51"
      },
      {
        "time_stamp": "2022-10-18 05:34:04"
      },
      {
        "time_stamp": "2022-10-18 05:36:54"
      },
      {
        "time_stamp": "2022-10-18 05:40:37"
      },
      {
        "time_stamp": "2022-10-18 05:52:35"
      },
      {
        "time_stamp": "2022-10-19 05:53:03"
      },
      {
        "time_stamp": "2022-10-19 08:15:33"
      },
      {
        "time_stamp": "2022-10-19 14:15:24"
      },
      {
        "time_stamp": "2022-10-25 09:37:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-17 13:00:58",
    "text": "Right on! Glad you agree."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-17 13:01:17",
    "edited": {
      "time_stamp": "2022-10-17 13:01:54"
    },
    "text": "You could build out the first one using a chrome extension and the source code api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-17 13:02:05",
    "text": "It would take some work but definitely doable"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-17 13:21:26",
    "text": "If this was a one-off theme for my own purposes, you're right. But since it's a marketplace asset, there are constraints to work within."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-17 13:22:31",
    "text": "True true"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-10-17 14:12:01",
    "text": "Doesn’t that first example already exist? Like you said that import function should do the trick. You can ‘{% import “../../file.html” as Card%}’ and reference any macro inside of that file in a module. {{Card.build_card(args)}}"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-10-17 14:13:15",
    "text": "I do this all the time when it comes to building cards and stuff across sites. It allows you to keep markup DRY and consistent across any module that may need it. "
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-10-17 14:13:25",
    "text": "Or did I miss what you were getting at?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-17 14:14:47",
    "text": "I think he meant like a super simple right click type option that would allow you to just save out the selected code to a partial and then replace the selected code with the import"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-17 14:16:21",
    "text": "<@U01QVR44MEY> That right click option would be awesome but I think the `{% import %}` option may be what I'm looking for.  I kept trying to use `{% include %}` which wasn't throwing errors.\n\nThanks for the idea <@UQWGKUEN7>. I'll try it out."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-10-17 14:16:27",
    "text": "Got it - I’m currently in a jury pool being bored but also trying to be quiet on my phone so I didn’t catch everything haha\n\nAs for the second option — hubl in custom module css would be great. But if you need to get the hubl options down there I def recommend using css variables!"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-10-17 14:17:11",
    "text": "<@UQWGKUEN7> that's hilarious you're in jury duty."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-10-17 14:17:42",
    "text": "I think you’re both right, but the added detail in Kevin’s example is he still wants to reference the `module.` data as well. In that case I’d suggest a macro (which can be imported as a part of a larger file) and then feed the module data as arguments"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-10-17 14:17:49",
    "text": "but yes, 1000% CSS vars"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-10-17 14:19:39",
    "text": "Gotta do what you gotta do! Haha <@UA5DFM7CK> "
  },
  {
    "poster": {
      "poster_name": "Parth Chaudhary",
      "poster_handle": "parth.1996.ce"
    },
    "time_stamp": "2022-10-18 00:05:51",
    "text": "I think about that Partial for the Module, Shopify has something called \"Snippets\" and it can be used in their sections(for HubSpot its modules).\n\nIt is really nice to have that feature"
  }
]
[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-04-27 07:30:37",
    "text": "Anyone know how to use the `|reject` filter with `string_containing` expression test?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-04-27 07:33:02",
    "text": "ah nevermind, had to do it like so\n```|reject(\"string_containing\", \"foo\")```"
  },
  {
    "text": "How on earth do I check for a value of a field when HubSpot doesn't let me copy its value? I tried the following but it's giving a nonsensical error (since col_1 IS there).",
    "time_stamp": "2022-04-27 10:48:50"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:50:08",
    "text": "Trying to access the choice from accordions_amount which heriarchy is tab-&gt;col_1-&gt;accordions_amount",
    "reply_count": 42,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-04-27 10:53:29"
      },
      {
        "time_stamp": "2022-04-27 10:53:47"
      },
      {
        "time_stamp": "2022-04-27 10:53:59"
      },
      {
        "time_stamp": "2022-04-27 10:54:02"
      },
      {
        "time_stamp": "2022-04-27 10:54:49"
      },
      {
        "time_stamp": "2022-04-27 10:55:10"
      },
      {
        "time_stamp": "2022-04-27 10:55:20"
      },
      {
        "time_stamp": "2022-04-27 10:55:24"
      },
      {
        "time_stamp": "2022-04-27 10:57:19"
      },
      {
        "time_stamp": "2022-04-27 10:57:23"
      },
      {
        "time_stamp": "2022-04-27 10:57:45"
      },
      {
        "time_stamp": "2022-04-27 10:59:37"
      },
      {
        "time_stamp": "2022-04-27 11:01:05"
      },
      {
        "time_stamp": "2022-04-27 11:01:10"
      },
      {
        "time_stamp": "2022-04-27 11:02:14"
      },
      {
        "time_stamp": "2022-04-27 11:03:12"
      },
      {
        "time_stamp": "2022-04-27 11:03:45"
      },
      {
        "time_stamp": "2022-04-27 11:06:44"
      },
      {
        "time_stamp": "2022-04-27 11:06:57"
      },
      {
        "time_stamp": "2022-04-27 11:07:15"
      },
      {
        "time_stamp": "2022-04-27 11:07:44"
      },
      {
        "time_stamp": "2022-04-27 11:07:49"
      },
      {
        "time_stamp": "2022-04-27 11:08:06"
      },
      {
        "time_stamp": "2022-04-27 11:08:17"
      },
      {
        "time_stamp": "2022-04-27 11:09:15"
      },
      {
        "time_stamp": "2022-04-27 11:09:24"
      },
      {
        "time_stamp": "2022-04-27 11:09:25"
      },
      {
        "time_stamp": "2022-04-27 11:09:32"
      },
      {
        "time_stamp": "2022-04-27 11:09:33"
      },
      {
        "time_stamp": "2022-04-27 11:09:44"
      },
      {
        "time_stamp": "2022-04-27 11:10:18"
      },
      {
        "time_stamp": "2022-04-27 11:10:21"
      },
      {
        "time_stamp": "2022-04-27 11:13:30"
      },
      {
        "time_stamp": "2022-04-27 11:13:53"
      },
      {
        "time_stamp": "2022-04-27 11:14:07"
      },
      {
        "time_stamp": "2022-04-27 11:15:24"
      },
      {
        "time_stamp": "2022-04-27 11:22:34"
      },
      {
        "time_stamp": "2022-04-27 11:23:36"
      },
      {
        "time_stamp": "2022-04-27 11:24:15"
      },
      {
        "time_stamp": "2022-04-27 11:24:24"
      },
      {
        "time_stamp": "2022-04-27 11:29:37"
      },
      {
        "time_stamp": "2022-04-27 11:31:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 10:53:29",
    "text": "Did you add that accordions_amount field?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:53:47",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Michele Herzog",
      "poster_handle": "michele.herzog24"
    },
    "time_stamp": "2022-04-27 10:53:59",
    "text": "Hey <@U03BP3NKF5E>! Is your `tab` group a repeater? Youâ€™ll need to access it in a `for` loop if so:\n```{% for tab in module.tabs %}\n  {% if tab.col_1.accordions_amount .... %}\n{% endfor %}```\n"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:54:02",
    "text": "Cloned a existing module and modified it"
  },
  {
    "poster": {
      "poster_name": "Michele Herzog",
      "poster_handle": "michele.herzog24"
    },
    "time_stamp": "2022-04-27 10:54:49",
    "text": "(looks like it might be, since the error says `module.tab` is a list)"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 10:55:10",
    "text": "Yeah that doesn't really make sense. Tab is a repeater, so use module.tab|length instead."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:55:20",
    "text": "hmm that didn't seem to work either"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:55:24",
    "text": "' {% for tab in module.tabs %}\n    {% if tab.col_1.accordions_amount == 0 %}\n     .accordion1, .accordion2, .accordion3, .accordion4{\n      display: none;\n    }\n    {%endif%}\n  {% endfor %}'\n\nis what I wrote"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:57:19",
    "text": "Fixed it! Thank you both"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 10:57:23",
    "edited": {
      "time_stamp": "2022-04-27 10:57:34"
    },
    "text": "```{% if module.tab|length %}\n\n{% endif %}```"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:57:45",
    "text": "Let me try that, because I thought I fixed it but ultimately didn't lmao"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 10:59:37",
    "text": "<@U021H3TV338> So would that replace the For loop or is that the validator within?"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:01:05",
    "text": "That would replace the for loop."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:01:10",
    "text": "Ah ok let me try it."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:02:14",
    "text": "Hmmm I think its close but there's still something off\n\n`&lt;style&gt;`\n  {% if module.tab|length %}\n    {% if tab.col_1.accordions_amount == 0 %}\n     .accordion1, .accordion2, .accordion3, .accordion4{\n      display: none;\n    }\n  {% else if tab.col_1.accordions_amount == 1 %}\n  .accordion1{\n    display: unset;\n  }\n  .accordion2, .accordion3, .accordion4{\n      display: none;\n    }\n  {% else if tab.col_1.accordions_amount == 2 %}\n  .accordion1,.accordion2{\n    display: unset;\n  }\n  .accordion3, .accordion4{\n      display: none;\n    }\n\n   {% else if tab.col_1.accordions_amount == 3 %}\n  .accordion1,.accordion2, .accordion3{\n    display: unset;\n  }\n  .accordion4{\n      display: none;\n    }\n\n  {% else %}\n  .accordion1, .accordion2, .accordion3, .accordion4{\n      display: unset;\n    }\n    {% endif %}\n  {% endif %}\n&lt;/style&gt;"
  },
  {
    "text": "Choice field is set up this way",
    "time_stamp": "2022-04-27 11:03:12"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:03:45",
    "text": "Looks like it's stuck in :\n\n`{% else if tab.col_1.accordions_amount == 1 %}`\n  .accordion1{\n    display: unset;\n  }\n  .accordion2, .accordion3, .accordion4{\n      display: none;\n    }\n\n\nNo matter what I set it too."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:06:44",
    "text": "You shouldn't need `accordions_amount` at all, you should delete that field, assuming tab is a repeater group, which it looks like it is."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:06:57",
    "text": "Oh, this is a set of accordions within the repeater"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:07:15",
    "edited": {
      "time_stamp": "2022-04-27 11:07:22"
    },
    "text": "Then instead of like `tab.col_1.accordions_amount == 2`, you can do `module.tab|length == 2`"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:07:44",
    "text": "I see where you're going, but I think I need to go a level deeper tbh"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:07:49",
    "edited": {
      "time_stamp": "2022-04-27 11:08:01"
    },
    "text": "Is there a parent group/repeater outside of the tab that we can't see?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:08:06",
    "text": "So I have it set up like this way:\n\nTab is repeater\nInside Tab is Col 1 &amp; Col 2\ninside Col 1 is 4 groups of accordions"
  },
  {
    "text": "",
    "time_stamp": "2022-04-27 11:08:17"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:09:15",
    "text": "`module.tab.col_1.accordion|length` then if I understand you right."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:09:24",
    "text": "Oh"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:09:25",
    "text": "let me try that! :smile:"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:09:32",
    "text": "You're not actually using a repeater for the accordions."
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:09:33",
    "text": "Why?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:09:44",
    "text": "I couldn't figure out how to set them up lmao"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:10:18",
    "text": "Oh, it's a option on the bottom"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:10:21",
    "text": "Let me try to convert it to that"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:13:30",
    "text": "Somehow that seemed to make it all break"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:13:53",
    "text": "I guess I can't have a repeater within a repeater?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:14:07",
    "text": "Oh wait, ignore me"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:15:24",
    "text": "Ugh, why can't they just let us code this shit in a real language"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:22:34",
    "text": "Okay so, set it up as a repeater; Had a bug where nothing would show up but thta seems fixed now. I think my iteration code for the repeater is wrong though as none of the repeater fields show up, any idea? I think the issue is it _still_ can't find col_1\n\n`{% for item in module.tab.col_1.accordion %}`\n                      `&lt;button class=\"accordion accordion1\" id=\"accordion1\"&gt;`\n                      `{% inline_text field=\"item.accordion_header\" value=\"{{ item.accordion_header}}\"%}`\n                     `&lt;/button&gt;`\n                    `&lt;div class=\"panelAccordion\"&gt;`\n                      `{% inline_rich_text field=\"item.accordion_content\" value=\"{{ item.accordion_content }}\" %}`\n                    `&lt;/div&gt;`\n                    `{% endfor %}`"
  },
  {
    "text": "Set up like this",
    "time_stamp": "2022-04-27 11:23:36"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:24:15",
    "text": "Got it....it has to be item.col_1.accordion"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:24:24",
    "text": "good grief. Thank you both for your help! <@U021H3TV338> <@U02NJACH5QS>"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:29:37",
    "edited": {
      "time_stamp": "2022-04-27 11:30:25"
    },
    "text": "No problem, glad you got it. Depending on what you're trying to do exactly, I would probably have column be a repeater as well, rather than \"col_1\" and \"num_cols\""
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:31:09",
    "text": "Yeah, in retrospect I should've just programmed this from scrach instead of modifying this existing one"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:35:02",
    "text": "Any idea how I would access a image's source from a field? would it be like image.src ?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-04-27 11:39:48"
      },
      {
        "time_stamp": "2022-04-27 11:40:28"
      },
      {
        "time_stamp": "2022-04-27 11:42:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-04-27 11:39:48",
    "text": "Right."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:40:28",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomaslanenh"
    },
    "time_stamp": "2022-04-27 11:42:14",
    "text": "Got it to work :smile: Thanks"
  },
  {
    "poster": {
      "poster_name": "Sandipan Saha",
      "poster_handle": "sandipan.s"
    },
    "time_stamp": "2022-04-28 00:30:10",
    "text": "Hi everyone,\n\nIâ€™m trying to fetch two random rows from a hubdb table using the shuffle function and display their data on a page. The hubdb loop runs each time the page refreshes. But since there are only 6 rows currently, at times the two random rows selected turns out to be the same. Is there any way to ensure that the two random rows that are selected, are always different from each other ?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-04-28 00:33:44"
      },
      {
        "time_stamp": "2022-04-28 07:58:43"
      },
      {
        "time_stamp": "2022-04-28 08:03:30"
      },
      {
        "time_stamp": "2022-05-02 00:36:46"
      },
      {
        "time_stamp": "2022-05-03 02:26:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sandipan Saha",
      "poster_handle": "sandipan.s"
    },
    "time_stamp": "2022-04-28 00:33:44",
    "edited": {
      "time_stamp": "2022-04-28 00:44:45"
    },
    "text": "Also, is there a way to use While loop of Do-While loop within hubl ?"
  }
]
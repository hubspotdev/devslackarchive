[
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-05-30 12:00:49",
    "text": "How many products are you selecting from? Have you checked how much rendering delay is added if you just grab them all and filter out the ones you want with something like `selectattr`?\n\nAlternatively, have you checked if you can use the `in` operator and your list of IDs as your query? Ex: `crm_objects(\"company\", \"hs_object_id__in=00000,12345,99999\")`"
  },
  {
    "poster": {
      "poster_name": "Josh Braner",
      "poster_handle": "braner.josh"
    },
    "time_stamp": "2024-05-30 12:10:35",
    "text": "Oh man, using `in` did exactly what I wanted, shoot... now I feel pretty silly haha. I did not realize I could simply do a list like that with that operator. This solved it, thank you!\n\nJust for the context though, somewhere around 300 for this portal, which may or may not be an issue, but I'm wanting to build this in a scalable way to work whether the portal has 10 products or 1000, and `selectattr` just didn't seem like it would be a good option."
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-05-30 12:16:39",
    "text": "I absolutely agree that retrieving absolutely everything isn’t an ideal option, since you run into a hard wall if there are more products than can be retrieved for a page. However, it might still be worth considering if you don’t expect to ever hit that limit: depending on your query’s complexity, retrieving everything and filtering in HubL can often be faster! It’s unintuitive, but the documentation actually recommends it in a few places for that very reason."
  },
  {
    "poster": {
      "poster_name": "Josh Braner",
      "poster_handle": "braner.josh"
    },
    "time_stamp": "2024-05-30 12:22:42",
    "text": "I swear these little nuggets seem to be hidden in the docs in the places I never manage to see them :smiling_face_with_tear: I'll definitely keep that in my back pocket in case this doesn't work, but my query should be pretty simple, I'm using a hubdb table to pull down a specific list of item sku's with customized pricing depending on the user and then using those sku's to pull from the product object to create some dynamic wholesale catalogs.\n\nThis is _completely_ unrelated, but I just realized, you spoke during the last developer HUG about macros, right? I just wanted to let you know that entire thing blew my mind and has already had a huge impact in my approach to building modules. Thank you for sharing all that wonderful secret sauce!"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-05-30 12:35:06",
    "text": "I think that tidbit was stolen away in the HubDB/Dynamic Pages guides! Definitely not a place that everyone would run across it.\n\nAnd, yes, that was me! I’m so glad to hear that you found my presentation useful!! :) I had absolutely no idea whether anyone besides me would actually be interested."
  },
  {
    "poster": {
      "poster_name": "Josh Braner",
      "poster_handle": "braner.josh"
    },
    "time_stamp": "2024-05-30 12:48:20",
    "text": "Definitely was super interesting, being able to separate things out into what essentially is components for reusability and easier to read code is awesome! I really learned a ton from it."
  }
]
[
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 07:21:11",
    "text": "hi, anyone with trouble using the \"Publish or unpublish a live version of a table or restore an archived table\" as listed in <https://developers.HubSpot.com/docs/api/cms/hubdb>?\n\nI have a NodeJS script fetching the API with axios. It worked a month ago and suddenly I am getting got a 405 Method Not Allowed this week. Tried with Postman too, getting the same response",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-15 07:34:07"
      },
      {
        "time_stamp": "2021-07-15 07:35:52"
      },
      {
        "time_stamp": "2021-07-15 07:39:49"
      },
      {
        "time_stamp": "2021-07-15 07:41:04"
      },
      {
        "time_stamp": "2021-07-15 07:43:18"
      },
      {
        "time_stamp": "2021-07-15 07:47:50"
      },
      {
        "time_stamp": "2021-07-15 07:49:24"
      },
      {
        "time_stamp": "2021-07-15 07:50:27"
      },
      {
        "time_stamp": "2021-07-15 08:21:17"
      },
      {
        "time_stamp": "2021-07-15 08:23:18"
      },
      {
        "time_stamp": "2021-07-15 08:25:49"
      },
      {
        "time_stamp": "2021-07-15 08:47:55"
      },
      {
        "time_stamp": "2021-07-16 08:03:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-15 07:34:07",
    "text": "To be clear the method you are using is `PATCH` correct?"
  },
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 07:35:52",
    "text": "yes."
  },
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 07:39:49",
    "text": "```curl --location --request PATCH '<https://api.hubapi.com/cms/v3/hubdb/tables/>&lt;TABLE_NAME&gt;?hapikey=&lt;API-KEY&gt;' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"published\": false\n}'```"
  },
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 07:41:04",
    "text": "i tried with both the table name &amp; table ID, both of them return 405 Method Not Allowed"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-15 07:43:18",
    "text": "try adding `/draft` to the end of the URL.\n```<https://api.hubapi.com/cms/v3/hubdb/tables/>&lt;TABLE_NAME&gt;/draft?hapikey=&lt;API-KEY&gt;```\nI realize that’s not how it’s documented. If that works let me know. I’m going to contact the team that owns this API."
  },
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 07:47:50",
    "text": "hm, this API does return 200. but the status of the table is not updating. It is still in \"Published\" after the call"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-15 07:49:24",
    "text": "Thanks for confirming. I’m going to reach out to the team that owns the API and see what I can find out."
  },
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 07:50:27",
    "text": "thanks a lot!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-15 08:21:17",
    "text": "We did make a change - sorry about that-  I’m working on updating our developer docs.\n\nTo UNPUBLISH a table you’ll now\n`POST` to\n`<https://api.hubapi.com/cms/v3/hubdb/tables/{tableIdOrName}/unpublish>`"
  },
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 08:23:18",
    "text": "great! that works! thanks a lok <@U7SL518D6>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-15 08:25:49",
    "text": ":yougotitdude: Sorry about the inconvenience, I’ll make sure our documentation is updated so no one else runs into that."
  },
  {
    "poster": {
      "poster_name": "Shun",
      "poster_handle": "scheung"
    },
    "time_stamp": "2021-07-15 08:47:55",
    "text": "no worry. thanks a lot!"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:42:40",
    "text": "Create a new schema\n\nproperties.description\nString\nA description of the property that will be shown as help text in HubSpot.\n\n<https://developers.HubSpot.com/docs/api/crm/crm-custom-objects>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:42:59",
    "text": "Should just fill that in, eh?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:43:59",
    "text": "We need a lot more context on where you are trying to call the external post code API from and what you are trying to do where inside which feature of HubSpot"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:45:09",
    "text": "Unfortunately this is a known limitation right now and HubSpot has some work to do refactoring their engagement support.\n\nI am getting hit by a similar problem because the engagements cannot be webhooked, and I BADLY need to be able to webhook the created Tasks"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:46:22",
    "text": "hmm... I think you'd need to set up the app_id column as an idProperty, and then use that to do guaranteed-unique lookups for the existing object to be able to create-or-update / upsert it into the system\n\n<@UFBNA9K9A>?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:47:07",
    "text": "I think you'll have to do some kind of search w/ associations included to catch these, because it's a cross-object use case"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:48:02",
    "text": "I do not understand how you model an Invoice accurately, if you do not have a Deal to connect it up to\n\nThat definitely wouldn't work in my HubSpot setup"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:49:20",
    "text": "You have to pay extra for HubSpot transactional email feature to send emails via API from HubSpot\n\nCan you explain more about the use case and the situation\n\nYou might need to use a connection to your own SMTP server or another email API vendor to handle this use case"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:50:24",
    "text": "none of us community people will have much insight into these very new custom event features\n\n<@UFBNA9K9A>?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:50:53",
    "text": "sadly there is no good cloning ability\n\nthis drives me absolutely bonkers because I need to have separate staging and production for compliance reasons"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:52:01",
    "text": "you aren't allowed to call any HubSpot APIs from directly inside of Browser UI except unauthenticated form submits, because it's a security risk to have HubSpot API creds in your client side\n\nyou need to develop with a BFF paradigm (Backend For Frontend)"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:52:33",
    "text": "need more information on what got sent to what API and what HTTP errors came back"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:54:40",
    "text": "<https://legacydocs.HubSpot.com/docs/methods/forms/submit_form>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:54:53",
    "text": "this limit is documented widely"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:56:06",
    "text": "maybe possible w/ a workflow, custom code action to realize things are the same, and add the associations in the associations API\n\nnothing automatic will handle this because the system can't know that's the association you want until you create it"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:56:37",
    "text": "probably the company ID is not right / does not exist, but we'd need a more exact paste of the data to confirm"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:57:42",
    "text": "seems like there is a design or implementation problem with the feature if they are forcing it to be used via OAuth instead of API key\n\n<@UFBNA9K9A> <@UD53A9UUR>?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:58:30",
    "text": "they aren't just shutting these APIs off unilaterally, you need to be way more specific what \"not accepting requests\" means and what error you got"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:58:40",
    "text": "maybe an HTTP 429 rate limit problem?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:59:05",
    "text": "this is the channel, but we'd need to see some sample code or a link to what you are talking about"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 10:59:48",
    "text": "I would probably work around it by logging a NOTE engagement or an Event that the SMS got sent\n\n<https://legacydocs.HubSpot.com/docs/methods/engagements/engagements-overview>\n\n<https://developers.HubSpot.com/docs/api/marketing/marketing-events>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:00:08",
    "text": "then the field would probably update since it will see that activity in the feed it watches"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:01:56",
    "text": "there is a lot going on here\n\nwhat thing's creation or updates are you trying to monitor for in HubSpot?\n\nthen we can talk through one step at a time\n\nare you saying you are trying to monitor Form submits? Contact creation? Deal wins? Etc to find that you need to go take action downstream?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:02:48",
    "text": "depending on the field data type you can sometimes join the multiple values with the ';' character, but we need to know more about the EXACT info of the field you are trying to fill in, can you get us a copy of the form schema for that field / property?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:03:47",
    "text": "yeah you have to get that properties field exactly right, and you are supposed to comma-join it, not multi-value-submit it"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:04:18",
    "text": "(at least for V3 object retrieval APIs)\n\n(search API is different because you're feeding it JSON not GET params)"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:05:47",
    "text": "there are but how do you want the dates to be ranged? last created? last updated? last sent into outer space? etc?"
  },
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-07-15 11:05:57",
    "text": "So basically make a module where i check the database if the child table has a row with the same name, link that name in the child table field with an api call?? Is this what you are suggesting?? \nThanks"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:06:28",
    "text": "please get entire HTTP error payload not just error number or we can't tell you anything"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:07:17",
    "text": "yeah, I think you're going to have to pay for the feature you really want, or integrate with a different invoicing system, but then you'd have to pay for it too"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:08:15",
    "text": "<https://community.HubSpot.com/t5/APIs-Integrations/Get-created-contacts-in-time-range-via-API/td-p/334942>\n\none way to do it"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:10:58",
    "text": "with a question this specific it's unlikely to get a reply too fast\n\nbut if you can break it down and give examples then some of us non-Azure devs might be able to assist"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 11:21:15",
    "text": "The limitation on being able to webhook engagements, or scrape only one engagement type's history (TASK only), is KILLING me on a project right now. Any hope of relief?\n\n<https://community.HubSpot.com/t5/APIs-Integrations/Custom-webhook-on-engagement-creation/m-p/236203/highlight/true>",
    "reply_count": 11,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2021-07-16 18:14:57"
      },
      {
        "time_stamp": "2021-07-16 18:43:52"
      },
      {
        "time_stamp": "2021-07-23 17:10:03"
      },
      {
        "time_stamp": "2021-07-23 17:19:19"
      },
      {
        "time_stamp": "2021-07-26 10:07:07"
      },
      {
        "time_stamp": "2021-08-10 11:00:10"
      },
      {
        "time_stamp": "2022-05-20 11:44:02"
      },
      {
        "time_stamp": "2022-05-20 11:52:28"
      },
      {
        "time_stamp": "2022-05-20 11:54:04"
      },
      {
        "time_stamp": "2022-05-20 11:57:14"
      },
      {
        "time_stamp": "2022-05-20 12:00:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 12:06:46",
    "text": "something like: do a workflow to capture create or change of car and car-parts, in the workflow, do a custom JS code action, in the custom JS code action, call the APIs to add the associations between the obj's: <https://developers.HubSpot.com/docs/api/crm/associations> ."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 12:07:12",
    "text": "I can't promise it'll work but I think it's the best option as a starting point"
  },
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-07-15 12:22:48",
    "text": "Thank you very much Matthew, i will look at up the api and let you know if i managed to do it:grinning: thanks alot!!! "
  },
  {
    "poster": {
      "poster_name": "Yosef Zaverukha",
      "poster_handle": "yosef.zaverukha"
    },
    "time_stamp": "2021-07-15 13:37:10",
    "text": "I'm trying to use the API to update a custom property for different companies which would be pulled from an excel sheet. I can create the property and all, but the question is that is is possible to have the API automatically assign the companies to the values associated with them in the excel sheet, or is the only option to manually fill them in for each company? From my understanding from the documentation I didn't see one that would allow me to automatically set a property",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-15 15:07:27"
      },
      {
        "time_stamp": "2021-07-15 15:07:35"
      },
      {
        "time_stamp": "2021-07-15 15:21:51"
      },
      {
        "time_stamp": "2021-07-16 18:14:17"
      },
      {
        "time_stamp": "2021-07-16 18:14:38"
      },
      {
        "time_stamp": "2021-07-20 08:58:49"
      },
      {
        "time_stamp": "2021-07-20 08:59:39"
      },
      {
        "time_stamp": "2021-07-23 17:11:55"
      },
      {
        "time_stamp": "2021-07-23 17:12:10"
      },
      {
        "time_stamp": "2021-07-27 11:34:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 15:07:27",
    "text": "hmm, are you trying to do this as a one-off or a permanently automated solution?\n\nbecause technically you can just make the Excel sheet with a column for Company ID and a column for each custom prop and what value to insert in that prop and then just use the Import feature of the product to set them all"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-07-15 15:07:35",
    "text": "even though I am a heavy API user I do this all the time"
  },
  {
    "poster": {
      "poster_name": "Yosef Zaverukha",
      "poster_handle": "yosef.zaverukha"
    },
    "time_stamp": "2021-07-15 15:21:51",
    "text": "yeah the idea is to have it automated, so perhaps daily or whenever just have a script that gets run that would take those records and using the API would update them on the HubSpot website. If using the import feature is the only way then we can do that, but if an automatic way to do that is possible it would definitely be the best case scenario"
  },
  {
    "poster": {
      "poster_name": "Shawn Broadhead",
      "poster_handle": "shawn.broadhead"
    },
    "time_stamp": "2021-07-15 15:37:41",
    "text": "Hi all, I'm very new to HubSpot and I'm trying to figure out how to get properties for an User/Owner.  It seems like, since an Owner is technically not an object there are no Properties associated with them.  For the life of me I can't find a way to get anything other than id, email, firstName, lastName, userId, createdAt, updatedAt, archived, and teams even though there's a lot more information available through the UI.  Does anyone have any ideas?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-07-16 18:16:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Spencer Knisely",
      "poster_handle": "spencer680"
    },
    "time_stamp": "2021-07-15 16:27:28",
    "text": "Webhook listener\n\nGreetings all,\nI don’t see a channel for this, so I’m posting here. Does anyone know of a way to implement a webhook listener in HubSpot to _receive requests_ from external webhooks, then map that JSON payload to update fields in records identified in the JSON?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-15 16:33:38"
      },
      {
        "time_stamp": "2021-07-15 16:40:32"
      },
      {
        "time_stamp": "2021-07-15 16:45:39"
      },
      {
        "time_stamp": "2021-07-15 16:56:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2021-07-15 16:33:38",
    "text": "Haven’t tried this specific application, but I think you should be able to create a serverless function to handle requests from webhooks, and it would use the HubSpot API to update your records. <https://developers.HubSpot.com/docs/cms/data/serverless-functions>"
  },
  {
    "poster": {
      "poster_name": "Spencer Knisely",
      "poster_handle": "spencer680"
    },
    "time_stamp": "2021-07-15 16:40:32",
    "text": "Interesting. Yes, I see.\n\nThe documentation seems to indicate that most users of this capability are using it to power CMS pages. I guess that this could be applied over CRM records as well? Needs exploration."
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2021-07-15 16:45:39",
    "text": "Yep, interfacing with external API’s on our website is mostly how we’ve used it, but (as long as your portal is enabled with serverless capability) I don’t think there’s a reason you wouldn’t be able to use it for your purpose."
  },
  {
    "poster": {
      "poster_name": "Spencer Knisely",
      "poster_handle": "spencer680"
    },
    "time_stamp": "2021-07-15 16:56:35",
    "text": "Nice suggestion. Thanks a bunch."
  },
  {
    "poster": {
      "poster_name": "Arno Van de Weyer",
      "poster_handle": "arno.vdw"
    },
    "time_stamp": "2021-07-16 00:57:20",
    "text": "I actually figured it out as well"
  },
  {
    "poster": {
      "poster_name": "Arno Van de Weyer",
      "poster_handle": "arno.vdw"
    },
    "time_stamp": "2021-07-16 00:58:09",
    "text": "This is an example for {{HubSpot API Url}}/crm/v3/objects/contacts/search\n\"filterGroups\": [\n        {\n            \"filters\": [\n                {\n                    \"propertyName\": \"createdate\",\n                    \"operator\": \"GT\",\n                    \"value\": \"1626101548000\"\n                }\n            ]\n        }\n    ],"
  },
  {
    "poster": {
      "poster_name": "Arno Van de Weyer",
      "poster_handle": "arno.vdw"
    },
    "time_stamp": "2021-07-16 00:58:48",
    "text": "This gets the items where creation date is greater then the 1626101548000 timestamp (Note, this is NOT the unix timestamp, it's the one in miliseconds)"
  }
]
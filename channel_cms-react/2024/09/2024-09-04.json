[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 05:19:18",
    "text": "morning, coming back to an old idea, is there any way to see where react modules are being used? (similar to the design manager feature)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 06:44:51",
    "text": "is it safe to have `noEmit: true` and `allowImportingTsExtensions: true` in my tsconfig.json?",
    "reply_count": 4,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-09-04 06:45:03"
      },
      {
        "time_stamp": "2024-09-04 06:49:47"
      },
      {
        "time_stamp": "2024-09-04 06:50:08"
      },
      {
        "time_stamp": "2024-09-04 14:53:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 06:45:03",
    "text": "here's my tsconfig.json now:\n```{\n  \"compilerOptions\": {\n    \"target\": \"ES2017\",\n    \"module\": \"Node16\",\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"jsx\": \"react-jsx\",\n    \"moduleResolution\": \"node16\",\n    \"allowImportingTsExtensions\": true,\n    \"noEmit\": true\n  },\n  \"$schema\": \"<https://json.schemastore.org/tsconfig>\",\n  \"display\": \"Recommended\"\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 06:49:47",
    "text": "I can't find the right combination to avoid having to set `// @ts-ignore-next-line` in places"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 06:50:08",
    "text": "I just remembered fixes were previously proposed for this, have to look back"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 07:27:34",
    "text": "I'm having an issue with generated types, for some reason it's returning this:\n```// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n// Removing the above comment will disable type generation for this module\n// This file was created by @HubSpot/cms-dev-server, for more information see <https://github.HubSpot.com/cms-react/reference/js-modules.html#module-fields>\nimport { type DefaultValues } from \"@HubSpot/cms-components/fields\";\ntype ContentTabsGridFieldsType = DefaultValues&lt;{}&gt;;\nexport default ContentTabsGridFieldsType;```\ninstead of all of the fields I have in fields.tsx",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-04 07:34:11"
      },
      {
        "time_stamp": "2024-10-01 09:57:11"
      },
      {
        "time_stamp": "2024-10-01 10:18:02"
      },
      {
        "time_stamp": "2024-10-02 02:35:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 07:34:11",
    "edited": {
      "time_stamp": "2024-09-04 07:34:24"
    },
    "text": "does field generation not work in this kind of situation?\n```const Tabs = () => (\n  <RepeatedFieldGroup\n    ...\n  >\n  </RepeatedFieldGroup>\n);\n\nexport const fields = (\n  <ModuleFields>\n    <Tabs />\n  </ModuleFields>\n);```"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-04 14:53:59",
    "text": "^ this seems relatively safe / nothing went wrong"
  }
]
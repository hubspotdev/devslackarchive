[
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-30 07:03:04",
    "text": "Hello Arrigo - thanks for your feedback!\n\nTo answer your question, no, we don't support JS Modules in JS Partials currently.\n\nWould you expand a bit on the specific use case this would be helpful with. Is it a way to group multiple modules in a broader \"building block\"?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-30 07:09:19",
    "edited": {
      "time_stamp": "2023-08-30 07:09:40"
    },
    "text": ":wave: - Hello All :slightly_smiling_face:\n\nQuick update around the `contact` object when running the the dev server and looking at a published page i.e. `<http://mydomain.com.hslocal.net:3000/content-path|mydomain.com.hslocal.net:3000/content-path>` . If you would like to test how that page would work/look given a specific contact you can pass `email` as a parameter ... `<https://mydomain.com.hslocal.net:3000/content-path?email=bh@HubSpot.com>` . This will populate the contact object for testing.\n\nWe've updated the examples docs to reflect this.\n\nHappy Coding :catcoder:"
  },
  {
    "text": "Hi <@UAYBXDG4U>,\n\nYes exactly, the idea is to use partials similarly to how sections work.\n\nThe problem for me is that the section syntax is (in my opinion) too convoluted, it has a lot of nesting and rules based on the DnD system.\n\nWhereas a partial is more of an unopinonated section of code where I can combine multiple modules with some wrapper layout code, and then I can include all the partials in a single HubL template (like a home page template for example).\n\nThat's the reasoning behind it.\n\nI see modules as individual components that can be dropped in a wider layout, I don't think I should make modules that are full screen and include multiple elements (say, a heading, sub-heading, form, and FAQs all in one module) as that goes against my understanding of React's modularity as well as HubSpot's drag and drop system.\n\nThey would look terrible if dropped in a three-column HubSpot grid :slightly_smiling_face:\n\nI also don't necessarily want the marketer to be able to edit the sections themselves but rather the content within the modules only.\n\nSo the content order and styling remain consistent.\n\nCurrently I can drop modules in HubL partials without issue, see attached.\nI'm basically looking for feature parity on the JS side.\n\nI've also tested dropping JS modules in HubL partials and it works.",
    "time_stamp": "2023-08-30 07:32:21"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 08:24:17",
    "edited": {
      "time_stamp": "2023-08-30 08:31:29"
    },
    "text": "Hello all, I have a quick question about the structure for a new project in an existing theme. I saw that all demo projects follow this structure `hello-world` -&gt; `hello-world-project and hello-world-theme.` If I already have the `hello-world-theme` (which is under active development in Design Manager by other devs) do I need to embed this in another `hello-world` folder and then add the project files in the `hello-world-project` folder? Or what would be the best setup in this case?",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-08-30 08:48:36"
      },
      {
        "time_stamp": "2023-08-30 08:49:36"
      },
      {
        "time_stamp": "2023-08-30 08:50:35"
      },
      {
        "time_stamp": "2023-08-30 11:21:37"
      },
      {
        "time_stamp": "2023-08-31 03:51:48"
      },
      {
        "time_stamp": "2023-08-31 06:42:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2023-08-30 08:48:36",
    "text": "Hi <@U02CS2Q38QG>, I was wondering the same thing initially but it's not necessary at all. You could have the project in one repository and the theme in another repository, which is what I'm currently doing right now. Having them both in the same repository simplifies the configuration a bit but ultimately they are two separate things within HubSpot."
  },
  {
    "poster": {
      "poster_name": "Arrigo Lupori",
      "poster_handle": "arrigo.lupori270"
    },
    "time_stamp": "2023-08-30 08:49:36",
    "text": "If you need help with specific details let me know, I've had my fair share of headaches with the documentation :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 08:50:35",
    "text": "Hi Arrigo, thanks! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-30 11:21:37",
    "text": "Arrigo - Any feedback on documentation is greatly welcomed and appreciated. Let us know what you found confusing or did not describe things properly."
  },
  {
    "text": "Any reason why the default `hello-world` project wouldn’t work on local? When I click the HS sprocket and then on “Open Local Dev Server” I get a “This site can’t be reached” error. In the terminal everything seems to work.",
    "time_stamp": "2023-08-30 11:40:50",
    "reply_count": 38,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-08-30 11:42:39"
      },
      {
        "time_stamp": "2023-08-30 11:43:44"
      },
      {
        "time_stamp": "2023-08-30 11:44:48"
      },
      {
        "time_stamp": "2023-08-30 11:47:22"
      },
      {
        "time_stamp": "2023-08-30 11:54:11"
      },
      {
        "time_stamp": "2023-08-30 11:55:23"
      },
      {
        "time_stamp": "2023-08-30 15:49:12"
      },
      {
        "time_stamp": "2023-08-30 15:50:09"
      },
      {
        "time_stamp": "2023-08-30 15:50:26"
      },
      {
        "time_stamp": "2023-08-30 15:51:37"
      },
      {
        "time_stamp": "2023-08-30 15:54:11"
      },
      {
        "time_stamp": "2023-08-30 15:55:07"
      },
      {
        "time_stamp": "2023-08-30 15:56:51"
      },
      {
        "time_stamp": "2023-08-30 15:58:29"
      },
      {
        "time_stamp": "2023-08-30 16:00:08"
      },
      {
        "time_stamp": "2023-08-30 16:06:32"
      },
      {
        "time_stamp": "2023-08-30 16:10:38"
      },
      {
        "time_stamp": "2023-08-30 16:15:38"
      },
      {
        "time_stamp": "2023-08-30 16:17:13"
      },
      {
        "time_stamp": "2023-08-30 16:17:34"
      },
      {
        "time_stamp": "2023-08-30 16:17:52"
      },
      {
        "time_stamp": "2023-08-30 16:23:31"
      },
      {
        "time_stamp": "2023-08-30 16:23:38"
      },
      {
        "time_stamp": "2023-08-30 16:24:19"
      },
      {
        "time_stamp": "2023-08-30 16:26:40"
      },
      {
        "time_stamp": "2023-08-30 16:27:08"
      },
      {
        "time_stamp": "2023-08-30 16:27:28"
      },
      {
        "time_stamp": "2023-08-30 16:28:07"
      },
      {
        "time_stamp": "2023-08-30 16:28:34"
      },
      {
        "time_stamp": "2023-08-30 16:29:10"
      },
      {
        "time_stamp": "2023-08-30 16:29:49"
      },
      {
        "time_stamp": "2023-08-30 16:30:24"
      },
      {
        "time_stamp": "2023-08-30 16:30:25"
      },
      {
        "time_stamp": "2023-08-30 16:31:09"
      },
      {
        "time_stamp": "2023-08-30 16:31:43"
      },
      {
        "time_stamp": "2023-08-30 16:32:36"
      },
      {
        "time_stamp": "2023-08-30 16:33:27"
      },
      {
        "time_stamp": "2023-08-30 16:38:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-30 11:42:39",
    "text": "what is the protocol ... `https` or `http`"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-08-30 11:43:44",
    "text": "if your page is `https` you may need to start the dev server with `--ssl`"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 11:44:48",
    "text": "It’s `https`, okay, I’ll give it a try, thanks!"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 11:47:22",
    "text": "This is the link from the sprocket menu to the open local dev server: `<http://8381902.hs-sites.com.hslocal.net:3000/test-hello-world-app>`"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 11:54:11",
    "text": "that URL also probably needs to adapt to be `https`, could you you try adding the `s` yourself to confirm it works?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 11:55:23",
    "text": "we can update the link to do it automatically, but want to make sure there are no other issues"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 15:49:12",
    "text": "I tried adding the `https` and I get the same error “This site can’t be reached”."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 15:50:09",
    "text": "does <https://localhost:3000> work?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 15:50:26",
    "text": "and/or is there a different URL in the startup output in the terminal for the dev server?"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 15:51:37",
    "text": "localhost doesn’t work either. this is what I have in the terminal:\n\n```Warning: this is a prerelease and requires specific HubSpot account configuration to work\nStarting proxy link server on port 1442\n\nHubSpot CMS dev server hosting: hello-world-project/hello-world-app (at <http://hslocal.net:3000>, hubid=8381902)\n\nProxying request to <https://8381902.hs-sites.com/test-hello-world-app> { previewKey: 'FawfggPR', contentId: '132466151478' }```"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 15:54:11",
    "text": "hmm that output looks like it’s still not starting up in SSL mode. are you using a recent version of `cms-dev-server`? (we should really have the current version in that output string you copied to make this easier :bookmark:)"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 15:55:07",
    "edited": {
      "time_stamp": "2023-08-30 15:55:27"
    },
    "text": "i wonder if maybe you need a `-- --ssl` not just `--ssl` to forward the option down through the `start` NPM script"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 15:56:51",
    "edited": {
      "time_stamp": "2023-08-30 15:56:57"
    },
    "text": "maybe a more direct test would be putting the `--ssl` on this line: <https://github.com/HubSpot/cms-js-building-block-examples/blob/main/hello-world/hello-world-project/hello-world-app/package.json#L18>"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 15:58:29",
    "text": "the `cms-dev-server` is set to ‘latest’ in package.json and i did the npm install earlier today so it should be good.\n\nthe `--ssl` bit didn’t really change the output when I tried it earlier.\n\nI’ll try now the `--ssl` directly in the package as you suggested."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:00:08",
    "text": "if it works the output should include something like\n```(at <https://hslocal.net:3000>, hubid=8381902)```\nwith an `s` in there"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:06:32",
    "text": "it’s not working. i tried with the `--ssl`  in the packages and the output was the same, it wasn’t picking the param.\n\ni tried it in terminal `npm run start -- --ssl` and this was the output:\n\n```npm run start -- --ssl\n\n&gt; start\n&gt; cd hello-world-project/hello-world-app &amp;&amp; yarpm start \"--ssl\"\n\nWarning: this is a prerelease and requires specific HubSpot account configuration to work\nStarting proxy link server on port 1442\n\nHubSpot CMS dev server hosting: hello-world-project/hello-world-app (at <http://hslocal.net:3000>, hubid=8381902)```"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:10:38",
    "text": "hrmm ok thats frustrating, sorry that didn’t work, thinking about other options"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:15:38",
    "edited": {
      "time_stamp": "2023-08-30 16:15:53"
    },
    "text": "is there any additional information on the error underneath the ‘this site can’t be reached’?"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:17:13",
    "edited": {
      "time_stamp": "2023-08-30 16:17:34"
    },
    "text": "also this may seem absurd haha but could you try `npm run start -- -- --ssl`"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:17:34",
    "text": "Just this on the error page:\n`Check if there is a typo in <http://8381902.hs-sites.com.hslocal.net|8381902.hs-sites.com.hslocal.net>.`\n`DNS_PROBE_FINISHED_NXDOMAIN`"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:17:52",
    "text": "sure, one sec :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:23:31",
    "text": "well, it has “https” now, but it’s still the same error"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:23:38",
    "text": "progress!"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:24:19",
    "text": "the `.` at the end of the URL in that error message you sent most recently does seem like it shouldn’t be there…what exactly is the URL in your browser that gives that error?"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:26:40",
    "text": "So, this is the live URL that works fine: <https://8381902.hs-sites.com/test-hello-world-app>\n\nThen when I click on the “Open local dev server” I get this URL: <http://8381902.hs-sites.com.hslocal.net:3000/test-hello-world-app>\n\nand in the terminal I have this URL:  <https://hslocal.net:3000>\n\nBoth these last 2 URLs give the same error."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:27:08",
    "text": "very odd"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:27:28",
    "text": "could you try to load <https://localhost:3000>?"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:28:07",
    "text": "okay, this works :))"
  },
  {
    "text": "",
    "time_stamp": "2023-08-30 16:28:34"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:29:10",
    "text": "so <http://hslocal.net|hslocal.net> is a domain that just redirects to `localhost` - my best guess is that now that we figured out the SSL thing, your machine or ISP has an old resolution for that domain? <http://hslocal.net|hslocal.net> and localhost should be exactly the same"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:29:49",
    "edited": {
      "time_stamp": "2023-08-30 16:29:57"
    },
    "text": "in any case, to unblock you you can replace `<http://hslocal.net|hslocal.net>` in the first URL as well with `localhost` (keeping the `:3000`) and my guess is that it will work :crossed_fingers:"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:30:24",
    "text": "Okay, thank you very much for the support! I really appreciate it!"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:30:25",
    "text": "could be a firewall thing maybe as well? not sure"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:31:09",
    "text": "we ran into a similar thing a month ago in <https://HubSpotdev.slack.com/archives/C04AY1H2204/p1689709480201499|this thread>, we’ll try to find a root cause"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:31:43",
    "text": "let me know if that `localhost` edit doesn’t fix it"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:32:36",
    "text": "it did, I replace it in the original URL and it works fine like this."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-30 16:33:27",
    "text": "great news, thank you for bearing with us! any other local pages you run going forward until we follow up with a fix you should be able to do that same replacement"
  },
  {
    "poster": {
      "poster_name": "George Grigorita",
      "poster_handle": "george.grigorita"
    },
    "time_stamp": "2023-08-30 16:38:34",
    "text": "Following the other thread, I did an `nslookup <http://hslocal.net|hslocal.net>` and it gave this as response:\n\n```Server:\t\t2001:861:2c21:7720:ce00:f1ff:fe38:7cf5\nAddress:\t2001:861:2c21:7720:ce00:f1ff:fe38:7cf5#53\n\nNon-authoritative answer:\n*** Can't find <http://hslocal.net|hslocal.net>: No answer ```\nSo it’s like you said, something on my side doesn’t see the DNS of <http://hslocal.net|hslocal.net>.\n\nI could probably add it in my hosts file and that’s that.\n\nAnyway, thanks again for helping. :raised_hands:"
  }
]
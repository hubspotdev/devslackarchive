[
  {
    "poster": {
      "poster_name": "Benjamin Cai",
      "poster_handle": "benjamin.cai"
    },
    "time_stamp": "2024-04-22 01:41:45",
    "text": "Hi team, just publish to prod, our new page with react-cms :\n```<https://www.singsaver.com.sg/travel-insurance/coverage/sompo?destinations=Thailand&amp;endDate=2024-04-24&amp;noOfAdults=1&amp;noOfChildren=0&amp;sort=recommended.asc&amp;startDate=2024-04-22&amp;travelAsFamily=false&amp;tripType=SINGLE_PLAN&amp;productUid=SG.TI.SMPO.SOMPO-TRAVEL-COVID-19-INSURANCE-ESSENTIAL>```\nit will render with error in the island. But if we clone the page and it will work. Also by adding\n```&amp;hsDebug=true```\nit will work :\n```<https://www.singsaver.com.sg/travel-insurance/coverage/sompo?destinations=Thailand&amp;endDate=2024-04-24&amp;noOfAdults=1&amp;noOfChildren=0&amp;sort=recommended.asc&amp;startDate=2024-04-22&amp;travelAsFamily=false&amp;tripType=SINGLE_PLAN&amp;productUid=SG.TI.SMPO.SOMPO-TRAVEL-COVID-19-INSURANCE-ESSENTIAL&amp;hsDebug=true>```"
  },
  {
    "poster": {
      "poster_name": "Benjamin Cai",
      "poster_handle": "benjamin.cai"
    },
    "time_stamp": "2024-04-22 01:43:00",
    "text": "do you have any ideas?"
  },
  {
    "poster": {
      "poster_name": "Guy Paikowsky",
      "poster_handle": "guypaikowsky"
    },
    "time_stamp": "2024-04-22 03:09:33",
    "text": "I’ve been having the same issue, unfortunately! The only way I can see the projects is through the link I get from the CLI."
  },
  {
    "poster": {
      "poster_name": "Jurrien Strobel",
      "poster_handle": "jstrobel"
    },
    "time_stamp": "2024-04-22 05:18:16",
    "text": "Hi, could someone please share their website in cms-react? I'm curious about the performance."
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-04-22 08:40:02",
    "text": "Is there any HTML output after `&lt;div class=\"content\"&gt;` ?\n\nAny chance another template extending that one already has a header `block` set that is “winning”?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-04-22 08:41:00",
    "text": "Got it, I will pass this on (:crying_cat_face:)"
  },
  {
    "poster": {
      "poster_name": "Colby Schneider",
      "poster_handle": "colbyschneider"
    },
    "time_stamp": "2024-04-22 12:58:17",
    "text": "Did we find a fix for this issue yet? All my new projects are getting stuck in the infinite cloudflare loop and I can't use my local dev server."
  },
  {
    "poster": {
      "poster_name": "Colby Schneider",
      "poster_handle": "colbyschneider"
    },
    "time_stamp": "2024-04-22 13:00:53",
    "text": "When I try using the \"Open Local Dev Server\" on the HubSpot sprocket button, I can see that there are requests being made to check-if-local-dev-server and the response is saying `hasJSBuildingBlocks: false` I have other apps in the same portal that are working just fine."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-04-22 13:08:11",
    "edited": {
      "time_stamp": "2024-04-22 13:09:21"
    },
    "text": "Really enjoying working with React on the CMS so far - HubSpot team have done a fantastic job on this! Getting Typescript working was so easy which is such a huge win. Might be missing this, but maybe a page in the docs on Typescript and the public interfaces/types could help people :slightly_smiling_face:",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-22 13:24:38"
      },
      {
        "time_stamp": "2024-04-22 13:30:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-04-22 13:24:38",
    "text": "Thanks!\n\nAnd good feedback, we don’t have a “oh yeah TypeScript ‘just works’ and you get…” page in the docs. We didn’t want to scare off folx that are not into TypeScript (and we have a _little_ bit of type docs, but <https://github.HubSpot.com/cms-react/field-types/|only for field types>)… but having at least some description that Typescript is supported and what to expect with that would be a good idea."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-04-22 13:30:27",
    "edited": {
      "time_stamp": "2024-04-22 13:37:18"
    },
    "text": "The combination of types and the ability to write tests is the part I really like. Having worked with LWC and Apex on Salesforce, while it's a pretty interesting dev experience, the fact it enforced specific code coverage to deploy was something I was a big fan of. This to me, is a leap forward in being able to write themes and components which are more maintainable (and that i'm not terrified of updating a year later.)\n\nI may have missed it, but does the build/deploy process have a test runner too?\n\nI also did notice those field types and they do help - i've been using the values inside 'default' for the more complex field type props like so:\n\nfields.tsx:\n\n```\ntype Plan = {\n  [...]\n  price: string;\n  link: LinkFieldType['default']; // For more complex field types.\n  [...]\n};\n\nexport interface ModuleFields {\n  plans: Plan[];\n  description: string;\n  heading: string;\n}\n\nconst itemDefaultValues: Plan[] = [\n  {\n    title: 'Plan 1',\n    description: 'More detailed content can go here describing service',\n    price: '$45/m',\n    features: ['feature 1'],\n    link: { url: { type: 'EXTERNAL', href: '#', content_id: 1 } },\n  }\n];\n\n\nexport const fields = (\n  <ModuleFields>\n    <RichTextField\n      label=\"Heading\"\n      name=\"heading\"\n      required\n      default=\"Test this is really cool\"\n    />\n[....]```\nWorks well, as I'm then able to use these in the module:\n\n```export function Component({\n  fieldValues,\n  hublParameters = {},\n}: ModuleProps<ModuleFields>) {\n[...]\n}```\nNot sure if this already exists, but I'm wondering if it's worth exposing the 'default' type attribute into it's own type so it can be as it's own type?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2024-04-22 14:04:47",
    "text": "+1 on this"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-22 15:00:02",
    "text": "is there a way to provide a form in storybook when using the new form cms-component input?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-04-24 13:46:45"
      }
    ]
  }
]
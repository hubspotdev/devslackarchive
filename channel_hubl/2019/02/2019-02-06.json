[
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 02:14:59",
    "text": "Is there a way I can read values in a custom module from outside that module in my HTML template?\n\nsomething like this\n\n```\n{{ module(module_id)|some_boolean_in_my_module }}\n```"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 02:15:55",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-02-06 02:16:27",
    "edited": {
      "time_stamp": "2019-02-06 02:16:31"
    },
    "text": "if you can get the pages content dict, then you can use content.allWidgets though I haven't done this in html templates"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 02:21:55",
    "text": "It's an email, could that work too?"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-02-06 02:24:27",
    "text": "hmm maybe just not sure how you'd get the content"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 02:24:51",
    "text": "I'll look into it, thanks for the tip :+1:"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 02:29:50",
    "text": "just printing `{{ content|pprint }}` gives me a lot of output, time to weed through it for something useful :nerd_face:"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-02-06 02:31:48",
    "text": "yea cool that's how I ended up getting what I want with modules data"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 02:42:04",
    "text": "It doesn't seem to contain the modules defined with the module block syntax e.g.\n```\n{% module_block module \"module_1234\" module_id=5678, overrideable=True, per_widget_wrapper_html='', widget_name='Header Module', wrapping_html='', label='Header Module' %}{% end_module_block %}\n```"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 02:42:12",
    "text": "Unfortunately"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-02-06 02:42:19",
    "text": ":disappointed:"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2019-02-06 02:58:30",
    "text": "It doesn't work... It's very painful because I need to add &lt;amp-analytics&gt; script in template as Google recommand\n\nAny ideas my friends ?\n<@U2H3TT8F2> <@U25PYL3Q8> <@U7SL518D6>"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 03:49:51",
    "text": "I got something, but it's not usable"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 03:49:58",
    "text": "```\n{{ content.allWidgets[4].body.field_types['use_this_module_'] }}\n```"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 03:50:29",
    "text": "this outputs just the string `boolean` instead of the actual value of that boolean :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 03:52:37",
    "text": "It makes sense, since I'm accessing `body.field_types` but there doesn't seem to be a way to access this field's value"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 04:53:05",
    "text": "Apparently the value of `use_this_module_` is there, it only shows up if the user has edited the default value"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 05:05:07",
    "text": "You could generate the entire item with JavaScript. Very much like some tags out there"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 05:05:38",
    "text": "This is likely going to have to get noticed by someone at HubSpot to fix this in the editor"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 05:07:21",
    "text": "Are you using google tag manager on site? That would be easiest to set up probably "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 05:08:14",
    "text": "I believe this tag is supposed to go inside the body after looking at this example"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 05:08:27",
    "text": "<https://developers.google.com/analytics/devguides/collection/amp-analytics/>"
  },
  {
    "text": "",
    "time_stamp": "2019-02-06 05:09:02"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 05:10:24",
    "text": "I believe that is why you are having the problem, you are trying to place something in the head that HS doesn’t recognize as valid. Looks like script in the head and the rest of &lt;amp after the body opens"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2019-02-06 05:34:49",
    "text": "Thanks <@U25PYL3Q8>. I alos try in a module inside a template and it's the same"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2019-02-06 05:35:15",
    "text": "i will try to generate in js"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 05:35:49",
    "text": "\"Ladies &amp; gentlemen, we got him\" :v:\n\n```\n{% set module_id_im_looking_for = 6056115 %}\n{% set my_list = {} %}\n{% for modu in content.allWidgets %}\n  {% if modu.body.module_id == module_id_im_looking_for %}\n    FOUND IT @ {{ loop.index0 }}\n\n    {% set upd = my_list.update({ 'settings_module': content.allWidgets[loop.index0] }) %}\n  {% endif %}\n{% endfor %}\n{{ my_list }}\n```"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2019-02-06 06:13:18",
    "text": "big sh... in an AMP page the template is specific and even if I succeed to add the Tag in my main template it is not recovered by the AMP Template"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 06:13:37",
    "text": "damn"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 06:14:25",
    "text": "looks like this isn't something they have available yet"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 06:14:25",
    "text": "<https://community.HubSpot.com/t5/HubSpot-Ideas/AMP-Utilizing-Google-Analytics-Tag-Manager/idi-p/14773>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 06:14:52",
    "text": "Is there a way to edit the amp template?"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2019-02-06 06:15:15",
    "text": "I don't think so. I didn't find anything :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 06:41:07",
    "text": "There isnt currently but i know HS experimented with that atleast a year and a half ago"
  },
  {
    "poster": {
      "poster_name": "Moadh Agoubi",
      "poster_handle": "moadh"
    },
    "time_stamp": "2019-02-06 08:21:49",
    "text": "did you have this error?  “cannot resolve property ‘XXXXXXX’ in ‘0’”"
  },
  {
    "text": "",
    "time_stamp": "2019-02-06 08:22:23"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-06 08:24:39",
    "text": "It’s harmless, but we’re working on removing that warning"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 08:25:25",
    "text": "must have been a big back-end change lot of warnings like that appeared recently"
  },
  {
    "poster": {
      "poster_name": "Moadh Agoubi",
      "poster_handle": "moadh"
    },
    "time_stamp": "2019-02-06 08:26:17",
    "text": "Ok this does not affect the models that will be released on the market"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-02-06 08:28:56",
    "text": "I got that error too, but I ignored it as it didn't seem to make any difference"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-06 08:29:26",
    "text": "before we were not validating code inside all `if` statements and `for` loops",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-06 08:29:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 08:29:54",
    "text": "well thank you for adding that validation!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 10:08:58",
    "edited": {
      "time_stamp": "2019-02-06 10:11:53"
    },
    "text": "`{{ local_dt }}` doesn’t appear to be the current date time, is this variable only updated every now and again?\n\nWas using this for doing an upcoming events listing but it appears that it’s not updating regularly, so I have an event that ended yesterday, still showing",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-02-06 10:43:34"
      },
      {
        "time_stamp": "2019-02-06 10:44:07"
      },
      {
        "time_stamp": "2019-02-06 10:44:12"
      },
      {
        "time_stamp": "2019-02-06 10:44:24"
      },
      {
        "time_stamp": "2019-02-06 10:44:41"
      },
      {
        "time_stamp": "2019-02-06 10:45:21"
      },
      {
        "time_stamp": "2019-02-06 10:57:37"
      },
      {
        "time_stamp": "2019-02-06 10:59:31"
      },
      {
        "time_stamp": "2019-02-06 10:59:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-06 10:10:31",
    "text": "Hey HS Devs, getting a strange error when using the new link field type in custom modules:"
  },
  {
    "text": "",
    "time_stamp": "2019-02-06 10:10:41"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-06 10:43:34",
    "text": "page is probably cached. We don’t prevent page caching when this is in the page. Perhaps we should"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-06 10:44:07",
    "text": "<@U6TBZ66FN>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 10:44:12",
    "text": "the cachebuster doesn’t break the cache on this so it seems more like the variable itself is cached"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 10:44:24",
    "text": "also other changes I make are being reflected"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-02-06 10:44:41",
    "text": "strange. link?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 10:45:21",
    "text": "I’ll DM you both"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 10:57:37",
    "edited": {
      "time_stamp": "2019-02-06 10:57:57"
    },
    "text": "<@U25PYL3Q8> I think you came up with this ```{% set timenow = ((local_dt|datetimeformat('%Y') - 1970) * 31556926000) + ((local_dt|datetimeformat('%m') - 1) * 2629743000) + ((local_dt|datetimeformat('%d') - 1) * 86400000) %}```  is there something in your formula I have wrong? This was to convert a timestamp like: “2019-02-06 12:45:11” to a format like “1549407600000\" which is used in HubDB"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-02-06 10:59:31",
    "text": "I didn't come up with that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-06 10:59:43",
    "text": "dang.. lol who shared this"
  }
]
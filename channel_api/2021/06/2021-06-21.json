[
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-06-21 01:43:56",
    "edited": {
      "time_stamp": "2021-06-21 01:45:22"
    },
    "text": "Indeed. You get one hapikey per portal - which means you may eventually have more than one app using it. If it get compromised you need to update all apps using the key once you’ve rotated it."
  },
  {
    "poster": {
      "poster_name": "Florent",
      "poster_handle": "florent"
    },
    "time_stamp": "2021-06-21 10:33:28",
    "edited": {
      "time_stamp": "2021-06-21 10:34:11"
    },
    "text": "Hello People, i'm really hurting a wall with the `/cms/v3/hubdb/tables/{table_name}/rows/draft/batch/create` endpoint\nhere is my payload :\n```{\n  \"inputs\": {\n    \"id\": 49171442002,\n    \"path\": \"nos_biens\",\n    \"name\": \"Nos Biens\",\n    \"created_at\": \"2020-03-30T20:39:52.328Z\",\n    \"childTableId\": 5245730,\n    \"values\": {\n      \"agency_id\": \"3\"\n    }\n  }\n}```\nAnd here is the response :\n{\"status\":\"error\",\"message\":\"Invalid input JSON on line 1, column 11: Cannot deserialize instance of `java.util.ArrayList` out of START_OBJECT token\",\"correlationId\":\"3553bf04-d755-4e64-93e4-5a262d486397\"}\n\nDo you have any idea ?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-06-21 10:42:37"
      },
      {
        "time_stamp": "2021-06-21 10:53:42"
      },
      {
        "time_stamp": "2021-06-21 11:05:33"
      },
      {
        "time_stamp": "2021-06-22 13:56:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-06-21 10:42:37",
    "text": "is the date correct -should it not be a unix timestamp in ms?"
  },
  {
    "poster": {
      "poster_name": "Florent",
      "poster_handle": "florent"
    },
    "time_stamp": "2021-06-21 10:53:42",
    "text": "thank you for your answer. I followedd this example here : <https://developers.HubSpot.com/docs/api/cms/hubdb>\nendpoint : Create rows in batch"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-06-21 11:05:33",
    "text": "For the create endpoint i’m not sure you need to submit the ID"
  },
  {
    "poster": {
      "poster_name": "Austin Elwell",
      "poster_handle": "austin.elwell"
    },
    "time_stamp": "2021-06-21 12:40:17",
    "text": "<@U7SL518D6> Is there any way you could link me to an example of what the widgets structure is? In all honesty I don’t need my manual changes to show up (even though I am curious as to why they aren’t), I just need to know how to make a POST request, and none of the documentation I have gone through shows what a widget looks like."
  },
  {
    "text": "Good afternoon mates,\n\nI have a custom object, where I added a \"Numero_SAP\" property and would like to set it to be unique and avoid duplicating records in my object.\n\nAnd when executing I got this error response:\n{\n\"status\": \"error\",\n\"message\": \"Field 'hasUniqueValue' cannot be modified for property\n'number_sap'. \",\n\"correlationId\": \"3b2ed86d-ecc6-4c9f-83e6-eb2c9ab2e88b\",\n\"propertiesErrorCode\": \"ILLEGAL_FIELD_MODIFICATION\"\n}\n\nDo you have any idea, please ?",
    "time_stamp": "2021-06-21 13:37:34",
    "edited": {
      "time_stamp": "2021-06-21 13:44:42"
    },
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-06-21 14:59:14"
      },
      {
        "time_stamp": "2021-06-21 15:00:06"
      },
      {
        "time_stamp": "2021-06-21 17:57:00"
      },
      {
        "time_stamp": "2021-06-21 19:25:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lauren Kennedy",
      "poster_handle": "lauren852"
    },
    "time_stamp": "2021-06-21 14:52:31",
    "text": "hey there - has anyone figured out how to get HubSpot notes to Sync to Salesforce as a Chatter post?\n\nI have created a property in HubSpot to house a new note &amp; sync to Salesforce which would then trigger a new Chatter post via Process Builder. However, I can’t seem to figure out how to copy the new note body from the HubSpot note to the placeholder field to trigger the sync.\n\nThe 255 character limitation for notes syncing to SF from HS is pretty tough.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-06-28 13:56:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2021-06-21 14:59:14",
    "text": "I think you have to create the property with `hasUniqueValue` set to `true` if you want this behavior."
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2021-06-21 15:00:06",
    "text": "I don’t think it allows you to add it after creation. I remember being frustrated by this, in combination with the 90-day “cool off” before property names can be re-used after deletion."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-21 15:03:10",
    "text": "I apologize. I ran a test on my end. It appears when you use DND areas on a page the data is all returned within `layout_sections`\n\n`layout_sections` contains all of the data related to a `dnd_area` The `x` `y` positioning of modules, the `row` and `column` data.\n\nIn the tree of data you’ll find multiple instances of `module_data` that contains the modules in the current row, and their saved data.\n\n\n"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-21 15:03:10",
    "text": "```\"rows\": [\n                                {\n                                    \"0\": {\n                                        \"x\": 0,\n                                        \"w\": 12,\n                                        \"is_container\": false,\n                                        \"is_in_container\": false,\n                                        \"id\": \"dnd_area-module-4\",\n                                        \"name\": \"dnd_area-module-4\",\n                                        \"label\": null,\n                                        \"type\": \"custom_widget\",\n                                        \"section_name\": null,\n                                        \"params\": {\n                                            \"css_class\": \"dnd-module\",\n                                            \"html\": \"&lt;h2&gt;Our cool imission statement Mission&lt;/h2&gt;\\n&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea comm odo consequat. Uom ad minim veniam, quis nostrud exercitation.&lt;/p&gt;\\n&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea comm odo consequat. Uom ad minim veniam, quis nostrud exercitation.&lt;/p&gt;\",\n                                            \"path\": \"@HubSpot/rich_text\",\n                                            \"schema_version\": 2\n                                        },\n                                        \"widgets\": [],\n                                        \"rows\": [],\n                                        \"row_meta_data\": [],\n                                        \"cells\": [],\n                                        \"language_overrides\": {},\n                                        \"root\": false,\n                                        \"row\": false,\n                                        \"cell\": false,\n                                        \"css_class\": \"\",\n                                        \"css_style\": \"\",\n                                        \"css_id\": \"\",\n                                        \"css_id_str\": \"\",\n                                        \"help\": null,\n                                        \"styles\": null,\n                                        \"is_content_overridden\": false,\n                                        \"editable\": false,\n                                        \"order\": null,\n                                        \"module_data\": {\n                                            \"id\": \"dnd_area-module-4\",\n                                            \"name\": \"dnd_area-module-4\",\n                                            \"body\": {\n                                                \"css_class\": \"dnd-module\",\n                                                \"html\": \"&lt;h2&gt;Our cool imission statement Mission&lt;/h2&gt;\\n&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea comm odo consequat. Uom ad minim veniam, quis nostrud exercitation.&lt;/p&gt;\\n&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea comm odo consequat. Uom ad minim veniam, quis nostrud exercitation.&lt;/p&gt;\",\n                                                \"path\": \"@HubSpot/rich_text\",\n                                                \"schema_version\": 2\n                                            },\n                                            \"smartObjects\": null,\n                                            \"bodyAsMap\": {\n                                                \"css_class\": \"dnd-module\",\n                                                \"html\": \"&lt;h2&gt;Our cool imission statement Mission&lt;/h2&gt;\\n&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea comm odo consequat. Uom ad minim veniam, quis nostrud exercitation.&lt;/p&gt;\\n&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea comm odo consequat. Uom ad minim veniam, quis nostrud exercitation.&lt;/p&gt;\",\n                                                \"path\": \"@HubSpot/rich_text\",\n                                                \"schema_version\": 2\n                                            },\n                                            \"type\": \"custom_widget\",\n                                            \"deleted_at\": null,\n                                            \"module_id\": null\n                                        },\n                                        \"merge_in_default_values\": null\n                                    }\n                                }\n                            ],```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-21 15:03:10",
    "text": "There’s an example of a rich text field module.\n\n`html` is the name of the field in the module.\n\n\nif you make changes to the field values and `PUT` it back it will update an existing page. If you `POST` it will attempt to create a page with that layout and those module values.\n\nI was chatting with the internal teams related to this. We know this isn’t an ideal way of working with them via API. DND areas came out after this API existed, and so were added in a non-breaking way. We aim to make it a better experience in a future version of the API (no ETA for that, but it’s a significant amount of work on our end to overhaul it. So it will be a bit)"
  },
  {
    "poster": {
      "poster_name": "Nelson Steven Sanabio Maldonado",
      "poster_handle": "nelson.sanabio"
    },
    "time_stamp": "2021-06-21 17:57:00",
    "text": "Thanks <@U01CFE2DVFT> !!!"
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2021-06-21 19:25:56",
    "text": ":thumbsup:"
  }
]
[
  {
    "text": "Thanks guys yeah I have been using hs watch.\n\n> though you still need to refresh any page to see changes as you make them\nYeah this is the main painpoint for me, no bother I might just make the first (design preview version) site statically in astro or similar as html/css/js or something + a couple of react modules. Then migrate over to HubSpot after markup is done.\n\nOr I'll learn to love the design manager and refresh :sweat_smile: edit: I will try the polling you mentioned <@UCY83QS6Q>\n\nI appreciate your support and quick replies as always guys.\n\n--\n\nSo I got the hang of modules a bit yesterday I think. I appreciate your docs on the dnd sections.\n\nHowever one thing I noticed is my main css is not coming through. (i'm using tailwind) but I'm worried if I \"link css file of output.css\" (I followed the tailwind HubSpot blog) to the module I'll need to do it for every module which is mildly annoying but this is not the main problem the problem is that I am then worried I am essentially including my tailwind css file multiple times for every single module and going to end up with a ton of redundant css.\n\nIs there a better way here?\n\nI also tried importing into theme-overrides (also a bug came up with the vscode plugin it seems convinced it can't resolved the color function an that its missing templates even though they are clearly available)\n\n(see second screenshot)\n\n--\n\n<@UAYBXDG4U> you mentioned when we spoke a few weeks back that you could theoretically put everything into one react module. (but you wouldn't recommend it)\n\nWell I am not planning to do that. but the first three sections of my home page are all good candidates for react components. Should I split this into three modules or put it in one? (three seems to make more sense)\n\nWhich of the field props be passed down to framework modules also? e.g. can I pass down a rich text or date or plain text or image from the content editor?\n\nDo you guys have a typescript definition or interface for is that I can see? If an unserializedable / non-valid data type is on the module will this crash the component or just not be pulled through?\n\n--\n\nLast thing of feedback, is it would be good to include some better explanations of when to use what in this doc.\n\n<https://developers.HubSpot.com/docs/cms/key-concepts>\n\nAs in the starter template it has sections which I think are actually partials which contain multiple modules, in the templates it has the modules but then you can freely remove them inside the editor (I believe this is due to dnd sections and templates in the context of dnd serving as a sort of \"how you might use this example\") , and partials and modules it isn't 100% clear when to use each.\n\nSo essentially when you have the concepts of sections (I know this isn't a thing but its in the boilerplate), templates, pages, modules, dnd sections, and partials.\n\nIt's all a bit overwhelming coming into a new system.\n\nP.s. whilst some of my experience has been a bit painful I love HubSpot and the work you guys are doing and the help you have given in this community :smile: (and so glad the client didn't choose salesforce :rolling_on_the_floor_laughing:)\n\np.p.s\n\nI do recommend you guys see the <https://docs.astro.build/en/tutorial/0-introduction/> and similar tutorials\n\nI think the current get started tutorial you have, relies on a template with a lot of boilerplate. (for example there is like 15 css files or something)\n\nAnd its just too much, it would be much better to start mostly from scratch with a few files, and build in the concepts through a step by step like the astro build a blog. Which ultimately has some similar concepts to what you guys are going towards.\n\nIf throughout the tutorial it built in these concepts like templates/modules/partials/dnd it would be cool, as you would understand each one + the things like the props that go into the hubl tags.",
    "time_stamp": "2024-01-19 02:54:30",
    "edited": {
      "time_stamp": "2024-01-19 04:27:34"
    }
  },
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2024-01-19 06:19:17",
    "text": "Which permission in HubSpot I need to give to someone so they can view the react project deployment and deployment logs and warning?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-01-19 09:09:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-01-19 06:57:04",
    "text": "&gt; Well I am not planning to do that. but the first three sections of my home page are all good candidates for react components. Should I split this into three modules or put it in one? (three seems to make more sense)\nWithout knowing too much more, 3 sounds reasonable as you will have more flexibility in terms of moving them around or re-using them elsewhere."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-01-19 06:58:13",
    "text": "Module fields TS Reference <https://github.HubSpot.com/cms-js-building-block-examples/field-types/>"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-01-19 06:59:24",
    "text": "In the case of JS Building Blocks, all of a given module's field values will be passed as props to the Modules React `Component`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-19 07:10:22",
    "text": "if I am using the FormField prop—how do I actually render the form in react?"
  },
  {
    "poster": {
      "poster_name": "Chiedu Agborh",
      "poster_handle": "chiedu.agborh"
    },
    "time_stamp": "2024-01-19 09:09:50",
    "text": "I found out, I had to get given the super admin, before seeing the dev logs and warnings"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-19 09:10:39",
    "text": "^ I'm going to assume I can't for now and go back to HubL for this. I assume this would only be useful for referencing a form id in a serverless function or something along those lines",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-22 12:03:18"
      },
      {
        "time_stamp": "2024-01-22 12:04:15"
      },
      {
        "time_stamp": "2024-01-22 12:06:03"
      },
      {
        "time_stamp": "2024-01-22 12:06:55"
      },
      {
        "time_stamp": "2024-01-22 12:20:11"
      },
      {
        "time_stamp": "2024-01-22 12:27:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-19 10:18:35",
    "text": "FYI, we published 0.13.11 npm packages (and deployed some internal changes) an update to *fix a XSS vulnerability* with the HTML output of pages using React modules or partials. For pages that have custom 404/500 pages or dynamic pages (i.e. HubDB dynamic page) a malicious actor could craft a URL like `https://&lt;domain&gt;/&lt;404ing path&gt;'alert(\"XSS vuln\")`. And if they shared or put that link in a place that a visitor clicks on it, then the malicious actor could run JavaScript in the context of that page\n\nI’d recommend for anyone with production usage of React modules or partials to do a new build and deploy to get the fix. Even though we’re pretty sure that this only impacted customers using React modules/partials in the context of a 404/500 page or dynamic page (we’re still investigating), rebuilding and deploying your production projects is recommended.\n\nApologies for this. (And thanks again to you that passed on the info!)",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-19 10:31:50"
      },
      {
        "time_stamp": "2024-01-19 11:11:23"
      },
      {
        "time_stamp": "2024-01-19 11:25:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-19 10:31:50",
    "text": "do we need to update any packages to the latest version? or just build and deploy?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-19 11:11:23",
    "edited": {
      "time_stamp": "2024-01-19 11:11:27"
    },
    "text": "I’m 95% sure you can do a build and deploy of your code without changing package.json or doing any npm/yarn commands. I’ll come back and verify."
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-19 11:25:56",
    "text": "Yes, ^ is correct. Only a rebuild &amp; deploy is needed to fix.\n\n(Updating to a new version of `@HubSpot/cms-dev-server` would be needed to see the updated escaping inside the local dev environment… but that is unrelated to fixing deployed stuff)"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2024-01-19 13:01:11",
    "text": "Hey, the <https://developers.HubSpot.com/docs/cms/data/serverless-functions#accessing-serverless-functions|serverless functions docs >reference <https://github.HubSpot.com/cms-js-building-block-examples/?_ga=2.268251598.1356857148.1705606933-566175404.1705606933&amp;_gl=1*1rlf56e*_ga*NTY2MTc1NDA0LjE3MDU2MDY5MzM.*_ga_LXTM6CQ0XK*MTcwNTYyNjA2MC40LjEuMTcwNTYyNjc4OC41Ni4wLjA.|JavaScript building blocks documentation>, but doesn't actually resolve to the correct place. Wondering where those docs are? And also might want to update the link :slightly_smiling_face:",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-19 14:09:25"
      },
      {
        "time_stamp": "2024-01-19 14:09:48"
      },
      {
        "time_stamp": "2024-01-20 08:05:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2024-01-19 14:09:25",
    "text": "maybe someone already got to it, the link seems to work for me"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2024-01-19 14:09:48",
    "edited": {
      "time_stamp": "2024-01-19 14:09:55"
    },
    "text": "can you confirm on your end? and if it’s still not working what URL is being linked"
  }
]
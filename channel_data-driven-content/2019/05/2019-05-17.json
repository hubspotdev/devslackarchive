[
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:33:01",
    "text": "Am I correct in reading this:\n&gt;HubDB Technical Limits: 10 table scans per CMS page defined as a single call to hubdb_table_rows()\n\nas also applying to Child Table scans? (Scenario: Parent table has 12 rows with each referencing different child table. Parent + 9 child tables are scanned, but last 3 child tables are not)",
    "reply_count": 26,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-05-17 13:36:43"
      },
      {
        "time_stamp": "2019-05-17 13:37:29"
      },
      {
        "time_stamp": "2019-05-17 13:52:12"
      },
      {
        "time_stamp": "2019-05-17 13:52:24"
      },
      {
        "time_stamp": "2019-05-17 13:52:56"
      },
      {
        "time_stamp": "2019-05-17 13:56:38"
      },
      {
        "time_stamp": "2019-05-17 13:56:56"
      },
      {
        "time_stamp": "2019-05-17 13:57:23"
      },
      {
        "time_stamp": "2019-05-17 13:57:47"
      },
      {
        "time_stamp": "2019-05-17 13:58:09"
      },
      {
        "time_stamp": "2019-05-17 13:58:40"
      },
      {
        "time_stamp": "2019-05-17 13:58:46"
      },
      {
        "time_stamp": "2019-05-17 13:59:32"
      },
      {
        "time_stamp": "2019-05-17 13:59:39"
      },
      {
        "time_stamp": "2019-05-17 13:59:44"
      },
      {
        "time_stamp": "2019-05-17 14:00:05"
      },
      {
        "time_stamp": "2019-05-17 14:02:12"
      },
      {
        "time_stamp": "2019-05-17 14:19:32"
      },
      {
        "time_stamp": "2019-05-17 14:19:52"
      },
      {
        "time_stamp": "2019-05-17 14:19:57"
      },
      {
        "time_stamp": "2019-05-17 14:20:05"
      },
      {
        "time_stamp": "2019-05-17 14:20:12"
      },
      {
        "time_stamp": "2019-05-17 14:20:13"
      },
      {
        "time_stamp": "2019-05-17 14:20:14"
      },
      {
        "time_stamp": "2019-05-17 14:20:28"
      },
      {
        "time_stamp": "2019-05-17 15:16:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-05-17 13:36:43",
    "text": "it allows to execute the function hubdb_table_rows() ten times"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-05-17 13:37:29",
    "text": "you can use hsDebug=true and view the source code to see how many calls are being made in the page."
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:52:12",
    "text": "so, yes - this is, in fact, the case. bugger"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 13:52:24",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 13:52:56",
    "text": "do you have more than 10 actual hubDBs Dana?"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:56:38",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 13:56:56",
    "text": "oh boy lol"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:57:23",
    "text": "perhaps i am like dennis a bit much in enjoying my fragmentation...."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 13:57:47",
    "text": "I have a possible solution for ya to work around this limit, but it’s going to mean most if not all of your code isn’t applicable anymore…"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:58:09",
    "text": "I'm looking into a possible API solution for it."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 13:58:40",
    "text": "<https://docs.google.com/document/d/e/2PACX-1vTuu12oFF4bQY1zVD2-WKFuM2dEDN81-fZRV1tGaCL5Z_OcjC-B6O3mHXR6chaq25BU1D2FuvKIjc49/pub>"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:58:46",
    "text": "I think I'm heading in a general direction. It only applies to the route_level == 0 page"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:59:32",
    "text": ":smile: which i haven't built out"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 13:59:39",
    "text": "soooo no code to destroy!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 13:59:44",
    "text": "woo!"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 14:00:05",
    "text": ":partyparrot:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 14:02:12",
    "text": "yea, one of the key things to know is simply you can only make 10 rows calls, meaning a max of 10 hubDBs can be used.\n\nIf you are using say 5 hubDBs but making 10 Calls, that means you could actually be doing this more efficiently by parsing the data instead of doing another call for it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-17 14:19:32",
    "text": "good to see this before i blew things up"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-17 14:19:52",
    "text": "i like separating everything!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 14:19:57",
    "text": "haha"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-17 14:20:05",
    "text": "i can only focus on a couple words"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-17 14:20:12",
    "text": "otherwise, i get overwhelmed"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-17 14:20:13",
    "text": "“I was just trying to build a graph database on HubSpot….”"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-17 14:20:14",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-17 14:20:28",
    "text": "ha!"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-17 15:16:53",
    "text": ":slightly_smiling_face:"
  }
]
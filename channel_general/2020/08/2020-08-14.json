[
  {
    "poster": {
      "poster_name": "Tracey Rickwood",
      "poster_handle": "tracey.rickwood"
    },
    "time_stamp": "2020-08-14 02:11:40",
    "text": "hi all. I have a menu related challenge.\nI have two separate menus. menu id=\"{{ <http://module.menu|module.menu> }}\" and menu id=\"{{ module.top_menu }}\". They need to stay as separate menus as one is a header menu and one is a permanent burger menu. However, here is my issue. I need to have a copy of menu id=\"{{ module.top_menu }}\" sitting inside a span in the menu id=\"{{ <http://module.menu|module.menu> }}\" so that i can style it so at a certain viewport size the header menu disappears and this one is seen instead. ie, they both appear in the burger menu. Am i making sense? So kind of like:\n\n{% if name == 'header-menu' %}\n\t&lt;div class=\"atmc-header_menu {% if module.text_white %}atmc-header-white{% endif %}\"&gt;\n\t\t{% menu id=\"{{ <http://module.menu|module.menu>, module.top_menu }}\", no_wrapper=True %}\n\t&lt;/div&gt;\n{% endif %}\n\nBut so it actually works. Any ideas?"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2020-08-14 07:21:47",
    "text": "Eeesh... HubSpot could definitely give us a delayed chat option _cough cough_"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2020-08-14 08:00:34",
    "text": "#truth"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-08-14 08:21:43",
    "text": "Is there a way to make a cloned copy of a blog and all of its’ posts within HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Tilly",
      "poster_handle": "njbarnett"
    },
    "time_stamp": "2020-08-14 08:52:52",
    "text": "The team is actively looking into this one, stay tuned :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Gareth Daunton",
      "poster_handle": "gdaunton"
    },
    "time_stamp": "2020-08-14 09:02:08",
    "edited": {
      "time_stamp": "2020-08-14 09:04:25"
    },
    "text": ":wave: hello everyone! In the vain of hiding the chat widget from lighthouse, would you use an option that would optimize the chat widget to load with SEO in mind over setting a static wait time? The idea is we’d do the heavy lifting to make sure the widget doesn’t show up in lighthouse, but that would mean that the triggers we use to load the widget could change."
  },
  {
    "poster": {
      "poster_name": "Gareth Daunton",
      "poster_handle": "gdaunton"
    },
    "time_stamp": "2020-08-14 09:09:46",
    "edited": {
      "time_stamp": "2020-08-14 09:12:18"
    },
    "text": "To further clarify, this wouldn’t be a replacement for a static wait time. Instead it’d be an option meant to ensure the widget shows up as soon as possible while still not being counted in lighthouse"
  },
  {
    "poster": {
      "poster_name": "Ashleigh Gvero",
      "poster_handle": "agvero"
    },
    "time_stamp": "2020-08-14 16:15:13",
    "text": "so I am creating a hubdb to parse the data via the hubdb json api and i am wondering what the real difference is between making a field in the db a url data type vs text data type. They seem to be the same when I am looking at the json api, like in the wysiwyg the person entering content can choose options like making a url link external or select a pick list of internal pages and also they can choose what ever text for the link not just have it show the actual url. Is that something that the hubdb datatype can do or not?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-08-14 16:16:07",
    "text": "No."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-08-14 16:16:23",
    "text": "There is no difference"
  }
]
[
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2020-07-16 04:06:50",
    "edited": {
      "time_stamp": "2020-07-16 04:27:57"
    },
    "text": "Hey guys, I was wondering whether it's only currently possible to pull a video from HubDB using the `{% video_player %}` widget? The documentation is unclear, well actually - it doesn't seem to exist, unless I've completely missed it :sweat_smile: The closest thing I could find was, <https://designers.HubSpot.com/how-to-add-videos-to-dynamic-pages-in-hubdb|this> article which shows how to do it for dynamic pages in HubDB. Is there a docs page that goes over each column type and how to pull that data from HubDB or, is it a matter of just pulling back the object and working it out ourselves?\n\nTL;DR - is there a way to pull the video url from a HubDB _video_ column type, the same way you can get an image url from a HubDB row?\nAlso, are there any plans to just add a _file_ column type, that acts the same way as the custom module field with the same name?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-16 06:47:56"
      },
      {
        "time_stamp": "2020-07-16 06:48:18"
      },
      {
        "time_stamp": "2020-07-16 06:51:08"
      },
      {
        "time_stamp": "2020-07-16 06:53:47"
      },
      {
        "time_stamp": "2020-07-16 06:55:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-16 06:47:56",
    "text": "Right now we send back only video player id and u need to use `video_player` tag.."
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-16 06:48:18",
    "text": "Can you describe more about the use case for `file` column type?"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2020-07-16 06:51:08",
    "edited": {
      "time_stamp": "2020-07-16 06:51:49"
    },
    "text": "Sure - in the same vein as if you were using the file field within a custom module, i.e. for a video, pdf, image,... etc, obviously with HubDB we have, the image type so, less useful for that use case but, for videos in particular - having the ability to pull back a video's _file manager URL_ for custom `&lt;video&gt;` tag creation would be super useful. Right now the only workaround I can find (to not using the somewhat clunky, `video_player` widget) is to just use a URL field and link to the video file within the file manager though, this isn't optimal, especially for client-use."
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-16 06:53:47",
    "text": "ok i see your case now. Let me file an issue and track that."
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2020-07-16 06:55:18",
    "text": "Thanks Gobi, appreciate it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-07-16 10:41:51",
    "text": ""
  },
  {
    "text": "Hi, I hope this a relatively simple one - I'm attempting to group HubDB rows by month:\n\n```<ul>\n{% for group in table|groupby('release_date') %}\n    <li>{{ group.grouperObject|datetimeformat('%B') }}\n      <ul>\n        {% for content in group.list %}\n          <li>{{ content.name }}</li>\n        {% endfor %}\n      </ul>\n    </li>\n{% endfor %}\n</ul>```\nHere's a basic use case but it's generating a new month list item for every item that I want to be grouped within it, hope that makes sense. I'm trying to get all content.names that have a release_date of june 2020 to be grouped within a single June, july 2020 to be grouped within a single july etc. Any pointers would be much appreciated, thank you!",
    "time_stamp": "2020-07-16 15:46:50",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-20 01:48:40"
      },
      {
        "time_stamp": "2020-07-20 02:30:37"
      },
      {
        "time_stamp": "2020-07-20 07:22:48"
      },
      {
        "time_stamp": "2020-07-20 07:26:31"
      },
      {
        "time_stamp": "2020-07-20 07:37:51"
      },
      {
        "time_stamp": "2020-07-20 07:38:41"
      },
      {
        "time_stamp": "2020-07-20 07:39:45"
      }
    ]
  }
]
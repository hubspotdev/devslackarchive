[
  {
    "poster": {
      "poster_name": "Rahmona Henry",
      "poster_handle": "rhenry"
    },
    "time_stamp": "2020-06-23 02:55:34",
    "text": "Hi <@U012W4YEUTX> thank you for letting us know about this. We will work on getting this updated very shortly."
  },
  {
    "poster": {
      "poster_name": "Shani",
      "poster_handle": "hsdeveloper6"
    },
    "time_stamp": "2020-06-23 03:14:09",
    "text": "No endpoint available for creating a new quote in HS CRM? <@U2H3TT8F2> <@U7SL518D6>"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2020-06-23 03:35:39",
    "text": "<@U011UH5NZM4> no for creating and updating for now, its in coming soon - <https://developers.HubSpot.com/docs/api/crm/quotes>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-06-23 03:36:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Shani",
      "poster_handle": "hsdeveloper6"
    },
    "time_stamp": "2020-06-23 03:36:38",
    "text": "Thanks <@UCH1L597V>"
  },
  {
    "poster": {
      "poster_name": "Chris Lukes",
      "poster_handle": "clukes"
    },
    "time_stamp": "2020-06-23 06:53:09",
    "text": "*I feel like this \"Update an existing form\" API Documentation is misleading, and possibly incorrect.*  I had a headache come up yesterday from some unexpected results of an API call, and _wondering if I am missing anything here_, or if the documentation should perhaps be clarified: <https://legacydocs.HubSpot.com/docs/methods/forms/v2/update_form>\n\n• In this instance, I was not trying to update the _structure_ of the forms (i.e., form fields, etc.) so much as the form meta-data, such as name, containing folder (parentId) etc.\n• *The documentation notes that the Form Fields are an _optional_ parameter* -- while it warns that _if you specify_ any form fields they will replace any existing fields, it doesn't say that you must re-iterate existing form fields in this parameter in order to preserve them\n• \"Form Data to Update\" is noted among required parameters -- the example JSON of course provides an example where Form Fields _are_ specified, but there is no note of a \"minimum template\" of parameters to include in the JSON body (as is defined in the documentation for some API calls)\nIn my recent example, I wanted only to update the names of existing forms, so I only included one parameter in the JSON body:\n```PUT <https://api.hubapi.com/forms/v2/forms/[FORM_GUID]?hapikey=[HAPIKEY]>```\nJSON request body:\n```{\n  \"name\": \"[updated form name]\"\n}```\nThis worked in terms of updating the names of the forms (200 response code), *but it also removed all form fields from the forms!*  This was not expected, as I had opted to _exclude_ the \"optional\" Form Fields parameters (\"formFieldGroups\").  This required a bit of urgent work to revert some of the live website forms to their former state.\n\n*Did I miss something here?  Is this API call working as expected?*  (If so, is it working as _documented_?...I'm thinking no to this last question...)",
    "reply_count": 13,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2020-06-23 06:56:02"
      },
      {
        "time_stamp": "2020-06-23 07:27:17"
      },
      {
        "time_stamp": "2020-06-23 07:29:36"
      },
      {
        "time_stamp": "2020-06-23 07:30:18"
      },
      {
        "time_stamp": "2020-06-23 07:41:22"
      },
      {
        "time_stamp": "2020-06-23 08:25:20"
      },
      {
        "time_stamp": "2020-06-23 08:27:05"
      },
      {
        "time_stamp": "2020-06-23 08:30:52"
      },
      {
        "time_stamp": "2020-06-23 09:55:27"
      },
      {
        "time_stamp": "2020-06-23 10:50:23"
      },
      {
        "time_stamp": "2020-11-04 01:40:14"
      },
      {
        "time_stamp": "2020-11-10 10:59:14"
      },
      {
        "time_stamp": "2020-11-10 11:01:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chris Lukes",
      "poster_handle": "clukes"
    },
    "time_stamp": "2020-06-23 06:56:02",
    "text": "just noticing the link I provided is now showing as \"*legacy*<http://docs.HubSpot.com|docs.HubSpot.com>\" -- I did find this documentation that notes that the Forms API is in development, but it still links back to the documentation I was reviewing as the \"latest stable version\": <https://developers.HubSpot.com/docs/api/marketing/forms>"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-06-23 07:27:17",
    "edited": {
      "time_stamp": "2020-06-23 07:28:38"
    },
    "text": "<@U7SL518D6> I think this makes sense, a pretty serious side effect if i understand correctly!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-23 07:29:36",
    "text": "When it comes to API documentation <http://legacydocs.HubSpot.com|legacydocs.HubSpot.com> may still be the source of truth for some APIs. We are still working on upgraded versions of many of our APIs, which will live on the new site."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-23 07:30:18",
    "text": "regarding your specific issue 1 moment reviewing. I may not have the answer for you right away."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-23 07:41:22",
    "text": "Checking into this, the HTTP method in the documentation for this endpoint is a `PUT` which would explain the fields being wiped. Though that would mean we need to change the documentation around those fields."
  },
  {
    "poster": {
      "poster_name": "Chris Lukes",
      "poster_handle": "clukes"
    },
    "time_stamp": "2020-06-23 08:25:20",
    "text": "Thanks <@U7SL518D6> It does seem like a pretty bad error to note that the FormFields are optional, based on what youare saying"
  },
  {
    "text": "Would the same call potentially work as a POST?  I'm noticing the article shows \"PUT\" but the slack \"preview\" of the article is showing \"POST\" which makes me wonder if this has changed at any point:",
    "time_stamp": "2020-06-23 08:27:05"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-23 08:30:52",
    "text": "That may indeed have come from an older version of the page. I am not advocating you use POST instead. I think POST would actually <https://legacydocs.HubSpot.com/docs/methods/forms/v2/create_form|create a new form>"
  },
  {
    "poster": {
      "poster_name": "Helena Pilih",
      "poster_handle": "helena"
    },
    "time_stamp": "2020-06-23 08:36:53",
    "text": "Is there a timeline for when the new APIs will go live? I can see that it currently says they are in developer preview: <https://developers.HubSpot.com/docs/api/crm/understanding-the-crm>"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-06-23 09:55:27",
    "text": "I agree that the documentation needs to be improved around what will happen if you leave out values. Would adding a warning like this help?\n```If your form currently has fields and you do not include the form fields parameter, those fields will be wiped out.  Any parameters left out of the PUT body will be overwritten to their default state```\nI’ll also let the team know that you are looking for a PATCH version of this endpoint"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2020-06-23 10:09:36",
    "edited": {
      "time_stamp": "2020-06-23 10:11:13"
    },
    "text": "Thanks! good to know\nThen we will be moving foward to integrations :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-06-23 10:47:06",
    "text": "Thanks for the assist, also, is there a better place to report these? I find a decent number because I am developing some hairy complex stuff and some of these APIs are relatively recent releases."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-06-23 10:50:23",
    "text": "Yeah... `PUT` is known traditionally in everybody's API for overwriting an object, the weird part here is just that the documentation did not say this... offering `PATCH` is the real solution, and the workaround is `GET`, modify client side, `PUT`, while being mindful that has race conditions."
  },
  {
    "poster": {
      "poster_name": "Derek Shelby Jones",
      "poster_handle": "whatadayderek"
    },
    "time_stamp": "2020-06-23 11:22:08",
    "text": "i also suddenly started having issues with the API today. I am receiving &lt;Response [400]&gt; Bad Request.",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-06-23 12:16:16"
      },
      {
        "time_stamp": "2020-06-23 12:26:23"
      },
      {
        "time_stamp": "2020-06-23 12:27:03"
      },
      {
        "time_stamp": "2020-06-23 12:27:05"
      },
      {
        "time_stamp": "2020-06-23 12:27:48"
      },
      {
        "time_stamp": "2020-06-23 12:27:59"
      },
      {
        "time_stamp": "2020-06-23 12:28:38"
      },
      {
        "time_stamp": "2020-06-23 12:30:40"
      },
      {
        "time_stamp": "2020-06-23 12:31:58"
      },
      {
        "time_stamp": "2020-06-23 12:35:19"
      },
      {
        "time_stamp": "2020-06-23 12:37:37"
      },
      {
        "time_stamp": "2020-06-23 13:58:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rahmona Henry",
      "poster_handle": "rhenry"
    },
    "time_stamp": "2020-06-23 11:44:41",
    "text": "Hi Matthew, the best place to report potential bugs is through the HubSpot account you are working in. You can open a support ticket directly from an account (the web ticket option is really easy and quick) and a support rep will assist you form there. If you don't have access to the support options the second best place is the to post on the Community. Hope this helps! Any questions please just let me know :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-06-23 12:16:16",
    "edited": {
      "time_stamp": "2020-06-23 12:16:26"
    },
    "text": "can you provide some more detail please?"
  },
  {
    "poster": {
      "poster_name": "Derek Shelby Jones",
      "poster_handle": "whatadayderek"
    },
    "time_stamp": "2020-06-23 12:26:23",
    "text": "sure, ive been using a python program to post rows to my hubdb table. i have changed nothing on my end on the program. but when running the program today, i started receiving the 400 response."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-06-23 12:27:03",
    "text": "can you send a snippet of the code which is making the request - do you have a proxy inbetween?"
  },
  {
    "poster": {
      "poster_name": "Derek Shelby Jones",
      "poster_handle": "whatadayderek"
    },
    "time_stamp": "2020-06-23 12:27:05",
    "text": "i have been trying to trouble shoot. i even removed the existing content from the table to see if that might have a fix.  but nothing has worked"
  },
  {
    "poster": {
      "poster_name": "Derek Shelby Jones",
      "poster_handle": "whatadayderek"
    },
    "time_stamp": "2020-06-23 12:27:48",
    "text": "{\"status\":\"error\",\"message\":\"error when creating datatable row {id=31198464311, createdAt=1592936690583,"
  },
  {
    "poster": {
      "poster_name": "Derek Shelby Jones",
      "poster_handle": "whatadayderek"
    },
    "time_stamp": "2020-06-23 12:27:59",
    "text": "this is the error message on the api side from HubSpot"
  },
  {
    "poster": {
      "poster_name": "Derek Shelby Jones",
      "poster_handle": "whatadayderek"
    },
    "time_stamp": "2020-06-23 12:28:38",
    "text": "json_data = json.dumps(data)\n    r = <http://requests.post|requests.post>(api_url, headers=headers, data=json_data)\n    print(data['name'], r.status_code, r, r.reason)"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-06-23 12:30:40",
    "text": "going to need json_data to see what it is you’re sending otherwise it’d just be a guess :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Derek Shelby Jones",
      "poster_handle": "whatadayderek"
    },
    "time_stamp": "2020-06-23 12:31:58",
    "text": "yeah one sec"
  },
  {
    "text": "",
    "time_stamp": "2020-06-23 12:35:19"
  },
  {
    "text": "actually here is an updated version",
    "time_stamp": "2020-06-23 12:37:37"
  },
  {
    "poster": {
      "poster_name": "Taylor C",
      "poster_handle": "taylorfclark"
    },
    "time_stamp": "2020-06-23 13:37:54",
    "text": "I noticed the GET /me API is documented in the legacy docs. does that mean it will be sunset sometime in the future once the v3 APIs are complete or will this endpoint stay in place? <https://legacydocs.HubSpot.com/docs/methods/get-account-details>"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-06-23 13:58:26",
    "text": "To close out this convo, he changed the column type but did not modify the input to reflect the new column type.. After modifying the input, it works now."
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2020-06-23 15:29:59",
    "text": "I want to display <https://knowledge.HubSpot.com/cos-general/how-to-use-personalization-with-your-content|Personalized content> to a website visitor whose contact info is stored in the CRM; let's call her Jane. But instead of Personalizing the website content based on Jane's contact record data - I want to show Jane: Jack's contact info (who is also stored in the CRM). Is this doable without writing a server-side script and hitting the contacts API? My current solution is to store Jacks HubSpot user ID in a custom property on Jane's record then query the Contacts API to render Jacks info on the site for Jane - but I'd much rather do this without writing server side code if it's possible in the CMS - thanks!"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-06-23 17:19:59",
    "text": "I do have support access, I'll use that for it next time."
  }
]
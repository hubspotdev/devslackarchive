[
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:20:10",
    "text": "I've got this\n\n```&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" /&gt;\n    &lt;title&gt;Error 404 Not Found&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;h2&gt;HTTP ERROR 404&lt;/h2&gt;\n    &lt;p&gt;Resource not found&lt;/p&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;```\non the body"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:20:31",
    "text": "I'm wondering if the url of the endpoint does really exists"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2024-09-25 01:24:41",
    "text": "Agree with <@U046C9LKJP8> - users have 2 IDs.\nIf you’re trying to have information about users as OWNERS of a record, it’s a different endpoint than if you’re looking at a user"
  },
  {
    "text": "maybe... but I don't think so. The user I'm looking for, actually I can see it here, in the Users and Team section",
    "time_stamp": "2024-09-25 01:24:53"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2024-09-25 01:25:22",
    "text": "(yes, sorry, I misread your message - deleted my first answer)"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:25:43",
    "text": "when I click on it... I can see the id that I use on my request on the URL"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:32:09",
    "text": "do you know where can I see these two Ids you're talking about ?"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2024-09-25 01:32:25",
    "text": "Yes, I’m doing it right now"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:32:41",
    "text": "thanks"
  },
  {
    "text": "Same issue here :\nI go on my user record, I have a user ID in the URL, trying your endpoint and same 404 as you have\nBUT\nIf I search users based on their email I have another ID :",
    "time_stamp": "2024-09-25 01:33:47"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2024-09-25 01:34:39",
    "text": "As you can see : `id` vs `hs_internal_user_id`"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2024-09-25 01:34:59",
    "text": "The `hs_internal_user_id` is the one I have in the URL"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:35:04",
    "text": "so when you use the other ID on  <https://api.hubapi.com/crm/v3/objects/users/userId> it works ?"
  },
  {
    "text": "Yes !",
    "time_stamp": "2024-09-25 01:35:37"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:36:11",
    "text": "I see."
  },
  {
    "poster": {
      "poster_name": "Arno Van de Weyer",
      "poster_handle": "arno.vandeweyer"
    },
    "time_stamp": "2024-09-25 01:37:15",
    "text": "Yes! I literally got to my pc now, there are different ID's for the User Object, and the actual association towards an Owner field."
  },
  {
    "text": "So, instead of using the GET endpoint, you should use the POST endpoint with filter based on the internal user ID :",
    "time_stamp": "2024-09-25 01:37:30"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:37:58",
    "text": "ohhh"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:38:10",
    "text": "not that obvious ^^"
  },
  {
    "poster": {
      "poster_name": "Joan Ortega",
      "poster_handle": "joan.ortega"
    },
    "time_stamp": "2024-09-25 01:38:32",
    "text": "but really thanks for the explanations :heart: I'll try that"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2024-09-25 01:42:38",
    "edited": {
      "time_stamp": "2024-09-25 01:42:45"
    },
    "text": "not obvious at all indeed"
  },
  {
    "poster": {
      "poster_name": "Arno Van de Weyer",
      "poster_handle": "arno.vandeweyer"
    },
    "time_stamp": "2024-09-25 01:42:46",
    "text": "Good job <@U06K19BGMNE> :clap:"
  },
  {
    "poster": {
      "poster_name": "Muhammad Ammar",
      "poster_handle": "malik.ammar"
    },
    "time_stamp": "2024-09-25 02:24:25",
    "text": "Hello,\nplease let me know where do i get these 4 functions . i wanted to implement these functions on my cti app that is connected with HubSpot\n• Screen pop\n• click to dial\n• no match, multimatch and single match\n"
  },
  {
    "poster": {
      "poster_name": "Shahzad Hussain",
      "poster_handle": "shahzad919"
    },
    "time_stamp": "2024-09-25 05:33:58",
    "text": "Hi All, \n\nI am using cart api when i push data i got success response but this cart is not showing any details in cart list. It always showing empty. \n\nCan you please send me example payload which have cart items,user email and status property \n\n\nThanks in advance"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-25 07:26:01",
    "edited": {
      "time_stamp": "2024-09-25 07:27:32"
    },
    "text": "Can anyone confirm that this status page is up to date / accurate? - I would expect to see more chatter here -> <https://status.HubSpot.com/>",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-25 07:29:39"
      },
      {
        "time_stamp": "2024-09-25 07:30:45"
      },
      {
        "time_stamp": "2024-09-25 07:45:08"
      },
      {
        "time_stamp": "2024-09-25 09:41:54"
      }
    ]
  },
  {
    "text": "Now I am starting to see this banner in-app",
    "time_stamp": "2024-09-25 07:29:39"
  },
  {
    "poster": {
      "poster_name": "Aviv Kasuto",
      "poster_handle": "aviv211"
    },
    "time_stamp": "2024-09-25 07:30:45",
    "text": "Yes, API 5xx errors in the last 4 hours"
  },
  {
    "poster": {
      "poster_name": "Ace Hedger",
      "poster_handle": "ace"
    },
    "time_stamp": "2024-09-25 07:43:07",
    "text": "There is not. They are an engagement and cannot have custom properties."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-25 07:45:08",
    "text": "Oh boy! Maybe \"breeze\" has become self-aware"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2024-09-25 08:33:57",
    "edited": {
      "time_stamp": "2024-09-25 08:38:50"
    },
    "text": ":wave: Hello all. :sprocket: HubSpot Product Manager here of the Conversations and Custom Channels APIs. We're getting ready to bring the Conversations API from Public Beta to Live and this community's feedback has shown us that an area of opportunity is the current GET threads endpoint.\n\nAs far as I can tell, there are at least two use cases for pulling chats/emails/WhatsApp/all-the-messages out of HubSpot\n• export for archive or analysis in some BI or AI tool\n• powering your own inbox-like user interface, where you want to display messages, grouped into conversations, threaded together in some order (perhaps the same order that HubSpot Inbox does)\nWhich correspondingly tends towards wanting to extract data in\n• more of a bulk way - you want larger volumes of records and have looser criteria about which ones\n• or a more search-like way, where you only want newer threads, or certain threads (per ticket, per inbox, per contact), sorted some way\nThe current endpoint supports both of these, and perhaps not very well (e.g. for search only some prorperties work in limited combination with other properties). We're contemplating paths forward here, potentially new/different endpoints for these use cases, and possssibly some breaking changes to get there. Help us guide the future of this API!\n\nWhat are your use cases for getting threads/conversations, and what challenges have you faced in doing so? :thread:",
    "reply_count": 49,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2024-09-25 08:36:35"
      },
      {
        "time_stamp": "2024-09-25 08:41:14"
      },
      {
        "time_stamp": "2024-09-25 08:44:26"
      },
      {
        "time_stamp": "2024-09-25 08:46:10"
      },
      {
        "time_stamp": "2024-09-25 08:47:21"
      },
      {
        "time_stamp": "2024-09-25 08:52:01"
      },
      {
        "time_stamp": "2024-09-25 08:57:01"
      },
      {
        "time_stamp": "2024-09-25 09:07:43"
      },
      {
        "time_stamp": "2024-09-25 09:08:31"
      },
      {
        "time_stamp": "2024-09-25 09:11:19"
      },
      {
        "time_stamp": "2024-09-25 09:11:24"
      },
      {
        "time_stamp": "2024-09-25 09:12:29"
      },
      {
        "time_stamp": "2024-09-25 09:12:46"
      },
      {
        "time_stamp": "2024-09-25 09:12:59"
      },
      {
        "time_stamp": "2024-09-25 09:13:10"
      },
      {
        "time_stamp": "2024-09-25 09:13:17"
      },
      {
        "time_stamp": "2024-09-25 09:13:32"
      },
      {
        "time_stamp": "2024-09-25 09:14:07"
      },
      {
        "time_stamp": "2024-09-25 09:14:20"
      },
      {
        "time_stamp": "2024-09-25 09:14:35"
      },
      {
        "time_stamp": "2024-09-25 09:14:41"
      },
      {
        "time_stamp": "2024-09-25 09:15:16"
      },
      {
        "time_stamp": "2024-09-25 09:15:43"
      },
      {
        "time_stamp": "2024-09-25 09:16:31"
      },
      {
        "time_stamp": "2024-09-25 09:17:13"
      },
      {
        "time_stamp": "2024-09-25 09:17:20"
      },
      {
        "time_stamp": "2024-09-25 09:17:33"
      },
      {
        "time_stamp": "2024-09-25 09:19:35"
      },
      {
        "time_stamp": "2024-09-25 09:23:48"
      },
      {
        "time_stamp": "2024-09-25 12:04:44"
      },
      {
        "time_stamp": "2024-09-25 12:05:07"
      },
      {
        "time_stamp": "2024-09-25 12:06:12"
      },
      {
        "time_stamp": "2024-09-25 12:06:38"
      },
      {
        "time_stamp": "2024-09-25 12:11:04"
      },
      {
        "time_stamp": "2024-09-25 12:12:54"
      },
      {
        "time_stamp": "2024-09-25 12:14:08"
      },
      {
        "time_stamp": "2024-09-25 12:19:37"
      },
      {
        "time_stamp": "2024-09-25 12:21:23"
      },
      {
        "time_stamp": "2024-09-25 12:24:17"
      },
      {
        "time_stamp": "2024-09-25 12:26:35"
      },
      {
        "time_stamp": "2024-09-25 12:33:18"
      },
      {
        "time_stamp": "2024-09-26 06:19:24"
      },
      {
        "time_stamp": "2024-09-26 06:31:29"
      },
      {
        "time_stamp": "2024-09-26 06:32:50"
      },
      {
        "time_stamp": "2024-09-26 06:33:02"
      },
      {
        "time_stamp": "2024-09-26 06:33:26"
      },
      {
        "time_stamp": "2024-12-05 09:46:15"
      },
      {
        "time_stamp": "2024-12-05 10:15:30"
      },
      {
        "time_stamp": "2024-12-09 09:14:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2024-09-25 08:36:35",
    "text": "tagging people I know have started previous discussions on this <@U01QVR44MEY> <@U07CCUZJNSY> <@U05CSV0TUEA> <@U06PEFV2KB2> <@U010ELDSS1W>"
  },
  {
    "poster": {
      "poster_name": "John Congdon",
      "poster_handle": "jcongdon"
    },
    "time_stamp": "2024-09-25 08:39:36",
    "text": "Question about the Recordings and Transcripts API:\n\nI am implementing due to the sunsetting of the recording_url in the older call engagement api.\n• I have implemented the newer Call API and have that posting, \n• I am hitting the association API to connect contacts to calls.  \n• I am hitting the Recording Ready endpoint just fine. \n• When I load a contact now, I can see the Recording playback bar\n    ◦ Clicking on play, I can see the API hit to my back end server\n    ◦ Nothing plays on HubSpot\nIf I hit the same authenticated URL in my browser, I download the audio just fine.\n\nAny ideas where I should look next?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-09-25 09:58:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2024-09-25 08:41:14",
    "text": "cc <@U07L87JHRHB>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 08:44:26",
    "text": "Here's my use case:\nRetrieving only specific threads for a ticket for any particular actor.\nReason:\nI have a company that creates several threads for each ticket. One is usually the initial customer request, the second one is with another internal team, and the third is with a vendor. Our customer portal needs to show a chat for the customer to interact with, but they should only be able to see their thread and not the other two. The current approach involves pulling all three threads and parsing through them until I find the one with an actor from the same domain as the customer viewing the portal."
  },
  {
    "poster": {
      "poster_name": "Ken Fisher",
      "poster_handle": "wd"
    },
    "time_stamp": "2024-09-25 08:46:10",
    "text": "Use case: retrieving all threads and messages from inbox or help desk for export and external processing / handling."
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2024-09-25 08:47:21",
    "edited": {
      "time_stamp": "2024-09-25 08:47:43"
    },
    "text": "<@U07CCUZJNSY> - for all time or certain date range? for all inboxes/help desks? just one at a time?  and is this the endpoint that you posted about above about possible missing data?"
  },
  {
    "poster": {
      "poster_name": "Ken Fisher",
      "poster_handle": "wd"
    },
    "time_stamp": "2024-09-25 08:52:01",
    "edited": {
      "time_stamp": "2024-09-25 08:56:56"
    },
    "text": "<@U04B32JHTUZ> For all time, all inboxes / help desks / channels.\n\nOne at a time and all at once could both be useful.\n\nMy current use case is everything in Inbox or everything in Help Desk. I could see wanting to select individual inboxes or help desk channels if someone didn’t need everything.\n\nIt is the endpoint I seem to be missing data from.\n"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2024-09-25 08:57:01",
    "text": "In that threads can only be returned in ascending order, I'm not surprised to hear that your users are complaining that newer conversations seem to be missing. Any pattern around the total number of conversations a portal has where you notice this issue kicking in?"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:07:43",
    "text": "<@U01QVR44MEY> How do you pull all of the threads associated with a ticket given that we dont provide a way to filter threads by ticketId today?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:08:31",
    "text": "<@U07L87JHRHB> associations api"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:11:19",
    "text": "So you're mapping the thread back to the CONVERSATION record right now and querying the associations API with the CONVERSATION record for ticket associations?"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:11:24",
    "text": "I see"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:12:29",
    "text": "yep exactly"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2024-09-25 09:12:46",
    "text": "which gets into this hairy issue about conversation object id vs thread id\n<https://HubSpotdev.slack.com/archives/C06S581J2AZ/p1720455336118559?thread_ts=1716295105.324539&amp;cid=C06S581J2AZ>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:12:59",
    "text": "correct"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:13:10",
    "text": "but generally for us it's 1 conversation to 1 thread"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:13:17",
    "text": "and as far as finding the right actor goes, do you know the actor's vid beforehand? Is that something you'd want to filter on using a logical AND with the ticket id?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:13:32",
    "text": "but I do a merge of thread messages for the same conversation just in the event that there are multiple"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:14:07",
    "text": "sorry I said actor but that's an actual technical term, more of the sender email address."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:14:20",
    "edited": {
      "time_stamp": "2024-09-25 09:14:30"
    },
    "text": "I do the know vid but it could be a different contact at the same company looking at the portal"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:14:35",
    "text": "so I have to use the domain for now"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:14:41",
    "edited": {
      "time_stamp": "2024-09-25 09:14:42"
    },
    "text": "So you want to do filtering based on the sender's delivery identifier information it sounds like?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:15:16",
    "text": "bingo, exactly"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:15:43",
    "text": "got it. So you're probably just looking at the delivery identifier of the sender on the initial message on the thread?"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:16:31",
    "text": "well, filtering threads based on messages might be a little tougher, but we certainly facilitate the ticketId filter case"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:17:13",
    "text": "yep yep, I know it's a unique use case"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 09:17:20",
    "text": "but filtering on tickets would be excellent"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:17:33",
    "text": "making it so that you don't need to go to the associations API would probably be a big win"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 09:19:35",
    "text": "<@U07CCUZJNSY> for the data export case. Would it be more helpful if you could just give you a link to an S3 file containing your thread data? Perhaps with some filters applied beforehand? As opposed to requiring you to manually paginate the data?"
  },
  {
    "poster": {
      "poster_name": "Ken Fisher",
      "poster_handle": "wd"
    },
    "time_stamp": "2024-09-25 09:23:48",
    "edited": {
      "time_stamp": "2024-09-25 09:31:03"
    },
    "text": "<@U07L87JHRHB> that would fit my primary use case of retrieving all threads. :rocket: \n\nMy current work flow is:\nGet inboxes > get all threads > get all messages in each thread. Lots of paginated calls.\n\nOne call to get everything would be amazing!"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2024-09-25 09:41:54",
    "text": "It's kept updated in real time"
  },
  {
    "poster": {
      "poster_name": "John Congdon",
      "poster_handle": "jcongdon"
    },
    "time_stamp": "2024-09-25 09:58:36",
    "text": "I figured it out :tada:. The request from HubSpot doesn't want the actual stream, it wants a URL to the stream.\n\nThe documentation uses the same URL in both the webhook setup and the response, so I was confused. :crying_cat_face:"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-09-25 10:50:08",
    "text": "Is there anyway to find out what numerical type HubSpot uses internally for Currencies values? We're wondering what the threshold is; i think its a java backend right so I assume its a double?"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:04:44",
    "text": "<@U07CCUZJNSY> are you looking for historical threads too? Or just open ones?"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:05:07",
    "text": "It's useful to know you're looking for an extract that includes messages. That wasn't on my radar at all"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:06:12",
    "text": "Also how often are you querying for this thread state?"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:06:38",
    "text": "And if you care about closed threads, do you have an mechanism to ensure you aren't retrieving the same threads over and over every time you query the history? Would that be helpful? Or is a holistic thread dump kind of nice?"
  },
  {
    "poster": {
      "poster_name": "Ken Fisher",
      "poster_handle": "wd"
    },
    "time_stamp": "2024-09-25 12:11:04",
    "edited": {
      "time_stamp": "2024-09-25 12:13:11"
    },
    "text": "<@U07L87JHRHB> historical as well. Essentially a dump of an accounts entire message history for external analysis, processing.\n• Definitely care about closed threads.\n• No mechanism to avoid retrieving the same threads since my current use case is a simple data export tool.\n    ◦ Having a filter for date range might be useful to preform subsequent data exports without having to query all the earlier data.\n• In the future I can imagine a more SPA type use case querying the API more selectively, perhaps thread by thread. In that case I would imagine implementing my own cacheing solution."
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:12:54",
    "edited": {
      "time_stamp": "2024-09-25 12:17:52"
    },
    "text": "makes sense. A couple last question. This applies to you too <@U01QVR44MEY>\n\nWhere do you all stand on eventual consistency? Is it ok if the data from the Get Threads API specifically is stale on the order of seconds or even minute or so? Right now we offer strongly consistent output, but changing that would give us some flexibility. For example, we could allow far far richer filtering and sorting,\n\nAnd do you care about filtered (aka spam) threads or threads that are archived?"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:14:08",
    "text": "&gt;  Having a filter for date range might be useful to preform subsequent data exports without having to query all the earlier data.\nWould you want to query by the created_at date of the thread or something like that?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 12:19:37",
    "text": "I think eventual consistency is fine for most things especially if you can keep the staleness under 1 minute"
  },
  {
    "poster": {
      "poster_name": "Ken Fisher",
      "poster_handle": "wd"
    },
    "time_stamp": "2024-09-25 12:21:23",
    "edited": {
      "time_stamp": "2024-09-25 12:23:55"
    },
    "text": "> Where do you all stand on eventual consistency? Is it ok if the data from the Get Threads API specifically is stale on the order of seconds or even minute or so? Right now we offer strongly consistent output, but changing that would give us some flexibility\n• For full account data dump of all messages: eventual consistency not important :x:\n• For a different type of app with thread cacheing or real time analytics etc: eventual consistency important :o:\nUnder 1 minute eventual consistency seems like plenty unless the API claimed super fast consistency, again for something like near realtime analytics.\n\n> Would you want to query by the created_at date of the thread or something like that?\nsure that would definitely work. Just some way to filter the data to avoid having to re export everything again."
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:24:17",
    "edited": {
      "time_stamp": "2024-09-25 12:24:22"
    },
    "text": "sounds good. Thank you all for entertaining so many questions here. One last one,\n\nDo you care about threads that were filtered or marked as spam or archived?"
  },
  {
    "poster": {
      "poster_name": "Ken Fisher",
      "poster_handle": "wd"
    },
    "time_stamp": "2024-09-25 12:26:35",
    "edited": {
      "time_stamp": "2024-09-25 12:30:10"
    },
    "text": ">  Do you care about threads that were filtered or marked as spam or archived? (edited)\nno for spam. archived threads possibly yes since my use case is people expecting a full snapshot of all their messages.\na filter option to include or not include archived threads seems like a nice to have.\n\nThanks for considering our use cases! :pray:"
  },
  {
    "poster": {
      "poster_name": "Nick Drane",
      "poster_handle": "ndrane"
    },
    "time_stamp": "2024-09-25 12:33:18",
    "text": "of course!"
  },
  {
    "poster": {
      "poster_name": "Stof Hofer",
      "poster_handle": "stof"
    },
    "time_stamp": "2024-09-25 13:06:10",
    "edited": {
      "time_stamp": "2024-09-25 13:29:53"
    },
    "text": "Is anyone else having troubles with requests to the API timing out a lot at the moment?",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-25 13:45:37"
      },
      {
        "time_stamp": "2024-09-25 14:21:44"
      },
      {
        "time_stamp": "2024-09-25 14:32:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-09-25 13:37:44",
    "text": "hello all, anyone know how to update association labels using the api? more especifically, if it is even possible to change the label, without removing the primary association",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-25 13:44:53"
      },
      {
        "time_stamp": "2024-09-25 13:51:04"
      },
      {
        "time_stamp": "2024-09-25 14:02:02"
      },
      {
        "time_stamp": "2024-09-25 17:42:25"
      },
      {
        "time_stamp": "2024-09-25 17:43:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Thomas Niederberger",
      "poster_handle": "thomas.niederberger"
    },
    "time_stamp": "2024-09-25 13:44:53",
    "text": "Something like that?\n<https://developers.HubSpot.com/beta-docs/reference/api/crm/associations/association-details#put-%2Fcrm%2Fv4%2Fobjects%2F%7Bobjecttype%7D%2F%7Bobjectid%7D%2Fassociations%2F%7Btoobjecttype%7D%2F%7Btoobjectid%7D|https://developers.HubSpot.com/beta-docs/reference/api/crm/associations/association-details#put-%2Fcrm%2Fv4%2Fobjects%[…]ttype%7D%2F%7Btoobjectid%7D>"
  },
  {
    "poster": {
      "poster_name": "Thomas Niederberger",
      "poster_handle": "thomas.niederberger"
    },
    "time_stamp": "2024-09-25 13:45:37",
    "text": "Yes, it’s slow and I feel not everything works right now…"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-09-25 13:51:04",
    "text": "Im doing it like this, but when it changes the label, it removes the primary association and i dont want to do that?\ndef update_label(contact_id):\n    company_id = get_company_id(contact_id)\n    print(company_id)\n    label_url = f\"<https://api.hubapi.com/crm/v4/objects/contacts/{contact_id}/associations/companies/{company_id}>\"\n\n    payload = json.dumps([\n            {\"associationCategory\": \"USER_DEFINED\",\"associationTypeId\": 34}\n        ])"
  },
  {
    "poster": {
      "poster_name": "Thomas Niederberger",
      "poster_handle": "thomas.niederberger"
    },
    "time_stamp": "2024-09-25 14:02:02",
    "text": "Good Question, might have to load them first - I can’t tell you from top of my head."
  },
  {
    "poster": {
      "poster_name": "Eric Popelka",
      "poster_handle": "eric.popelka"
    },
    "time_stamp": "2024-09-25 14:21:44",
    "text": "Getting a ton of status code 503s"
  },
  {
    "text": "Is anyone else still experiencing degraded performance on the API? I am seeing requests taking over a minute to receive a response. See the example attached where it's taking 1 minute 40 seconds to receive a response.",
    "time_stamp": "2024-09-25 14:23:36",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-25 14:32:42"
      },
      {
        "time_stamp": "2024-09-25 14:52:16"
      },
      {
        "time_stamp": "2024-09-25 15:09:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aviv Kasuto",
      "poster_handle": "aviv211"
    },
    "time_stamp": "2024-09-25 14:32:26",
    "text": "Same here, status page claims its resolved, but im still getting 5xx errors for that last 11 hours."
  },
  {
    "poster": {
      "poster_name": "James Traynelis",
      "poster_handle": "jvtraynelis"
    },
    "time_stamp": "2024-09-25 14:32:42",
    "text": "we are."
  },
  {
    "poster": {
      "poster_name": "Richard Vargas Nengua",
      "poster_handle": "rvargas"
    },
    "time_stamp": "2024-09-25 14:47:09",
    "text": "I'm also experiencing very slow response times with the API, especially with requests related to _deals_. In my case, the responses are taking between 1 minute 30 seconds and 3 minutes, which is significantly impacting performance."
  },
  {
    "poster": {
      "poster_name": "Cristian Peñaranda",
      "poster_handle": "cpenaranda"
    },
    "time_stamp": "2024-09-25 14:52:16",
    "text": "I'm experiencing degraded performance and the HubSpot <https://status.HubSpot.com/|status> page says that all is working well :2421-big-sad:"
  },
  {
    "text": "It's frustrating that there's a banner in the UI about API delays, but no update to the status page. The <https://product.HubSpot.com/blog/HubSpot-incident-aug27#:~:text=3.%20Status%20Page,shared%20with%20customers.|blog covering the 8/27 outage> specifically spoke to improvements HubSpot was making on Status page automation, yet here we are.\n\n<@UQNEXHW14> please advocate for us, as these outages and the lack of strong communication are very detrimental to business functions and trust in HubSpot as a reliable partner.",
    "subtype": "thread_broadcast",
    "time_stamp": "2024-09-25 15:09:45"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:10:50",
    "text": "it's just hella fun that everything is broken for the APIs but the status page doesn't get an update. Feels like the team doesn't want to report on things the users aren't going to see."
  },
  {
    "text": "Yeah, is this permanent?  My whole system is down on refresh tokens.",
    "time_stamp": "2024-09-25 15:12:25"
  },
  {
    "text": "all our code is on fire and it's going to take days to recover from this but HubSpot just says everything is fine.",
    "time_stamp": "2024-09-25 15:13:48",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-25 15:14:59"
      },
      {
        "time_stamp": "2024-09-25 15:54:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 15:14:17",
    "text": "Well, I am sure they are going through some stuff too.",
    "reply_count": 20,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-25 15:15:59"
      },
      {
        "time_stamp": "2024-09-25 15:17:41"
      },
      {
        "time_stamp": "2024-09-25 15:17:58"
      },
      {
        "time_stamp": "2024-09-25 15:18:25"
      },
      {
        "time_stamp": "2024-09-25 15:19:11"
      },
      {
        "time_stamp": "2024-09-25 15:19:14"
      },
      {
        "time_stamp": "2024-09-25 15:19:33"
      },
      {
        "time_stamp": "2024-09-25 15:19:38"
      },
      {
        "time_stamp": "2024-09-25 15:19:47"
      },
      {
        "time_stamp": "2024-09-25 15:20:04"
      },
      {
        "time_stamp": "2024-09-25 15:20:12"
      },
      {
        "time_stamp": "2024-09-25 15:20:19"
      },
      {
        "time_stamp": "2024-09-25 15:21:06"
      },
      {
        "time_stamp": "2024-09-25 15:21:43"
      },
      {
        "time_stamp": "2024-09-25 15:21:57"
      },
      {
        "time_stamp": "2024-09-25 15:25:17"
      },
      {
        "time_stamp": "2024-09-25 16:35:37"
      },
      {
        "time_stamp": "2024-09-25 16:37:28"
      },
      {
        "time_stamp": "2024-09-25 16:38:22"
      },
      {
        "time_stamp": "2024-09-25 16:43:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:14:59",
    "text": "I mean why have a \"HubSpot APIs\" section if you're not going to report on it. This has been an issue from this morning"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:15:59",
    "text": "100% totally get that, and HubSpot is built on HubSpot so that's probably affecting it too. But with 8000 employees surely someone can setup an automated job to check the API status and report to the status page."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:17:41",
    "text": "HubSpot wants to define itself as a platform, not communicating to your app developers and partner is not a good way to run a platform"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 15:17:58",
    "text": "Maybe they are up just like we said, though really slow. I am not live yet, so I don't have a dog in the fight. If I had real customers having issues, it might be a headache."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:18:25",
    "text": "very true, but the APIs aren't just running slow, they aren't running at all in a lot of cases"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:19:11",
    "text": ":dumpster-fire:"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 15:19:14",
    "text": "I bet they are having a worse time than we are, so we can't smash them too much.  We all need each other."
  },
  {
    "poster": {
      "poster_name": "Miguel Angel Velasquez",
      "poster_handle": "m.a.velasquez"
    },
    "time_stamp": "2024-09-25 15:19:28",
    "text": "Hi everyone\nHas the HubSpot service been completely reset? I use the following web service: <https://api.HubSpot.com/conversations/v3/visitor-identification/tokens/create|https://api.HubSpot.com/conversations/v3/visitor-identification/tokens/create> Occasionally it returns a response, but most of the time it doesn't or it takes too long to respond, this situation is causing us problems with the chat widget.\n\nIt's worth clarifying that I'm using OAutn authentication. Is anyone else experiencing the same problem?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:19:33",
    "text": "totally bro, totally."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:19:38",
    "text": "I just want communication."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:19:47",
    "text": "it takes 2 mins to update the status page."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:20:04",
    "text": "they clearly took those 2 mins and updated the in-app banners"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 15:20:12",
    "text": "Let's just give them a few to breath and solve the issue."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:20:19",
    "text": ":saluting_face:"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 15:20:42",
    "text": "Yes, everyone is having issues right now."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:21:06",
    "text": "oh trust me, I'm the biggest HubSpot fan you'll meet. I'm wearing a HubSpot shirt right now. But you have to point out problems to make them better in the future"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 15:21:43",
    "text": "We are all always trying to get better.  Plus, make money."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:21:57",
    "text": "hahahaha, truth"
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 15:25:17",
    "text": "We all are here to make more money! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Ryan Huff",
      "poster_handle": "ryan687"
    },
    "time_stamp": "2024-09-25 15:29:46",
    "text": "<@U0390FR1QH4> OAuth in particular seems spotty for me. too... requests timing out, etc."
  },
  {
    "poster": {
      "poster_name": "Ryan Huff",
      "poster_handle": "ryan687"
    },
    "time_stamp": "2024-09-25 15:30:28",
    "text": "Would be nice if the status page was reliable... \"Feature request\" <@UFBNA9K9A> :kissing_heart:",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-25 15:32:17"
      },
      {
        "time_stamp": "2024-09-25 15:33:03"
      },
      {
        "time_stamp": "2024-09-25 16:36:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Huff",
      "poster_handle": "ryan687"
    },
    "time_stamp": "2024-09-25 15:32:17",
    "text": "if only so that I could point to that when people yell at me."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 15:33:03",
    "text": "hahaha exactly, now I'm going to have to figure out how I communicate the systems outage to the C-Suite tomorrow without HubSpot backing me up."
  },
  {
    "poster": {
      "poster_name": "Anthony Roldan",
      "poster_handle": "aroldan"
    },
    "time_stamp": "2024-09-25 15:37:50",
    "text": "Hey everyone - we’re seeing issues with some APIs and can confirm we’re digging into figure out what is going on.",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-25 15:48:01"
      },
      {
        "time_stamp": "2024-09-25 15:50:53"
      },
      {
        "time_stamp": "2024-09-25 16:10:44"
      },
      {
        "time_stamp": "2024-09-25 16:15:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Cronin",
      "poster_handle": "scott.cronin"
    },
    "time_stamp": "2024-09-25 15:48:01",
    "edited": {
      "time_stamp": "2024-09-25 15:48:32"
    },
    "text": "Hi <@U8PMV1YBH>, thanks for jumping in. Thoughts go out to all on the HubSpot eng side as they fight the fire.\n\nIs there a possibility to provide some additional transparency on what APIs are being impacted? Are our secondly rate limits temporarily lowered? Do we need to be game planning for operating tomorrow w/o API being fully functional?"
  },
  {
    "poster": {
      "poster_name": "Anthony Roldan",
      "poster_handle": "aroldan"
    },
    "time_stamp": "2024-09-25 15:50:53",
    "text": "we’re seeing impacts across public APIs but we’re not seeing it on our internal APIs - we believe this is a broader issue than a single API or service. it is not related to rate limiting, we’re putting up a status page now."
  },
  {
    "poster": {
      "poster_name": "Ryan Huff",
      "poster_handle": "ryan687"
    },
    "time_stamp": "2024-09-25 15:51:16",
    "text": "Thank you. No doubt your team has been at this all day. Tomorrow's problem: automating the status page updates. :pray:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-09-25 15:54:59",
    "text": "This man. Why say everything works!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-09-25 15:55:24",
    "text": "Everyone please ask breeze to create work arounds for your APIs!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 16:08:40",
    "text": "THE STATUS PAGE JUST UDPATED!!!! Thank you!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-09-25 16:10:44",
    "text": "Thanks for the update <@U8PMV1YBH>. Give me an address and I'll send over some caffeine as you battle with this"
  },
  {
    "poster": {
      "poster_name": "Anthony Roldan",
      "poster_handle": "aroldan"
    },
    "time_stamp": "2024-09-25 16:15:02",
    "text": "appreciated — we’re all pretty distributed but just poured a fresh cup as we work through this."
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2024-09-25 16:35:37",
    "text": "I am taking all this feedback to the comms team who decides what we can and can't post on the status page, y'all"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2024-09-25 16:36:33",
    "text": "We won't fix this today, but I'm actively taking all this feedback to the folks that decide what gets posted."
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 16:37:28",
    "text": "Everything seems to be fine now. I am not sure I am still clicking around."
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2024-09-25 16:38:22",
    "text": "Thank you <@U07BEAA26UV>! But we definitely need to do better in future critsits."
  },
  {
    "poster": {
      "poster_name": "Ty Hudson",
      "poster_handle": "ty688"
    },
    "time_stamp": "2024-09-25 16:43:44",
    "text": "No worries."
  },
  {
    "poster": {
      "poster_name": "Anthony Roldan",
      "poster_handle": "aroldan"
    },
    "time_stamp": "2024-09-25 16:47:52",
    "text": "Breaking: we’ve identified the root cause of the issue and are working toward resolving it. Thanks for your patience everyone."
  },
  {
    "poster": {
      "poster_name": "Aldo Carrillo",
      "poster_handle": "aldo948"
    },
    "time_stamp": "2024-09-25 17:42:25",
    "text": "Use the associations batch endpoint "
  },
  {
    "poster": {
      "poster_name": "Aldo Carrillo",
      "poster_handle": "aldo948"
    },
    "time_stamp": "2024-09-25 17:43:41",
    "text": "If I remember correctly, that endpoint does not clear existing association labels, if that’s not the case, then you might need to include existing associations labels on your request"
  },
  {
    "poster": {
      "poster_name": "Anthony Roldan",
      "poster_handle": "aroldan"
    },
    "time_stamp": "2024-09-25 20:48:10",
    "text": "For anyone still watching, we believe we have resolved the issue and are seeing API response times return to normal.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-25 21:32:57"
      },
      {
        "time_stamp": "2024-09-25 22:49:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anthony Roldan",
      "poster_handle": "aroldan"
    },
    "time_stamp": "2024-09-25 21:32:57",
    "text": "We’ve seen 30 minutes of stable ordinary response times to APIs and are moving the status to resolved. Thank you all for your patience here."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-09-25 22:49:46",
    "text": "thanks <@U8PMV1YBH> I’ve been hating my life on and off for most of the day to get this custom report printed out… I’ve got a ui extension that uses a few graphql calls and a bunch of magic, outputs to json on a custom object, then, then uses dynamic pages to output a report that is printable…\n\nevent is related to 5 events, each event has registered contacts, those contacts have contact to contact relationships that group them together..\n\nand those contacts can be related to event more than once\n\nand I just needed to tie up some loose ends but you can imagine the pain I’ve had trying to get a bunch of those to work.\n\nI’ve made the most progress this past hour and I’m just about done.\n\nthanks to you and your team"
  }
]
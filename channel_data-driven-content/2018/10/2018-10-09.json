[
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-09 08:09:23",
    "edited": {
      "time_stamp": "2018-10-09 08:46:32"
    },
    "text": "Anyone have any idea why upcoming 2019 event dates are not showing up and past dates with the year 2017 are showing up? It appears my string of code only works to hide past events if they are in the year 2018 and show upcoming events in the year 2018.  Do I need two combined if statements? Not sure how to accomplish this... If the day of the year is greater than the local date show it AND if the year is greater than the current year show it?\n\nThis is the string of code I am using right now...  {% if (row['date_and_time_start']|datetimeformat('%j'))&gt;=(local_dt|datetimeformat('%j'))%}"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 08:46:25",
    "text": "<@UAGCTGD3J> just out of curiosity, why are you using an if statement on this? You could filter the past events out to your call to the hubDB table like so:\n```\n{% set todayUnix = local_dt|unixtimestamp %}    \n{% set all_resources = hubdb_table_rows(99999999, '&amp;endDateTime__gte=' ~ todayUnix ) %}\n```"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-09 08:53:57",
    "text": "<@U2H3TT8F2> probably lack of knowledge on my part. Other than the table id, is there anything else in that string I would need to switch out?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 08:54:37",
    "text": "for the `&amp;endDateTime` you would want to use your end date field"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 08:55:06",
    "text": "appending the `__gte` to the end is just using the greater than or equal to"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 08:56:24",
    "text": "you can read more on them here: <https://developers.HubSpot.com/docs/methods/hubdb/get_table_rows> under the filtering heading"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 08:59:04",
    "text": "Note those are the old docs, new ones: <https://developers.HubSpot.com/docs/methods/hubdb/v2/get_table_rows>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 08:59:14",
    "text": "They should probably redirect now"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-09 09:24:42",
    "text": "Oooh, relative datetime filters"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-09 09:24:44",
    "text": "Fancy"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-09 09:34:53",
    "text": "<@U2H3TT8F2> My 2019 dates are showing up now, but so are past 2018 events and a test 2017 event I added. Any insight? Would a locationquery above it matter? I am not using an end date column, just a start date and time. This is the code I replaced with my previous code... I'm stuck.\n\n{% set todayUnix = local_dt|unixtimestamp %}\n{% set all_resources = hubdb_table_rows(957964, '&amp;date_and_time_start__gte='~ todayUnix ) %}"
  },
  null,
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:37:58",
    "text": "<@UAGCTGD3J> can you DM me your full code? Or you can post it here (others may be able to help as well). Many of us here have built a event calendar of sorts. Seeing the full code, we may be able to help you with optimizing it a bit."
  },
  {
    "text": "<@U2H3TT8F2> Thanks for taking a look! This is the full code...",
    "time_stamp": "2018-10-09 09:40:47"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:44:45",
    "text": "for line 3 is there a dropdown or category you are using for this? (Just trying to figure out what the 1,2,3,4,5,6,7, 8 values are about)"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-09 09:46:47",
    "text": "Yes, that is a select HubBD column to filter by location. Those are the different locations to filter by on the page (ex. Minnesota, Wisconsin, Colorado, etc.)."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:47:16",
    "text": "ah ok, i think I see what you are trying to do"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:48:22",
    "text": "I need to jump to something else real quick but i will circle back on this and try and get you an answer if there is a better way to do this (note, i did this once on something and someone helped me make it a little cleaner without having to worry about updating the values if more locations are added later)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-10-10 12:45:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-09 09:49:07",
    "text": "Sounds great. Thank you!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 09:52:45",
    "text": "stupid question: I have a HubDB for an event listing.\n\nHow do I print the dates and times in the correct time-zone?\n``` {%- set s_month = start|datetimeformat(\"MMMM\") -%}\n   {%- set s_day = start|datetimeformat(\"e\") -%}\n   {%- set s_year = start|datetimeformat(\"y\") -%}\n   {%- set e_month = end|datetimeformat(\"MMMM\") -%}\n   {%- set e_day = end|datetimeformat(\"e\") -%}\n   {%- set e_year = end|datetimeformat(\"y\") -%}\n```\nReturns the dates based on utc 0"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:54:41",
    "text": "I've always just included a timezone field in mine so that the end user can set it and then on the listings i do this"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:54:55",
    "text": "`&lt;span class=\"value\"&gt;{{ dynamic_page_hubdb_row.startDateTime|datetimeformat('%l:%M %p') }} ({{ dynamic_page_hubdb_row.timezone }})&lt;/span&gt;`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 09:55:34",
    "text": "so you’re just outputting the timezone and maybe using javascript to convert to the visitors timezone?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:56:06",
    "text": "nah, no conversions, im just straight up listing it out. Leaving the conversion stuff up to the end user to do it"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:56:34",
    "text": "so if you are in EST timezone and see the page you see:\n\"6:30pm CST\""
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 09:57:21",
    "text": "I imagine you could use JS and have something where people can set their timezone, store that in a cookie an then just modify the times based on their preferred zone"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 09:58:39",
    "text": "yea that wont work.\n\nsee here’s my core problem: <https://spin.d.pr/LHRJGF+>\noutputs as\n<https://spin.d.pr/FqAQNL+>\n\nSo the value in HubDB doesn’t store what you see on the date picker in the HubDB, so I have to convert it back so you actually see the correct date time rendered"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 09:59:37",
    "edited": {
      "time_stamp": "2018-10-09 10:00:48"
    },
    "text": "(as you can see in the screenies, I set 9/05/2018, what’s outputted in the page however is 9/04/2018) I’m trying to get them to sync up.\n\nYes I could put UTC 0 next to all the dates and times but garuntee the client would be like “wth, why is it not showing what I put in?”",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-09 10:01:30"
      },
      {
        "time_stamp": "2018-10-09 10:02:43"
      },
      {
        "time_stamp": "2018-10-09 10:03:03"
      },
      {
        "time_stamp": "2018-10-11 11:55:28"
      },
      {
        "time_stamp": "2018-10-12 11:13:55"
      },
      {
        "time_stamp": "2018-10-12 11:20:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 10:01:30",
    "text": "I have an issue up to change the HubDB input UI to include an editable timezone"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 10:02:43",
    "text": "is there a workaround for this on the HubL side?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 10:03:03",
    "text": "like a function for converting timezones? I didn’t see one in the documentation, only datetimeformat"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-09 13:50:57",
    "text": "Is this live? If so, could you post an example of the syntax? I'm running into a case where it would be handy."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 14:15:15",
    "text": "Should be deployed out soon"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 14:17:31",
    "text": "Syntax would be `|selectattr(\"property.subProperty\", \"equalto\", value)`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 14:18:09",
    "text": "For example with a select column `|selectattr(\"column.name\", \"equalto\", optionName`"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-09 14:29:05",
    "text": "Cool, that was my guess"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 15:28:35",
    "text": "<@U7SL518D6> I added HubDB variables to the documentation so there will not be confusion in the future about internal HubDB variables <https://designers.HubSpot.com/docs/hubl/hubl-supported-variables>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 15:40:17",
    "text": "you’re the man, man!\n\nStill think it’d make sense if hs_id showed up when prettyprinting an object or w/e though i get that’s probably a hard problem to solve."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-09 15:41:53",
    "text": "O_O\nThere’s a world of HubDB tables I wasn’t aware of:\n<https://spin.d.pr/n0a2I4+>",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-10-09 16:10:19"
      },
      {
        "time_stamp": "2018-10-09 16:42:55"
      },
      {
        "time_stamp": "2018-10-10 07:55:25"
      },
      {
        "time_stamp": "2018-10-10 08:14:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-09 16:10:19",
    "text": "Check back in a few days"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-10-09 16:42:55",
    "text": "<https://gph.is/10QVENc>"
  },
  null
]
[
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-08-01 02:21:27",
    "text": "Has anyone noticed any issues with CRM object presenting the wrong data? We have a client module we built that is now retrieving the wrong information but not entirely?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-08-01 07:50:49"
      },
      {
        "time_stamp": "2019-08-01 07:52:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-01 07:50:49",
    "text": "cc <@UD5NW4PJ5>"
  },
  {
    "poster": {
      "poster_name": "Kacper Adach",
      "poster_handle": "kadach"
    },
    "time_stamp": "2019-08-01 07:52:37",
    "text": "could you DM me details?"
  },
  {
    "poster": {
      "poster_name": "Tim Ostheimer",
      "poster_handle": "tostheimer"
    },
    "time_stamp": "2019-08-01 08:56:42",
    "text": "Were {% image %} modules in emails recently changed to have built-in inputs for a Hyperlink and Open in New Tab? Previously only the {% linked_image %} module type would have had those but now we're seeing these inputs on {% image %} modules as well. Many of our older templates where those modules are used have export_to_template_context=True on the module and do not have functioning code for hyperlinks so it's causing a lot of confusion for some of our clients."
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-08-01 09:56:38",
    "text": "Hey <@U6GNQ7JBU> Thanks for working on this! I Saw that the code was merged. Should this snippet `{% set dates = rows|map(attribute='date') %}` now be working, or will it go through a few more checks before it's live?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-08-01 09:58:05",
    "text": "Not out yet, going to try to get it live after lunch"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-08-01 09:59:15",
    "text": "sweet!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-08-01 12:46:22",
    "text": "is there an easy way to \"decache\" the |random filter, so it actually randomizes on every page load rather than whenever the server-side cache is cleared? I feel like I've done this before but I can't remember how",
    "reply_count": 10,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-08-01 12:53:27"
      },
      {
        "time_stamp": "2019-08-01 13:02:50"
      },
      {
        "time_stamp": "2019-08-01 13:09:37"
      },
      {
        "time_stamp": "2019-08-01 13:10:01"
      },
      {
        "time_stamp": "2019-08-01 13:10:36"
      },
      {
        "time_stamp": "2019-08-01 13:13:57"
      },
      {
        "time_stamp": "2019-08-01 13:14:28"
      },
      {
        "time_stamp": "2019-08-01 13:24:03"
      },
      {
        "time_stamp": "2019-08-02 07:05:31"
      },
      {
        "time_stamp": "2019-08-02 13:18:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-08-01 12:53:27",
    "text": "I think you can use a request param that will change nearly every time and that will break cacheability. (not an advisable thing obviously.)"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-08-01 13:02:50",
    "text": "for sure, issue is it's a module :confused:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-08-01 13:09:37",
    "text": "I think you were thinking I was referring to URL query paremters, I meant <https://designers.HubSpot.com/docs/hubl/hubl-supported-variables#http-request-variables>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-08-01 13:10:01",
    "text": "remote IP for example should be unique for each visitor but will break all page caching"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-08-01 13:10:36",
    "text": "you could also theoretically print the date/time somewhere invisibly"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-08-01 13:13:57",
    "text": "oooo"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-08-01 13:14:28",
    "text": "yes, I was thinking URL param because that's how I've got around cacheing for CSS with HubL in the past"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-08-01 13:24:03",
    "text": "FYI, date did not work, remote IP did. you rule dude!"
  }
]
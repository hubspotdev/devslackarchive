[
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-04-11 04:38:29",
    "text": "weird issue with the new IDE:\nUsing the same CM in a flex column sometimes is wrapped as CM classes and other instances dont:\nhs_cos_wrapper_type_module\nhs_cos_wrapper_custom_widget\nany idea if I can fix it somehow? (I have some styles dependent of that)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-04-11 07:06:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chris Conant",
      "poster_handle": "conant_chris"
    },
    "time_stamp": "2018-04-11 07:06:01",
    "text": "Do you mind messaging me with a link?"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-04-11 11:31:29",
    "text": "*Question* \n\nSo I have a particular situation where I have to have hubl in my javascript, The hubl pulls from a hubDB and needs to stay current.\n\nSO in  a custom module I have my javascript in the html+hubl pane. due to the hubl requirement.\n\nBecause of this I have libraries which I had as linked files, but they have to be loaded before my script tag.\n\nI tried using  `get_public_template_url` but am getting errors stating it’s disabled in this context (I think because that function is now deprecated)  *anyone know how I can load those scripts before my script tag other than just linking to the resources hosted elsewhere?*\n\n<@U22PJPGK0> -including you since this is a SPA issue."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-04-11 11:52:47",
    "text": "Could you just call the HubDB APIs via AJAX instead?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-04-11 12:04:52",
    "edited": {
      "time_stamp": "2018-04-11 12:08:43"
    },
    "text": "<@U7SL518D6> I resolved a similar issue with the next logic:\n- link the lib. as asset in the CM.\n- Save the HubL as data attributes in the HTML tab.  (If you need something more complex like an object in JS you need to save that as a global var in the HubL+HTML tab too.)\n- Move and edit your initial JS to the JS tab, so you now read the HubL variables from the data attributes instead.\n\nIf for some reason the library isn't loading before the JS tab (I had that issue before) you can use `{{ module_asset_url(\"nameLibrary.js\") }}` in combination with `jQuery.getScript` and `done` as a callback:\n`    jQuery.getScript(\"{{ module_asset_url('nameLibrary.js') }}\")`\n`    .done(function(){`\n`        myFunction();`\n`    });`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-04-11 12:30:09",
    "edited": {
      "time_stamp": "2018-04-11 12:31:08"
    },
    "text": "thank you for that Gonzalo, that helps.\n\nAnd Jeff we may be avoiding the ajax method for an arbitrary reason - not sure. Coworker just suggested against it for the use-case implying it might add overhead to development that’s unnecessary.\n(I haven’t personally used the api for hubDB directly)"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2018-04-11 12:56:31",
    "text": "We just shipped some updates to flex columns, but you should still be able to move modules from one Flex Column to another--do you have a link to the page you're working on?"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-04-11 13:07:12",
    "text": "yeah, AJAX should work well for this case"
  }
]
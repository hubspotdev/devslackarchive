[
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 05:07:23",
    "text": "Have any examples of Vue? And can you define “elegant”?"
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 05:11:22",
    "text": "I think local development of components and somehow having them hooked up to the HS CMS is a winner. This is why I mentioned micro fe. "
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-07-31 06:38:10",
    "text": "they’ve put a lot of resources into module development, so I don’t think they are going anywhere"
  },
  {
    "text": "Idea: Change the revisions icon on hs pages to more of a history icon instead of the generic hamburger",
    "time_stamp": "2019-07-31 06:39:03",
    "edited": {
      "time_stamp": "2019-07-31 06:39:47"
    }
  },
  {
    "text": "maybe something like this?",
    "time_stamp": "2019-07-31 06:39:33"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 06:52:27",
    "text": "Hey Jon, I’ll think throughout the day on if I have any vue examples that I’m okay to show.\n\nSeveral of the vue + HS things I’ve done lately are not public facing yet/or are meant for internal use and won’t ever be public.\n\nBut what I can say is Vue JS plays with HubSpot better than react does. Vue is made to be able to be sprinkled in to projects and so it works great using it in custom modules, or even having several vue instances on the same page.\n\nThe module system prevents files from being loaded multiple times and also adds a closure so javascript from one module doesn’t interfere negatively with another."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 06:54:05",
    "text": "In addition the HubDB and search js apis are great to work with."
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 06:55:52",
    "text": "I think I'm just trying to think out the box. It's not realistic (at least to me) to have devs locked into the HS modules. What if you wanted to launch a static site on the side, and have it use the same components you use in HS?"
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 06:57:28",
    "text": "Our team is looking into micro-fe's now, and I'm wondering if it could solve a ton of headaches for us. They are framework independent."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 06:57:34",
    "text": "use FTP to download the html, CSS and JS files for your modules. Then wherever you used HubL and custom module fields, translate that into whatever you need"
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 06:59:31",
    "text": "That's really a lot of maintenance though. Let's think it over a bit."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 07:01:24",
    "edited": {
      "time_stamp": "2019-07-31 07:03:27"
    },
    "text": "I mean technically if you really don’t like HubSpot’s page editor tools that it gives marketers, you could just make your own page editor tools and fully control the html css and js by using the api’s to update the pages/templates however you want to. Without using the module system at all, just templates."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-07-31 07:01:53",
    "text": "I’m curious how this would be implemented with other CMS’s like WordPress."
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 07:04:19",
    "text": "If you have a micro-fe component, let's call it `jons-button`, since there's 2 of us here, you just output ```&lt;jons-button color=\"blue\" prop2=\"false\"&gt;Button Text&lt;/jons-button&gt;```\n\nand the button renders. Obviously, there's a lot more to the backend there, but you could hook that up to _anything_ really easily, even HS."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 07:04:59",
    "text": "it sounds more likey what you care about is really web components not micro-fe itself"
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 07:05:15",
    "text": "correct"
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 07:05:33",
    "text": "We use React 99% of the time"
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 07:07:06",
    "text": "We can use Notion as a CMS for React, but bc I loved the HS CMS so much for email, I'm wondering if I could combine the 2 (React and HS) in an easy way. So I've been brainstorming a lot."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 07:16:51",
    "text": "I can’t say I think it would be crazy easy to go all in on react AND HubSpot for everything. That said my react knowledge isn’t as good as my vue knowledge.\n\nfrom my experience vuejs can be used in a way that plays better with the HS custom module system. Where as with react, you kinda want to use one master instance and have all of your components inside of that. Not at all saying it’s not possible, just saying I haven’t done it.\n\nYou could theoretically have your custom modules be just `&lt;jons-button color=\"blue\" prop2=\"false\"&gt;Button Text&lt;/jons-button&gt;` with the css in the module.\n\nBut all of the JS done in an external js file, that way that component could be used elsewhere outside of the custom module context.\n\nIDK it’s territory I don’t think many have seriously explored yet. Vuejs however a few of us have and find it works well enough for our needs."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 07:17:41",
    "edited": {
      "time_stamp": "2019-07-31 07:20:51"
    },
    "text": "if you have thoughts on how the system could be expanded to be more flexible in that capacity definitely let the ideas flow. More people will be coming that want a better workflow for using web component and modern js frameworks. The HS staff are very good about keeping an eye on what devs want."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-31 07:23:05",
    "text": "Also if you find a workflow that enables you to work in the way you want, let me know. I think it would be useful to the whole community. I can help to spread awareness of it."
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-07-31 07:57:35",
    "text": "Definitely. That's why I just started a dialogue to see where this takes us :sunglasses:"
  }
]
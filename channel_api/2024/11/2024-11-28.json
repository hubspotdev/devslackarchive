[
  {
    "poster": {
      "poster_name": "Jaroslaw Adamczyk",
      "poster_handle": "jaroslaw.adamczyk"
    },
    "time_stamp": "2024-11-28 01:27:47",
    "edited": {
      "time_stamp": "2024-11-28 01:28:09"
    },
    "text": "Hello! We have Knowledge Base with Access Control: SSO required. We've set it up correctly and SSO is working fine. We've configured Chatflow Bot with Knowledge Base Lookup. We use Verification API to identify users, but Chatflow widget is used on a page with different domain.\ncurrently Chatflow Bot is not able to return any private articles. It works fine with Public articles or when Chatflow Bot is used directly on a Knowledge Base page with SSO. I found this thread with a literally identical issue: <https://HubSpotdev.slack.com/archives/C2YHAHB6K/p1712779102953069>\nCan someone confirm that Chatflow Bot is not able to return articles hidden behind SSO on a page without SSO, even with the identified user? Thanks!"
  },
  {
    "poster": {
      "poster_name": "Aleksey Vays",
      "poster_handle": "aleksey.vays"
    },
    "time_stamp": "2024-11-28 01:44:45",
    "text": "Hi! I'm developing an app that will fetch all tickets associated with an account. I found this resource\n<https://developers.HubSpot.com/beta-docs/reference/api/crm/objects/tickets/v1#get-all-tickets>\nwhich suggests that I need to specify the properties I want for the returned tickets to contain.\nPlease help with the following:\n1. Is this the case?\n2. Where can I see a comprehensive list of ticket properties, from which to choose?\n3. Is there a \"Ticket Summary\" property?\nThank You!!",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-11-28 07:38:57"
      },
      {
        "time_stamp": "2024-11-28 07:40:44"
      },
      {
        "time_stamp": "2024-11-29 00:00:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Muhammad",
      "poster_handle": "muhammad"
    },
    "time_stamp": "2024-11-28 05:25:23",
    "text": "<@U082L4DP3QS> So you are stating, you are not getting comments from API right? What is the volume of objects you want to get comments for? Is this one time application or will be running periodically"
  },
  {
    "poster": {
      "poster_name": "Hugo Gomes",
      "poster_handle": "hugonovacao"
    },
    "time_stamp": "2024-11-28 06:01:30",
    "text": "Hi, Muhammad! But how do I make these calls? I'm only able to retrieve the custom object itself, not the record of this custom object."
  },
  {
    "poster": {
      "poster_name": "Orlando Heredia",
      "poster_handle": "orlando007"
    },
    "time_stamp": "2024-11-28 07:02:27",
    "text": "Well, ideally would be just for one time"
  },
  {
    "poster": {
      "poster_name": "Orlando Heredia",
      "poster_handle": "orlando007"
    },
    "time_stamp": "2024-11-28 07:03:18",
    "text": "I wonder if a CSV can be exported to get those, I looked up for a way to do that, but didn’t find it either"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-11-28 07:38:57",
    "text": "There is an API method to read all properties of a given object - ticket in your case - I would give that a look.  <https://developers.HubSpot.com/beta-docs/reference/api/crm/properties#get-%2Fcrm%2Fv3%2Fproperties%2F%7Bobjecttype%7D>"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-11-28 07:40:44",
    "text": "I also would consider using the v3 version of the api:  <https://developers.HubSpot.com/beta-docs/reference/api/crm/objects/tickets#get-%2Fcrm%2Fv3%2Fobjects%2Ftickets>"
  },
  {
    "poster": {
      "poster_name": "Muhammad",
      "poster_handle": "muhammad"
    },
    "time_stamp": "2024-11-28 07:46:59",
    "text": "<@U05R380MLMC> I don’t think this is doable with current API"
  },
  {
    "text": "Hi, I'm working on an API to query HubSpot contacts.\nI can query by ID, and everything works fine.\nHow can I query by a custom property? For example, property: nrodocumento",
    "time_stamp": "2024-11-28 14:19:03",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-11-28 15:30:39"
      },
      {
        "time_stamp": "2024-11-28 15:31:30"
      },
      {
        "time_stamp": "2024-11-28 18:24:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-11-28 15:30:39",
    "text": "You need to use search api"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-11-28 15:31:30",
    "text": "Search api will return results based on your query and include an ID for which you can use to fetch other properties on the contact."
  },
  {
    "poster": {
      "poster_name": "Aldo Carrillo",
      "poster_handle": "aldo948"
    },
    "time_stamp": "2024-11-28 18:24:03",
    "text": "Use the search object endpoint "
  },
  {
    "poster": {
      "poster_name": "Dave Cozens",
      "poster_handle": "dave.cozens"
    },
    "time_stamp": "2024-11-28 23:53:57",
    "text": "Hi y'all. I'm trying to embed some hourly updated images into a HubSpot reporting dashboard. I've been generating images with node &amp; Puppeteer, and using the HubSpot API to upload them (<http://api.hubapi.com/filemanager/api/v3/files/upload|api.hubapi.com/filemanager/api/v3/files/upload>) with PUBLIC_NOT_INDEXABLE. Problem is, they seem to be cached by the HubSpot CMS. I don't seem to be able to set a TTL of less than a day, and that appears from the docs to just delete the file. Suggestions appreciated. (I don't really want to host the image _somewhere else_)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-11-29 00:39:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dave Cozens",
      "poster_handle": "dave.cozens"
    },
    "time_stamp": "2024-11-29 00:00:42",
    "text": "Also, don't forget about the 100 records per request limit. You'll need to implement some kind of do/while handler for that"
  },
  {
    "poster": {
      "poster_name": "Dave Cozens",
      "poster_handle": "dave.cozens"
    },
    "time_stamp": "2024-11-29 00:04:45",
    "text": "We ran some imports back when we migrated to HubSpot and ended up burning through our API limit in a day, having to purchase additional requests. It was 500k API requests per day then. I believe it's increased as per <https://developers.HubSpot.com/changelog/increasing-our-api-limits> - be warned if you 429 due to secondly limits each of those failed requests counts towards your limit"
  },
  {
    "text": "Thanks Dave! Appreciate the link - I'm assuming that yours was a private app purely for your account?\n\nThat article does confirm my suspicion that public apps don't have a daily limit, just the per second limit, per account\n\nThanks for sharing!",
    "time_stamp": "2024-11-29 00:07:50"
  },
  {
    "poster": {
      "poster_name": "Dave Cozens",
      "poster_handle": "dave.cozens"
    },
    "time_stamp": "2024-11-29 00:15:08",
    "text": "I also misread \"Public\" as \"Private\" :slightly_smiling_face: - yes, ours was private. I'm obviously caffeine deficient!"
  },
  {
    "poster": {
      "poster_name": "Lloyd Hofmeyr",
      "poster_handle": "lloyd587"
    },
    "time_stamp": "2024-11-29 00:19:36",
    "text": "Haha...luckily that's an easier thing to fix than being rate limited!"
  },
  {
    "poster": {
      "poster_name": "Dave Cozens",
      "poster_handle": "dave.cozens"
    },
    "time_stamp": "2024-11-29 00:39:35",
    "text": "It's worse than I thought. The file is cached in the dashboard _after_ I delete it from the CMS library"
  }
]
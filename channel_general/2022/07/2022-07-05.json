[
  {
    "poster": {
      "poster_name": "Hitesh Kachhadiya",
      "poster_handle": "hiteshwork07"
    },
    "time_stamp": "2022-07-05 09:38:54",
    "text": ":wave: Hi everyone!\n\nI am stuck and finding solution for this :\n\ncan we update 1000 contact's property in a single request to HubSpot via api ?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-07-05 14:40:58"
      },
      {
        "time_stamp": "2022-07-05 14:41:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dennis J",
      "poster_handle": "dennis051"
    },
    "time_stamp": "2022-07-05 14:40:58",
    "text": "<https://developers.HubSpot.com/docs/api/crm/crm-custom-objects#endpoint?spec=POST-/crm/v3/objects/{objectType}/batch/update>"
  },
  {
    "poster": {
      "poster_name": "Dennis J",
      "poster_handle": "dennis051"
    },
    "time_stamp": "2022-07-05 14:41:04",
    "text": "does that help?"
  },
  {
    "poster": {
      "poster_name": "Erlend Powell",
      "poster_handle": "erlend.powell"
    },
    "time_stamp": "2022-07-05 16:52:55",
    "text": "Hi all - is there any way around the 65536 byte limit for custom properties? I’m trying to store base64 encoded images on contact objects for use as dynamic content in emails.",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-07-05 16:54:45"
      },
      {
        "time_stamp": "2022-07-05 19:21:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Erlend Powell",
      "poster_handle": "erlend.powell"
    },
    "time_stamp": "2022-07-05 16:54:45",
    "text": "Obviously I can get around this by supplying a URL instead, but would like to avoid the complexity of generating pre-signed URLs if possible."
  },
  {
    "poster": {
      "poster_name": "Erlend Powell",
      "poster_handle": "erlend.powell"
    },
    "time_stamp": "2022-07-05 19:21:21",
    "text": "Hmmm - actually never mind the above. I’ve done some more digging, and looks like a lot of email clients don’t support base64 encoded `img` elements anyway, so I think we’ll probably end up going down the pre-signed URL path."
  },
  {
    "poster": {
      "poster_name": "Megh Patel",
      "poster_handle": "meghpatel005"
    },
    "time_stamp": "2022-07-05 22:56:51",
    "text": "Yes I do have enterprise free trial account"
  },
  {
    "poster": {
      "poster_name": "Megh Patel",
      "poster_handle": "meghpatel005"
    },
    "time_stamp": "2022-07-05 22:58:23",
    "text": "Hey everyone,\n\nDoes anyone know how to execute web pack compiled code inside HubSpot serverless function?"
  }
]
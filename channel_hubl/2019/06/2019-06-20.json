[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2019-06-20 07:02:30",
    "text": "the raw should work, but if not you can use `{{ '{{' }}`  `{{ '}}' }}`\n<http://jinja.pocoo.org/docs/2.10/templates/#escaping>"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2019-06-20 07:04:23",
    "edited": {
      "time_stamp": "2019-06-20 07:04:39"
    },
    "text": "effectively using hubl to echo what’s in the quotes, i guess you could echo the whole lot in a hubl function\n```{{ '&lt;pre&gt;&lt;code&gt;{{- range $job, $val := .Values.cronjob.crons }}&lt;/pre&gt;&lt;/code&gt;' }}``` but would have to make sure you escape quotes you might have in the hubl"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-06-20 09:47:20",
    "edited": {
      "time_stamp": "2019-06-20 09:47:44"
    },
    "text": "Is there a way to get data from a portal’s global module into a stylesheet?\nKind of like a way to get data from `{{ site_settings }}`,\nbut with something like `{{ module.&lt;module_id&gt; }}`. I want to grab data from a global module and put it in a stylesheet"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-20 09:51:33",
    "text": "not so sure you can grab it in a stylesheet"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-20 09:51:49",
    "text": "but you could do it with a style element in the template or a custom module"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-20 09:52:09",
    "text": "you’d have to traverse the developer info to find the path to it though."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-20 09:52:23",
    "text": "also global modules data is only accessible in pages that module exists in"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-20 09:52:29",
    "text": "thus why i don’t think it’d work in a stylesheet"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-06-20 09:55:32",
    "text": "shucks. Thanks"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-20 09:56:45",
    "edited": {
      "time_stamp": "2019-06-20 09:57:02"
    },
    "text": "you might be able to do kind of a hack though and render the module into the stylesheet using the module tag, but maybe set the tag to a variable or something so it doesn’t actually output html andwhatnot. Definitely not a recommendation this would be kind of a hack."
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-06-20 11:27:07",
    "text": "Hi, anyone know if exists a function in array on bubl",
    "reply_count": 13,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-06-20 11:56:14"
      },
      {
        "time_stamp": "2019-06-20 12:06:38"
      },
      {
        "time_stamp": "2019-06-20 12:08:39"
      },
      {
        "time_stamp": "2019-06-20 12:15:20"
      },
      {
        "time_stamp": "2019-06-20 12:15:41"
      },
      {
        "time_stamp": "2019-06-20 12:16:03"
      },
      {
        "time_stamp": "2019-06-20 12:18:31"
      },
      {
        "time_stamp": "2019-06-20 12:26:54"
      },
      {
        "time_stamp": "2019-06-20 12:27:08"
      },
      {
        "time_stamp": "2019-06-20 12:28:27"
      },
      {
        "time_stamp": "2019-06-20 12:29:50"
      },
      {
        "time_stamp": "2019-06-20 12:30:55"
      },
      {
        "time_stamp": "2019-06-20 14:44:59"
      }
    ]
  },
  {
    "text": "I trying this code, but don't work me",
    "time_stamp": "2019-06-20 11:56:14"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-06-20 12:06:38",
    "text": "`append()` is what you are looking for :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-06-20 12:08:39",
    "text": "Hi <@U7ADCU3BM>, my problem is with check if exists \"emprender\" in array"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-06-20 12:15:20",
    "text": "oh sorry, missread"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-06-20 12:15:41",
    "text": "If I remember right should be `in` operator"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-06-20 12:16:03",
    "text": "`{% if \"emprender\" in content.topic_list %}`"
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-06-20 12:18:31",
    "text": "don't work me"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-06-20 12:26:54",
    "edited": {
      "time_stamp": "2019-06-20 12:30:40"
    },
    "text": "oh, sorry I thought I used before with HubL :thinking_face:\nbut can't recall"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-06-20 12:27:08",
    "text": "<@U6W3H6YN8> <@U6GNQ7JBU>?"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-06-20 12:28:27",
    "edited": {
      "time_stamp": "2019-06-20 12:30:18"
    },
    "text": "```\n    {% if 'emprender' in content.topic_list|map('name') %}\n        &lt;!-- Code which renders if topic exists on post --&gt;\n    {% endif %}```"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-06-20 12:29:50",
    "edited": {
      "time_stamp": "2019-06-20 12:31:51"
    },
    "text": "ha!,\n:thinking_face:but with `|pprint` in topic_list I just get a simple list with the names (not a dict) so I can't see declared the .name attr :open_mouth:"
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-06-20 12:30:55",
    "text": "<@U6W3H6YN8> thank you"
  },
  {
    "poster": {
      "poster_name": "Sebastien",
      "poster_handle": "sdelrue"
    },
    "time_stamp": "2019-06-20 14:31:23",
    "edited": {
      "time_stamp": "2019-06-20 14:42:03"
    },
    "text": "Hi there!\nI’m trying to see if there is a way with Hubl to check if a page has a translation or not.\nLike a {{ content.translated_page_id }}, or something that return a boolean.\nThe idea is:\n - if i have a translation I display the swticher\n - if not, I display a fake switcher toward the second language’s home page",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-06-20 14:40:02"
      },
      {
        "time_stamp": "2019-06-20 14:40:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sebastien",
      "poster_handle": "sdelrue"
    },
    "time_stamp": "2019-06-20 14:32:14",
    "text": "That’s something the language switcher could offer by default BTW"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-06-20 14:40:02",
    "text": "You can look at the url for the language"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-06-20 14:40:28",
    "text": "That is how I have been forced to write language specific 404 pages etc"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-06-20 14:44:59",
    "text": "I would like to vote on changing the name from hubl to bubl"
  }
]
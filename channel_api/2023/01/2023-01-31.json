[
  {
    "poster": {
      "poster_name": "Danny Brauer",
      "poster_handle": "danny401"
    },
    "time_stamp": "2023-01-31 03:51:40",
    "text": "Unfortunately no idea. Last year I talked to a support person about an API question and got a really comprehensive answer which included insight into HubSpot’s API design principles. Not sure if that was a fluke or if it’s new policy to defer customer questions on API entirely."
  },
  {
    "poster": {
      "poster_name": "jai",
      "poster_handle": "jai"
    },
    "time_stamp": "2023-01-31 05:23:33",
    "text": "Hi\nHow to create multiple pipelines with one single api request.\n<https://developers.HubSpot.com/docs/api/crm/pipelines>",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-01-31 08:04:28"
      },
      {
        "time_stamp": "2023-01-31 08:04:36"
      },
      {
        "time_stamp": "2023-02-01 03:30:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael",
      "poster_handle": "mdurnevich"
    },
    "time_stamp": "2023-01-31 05:45:33",
    "text": "Hey guys!\n\nWhen I try to re-run the webhook test in HubSpot, I get a 404 error in response. Any idea what this is related to?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-01-31 08:03:19"
      },
      {
        "time_stamp": "2023-01-31 08:03:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-01-31 07:38:41",
    "text": "Is there a way to elevate word matches over a partial word match in CMS search API?\nI’m querying a website with `dan` and the first result is a post title containing `Danger` while the second result is a post title with `Dan Smith`. I’d expect the second to display first :man-shrugging::skin-tone-2:",
    "reply_count": 4,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-01-31 08:04:57"
      },
      {
        "time_stamp": "2023-01-31 08:11:01"
      },
      {
        "time_stamp": "2023-01-31 08:25:07"
      },
      {
        "time_stamp": "2023-01-31 08:25:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 07:49:07",
    "text": "You don't need to do verification because the only way to send a request to a crm card serverless function is if you're authenticated into HubSpot with a crsf token and cookie"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:03:19",
    "text": "I would suggest running a test with <http://webhook.site|webhook.site> and make sure it's not something on your end"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:03:32",
    "edited": {
      "time_stamp": "2023-01-31 08:03:35"
    },
    "text": "you might need to expose your endpoint correctly"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:04:28",
    "text": "Unfortunately you currently can't with that api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:04:36",
    "text": "what's the use case?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:04:57",
    "text": "Oh that's interesting"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:11:01",
    "text": "running a couple of tests now"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:25:07",
    "text": "Thinking the best way to handle this is to add a space to the search query"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 08:25:15",
    "text": "Still testing though"
  },
  {
    "poster": {
      "poster_name": "Pascal Kremp",
      "poster_handle": "pascal558"
    },
    "time_stamp": "2023-01-31 08:48:03",
    "edited": {
      "time_stamp": "2023-01-31 08:48:13"
    },
    "text": "Hey all, I was trying to associate a deal with a company.\n\nSide note: <https://github.com/HubSpot/sample-workflow-custom-code/blob/main/samples/subscription_deal.js|This example> is pretty outdated :smile:\n\nSo I am about to do this:\n\n```const dealId = 100;\nconst toObjectType = \"toObjectType\";\nconst toObjectId = 100;\nconst AssociationSpec = [\n  {\n    \"associationCategory\": \"HubSpot_DEFINED\",\n    \"associationTypeId\": 0\n  }\n];\n\ntry {\n  const apiResponse = await HubSpotClient.crm.deals.associationsApi.create(dealId, toObjectType, toObjectId, AssociationSpec);```\nSource: <https://developers.HubSpot.com/docs/api/crm/deals|Here>\n\nFor me everything is clear but `associationTypeId` . How can I get this value?\n\nI can’t find the documentation about naming conventions for `objectTypes` and `typeIds` .",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-01-31 08:53:26"
      },
      {
        "time_stamp": "2023-01-31 09:00:18"
      },
      {
        "time_stamp": "2023-01-31 09:00:44"
      },
      {
        "time_stamp": "2023-01-31 09:01:08"
      },
      {
        "time_stamp": "2023-01-31 09:05:48"
      },
      {
        "time_stamp": "2023-02-01 04:21:23"
      },
      {
        "time_stamp": "2023-02-15 22:11:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Pascal Kremp",
      "poster_handle": "pascal558"
    },
    "time_stamp": "2023-01-31 08:53:26",
    "text": "Figured it out by clicking edit on the default associations created by HubSpot and copying it from URL… But isn’t there a better way to find these ids? :smile: Somewhere these default IDs should be documented?"
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-01-31 09:00:18",
    "text": "<https://legacydocs.HubSpot.com/docs/methods/crm-associations/crm-associations-overview>"
  },
  {
    "poster": {
      "poster_name": "Pascal Kremp",
      "poster_handle": "pascal558"
    },
    "time_stamp": "2023-01-31 09:00:44",
    "text": "Thanks! You can only find this in legacy docs?"
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-01-31 09:01:08",
    "text": "only place I’ve been able to locate it"
  },
  {
    "poster": {
      "poster_name": "Pascal Kremp",
      "poster_handle": "pascal558"
    },
    "time_stamp": "2023-01-31 09:05:48",
    "text": "<@U034X9K26MD> thanks."
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-01-31 11:17:27",
    "text": "In our HubSpot account we have deals being created from an integration and the `closedate` field (which is of type date picker) is always at 23:59:59 UTC (such as `\"2022-08-14T23:59:59Z\"`)\n\nI created a custom object recently with a date picker field but when I try to create one with a timestamp at 23:59:59 it comes back with an error that it is not midnight.\n\nWhy can deal date pickers be 23:59:59 UTC but custom object date pickers can’t?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-01-31 11:18:20"
      },
      {
        "time_stamp": "2023-01-31 11:18:25"
      },
      {
        "time_stamp": "2023-01-31 11:18:37"
      },
      {
        "time_stamp": "2023-01-31 11:19:30"
      },
      {
        "time_stamp": "2023-01-31 11:19:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 11:18:20",
    "text": "Because you probably created a date field"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 11:18:25",
    "text": "not a date-time field"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 11:18:37",
    "text": "you can only create date-time fields through the api"
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-01-31 11:19:30",
    "text": "Ah, thank you."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 11:19:48",
    "text": "of course, let me know if you have any questions"
  },
  {
    "poster": {
      "poster_name": "Wilson Akira",
      "poster_handle": "wilson.akira"
    },
    "time_stamp": "2023-01-31 11:59:35",
    "text": "Hey all, can you tell if we have any roadmap for using enagamnet for webhooks or incremental apis?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-01-31 15:31:57"
      },
      {
        "time_stamp": "2023-02-01 05:37:02"
      },
      {
        "time_stamp": "2023-02-01 08:40:52"
      },
      {
        "time_stamp": "2023-02-01 09:08:28"
      },
      {
        "time_stamp": "2023-02-01 09:08:59"
      },
      {
        "time_stamp": "2023-02-01 09:11:23"
      },
      {
        "time_stamp": "2023-02-01 09:16:56"
      },
      {
        "time_stamp": "2023-02-01 09:18:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Isabela Nery",
      "poster_handle": "isabela.nery"
    },
    "time_stamp": "2023-01-31 12:28:17",
    "text": "Hey guys! o/\n\nIs there a parameter that I can use on <https://developers.HubSpot.com/docs/api/crm/contacts|the endpoint> GET *`/crm/v3/objects/contacts`* to list contacts so that the first to be listed are the most recently created contacts?\nSomething that works like a sort…\n\nI couldn’t find it on the documentation :/",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-01-31 13:19:53"
      },
      {
        "time_stamp": "2023-02-01 05:32:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-01-31 13:19:53",
    "text": "If you use POST *`/crm/v3/objects/contacts/search` you can sort by createdate with the following request body:*\n\n```{\n    \"sorts\": [\n        {\n            \"propertyName\": \"createdate\",\n            \"direction\": \"DESCENDING\"\n        }\n    ]\n}```"
  },
  {
    "poster": {
      "poster_name": "Marc Fowler",
      "poster_handle": "marc368"
    },
    "time_stamp": "2023-01-31 13:44:02",
    "text": "Thanks for the help Danny I'll see if I can find someone at HubSpot's end - if I do, I'll be sure to post here in case anyone else runs into the same problem"
  },
  {
    "poster": {
      "poster_name": "Cristóbal Parraguez",
      "poster_handle": "cparraguez"
    },
    "time_stamp": "2023-01-31 15:31:57",
    "text": "Hey, not sure if this is helpful for you or not but Make as a \"watch engagements\" trigger that brings you all engagements that happened over X period of time"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-01-31 15:34:44",
    "text": "Does anyone know if there’s a way to assign a HubSpot Content Type to an external webpage for the purposes of analytics and events tracking? For example: assigning a content type of `BLOG` to blog posts on an externally-hosted site, so you can filter events by “users who started their most recent session on a blog post.” I know you can pass `hs_content_type` or `hs_asset_type` as a property in a custom behavioral event, but I don’t think that quite covers the use case I’m looking for.\n\nI have a very hazy memory of some resource mentioning this capability being present in the Tracking Code API, but I can’t seem to track down any mention of it right now. At this point, I’m wondering if I might have just dreamed it. :sweat_smile: Any leads?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-01-31 18:54:40",
    "text": "Hello all :wave:\n\nHubSpot launched a standard \"Invoice\" object used by some integrations (i.e. Quickbooks) but announced the sunset of the <https://developers.HubSpot.com/docs/api/crm/extensions/accounting|Accounting Extension API>. In the guide to <https://developers.HubSpot.com/docs/api/migrate-an-existing-account-extension-integration|migrate an existing Accounting Extension API integration> they mention to use the CRM Cards API, but don't mention the object \"Invoice\". So, my understanding is, if I want to integrate an accounting software wth HubSpot, I will need to create a custom object \"Invoice\" even though HubSpot has one somewhere that is not accessible through public api\n\nThanks for your help. :pray:",
    "reply_count": 23,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-01-31 18:56:02"
      },
      {
        "time_stamp": "2023-01-31 18:56:14"
      },
      {
        "time_stamp": "2023-01-31 18:58:55"
      },
      {
        "time_stamp": "2023-01-31 18:59:08"
      },
      {
        "time_stamp": "2023-01-31 18:59:12"
      },
      {
        "time_stamp": "2023-01-31 18:59:20"
      },
      {
        "time_stamp": "2023-01-31 18:59:28"
      },
      {
        "time_stamp": "2023-01-31 19:01:27"
      },
      {
        "time_stamp": "2023-01-31 19:02:00"
      },
      {
        "time_stamp": "2023-01-31 19:02:11"
      },
      {
        "time_stamp": "2023-01-31 19:02:19"
      },
      {
        "time_stamp": "2023-01-31 19:02:39"
      },
      {
        "time_stamp": "2023-01-31 19:02:44"
      },
      {
        "time_stamp": "2023-01-31 19:02:51"
      },
      {
        "time_stamp": "2023-01-31 19:04:04"
      },
      {
        "time_stamp": "2023-01-31 19:05:00"
      },
      {
        "time_stamp": "2023-01-31 19:05:32"
      },
      {
        "time_stamp": "2023-01-31 19:05:47"
      },
      {
        "time_stamp": "2023-01-31 19:15:41"
      },
      {
        "time_stamp": "2023-01-31 19:15:47"
      },
      {
        "time_stamp": "2023-01-31 19:15:58"
      },
      {
        "time_stamp": "2023-01-31 19:17:40"
      },
      {
        "time_stamp": "2023-01-31 19:18:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 18:56:02",
    "text": "Invoice is a publicly accessible object, object type 0-53, don't know if you can write to it (75% sure you can) but you can definitely read from it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 18:56:14",
    "text": "Running a write test now"
  },
  {
    "text": "hmm if it is public it is not mention in the doc:",
    "time_stamp": "2023-01-31 18:58:55"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 18:59:08",
    "text": "Running a couple of tests now"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 18:59:12",
    "text": "just to double check"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 18:59:20",
    "text": "there are actually 120 HubSpot objects"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 18:59:28",
    "text": "very few are mentioned in the docs"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-01-31 19:01:27",
    "text": "So you just follow endpoint url structure? something like:\n\nGET*`/crm/v3/objects/0-53/{invoiceId}`*\n\nand\n\nPOST*`/crm/v3/objects/0-53`*"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:02:00",
    "text": "Yes but I'm getting this error when I do that:\n```{\n    \"status\": \"error\",\n    \"message\": \"The scope needed for this API call isn't available for public use. If you have questions, contact support or post in our developer forum.\",\n    \"correlationId\": \"815fea24-f971-41d0-aacb-a1f140791e9b\",\n    \"links\": {\n        \"support\": \"<https://help.HubSpot.com/>\",\n        \"forum\": \"<https://community.HubSpot.com/t5/APIs-Integrations/bd-p/integrations>\"\n    },\n    \"category\": \"MISSING_SCOPES\"\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:02:11",
    "text": "didn't use the get this error"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:02:19",
    "text": "I was using Hapikeys then though"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:02:39",
    "text": "I think the docs are talking about getting the invoices from quickbooks not from HubSpot"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:02:44",
    "text": "using the quickbooks api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:02:51",
    "text": "and displaying the data using a custom card"
  },
  {
    "text": "Yes the thing is I want to integrate another accounting software and Invoice object seems limited to Quickbooks only at the moment:",
    "time_stamp": "2023-01-31 19:04:04"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:05:00",
    "text": "Which software? we might be able to build out a card for it"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-01-31 19:05:32",
    "text": "Acumatica"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:05:47",
    "text": "Oh I know that one"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:15:41",
    "text": "I just read through the docs and think it would be pretty difficult to connect acumatica and HubSpot, acumatica doesn't really have a great api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:15:47",
    "text": "or documentation for that matter"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:15:58",
    "text": "Just read through a PDF and could really find what I needed"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-01-31 19:17:40",
    "text": "yes I am still exploring. Thanks for your help"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-31 19:18:11",
    "text": "of course, and I'll keep on trying to think about ways to make this work. Hopefully meeting with the payments team later this month"
  },
  {
    "poster": {
      "poster_name": "Janki Mistry",
      "poster_handle": "janki.mistry"
    },
    "time_stamp": "2023-02-01 00:14:14",
    "text": "<@U01QVR44MEY> but if I call APIs using postman without csrf token, it works. I just wanted to secure my APIs created for CRM card (a custom card I have created)."
  },
  {
    "poster": {
      "poster_name": "Grant Kennedy",
      "poster_handle": "grant370"
    },
    "time_stamp": "2023-02-01 00:27:58",
    "text": "Thanks!"
  }
]
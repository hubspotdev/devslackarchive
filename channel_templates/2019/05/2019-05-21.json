[
  {
    "poster": {
      "poster_name": "Aroop Kumar Bhupathiraju",
      "poster_handle": "aroop"
    },
    "time_stamp": "2019-05-21 03:20:08",
    "text": "I am trying to add a validation to email field in a HS Form. But the JS i am writing is not applying to the form. Same code when i write it in console, it is applying. But when the code is put in a JS file and is linked, then it is not applying on the HS form. Does anyone know why this is happening?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 05:40:21",
    "text": "Well if you don't use the link and image from the email version it likely will not track views and clicks"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 05:42:52",
    "edited": {
      "time_stamp": "2019-05-21 05:43:26"
    },
    "text": "You don't need to use the cta email code verbatim but you should be using that for emails. The version for websites uses JavaScript to get data. JavaScript can't be used in email"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:28:55",
    "text": "Just to clarify, what do you mean by 'email version'?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 19:29:26",
    "text": "the CTA code that gets outputted in emails is different from the CTA code for websites"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:36:15",
    "edited": {
      "time_stamp": "2019-05-21 19:36:20"
    },
    "text": "Ah yes I see that now!\n\n`{% cta guid=\"{{ module.cta_field }}\" %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 19:36:56",
    "text": "thatâ€™s the HubL, the outout of that function differs for websites and emails"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:36:57",
    "text": "Ok so it looks like I'll have to revert back to images for CTAs. I wish HubSpot would just output the generated URL and not the image."
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:37:50",
    "text": "Doesn't look like any way to simply grab a trackable CTA link from HubSpot."
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:39:18",
    "text": "I assume that if I paste this into the button template code -\n\n```<https://cta-image-cms2.HubSpot.com/ctas/v2/public/cs/ci/?pg=6027de94-d23f-43fb-8a9b-3608471e2fc2&amp;pid=0000000&amp;ecid={{encrypted_contact_id}}&amp;hseid={{email_campaign_id}}&amp;hsic={{impersonated_contact}}>```\n\nIt won't automatically generate the correct IDs?"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:39:38",
    "text": "Where `0000000` would be the HubSpot account ID"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 19:40:03",
    "text": "it may but the pid will be wrong"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:40:18",
    "text": "I know the ID of the HubSpot install"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:40:23",
    "text": "I'm just not sharing it :wink:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 19:40:49",
    "text": "ahh thought you pasted it not obfuscated it"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:41:55",
    "text": "I'll give that a go then. At least I can hardcode everything and use `{{ module.cta_field }}` to output the pg code based on the client's choice."
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 19:42:10",
    "text": "I just need a CTA field in that case!"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:20:28",
    "text": "That's odd, if I preview an email, the CTA code also has the two lines of javascript."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 20:21:27",
    "text": "send yourself the email"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:22:07",
    "text": "Yeah it's ok, it only shows it when I inspect the code when previewing the module, not the email."
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:22:14",
    "text": "All good :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:22:26",
    "text": "PS. Your help on Slack is really appreciated Jon :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:22:29",
    "text": "Thank you so much"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-21 20:22:37",
    "text": ":thumbsup::skin-tone-2:"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:22:54",
    "text": "I'm a typical 'should read the manual' person."
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:25:35",
    "edited": {
      "time_stamp": "2019-05-21 20:26:32"
    },
    "text": "Boom tracking works! Now can I store this URL in a global variable or a macro and pass along the CTA value `{{ module.cta_shop_online }}`"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:28:06",
    "text": "So -\n\n```{{ global_cta_url value=\"{{ module.cta_shop_online }}\" }}```\n\nAnd the variable would contain -\n\n`<https://url.com/?pg=>{{ value }}`"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:44:31",
    "text": "Macros!\n\n```{% macro id(cta_id) %}\n    <https://cta-image-cms2.HubSpot.com/ctas/v2/public/cs/ci/?pg={{> cta_id }}&amp;pid=0000000&amp;ecid={{encrypted_contact_id}}&amp;hseid={{email_campaign_id}}&amp;hsic={{impersonated_contact}}\n{% endmacro %}```\n\nAnd call the macro with -\n\n```{% import 'path_to/cta_url_macro.html' as cta_id %}\n{{ cta_id.id('{{ module.cta_shop_online }}') }}```"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 20:44:42",
    "text": "I'll see if that does the trick"
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-05-21 21:27:13",
    "text": "w00t works!"
  }
]
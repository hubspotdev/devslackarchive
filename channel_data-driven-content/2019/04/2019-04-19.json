[
  {
    "poster": {
      "poster_name": "Justin",
      "poster_handle": "justin145"
    },
    "time_stamp": "2019-04-19 06:20:58",
    "text": "Is there a way to populate cell with a bunch of url’s that are comma separated? So I’d be able to loop through the items? Like a multi select (supports an array/list) except not having to define choices prior to uploading a .csv. The goal being to be able to make an image gallery per row without having to have multiple image columns that hold a single image.",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-19 07:05:00"
      },
      {
        "time_stamp": "2019-04-19 07:17:13"
      },
      {
        "time_stamp": "2019-04-19 07:33:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-04-19 07:05:00",
    "text": "That’d be awesome. Currently, the  ways to do this are a bit user unfriendly. You’d have to use one of the following methods\n\n1. make a column where users would input multiple urls (manually retrieve/copy/paste each image address) that are comma separated.\n\nThen, you could convert that string into an array (something like `urls_string|split(',')`) and loop through it. However, you would have to get hacky with alt tags in another column.\n\n2. A better/but still not ideal way is to use a foreign table as a row’s image gallery. Create an image column and an alt tag column. The drawback is you’d have to create a table for each row. If you have over 10 or 20 rows, then I’d use the first hack."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-04-19 07:17:13",
    "text": "Links This? `[URL,URL,URL,URL]`"
  },
  {
    "poster": {
      "poster_name": "Justin",
      "poster_handle": "justin145"
    },
    "time_stamp": "2019-04-19 07:33:19",
    "text": "Gotcha Thanks"
  },
  {
    "poster": {
      "poster_name": "Mustapha Aoussar",
      "poster_handle": "mustapha.aoussar"
    },
    "time_stamp": "2019-04-19 10:37:54",
    "text": "Hi!\nI have a problem with HubDB urls. I added a dynamic pages module in homepage that displays events and I linked their detail to events page.\n\nModule 1:\n```\n{% if dynamic_page_hubdb_row %}\n\t// no code here\n{% elif dynamic_page_hubdb_table_id %}\n\t// list events to display in /homepage and in /events page\n\t{% for row in table %}\n\t&lt;div class=\"item\"&gt;\n\t\t&lt;h1&gt;{{ row[\"hs_name\"] }}&lt;/h1&gt;\n\t\t&lt;a href=\"events/{{ row.hs_path }}\"&gt;Read more&lt;/a&gt;\n\t&lt;/div&gt;\n\t{% endif %}\n{% endif %}\n```\n\nIn events page I added another module based on the same hubDB table which displays events list and their detail:\nModule 2:\n```\n{% if dynamic_page_hubdb_row %}\n\t// detail to display in another page\n\t// url will be /events/event-name\n{% elif dynamic_page_hubdb_table_id %}\n\t// list events to display in /homepage and in /events page\n\t&lt;a href=\"events/{{ row.hs_path }}\"&gt;Read more&lt;/a&gt;\n{% endif %}\n```\n\nThe problem is that Google indexes two URLS\n<https://www.example.com/event-title> &lt;&lt;&lt;&lt;&lt; this one doesn't exist and returns 404 because events detail is in events page\n<https://www.example.com/events/event-title>"
  }
]
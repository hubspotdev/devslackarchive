[
  {
    "poster": {
      "poster_name": "Antoine Ravet",
      "poster_handle": "aravet"
    },
    "time_stamp": "2023-01-26 02:26:21",
    "text": "Itâ€™s fixed, thanks a lot"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:07:49",
    "text": "same! this is going to be awesome! this also reminds me of how i used to use dynamics workflow triggers using a lookup field. basically it is a property where instead of a user you could use a single field to create a M:1  relationship to a specific object of a different entity. (creating this field would automaticallly create the M:1 association between the two objects)\n\nhow i would use this is say for something like SLA's. if I had an object called \"Task Types\" i could use a lookup field on, let's say a ticket. my ticket had a lookup property called \"Task Type\" where i could select a specific record, and using that workflow i could reference all of the other properties that were part of the Task Type record i selected.\n\nso my ticket would be simple looking, with one field to select.  in the background though, i had more or less a configuration table that held all different types of properties that dictated the rules for a number of different workflows that could run whenever individual task types were updated on a ticket, such as SLA, default owners, even optionset fields which triggered other child workflows.\n\nIn other words: the a simple TICKET  workflow could look something like this:\n\nwhen ticket.tasktype is updated\nupdate ticket.SLA property based on tasktype.SLA\n\npossibilities to use custom objects as configuration tables were pretty much endless"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:10:40",
    "text": "in order to replicate that functionality above in HubSpot, we sometimes will use a HubDB table that has a key value pair that matches to an optionset internal value and write a CCW to pull back configurations related to the optionset on change of that property.  it would be nice not to need development for this kind of task"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:12:22",
    "text": "i would almost go so far as to say dont even use custom objects, just allow a lookup field directly to any HubDB table and make HubDB also part of opshub"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:12:41",
    "text": "just to avoid the mess of associations"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:13:02",
    "text": "Interesting"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:13:54",
    "text": "same way that hubdb allows for flexible websites, hubdb could also allow for flexible workflow configurations and keeping master data in a secure place where it can be managed"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:14:21",
    "text": "and also mobile apps if you went that route.."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:14:52",
    "text": "This is getting a little out of hand, where did the mobile apps come from?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:14:57",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:14:58",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:15:16",
    "text": "just another thing we used to do at my old company"
  },
  {
    "time_stamp": "2023-01-26 09:15:59",
    "text": "don't overwhelm them"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:16:23",
    "text": "i digress - sorry lol"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:16:35",
    "text": "No I like how think"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:16:56",
    "edited": {
      "time_stamp": "2023-01-26 09:19:31"
    },
    "text": "Little confused about the HubDB for workflow configs though..."
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:19:33",
    "text": "goal is to make a way to use value equals branches in a workflow not based on an object property, but the master data of what that property actually means"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:20:57",
    "text": "```HubSpot_owner_id\": {\n\"firstname\": \"Carter\",\n\"owner_id\": 236939644,\n\"email\": \"xxxxx\",\n\"lastname\": \"McKay\"\n\"SLA\" : \"5\"\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:21:18",
    "text": "pretend the user table was a hubDB Table and i added SLA as a column"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:21:32",
    "text": "you're saying you make a hubdb row for each owner?"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:21:41",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:22:09",
    "text": "Seems like a waste, you need to make an api call to get the hubdb table, or an api call to get the owners..."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:22:24",
    "text": "Definitely a ilttle more flexible to use hubdb"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:22:31",
    "text": "for things that don't have a list endpoint"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:22:34",
    "text": "not if it was a lookup field, and i wouldnt use it for owners"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:23:04",
    "text": "lookup field would replace the need for the custom code needed to make the api call just by making it accessible to an interface"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:24:30",
    "text": "Do you want to build out a custom action to connect to hubdb?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:24:37",
    "text": "I'd build it with you"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:26:16",
    "text": "```task_type_id\": {\n\"Priority\": \"High\",\n\"default_assignee_owner_id\": 236939644,\n\"task_type_name\": \"Sink Repair\",\n\"category\": \"Service\",\n\"SLA\" : \"5\"\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:26:43",
    "text": "i want to be able to create a property on any object in HubSpot that links to that hub db table with sample data above"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:26:46",
    "text": "```\"task_type_name\": \"Sink Repair\",```\n"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:27:22",
    "text": "and it should allow me to select any of the \"task_type_name\" rows from that table, like you would do in an optionset"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:27:33",
    "text": "its an optionset with attributes"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:28:06",
    "text": "and i want workflow actions that can reference those attributes when a value is assigned to the property"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-01-26 09:28:34",
    "edited": {
      "time_stamp": "2023-01-26 09:28:42"
    },
    "text": "Schedule an hour with me next week, we can build out a custom workflow action for this (not a custom code action)"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:29:11",
    "text": "awesome man!"
  },
  {
    "poster": {
      "poster_name": "Jeffrey DeAnna",
      "poster_handle": "jeffrey.deanna"
    },
    "time_stamp": "2023-01-26 09:29:15",
    "text": "will do"
  }
]
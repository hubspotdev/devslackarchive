[
  {
    "poster": {
      "poster_name": "Charles Boamah",
      "poster_handle": "cboamah"
    },
    "time_stamp": "2025-01-14 07:28:00",
    "text": "<@U07FRARFZS7> - Thanks for this feedback. I work on the CMS side of the product and don’t own the Sandboxes feature but it would be great to learn more about your Staging needs.\n\nWould you be open to walking me through your current and ideal workflows?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2025-01-14 07:44:42",
    "text": ":bulb: even wordpress has a bulk image gallery upload/select option. Creating an image gallery with repeaters is a PAIN. Can someone take one of the few good things left about wordpress and make a image/media gallery field that returns an array of media objects?",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2025-01-14 08:22:45"
      },
      {
        "time_stamp": "2025-01-14 08:54:38"
      },
      {
        "time_stamp": "2025-01-14 18:15:05"
      },
      {
        "time_stamp": "2025-01-14 18:26:24"
      },
      {
        "time_stamp": "2025-01-14 18:27:05"
      },
      {
        "time_stamp": "2025-01-14 18:40:06"
      },
      {
        "time_stamp": "2025-01-27 12:18:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aleksandar Perisic",
      "poster_handle": "fizikaneri"
    },
    "time_stamp": "2025-01-14 08:08:22",
    "edited": {
      "time_stamp": "2025-01-14 08:14:15"
    },
    "text": "<@U03U053QC72> this would be a long story but let's try:\nThe problem with the current staging is we need to work page per page, so lets say we want to copy a page but want to re-code the module in this case we need to create `new module` and then add changes to it, because extending `old module`  would do the changes to LIVE also/\n• I did try API to copy Page to Stage and it works (did have a couple of conflicts for Modules, where module got different ID not sure why) \nIdeal workflow with short history as I worked with WordPress for more than 15 years,  is WPEngine created) revolution with staging environments directly in hosting  (2010+ `1-Click staging`, then 2018+ `Staging` you control in WP Engine dashboard)\n*How it works:*\n    ◦ User can copy Live website (database/files/everything) into Stage \n*Detailed:*\n• Live website >  Copy to *Stage1* (then work on *Stage1*)\n    ◦  when happy with all changes > Publish all changes (Files/Plugins/Database)  Stage1 > Copy to Live\n*Challenges:*\n• Problem cases with eCommerce where you have orders/refunds that are happening and you are doing a website redesign\n    ◦ so one solution that worked in the WordPress world is that we edit only FILES (modules, templates, plugins) but not the Database (as Live and Stage share the LIVE database) so when you push files  back to LIVE it all works\n*Big leap forward without bi-directional SYNC (Live <> Stage)*  :rocket:\nBig help in any case (Normal/Big Website/eCommerce) is at least:\n• that we can Clone of the current *Live website* into *Stage website* (Files (modules/templates/assets)/Database)"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2025-01-14 08:22:45",
    "text": "+ don't forget to add this field to hubdb too, would be super helpful"
  },
  {
    "poster": {
      "poster_name": "Charles Boamah",
      "poster_handle": "cboamah"
    },
    "time_stamp": "2025-01-14 08:27:47",
    "text": "Thanks so much for sharing Aleksandar; this is helpful.\n\nJust like you’ve pointed out, we (Content Hub/CMS) also see risks with the two-way sync for content but we are actively working on the production to staging sync that you described. As a first step, we think that the production to staging sync followed by a Github or CLI upload of your module/theme/template files to production could alleviate some of the pain of manually copying/rewriting content for testing.\n\nWe’re still early in development but would you be open to beta testing this in the future?"
  },
  {
    "poster": {
      "poster_name": "Aleksandar Perisic",
      "poster_handle": "fizikaneri"
    },
    "time_stamp": "2025-01-14 08:31:03",
    "text": "Yes, would be interested in betas\n• I think <@U07E06AP78Q> would also be interested in it "
  },
  {
    "poster": {
      "poster_name": "Savion Smith",
      "poster_handle": "savion"
    },
    "time_stamp": "2025-01-14 08:31:40",
    "text": "Hi! Yes! Very much so. Thank you for the inclusion <@U07FRARFZS7> !"
  },
  {
    "poster": {
      "poster_name": "Aleksandar Perisic",
      "poster_handle": "fizikaneri"
    },
    "time_stamp": "2025-01-14 08:54:38",
    "text": "Oh yes! + for this"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2025-01-14 18:15:05",
    "text": "John, what about a chrome extension?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2025-01-14 18:26:24",
    "text": "lol I just made one today"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2025-01-14 18:27:05",
    "text": "Great minds! I’ll share it soon!"
  },
  {
    "text": "A file manager chrome extension. Lets users bulk copy file ids and then we can utilize `files_by_ids()` in a module",
    "time_stamp": "2025-01-14 18:40:06"
  }
]
[
  null,
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2018-09-20 03:46:50",
    "edited": {
      "time_stamp": "2018-09-20 03:48:13"
    },
    "text": "Has anyone worked in getting an email template built so you’re able to build out rows like a repeater field pulling in available modules to create a different look on emails being sent out?\n\n(looking for client to build out templates with the ability to change the look / order of an email without having to code.)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-09-20 07:53:45"
      }
    ]
  },
  {
    "text": "Hi Guys, do yu know what's the right hubl for related post? I want to filter a specific category I want to implement this design from <https://blog.HubSpot.com/marketing/pillar-page-examples>",
    "time_stamp": "2018-09-20 05:03:35",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-09-20 07:54:59"
      },
      {
        "time_stamp": "2018-09-20 07:55:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Angelic Sanoy",
      "poster_handle": "angie"
    },
    "time_stamp": "2018-09-20 05:06:34",
    "text": "Hi <@U2H3TT8F2>. I cannot the access the site? Can I have the updated link?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 07:53:45",
    "text": "I think there is a drag and drop builder in beta at the moment that does just this."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 07:54:59",
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-tags#blog-related-posts>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 07:55:35",
    "text": "also wrote up some examples on a post about this module here:\n<https://blog.wsol.com/in-beta-HubSpots-related-posts-tag-explained-and-extended>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 07:56:30",
    "text": "<https://blog.wsol.com/in-beta-HubSpots-related-posts-tag-explained-and-extended> (looks like URL was updated)"
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:04:18",
    "text": "Hi all, not sure if this is the right channel for this question.\n\nI am currently building out new website pages, and would like to use custom code for the body, while relying on global groups already built for the header/footer. My thought was to try and utilize a partial template where I could add all of my own html, and then link custom css stylesheets within the core template.\n\nMy issue is that I can’t seem to figure out how to add this new partial code template to my core template. Do I need to reference hubl in the html? If so, does anyone know how I would do this?\n\nSimply put, I want to link a (partial) html file to a drag and drop template so I can use prebuilt global groups for header/footer. How can I accomplish this?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:06:41",
    "text": "Have you thought of just using a custom module inside of a global group for the header/footer? Inside the CM you could then link CSS files and JS files as needed"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:08:34",
    "text": "If thats not an option, you might be able to use a CM and place a require_css and require_js call:\n`{{ require_css(get_public_template_url(\"/relative/path/to/file.css\")) }}`\n`{{ require_js(\"<http://example.com/path/to/footer-file.js>\", \"footer\") }}`\n`{{ require_js(\"<http://example.com/path/to/head-file.js>\", \"head\") }}`"
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:09:17",
    "text": "Thank you very much, I will bring this to my developer and see what he thinks."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:09:30",
    "text": "also, i believe this is to call the html file:\n`{{ get_public_template_url(\"custom/page/Designers_2015/designer-doc-2105.js\") }} `"
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:09:32",
    "text": "So in the new design manager, they don’t allow you to add custom code blocks anymore?"
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:09:45",
    "text": "Within a drag and drop template?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:09:51",
    "edited": {
      "time_stamp": "2018-09-20 08:10:48"
    },
    "text": "these functions should help:\n<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions>",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-09-20 08:10:26"
      },
      {
        "time_stamp": "2018-09-20 08:10:54"
      },
      {
        "time_stamp": "2018-09-20 08:11:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:10:05",
    "edited": {
      "time_stamp": "2018-09-20 08:10:28"
    },
    "text": "correct, in the new DMv2, \"HubL\" modules are no longer available"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:10:13",
    "text": "they are replaced by the CM's"
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:10:26",
    "text": "this link went to a 404"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-09-20 08:10:42",
    "text": "<@U38EZFVFE> even if I do this:\n\n```\n{% for item in menuItems %}\n  &lt;li&gt;\t{{item|map('id')}}&lt;/li&gt;\n{% endfor %}\n```\n\nI still get ALL the items in a single &lt;li&gt;\n\nI’m not sure how to iterate through it"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:10:54",
    "text": "fixed, forgot the \"s\""
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-20 08:11:02",
    "text": "you can still get an \"HTML\" module from the marketplace",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-09-20 08:12:47"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2018-09-20 08:11:03"
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:11:04",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:11:25",
    "text": "Got it, thank you."
  },
  {
    "poster": {
      "poster_name": "Danielle Shepherd",
      "poster_handle": "danielle"
    },
    "time_stamp": "2018-09-20 08:12:47",
    "text": "This is exactly what I was looking for. Thanks so much!!"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-09-20 09:04:36",
    "text": "<@U6GNQ7JBU> are there any resources that can show me how to iterate through a hashmap - specifically, the “Items” set?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-09-20 11:31:07",
    "text": "Show us the Code."
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-09-20 12:49:18",
    "text": "Sorry just saw this"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-09-20 12:49:24",
    "text": "```\n{% set json='{\"menu\": {\n    \"header\": \"SVG Viewer\",\n    \"items\": [\n        {\"id\": \"Open\"},\n        {\"id\": \"OpenNew\", \"label\": \"Open New\"},\n        null,\n        {\"id\": \"ZoomIn\", \"label\": \"Zoom In\"},\n        {\"id\": \"ZoomOut\", \"label\": \"Zoom Out\"},\n        {\"id\": \"OriginalView\", \"label\": \"Original View\"},\n        null,\n        {\"id\": \"Quality\"},\n        {\"id\": \"Pause\"},\n        {\"id\": \"Mute\"},\n        null,\n        {\"id\": \"Find\", \"label\": \"Find...\"},\n        {\"id\": \"FindAgain\", \"label\": \"Find Again\"},\n        {\"id\": \"Copy\"},\n        {\"id\": \"CopyAgain\", \"label\": \"Copy Again\"},\n        {\"id\": \"CopySVG\", \"label\": \"Copy SVG\"},\n        {\"id\": \"ViewSVG\", \"label\": \"View SVG\"},\n        {\"id\": \"ViewSource\", \"label\": \"View Source\"},\n        {\"id\": \"SaveAs\", \"label\": \"Save As\"},\n        null,\n        {\"id\": \"Help\"},\n        {\"id\": \"About\", \"label\": \"About Adobe CVG Viewer...\"}\n    ]\n\t\t}}'\n%}\n\n{% set hashMap = json|fromjson %}\n\n\n\n{% set menuItems = hashMap|map('items') %}\n&lt;ul&gt;\n{% for item in menuItems %}\n  &lt;li&gt;\t{{item|map('id')}}&lt;/li&gt;\n{% endfor %}\n&lt;/ul&gt;\n```"
  },
  null,
  null
]
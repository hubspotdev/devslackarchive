[
  null,
  null,
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-03 07:05:16",
    "text": "What error are you getting from this?"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 09:18:33",
    "text": "Heyo, i have an issue with a posts rendering that i cannot seem to figure out.  I have it set to only display items that have a topic that is equal to the the url path.  so for example <http://site.com/path|site.com/path> will display posts with topic “path”  It seems to work just fine for any new posts, but if you edit a post that has been previously been published to add the topic, it will not show up",
    "reply_count": 21,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-03 09:27:07"
      },
      {
        "time_stamp": "2018-10-03 14:12:57"
      },
      {
        "time_stamp": "2018-10-03 14:14:01"
      },
      {
        "time_stamp": "2018-10-03 14:14:15"
      },
      {
        "time_stamp": "2018-10-03 14:15:00"
      },
      {
        "time_stamp": "2018-10-03 14:15:23"
      },
      {
        "time_stamp": "2018-10-03 14:15:50"
      },
      {
        "time_stamp": "2018-10-03 14:16:06"
      },
      {
        "time_stamp": "2018-10-03 14:18:31"
      },
      {
        "time_stamp": "2018-10-03 14:25:02"
      },
      {
        "time_stamp": "2018-10-03 14:27:21"
      },
      {
        "time_stamp": "2018-10-03 14:27:28"
      },
      {
        "time_stamp": "2018-10-03 14:27:55"
      },
      {
        "time_stamp": "2018-10-03 14:28:47"
      },
      {
        "time_stamp": "2018-10-03 14:31:19"
      },
      {
        "time_stamp": "2018-10-03 14:34:04"
      },
      {
        "time_stamp": "2018-10-03 14:34:08"
      },
      {
        "time_stamp": "2018-10-03 14:34:14"
      },
      {
        "time_stamp": "2018-10-03 14:36:17"
      },
      {
        "time_stamp": "2018-10-03 14:37:46"
      },
      {
        "time_stamp": "2018-10-03 14:39:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 09:18:39",
    "text": "here is the code:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 09:18:43",
    "text": "```{% set blog_mediamention = blog_recent_posts('6072755849') %}\n{% set blog_press = blog_recent_posts('6073141986') %}\n\n{% set posts = (blog_mediamention + blog_press) | sort(true, false, 'publish_date')%}\n\n&lt;div class=\"container\"&gt;\n\t{% for post in posts %}\n\n  \t{% for topic in post.topic_list %}\n\n\t\t\t{% if  dynamic_page_hubdb_row.hs_path == topic.slug %}\n\t\t\t\t&lt;!-- content --&gt;\n                        \t\t\n\t\t\t\t{% if post.widgets.mmtitle.body.value %}\n\t\t\t\t&lt;!-- content --&gt;\n\t\t\t\t{% else %}\n\t  \t\t&lt;!-- content --&gt;\n        {% endif %}\n        &lt;!-- content --&gt;\n\t\t\t{% endif %}\n\t\t{% endfor %}\n\t{% endfor %}\n&lt;/div&gt;\n```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 09:19:02",
    "text": "removed content stuff to just show the logic"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 09:24:56",
    "text": "also, if this should be in a different channel, lmk :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 09:27:07",
    "edited": {
      "time_stamp": "2018-10-03 09:27:18"
    },
    "text": "dumb question but do those old posts actually have the path in the URL?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 12:34:36",
    "edited": {
      "time_stamp": "2018-10-03 12:40:27"
    },
    "text": "*Embarrassingly Basic HubL question:*\nI have a variable\n`{{job.job}}` that when pretty printed returns:\n```\n(PyMap: {id=5655043828, createdAt=1521737982123, 1='{type=string, value=Sr. Manager Ecommerce}', 5='{type=option, value={id=4, name='Retail'}}', 6='{type=option, value={id=14, name='Retail'}}', 7='{type=string, value=eCommerce}', 8='{type=string, value=SECM1591}', 9='{type=option, value={id=4, name='M4'}}', 10='{type=string, value=<https://client.com/hrPublic/JobDescriptions/zzzzzz.pdf>}'}) ```\n\nHow do I print the ID(5655043828)?\n\n`{{job.job.id}}` does not work, and `{{job.job|selectattr(\"id\")}}` returns\n ```(ArrayList: [{id=4, name='M4'}, {id=14, name='Retail'}])```\n(again that’s it pretty printed)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-10-03 12:36:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 12:36:54",
    "edited": {
      "time_stamp": "2018-10-03 12:37:28"
    },
    "text": "`{{job.job.id}}` does not work, and `{{job.job|selectattr(\"id\")}}` returns ``` (ArrayList: [{id=4, name='M4'}, {id=14, name='Retail'}]) ``` (again that’s it pretty printed"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-03 12:44:49",
    "edited": {
      "time_stamp": "2018-10-03 12:45:06"
    },
    "text": "I think `job['id']` should work",
    "reply_count": 20,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-10-03 12:45:33"
      },
      {
        "time_stamp": "2018-10-03 12:45:37"
      },
      {
        "time_stamp": "2018-10-03 12:45:59"
      },
      {
        "time_stamp": "2018-10-03 12:48:51"
      },
      {
        "time_stamp": "2018-10-03 12:49:28"
      },
      {
        "time_stamp": "2018-10-03 12:50:27"
      },
      {
        "time_stamp": "2018-10-03 12:53:02"
      },
      {
        "time_stamp": "2018-10-03 12:55:45"
      },
      {
        "time_stamp": "2018-10-03 13:00:57"
      },
      {
        "time_stamp": "2018-10-03 13:01:16"
      },
      {
        "time_stamp": "2018-10-03 13:03:02"
      },
      {
        "time_stamp": "2018-10-03 13:05:05"
      },
      {
        "time_stamp": "2018-10-03 13:05:07"
      },
      {
        "time_stamp": "2018-10-03 13:07:52"
      },
      {
        "time_stamp": "2018-10-03 13:09:03"
      },
      {
        "time_stamp": "2018-10-03 13:10:12"
      },
      {
        "time_stamp": "2018-10-03 13:11:43"
      },
      {
        "time_stamp": "2018-10-03 13:12:38"
      },
      {
        "time_stamp": "2018-10-03 14:14:58"
      },
      {
        "time_stamp": "2018-10-03 14:32:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-03 12:45:33",
    "text": "hmm maybe not"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 12:45:37",
    "text": "returns null :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 12:45:59",
    "text": "and 1, returned `Sr. Manager Ecommerce`"
  },
  {
    "poster": {
      "poster_name": "Theresa Weaver",
      "poster_handle": "theresa.weaver"
    },
    "time_stamp": "2018-10-03 12:48:51",
    "text": "did you try job.job[“id”]"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 12:49:28",
    "text": "yes it returned `Sr. Manager Ecommerce`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 12:50:27",
    "edited": {
      "time_stamp": "2018-10-03 12:51:05"
    },
    "text": "lol I’m glad I’m not the only one going…“how the heck do I do this?” Was starting to feel dumb."
  },
  {
    "poster": {
      "poster_name": "Theresa Weaver",
      "poster_handle": "theresa.weaver"
    },
    "time_stamp": "2018-10-03 12:53:02",
    "edited": {
      "time_stamp": "2018-10-03 12:53:39"
    },
    "text": "are you grabbing this data from a HubDB or setting the variable yourself? might be a dumb question, still new at this :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 12:55:45",
    "text": "hard to explain exactly but the data is pulled from a HubDB - my boss generated an array out of it to create structured data that makes it significantly easier to render data in the organized fashion the client wanted.\n\nI can’t ask him right now as he’s currently busy."
  },
  {
    "text": "line 123 is what I’m trying to get working",
    "time_stamp": "2018-10-03 12:59:27"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 13:00:57",
    "text": "posted the full code in the post below."
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-03 13:01:16",
    "text": "Can you try `job.hs_id`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 13:03:02",
    "edited": {
      "time_stamp": "2018-10-03 13:03:46"
    },
    "text": "I owe you a beer, that worked! Thank you a ton <@U26B530N6>"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-03 13:05:05",
    "text": ":beer:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 13:05:07",
    "edited": {
      "time_stamp": "2018-10-03 13:05:26"
    },
    "text": "if you’re willing and know, can you explain why the `hs_` is needed? just like to know so I understand for the future."
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-03 13:07:52",
    "text": "I don’t know why, and has me wondering if it’s hidden for a reason. <@U6GNQ7JBU> is `hs_id` immutable?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-03 13:09:03",
    "text": "`hs_id` is a reserved field."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 13:10:12",
    "text": "seems interesting though because I would think that when you pretty print that pymap that it would say `hs_id` instead of just `id`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-03 13:11:43",
    "text": "Can you print out the keySet?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 13:12:38",
    "edited": {
      "time_stamp": "2018-10-03 13:13:29"
    },
    "text": "I can… but I don’t know how to lol, or I know how but don’t understand your meaning"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 13:25:21",
    "text": "Related to the prior conversation about this wicked data structure.\n<@U6GNQ7JBU> <@U26B530N6> is it possible when the data is pretty printed to show `hs_id` instead of `id`?\n\nI understand the need for it to be a HS reserved thing, it’s just a real weird thing especially when you pretty print the data and it’s not exactly what you’re seeing printed."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:12:57",
    "edited": {
      "time_stamp": "2018-10-03 14:14:04"
    },
    "text": "<@U7SL518D6>, yeah.  should have mentioned that this code is in a module that i have added to a hubdb dynamic page.  so the path is always the same"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 14:14:01",
    "text": "so the posts are not blog posts, they are rows in a HubDB? is that what you’re saying?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:14:15",
    "text": "the posts are blog posts"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-03 14:14:58",
    "text": "`job.items()` will output these. I’m still not sure why the key are named differently though"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:15:00",
    "text": "hold and i will give you alink"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:15:23",
    "text": "<http://www-averon-com.sandbox.hs-sites.com/about-us/lea-tarnowski>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:15:50",
    "text": "the bio content is all in the hubdb"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:16:06",
    "text": "and at the bottom, it pulls relevant posts from various blogs"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:18:31",
    "text": "does that make sense?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 14:25:02",
    "text": "What you’re saying makes sense.\n\nCan you link to one of the old posts that is not displaying? (will just help understand more of what’s going on)"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:27:21",
    "text": "sadly, no.  I gave up on it.  added a text widget to the blogs posts so they have to type in the url.  replaced ```{% if  dynamic_page_hubdb_row.hs_path == topic.slug %}```  with ```{% if  dynamic_page_hubdb_row.hs_path == post.widgets.textfield.body.value %}```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:27:28",
    "text": "which worked"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:27:55",
    "text": "just sad about not being about to use the topic field.  reduced the possibility of user error"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:28:47",
    "text": "was just hoping someone had experienced  the same issue and had a fix or just said, “yeah, you cant do that”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 14:31:19",
    "text": "well glad you found a work-around.\n\nI think what you were trying to do likely had a relatively simple solution but we’d have had to see a lot more of your code to drill down to the bottom of it."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 14:32:25",
    "edited": {
      "time_stamp": "2018-10-03 14:32:37"
    },
    "text": "`{{job.job.items()}} ` returns ```[hs_id=5718502653, job_description_link=<https://client.com/hrPublic/JobDescriptions/VICE0598.pdf>, level={id=2, name='M2'}, job_family={id=2, name='Executive, Legal &amp; Business Support'}, hs_created_at=1524240315404, hs_dynamic_route_table_id=0, job_code=VICE0598, job_sector={id=1, name='Business Services'}, job_title=VP Public Policy &amp; Board Relations, job_focus=Executive &amp; Legal] ```\n\n(the values are different because it’s from another item in the hubDB than the previous ones, still the same data structure)\nI see that it is saying hs_id here."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:34:04",
    "text": "hmmm.  perhaps.  just weird that it only happened with previously published posts.  updating them with the topic did not add them to the loop.  you would think that it would be pretty black and white.  works for all or not."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:34:08",
    "text": "such is life"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:34:14",
    "text": "thanks for chatting"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 14:36:17",
    "edited": {
      "time_stamp": "2018-10-03 14:37:08"
    },
    "text": "I mean, what it looked like you were trying to do basically was what this HubL function does for you:\n`{{ blog_recent_topic_posts('blog name or id', 'topic name', 5 ) }}` the 5 being the number of posts in that topic and in that blog, that you want to pull.\n<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#blog-recent-topic-posts>\n\nAnd it looked like you were pulling the “path” or topic from your HubDB, so you’d just set that to a variable and then use the variable in the function as the topic name"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:37:46",
    "text": "that seems about right"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-03 14:39:07",
    "text": "didnt think to make a variable out of the topic."
  },
  null,
  {
    "text": "is video a reserved word or something?",
    "time_stamp": "2018-10-03 14:57:43"
  },
  {
    "poster": {
      "poster_name": "Andy Mc",
      "poster_handle": "andy"
    },
    "time_stamp": "2018-10-03 15:01:31",
    "text": "sure enough.. I had all my columns starting with \"video_\" nothing was working. I changed to \"video-\" and got the message above. Removed video prefix for all columns and everything works."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-10-03 15:01:51",
    "text": "may be related to the new HS video service... just a hunch"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-03 15:24:13",
    "text": "<@U26BLKGE4> is correct the new video service generates a `video` hubl tag"
  },
  null,
  null
]
[
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-11-20 08:07:19",
    "text": "A few notes:\n• HubSpot forms render using react, which adds a virtual DOM layer over the html elements of the form. \n• Therefore, if you're trying to set values on a HS form via JS, you need to propagate a change event from the DOM to the virtual DOM\n    ◦ I wrote this a while back that shows/explains a bit: <https://gist.github.com/robertainslie/32d786d7254ec7bc6cbbff3d1e292cd4>\n    ◦ This script is used for trying to programmatically map data into a HubSpot form field. \n• Something I haven't tested and I would be wary of is writing the inline `data` attribute - I haven't ever tested doing that and if the HubSpot form ever has to re-render, I\"m not sure what it would do to your custom inserted attributes. \nAll told, you might be better off taking a different approach:\n• Create your own form and submit the data to HubSpot via the Forms API\n    ◦ <https://developers.HubSpot.com/beta-docs/reference/api/marketing/forms/v3-legacy>\n    ◦ A gist tutorial that covers grabbing/setting the `hutk` usertoken value for page tracking <https://gist.github.com/robertainslie/b110b8275beee1b27255c4d6e2ba2e8c>\n    ◦ You could use a JS framework, and, if this is on a HubSpot page, you could use CMS React - (<#C04AY1H2204|cms-react>) - <https://github.HubSpot.com/cms-react/>\n• Use a tool like Deposit Fix - <https://www.depositfix.com/HubSpot>\n• Use HubSpot's Commerce Hub features - <https://www.HubSpot.com/products/commerce>"
  },
  {
    "poster": {
      "poster_name": "Andres",
      "poster_handle": "andres.cisneros3"
    },
    "time_stamp": "2024-11-20 15:38:44",
    "edited": {
      "time_stamp": "2024-11-20 18:00:12"
    },
    "text": "Thanks so much for this <@UJJ239SC9>!\n\nI know your Gist is for mapping data to a HS form. Do you know if its possible to add an event listener to watch if a select dropdown changes, then to log the value of the option selected? As I'm not really looking to set values on the HS form but just listen to the values selected"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-11-20 15:39:41",
    "text": "I think you’d be using the `change` event listener on the select element "
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-11-20 15:42:03",
    "text": "Use `querySelector` to target the element, and then attach a change listener"
  },
  {
    "poster": {
      "poster_name": "Andres",
      "poster_handle": "andres.cisneros3"
    },
    "time_stamp": "2024-11-20 18:02:00",
    "edited": {
      "time_stamp": "2024-11-20 18:04:23"
    },
    "text": "Yes I got the event listener working, I didn't need to add a data-attribute for my solution but I'll test this later anyway. Thanks for the help again, your Gist helped me understand the limitations better"
  }
]
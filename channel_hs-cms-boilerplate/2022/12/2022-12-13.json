[
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 08:35:14",
    "text": "<@U7SL518D6> <@U0336QCR2FQ> hey guys, i was checking this thread, because i’m bulding a multi step from that requires to query data and then either create the contact or update it. If my Hubpspot account, doesn’t have serverless functions, can i integrate a server file to my react-cms module?"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 08:35:20",
    "text": "Thanks!!"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 11:26:21",
    "text": "<@U045GJFQQ20> Good question; I've just been getting around it by setting up a free (well, they got rid of it) server on Heroku to handle any of that stuff that needs authentication and just having React call it. I don't believe HubSpot has the preprocessing capability to handle a server file (depending on what it is of course) and process it....although, what is in your server file?"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 11:41:06",
    "edited": {
      "time_stamp": "2022-12-13 11:43:40"
    },
    "text": "it NodeJs, pure API calls, pretty simple but yes, HubSpot doesn’t allow it (store NodeJs files on the designer tool).  I’m going for the external server as well (might be Heroku or Digital Ocean). But i’m actually having trouble calling it from React. I’m using “fetch’ but it uses the url for the front-end when i call the route and it’s not even reading my localhost when running tests(also i was planning to deploy this server side under another domain)."
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 11:41:19",
    "text": "do  you have any recommendations on methods here?"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 11:41:38",
    "text": "It’s the first time i’m doing this, thanks!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-12-13 11:43:10",
    "text": "&gt; doesn’t have serverless functions, can i integrate a server file to my react-cms module?\nIf you don’t have serverless functions through CMS Hub you can see if you can implement the same logic using HubSpot workflows. If you have Ops Hub you can have custom coded actions, which are effectively serverless functions that run as part of a workflow."
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 11:44:40",
    "edited": {
      "time_stamp": "2022-12-13 11:46:20"
    },
    "text": "hey <@U7SL518D6> thanks ! the custom code inside workflows would work to send data to my cms page?"
  },
  {
    "poster": {
      "poster_name": "Glenn Cionek",
      "poster_handle": "gcionek"
    },
    "time_stamp": "2022-12-13 11:56:32",
    "text": "Hi Does anyone know if you can create a login portal using hubpost CMS?  currently i just have a partner portal page where whoever is signing in just has to put in a password w/ no user name associated with it….Was wondering if there was a more sophisticated way to do it",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-12-13 12:45:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Glenn Cionek",
      "poster_handle": "gcionek"
    },
    "time_stamp": "2022-12-13 11:56:32",
    "text": "<https://uncommonx.com/en-us/partnerportal>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-12-13 12:01:45",
    "text": "indirectly. You can modify HubSpot objects, hubdb etc there. Depending on what you’re trying to do you can then either at render time render it into the page, or if trying to make the front end reactive, you can poll for it using the hubdb api client <https://docs.google.com/document/u/1/d/e/2PACX-1vTuu12oFF4bQY1zVD2-WKFuM2dEDN81-fZRV1tGaCL5Z_OcjC-B6O3mHXR6chaq25BU1D2FuvKIjc49/pub>"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:04:23",
    "text": "No problem, sounds like you might be having a CORS error. Can you share your fetch code <@U045GJFQQ20>"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 12:13:30",
    "text": "`useEffect(()=&gt;{`\n    `fetch('/api').then(response =&gt;` \n      `response.json()). then(data =&gt; {setBackend(data); console.log(`this is ${backend}`)})`\n  `}, [])`     "
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 12:14:31",
    "text": "it’s very simple code, but the error on the console it’s not about CORS, but because it’s using as the route HOST the url from the page (the page is already published in HubSpot under the client’s domain)"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 12:15:17",
    "text": "on package.json inside the react-cms file i added a “proxy” : “http.//localhost:5000\""
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:15:47",
    "text": "in a meeting but once i'm out i'll reply back <@U045GJFQQ20>"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 12:17:20",
    "text": "Thanks a lot <@U0336QCR2FQ>!!! (the basic doubt is, how do i properly call the backend server from my react-cms page? :sweat_smile: it doesn’t seem to work like the regular or do i need them to be under the same domain...)"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:18:03",
    "text": "the obvious question is have you tried putting the full url into fetch() and seeing what that does"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 12:19:00",
    "text": "yes! it adds the content as a slug. Example: “<http://myclientsdomain.com/localhost:5000/api|myclientsdomain.com/localhost:5000/api>”"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:22:38",
    "text": "what if you remove that proxy call in package.json"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 12:33:16",
    "text": "same happens!"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:36:14",
    "text": "```useEffect(()=&gt;{\n\nlet testCall = fetch('<https://catfact.ninja/fact').then(info=>&gt;console.log(info))\n},[])```\nif you try this code, what happens"
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2022-12-13 12:45:14",
    "text": "this would be part of CMS Hub Enterprise, the Memberships feature"
  },
  {
    "text": "it seems to work! what’s the difference?",
    "time_stamp": "2022-12-13 12:46:57"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:49:32",
    "text": "I think webpack wants you to be verbose. The proxy I believe is telling webpack if it sees \"/api\" it'll append the base URL &amp; the proxy URL So if you try:\n\n```useEffect(()=&gt;{\n  fetch('<http://localhost:5000/api').then(response> =&gt; \n      response.json()). then(data =&gt; {setBackend(data); console.log(`this is ${backend}`)})\n},[])```"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:49:38",
    "text": "that should work...hopefully"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:50:06",
    "text": "might give a CORS error but if so that's okay"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 12:56:25",
    "text": "yes actually, the response i get now is 200, but i can’t console log the info because of the CORS error, but i can still access and print that data?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:58:13",
    "text": "for testing you'll need to use a CORS Anywhere server infront of the url : <https://caapt8.herokuapp.com/>\n\nso:\n\n```useEffect(()=&gt;{\n  fetch('<https://caapt8.herokuapp.com/http://localhost:5000/api').then(response> =&gt; \n      response.json()). then(data =&gt; {setBackend(data); console.log(`this is ${backend}`)})\n},[])```\nthat should get you the data"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 12:58:56",
    "edited": {
      "time_stamp": "2022-12-13 12:59:37"
    },
    "text": "I usually just push the local server to heroku or digital ocean as you said so we I don't have to deal with cors"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 14:44:18",
    "edited": {
      "time_stamp": "2022-12-13 14:46:50"
    },
    "text": "ah yeah it makes a lot of sense, and you had no problem calling HubSpot API from that file? Also, once you push it into Heroku, the server domain doesn’t have to be the same than the frontend does it? (obviously the frontend is deployed on HubSpot under that domain, and i was planning to use another domain for the server)"
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2022-12-13 14:44:39",
    "text": "Thank you so much by the way! ypu have helped a lot today! :pray:"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-12-13 15:41:06",
    "text": "1. nope the server domain doesn't have to be the same and you cna probably drop cors anywhere once its on a live site. you _may_ need to use cors anywehre but I don't think you have too. \nno worries, please don't hesitate to reach out with anymore questions!!"
  }
]
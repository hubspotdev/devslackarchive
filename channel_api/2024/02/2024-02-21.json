[
  {
    "poster": {
      "poster_name": "Paul",
      "poster_handle": "paul.buskovskij"
    },
    "time_stamp": "2024-02-21 02:27:59",
    "text": "Hello everyone,\n\nwhere can I find official documentation for quotes downloads.\nAbout my project: I am looking for a way to make several quote PDFs available as a ZIP for a contact within the members area.\n\nIs there already an official possibility?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-22 04:25:40"
      },
      {
        "time_stamp": "2024-02-22 09:20:09"
      }
    ]
  },
  {
    "text": "Same issue on the /crm/v3/lists endpoint (when trying to fetch all lists)\nBut when I try with an ILS list ID, it works. The memberships works well too",
    "time_stamp": "2024-02-21 02:31:46"
  },
  {
    "text": "",
    "time_stamp": "2024-02-21 02:32:21"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-02-21 06:56:25",
    "text": "oh yeah??!! love it!"
  },
  {
    "poster": {
      "poster_name": "Teddy Pottella",
      "poster_handle": "teddy866"
    },
    "time_stamp": "2024-02-21 10:55:57",
    "text": "Good morning friends, I'm having the following problem and so far I can't find a solution because I'm trying with the API to extract workflows from one account and insert them in another and despite extracting and copying faithfully the JSON of each element, sometimes I get this error \"FILTER_PROPERTY_TYPE_HAS_CHANGED\" and I don't understand why (having confirmed the types and filters before extracting them)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-02-22 05:43:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lucas Fraulin",
      "poster_handle": "lfraulin"
    },
    "time_stamp": "2024-02-21 11:20:46",
    "text": "Hi,\n\nI am currently trying to create a follow up task, and assign it to a task queue. The follow up task is being created and all fields correctly assigned/filled, but the task is not being added to the task queue. Heres my api call:\n\n```  url = HUBAPI_BASE_URL + \"engagements/v1/engagements\"\n\n    reminder_datetime = due_date - timedelta(hours=1)\n\n    payload = {\n        \"engagement\": {\n            \"active\": 'true',\n            \"ownerId\": owner_id,\n            \"type\": \"TASK\",\n            \"timestamp\": round(due_date.timestamp() * 1000)\n        },\n        \"associations\": {\n            \"companyIds\": [company_id],\n        },\n        \"metadata\": {\n            \"subject\": title,\n            \"priority\": priority,\n            \"hs_task_queue_ids\": [queue_id],\n            \"reminders\": [\n                round(reminder_datetime.timestamp() * 1000)\n            ],\n            \"sendDefaultReminder\": True\n        }\n    };```\n I’ve tried a couple different ways to add the task queue (not just the one above)\nDoes anybody know how to fix that with the *Engagement APIS* and the task queues?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 12:19:33",
    "text": "is it safe to create 300-400 blog posts using this batch API? *`/cms/v3/blogs/posts/batch/create`?*",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-21 12:46:59"
      },
      {
        "time_stamp": "2024-02-21 12:47:31"
      },
      {
        "time_stamp": "2024-02-21 12:47:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 12:33:20",
    "text": "also, is anyone familiar with the publishDate field and if there's a way that I can create a new blog post from an existing blog post as a draft and then publish it but maintain the original publish date?",
    "reply_count": 8,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-02-21 12:48:27"
      },
      {
        "time_stamp": "2024-02-21 12:54:30"
      },
      {
        "time_stamp": "2024-02-22 05:49:16"
      },
      {
        "time_stamp": "2024-08-01 11:49:12"
      },
      {
        "time_stamp": "2024-08-01 13:17:50"
      },
      {
        "time_stamp": "2024-08-01 13:18:56"
      },
      {
        "time_stamp": "2024-08-01 13:19:15"
      },
      {
        "time_stamp": "2024-08-01 13:19:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-02-21 12:46:59",
    "text": "From what I remember, can’t find the specific wording, but batches are limited to 100"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-02-21 12:47:31",
    "text": "But you can also try!\n\n(queue…livin’ on the edge!)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 12:47:56",
    "text": "thanks, I'll probably try to limit it to 100 just to be safe. I couldn't find a specific limit anywhere"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-02-21 12:48:27",
    "text": "I think you should be fine doing that but you would want to either update the blog post slug."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-02-21 12:54:30",
    "text": "ok, thanks, I guess this is something I can/should test"
  },
  {
    "poster": {
      "poster_name": "Cristóbal Parraguez",
      "poster_handle": "cparraguez"
    },
    "time_stamp": "2024-02-21 13:09:04",
    "text": "Any way to pull all goals and owners/assignees? I dont see any property that provides that info in the get goals endpoint and I tried to pull associations but no success there either :confused:"
  },
  {
    "poster": {
      "poster_name": "Issam Haddad",
      "poster_handle": "issam"
    },
    "time_stamp": "2024-02-21 15:24:00",
    "text": "Hello everyone,\nI'm integrating HubSpot's Marketing Event API into my app and need some help. I'm using the endpoint `/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create` to record attendance. If the contact isn't present, it's created.\n*Here's the issue*: When I provide input for the user's email and phone number for an existing user that was created before downloading my integration, the subscription state update the phone number. On the other hand it works fine for new contact.\n*Question*: Can I update an existing contact's phone number with this endpoint? Or do I need a different approach?\nYour insights would be appreciated. Thank you!"
  },
  {
    "poster": {
      "poster_name": "Yiz Segall",
      "poster_handle": "yiz.segall"
    },
    "time_stamp": "2024-02-21 23:20:37",
    "text": "are the get all under /crm/v3/objects/contacts or /crm/v3/objects/companies or /crm/v3/objects/deal or /crm/v3/objects/meetings not accurate? I've run bulk get associations from companies to deals and got 4116 results (looking at more than one company at a time), but when I go and get the details by doing /crm/v3/objects/deal/{id} I only get 800 results. Actually i use the bulk so it POST /crm/v3/objects/deals and then I have the ids in the req body.",
    "reply_count": 26,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-22 03:00:18"
      },
      {
        "time_stamp": "2024-02-22 03:10:09"
      },
      {
        "time_stamp": "2024-02-22 03:15:09"
      },
      {
        "time_stamp": "2024-02-22 03:21:35"
      },
      {
        "time_stamp": "2024-02-22 03:38:32"
      },
      {
        "time_stamp": "2024-02-22 03:47:58"
      },
      {
        "time_stamp": "2024-02-22 05:26:42"
      },
      {
        "time_stamp": "2024-02-22 07:07:35"
      },
      {
        "time_stamp": "2024-02-22 07:12:47"
      },
      {
        "time_stamp": "2024-02-22 07:14:05"
      },
      {
        "time_stamp": "2024-02-22 07:15:47"
      },
      {
        "time_stamp": "2024-02-22 07:17:35"
      },
      {
        "time_stamp": "2024-02-22 07:18:09"
      },
      {
        "time_stamp": "2024-02-22 07:19:08"
      },
      {
        "time_stamp": "2024-02-22 07:20:12"
      },
      {
        "time_stamp": "2024-02-22 07:20:21"
      },
      {
        "time_stamp": "2024-02-22 07:20:28"
      },
      {
        "time_stamp": "2024-02-22 07:21:15"
      },
      {
        "time_stamp": "2024-02-22 07:23:14"
      },
      {
        "time_stamp": "2024-02-22 07:36:05"
      },
      {
        "time_stamp": "2024-02-22 07:49:40"
      },
      {
        "time_stamp": "2024-02-22 07:53:13"
      },
      {
        "time_stamp": "2024-02-22 07:55:42"
      },
      {
        "time_stamp": "2024-02-22 07:55:56"
      },
      {
        "time_stamp": "2024-02-22 07:58:47"
      },
      {
        "time_stamp": "2024-02-23 07:14:23"
      }
    ]
  }
]
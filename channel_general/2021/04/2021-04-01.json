[
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-01 07:36:55",
    "text": "<@U2LEJ045D> <@UBT0AHWLD> "
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-01 07:37:55",
    "text": "Ooooppps I didn’t see that you were saying lady freelancers! Disregard!"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-01 07:38:09",
    "text": ":man-facepalming:"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2021-04-01 07:46:31",
    "text": "haha - thanks for the shout out <@UQWGKUEN7>"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2021-04-01 07:56:09",
    "text": "Is it possible to setup unique content types in HubSpot? Then using the search API pull those content types into a search result page? The use case is I have a company that wants to create legal content - and then have the search API only look at only that legal content -"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2021-04-01 07:56:17",
    "text": "has anyone solved something like this before?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-04-02 07:45:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2021-04-01 10:36:40",
    "text": "<@UBUNBSM24>"
  },
  {
    "poster": {
      "poster_name": "Amanda McIntosh",
      "poster_handle": "am.mcintosh1"
    },
    "time_stamp": "2021-04-01 13:48:36",
    "text": "<@UQWGKUEN7> Haha, we live in a bold new world of self-identification xD Plus, any new connection is a good connection!"
  },
  {
    "poster": {
      "poster_name": "Amanda McIntosh",
      "poster_handle": "am.mcintosh1"
    },
    "time_stamp": "2021-04-01 13:49:14",
    "text": "<@UMZFZHVUJ>! sent you a LinkedIn connection :slightly_smiling_face: Your web design and iconography work is :fire:!"
  },
  {
    "poster": {
      "poster_name": "Olia Gozha",
      "poster_handle": "olia"
    },
    "time_stamp": "2021-04-01 13:50:43",
    "text": "Thank you so much <@UDLS0CYPP> :blush:\nHope to bring some of that fire to HubSpot projects :grin:"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-01 15:10:11",
    "text": "<@UDLS0CYPP> More like I should just not read slack while in bed convincing myself to get up :slightly_smiling_face:"
  },
  {
    "text": "",
    "time_stamp": "2021-04-01 15:11:27"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford182"
    },
    "time_stamp": "2021-04-01 15:57:16",
    "text": "So using the new async option to load a CSS file… this breaks the loading of the file for IE11. Is there a solution for that?\n{{ require_css(get_asset_url(‘../css/filename.css’), { async: true }) }}"
  }
]
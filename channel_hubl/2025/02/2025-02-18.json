[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-02-18 06:48:18",
    "text": "`posts_per_listing_page` — So if you are ever curious on what is available you can click on the HubSpot menu when viewing the website page, and click “developer info” I don’t know how to actually access that because I can’t get chat gpt to read my massive blog listing page."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-02-18 07:02:26",
    "text": "I actually just made a public replit so I can paste in json and find the property I’m looking for\n\n<https://replit.com/@NickDeckerDevs/Find-Object-Property-from-large-JSON-object?v=1>\n\nI put the searchKey as `posts_per_listing_page` and it output\nPath to posts_per_listing_page: `content.parent_blog.posts_per_listing_page`\n\nSo inside the listing you should be able to `{{ content.parent_blog.posts_per_listing_page }}`"
  },
  {
    "poster": {
      "poster_name": "Justin",
      "poster_handle": "justin145"
    },
    "time_stamp": "2025-02-18 07:59:22",
    "text": "So that's sweet! Thank you so much for sharing that. `content.parent_blog.posts_per_listing_page` works perfectly"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2025-02-18 08:17:53",
    "text": "Hi, I'm having an issue with a blog listing template, and HubSpot support refuses to help because there's a custom module involved even though I'm 90% sure the issue is not with my module. Basically, on the tag-specific URLs (`/blog/topic/tag-slug`) the posts aren't coming through - but if I do any query string to the page they do populate as I expect. I also can see the posts as I'd expect in the developer info; it's also only some tags, and which tags it is changes when I make a change to the page. So the cached version of the page is missing the posts, but when you cache-bust it works as I'd expect (which is why I don't think it could have anything to do with my module). In the listing, the relevant part is basically this:\n```{% if contents|count &gt; 0 %}\n  {# Stuff to display the posts here #}\n{% else %}\n  {{ module.no_posts_message }}\n{% endif %}```\nAnd it shows the no posts message. I've also tried checking `contents.objects|count` and it doesn't seem to make a difference. Making changes sometimes changes _which_ tags don't populate, but I haven't gotten so they all populate yet. It's kind of hard to debug something and know if a change has done anything when the issue only occurs in the cached version of the page. Has anyone had an issue like this before? Am I missing something obvious?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2025-02-19 16:09:10"
      },
      {
        "time_stamp": "2025-02-19 18:02:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Catherine Chen",
      "poster_handle": "catherine876"
    },
    "time_stamp": "2025-02-18 15:19:06",
    "text": "<@U071D7GTMV3> I don't think there's a good solution.  I was told to use drag_drop_email as the template type and that did work, except the generated emails couldn't be edited.  Then I went on a back and forth spree with HubSpot support in which they were basically like \"this isn't possible content scaffolding doesn't support custom email templates\" :melting_face:"
  }
]
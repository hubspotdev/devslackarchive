[
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-18 08:37:40",
    "edited": {
      "time_stamp": "2019-04-18 08:37:49"
    },
    "text": "build a module using  ```{% for topic in content.topic_list %}{% if topic.name = ''Cool'' %}&lt;li&gt;content&lt;/li&gt;&lt;li&gt;content&lt;/li&gt; {%endif%}{%endfor%}```"
  },
  {
    "text": "I want to use this markup but tell it to ignore the MOST recent post, is there a way to do that? Most recent, excluding the very most... Thanks.",
    "time_stamp": "2019-04-18 09:58:12",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-04-18 10:00:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-04-18 10:00:00",
    "text": "You could use `loop.first` in an if statement <https://designers.HubSpot.com/docs/hubl/for-loops>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-18 10:00:20",
    "edited": {
      "time_stamp": "2019-04-18 10:00:36"
    },
    "text": "you could use loop.index/loop.first, and skip rendering the first loop, or  get fancy and remove the first item from the array"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:37:36",
    "text": "oh boi :eyes:"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:37:59",
    "text": "I don't know how many of you works with coded templates, and maybe this is something you already knew BUT"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:39:52",
    "edited": {
      "time_stamp": "2019-04-18 12:39:57"
    },
    "text": "I didn't, (maybe because its my first project in many years that I am not required to use the drag&amp;drop) and its pretty handy to setup default content in a much more confortable way that is definetly NOT documented! (plz update:\nThis is pretty old already <https://designers.HubSpot.com/docs/hubl/hubl-module-syntax-and-parameters> )"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:41:58",
    "text": "So basically, you can use `widget_attribute` combined with your field slug  and ìs_json` param to send the json like this:"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:43:55",
    "edited": {
      "time_stamp": "2019-04-18 12:44:07"
    },
    "text": "```\n{% widget_block social_sharing \"module_XX\" %}\n    {% widget_attribute \"email\" is_json=True %}\n    {\n       \"default\": true,\n       \"enabled\": false,\n       \"img_src\": https://...\n    }\n   {% end_widget_attribute %}\n{% end_widget_block %}\n```"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:45:09",
    "edited": {
      "time_stamp": "2019-04-18 13:01:00"
    },
    "text": ":point_up_2:Example with the default `social_sharing` module, setting default data for the email field.\n\nAnd you can use widget_attribute *field* all the times you want there so much more readable.\n\nSo please, update documentation, ideally not only with this xD\n<@U6W3H6YN8>  ?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-18 13:04:48"
      },
      {
        "time_stamp": "2019-04-18 13:44:46"
      },
      {
        "time_stamp": "2019-04-18 13:45:32"
      },
      {
        "time_stamp": "2019-04-19 08:48:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-18 12:46:09",
    "text": "Quick question, if i have something like this: `page_by_id(filterPage).widgets.widget_name.body.field` and it outputs this `[12345, 67890]` is there a filter to just have it output as `12345 67890`?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:47:45",
    "edited": {
      "time_stamp": "2019-04-18 12:48:54"
    },
    "text": "if its a real `[list]`: `|join(\" \")` should work"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-18 12:49:21",
    "text": "You are amazing, thank you <@U7ADCU3BM>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-18 12:49:33",
    "text": "my mind is mush from all the work i have been doing and didnt even think of that"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 12:50:33",
    "text": "no prob!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-18 13:04:48",
    "text": "Adding that when not in block syntax you can actually add values for the individual fields in your modules as attributes not the same friendly json syntax but good for modules with fewer settings"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-18 13:44:46",
    "text": "yes! but I felt it like really unconfortable specially on \"big\" modules or with repeaters and several options. so this has been a big discovery for me xD"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-18 13:45:32",
    "text": "agreed, especially on the repeaters side. don’t even wanna try that with attributes"
  }
]
[
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2019-05-29 07:29:48",
    "edited": {
      "time_stamp": "2019-05-29 07:29:52"
    },
    "text": "Good catch, it should use the re2 syntax correctly so I suspect something else might be at play here- I’ll try to dig in and see. Thanks!"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-05-29 13:03:57",
    "text": "is there a quick way to get a file’s id? I’m trying to use this function `{{ file_by_id() }}`",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-29 13:06:04"
      },
      {
        "time_stamp": "2019-05-29 13:06:30"
      },
      {
        "time_stamp": "2019-05-29 13:06:58"
      },
      {
        "time_stamp": "2019-05-29 13:07:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-05-29 13:06:04",
    "text": "have to use the files api as far as i know"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-05-29 13:06:30",
    "text": "<https://developers.HubSpot.com/docs/methods/files/get_files_file_id>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-05-29 13:06:58",
    "text": "hmmm, you’d think there would be a native cms way to do it since it is a native hubl function, no?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-05-29 13:07:07",
    "text": "yeah..."
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2019-05-29 13:22:38",
    "text": "Is there a way to unique items in a HubL Loop?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2019-05-29 13:23:03",
    "text": "I’m working on a job listing page here: <https://www.phlexglobal.com/job-listings-page>"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2019-05-29 13:23:12",
    "text": "and I’m getting dupes in the department box",
    "reply_count": 9,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-05-29 13:28:26"
      },
      {
        "time_stamp": "2019-05-29 13:28:42"
      },
      {
        "time_stamp": "2019-05-29 13:33:04"
      },
      {
        "time_stamp": "2019-05-29 13:33:18"
      },
      {
        "time_stamp": "2019-05-29 14:02:06"
      },
      {
        "time_stamp": "2019-05-29 14:02:19"
      },
      {
        "time_stamp": "2019-05-29 16:21:19"
      },
      {
        "time_stamp": "2019-05-29 16:21:21"
      },
      {
        "time_stamp": "2019-05-29 16:21:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-05-29 13:28:26",
    "edited": {
      "time_stamp": "2019-05-29 13:28:34"
    },
    "text": "Hey Jonathan, I don't think I've encountered this before but could you try adding the HubL unique filter on the for loop (<https://designers.HubSpot.com/docs/hubl/hubl-supported-filters#unique>)?"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-05-29 13:28:42",
    "text": "I think that might do the trick."
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-05-29 13:33:04",
    "text": "```\n{% set my_sequence = ['one', 'one', 'two', 'three' ] %} \n{% for item in my_sequence|unique %}\n {{ item }}\n{% endfor %}\n```"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-05-29 13:33:18",
    "text": "For example something like this should print one two three"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-05-29 14:02:06",
    "text": "I have used it before, right as Jason said. Should work fine :ok_hand:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-29 14:02:19",
    "text": "yep :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2019-05-29 16:21:19",
    "text": "yeah that worked great"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2019-05-29 16:21:21",
    "text": "thanks guys"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2019-05-29 16:21:25",
    "text": "appreciate it!"
  }
]
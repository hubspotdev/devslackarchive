[
  {
    "poster": {
      "poster_name": "Alex Ratiu",
      "poster_handle": "alex.ratiu"
    },
    "time_stamp": "2024-02-28 01:01:19",
    "text": "I see, thank you for your response, Justin!"
  },
  {
    "poster": {
      "poster_name": "Ezequiel",
      "poster_handle": "eze"
    },
    "time_stamp": "2024-02-28 01:03:58",
    "text": "It is working for me, if anybody needs, drop a line."
  },
  {
    "poster": {
      "poster_name": "JB",
      "poster_handle": "jb900"
    },
    "time_stamp": "2024-02-28 01:13:44",
    "text": "Hi everyone\n\nI am using this <https://legacydocs.HubSpot.com/docs/methods/forms/submit_form> to submit a form data but I was wondering how to set the owner id upon submission?\n\n`&lt;select class=\"form-select\" name=\"contact-owner\"&gt;`\n  `&lt;option value=\"\"&gt;Select contact owner&lt;/option&gt;`\n  `&lt;option value=\"339600454\"&gt;Harry Shaw&lt;/option&gt;`\n  `&lt;option value=\"603213399\"&gt;Liam Thomas&lt;/option&gt;`\n  `&lt;option value=\"597148164\"&gt;Samuel Darville&lt;/option&gt;`\n  `&lt;option value=\"511689138\"&gt;Tim medforth&lt;/option&gt;`\n  `&lt;option value=\"78341890\"&gt;Padraigh kinnaird&lt;/option&gt;`\n  `&lt;option value=\"212614832\"&gt;Jacob baxter &lt;/option&gt;`\n`&lt;/select&gt;`\n\n`&lt;script&gt;`\n`var formStepOne = {`\n  `'fields': [`\n    `{`\n      `'name': 'firstname',`\n      `'value':  $( cform.s1_form_id + ' input[name=\"FirstName\"]').val()`\n    `},`\n    `{`\n      `'name': 'lastname',`\n      `'value':  $( cform.s1_form_id + ' input[name=\"LastName\"]').val()`\n    `},`\n    `{`\n      `'name': 'phone',`\n      `'value':  $( cform.s1_form_id + ' input[name=\"PhoneNumber\"]').val()`\n    `},`\n    `{`\n      `'name': 'email',`\n      `'value':  $( cform.s1_form_id + ' input[name=\"Email\"]').val()`\n    `},`\n    `{`\n      `'name': 'new_certification_status',`\n      `'value': $(cform.s1_form_id + ' input[name=\"investor-category\"]:checked').val()`\n    `},`\n    `{`\n      `'name': 'hs_lead_status',`\n      `'value':  'NEW'`\n    `},`\n    `{`\n      `'name': 'HubSpot_owner_id',`\n      `'value': $( cform.s1_form_id + ' select[name=\"contact-owner\"] option:selected').val()`\n    `}`\n  `],`\n  `'context': {`\n    `// 'hutk': hscookie,`\n    `'pageUri': window.location.href,`\n    `'pageName': cform.page_title`\n  `},`\n`};`\n\n`$.ajax({`\n  `url: '<https://api.hsforms.com/submissions/v3/integration/submit/'+> cform.hs_portal_id + '/' + cform.hs_form_guid,`\n  `type: 'POST',`\n  `contentType: \"application/json\",`\n  `dataType: \"json\",`\n  `headers: {`\n    `'Accept': 'application/json',`\n    `'Access-Control-Allow-Origin': '*'`\n  `},`\n  `data: JSON.stringify(formStepOne),`\n  `beforeSend: function () {`\n    `$(form).find('input[type=\"submit\"]').attr('disabled', true);`\n  `},`\n  `success: function(response) {`\n   `// success`\n  `},`\n  `complete: function() {`\n    `$(form).find('input[type=\"submit\"]').attr('disabled', false);`\n  `},`\n  `error: function (status, error) {`\n    `// console.log(error, status);`\n  `}`\n`});`\n`&lt;/script&gt;`\n\nBut passing the owner id is not working not sure why?\nThe owner id on the select box is the internal value of the property \"Contact Owner\"\n\nAny ideas how to resolve this?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-28 01:30:21"
      },
      {
        "time_stamp": "2024-02-28 01:37:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Arno Van de Weyer",
      "poster_handle": "arno.vandeweyer"
    },
    "time_stamp": "2024-02-28 01:30:21",
    "text": "iirc this might work with email address as value for contact owner. Are you seeing anything in the logs?"
  },
  {
    "poster": {
      "poster_name": "JB",
      "poster_handle": "jb900"
    },
    "time_stamp": "2024-02-28 01:37:57",
    "text": "can you show me an example how ?\n\nwhat I want to achieve is when I submit the form, it also assigns from the selected contact owner"
  },
  {
    "text": "Hi everyone :slightly_smiling_face:\n\nI'm trying to make imports of csv files through the API. In my CSV files, I have two HubSpot_ALTERNATIVE_ID columns (ID_Prestashop and Email).\nWhen I use the GUI, I can select which one of those columns is to use to find existing contacts (screenshot)\n\nIs there a way to specify this in the importRequest ? Or in the columnMappings ? I couldn't find a solution in <https://developers.HubSpot.com/docs/api/crm/imports> ...\n\nThanks a lot !",
    "time_stamp": "2024-02-28 03:10:24"
  },
  {
    "text": "Hi We are trying to create a ticket and associate it with an existing ID so that it creates the ticket to an existing ticket.\n\nCould you please advise on where we are going wrong, this is what we are currently sending and this is the response",
    "time_stamp": "2024-02-28 03:11:31",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-28 03:16:59"
      },
      {
        "time_stamp": "2024-02-28 03:29:41"
      }
    ]
  },
  {
    "text": "i think the association has to be an array, sharing a snippet of my code of how i associated line item with deal",
    "time_stamp": "2024-02-28 03:16:59"
  },
  {
    "poster": {
      "poster_name": "Shingai Gunha",
      "poster_handle": "shingai"
    },
    "time_stamp": "2024-02-28 03:29:41",
    "text": "Thanks noted… this worked.\n\nOne last question.\n\nWe want to create ticket description field via API.  What key do we use in Json"
  },
  {
    "poster": {
      "poster_name": "Victor Barbera",
      "poster_handle": "victor175"
    },
    "time_stamp": "2024-02-28 05:13:14",
    "edited": {
      "time_stamp": "2024-02-28 05:15:16"
    },
    "text": "Hello <@U01QVR44MEY> :wave:\nI’ve found this thread that’s related with an issue I’m facing.\nI’m developing a SaaS product for adavanced automated analytics with customers integrations data, and one of them is HubSpot.\nFor doing so we have to sync a bunch of objects with our DBs, for the normal objects (“Contact”, “Company” and “Deal”) it’s working nicely, but we’re facing some complications with “Associations”.\nWe first tried an approach, but it’s so unperformant that we cannot afford this approach for huge accounts (we’re using oauth for the api reqs):\n```1- We're fetching the \"contacts\" and \"deals\" list of ids.\n2- For each object id we're fetching their associations for each kind, so basically:\n      `/crm/v3/objects/${object}s/${objectId}/associations/${otherObject}````\nAs I’ve read in this thread theoptimal way of doing this is to use the graphQL api, but I think it’s only available in some plans (and we can’t validate this with our customers).\nAnother approach would be to use the search endpoint, but I think it’s limited to 10_000 objects and we have bigger accounts connected.\nSo, if I have understanded all correctly, the only thing I can do to improve the performance is to use the object endpoints (not the serach), asking for the associations in each call, and maybe batch them?\nAm I right, or I will find limitations with this approach as well?\nThanks for you time btw:pray:"
  },
  {
    "poster": {
      "poster_name": "Justin Sweeney",
      "poster_handle": "justin.sweeney"
    },
    "time_stamp": "2024-02-28 06:44:40",
    "text": "First notice ours at 2024-02-27T18:43:00.000, we are in the same boat, developer account and no support. Going to see how it goes today."
  },
  {
    "poster": {
      "poster_name": "Jessiemar Pedrosa",
      "poster_handle": "jessie"
    },
    "time_stamp": "2024-02-28 07:36:22",
    "edited": {
      "time_stamp": "2024-02-28 07:38:07"
    },
    "text": "Hi, I just want to ask about simple integration to Airtable via api.\nSo the case is, I have a workflow that gets all contact records based on the trigger and certain parameters and create these records to Airtable using custom code action (Axios). So lets say there are around 148 results in the HubSpot workflow log history that pass through the trigger, and its already working and sending data to Airtable, but the problem here is, it only creates less than 148 records, sometimes 70 or 50 or 104. I have set delays already using await, adjusted the time from 500ms to 1s and 2, but I think the delay isn't working. Have you encountered this issue? And how did you fix it? Or if you have suggestions, that would be great and appreciated. Thanks guys!",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-28 07:46:17"
      },
      {
        "time_stamp": "2024-02-28 17:11:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2024-02-28 07:46:17",
    "text": "you're probably running into rate limit issues, are you using try / catch block with your api call? (and throw error so that if you get a 429 error it will retry later)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-28 08:36:53",
    "text": "It looks like you're trying to address the challenge of syncing associations efficiently between HubSpot and your database, especially for large accounts. You're correct that fetching associations for each object one by one can be extremely inefficient for large datasets.\nThe best approach would indeed involve batching your requests to reduce the number of API calls you're making. HubSpot's batch endpoints for the CRM API allow you to make a single request to retrieve, create, or update up to 100 records, which can dramatically improve performance compared to individual requests.\nHere's what you can do:\n1. Use the Batch Read endpoint to retrieve data for up to 100 records in a single API call:\n2. \n3. POST /crm/v3/objects/{objectType}/batch/read\n4. Using this endpoint, you can specify a list of object IDs and get back all the associated properties for each object in one go.\n5. Additionally, you can also include associations in the batch read by using the `associations` parameter in your request body to include the related object data. This will reduce the need to make separate calls to get associations for each object.\n6. Keep in mind the rate limits, though they are generally quite generous. If you encounter rate limit issues, you may need to implement some rate-limiting handling and retry logic on your end.\n7. If you have concerns about hitting the 10,000 object limit for searches, remember that this limit is per search query, not for the entire dataset. If you implement pagination and continue to make queries until you receive fewer results than your page size, this should not be an issue.\n8. As for the GraphQL API availability, you're right that it's not available on all plans. However, for the REST API batch endpoints, the ones you will be using do not have such restrictions and should be available on any plan that has API access.\nJust as a note, some of the endpoints and processes can change, so it's always a good idea to look up the latest HubSpot API documentation or reach out to their support for the most current advice.\nI hope this helps you to improve the performance of your integrations!"
  },
  {
    "poster": {
      "poster_name": "Victor Barbera",
      "poster_handle": "victor175"
    },
    "time_stamp": "2024-02-28 08:56:29",
    "edited": {
      "time_stamp": "2024-02-28 08:56:36"
    },
    "text": "Hey Carter, first of all thanks for your response:raised_hands:"
  },
  {
    "poster": {
      "poster_name": "Victor Barbera",
      "poster_handle": "victor175"
    },
    "time_stamp": "2024-02-28 08:57:44",
    "text": "&gt; 1. If you have concerns about hitting the 10,000 object limit for searches, remember that this limit is per search query, not for the entire dataset. If you implement pagination and continue to make queries until you receive fewer results than your page size, this should not be an issue.\nAre you sure about this? I realized that when you set LIMIT=100 and you reach the after=10000 the API starts returning http 400"
  },
  {
    "poster": {
      "poster_name": "Victor Barbera",
      "poster_handle": "victor175"
    },
    "time_stamp": "2024-02-28 08:58:49",
    "text": "<https://HubSpotdev.slack.com/archives/C2YHAHB6K/p1681921930494509?thread_ts=1681827043.856609&amp;cid=C2YHAHB6K>"
  },
  {
    "poster": {
      "poster_name": "Victor Barbera",
      "poster_handle": "victor175"
    },
    "time_stamp": "2024-02-28 09:18:29",
    "text": "Thinking out loud:\nIn a scenario with 10 contacts and 5 deals.\n*Current approach*\n```1- List all contacts [/crm/v3/objects/contacts] (1 req)\n2- List all deals [/crm/v3/objects/deals] (1 req)\n3- For each contact get the contact-to-company associations and the contact-to-deal [/crm/v3/objects/contacts/${objectId}/associations/${otherObject}] (20 reqs)\n4- Idem for deals [/crm/v3/objects/deals/${objectId}/associations/${otherObject}] (10 reqs)\nTotal: 32 reqs```\n*Alternative*\n```1- List all contacts including associations (only ids) [/crm/v3/objects/contacts] (1 req)\n2- List all deals including associations (only ids) [/crm/v3/objects/deals] (1 req)\n3- Filter out all objects without associations\n4- Batch fetch the associations for each object that has at least one association (1 batch req)\nTotal: 2 reqs + 1 batch req that includes one req per object```"
  },
  {
    "poster": {
      "poster_name": "Luca Cameron",
      "poster_handle": "luca.cameron"
    },
    "time_stamp": "2024-02-28 11:11:33",
    "text": "Hi, I wanted to ask about pulling Recipient List data from an automated email workflow via API – I found an old thread <https://community.HubSpot.com/t5/APIs-Integrations/Export-of-Recipient-List-via-an-API/td-p/248613|here> but the hapikey method is outdated and was wondering if somebody had a more up-to-date response to this query?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-28 11:15:13",
    "text": "Yeah that alternative is correct"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-28 11:16:08",
    "edited": {
      "time_stamp": "2024-02-28 11:16:10"
    },
    "text": "Also yes the 10k limit is per query, so you can't page beyond 10k results but you could update your query to filter out data you've already seen before (this gets messy quickly though)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-02-28 11:16:47",
    "text": "Actually wrote this blog about this exact problem: <https://developers.HubSpot.com/blog/reducing-HubSpot-requests-utilizing-batch-api-and-graphql-for-better-optimization>"
  },
  {
    "text": "Hello guys! Hope everyone is doing ok! I am facing a situation that it is simple but haven't found an answer. :pray:\nIm using  v3 API and I have 3 custom objects: sites, partners and critical_events.\nI am working normally for a while already with the API and when i try to get the elements using the url \"<https://api.hubapi.com/crm/v3/objects/{custom_object_name}>\" it works for sites and partners but not for critical_events.\n`{\"status\":\"error\",\"message\":\"Unable to infer object type from: critical events\",\"correlationId\":\"xxxxx\"}`. Has someone faced something like this? Is it because the object name contains two words? I am clueless.",
    "time_stamp": "2024-02-28 12:00:17",
    "reply_count": 11,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-28 13:42:05"
      },
      {
        "time_stamp": "2024-02-28 13:43:45"
      },
      {
        "time_stamp": "2024-02-28 13:45:41"
      },
      {
        "time_stamp": "2024-02-28 15:22:35"
      },
      {
        "time_stamp": "2024-02-28 15:41:55"
      },
      {
        "time_stamp": "2024-02-28 15:42:32"
      },
      {
        "time_stamp": "2024-02-29 08:21:28"
      },
      {
        "time_stamp": "2024-02-29 08:22:18"
      },
      {
        "time_stamp": "2024-03-21 10:01:36"
      },
      {
        "time_stamp": "2024-03-21 13:40:33"
      },
      {
        "time_stamp": "2024-03-22 01:14:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Doron Solomon",
      "poster_handle": "doron.solomon"
    },
    "time_stamp": "2024-02-28 13:24:18",
    "text": "Hi team, I am trying to understand which plan I need in order to use hubSpot API.\nI have a scenario\nI want to send a custom events from one of my pages when the user click on a form elements (the form not create with HubSpot)",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-28 13:49:41"
      },
      {
        "time_stamp": "2024-02-28 13:51:04"
      },
      {
        "time_stamp": "2024-02-28 13:52:19"
      },
      {
        "time_stamp": "2024-02-28 14:08:17"
      },
      {
        "time_stamp": "2024-02-28 16:01:55"
      },
      {
        "time_stamp": "2024-02-28 16:02:39"
      },
      {
        "time_stamp": "2024-02-28 16:30:16"
      },
      {
        "time_stamp": "2024-02-28 23:26:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-02-28 13:40:24",
    "text": "um I just got a API error that says HubSpots Security is blocking the request....originating from HubSpot\n\n```This website is using a security service to protect itself from online attacks. The action you just performed triggered the security solution. There are several actions that could trigger this block including submitting a certain word or phrase, a SQL command or malformed data```\n"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-02-28 13:40:35",
    "text": "``` '        &lt;h1 data-translate=\"block_headline\"&gt;Sorry, you have been blocked&lt;/h1&gt;\\n' +\n      '        &lt;h2 class=\"cf-subheadline\"&gt;&lt;span data-translate=\"unable_to_access\"&gt;You are unable to access&lt;/span&gt; <http://hubapi.com|hubapi.com>&lt;/h2&gt;\\n' +```\n"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 13:42:05",
    "text": "<@U06D2MXUM18> - What repsonse do you get when you make a request to `GET*/crm/v3/schemas*` ?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 13:43:45",
    "text": "Where did you get the screenshot from?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 13:45:41",
    "text": "I'm also not sure what you mean by \"try to get the elements using the url\" - Can you elaborate on this?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2024-02-28 13:45:44",
    "text": "oh I see, its the error it provides if you send an invalid link through ???"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 13:49:41",
    "text": "It's my understanding that all you need is an Admin account and a Private App.\n\nThis allows you to make requests to your HubSpot Account with the Access Token generated from the Private App.\n\nHubSpot requires upgrades for things like custom coded workflows, webhooks, etc.\n\nHere is documentation about Private Apps --&gt; <https://developers.HubSpot.com/docs/api/private-apps>"
  },
  {
    "text": "Here are the API Rate limits by tier showing how a Free Account allows for Private Apps",
    "time_stamp": "2024-02-28 13:51:04"
  },
  {
    "poster": {
      "poster_name": "Doron Solomon",
      "poster_handle": "doron.solomon"
    },
    "time_stamp": "2024-02-28 13:52:19",
    "text": "Thanks Ryan, I saw those pages but I also encounter this documentation:\n\n<https://developers.HubSpot.com/docs/api/analytics/events>\n\nAnd this is what confused me"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 14:08:17",
    "text": "I see - you want to leverage Custom Events which would require Marketing Hub Enterprise.\n\nIt would be helpful to know what type of event tracking you are trying to do.\n\nIf you just need to update a property on a company/contact - I don't think you need this.\n\nMy understanding of Custom Events is for doing things like MixPanel where you want to track funnels /conversions.\n\nCan you share more details about the event(s) you want to track?"
  },
  {
    "poster": {
      "poster_name": "Nicolas Bierti",
      "poster_handle": "nicolas.bierti"
    },
    "time_stamp": "2024-02-28 15:22:35",
    "edited": {
      "time_stamp": "2024-02-28 15:27:45"
    },
    "text": "<@U05R380MLMC>, thanks for your reply. Sorry if I did not make myself clear.\nThe screenshot is the response I get when I send request to `GET*/crm/v3/schemas*`\n\nWhen I said \"I try to get the elements using the url\" I meant that I used that endpoint to try to get the custom objects \"critical_events\". For partners and sites worked perfectly."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 15:41:55",
    "edited": {
      "time_stamp": "2024-02-28 15:41:57"
    },
    "text": "Ok. I think I understand.\n\nYou are making a request to <https://api.hubapi.com/crm/v3/objects/critical_events> and getting the following response\n```{\"status\":\"error\",\"message\":\"Unable to infer object type from: critical events\",\"correlationId\":\"xxxxx\"}```\nCan you try using the object type ID?"
  },
  {
    "text": "",
    "time_stamp": "2024-02-28 15:42:32"
  },
  {
    "poster": {
      "poster_name": "Maggie Philbin",
      "poster_handle": "mphilbin"
    },
    "time_stamp": "2024-02-28 16:01:55",
    "text": "hi! PM of custom events here--the custom events api is for any enterprise user, so marketing hub, sales hub, service hub, operations hub, or cms hub enterprise!"
  },
  {
    "poster": {
      "poster_name": "Maggie Philbin",
      "poster_handle": "mphilbin"
    },
    "time_stamp": "2024-02-28 16:02:39",
    "text": "and while custom events are commonly used for tracking website or product usage data, they can effectively be used for any data point with a timestamp, other kinds of activities can be sent via this api as well."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 16:30:16",
    "text": "Thanks Maggie for providing some more details regarding the Custom Events feature within HubSpot."
  },
  {
    "poster": {
      "poster_name": "Jessiemar Pedrosa",
      "poster_handle": "jessie"
    },
    "time_stamp": "2024-02-28 17:11:40",
    "edited": {
      "time_stamp": "2024-02-28 17:12:18"
    },
    "text": "Yes, try catch block.\nYou know what, I have created records about 143 already, but still missing some 5 records, but it's definitely fine for now since its more than 90%. My strategy was to do some delaying methods or maybe sending a slack notif or a condition in between actions, and custom code. \nI've also added await delay."
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 17:53:23",
    "text": "Does populating a property while creating a new object count as “changing a property” for the purposes of triggering webhooks, or will it only fire when that property is changed on an existing object? For example, if a webhook was set to fire when a contact’s email is changed, would it fire when a contact with an email address is added?",
    "reply_count": 32,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-02-28 18:05:09"
      },
      {
        "time_stamp": "2024-02-28 18:09:06"
      },
      {
        "time_stamp": "2024-02-28 18:15:11"
      },
      {
        "time_stamp": "2024-02-28 18:15:23"
      },
      {
        "time_stamp": "2024-02-28 18:26:17"
      },
      {
        "time_stamp": "2024-02-28 18:28:04"
      },
      {
        "time_stamp": "2024-02-28 18:29:00"
      },
      {
        "time_stamp": "2024-02-28 18:29:35"
      },
      {
        "time_stamp": "2024-02-28 18:30:51"
      },
      {
        "time_stamp": "2024-02-28 18:32:40"
      },
      {
        "time_stamp": "2024-02-28 18:32:42"
      },
      {
        "time_stamp": "2024-02-28 18:35:22"
      },
      {
        "time_stamp": "2024-02-28 18:35:43"
      },
      {
        "time_stamp": "2024-02-28 18:52:39"
      },
      {
        "time_stamp": "2024-02-28 18:53:46"
      },
      {
        "time_stamp": "2024-02-28 18:54:27"
      },
      {
        "time_stamp": "2024-02-28 18:55:22"
      },
      {
        "time_stamp": "2024-02-28 18:57:19"
      },
      {
        "time_stamp": "2024-02-28 18:58:38"
      },
      {
        "time_stamp": "2024-02-28 19:03:08"
      },
      {
        "time_stamp": "2024-02-28 19:03:51"
      },
      {
        "time_stamp": "2024-02-28 19:05:41"
      },
      {
        "time_stamp": "2024-02-28 19:07:40"
      },
      {
        "time_stamp": "2024-02-28 19:08:16"
      },
      {
        "time_stamp": "2024-02-28 19:08:19"
      },
      {
        "time_stamp": "2024-02-28 19:09:16"
      },
      {
        "time_stamp": "2024-02-28 19:09:22"
      },
      {
        "time_stamp": "2024-02-28 23:17:19"
      },
      {
        "time_stamp": "2024-02-29 10:49:09"
      },
      {
        "time_stamp": "2024-02-29 10:58:03"
      },
      {
        "time_stamp": "2024-02-29 11:14:30"
      },
      {
        "time_stamp": "2024-02-29 11:59:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:05:09",
    "text": "I'm not sure but can you do an \"OR\" condition?\n\nWhen object is created\n\nor\n\nWhen field/value changes"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 18:09:06",
    "text": "I’m specifically hoping to get that field’s data when the object is created. The “property changed” payload contains that data, the “object created” payload doesn’t."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:15:11",
    "text": "That's really interesting - I haven't tested but if you are creating the object with data my expectation would be that the response returns the new object with the data.\n\nThe HS docs show this.\n\nRequest with properties to a custom object\n```curl --request POST \\\n  --url <https://api.hubapi.com/crm/v3/objects/> \\\n  --header 'authorization: Bearer YOUR_ACCESS_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"associations\": [\n    {\n      \"types\": [\n        {\n          \"associationCategory\": \"HubSpot_DEFINED\",\n          \"associationTypeId\": 0\n        }\n      ],\n      \"to\": {\n        \"id\": \"string\"\n      }\n    }\n  ],\n  \"properties\": {\n    \"additionalProp1\": \"string\",\n    \"additionalProp2\": \"string\",\n    \"additionalProp3\": \"string\"\n  }\n}'```"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:15:23",
    "text": "Response from request\n```{\n  \"createdAt\": \"2024-02-29T01:13:12.463Z\",\n  \"archived\": false,\n  \"archivedAt\": \"2024-02-29T01:13:12.463Z\",\n  \"propertiesWithHistory\": {\n    \"additionalProp1\": [\n      {\n        \"sourceId\": \"string\",\n        \"sourceType\": \"string\",\n        \"sourceLabel\": \"string\",\n        \"updatedByUserId\": 0,\n        \"value\": \"string\",\n        \"timestamp\": \"2024-02-29T01:13:12.463Z\"\n      }\n    ],\n    \"additionalProp2\": [\n      {\n        \"sourceId\": \"string\",\n        \"sourceType\": \"string\",\n        \"sourceLabel\": \"string\",\n        \"updatedByUserId\": 0,\n        \"value\": \"string\",\n        \"timestamp\": \"2024-02-29T01:13:12.463Z\"\n      }\n    ],\n    \"additionalProp3\": [\n      {\n        \"sourceId\": \"string\",\n        \"sourceType\": \"string\",\n        \"sourceLabel\": \"string\",\n        \"updatedByUserId\": 0,\n        \"value\": \"string\",\n        \"timestamp\": \"2024-02-29T01:13:12.463Z\"\n      }\n    ]\n  },\n  \"id\": \"512\",\n  \"properties\": {\n    \"property_date\": \"1572480000000\",\n    \"property_radio\": \"option_1\",\n    \"property_number\": \"17\",\n    \"property_string\": \"value\",\n    \"property_checkbox\": \"false\",\n    \"property_dropdown\": \"choice_b\",\n    \"property_multiple_checkboxes\": \"chocolate;strawberry\"\n  },\n  \"updatedAt\": \"2024-02-29T01:13:12.463Z\"\n}```"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 18:26:17",
    "text": "I would do so if this were a normal implementation, but I’m working under very specific constraints where that isn’t an option — I basically only have the ability to `POST` or `PATCH` to an external API, or set up an endpoint to receive `POST` data from an external source. Response data that isn’t an error is entirely discarded."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:28:04",
    "text": "To clarify - you are posting data to HubSpot to create a new record (Company/Contact/Custom Object)?"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 18:29:00",
    "text": "That’s correct."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:29:35",
    "edited": {
      "time_stamp": "2024-02-28 18:30:34"
    },
    "text": "When the object is created in HubSpot, you want to send the email back to the service from where it was posted from?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:30:51",
    "text": "Likely not - since you have the email already. You might want the hs_object_id"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:32:40",
    "text": "I'm begining to understand your problem - thanks for sharing"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 18:32:42",
    "text": "That’s precisely it — the email is the primary identifier in the source system.\n\nI need both the email _and_ the `hs_object_id` in the same message. If I only received the `hs_object_id`, I wouldn’t know which email it’s associated with."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:35:22",
    "text": "Let's say the answer to your original question is - \"yes, when creating a new object the property changed event takes place\""
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:35:43",
    "text": "How would that solve your problem? or what steps does that allow?"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 18:52:39",
    "text": "I’m able to update contact properties in the source system with data that’s sent to the endpoint I set up.\n\nSince the “property changed” request body includes the field name and value (in this case, the contact’s email address) in addition to the object ID, It’d allow me to store the `hs_object_id` for later use."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:53:46",
    "text": "Ok - So you do have an endpoint listening that can receive data?"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 18:54:27",
    "text": "Correct, but it cannot request — only listen."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:55:22",
    "text": "That's okay.\n\nI'm assuming you don't have Custom Coded Actions or Webhook actions or do you?"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 18:57:19",
    "text": "Nope. This problem could be solved in 5 minutes if I were so lucky."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 18:58:38",
    "text": "Yeah -I figured as much."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 19:03:08",
    "edited": {
      "time_stamp": "2024-02-28 19:03:31"
    },
    "text": "Maybe someone knows the answer to your question more specifically but I would say \"Object Created\" and \"Object Updated\" are two separate events.\n\nIs there a reason you can't setup your own Proxy server that you make requests to and those hand off the request to HubSpot and can receive the response data?"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 19:03:51",
    "text": "Implementation budget. :sweat_smile:"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 19:05:41",
    "text": "Even a Lamdba function on AWS/Google shouldn't be that expensive"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 19:07:40",
    "text": "Well, that’s the pithy answer. It’s slightly more complex than that, but I don’t want to speak too freely about an active client project."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 19:08:16",
    "text": "understood"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 19:08:19",
    "edited": {
      "time_stamp": "2024-02-28 19:08:29"
    },
    "text": "I enjoyed our chat though!"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-02-28 19:09:16",
    "text": "If you can't post data from HubSpot using workflows - this makes the problem very difficult since you can't read response data."
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-28 19:09:22",
    "text": "I appreciate your time and the back-and-forth! Helps me to confirm that I haven’t overlooked anything too obvious, if nothing else."
  },
  {
    "poster": {
      "poster_name": "Harun Kumar Siva",
      "poster_handle": "harun"
    },
    "time_stamp": "2024-02-28 23:17:19",
    "text": "<@U04AQA0QM8E>\nI have a contact.propertyChange webhook subscription for the email property.\nI can confirm that I receive a webhook when a when email is populated while creating a Contact record (via the UI or through an API).\nI do not even have a subscription for contact.creation.\n\nSample Payload (on creating a new Contact from UI):\n```[{\"eventId\"=&gt;xxxxxxx,                               \n  \"subscriptionId\"=&gt;xxxxxxx,\n  \"portalId\"=&gt;xxxxxxx,\n  \"appId\"=&gt;xxxxxxx,\n  \"occurredAt\"=&gt;xxxxxxx,\n  \"subscriptionType\"=&gt;\"contact.propertyChange\",\n  \"attemptNumber\"=&gt;0,\n  \"objectId\"=&gt;xxxxxxx,\n  \"propertyName\"=&gt;\"email\",\n  \"propertyValue\"=&gt;\"xxxxxxx\",\n  \"changeSource\"=&gt;\"CRM_UI\",\n  \"sourceId\"=&gt;\"userId:xxxxxxx\"}]```"
  },
  {
    "poster": {
      "poster_name": "Doron Solomon",
      "poster_handle": "doron.solomon"
    },
    "time_stamp": "2024-02-28 23:26:48",
    "text": "I have an iframe (can't change it) inside my app and I want to send some info regarding my user so I can understand that the user in the specific iframe is the same user as in my origin website I thought of sending a unique info that I store in a cookie although it an iframe they still share the same domain"
  },
  {
    "poster": {
      "poster_name": "Casper Ruegg",
      "poster_handle": "casper667"
    },
    "time_stamp": "2024-02-29 00:15:14",
    "edited": {
      "time_stamp": "2024-02-29 00:15:49"
    },
    "text": "Hi all! I’m writing some custom Python code in HubSpot automations. For example, to retrieve the content of a ticket as a string, I use the code below.\n\nI can’t seem to find where in the documentation the structure of the event object / class is listed. Does it follow the same structure as the API? How would I, for example, also get the subject of an email as a string?\n\nApologies if this is trivial! Cheers :blush:\n\n```import os\nfrom HubSpot import HubSpot\nfrom HubSpot.crm.tickets import ApiException\n\ndef main(event):\n\n    content = event[\"inputFields\"]['content']\n    \n    # rest of my code processing the content\n\n    return {\n        # rest of my code returning the result\n    }```",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-29 06:54:39"
      },
      {
        "time_stamp": "2024-02-29 06:59:48"
      },
      {
        "time_stamp": "2024-02-29 07:44:40"
      }
    ]
  }
]
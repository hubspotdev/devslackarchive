[
  {
    "poster": {
      "poster_name": "Aris Lacdao",
      "poster_handle": "aris.lacdao"
    },
    "time_stamp": "2022-06-09 03:41:12",
    "text": "I have a field group field called `tiles`, and each item has `desktop_text_color` and `mobile_text_color` field. How can I change color between desktop and mobile? Currently this is my `module.html`\n\n```&lt;div class=\"lego-tiles {{ module.class }}\"&gt;\n  {% for tile in module.tiles %}\n    &lt;div class=\"tile\" style=\"color: {{ tile.desktop_text_color.color  }};\"&gt;\n      {{ tile.text }}\n    &lt;/div&gt;\n  {% endfor %}\n&lt;/div&gt;```",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-06-09 03:48:31"
      },
      {
        "time_stamp": "2022-06-09 03:57:41"
      },
      {
        "time_stamp": "2022-06-09 04:55:55"
      },
      {
        "time_stamp": "2022-06-10 09:11:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Shani Hussain",
      "poster_handle": "zibrar00"
    },
    "time_stamp": "2022-06-09 03:48:31",
    "text": "<@U03J4N7062K> If each item has different color then you can create two divs. One for desktop and one for mobile case.\n\nDesktop div you can hide with media query using css for mobile case.\n\nThere maybe some other work around as well."
  },
  {
    "poster": {
      "poster_name": "Aris Lacdao",
      "poster_handle": "aris.lacdao"
    },
    "time_stamp": "2022-06-09 03:57:41",
    "text": "hmm.. that's what I thought as well, well i'm just still learning HubSpot, but i'm a solid web developer. i'm just wondering if there's a \"better\" way to do this"
  },
  {
    "poster": {
      "poster_name": "Shani Hussain",
      "poster_handle": "zibrar00"
    },
    "time_stamp": "2022-06-09 04:55:55",
    "text": "alternate way you can use JS and add data-attribute in that tile div and that JS you can render for mobile case which will override inline style for desktop case."
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2022-06-09 16:48:43",
    "text": "Defaults are mainly there for the end user when they go to edit a new module in the page editor. That way they have something in the fields and on the page instead of just blank content until they fill it in. If you call the fields on the html then the defaults will show until changed. That is if it's a normal module. Global modules seem to have issues with this. "
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2022-06-09 16:52:17",
    "text": "There are two fields you can use in custom modules. ‘HubDB_table’ and ‘HubDB_row’. These will pull all the data you need. Oddly, though (with the row field at least) you have to call the field name twice. So if the field name is ‘module.row’ to access the data you need to call {{ module.row.row }} "
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2022-06-09 16:52:50",
    "text": "If you google HubSpot modules the first one should like to the docs ‘modules and fields’ pages. I'm on my phone so I can't link it easily. "
  }
]
[
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-07-25 03:09:42",
    "text": "Hey guys, I was wondering whether this: `<https://designers.HubSpot.com/docs/tutorials/combining-multiple-sets-of-blog-posts-into-a-single-listing>` - is possible/compatible with *Membership-Content, Private - Registration required* functionality? The use case for this is, a perspective client has multiple paid blogs that they would like to migrate to HubSpot but then they also have, listing pages that only show users the blog posts for the blogs that they have paid for. It may not be viable on HubSpot but, thought it would be best to clarify. Thanks :slightly_smiling_face:",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-25 07:28:46"
      },
      {
        "time_stamp": "2019-07-25 07:32:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kacper Adach",
      "poster_handle": "kadach"
    },
    "time_stamp": "2019-07-25 07:28:46",
    "text": "The private content feature gives contacts access based on what lists they are a member of. You can restrict each blog to a different list by only add contacts that have paid for blog A to list A. When creating the listing page, you would have to look at `request_contact.list_memberships` in hubl to see what lists the contact viewing the page is a member of and only render the corresponding blog posts."
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-07-25 07:32:22",
    "text": "Thanks Kacper, that's a really informative response! :raised_hands: Appreciate it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Francois-Xavier",
      "poster_handle": "francois.x.emond.b"
    },
    "time_stamp": "2019-07-25 13:08:14",
    "edited": {
      "time_stamp": "2019-07-25 13:10:20"
    },
    "text": "hey everyone, I am trying to create a search engine for a FAQ page for my client but I am encountering a few issues, here is what I want to do:\n1.: I am using a HubSpot form to query the search\n2.: I want to use JQuery .click() to save the search string and parse it\n3.:I would like to take that string and use HUBL and HubDB to verify what words in the search String are also keywords in HubDB\n4.: I then want to dynamically populate a span or div with a ul/li that would contain possible answers based on keywords found in the user search query string\n\nso far I have...\n\n1.: the form for the search query. On a submit, it also sends an email containing the string to a remote address so that the marketing team can eventually add more question/answers in HubDB\n2.: I have a function that can detect the click and parse the string\n\n that is it...\nI can't seem to figure how to assign the return value of my jquery function to a hubl var and then run it in HubDB to check the keywords."
  },
  {
    "poster": {
      "poster_name": "Scott Sandbakken",
      "poster_handle": "ssandbakken"
    },
    "time_stamp": "2019-07-25 13:08:51",
    "text": "Does anyone know of a way to determine if a page is a blog post? I want to add something to the global header, but only have it display on blog post pages. Something similar to *is_listing_view*, but for blog posts.",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-07-25 13:11:04"
      },
      {
        "time_stamp": "2019-07-25 13:11:54"
      },
      {
        "time_stamp": "2019-07-25 13:13:39"
      },
      {
        "time_stamp": "2019-07-25 13:15:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2019-07-25 13:11:04",
    "text": "Is there a reason you want to go this rout as opposed to creating a unique header for blog posts and having a separate template just for posts?"
  },
  {
    "poster": {
      "poster_name": "Francois-Xavier",
      "poster_handle": "francois.x.emond.b"
    },
    "time_stamp": "2019-07-25 13:11:54",
    "text": "couldn't you just add a header in settings only to your blog pages?"
  },
  {
    "poster": {
      "poster_name": "Scott Sandbakken",
      "poster_handle": "ssandbakken"
    },
    "time_stamp": "2019-07-25 13:13:39",
    "text": "<@UDPA7JFHA> I am trying to import a JSON-LD file, but it needs to be different for blog posts than it is for all other pages, but I was trying to have only one file so I only have to manage the variables in one place. This is something I could reuse in all my portals, so I want it to be as efficient as possible."
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2019-07-25 13:15:12",
    "text": "Maybe use some code in the blog post HubL and then use CSS/JS to add it to the header?"
  },
  {
    "poster": {
      "poster_name": "Takuya",
      "poster_handle": "aimi"
    },
    "time_stamp": "2019-07-25 19:05:07",
    "text": "I cant use...\n\ntestmodule (custom module)\n```\n{# no hubl #}\n```\nBut this testmodule have boolean field named \"boolean_field\" on the right side.\n\ntestpage.html\n```\n&lt;!doctype html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;{{ content.html_title }}&lt;/title&gt;\n        &lt;meta name=\"description\" content=\"{{ content.meta_description }}\"&gt;\n        {{ standard_header_includes }}\n    &lt;/head&gt;\n    &lt;body&gt;\n      {% module \"xxx\" module_id=\"xxx\" label=\"testmodule\" %}\n      {# copy snippet #}\n      {{ module.boolean_field }}\n      {{ standard_footer_includes }}\n    &lt;/body&gt;\n&lt;/html&gt;\n```\nnot display..."
  }
]
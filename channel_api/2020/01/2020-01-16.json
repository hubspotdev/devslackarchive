[
  {
    "poster": {
      "poster_name": "Cory Dymond",
      "poster_handle": "cory218"
    },
    "time_stamp": "2020-01-16 10:11:04",
    "text": "<@UQERM7BLY> <@U25PYL3Q8> Wanted to send a quick thanks over to both of you. I've just got this set up and running up with exactly the info I need for my purposes. It's much faster than calling the API and I don't have to worry about any cross browser stuff. This is exactly the solution I was looking for."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-16 10:12:06",
    "text": "nice. glad it worked out!"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-01-16 10:22:52",
    "edited": {
      "time_stamp": "2020-01-16 10:23:00"
    },
    "text": "Nice! Good news on my part too - I didnâ€™t have to present my presentation; which is a bonus as I absolutely hate doing presentations! :D"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2020-01-16 14:08:26",
    "text": "Unless I missed it, it still doesn't seem like the Companies API allows you to Get a Company by a custom property (like our own internal organization_id). I remember hearing from someone at HubSpot at least 1+ years ago this was being considered or in development.\n\nDoes anyone at HubSpot know if this is any closer to coming to fruition? This is such a huge limitation for us right now and makes it incredibly difficult to create and update Companies in HubSpot to sync with our software.",
    "reply_count": 13,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2020-01-16 14:16:14"
      },
      {
        "time_stamp": "2020-01-16 14:50:25"
      },
      {
        "time_stamp": "2020-01-16 15:02:25"
      },
      {
        "time_stamp": "2020-01-16 15:05:30"
      },
      {
        "time_stamp": "2020-01-16 15:07:35"
      },
      {
        "time_stamp": "2020-01-16 15:08:47"
      },
      {
        "time_stamp": "2020-01-16 15:20:51"
      },
      {
        "time_stamp": "2020-01-16 15:30:16"
      },
      {
        "time_stamp": "2020-01-16 16:02:04"
      },
      {
        "time_stamp": "2020-01-16 16:05:15"
      },
      {
        "time_stamp": "2020-01-22 08:36:24"
      },
      {
        "time_stamp": "2020-01-22 08:39:07"
      },
      {
        "time_stamp": "2020-01-22 08:39:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-16 14:16:14",
    "text": "Do you have any of this integration on your own server? You could poll the full api, and keep a database/json file on your server that has a mapping (company, company id, and the foreign key you are talking about like organization_id) and then pull directly using the api"
  },
  {
    "poster": {
      "poster_name": "Mark Kofman",
      "poster_handle": "mark027"
    },
    "time_stamp": "2020-01-16 14:50:25",
    "text": "we have built a 3rd party tool to overcome such limitations and which allows export and filter by any field on a company level - <https://www.import2.com/apps/HubSpot>\n\nmaybe it can help"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2020-01-16 15:02:25",
    "text": "<@U25PYL3Q8> No don't have it on our own server. I was ideally hoping to avoid adding more fields to our own database to store HubSpot IDs. I know it can be done that way, just seems very inefficient."
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2020-01-16 15:05:30",
    "text": "<@UMSS3FZ1A> Thanks Mark, but that doesn't do what we need. Not looking to import with CSV files. Looking to create, update and associate Companies through the API in real-time with our property."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-16 15:07:35",
    "text": "is this just a tool you use from your command line to do stuff with?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-16 15:08:47",
    "text": "I'm going to bet that this isn't being worked on -- it just isn't the way most apis are worked. They make certain fields accessible (create date, updated date, id are really the most common, sometimes status) and that is how you query the system"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2020-01-16 15:20:51",
    "text": "Ah damn it. I just found out HubSpot did finish it, but it's only included in Enterprise and not Professional Hub. :disappointed:\n<https://community.HubSpot.com/t5/HubSpot-Ideas/Search-contacts-companies-and-deals-by-custom-properties/idi-p/11081>"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2020-01-16 15:30:16",
    "text": "We have a saas product and we want HubSpot contacts and companies to be in sync with our own database. Contacts are easy enough because users in our database are keyed on email address just like contacts in HubSpot. But Companies are harder, because there isn't a common key. So we either need to (1) Call the Contacts API to get the Contact objectID, then call the CRM Associations API to see if there is an existing relationship to a company. If yes, PUT request to the Companies API, if no then POST to Companies API. Which is a minimum of 3 HTTP requests. Then it gets trickier with many to one relationships too.  Or (2) We store the HubSpot companyId in our own database (or somewhere on our server) so we can just make the PUT/POST to Companies API. This solution is more efficient, but I just hate storing HubSpot keys in our database."
  },
  {
    "poster": {
      "poster_name": "Mark Kofman",
      "poster_handle": "mark027"
    },
    "time_stamp": "2020-01-16 16:02:04",
    "text": "We opted for option 2. In my opinion when you trying to keep databases in sync, eventually you will have to have a map of IDs between the two systems."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-16 16:05:15",
    "text": "Ahh I gotcha. Yeah, generally you have some private properties that are keys between other systems so you can make efficient calls. Generally storing any related key ids.\n\nI get your need for it, yeah it sucks it isn't available unless you are enterprise."
  }
]
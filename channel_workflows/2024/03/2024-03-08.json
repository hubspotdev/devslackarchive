[
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 06:28:40",
    "text": "Good Morning all,  i developed a custom coded using python that sets a property as text for \"Previous owner\"property i created. it has three functions, one to get the properties with history and get the second most recent HubSpot owner id, a second function to retrieve the owners names using the owners api (im retriving all owners and making a dictionary), and third a batch update for said property. it technically works for single enrolled companies, but if i do a list enroll of say 2k companies, it only works for certain companies, any help would be appreciated!",
    "reply_count": 35,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-08 07:35:44"
      },
      {
        "time_stamp": "2024-03-08 07:40:18"
      },
      {
        "time_stamp": "2024-03-08 07:46:44"
      },
      {
        "time_stamp": "2024-03-08 07:48:01"
      },
      {
        "time_stamp": "2024-03-08 07:51:19"
      },
      {
        "time_stamp": "2024-03-08 08:12:17"
      },
      {
        "time_stamp": "2024-03-08 08:25:28"
      },
      {
        "time_stamp": "2024-03-08 08:25:46"
      },
      {
        "time_stamp": "2024-03-08 08:26:27"
      },
      {
        "time_stamp": "2024-03-08 13:29:30"
      },
      {
        "time_stamp": "2024-03-08 13:31:38"
      },
      {
        "time_stamp": "2024-03-08 13:31:51"
      },
      {
        "time_stamp": "2024-03-08 13:32:48"
      },
      {
        "time_stamp": "2024-03-08 13:46:39"
      },
      {
        "time_stamp": "2024-03-08 14:05:47"
      },
      {
        "time_stamp": "2024-03-08 14:11:59"
      },
      {
        "time_stamp": "2024-03-08 14:15:47"
      },
      {
        "time_stamp": "2024-03-08 14:16:40"
      },
      {
        "time_stamp": "2024-03-08 14:18:15"
      },
      {
        "time_stamp": "2024-03-08 14:19:14"
      },
      {
        "time_stamp": "2024-03-08 14:22:55"
      },
      {
        "time_stamp": "2024-03-08 14:23:56"
      },
      {
        "time_stamp": "2024-03-08 14:25:18"
      },
      {
        "time_stamp": "2024-03-08 14:25:46"
      },
      {
        "time_stamp": "2024-03-08 14:25:47"
      },
      {
        "time_stamp": "2024-03-08 14:26:22"
      },
      {
        "time_stamp": "2024-03-08 14:26:40"
      },
      {
        "time_stamp": "2024-03-08 14:27:03"
      },
      {
        "time_stamp": "2024-03-08 14:27:49"
      },
      {
        "time_stamp": "2024-03-08 14:28:27"
      },
      {
        "time_stamp": "2024-03-08 14:28:31"
      },
      {
        "time_stamp": "2024-03-08 14:28:46"
      },
      {
        "time_stamp": "2024-03-08 14:29:14"
      },
      {
        "time_stamp": "2024-03-08 14:30:00"
      },
      {
        "time_stamp": "2024-03-08 14:34:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 07:35:44",
    "text": "Is it possible that some companies don't have a previous owner?  Maybe they don't even have an owner to begin with?\n\nWhat would help is understanding the specifics surrounding what you mean by it doesn't work.\n\nAPI calls fail, user id can't be found, etc."
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 07:40:18",
    "text": "Im working on a sandbox, so i made sure all the companies had a previous owner, im getting a 429 error,, too many requests"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 07:46:44",
    "text": "some enroll but they execute the code"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 07:48:01",
    "text": "Are you using try/except in your api calls?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 07:51:19",
    "text": "How often do you think your users list will change?  I might suggest having a mapping object for that aspect instead of making a request every time."
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 08:12:17",
    "text": "Wouldnt be able to tell you, could be often as well as it can be not often"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 08:25:28",
    "text": "Ok.  Please read the documentation here <https://developers.HubSpot.com/docs/api/workflows/custom-code-actions|https://developers.HubSpot.com/docs/api/workflows/custom-code-actions>"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 08:25:46",
    "text": "It talks about retries and the error 429"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 08:26:27",
    "text": "Depending on your product tier, there are rate limits"
  },
  {
    "poster": {
      "poster_name": "Johan L",
      "poster_handle": "bnjl"
    },
    "time_stamp": "2024-03-08 08:59:55",
    "text": "Just getting the length of the phone number should be possible in a \"Format data\" action in custom mode. basically length(property)"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 13:29:30",
    "text": "i tried using tey excepts but it doesnt do retry it just stops all together. is that limited to only the HS SDK Im using request url instead"
  },
  {
    "text": "Yes - that's what I can interpret from this",
    "time_stamp": "2024-03-08 13:31:38"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 13:31:51",
    "text": "The note at the bottom..."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 13:32:48",
    "text": "I rarely run into this issue so maybe you can copy/paste your code here without your api key and i can see if perhaps there is another approach you can take"
  },
  {
    "text": "",
    "time_stamp": "2024-03-08 13:46:39"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:05:47",
    "edited": {
      "time_stamp": "2024-03-08 14:07:21"
    },
    "text": "Ok - This all looks good but just need to clarify a few things...\n\n1.) On line 93 you are creating a list of Company IDs but based on my understanding, the coded action runs on a single enrolled object - not multiple so this should only ever include a single id."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:11:59",
    "text": "2.) Because of this, I see use of the \"batch\" endpoints for reading/updating companies but I think you want use the endpoints for reading/updating a single company"
  },
  {
    "text": "3.) Have you considered printing your response.headers - you may want to consider adding this. I've never implemented this so not entirely sure how to advise",
    "time_stamp": "2024-03-08 14:15:47"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:16:40",
    "text": "Essentially add checks for the rate limit and maybe add a delay until the next interval becomes available."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:18:15",
    "text": "4.) It's important to understand that when you enroll 2,000 companies, HubSpot scales the workflow service across their infrastructure and you likely have multiple lambda servers running and making API calls which is why you are getting the 429 response."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:19:14",
    "text": "5.) Is this something you plan to run all the time?  Doesn't seem typical that 2,000 companies would be running through the action everytime"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:22:55",
    "text": "6.) It seems more practical to run this script offline once and then fire it whenever company owner changes which should reduce the amount of 429 errors"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 14:23:56",
    "text": "Ok Thankyou so much for the help Ryan! so you are saying i should remove the batch, and make it so that it does single ids?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:25:18",
    "text": "I'm not entirely sure if that will fix the problem but I think it's worth optimizing the code and treat it as a single company.  This will reduce your need for for loops in other functions you have defined."
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 14:25:46",
    "text": "ill try that, should i do it with the sdk not the url request?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:25:47",
    "text": "I think my point on #6 will actually be better as you are only running into the issue when you batch enroll 2k companies"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:26:22",
    "text": "Always use the SDK unless their API documentation isn't updated and the SDK doesn't work as you you hoping."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:26:40",
    "text": "When I was trying to do associaitons and create notes - I ended up using requests"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 14:27:03",
    "text": "let me see if i understood point 6 correctly, do a batch update 1 time ofline, then change it to single ids with a trigger for when ownership is changed?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:27:49",
    "text": "Yes but even offline you can use the single ids.  download a list of Company ids and then for loop over it."
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 14:28:27",
    "text": "i see"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:28:31",
    "edited": {
      "time_stamp": "2024-03-08 14:28:35"
    },
    "text": "You shouldn't run unto 429 errors because you are making single calls and not scaling the service like HubSpot is"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 14:28:46",
    "text": "again THANKS SO MUCH,your input has been phenomenal"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:29:14",
    "text": "Happy to help!"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 14:30:00",
    "text": "best of luck and keep me posted on your final result.  FYI - I did enjoy reading your code and learned a few things - I tend to hack things together but yours looked very clean and easy to read"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2024-03-08 14:34:07",
    "text": "haha! appreciate that, ill keep you posted!"
  }
]
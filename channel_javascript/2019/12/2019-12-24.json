[
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:41:58",
    "text": "A merry Christmas Eveto everyone! If there is a developer as crazy asme, i.e. working today, help would be much appreciated!!"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-12-24 05:43:40",
    "text": "working yes, crazy I don't know :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:44:03",
    "text": "Question: I'm trying to target a radio button on a HubSpot form using the data-reactid generated by HS like so:   document.querySelector(\"[data-reactid=.hbspt-forms-0.1:$1.$choose_your_area_of_interest.0.$Stocks and Shares.0.0]\")...    however JS doesn't like the string that represents the data-reactid. Is there any way to parse it into something the querySelector can deal with, or Esther perhaps another unique id for that radio button I need to use?"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:44:50",
    "text": "Esther = is there :face_with_raised_eyebrow:"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-12-24 05:48:09",
    "text": "I never target reactids because when someone changes something in the form it will be broken. I target names. But from the looks of the reactid you want to target a select option?"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-12-24 05:48:43",
    "text": "or a checkbox?"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:49:15",
    "text": "Yes exactly - a radio selection..."
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:49:33",
    "text": "I.e. if option a is selected...do this"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:51:37",
    "text": "*p.s. yes sage words re method - must be what happens when you brine a turkey and code at the same time :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-12-24 05:53:31",
    "text": "I would do `document.querySelector('[name=\"choose_your_area_of_interest\"]').addEventListener('click', function(event){ if(event.value === 'Stocks and Shares') { /* do something */ }})`"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:54:13",
    "text": "ahhh interesting"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:54:49",
    "text": "I was putting the code on the 'on submit' button, but this is groovy - thank you!"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-12-24 05:55:34",
    "text": "it is not going to work, i think event.value is not correct but now you can move on"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-12-24 05:58:31",
    "edited": {
      "time_stamp": "2019-12-24 05:58:49"
    },
    "text": "You probably also need to check when another radio button is clicked to undo the action you did for stocks and shares"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 05:59:34",
    "text": "I was thinking of keeping it in the submit fn and saying:   \"If document.querySelector('[name=\"choose_your_area_of_interest\"]').value =='stocks and shares') {. ///etc   }"
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2019-12-24 06:00:28",
    "text": "that could work"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 06:02:28",
    "text": "Thanks for your help!!! Extra turkey for you :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 06:02:37",
    "text": ":christmas_tree:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-12-24 06:38:12",
    "text": "haha, more than two of us now"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-12-24 06:38:36",
    "text": "def don't target the react items, go with the=`name`"
  },
  {
    "poster": {
      "poster_name": "Eve Ainsbury",
      "poster_handle": "e.ainsbury"
    },
    "time_stamp": "2019-12-24 09:16:24",
    "text": ":+1: Thanks Nicholas"
  }
]
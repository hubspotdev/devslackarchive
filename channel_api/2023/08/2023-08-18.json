[
  {
    "poster": {
      "poster_name": "Minsung Park",
      "poster_handle": "minsung.park"
    },
    "time_stamp": "2023-08-18 01:35:29",
    "text": "hello, everyone?!\n\nI try to create a deal by*`/crm/v3/objects/deals POST API`* .\nIs \"association\" mandatory for json body?"
  },
  {
    "poster": {
      "poster_name": "Atif Hussain",
      "poster_handle": "atif.hussain"
    },
    "time_stamp": "2023-08-18 03:05:39",
    "text": "<https://i.imgur.com/XncKiYN.png>\n\ncan anyone tell me how i able to see details information about this timeline event in contacts of HubSpot .\nand how i can make a segment on the basis of timeline event ,\nI have a  timeline event survey  inside that there is nps_score",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-18 07:24:54"
      },
      {
        "time_stamp": "2023-08-20 23:32:40"
      },
      {
        "time_stamp": "2023-08-21 01:22:02"
      },
      {
        "time_stamp": "2023-08-21 01:26:15"
      },
      {
        "time_stamp": "2023-08-21 01:29:17"
      },
      {
        "time_stamp": "2023-08-21 08:27:26"
      },
      {
        "time_stamp": "2023-08-22 02:33:40"
      },
      {
        "time_stamp": "2023-08-22 02:34:30"
      },
      {
        "time_stamp": "2023-08-22 03:55:59"
      },
      {
        "time_stamp": "2023-08-22 04:16:06"
      },
      {
        "time_stamp": "2023-08-22 04:28:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alex Lyon",
      "poster_handle": "alex281"
    },
    "time_stamp": "2023-08-18 04:33:11",
    "edited": {
      "time_stamp": "2023-08-18 04:34:13"
    },
    "text": "Hi there, I am getting an internal server error when performing a PUT, I was hoping someone here could dig in the logs and ship a fix. Here is the request / response. Sensitive data omitted.\n\n```PUT /crm/v4/objects/contact/6449251/associations/company/16999681854 HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nContent-Length: 0\nHost: <http://api.hubapi.com|api.hubapi.com>\nUser-Agent: HTTPie/3.2.1\n\nHTTP/1.1 500 Internal Server Error\nAccess-Control-Allow-Credentials: false\nCF-Cache-Status: DYNAMIC\nCF-Ray: 7f865bf21aac23c4-LHR\nConnection: keep-alive\nContent-Length: 100\nContent-Type: application/json;charset=utf-8\nDate: Fri, 18 Aug 2023 01:24:47 GMT\nNEL: {\"success_fraction\":0.01,\"report_to\":\"cf-nel\",\"max_age\":604800}\nReport-To: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=U7RwuuVaQQj5zQ%2Ba4n7tNFLDs9vAdmvoeZwnoxMPFJrcRKIIJAhKgH0nemaCywUbi%2BsI2Kcdt2AvLDQzSWUZWZ3COoO7zViR3Y5N%2Fvkni3gj3sA4B%2FXJxdNG%2BTnGD%2BDR\"}],\"group\":\"cf-nel\",\"max_age\":604800}\nServer: cloudflare\nStrict-Transport-Security: max-age=31536000; includeSubDomains; preload\nVary: origin, Accept-Encoding\nX-Content-Type-Options: nosniff\nX-HubSpot-Correlation-Id: 43534469-bb62-43ee-86d0-3c7bb542abd3\nX-HubSpot-RateLimit-Interval-Milliseconds: 10000\nX-HubSpot-RateLimit-Max: 100\nX-HubSpot-RateLimit-Remaining: 99\nX-HubSpot-RateLimit-Secondly: 10\nX-HubSpot-RateLimit-Secondly-Remaining: 9\nX-Trace: 2B5D71005A53C2CCADD8709EB20061572FDDD48DA6000000000000000000\nalt-svc: h3=\":443\"; ma=86400\nx-envoy-upstream-service-time: 14\nx-evy-trace-listener: listener_https\nx-evy-trace-route-configuration: listener_https/all\nx-evy-trace-route-service-name: envoyset-translator\nx-evy-trace-served-by-pod: iad02/hubapi-td/envoy-proxy-6c94986c56-pnntv\nx-evy-trace-virtual-host: all\nx-request-id: 43534469-bb62-43ee-86d0-3c7bb542abd3\n\n{\n    \"correlationId\": \"43534469-bb62-43ee-86d0-3c7bb542abd3\",\n    \"message\": \"internal error\",\n    \"status\": \"error\"\n}```",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-18 04:35:01"
      },
      {
        "time_stamp": "2024-09-03 01:33:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alex Lyon",
      "poster_handle": "alex281"
    },
    "time_stamp": "2023-08-18 04:35:01",
    "text": "We noticed this first in prod, but this trace is a local repro using httpie"
  },
  {
    "poster": {
      "poster_name": "Mitesh Koshiya",
      "poster_handle": "miteshkoshiya5854"
    },
    "time_stamp": "2023-08-18 04:43:00",
    "text": "Hi\nIs email is required for creation of contact in hUbspot?"
  },
  {
    "poster": {
      "poster_name": "Mitesh Koshiya",
      "poster_handle": "miteshkoshiya5854"
    },
    "time_stamp": "2023-08-18 04:43:08",
    "text": "What if we don't have email"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-08-18 05:30:10",
    "edited": {
      "time_stamp": "2023-08-18 05:31:16"
    },
    "text": "Do I get a prize if I found a endpoint that only accepts api key (which are deprecated as you all know)\n\n```HTTP 403\n\n{\n  \"status\": \"error\",\n  \"message\": \"This API can't be called using an OAuth access token. A valid developer API key must be provided in the `hapikey` query parameter, and a valid `appId` must be provided in the API request.\",\n  \"correlationId\": \"6b7e4557-78dc-4ea1-9532-acc4623581a6\",\n  \"links\": {\n    \"docs\": \"<https://developers.HubSpot.com/docs/api/developer-tools-overview#developer-api-keys>\"\n  },\n  \"category\": \"INVALID_AUTHENTICATION\"\n}```",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-18 05:33:07"
      },
      {
        "time_stamp": "2023-08-18 05:36:07"
      },
      {
        "time_stamp": "2023-08-18 05:49:55"
      },
      {
        "time_stamp": "2023-08-18 05:51:18"
      },
      {
        "time_stamp": "2023-08-18 05:51:52"
      },
      {
        "time_stamp": "2023-08-18 05:52:04"
      },
      {
        "time_stamp": "2023-08-18 07:37:45"
      },
      {
        "time_stamp": "2023-08-18 07:52:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Christopher Asuncion",
      "poster_handle": "christopherfosterasun"
    },
    "time_stamp": "2023-08-18 05:30:21",
    "text": "Hi, new to api\nwhat is the best way to communicate to a SOAP api in HubSpot cms"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-08-18 05:33:07",
    "text": "<@U2H3TT8F2> can you bring some light here and communicate with the product team to see if there is a bug on their side?\n\nRequest that led to this error:\n\n```const HubSpot = require('@HubSpot/api-client');\n\nconst HubSpotClient = new HubSpot.Client({\"accessToken\":\"YOUR_ACCESS_TOKEN\"});\n\nconst objectType = \"sequence\";\nconst propertyName = \"latest_reply\";\nconst archived = false;\nconst properties = undefined;\n\ntry {\n  const apiResponse = await HubSpotClient.crm.properties.coreApi.getByName(objectType, propertyName, archived, properties);\n  console.log(JSON.stringify(apiResponse, null, 2));\n} catch (e) {\n  e.message === 'HTTP request failed'\n    ? console.error(JSON.stringify(e.response, null, 2))\n    : console.error(e)\n}```"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-08-18 05:36:07",
    "edited": {
      "time_stamp": "2023-08-18 05:36:14"
    },
    "text": "oh wait, it mentions \"developer api key\" I read too fast"
  },
  {
    "text": "but still, the doc mentions that this endpoint should be accessible with oAuth and private app:",
    "time_stamp": "2023-08-18 05:49:55"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-08-18 05:51:18",
    "text": "and devloper api key are only for webhooks and timeline event: <https://developers.HubSpot.com/docs/api/developer-tools-overview#developer-api-keys:~:text=Developer%20API%20keys%20can%20be%20used%20for%20managing%20subscriptions%20for%20the%C2%A0Webhooks%20API%20and%20creating%20or%20updating%20event%20types%20for%20the%C2%A0timeline%20events%20feature.%C2%A0All%20other%20API%20calls%20need%20to%20be%20made%20using%20a%20private%20app%20access%20token%20or%20OAuth>."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-08-18 05:51:52",
    "text": "and there is no place in the request url to pass an `appId`"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-08-18 05:52:04",
    "text": "So I think it should worth the digging <@U2H3TT8F2>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 06:44:06",
    "text": "what's the most efficient way to check if a contact is a member of a list?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 06:52:16",
    "text": "is there a \"chatspot\" for developers"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 06:52:21",
    "text": "that would be so helpful!"
  },
  {
    "poster": {
      "poster_name": "satyam vishwakarma",
      "poster_handle": "satyaminfo.in"
    },
    "time_stamp": "2023-08-18 06:53:00",
    "edited": {
      "time_stamp": "2023-08-18 06:56:54"
    },
    "text": "Hi,\nI am reaching out to seek your guidance and expertise regarding the integration of the HubSpot API for our ongoing CMS project.\nWe have a list of valuable customer leads that we would like to seamlessly add to our HubSpot account for better management and engagement.\n\nConsidering your extensive experience with HubSpot and APIs, I would greatly appreciate your insights on the most appropriate approach for achieving this integration.\nSpecifically, I'm torn between utilizing the *Contact APIs* or potentially exploring the *Deals API* for this purpose. Our primary goal is to efficiently transfer customer leads to HubSpot,\nensuring that we maintain accurate and up-to-date records while optimizing our engagement strategies.\nAs such, I am seeking advice on which API(s) would best suit our needs and align with industry best practices.\nIf you could spare some time to discuss this matter or provide any recommendations, I would be incredibly grateful.\n\nYour guidance will significantly contribute to the success of our CMS project and help us make informed decisions about the HubSpot API integration.\nThank you in advance for your assistance. Your expertise is highly valued, and I look forward to your response.\n<#C2YHAHB6K|api>"
  },
  {
    "poster": {
      "poster_name": "Marc Ollmann",
      "poster_handle": "mollmann"
    },
    "time_stamp": "2023-08-18 07:24:54",
    "text": "You should be able to access that information through the lists tool"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2023-08-18 07:37:45",
    "text": "Hey Louis, which API are you referring to? Do you have a link to the doc?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2023-08-18 07:52:52",
    "text": "<@U2H3TT8F2> <https://developers.HubSpot.com/docs/api/crm/properties>\n\nendpoint GET*`/crm/v3/properties/{objectType}/{propertyName}`*\n\n*it seems to be happening only with the `sequence`* *`objectType`*"
  },
  {
    "poster": {
      "poster_name": "Gene Ruebsamen",
      "poster_handle": "gene828"
    },
    "time_stamp": "2023-08-18 08:48:43",
    "edited": {
      "time_stamp": "2023-08-18 09:11:09"
    },
    "text": "Hey Everybody!\nWe have a chatbot communicating with users, at a certain point, I would like to _*assign the thread to a user or team* (assignedTo parameter)._ Is this possible via the *<https://developers.HubSpot.com/docs/api/conversations/conversations|Conversations inbox and messages API>* or any other API? The 'update a thread' endpoint seems like where one would do it, however, the docs state one can only OPEN or CLOSE a thread using that endpoint. Are there any other ways to assign a thread to a user or team programatically?"
  },
  {
    "poster": {
      "poster_name": "Ard van Someren",
      "poster_handle": "ard.van.someren"
    },
    "time_stamp": "2023-08-18 10:48:47",
    "text": "I know a message from some while ago. I also know this -button- pops up somewhere, but every time I want to look it up, I ask myself, how the hell can they hide it so deep...\n\nIs there a direct (deep)link to this location?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-08-18 10:54:32",
    "text": "For the contacts api?"
  },
  {
    "poster": {
      "poster_name": "Ard van Someren",
      "poster_handle": "ard.van.someren"
    },
    "time_stamp": "2023-08-18 10:55:13",
    "text": "mainly contacts and companies"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-08-18 10:55:17",
    "text": "<https://identity.getpostman.com/accounts?continue=https%3A%2F%2Fgo.postman.co%2Fnetwork%2Fimport%3Fcollection%3Ddd75d149eaa15806754f%26referrer%3Dhttps%253A%252F%252Fdevelopers.HubSpot.com%252Fdocs%252Fapi%252Fcrm%252Fcontacts%26traceId%3Dundefined|https://identity.getpostman.com/accounts?continue=https%3A%2F%2Fgo.postman.co%2Fnetwork%[…]2Fdocs%252Fapi%252Fcrm%252Fcontacts%26traceId%3Dundefined>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-08-18 10:55:22",
    "text": "sure here's the link"
  },
  {
    "poster": {
      "poster_name": "Ard van Someren",
      "poster_handle": "ard.van.someren"
    },
    "time_stamp": "2023-08-18 10:57:00",
    "text": "Thats a good start. Thanks Carter."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-08-18 10:57:05",
    "text": "100%"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-08-18 10:57:20",
    "text": "honestly I just go to the docs each time."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-08-18 10:57:32",
    "text": "Or just manually type out the urls for the endpoints"
  },
  {
    "poster": {
      "poster_name": "Ard van Someren",
      "poster_handle": "ard.van.someren"
    },
    "time_stamp": "2023-08-18 10:59:12",
    "text": "okay, thanks for those tips. But being so important, I just don't understand I have to 'look them up'. In my opinion it is just one of the most clear and simple solutions to publish them"
  },
  {
    "poster": {
      "poster_name": "Ard van Someren",
      "poster_handle": "ard.van.someren"
    },
    "time_stamp": "2023-08-18 10:59:31",
    "text": "yes I know I am a boomer"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 11:39:03",
    "text": "would this endpoint return a 404 if a contact wasn't found?\n```<https://api.hubapi.com/contacts/v1/contact/v1/${email}/profile>````"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "taras.sachavskyi"
    },
    "time_stamp": "2023-08-18 11:43:22",
    "text": "<@UDHT6N5SM> You can check, just send email which doesn't exist"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 11:44:29",
    "text": "yea, I do get a 404 but I'm not sure if that's the correct response for \"contact not found\" or if I'm doing something wrong and it can't find that endpoint at all"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 11:45:13",
    "text": "actually, almost definitely something is wrong because the email address does exist and I get a 404"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 11:45:47",
    "text": "double v1!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-08-18 11:45:52",
    "text": "I think I found it..."
  },
  {
    "poster": {
      "poster_name": "Evan Mora",
      "poster_handle": "evan313"
    },
    "time_stamp": "2023-08-18 13:40:50",
    "edited": {
      "time_stamp": "2023-08-18 13:41:22"
    },
    "text": "When creating tickets via the api, is there an easy way to associate a file as an attachment, or do i have to use the files and notes APIs still as referenced in this community post: <https://community.HubSpot.com/t5/CMS-Development/How-to-create-an-attachment-for-a-ticket-by-using-the-API/m-p/300735>\n\nI know it’s about 4 years old, but i wasn’t sure if this is still the proper way to associate it.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-08-18 14:23:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2023-08-18 14:23:23",
    "edited": {
      "time_stamp": "2023-08-18 14:25:06"
    },
    "text": "More or less the same process. Except it might be a good idea to use the updated versions of those APIs.\n\n~Might be able to save yourself an API call using the options associations parameter available in the v3 Notes API.~\n\n^^Looks like you were able to do that in the previous version as well, so it’s really up to you. The v3s would presumably be more stable I guess.\n<https://developers.HubSpot.com/docs/api/crm/notes>\n<https://developers.HubSpot.com/docs/api/files/files>"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-08-18 14:41:49",
    "text": "Hey all — I’m trying to do a HubDB query that excludes rows that contain a certain substring. The <https://developers.HubSpot.com/docs/api/cms/hubdb#filter-returned-rows|documentation for HubDB query filters> lists `contains` and `icontains` logical operators, but I’m not seeing a way to test for the inverse. It also lists the `like` and `not_like` operators for strings, but there doesn’t seem to be any explanation of what they do.\n\nDoes know if there’s a way to do a `not string_containing` comparison in a HubDB query? Is there any general way to invert the logical operator of a filter? Could `not_like` do what I’m looking for?\n\nThanks!",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-08-18 15:11:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-18 14:56:09",
    "text": "Is there a way to get the equivalent of *`/crm/v3/schemas/{objectType}`* for standard object types? You can pass standard object types as input, but it fails unless you have custom object OAuth scopes. I don’t see anything in the v3 or v4 associations API that will give me the list of all associations like the schema endpoint does.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-18 14:59:01"
      },
      {
        "time_stamp": "2023-08-18 15:05:10"
      },
      {
        "time_stamp": "2023-08-18 15:11:46"
      },
      {
        "time_stamp": "2023-08-20 10:13:29"
      },
      {
        "time_stamp": "2023-08-21 07:28:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-18 14:59:01",
    "text": "or are we just supposed to hardcode the giant table of standard association type ids?"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-18 15:05:10",
    "text": "both *`/crm/v4/associations/{fromObjectType}/{toObjectType}/labels` and `/crm/v3/associations/{fromObjectType}/{toObjectType}/types`* require knowing the existing “toObjectTypes” and they don’t return the cardinality information :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-08-18 15:11:19",
    "text": "Didn’t find a solution to my primary problem, but did find reference to the `like` and `not_like` logical operators in some other sources — they do case-insensitive string comparison. Not useful here, but good to know."
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-18 15:11:46",
    "text": "Seems like */crm/v3/schemas/{objectType}* should support `crm.schemas.deals.read` and `tickets` as granular scopes"
  }
]
[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 06:48:09",
    "text": "<@UQWGKUEN7> how exactly do you do that?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-28 07:06:45",
    "text": "We tend to plop global colors either in the head or in a css doc under the ::root {} and then just assign them how we normally would for a specific css attribute. Then once assigned it’s accessible anywhere. Pretty dope!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:03:36",
    "text": "oh, ok, I was thinking about having a design token file (JSON or YAML) that generates a fields.json file and a CSS variable file"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:03:44",
    "text": "or maybe just fields.json to CSS variable directly"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:05:20",
    "text": "mainly because I've been writing more and more style options for rows, columns, modules, etc. and I want to keep them consistent with our design system"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:07:34",
    "text": "do you/anyone think that the right direction would be to build a webpack plugin that loops through fields.json and generates a css file?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-28 11:07:47",
    "text": "Ahhh very cool - I see what you mean now. I think I misunderstood at first. Or misread as it was on my phone.\n\nIm like 1 step away from finishing a syntax/parser extension for postcss/hubl so that it will recognize hubl expressions and statements without needing to come up with any silly workarounds"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:08:49",
    "text": "awesome, yea, I've definitely talked to you about that before but for some reason thought something else would be needed. I guess .css files already have access to HubL"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:09:01",
    "text": "what's the 1 step away? Can the community help?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-28 11:09:09",
    "text": "&gt; do you/anyone think that the right direction would be to build a webpack plugin that loops through fields.json and generates a css file?\n are you saying for all fields.json files or just the main theme one?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:09:16",
    "text": "the main one"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:09:21",
    "text": "but I don't think it's necessary anymore"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:09:25",
    "text": "your solution makes sense"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:09:38",
    "text": "those values are already accessible in css files"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:09:54",
    "text": "but the additional complication of postcss/scss makes that a hurdle"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:10:14",
    "text": "I'm in the process of converting scss to postcss for my main project soonish"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-28 11:12:23",
    "text": "Yea Im mainly referring to webpack builds. Postcss freaks out if you use any hubl syntax in a css file. And after speaking a bit with the maintainer he said the only way to fix it was to write a new parser for it."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:13:59",
    "text": "can I use your plugin yet if I just have regular variables (nothing fancy)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:14:02",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-28 11:14:40",
    "text": "Trying to get it finished before dev day because that is the main thing kind of keeping us from really using webpack and making it friendly to edit in DM as well.\n\nFor our use case we really need to have our base theme in webpack so we can build faster but all of the child themes are built off of it and need to be able to be edited in DM."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-28 11:16:49",
    "text": "Right now the postcss-hubl plugin only will allow for statements so you can print `{{theme.colors.primary_color}}` but wont work quite yet for `{% set var = something %}`  or anything that requires `{%%}` syntax.\n\nAlthough it’s like moments away from working fully."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:46:38",
    "text": "cool, `{{theme.colors.primary_color}}` is all I really need I think"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-28 11:46:42",
    "text": "very excited"
  }
]
[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-07-02 07:43:16",
    "edited": {
      "time_stamp": "2021-07-02 07:43:27"
    },
    "text": "you doing this with the standard HubSpot form module? or an embed code?"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-07-02 08:02:53",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-07-02 08:20:27",
    "text": "Any chance of being able to use hubl in module.css and module.js in the future? Would be nifty.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-02 08:24:26"
      },
      {
        "time_stamp": "2021-07-02 17:13:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-07-02 08:24:26",
    "edited": {
      "time_stamp": "2021-07-02 08:25:02"
    },
    "text": "I know you can work around this for JS by doing\n```{% require_js %}\n  &lt;script&gt;\n  &lt;/script&gt;\n{% end_require_js %}```\nBut it would be nice not to have to do that and break the point of the separation of code."
  },
  {
    "poster": {
      "poster_name": "Cameron Audet",
      "poster_handle": "cameron807"
    },
    "time_stamp": "2021-07-02 08:54:41",
    "text": "howdy, sorry if this has been asked before.  Is there a good flow for migrating content pages from sandbox to prod?"
  },
  {
    "poster": {
      "poster_name": "Cameron Audet",
      "poster_handle": "cameron807"
    },
    "time_stamp": "2021-07-02 08:56:33",
    "text": "we currently have a live site in prod on HubSpot and are looking to create a new website, most page content will change, eg modules and such. So my thought was to build it all in sandbox (I have local dev setup pushing to sandbox with theme/template files and such).  However the only solution to populate looked to be build a custom app that fetches json data from sandbox and pushes it to prod.  unless this is supported some other way in HubSpot",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-02 17:22:59"
      },
      {
        "time_stamp": "2021-07-02 17:23:21"
      },
      {
        "time_stamp": "2021-07-02 17:27:21"
      },
      {
        "time_stamp": "2021-07-06 07:42:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ron Kagan",
      "poster_handle": "ron923"
    },
    "time_stamp": "2021-07-02 15:47:48",
    "text": "What's the code that ended up working? Working on a similar issue"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-02 17:13:21",
    "edited": {
      "time_stamp": "2021-07-02 17:21:10"
    },
    "text": "Great question.\n\nLinked JS and CSS can contain HubL, as well as those added using require js and require css. The module.css and module.js as you noted do not.\n\nWe hear you on the authoring experience. We're thinking of ways of handling it. The trouble with allowing it in module.css and module.js directly is that we load those files once per page those modules are on. The main driving factor for wanting HubL in JS and CSS is to add styles or functionality on an instance specific basis based on the instances field values. \n\nThis means we would need to load largely redundant code for each instance on a per page basis because most of the code in your module.css isnt likely specific to an individual instance and you likely want that shared code to be its own file so it can be cached separately. Otherwise having it in the same file then becomes problematic because on subsequent page loads we would need to provide new files for modules youve already seen before because there are different instances on the page, instead of you being able to load from cache.\n\nBasically we need to keep the js and CSS that isnt instance specific separate from the instance specific code, that will deliver the best of both worlds. For now the workaround we have is using the require hubl tags in the module html. We hear you on the authoring experience and we also see some other benefits we can have by finding a new method to handle this. We have nothing specific to announce at this time but it is something we are thinking about and exploring.\n\nOn this page youll find best practices we recommend for handling this. <https://developers.HubSpot.com/docs/cms/building-blocks/modules/files|https://developers.HubSpot.com/docs/cms/building-blocks/modules/files>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-02 17:22:59",
    "text": "Content staging seems like the better choice for your projects needs"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-02 17:23:21",
    "text": "<@U02162GK9SP> how to do a website redesign"
  },
  {
    "time_stamp": "2021-07-02 17:23:22",
    "edited": {
      "time_stamp": "2021-07-02 17:23:25"
    },
    "text": "If you're doing a website redesign you can use Content Staging to stage your live pages and then swap templates of those pages to the new redesigned templates.\n<https://developers.HubSpot.com/docs/cms/features/content-staging>",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-02 17:23:41"
      },
      {
        "time_stamp": "2021-07-06 07:17:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-02 17:23:41",
    "text": "<@U027MVCCX3J>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-07-02 17:27:21",
    "text": "You can still create the templates in your sandbox but you would when ready for content, upload the new theme or templates to the prod account. Stage any pages you are changing and any new pages you will have on the new site, use your new templates. Publish it all at once when you're ready to go live."
  },
  {
    "poster": {
      "poster_name": "Aleksi Lehtola",
      "poster_handle": "aleksi"
    },
    "time_stamp": "2021-07-02 18:55:56",
    "text": "Hi Everyone, Fresh face here! Aleksi from Kaksio Labs, weâ€™re technical HubSpot solution and also app partner focusing on CMS, custom development, integrations, API etc. I work between the customer and our development team and always keeping my ears open for new betas and development. Happy to join the conversation!"
  }
]
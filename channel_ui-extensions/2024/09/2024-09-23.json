[
  {
    "poster": {
      "poster_name": "Denise Thijzen",
      "poster_handle": "dthijzen"
    },
    "time_stamp": "2024-09-23 12:34:22",
    "edited": {
      "time_stamp": "2024-09-23 12:36:02"
    },
    "text": "Hi <@U02F2QPB4P8> and <@U07EHBPLGLA> - we sunset the sync feature for development sandboxes on Sept 10th. This was communicated through our product notifications and also the developer change logs.\n\nThe reasoning was two pronged:\n\n• Overall low adoption of this functionality\n• Development sandboxes are meant to be early proof of concept environments where users are encouraged to delete and create a new development sandbox using the CLI as they begin new projects. This ensures development sandboxes always have an exact mirror of their production portal's CRM object definitions when they begin new projects for accurate production like testing. "
  },
  {
    "poster": {
      "poster_name": "Brad Tollett",
      "poster_handle": "brad208"
    },
    "time_stamp": "2024-09-23 12:42:19",
    "text": "Does `hs project dev --debug` let you step through code with breakpoints? Didn't know a debug flag existed."
  },
  {
    "poster": {
      "poster_name": "Jeff Bell - Level 4",
      "poster_handle": "jeffrey.bell"
    },
    "time_stamp": "2024-09-23 12:42:43",
    "text": "Hey all. I've got an external API I'm working with. For each call, I need to authenticate and pull back the bearer token and apitoken. I need to append the apitoken to each subsequent request.\n\nI have different CRM cards for each call - one to pull contacts for a company and one to pull aircraft for a company. I'm running into a situation where I THINK what's happening is that apikeys are getting reset between the calls, causing one of them to fail. For example, I think this is what's happening:\n\n1. Get Contact Authentication: apikey = 12345\n2. Get Aircraft Authentication: apikey = abcde\n3. Get Contact Details (using apikey: abcde) &gt; invalid apikey\n4. Get Aircraft Details (using apikey: abcde) &gt; results found\nI presume there's a better way to do this? Can anyone help me sort this out?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-23 15:36:00"
      },
      {
        "time_stamp": "2024-09-24 02:22:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aanchal Sheth (HubSpot PM)",
      "poster_handle": "asheth"
    },
    "time_stamp": "2024-09-23 13:19:01",
    "text": "Hi! I've given Figma kit access to everyone who has requested for it through the <https://app.HubSpot.com/l/product-updates/?update=13932250|product update above>. You should've received an email about it. Let me know if you haven't received it yet."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-09-23 14:45:38",
    "text": "Brad, no it does not do breakpoints."
  },
  {
    "poster": {
      "poster_name": "Brad Tollett",
      "poster_handle": "brad208"
    },
    "time_stamp": "2024-09-23 15:34:39",
    "text": "Will an option ever be added to openIframeModal that allows users to embed an iframe inside of a card instead of having to click and open up a modal?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-23 16:28:33"
      },
      {
        "time_stamp": "2024-09-24 15:22:07"
      },
      {
        "time_stamp": "2024-09-24 15:29:22"
      },
      {
        "time_stamp": "2024-09-26 03:49:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Brad Tollett",
      "poster_handle": "brad208"
    },
    "time_stamp": "2024-09-23 15:35:05",
    "text": "Ahh, got excited for a minute. Too bad. Thanks for clarifying"
  },
  {
    "poster": {
      "poster_name": "Brad Tollett",
      "poster_handle": "brad208"
    },
    "time_stamp": "2024-09-23 15:36:00",
    "text": "Hard to say without seeing a minimal example"
  },
  {
    "poster": {
      "poster_name": "Sejal Parikh (HubSpot PM)",
      "poster_handle": "sparikh"
    },
    "time_stamp": "2024-09-23 16:28:33",
    "text": "What would you add in the Iframe if you had such an option?"
  },
  {
    "poster": {
      "poster_name": "Adrian Martén",
      "poster_handle": "adrian.marten"
    },
    "time_stamp": "2024-09-24 00:07:25",
    "text": "Good morning :wave: :slightly_smiling_face:\n\nSo, this is gonna be the death of me. I’ve been hitting this wall for a while now - the extension I’m building works, but the serverless function gives me this log:\n```2024-09-24T05:53:20.988Z ERROR - Error: Cannot find module '@/app/lib/supabase'\nRequire stack:\n- /var/task/test.js\n- /var/task/HubSpotHandler.js\n- /var/runtime/index.mjs\n    at Module._resolveFilename (node:internal/modules/cjs/loader:1140:15)\n    at Module._load (node:internal/modules/cjs/loader:981:27)\n    at Module.require (node:internal/modules/cjs/loader:1231:19)\n    at require (node:internal/modules/helpers:177:18)\n    at Object.&lt;anonymous&gt; (/var/task/test.js:2:27)\n    at Module._compile (node:internal/modules/cjs/loader:1364:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1422:10)\n    at Module.load (node:internal/modules/cjs/loader:1203:32)\n    at Module._load (node:internal/modules/cjs/loader:1019:12)\n    at Module.require (node:internal/modules/cjs/loader:1231:19) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [\n    '/var/task/test.js',\n    '/var/task/HubSpotHandler.js',\n    '/var/runtime/index.mjs'\n  ]\n}```\nIn the browser developer console:\n```HTTP ERROR 405\nReason:\n\n    Method Not Allowed```\nand\n```Serverless function result: {\n  \"status\": \"ERROR\",\n  \"message\": \"[runServerlessFunction] The serverless function 'get-ai-reply' failed to execute: Cannot find module '@/app/lib/supabase'\\nRequire stack:\\n- /var/task/test.js\\n- /var/task/HubSpotHandler.js\\n- /var/runtime/index.mjs.\"\n}```\nWhat am I doing wrong? :upside_down_face:",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-24 02:25:33"
      },
      {
        "time_stamp": "2024-09-24 09:48:36"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-08-21 03:57:36",
    "text": "<@UJQNNKKHN> Be good you see an example of your folder structure. We are trying to implement something similar using gulp along with Sass."
  },
  {
    "poster": {
      "poster_name": "Ryan Jewell",
      "poster_handle": "ryanjewell"
    },
    "time_stamp": "2019-08-21 07:40:32",
    "edited": {
      "time_stamp": "2019-08-21 07:43:23"
    },
    "text": "Thanks for your response :slightly_smiling_face:\nI'm more-so having an issue trying to specify that my file is a template as apposed to a template partial within the code somehow. When i sync my file it always saves as a partial. :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2019-08-21 07:44:56",
    "text": "ah you’re missing the comments in the top of the HTML templates"
  },
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2019-08-21 07:45:12",
    "edited": {
      "time_stamp": "2019-08-21 07:45:22"
    },
    "text": "&lt;!--\n  templateType: page\n  isAvailableForNewContent: true\n--&gt;"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-08-21 07:46:44",
    "text": "What Erik said :smile_cat:!\n\n<https://designers.HubSpot.com/docs/tools/local-development-reference#local-template-format> is where this is documented"
  },
  {
    "poster": {
      "poster_name": "Ryan Jewell",
      "poster_handle": "ryanjewell"
    },
    "time_stamp": "2019-08-21 07:49:30",
    "text": "awesome! thank you so much :pray:"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-08-21 09:01:59",
    "text": "```\n—sync\n—dist\n—src\n——_global-resources\n———_variables.scss\n———_mixins.scss\n———universal.scss\n——project\n———global\n———modules\n———templates\n```\nThis is essentially it. The starting folder structure is pretty traditional... all of our source files are in a `src` folder.  Because you can't sync to the root of the design manager, we keep all the HubSpot files from this build in the `project` (or whatever you want to call it) folder, and that syncs up with a corresponding `project` folder in the DM.  Everything in the `_global-resources` folder gets dynamically added to each .scss file in the build process, so you can use those variables and mixins anywhere in the build.  With every build, the `dist` folder gets deleted and the `project` folder builds to it.  Then, I use `gulp-directory-sync` to sync from the `dist` folder to the `sync` folder. I then watch the sync folder and execute the `hscms upload` on files/directories that are changed or added, and the `hscms remove` command on files/directories that are unlinked (deleted)."
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-08-21 09:16:57",
    "text": "This is amazing!! Thanks so much for explaining and providing this."
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-08-21 09:30:30",
    "text": "No prob, let me know if you run into any issues"
  }
]
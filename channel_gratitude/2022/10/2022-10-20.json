[
  {
    "poster": {
      "poster_name": "Amandine Legal",
      "poster_handle": "al179"
    },
    "time_stamp": "2022-10-20 10:23:59",
    "text": "Thanks <@U25PYL3Q8> you rock !!! :trophy: :trophy: :trophy: :trophy: :trophy: :trophy: :trophy: :trophy:",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-10-20 11:24:30"
      },
      {
        "time_stamp": "2022-10-20 11:24:43"
      },
      {
        "time_stamp": "2022-10-20 11:34:07"
      },
      {
        "time_stamp": "2022-10-20 11:41:36"
      },
      {
        "time_stamp": "2022-10-20 11:44:34"
      },
      {
        "time_stamp": "2022-10-20 11:47:56"
      },
      {
        "time_stamp": "2022-11-02 03:35:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-20 11:24:30",
    "text": "in case anyone was wondering — I just shared some of what I like to do in node in workflows vs how some people set them up.\n\nI think doing async/await is just cleaner VS using chaining with then() etc…..  So what I did was send Amandine a little script with some comments in it that talks about WHAT I LIKE to do — and really helps people new to async javascript and some of the issues that can come from chaining confusion.\n\n<https://gist.github.com/NickDeckerDevs/f3c9934c0da9b0a7b14f7163d63b48d3>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-20 11:24:43",
    "text": "thanks <@U03S04N8C4S> you figured it out very quickly!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-10-20 11:34:07",
    "text": ":grimacing: I’m def a .then() .catch() guy :confused: But I’m also using axios rather than the node client."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-20 11:41:36",
    "edited": {
      "time_stamp": "2022-10-20 11:42:22"
    },
    "text": "```const contact = await axiosMark.get(`/rest/EYA/prospects/${caseNumber}`, {\n  headers: {\n    Authorization: accessToken,\n  }\n})```\nI do it the same for axios as well…\n\nWhy do you do the then catch? do you find it more readable lol?\n\nI also imagine that people that do it your way have a better understanding of programming (more like the nature of this) and don’t just hack things together like i do :wink:\n\nedit: like I just struggled with async/await promises/etc for so long that this was just the easiest way for me to not have issues so I stuck with it and haven’t looked back"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-10-20 11:44:34",
    "text": "Honestly, most of my backend work is done in Python, which is sequential, but logging and debugging CCAs in Python just isn’t a good experience compared to node. Then/catch just feels more natural. \n\nAlso, :100: also team hack. I was a history major :rolling_on_the_floor_laughing:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-10-20 11:47:56",
    "text": "Did I ever tell you about my python experience lol? I was doing a lot in python and having fun, and then I started trying to automate my downloads of music and organizing them on an external drive.. basically for dj stuff, and automating some of that work\n\nwell, so much for that. after about a month of upgrades I did one thing wrong in an update to my script and I was left with one song and one folder.\n\nAfter that I said I guess I’m done with python for a bit"
  }
]
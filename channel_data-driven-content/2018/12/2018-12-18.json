[
  null,
  null,
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 07:49:23",
    "text": "<@U6GNQ7JBU> even if we used multilevel dynamic pages we still need to create table row for every different app combination (so that we can have correct page title for the dynamic pages)? Is this correct?\n\nIf I wan't to have dynamic page, with title \"ePages - Shopify integrations\" I need to have table row which has that text in Page title -column? Is guess there is no possibility to make page title combinations with different tables?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 07:51:18",
    "text": "Are these just one to one combinations? Or can you have app1/app2/app3?"
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 07:51:42",
    "edited": {
      "time_stamp": "2018-12-18 07:52:51"
    },
    "text": "There are only one to one combinations"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 07:53:25",
    "text": "And does each combination have unique data? Or can any of the page data be factored out?"
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 07:54:13",
    "text": "There are some unique data in some pairs and rest have default text."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 07:55:33",
    "text": "Ok have 1 child table with all the apps. Then have 1 parent table with all apps which each row linking to the child table "
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 07:55:34",
    "text": "But the client said that it's probably not a major problem if we need to add all the combinations. Just need to know if there is anything other solutions available."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 07:56:14",
    "text": "Every time you add a new app you only need to add one row to each table "
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 07:59:16",
    "edited": {
      "time_stamp": "2018-12-18 07:59:29"
    },
    "text": "But if we have dynamic pages with these apps:\n\n- epages and shopify\n- epages and mycashflow\n\nHow do we can have correct page title where both apps are mentioned?"
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 08:01:06",
    "text": "Because if the app is in child table, it can have only one static Page title?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 08:02:03",
    "text": "You can override the title value in the template "
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 08:02:18",
    "text": "I can? This changes everything"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 08:02:25",
    "text": "And generate it from the parent row and child row"
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 08:02:54",
    "text": "Okay. This what I was looking for. Is there a documentation about this?"
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 08:05:11",
    "edited": {
      "time_stamp": "2018-12-18 08:05:25"
    },
    "text": "But I guess those manual  title changes won't be added to sitemap.xml -file? So there needs to be direct links  to those dynamic pages?"
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 08:06:32",
    "text": "Ah, of course. I can change title text in HTML-template."
  },
  {
    "poster": {
      "poster_name": "Miika Voutilainen",
      "poster_handle": "miika.voutilainen"
    },
    "time_stamp": "2018-12-18 08:10:05",
    "text": "Thanks Matt. I think I can manage from here."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 08:13:21",
    "text": "Let me know if you have any snags"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 08:13:28",
    "text": "Looking forward to seeing some child tables out in the wild"
  },
  {
    "text": "",
    "time_stamp": "2018-12-18 08:57:03"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-18 09:29:15",
    "text": "`{% set today = unixtimestamp(today().plusDays(1)) %}`"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-18 09:29:47",
    "text": "you can then do an if greater or less that statement"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2018-12-18 09:46:10",
    "text": "You are great <@UD53A9UUR>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-18 09:46:20",
    "text": "HA"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-18 09:46:23",
    "text": "i feel better"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2018-12-18 09:49:07",
    "text": ":+1::slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-18 09:50:43",
    "text": "Ah there’s that short fella!"
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2018-12-18 09:56:23",
    "text": "Hi <@U26DA9CQ0> Can you look at my question in <#C2YH119N2|hubl> channel?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-18 10:31:46",
    "text": "Is anyone else getting a \"failed to update cell\" message whenever trying to update a foreign ID cell?"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-18 11:11:38",
    "text": "*Question* :point_right: What are the most common scenarios and questions related to importing/exporting CSV's into HubDB?\n&gt; (we're exploring some documentation and want to address common questions)"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:19:54",
    "text": "The Biggest Most annoying issue ive had is around illegal characters.",
    "reply_count": 14,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-18 11:20:59"
      },
      {
        "time_stamp": "2018-12-18 11:22:02"
      },
      {
        "time_stamp": "2018-12-18 11:22:03"
      },
      {
        "time_stamp": "2018-12-18 11:22:16"
      },
      {
        "time_stamp": "2018-12-18 11:22:29"
      },
      {
        "time_stamp": "2018-12-18 11:22:44"
      },
      {
        "time_stamp": "2018-12-18 11:23:57"
      },
      {
        "time_stamp": "2018-12-18 11:28:13"
      },
      {
        "time_stamp": "2018-12-18 11:28:46"
      },
      {
        "time_stamp": "2018-12-18 11:29:13"
      },
      {
        "time_stamp": "2018-12-18 11:31:08"
      },
      {
        "time_stamp": "2018-12-18 11:31:17"
      },
      {
        "time_stamp": "2018-12-18 11:32:38"
      },
      {
        "time_stamp": "2018-12-20 11:52:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-18 11:20:59",
    "text": "Could you elaborate a bit? :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:22:02",
    "text": "Having to strip out extra `\"` things like that"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-18 11:22:03",
    "text": "I’ve had something similar where after an import nothing was appearing unless I changed the character type from utf-8 to some european code."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:22:16",
    "text": "Exactly"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:22:29",
    "text": "They now allow you to select the import  charset"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:22:44",
    "text": "but it doesnt help with the stray `\"`"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-12-18 11:23:57",
    "text": "interesting, this is good info! ... what other common characters cause issues?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:28:13",
    "text": "honestly just extra `'` and `\"`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:28:46",
    "text": "this is illegal `'this isn't a string'`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:29:13",
    "text": "and this `\"help the \"helpless\" people\"`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:31:08",
    "text": "Also a stray Comma `,`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:31:17",
    "text": "that will totally screw you up"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-18 11:32:38",
    "edited": {
      "time_stamp": "2018-12-18 11:32:47"
    },
    "text": "Cause CSVs are Comma Separated Values so `\"Value\",\"Value,Two\",\" Value Three\"` can break things"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-18 14:24:42",
    "text": "Any idea how I can pass multiple query parameters to filter a table? I have rows that get tags via a multi-select and I want to be able to say ‘Grab all rows that are tagged both B and C’."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-18 14:36:49",
    "text": "\"When passing values for MULTISELECT columns, the ids or names should be separated by commas (e.g. multiselect_column__contains=1,2)\""
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-18 14:37:23",
    "text": "And I think on multiselects you need to use the numerical ID, but that might have changed"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-18 14:40:47",
    "text": "It changed"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-18 14:41:08",
    "text": "Rad"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-18 14:41:42",
    "text": "If you pass in the query as a comma like that, is that like an AND or an OR?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-18 14:42:56",
    "text": "EG, do these fetch different results:\n```{% set rows = hubdb_table_rows(table_id, 'multiselect__contains=A,B') %}\n{% set rows = hubdb_table_rows(table_id, 'multiselect__contains=A&amp;multiselect__contains=B') %}```"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-18 14:57:25",
    "edited": {
      "time_stamp": "2018-12-18 14:57:36"
    },
    "text": "Oh this is exciting!"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-18 16:28:51",
    "text": "So this is working\n`{% set strategyTable = hubdb_table_rows(1029560,'strategy_tags__contains=' ~ module.resource_tag_list) %}`"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-18 16:29:17",
    "text": "and in that module I’m doing comma separated values, like `enhanced,low_volatility`"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-18 16:30:10",
    "text": "My only issue is that it’s only grabbing rows that have both of those tags. I need it to include anything that has either one of those tags."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-18 16:42:26",
    "text": "<@U26DA9CQ0>, this link is a little dated, but `<https://community.HubSpot.com/t5/CMS-Development/HubDB-Select-with-AND-OR/td-p/3648>`"
  }
]
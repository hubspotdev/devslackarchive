[
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2021-07-01 04:26:12",
    "edited": {
      "time_stamp": "2021-07-01 04:34:35"
    },
    "text": "Just to mention for the sake of curiosity.\nWhat I do is handle through HubL macros.\nI import globally the macros throught the template on the head:\n`{%- import \"../macros.html\" as macros -%}`\niniside a variable like `{{ macros }}`.\nThen you can call and render from inside the modules like so without errors:\n`{{ macros.renderBtn(args) }}`\nConsiderations:\nThis basically breaks your preview for the modules (because it is not imported at module level), but if you use a template preview you will be fine."
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2021-07-01 06:42:12",
    "text": "This works great for html ^ but I import the macro at the module level so my preview doesn't break"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2021-07-01 06:51:49",
    "text": "Oh it's possible now? It used to be blocked for the modules a while ago"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-07-01 06:59:24",
    "text": "I think, as Bradley mentioned this only works for the html part. As you cannot use the macro for importing into the fields.json file. "
  },
  {
    "text": "<@U7ADCU3BM> Yeah it work great. And doesn't break the preview when editing the page.",
    "time_stamp": "2021-07-01 07:00:53"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2021-07-01 07:02:15",
    "edited": {
      "time_stamp": "2021-07-01 07:03:09"
    },
    "text": "<@UQWGKUEN7> Ohh, the fields for CMs. I see, well that would require some custom local dev flow (instead of relying on HS server-side)\n\n<@UATE4ATHP> I missed that update :upside_down_face:. Thanks for sharing"
  }
]
[
  {
    "poster": {
      "poster_name": "Shmuly Itzkowitz",
      "poster_handle": "shmuly"
    },
    "time_stamp": "2025-01-19 07:11:27",
    "text": "exports.main = async (event, callback) =&gt; {\n  function getRandomDateInNext30Days() {\n    const now = new Date();\n    const maxDays = 30;\n\n    // Generate a random number of days between 0 and maxDays\n    const randomDays = Math.floor(Math.random() * maxDays);\n\n    // Generate a random number of milliseconds for the time within a day (0 to 23:59:59)\n    const randomMilliseconds = Math.floor(Math.random() * 24 * 60 * 60 * 1000);\n\n    // Add the random days and milliseconds to the current time\n    const randomDate = new Date(now.getTime() + randomDays * 24 * 60 * 60 * 1000 + randomMilliseconds);\n\n    // Return date as UTC timestamp in milliseconds\n    return randomDate.getTime(); // UNIX timestamp in milliseconds\n  }\n\n  callback({\n    outputFields: {\n      randomDate: getRandomDateInNext30Days()\n    }\n  });\n};"
  },
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2025-01-19 13:18:49",
    "text": "<@U07ME3ELXBR> this should help you:\n```exports.main = async (event, callback) =&gt; {\n  const now = new Date();\n  const maxDays = 30;\n  \n  const randomDays = Math.floor(Math.random() * maxDays) + 1;\n  const futureDate = new Date(now.getTime() + randomDays * 24 * 60 * 60 * 1000);\n  \n  callback({\n    outputFields: {\n      randomDate: futureDate.toISOString()\n    }\n  });\n};```"
  },
  {
    "poster": {
      "poster_name": "Shmuly Itzkowitz",
      "poster_handle": "shmuly"
    },
    "time_stamp": "2025-01-19 13:46:25",
    "text": "Thanks <@U04512YU6GH>, but nothing seems to be working! did you get it to work?"
  },
  {
    "text": "This worked for me, make sure you add the output, the action immediately after this should be to copy the output to the record.",
    "time_stamp": "2025-01-19 14:40:34"
  },
  {
    "text": "This is what the output looks like",
    "time_stamp": "2025-01-19 14:41:37"
  },
  {
    "poster": {
      "poster_name": "Shmuly Itzkowitz",
      "poster_handle": "shmuly"
    },
    "time_stamp": "2025-01-19 15:43:36",
    "text": "Yes, I get the same result.\n\nBut when I try to save it to a dateTime field in HubSpot it says its an invalid date."
  }
]
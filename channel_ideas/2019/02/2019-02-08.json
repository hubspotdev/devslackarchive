[
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-02-08 03:56:46",
    "edited": {
      "time_stamp": "2019-02-08 04:52:22"
    },
    "text": "can you update the jQuery versions available? 1.11.X vs 3.3.1 is really behind... (plus XSS vulnerabilities)\nOr at least an option to remove the jQuery so we can add our own (drag&amp;drop templates).\n\nI don't mind if this is done at template level instead global, but a solution please :slightly_smiling_face:\nAlso will be glad if we can remove bloatware (opt-in/out) from the header_includes/requires like layout.css, public_common.css",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-02-08 06:20:42"
      },
      {
        "time_stamp": "2019-02-08 06:23:08"
      },
      {
        "time_stamp": "2019-02-08 06:25:09"
      },
      {
        "time_stamp": "2019-02-08 06:25:59"
      },
      {
        "time_stamp": "2019-02-11 08:27:49"
      },
      {
        "time_stamp": "2019-02-11 09:54:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2019-02-08 06:20:42",
    "text": "Completely agree with you but for now here’s a work around but not ideal\n{{ standard_header_includes|replace(‘&lt;script src=“/hs/hsstatic/jquery-libs/static-1.1/jquery/jquery-1.7.1.js”&gt;&lt;/script&gt;‘,’’) }}\n\nyou can either add the new link to the replace function or underneath the header includes hubl"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-02-08 06:23:08",
    "text": "for coded templates that works, but not for drag&amp;drop :_"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2019-02-08 06:25:09",
    "text": "Ah yeah that’s annoying, I tend not to use drag&amp;drop templates, i find them too restrictive"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-02-08 06:25:59",
    "text": "yeah well, some clients just want d&amp;d :expressionless:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-08 08:37:22",
    "edited": {
      "time_stamp": "2019-02-08 08:37:42"
    },
    "text": "Will we be getting the ability to use a form to update a HubDB table in the near future? Either that or the ability to use a workflow to update a HubDB table upon form submission with data from the form?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 09:48:55",
    "edited": {
      "time_stamp": "2019-02-08 09:49:44"
    },
    "text": "This is kinda out there- but *the ability to set linked files in custom modules with the same conditions afforded to fields. AKA conditional linked files*\n\nI do this with require_js every now and again, and the reason is because sometimes the marketer doesn’t want a certain feature that requires a JS or CSS library because of settings they’ve chosen in the fields.\n\nThis prevents the loading of those files when they won’t even get used. improving performance"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:13:27",
    "text": "<https://spin.d.pr/gtTOtB+>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:32:31",
    "edited": {
      "time_stamp": "2019-02-08 13:32:46"
    },
    "text": "Reduce the sensitivity of the blog_post_by_id requires post id parameter error to a warning\n```{% if page_by_id(module.link) is defined %}\n\t{{ page_by_id(module.link) }}\n{% else %}\n\t{{ blog_post_by_id(module.link) }}\n{% endif %}```\n\nHad a module with similar code to the above which is the snippet generated by the Page field, because the field didn’t have a default value it was erring",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-08 13:49:27"
      },
      {
        "time_stamp": "2019-02-08 14:14:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-08 13:33:22",
    "text": "to anyone who runs into this issue there’s an easy work around, `{% elif module.link &amp;&amp; blog_post_by_id(module.link) is defined %}`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 13:49:27",
    "text": "Should be fixed soon"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-02-08 14:14:23",
    "text": "Done"
  }
]
[
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-02-05 02:15:09",
    "text": "Hello ! \n\nI just created a Hubdb table with a RichText element “fromlivestorm” that contains a iframe code (&lt;iframe width=“100%” height=“360” frameborder=“0\" src=“https://app.livestorm.co/p/82441a03-3811-4d5e-89f8-fe5647ddbb3c/form“&gt;&lt;/iframe&gt;) of an external LIVESTORM form. \n\nBut when I call it {{ dynamic_page_hubdb_row.fromlivestorm }} the page prints the HTML code as a text and not as a HTML IFRAME... \n\nDo you know how can I succeed to put a HTML element in a HUBDB column ?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-02-05 05:47:46",
    "edited": {
      "time_stamp": "2018-02-05 05:50:53"
    },
    "text": "<@U3TR96G84> I'd recommend making a column \"Form ID\" and then only including the ID of the form in the database. The rest of the markup should live in the template or custom module. As of now, the rich text areas in hubdb are very limited, which is not necessarily a bad thing.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-02-06 04:16:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-02-05 08:10:08",
    "text": "I'm working on a dynamically created page that includes a form that has a link to a file which is specified in a HUBDB column in the response message:\n```{% form \"my_form\" form_to_use='696d8e2c-bac5-4f60-8803-18ce05d68c14', title='See a floor plan', overridable=False, response_message='&lt;p&gt;View the floorplan here: &lt;a href=\"{{ dynamic_page_hubdb_row.floorplan }}\"&gt;{{ dynamic_page_hubdb_row.venue_name }} Floorplan&lt;/a&gt; &lt;/p&gt;' %}```\n  All of a sudden, the `response_message` is being overwritten by the default \"thanks for submitting the form\" message.  \n\nAnyone know of a solution to prevent this?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-02-05 08:34:54",
    "text": "updated to the following and now it's working as expected again: ```{% form \"my_form\" form_to_use='edd33cef-b0a9-4023-aa19-9f173d065a64', title='See a floor plan', overridable=False, response={message='&lt;p&gt;View the floorplan here: &lt;a href=\"{{ dynamic_page_hubdb_row.floorplan }}\"&gt;{{ dynamic_page_hubdb_row.venue_name }} Floorplan&lt;/a&gt; &lt;/p&gt;'}, response_response_type=\"inline\" response_message='&lt;p&gt;View the floorplan here: &lt;a href=\"{{ dynamic_page_hubdb_row.floorplan }}\"&gt;{{ dynamic_page_hubdb_row.venue_name }} Floorplan&lt;/a&gt; &lt;/p&gt;' %}```"
  },
  {
    "text": "I need the end user to be able to paste a new script tag block inside of the div surrounding it, any ideas on how to achieve this? I was thinking maybe an export_to_template, but maybe building a module with some boolean logic would be better?",
    "time_stamp": "2018-02-05 11:43:46"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-05 12:03:00",
    "text": "<@U795QFHDE> What if you use the Form ID?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-05 12:04:21",
    "text": "What are the limitations?"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2018-02-05 12:04:25",
    "text": "Ah, like pass through the ID using an export_to _template"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-05 12:05:01",
    "text": "If you can just get the form ID then you can use a text area."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-05 12:05:32",
    "text": "Or if you want you can just use the form module and change the target."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-05 12:06:06",
    "text": "Here is some docs on forms. <https://developers.HubSpot.com/docs/methods/forms/advanced_form_options>"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2018-02-05 12:09:44",
    "text": "Good call – the ID should work just need to past through w/ a text area like you said."
  },
  {
    "text": "So i need to pass form ID 5ace5c47-0bae-49a1-bd63-0aa66e932bdd \n\nand I've done so using the export_to_template text function, but I cant get it to work. I think the '.parameter' portion may be marked up wrong. Or it needs the ' ' surrounding the hubl.",
    "time_stamp": "2018-02-05 12:21:52"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-02-05 12:23:23",
    "text": "you dont need `.parameter` portion"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-02-05 12:23:28",
    "edited": {
      "time_stamp": "2018-02-05 12:23:33"
    },
    "text": "try `.value`"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-02-05 12:24:12",
    "text": "i dont think you need `no_wrapper` either when using the `export_to_template_context`"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2018-02-05 12:26:12",
    "text": "Finally working! thanks guys."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-05 12:41:53",
    "text": ":slightly_smiling_face: :thumbsup_all:"
  }
]
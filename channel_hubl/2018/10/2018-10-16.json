[
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-16 09:20:38",
    "edited": {
      "time_stamp": "2018-10-16 09:21:07"
    },
    "text": "Alright im stumped again (its not my week!) I have a title of a blog, I want to look in that title and check to see if it contains a string thats equal to one of the strings in a hubdb column, but im trying to do this without a for loop…any ideas to give me direction?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 09:28:30",
    "text": "I have an idea <@U7AU6414J>"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 09:28:36",
    "text": "It just might work"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 09:31:30",
    "text": "```{% set my_string = row.text_block %}\n{% set string_remnants ={{ my_string|cut('word') }} %}\n{% if my_string|length &gt; string_remnants|length %}\n  Do something\n{% endif %}```",
    "reply_count": 17,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-10-16 11:37:11"
      },
      {
        "time_stamp": "2018-10-16 11:52:32"
      },
      {
        "time_stamp": "2018-10-17 14:24:39"
      },
      {
        "time_stamp": "2018-10-17 14:25:05"
      },
      {
        "time_stamp": "2018-10-17 14:25:12"
      },
      {
        "time_stamp": "2018-10-17 14:25:27"
      },
      {
        "time_stamp": "2018-10-17 14:26:37"
      },
      {
        "time_stamp": "2018-10-17 14:26:48"
      },
      {
        "time_stamp": "2018-10-17 14:27:12"
      },
      {
        "time_stamp": "2018-10-17 14:27:23"
      },
      {
        "time_stamp": "2018-10-17 14:28:22"
      },
      {
        "time_stamp": "2018-10-17 14:45:32"
      },
      {
        "time_stamp": "2018-10-17 15:07:53"
      },
      {
        "time_stamp": "2018-10-17 15:11:07"
      },
      {
        "time_stamp": "2018-10-17 15:17:01"
      },
      {
        "time_stamp": "2018-10-17 15:23:00"
      },
      {
        "time_stamp": "2018-10-18 06:48:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 09:31:46",
    "text": "something like that maybe?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 09:32:16",
    "text": "Not sure if length will return a string length"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 09:35:47",
    "text": "May need to convert the string into an array with the split function to get the length"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-16 09:49:31",
    "text": "`{% if BLOGTITLE is string_containing 'STRINGYOUARELOOKINGFOR' %}  DO SOMTHING HERE {% endif %}`",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-16 09:59:35"
      },
      {
        "time_stamp": "2018-10-16 10:18:32"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 09:59:35",
    "text": "Oh look at me, I’m Chad Pierce and my code is concise and uses the correct operators."
  },
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-16 10:18:32",
    "edited": {
      "time_stamp": "2018-10-16 11:50:14"
    },
    "text": "Everyone wants to be but only one can…. lol… jk"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-10-16 11:37:11",
    "text": "im close, but not im trying to figure out if i can chain multiple `selectattr`’s or pull in an array somehow"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-16 11:52:32",
    "text": "What is it you are trying to acomplish?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 14:16:22",
    "text": "<@U38EZFVFE> you know what is crazy? I was just going to ask how do I test if a string contains a different string. Then I see your hubl code and :face_palm:  Chad new the answer to my question before I asked it"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-16 14:16:36",
    "text": "LOL…"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 14:17:30",
    "text": "so you win double the cool points - for using shorthand hubl and for posting the answer to a question more than 4 hours before it was posted"
  },
  {
    "time_stamp": "2018-10-16 14:18:02",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-16 14:21:58",
    "text": "<@U7SL518D6> I wish it was always the case. lol"
  },
  {
    "text": "losing my mind here basic hubl question why does this not return true?",
    "time_stamp": "2018-10-16 14:46:59",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-10-16 14:50:25"
      },
      {
        "time_stamp": "2018-10-16 15:01:11"
      },
      {
        "time_stamp": "2018-10-16 15:01:52"
      },
      {
        "time_stamp": "2018-10-16 15:11:08"
      },
      {
        "time_stamp": "2018-10-16 15:11:38"
      },
      {
        "time_stamp": "2018-10-16 15:13:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-10-16 14:47:37",
    "text": "missing a quote after retail?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 14:47:49",
    "edited": {
      "time_stamp": "2018-10-16 14:48:42"
    },
    "text": "no that’s not it funny though, the vars there are just showing the output of those variables not real hubl"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 14:47:52",
    "text": "KABOOM"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 14:47:57",
    "text": "JOHN FULLER IS ON FIRE"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-10-16 14:48:13",
    "text": ":rolling_on_the_floor_laughing: :fire:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-16 14:48:38",
    "text": "that didnt work?",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-10-16 14:49:41"
      },
      {
        "time_stamp": "2018-10-16 14:49:51"
      },
      {
        "time_stamp": "2018-10-16 14:49:59"
      },
      {
        "time_stamp": "2018-10-16 14:50:36"
      },
      {
        "time_stamp": "2018-10-16 14:51:07"
      },
      {
        "time_stamp": "2018-10-16 14:54:20"
      },
      {
        "time_stamp": "2018-10-16 15:00:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-16 14:49:05",
    "text": ":droplet:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 14:49:41",
    "text": "it didn’t work because that’s not a real hubl variable declaration. I was just showing what the output is of each"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 14:49:51",
    "text": "thus the joke"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-16 14:49:59",
    "text": "dear dear"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-10-16 14:50:25",
    "text": "updated to make it clearer"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 14:50:36",
    "text": "does it work if you use the filters outside of the if statement?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 14:51:07",
    "text": "good question will test"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 14:54:20",
    "text": "WOO HOO! that was it…"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-16 15:00:39",
    "text": "Hooray! I’m helpful!"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-16 15:01:11",
    "edited": {
      "time_stamp": "2018-10-16 15:01:16"
    },
    "text": "true and false aren’t strings so they won’t get printed"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-10-16 15:01:52",
    "text": "`{{ \"true\" if rjob_details.job_title|lower is string_containing request.query_dict.term|lower else \"false\" }}` should though"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-10-16 15:11:08",
    "text": "I’m seeing a syntax error for filters on vars in inline condition expressions on my end ^"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2018-10-16 15:11:38",
    "edited": {
      "time_stamp": "2018-10-16 15:12:56"
    },
    "text": "```{% set rjob_details = {\n  'job_title': 'Sr. VP Retail'\n} %}\n{% set _request = {\n  'query_dict': {\n    'term': 'retail'\n  }\n} %}\n{% set job_title__lower = rjob_details.job_title|lower %}\n&lt;p&gt;\n  {{true if job_title__lower is string_containing _request.query_dict.term else false }}\n&lt;/p&gt;``` seems to work in my tests?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-16 15:13:53",
    "edited": {
      "time_stamp": "2018-10-16 15:14:11"
    },
    "text": "the issue was the filters - <@U26DA9CQ0> caught it"
  },
  null
]
[
  {
    "poster": {
      "poster_name": "Emilie N. Wangen",
      "poster_handle": "enw"
    },
    "time_stamp": "2020-10-28 01:20:31",
    "text": "Hey! Has anyone developed a solution on the HS CMS where the visitors of the website *can \"like/heart\" a post* and it's being saved to \"your saved\" posts so it's easy to find next time you come back to the site? Use case is recipes. I've been told it's possible using HubDB, but curious how much work this requires to set up and what the limitations are",
    "reply_count": 4,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2020-10-28 06:36:52"
      },
      {
        "time_stamp": "2020-10-28 06:48:40"
      },
      {
        "time_stamp": "2020-10-28 07:05:21"
      },
      {
        "time_stamp": "2020-10-28 14:11:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-10-28 06:36:52",
    "text": "<@U7SL518D6> <@U2H3TT8F2>"
  },
  {
    "poster": {
      "poster_name": "Thomas Staal",
      "poster_handle": "thomas986"
    },
    "time_stamp": "2020-10-28 06:48:40",
    "edited": {
      "time_stamp": "2020-10-28 06:51:24"
    },
    "text": "Hi! You can solve this in many different ways. But as I see it, the limiting factors are the 10000 row limit per table, and how you are going to identify the users.\n\nIf you don't have a form of login for the users, I'd recommend doing it with javascript + cookies and skip hubdb all together."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-28 07:05:21",
    "text": "Hey Emilie, there’s a few ways of doing it. HubDB actually isn’t the route I’d take for saving data associated to a user.\n\nIf you’re on CMS Hub Enterprise you can use the memberships feature in tandem with CRM Objects to associate recipes to the user, enabling them to save them.\n\nThe other route I’d consider, especially if you only care that the user themselves can see their saved posts - use one of the built in browser databases.\n\nThis CSS Tricks article helps you to identify which would be right for what you need based on the limitations and ease of use:\n<https://css-tricks.com/a-primer-on-the-different-types-of-browser-storage/>"
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2020-10-28 12:56:11",
    "text": "I have noticed that it sometimes takes a while for HubDB table updates to propagate. I have some modules with forms that use HubDB to populate the thank you message and they are not updating with the new text on some pages. Is there some way to force the update from HubDB?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-28 14:56:17"
      },
      {
        "time_stamp": "2020-10-30 10:48:54"
      },
      {
        "time_stamp": "2020-11-02 05:53:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-10-28 14:11:49",
    "text": "I've done this in the past using contact properties which are essentially comma-separated lists via the contacts API with either serverless functions or a proxy server."
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-10-28 14:56:17",
    "text": "Can u send us the page link?"
  }
]
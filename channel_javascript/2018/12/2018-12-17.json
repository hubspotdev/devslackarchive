[
  null,
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-17 06:14:48",
    "text": "try return false;"
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 11:07:23",
    "text": "Is anyone here familiar with d3.js?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 11:07:40",
    "text": "I’m trying to figure out an issue with an axis key"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 11:08:20",
    "text": "Or maybe just someone who is pretty decent with SVG"
  },
  null,
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-17 12:05:43",
    "text": "<@U26DA9CQ0>, it's just javascript :smile: we can give it a shot"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 12:26:09",
    "text": "I ended up just using a regular DOM element and dealing with it that way :stuck_out_tongue:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 12:26:33",
    "text": "And now I’m in a spiraling nightmare of adding ticks to an axis"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 12:31:23",
    "text": "see you next week"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 12:31:25",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-17 12:32:16",
    "text": "have you tried the framework inception of c3 which is built on top of d3?"
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-17 12:32:21",
    "text": "it does make life easier"
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-17 12:32:48",
    "text": "I've never use vanilla d3, but I have used c3"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 12:49:56",
    "text": "Oh I’ve never even heard of c3"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 12:50:57",
    "text": "I basically have these graphs which are % over time"
  },
  {
    "text": "",
    "time_stamp": "2018-12-17 12:51:07"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 12:51:55",
    "text": "And it spaces the dates out evenly, leaving the last value off"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 12:52:48",
    "text": "I can use this .nice() method on the axis domain but it adds a bunch of space around the sides, since it is creating false values to even up the spacing"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-17 12:55:06",
    "text": "you are welcome. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-17 12:57:29",
    "text": "can you put the code up in a fiddle or something like that? Is the problem just that it's leaving off 10/2018?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 13:01:38",
    "text": "this c3 looks pretty hot"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 13:04:02",
    "text": "yoink"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 13:05:34",
    "text": "Right it’s just leaving stuff off of the end."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 13:05:37",
    "text": "```/////////////////////////////////\n  // Build the Risk 2 line chart //\n  // //////////////////////////////\n  \n  function drawChartRisk(data){\n    // Set Dimensions\n\t\tvar margin = {top:20,right:20,bottom:50,left:50},\n        width = 770 - margin.left - margin.right,\n        height = 340 - <http://margin.top|margin.top> - margin.bottom;\n    // Set time format\n    var parseTime = d3.timeParse(\"%d-%b-%y\");\n    var parsePercent = d3.format(\".0%\");\n    // Set ranges\n    var x = d3.scaleTime().range([0,width]);\n    var y = d3.scaleLinear().range([height,0]);\n    // Define product line\n    var productLine = d3.line()\n    \t.x(function(d){return x(d.date);})\n    \t.y(function(d){return y(d.totalRisk)});\n    // Define benchmark line\n    var benchLine = d3.line()\n    \t.x(function(d){return x(d.date);})\n    \t.y(function(d){return y(d.benchRisk)});\n    \n    function make_y_gridlines() {\t\t\n      return d3.axisLeft(y)\n        .ticks(6)\n    }\n    // Append group to SVG\n    var chartSVG = d3.select('.product-page-graph')\n    \t.attr('width',width + margin.left + margin.right)\n    \t.attr('height',height + <http://margin.top|margin.top> + margin.bottom)\n    \t.append('g')\n    \t.attr('transform','translate(' + margin.left + ',' + <http://margin.top|margin.top> + ')');\n    // Scale the ranges\n    x.domain(d3.extent(data,function(d){return d.date}));\n    y.domain([\n      d3.min(data,function(d){\n        var dataMin = Math.min(d.totalRisk,d.benchRisk);\n        var dataMax = Math.max(d.totalRisk,d.benchRisk);\n        var dataPad = (dataMax - dataMin) * 0.2;\n        return Math.min(d.totalRisk,d.benchRisk) - dataPad;\n      }),\n      d3.max(data,function(d){\n        var dataMin = Math.min(d.totalRisk,d.benchRisk);\n        var dataMax = Math.max(d.totalRisk,d.benchRisk);\n        var dataPad = (dataMax - dataMin) * 0.2;\n        return Math.max(d.totalRisk,d.benchRisk) + dataPad;\n      })\n    ]).nice();\n    // Append lines\n    chartSVG.append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"fill\",\"#F5F6F6\"); \n    \n    chartSVG.append(\"g\")\t\t\t\n      .attr(\"class\", \"grid\")\n      .call(make_y_gridlines()\n          .tickSize(-width)\n          .tickFormat(\"\")\n      )\n    \n    chartSVG.append('path')\n    \t.data([data])\n    \t.attr('class','line')\n    \t.style('stroke','#A9B0B7')\n    \t.style('fill','transparent')\n      .style('stroke-width','2')\n    \t.attr('d',benchLine);\n    \n    chartSVG.append('path')\n    \t.data([data])\n    \t.attr('class','line')\n    \t.style('stroke','#7c2855')\n    \t.style('fill','transparent')\n      .style('stroke-width','2')\n    \t.attr('d',productLine);\n    \n    // Add the X axis\n    chartSVG.append('g')\n    \t.attr('transform','translate(0,' + height + ')')\n    \t.call(d3.axisBottom(x).tickSize(0).ticks(20).tickFormat(d3.timeFormat('%_m/%Y')))\n    \t.selectAll('text')\n    \t.style('text-anchor','end')\n    \t.attr('dx','-0.8em')\n    \t.attr('dy','0.5em')\n    \t.attr('transform','rotate(-90)');\n    \n    // Add the Y axis\n    chartSVG.append('g')\n    \t.call(d3.axisLeft(y).tickSize(0).ticks(6).tickFormat(d3.format(',.0%')));\n    \n    chartSVG.append(\"text\")\n      .attr(\"transform\",\"rotate(-90)\")\n      .attr(\"y\",0 - margin.right * 4)\n      .attr(\"x\",0 - (height/2))\n      .attr(\"dy\",\"1em\")\n      .style(\"text-anchor\",\"middle\")\n      .text(\"Estimated Risk\");\n    \n      $('.product-page-graph-x-label')\n        .addClass('spread-out')\n        .append('&lt;span class=\"key-line key-line-1\"&gt;&lt;/span&gt;')\n        .append('&lt;span class=\"x-label\"&gt;' + intechProduct + ' Risk&lt;/span&gt;')\n        .append('&lt;span class=\"key-line key-line-2\"&gt;&lt;/span&gt;')\n        .append('&lt;span class=\"x-label\"&gt;' + indexName + ' Risk&lt;/span&gt;');\n    \n  }```"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 13:07:45",
    "text": "Don’t go crazy looking at this thing, the way I have it is acceptable to the client (hopefully) so I’m moving on to other fun stuff"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 13:10:34",
    "text": "ha"
  },
  null,
  null,
  null
]
[
  {
    "poster": {
      "poster_name": "Dimitry Volos",
      "poster_handle": "dimitry.volos"
    },
    "time_stamp": "2020-01-29 06:13:55",
    "text": "Hi Guys, I have a question. I have created a custom image slider module. How can I insert this module inside the page from within the WYSIWYG (Tiny MCE) editor, on the page editor level? Can the custom modules option be added to the toolbar? So we can have a paragraph, then my module, then another paragraph, etc. I can add the module if I drop the snippet {% module \"module_1580301192767148\" path=\"/Custom modules/Image Slider Lightbox\", label=\"Image Slider Lightbox\" %} directly into the source code of the page, but this can be too complicated for a average use. Any way to make this easier?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-01-29 06:15:25"
      },
      {
        "time_stamp": "2020-01-29 06:16:14"
      },
      {
        "time_stamp": "2020-01-29 06:26:35"
      },
      {
        "time_stamp": "2020-01-29 06:28:04"
      },
      {
        "time_stamp": "2020-01-29 06:51:53"
      },
      {
        "time_stamp": "2020-01-29 07:00:25"
      },
      {
        "time_stamp": "2020-01-29 07:01:02"
      },
      {
        "time_stamp": "2020-01-29 07:08:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-01-29 06:15:25",
    "text": "You can’t do that in the richtext editor. Maybe you could use a js library for custom shortcodes if you had a client who insisted on this capability"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-01-29 06:16:14",
    "text": "Since it’s drag and drop, The user can just add a richtext module, then your module, then another richtext module afterwards"
  },
  {
    "poster": {
      "poster_name": "Dimitry Volos",
      "poster_handle": "dimitry.volos"
    },
    "time_stamp": "2020-01-29 06:26:35",
    "text": "Thank you for replying. This was one of my first ideas, although this makes all the pages the same structure."
  },
  {
    "poster": {
      "poster_name": "Dimitry Volos",
      "poster_handle": "dimitry.volos"
    },
    "time_stamp": "2020-01-29 06:28:04",
    "text": "If the module field is left empty, HubSpot will still create wrapper elements  (row, spans, etc.). I there way to hide empty fields? So if i leave one rich text module blank it will not be displayed on the front end?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-01-29 06:51:53",
    "text": "not sure what you’re trying to achieve on a drag and drop page with empty modules…"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 06:56:04",
    "text": "I think it also may be helpful if you shared an example template that better communicates what you’re trying to do."
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 06:56:52",
    "text": "if you haven’t seen it, the boilerplate that we created may be helpful to get a better sense for how HubSpot recommends that `{% dnd_area %}` editable areas are used: <https://github.com/HubSpot/cms-theme-boilerplate>"
  },
  {
    "poster": {
      "poster_name": "Dimitry Volos",
      "poster_handle": "dimitry.volos"
    },
    "time_stamp": "2020-01-29 07:00:25",
    "text": "For example, I have a template for blog posts, that consist of banner, rich text block 1, image gallery block, rich text block 2, footer. Not every page that uses this template will have content to fill all the blocks / modules. If I leave rich text block 2 empty, the front end will still render empty wrapper elements (container divs, rows, even empty p tags). So the desired outcome is not to render block if there is no content. I hope this makes sense?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-01-29 07:01:02",
    "text": "the user can delete this themselves on a D&amp;D page"
  },
  {
    "poster": {
      "poster_name": "Dimitry Volos",
      "poster_handle": "dimitry.volos"
    },
    "time_stamp": "2020-01-29 07:08:03",
    "text": "yes, but it will delete the block from the rest of the pages that use this template, but on some pages, it will need to be used."
  },
  {
    "poster": {
      "poster_name": "Kyle Geiste",
      "poster_handle": "kg"
    },
    "time_stamp": "2020-01-29 07:11:32",
    "edited": {
      "time_stamp": "2020-01-29 07:11:46"
    },
    "text": "Thanks for the update <@UHJM7AW02>. Out of curiosity, beyond anchor links do you see a specific need for classes/IDs in the page editor?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:12:13",
    "text": "<@U22VBL87M> It would be a tricky to create an example template as it’s more of a situational or process thing"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:12:36",
    "text": "Let me try to be more clear:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:17:30",
    "text": "1. Start by building a template with DND and creating a website page from that template\n2. Open the website page inside of the editor and add an additional module or adjust the width of a column\n3. Go back to the template and add another module or dnd_area\n4. Go back to the website page editor and changes from the template do not show up. The template and the website page seem to be disconnected as far as dnd_areas go.\n5. The only way to start seeing changes to the original template is to delete the website page and create a new one"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:17:55",
    "text": "<@U22VBL87M> Is that the expected behavior or should I record a video of the situation?"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 09:18:51",
    "text": "ah, yeah that is expected right now"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 09:19:04",
    "text": "we have talked some about making this smoother but haven’t made it happen"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 09:19:10",
    "text": "thanks for the reminder :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:19:27",
    "text": "One way to make it smoother would be to add a “sync with template” button somewhere"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:19:48",
    "text": "so that at the very least all of the changes made inside of the website editor are moved over to the template"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:20:04",
    "text": "all of the modules added, the design settings"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:20:20",
    "text": "I guess there would be a problem with where does “content” get saved"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:20:36",
    "text": "I would be ok if it replaces the default content but I understand that might not be ideal for everyone"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:20:52",
    "text": "It’s a tough problem, I’m glad you guys are thinking about it"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 09:28:37",
    "text": "during development, one “hack” is to change the `{% dnd_area %}` name"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 09:29:02",
    "text": "e.g. `{% dnd_area \"foo1\" %}` to `{% dnd_area \"foo2\" %}`"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2020-01-29 09:29:20",
    "text": "but that really isn’t ideal and is risky outside of a dev sandbox"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:44:17",
    "text": "Maybe a “backup content” and “import content” option would work"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-01-29 09:44:20",
    "text": "I’ll keep thinking about it"
  }
]
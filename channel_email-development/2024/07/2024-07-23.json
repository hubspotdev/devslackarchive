[
  {
    "poster": {
      "poster_name": "Shani Hussain",
      "poster_handle": "zibrar00"
    },
    "time_stamp": "2024-07-23 04:52:07",
    "text": "Hi Guys,\n\nIs anyone able to help here, please?\n\nI am trying to fetch contact associated company records in the email module using the crm_associations function, it works fine if I use a static ID for a contact, but if I use 'contact.hs_object_id' to fetch values dynamically then it stops working."
  },
  {
    "poster": {
      "poster_name": "Viviana Cardenas",
      "poster_handle": "vcardenas"
    },
    "time_stamp": "2024-07-23 07:51:53",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Zach Oates",
      "poster_handle": "zach681"
    },
    "time_stamp": "2024-07-23 10:48:35",
    "text": "Hey HubSpot Community,\n\nI've noticed a large drop in our email performance starting in June 2024. We've had several large clients tell use that our SPF records and DNS keys are not matching up within our email headers, which is HubSpot's responsibility since our records point back to theirs. Has anyone else noticed serious deliverability issues? Another issue popped up this morning and we were advised that it's a email header issue which HubSpot tags while being delivered. It's frustrating because its 100% out of our control.\n\nAny insight would be great appreciated!",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-07-26 08:34:10"
      },
      {
        "time_stamp": "2024-07-26 08:34:45"
      },
      {
        "time_stamp": "2024-07-31 10:55:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Luke Belgeri",
      "poster_handle": "lukebelgeri"
    },
    "time_stamp": "2024-07-23 10:49:43",
    "text": "Hey, y'all. Anyone know if it's possible to pass variables into HubL functions as arguments. We're only able to get results from the crm_object function when passing a string in directly.\n\nFor example:\n\nThis works.\n```{{ crm_object(\"contact\", \"email=example.email@example.com\") }}```\nThis does not.\n```{% set query = \"email=example.email@example.com\" %}\n{{ crm_object(\"contact\", query) }}```",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-07-23 14:01:04"
      },
      {
        "time_stamp": "2024-07-23 14:19:52"
      },
      {
        "time_stamp": "2025-02-10 15:20:14"
      },
      {
        "time_stamp": "2025-02-10 15:33:28"
      },
      {
        "time_stamp": "2025-02-10 15:34:16"
      },
      {
        "time_stamp": "2025-02-10 15:35:10"
      },
      {
        "time_stamp": "2025-02-10 15:38:07"
      },
      {
        "time_stamp": "2025-02-10 16:37:57"
      },
      {
        "time_stamp": "2025-02-10 17:10:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-07-23 14:01:04",
    "text": "it is possible.\n\ndo you want to grab some screenshots of your module, the preview and any pages where the module is to help troubleshoot?\n\nAlso, can you explain your use case a bit more so we can see if there's a different way to approach what you're doing?\n\nAssuming you're trying to do this in email, I would recommend that you use personalization tokens and hubl concatenation to build your query\n\n```{% set contact = crm_object(\"contact\", \"email=\"~contact.email~\"&amp;firstname=\"~contact.firstname, \"firstname,lastname\", false) %}\n\n//or\n{% set query = \"email=\"~contact.email~\"&amp;firstname=\"~contact.firstname %}\n\n{% set contact = crm_object(\"contact\", query, \"firstname,lastname\", false) %}```"
  },
  {
    "poster": {
      "poster_name": "Luke Belgeri",
      "poster_handle": "lukebelgeri"
    },
    "time_stamp": "2024-07-23 14:19:52",
    "text": "I was able to get this resolved using modules. I appreciate it, man!"
  }
]
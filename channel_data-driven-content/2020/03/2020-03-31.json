[
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2020-03-31 01:04:15",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Martin Angeletti",
      "poster_handle": "martin041"
    },
    "time_stamp": "2020-03-31 02:14:23",
    "text": "Cc <@UG52C29EE> <@U504BHZ6K> "
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2020-03-31 06:18:01",
    "text": "zapier can trigger it"
  },
  {
    "text": "Its a PUT request here is my example",
    "time_stamp": "2020-03-31 06:21:59"
  },
  {
    "poster": {
      "poster_name": "Benjamin Bachman",
      "poster_handle": "hello"
    },
    "time_stamp": "2020-03-31 10:57:49",
    "edited": {
      "time_stamp": "2020-03-31 10:59:01"
    },
    "text": "*Question*... does anyone know if you can have a global group inside of a global group in HubSpot's Hubly? Specifically in the design tools builder.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-03-31 14:51:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-31 11:46:27",
    "text": "this is simple hubdb syntax question but I can't seem to get my code right. I have 5 categories (using the select field) and maybe 20 rows in a db. I want to loop through the categories and print the category name. so something like this:",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-03-31 11:49:27"
      },
      {
        "time_stamp": "2020-03-31 11:51:15"
      },
      {
        "time_stamp": "2020-03-31 12:42:49"
      },
      {
        "time_stamp": "2020-03-31 12:47:33"
      },
      {
        "time_stamp": "2020-03-31 12:50:54"
      },
      {
        "time_stamp": "2020-03-31 12:53:35"
      },
      {
        "time_stamp": "2020-03-31 13:01:35"
      },
      {
        "time_stamp": "2020-04-01 09:28:01"
      },
      {
        "time_stamp": "2020-04-01 09:28:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-31 11:47:06",
    "edited": {
      "time_stamp": "2020-03-31 11:47:56"
    },
    "text": "```{% for row in table %}\n{% for row.category.id in table %}\n{{ row.categoy.name }}\n{% endfor %}\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-31 11:48:20",
    "text": "trying to figure out that row.category.id bit. is that correct?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-03-31 11:49:27",
    "text": "row.category is an array so u need another loop"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-03-31 11:51:15",
    "text": "Can u try this?\n```{% for row in rows %}\n  {% for cat in row.category %}\n    {{ cat.name }}\n  {% endfor %}\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-31 12:42:49",
    "text": "ahh, lemme give it a whirl."
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-31 12:47:33",
    "text": "hrm, I'm not quite getting it right. I should have clarified my question, I only want to print the 5 category names, once each, not a loop through all the rows and print the category titles each time"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-31 12:50:54",
    "text": "but your guidance around the row.category being an array makes sense. Let me play with it and see if I can get it"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-03-31 12:53:35",
    "text": "You can get the table definition or column definition using `hubdb_table` or `hubdb_table_column`"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-31 13:01:35",
    "text": ":thumbsup: thanks! i will give this a whirl. First time digging into loops deeply"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-03-31 14:51:24",
    "text": "probably not... but I'm sure you could test it out in a few minutes"
  },
  {
    "poster": {
      "poster_name": "Jayme Welch",
      "poster_handle": "jayme.mcclellan"
    },
    "time_stamp": "2020-03-31 15:45:17",
    "text": "Can a module read in a querystring parameter that can then be used as a queryparam for filtering data in a HubDB? If so, how do you access querystring params in a module?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2020-03-31 15:47:39",
    "edited": {
      "time_stamp": "2020-03-31 15:48:07"
    },
    "text": "`{{ request.query_dict }}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-03-31 15:54:38",
    "text": "<@ULBP4M3LK> so if the url was <http://www.domain.com/resource?category=ebook|www.domain.com/resource?category=ebook> then you would aceess that as `{{ request.query_dict.category }}`"
  },
  {
    "poster": {
      "poster_name": "Jayme Welch",
      "poster_handle": "jayme.mcclellan"
    },
    "time_stamp": "2020-03-31 15:58:24",
    "text": "Thank you <@UMSSR1J3U> and <@U25PYL3Q8>. This is perfect"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-03-31 16:04:06",
    "text": "normally I'll put a section at the top of my page that does a\n```{% if request.query_dict %}\n\n  {% if request.query_dict.category == 1 %}\n    code\n  {% else %}\n    morecode or setting variables, etc\n  {% endif %}\n{% endif %}```"
  }
]
[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-15 05:35:42",
    "text": "“properties” in your request are the properties that the API returns once you find a match.\n\ncan you screenshot your settings for the “merk” property? Are you sure you have that set as searchable?\n\nHave you attempted searching for the text in all lowercase letters?\n\nI’ve not used the search in the way you are. I’ve never just done a query and used the default properties to search through.\n\n```{\n    \"filterGroups\":[\n      {\n        \"filters\":[\n          {\n           \"propertyName\":\"merk\",\n           \"operator\":\"EQ\",\n          \"values\": \"ken onion\"\n        }\n        ]\n      }\n    ],\n   \"properties\": [\"naam\", \"nummer\", \"merk\", \"nagel_type\", \"collectie\"]\n  }```\n"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-15 05:36:00",
    "text": "This is how I would typically search, building filters or filtergroups"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-08-15 05:49:00",
    "text": "Instead of using EQ use IN and pass in an array of values"
  },
  {
    "text": "",
    "time_stamp": "2024-08-15 05:50:49"
  },
  {
    "text": "Nicolas thank you for your respons!\n\nI know what you mean about the properties array\n\nThis i litterally just copied from that page i send earlier: The example is for contacts but still:\n\nFor example, the request below searches for all contacts with a default text property value containing the letter `X`.\n\n1\n```curl <https://api.hubapi.com/crm/v3/objects/contacts/search> \\```\n2\n```  --request POST \\```\n3\n```  --header \"Content-Type: application/json\" \\```\n4\n```  --header \"authorization: Bearer YOUR_ACCESS_TOKEN\" \\```\n5\n```  --data '{```\n6\n```    \"query\": \"x\"```\n7\n```  }'```\nAttached the 0 response from the query with lower case  and the \"merk\" property settings in the schema UI\n\nThe thing is that \"nummer\" also works so it's not as someone from HubSpot help thought that is only matches the \"naam\" field which can't be blank and must be unique\n\nThanks again Nicolas",
    "time_stamp": "2024-08-15 07:01:12"
  },
  {
    "text": "Nummer works",
    "time_stamp": "2024-08-15 07:04:04"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-15 08:12:11",
    "text": "Yes, this appears to be an actual issue with the api then."
  },
  {
    "poster": {
      "poster_name": "Nathan Vogele",
      "poster_handle": "nathan148"
    },
    "time_stamp": "2024-08-15 14:20:11",
    "edited": {
      "time_stamp": "2024-08-15 14:23:37"
    },
    "text": "I don't know who needs to know this, but you can use Axios to merge custom objects with a post request directly.\n\nThe HubSpot client doesn't have that feature yet. Don't waste an hour trying to guess what the path might be so you can use it.\n\ncurl -X POST \"<https://api.hubapi.com/crm/v3/objects/{objectType}/merge>\" \\\n-H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"primaryObjectId\": \"PRIMARY_OBJECT_ID\",\n  \"objectIdToMerge\": \"OBJECT_ID_TO_MERGE\"\n}'\n\nPosting here so if anyone searches for it in the future I can save them some time.",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-08-15 14:27:56"
      },
      {
        "time_stamp": "2024-08-15 15:40:36"
      },
      {
        "time_stamp": "2024-08-19 16:19:30"
      },
      {
        "time_stamp": "2024-08-19 16:31:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-15 14:27:56",
    "text": "is this documented at all?\n\nHow does the merge work, which one is liek the overwritten item?"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-08-15 15:40:36",
    "text": "<@U03RH7UPPDJ> what HubSpot Client? Node, PHP, Ruby, Python?"
  }
]
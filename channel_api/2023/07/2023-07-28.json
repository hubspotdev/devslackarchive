[
  {
    "poster": {
      "poster_name": "Emmanuel Joseph",
      "poster_handle": "emmanueljoseph"
    },
    "time_stamp": "2023-07-28 03:44:05",
    "text": "cc <@UD53A9UUR>"
  },
  {
    "poster": {
      "poster_name": "Renato Ferreira",
      "poster_handle": "renato612"
    },
    "time_stamp": "2023-07-28 05:57:15",
    "text": "Hey <@U04K5BJPE4V>. I already sent it on DM. hehe :smile:"
  },
  {
    "poster": {
      "poster_name": "German",
      "poster_handle": "geuxxor"
    },
    "time_stamp": "2023-07-28 06:00:11",
    "text": "Thanks Jacob!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2023-07-28 07:14:02",
    "text": "Heya, <@U05KU9XSN00>\n2 things\n1.  never  show an apikey in a public place.\n2. APIkeys are no longer used in HubSpot development (for the most part). You will want to use a <https://developers.HubSpot.com/docs/api/private-apps|private app>"
  },
  {
    "poster": {
      "poster_name": "Taylor O'Reilly",
      "poster_handle": "taylor699"
    },
    "time_stamp": "2023-07-28 08:42:11",
    "text": "Morning everyone. I’m looking for a way via the API to find out if a user is pending or not. I can see from the request within the portal you can get this from the V1 API <https://app.HubSpot.com/api/app-users/v1/payloads/user-management> but not sure how to use this with a private app key or if it’s even possible",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-07-28 09:14:22"
      },
      {
        "time_stamp": "2023-07-28 09:23:17"
      },
      {
        "time_stamp": "2023-07-28 09:25:50"
      },
      {
        "time_stamp": "2023-07-28 09:32:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-07-28 09:14:22",
    "text": "that is the HubSpot dashboard API which is not a public API"
  },
  {
    "poster": {
      "poster_name": "Taylor O'Reilly",
      "poster_handle": "taylor699"
    },
    "time_stamp": "2023-07-28 09:23:17",
    "text": "Thanks, figured as much. Do you happen to know if it’s possible to get a user’s status via the API at all?"
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-07-28 09:25:50",
    "text": "As far as I know it’s not possible, all I know of is you can get user teams / role ids"
  },
  {
    "poster": {
      "poster_name": "Taylor O'Reilly",
      "poster_handle": "taylor699"
    },
    "time_stamp": "2023-07-28 09:32:38",
    "text": "Yeah that’s all I’m seeing as well. Thanks though!"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2023-07-28 09:38:37",
    "text": "This is live! Here is an overview: <https://developers.HubSpot.com/docs/api/conversations/conversations#retrieve-a-subset-of-messages-associated-with-a-specific-contact>\nand then in the Endpoints documentation of GET threads the new optional properties are explained in more detail."
  },
  {
    "poster": {
      "poster_name": "Clay Reimus",
      "poster_handle": "clay"
    },
    "time_stamp": "2023-07-28 09:57:18",
    "edited": {
      "time_stamp": "2023-07-28 09:57:41"
    },
    "text": "Good morning all! I am a HubSpot Enterprise customer. We already sync every created account on our web app to HubSpot. I want to embed a form on a marketing page that captures a user's email address and does the following:\n- Creates a contact if one doesn't exist, or updates one that does exist\n- Marks that contact as \"marketable\"\n- Adds that content to a predefined dynamic list\n\nHow would I do that using the API? (This form needs to fit in a small space; I'm not sure if a HubSpot form + workflow can do that)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-07-31 11:27:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ericsen Wrice",
      "poster_handle": "ericsen.wrice"
    },
    "time_stamp": "2023-07-28 10:13:14",
    "text": "Hi all!\n\nWhat is the best way for us to have current customers seamlessly request to add more seats or add to their subscription? We have a specific pipeline along with a specific email that helps distinguish the pipeline is for additional seats requested but if I'd like to have them either access a bot that identifies their Company ID or have some email parsing tool that will connect through HubSpot API and highlight \"We'd like to add 5 seats\" and automatically associate all of this into the deal where we then review and accept or alter the deal. Let me know if anyone has any ideas that work for this sort of automation..\n\n• Automation would = Find trigger words (ex. I'd like to *ADD FIVE SEATS or 5*)\n• Create the deal and instantly close the deal within that specific pipeline\n• Based on the deal tag, know who to assign it towards based on a custom owner field. ",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-07-28 14:37:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2023-07-28 14:37:47",
    "text": "There’s quite a bit involved to get something like this standing. Far from difficult though, as long as you have the necessary tools in place and a somewhat capable developer to build it.\n\nAre the relevant email accounts connected to your HubSpot instance? Do you have access to coded actions?\n\nIf yes, I’d start with a conversations based workflow.\n\nI’d recommend checking out the API endpoints here:\n<https://developers.HubSpot.com/docs/api/conversations/conversations>\n\nSpecifically, the message history endpoint in there.\n\nYou’d then use sender/recipient data to track down the right company/deal. Or just create the deal based on related data, associate it with 1 of the contacts attached to whichever email address matters to you -&gt; set pipeline and owner accordingly. I’d like to think the conversation would get automatically logged to the right contact records if they exist automatically. Regardless, you could just create a note engagement and associate it with the deal + contact as befits the use case.\n\nWithout knowing specifics, that’s probably how I’d start my approach…very generally.\n\nYou can feel free shoot me a message if you’d like to chat on this a bit more."
  },
  {
    "poster": {
      "poster_name": "Bashir",
      "poster_handle": "ayo_idan"
    },
    "time_stamp": "2023-07-28 17:26:13",
    "text": "Yes"
  }
]
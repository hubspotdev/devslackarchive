[
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-05-28 17:00:51",
    "edited": {
      "time_stamp": "2020-05-28 17:01:08"
    },
    "text": "Would be fantastic to be able to either: A) set field validation rules for form fields OR (even better) B) at the property level.\n\nHave a client that is using HubSpot forms that use the default Postal Code field - problem is that the only validation rules HubSpot (can) apply to it is \"required\" - but if we had the simple ability to set a regex validation pattern to the property setting - we could do something like `[0-9]{5}(-[0-9]{4})?` to validate that the data entering the platform is correct. I know we can add our own field validation via the `onFormReady()` callbacks etc... - but something that critical should be controlled either at the form level or the property level to enforce data integrity.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-05-28 17:03:40"
      },
      {
        "time_stamp": "2020-05-28 18:24:51"
      },
      {
        "time_stamp": "2020-05-29 06:52:34"
      },
      {
        "time_stamp": "2020-05-29 06:59:37"
      },
      {
        "time_stamp": "2020-05-29 07:00:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-05-28 17:03:40",
    "text": "Another option would be adding a hook into the embedded forms validation rules to create your own validation patterns/requirements. At least that would allow us to extend the default validation rules and not have to hack/add more bloat on top of the forms we implement."
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-05-28 18:24:51",
    "edited": {
      "time_stamp": "2020-05-28 21:22:44"
    },
    "text": "The other problem with adding your own field validation is that onFormSubmit is non-blocking so options are limited without being able to extend the native form validation rules"
  }
]
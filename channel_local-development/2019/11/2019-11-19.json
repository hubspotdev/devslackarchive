[
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2019-11-19 08:16:25",
    "text": "<@U6W3H6YN8> Hi, I get the message “Error while retrieving new token: You have reached your rate limit.” and when I run “npx hs auth oauth2\" then I get “Unauthorized” message on the opening page."
  },
  {
    "poster": {
      "poster_name": "Akin Ekici",
      "poster_handle": "akin.ekici"
    },
    "time_stamp": "2019-11-19 08:21:51",
    "text": "I get “Auth succeeded” message now."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-19 09:44:18",
    "text": "I’d love to see how people are setting up gulp tasks to preprocess css with the local dev file structure",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-11-25 11:50:55"
      },
      {
        "time_stamp": "2019-11-25 11:52:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-19 13:01:03",
    "text": "<@UFH0PPMEW> I got the CLI working today with that repo I posted above.  Just had to write a new gulp-sass task to put my compiled sass into the individual module css files as well as a main.css file to serve to browsersync for previews"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-19 14:28:16",
    "text": "So, I’m using `npx hs upload --mode=publish` but then when I go into the design manager, it seems I have to manually publish all the modules I’ve updated.  Am I  missing something here?",
    "reply_count": 17,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-11-19 14:31:22"
      },
      {
        "time_stamp": "2019-11-19 14:31:55"
      },
      {
        "time_stamp": "2019-11-19 14:34:00"
      },
      {
        "time_stamp": "2019-11-19 14:34:20"
      },
      {
        "time_stamp": "2019-11-19 14:34:38"
      },
      {
        "time_stamp": "2019-11-19 14:37:23"
      },
      {
        "time_stamp": "2019-11-19 14:39:20"
      },
      {
        "time_stamp": "2019-11-19 14:49:03"
      },
      {
        "time_stamp": "2019-11-19 14:57:09"
      },
      {
        "time_stamp": "2019-11-19 14:57:35"
      },
      {
        "time_stamp": "2019-11-19 14:58:01"
      },
      {
        "time_stamp": "2019-11-19 15:01:44"
      },
      {
        "time_stamp": "2019-11-20 02:20:26"
      },
      {
        "time_stamp": "2019-11-20 02:27:02"
      },
      {
        "time_stamp": "2019-11-20 07:10:59"
      },
      {
        "time_stamp": "2019-11-25 11:48:01"
      },
      {
        "time_stamp": "2019-12-02 14:35:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:31:22",
    "text": "For me it seems to work"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:31:55",
    "text": "although.. i’m actually testing in preview mode, let me check."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:34:00",
    "edited": {
      "time_stamp": "2019-11-19 14:34:03"
    },
    "text": "<@U54TVT3C1> - I tested with a published page, it auto updates them for me"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-19 14:34:20",
    "text": "hmm… ok, i will have a look again."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-19 14:34:38",
    "text": "thanks <@UQERM7BLY> I’m really just getting started with the CLI today"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:37:23",
    "text": "No worries! Yeah, CLI is really basic, but seems to do the job well."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:39:20",
    "text": "It actually lints the templates too.. which is pretty nice."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-19 14:49:03",
    "text": "That’s awesome.  I had an old local workflow that I was using that deployed a single `.css` and `.js` file to the design manager via API and allowed for local styling by running pages in browsersync.  I’ve just reworked it to output my processed Sass to individual modules."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:57:09",
    "text": "Yeah that’s pretty much how i’ve set mine up."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:57:35",
    "text": "I actually have a src/ and build/ folder. src has modules, templates and assets folders"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-11-19 14:58:01",
    "text": "it’s all webpacked into build/ which in turn is fired off to HubSpot via cli."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-19 15:01:44",
    "text": "nice!"
  }
]
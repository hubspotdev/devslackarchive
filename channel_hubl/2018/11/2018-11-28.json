[
  {
    "poster": {
      "poster_name": "Rumana Bai",
      "poster_handle": "rumana"
    },
    "time_stamp": "2018-11-28 06:48:41",
    "text": "One of our clients wants to create a password protected site and provide profiles of many companies to subscribers. I understand we can do that in HubSpot. But they want to provide a newsfeed once someone subscribes where the subscriber can have a portal/newsfeed where they can add their favorite profiles. Is that possible in HubSpot?",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-11-28 07:22:07"
      },
      {
        "time_stamp": "2018-11-28 09:43:12"
      },
      {
        "time_stamp": "2018-11-28 10:54:55"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-28 07:22:07",
    "text": "You could use the new content membership feature"
  },
  null,
  {
    "poster": {
      "poster_name": "Mustapha Aoussar",
      "poster_handle": "mustapha.aoussar"
    },
    "time_stamp": "2018-11-28 09:08:09",
    "text": "Hi! Is there a way to convert a string variable to timestamp?"
  },
  {
    "poster": {
      "poster_name": "Mustapha Aoussar",
      "poster_handle": "mustapha.aoussar"
    },
    "time_stamp": "2018-11-28 09:09:24",
    "text": "I tried like this but doesn't work:\n\n{% set myDate = '2018-11-28 15:55:17' %}\n{{ myDate|unixtimestamp }}",
    "reply_count": 10,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-11-28 09:14:26"
      },
      {
        "time_stamp": "2018-11-28 09:24:27"
      },
      {
        "time_stamp": "2018-11-28 09:24:51"
      },
      {
        "time_stamp": "2018-11-28 09:30:59"
      },
      {
        "time_stamp": "2018-11-28 09:34:06"
      },
      {
        "time_stamp": "2018-11-28 09:48:54"
      },
      {
        "time_stamp": "2018-11-28 10:54:20"
      },
      {
        "time_stamp": "2018-11-28 11:17:50"
      },
      {
        "time_stamp": "2018-11-28 12:04:16"
      },
      {
        "time_stamp": "2018-11-29 02:41:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2018-11-28 09:14:26",
    "text": "Hey <@UE8RUSAUT>, the `unixtimestamp` filter only works on date objects (not strings.) To my knowledge, there are no HubL filters that allow you to convert a date-formatted string into a date object."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-28 09:24:27",
    "text": "<@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-28 09:24:51",
    "text": "Any plans for date object converter?"
  },
  null,
  {
    "poster": {
      "poster_name": "Mustapha Aoussar",
      "poster_handle": "mustapha.aoussar"
    },
    "time_stamp": "2018-11-28 09:30:59",
    "text": "<@UE24LMGSZ> thanks!!\nThis is a big problem.. :grimacing: because I have an input with datepicker that returns a string and I want to filter by this date but the query accepts only timestamp.. then I can't filter by date. :white_frowning_face:"
  },
  null,
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2018-11-28 09:34:06",
    "text": "What input are you referring to?"
  },
  {
    "poster": {
      "poster_name": "Rumana Bai",
      "poster_handle": "rumana"
    },
    "time_stamp": "2018-11-28 09:43:12",
    "text": "Thanks Matt. I understand we can give a membership access but do you know if we can create a member portal where members can have their own newsfeed like adding their favorite pages etc.?"
  },
  {
    "poster": {
      "poster_name": "Mustapha Aoussar",
      "poster_handle": "mustapha.aoussar"
    },
    "time_stamp": "2018-11-28 09:48:54",
    "text": "An html input with boostrap datepicker.. when I choose a date I submit the form, then I get from the request.query_dict the selected value. I need this value to execute my query."
  },
  null,
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-28 10:54:20",
    "text": "Working on a way to do this"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-11-28 10:54:55",
    "text": "You could create contact properties to store that data. To actually save the data, you’d currently need an external service to hit the contacts API."
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2018-11-28 11:17:50",
    "text": "In the meantime, you could use JavaScript on the page to convert the date string into a unix timestamp <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-28 12:04:16",
    "text": "<https://github.com/HubSpot/jinjava/pull/258>"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2018-11-28 13:02:11",
    "text": "Question for you guys. I created a custom module with 3 fields. I want to loop through all of the fields to generate an ‘item’ from that module. I see that they have ‘repeaters’ in the documentation now, but I don’t quite see how to repeat through all fields in an entire module. Has anyone ever done this before?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:07:22",
    "text": "on the right sidebar of the design manager(while in the module), you should see an option to select repeater"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:07:30",
    "text": "back up"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:07:45",
    "text": "make sure the 3 fields are in a group"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:07:53",
    "text": "then click the repeater swicth"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:08:08",
    "text": "which should allow you to copy a snippet that contains the for loop with the fields"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:08:24",
    "text": "wrap whatever you need in that for loop for the item"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2018-11-28 13:09:07",
    "text": "ahhhh, ill try that out. I figured it would be something simple that i was overlooking. I was more looking for a module case name or id and I would manually loop with that info."
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2018-11-28 13:09:10",
    "text": "I will try it out now"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2018-11-28 13:10:43",
    "text": "yep, that did it"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2018-11-28 13:10:48",
    "text": "thanks!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:46:02",
    "text": "dumb question - what’s a variable I can use to check if the current page is a blog page\n\nbasically I want to do ```{%if is_listing_page || blog_detail_page %} do stuff{%else%} Do other stuff{%endif%}```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:46:26",
    "text": "but there’s no blog detail page var that I can think of"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:50:36",
    "text": "hmm"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:50:46",
    "text": "my boss actually may have given me the secret"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:50:52",
    "text": "checking for group.anything"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-28 13:50:54",
    "text": "can you do `builtin_body_classes` var?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-28 13:51:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:50:55",
    "text": "you"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:50:59",
    "text": "have a boss"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-28 13:51:01",
    "text": "woah"
  },
  {
    "time_stamp": "2018-11-28 13:51:11",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:51:23",
    "text": "lol yes I have the :bobross:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:51:55",
    "text": "also a good idea"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-28 13:55:09",
    "edited": {
      "time_stamp": "2018-11-28 13:55:13"
    },
    "text": "looks like pages also have a `content_group_id` of `0`"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-28 13:56:56",
    "text": "<@U6W3H6YN8> this a good type of documentation to have, something that lists out all the variables you can see in dev info and what they are/used for. Also if there are multiple values that are consistent (like value of 1 means page 2 means blog and so on) have those listed as well"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:59:07",
    "text": "hmm content_group_id, wonder what dynamic pages show as"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-28 13:59:24",
    "text": "one sec ill check"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 13:59:39",
    "text": "it’s not important for my current task just interesting to know"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-28 13:59:48",
    "text": "`content_group_id`=0 for dynamic pages"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-28 14:00:03",
    "text": "Content groups are blogs and knowledge bases"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-11-28 14:00:04",
    "text": "0 as well"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 14:39:44",
    "text": "so if anyone needs this again `{%-if group.id-%}&lt;!--this is a blog listing or post --&gt;{%-else-%}&lt;!-- not a blog --&gt;{%-endif-%}`"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2018-11-28 14:48:29",
    "text": "Does anyone know if it's possible to change languages in the language switcher for its abbreviate (i.e. EN instead of English)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 14:51:21",
    "text": "you may have to roll your own or customize the language switcher module"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2018-11-28 14:51:46",
    "text": "that's what I thought..."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 14:56:50",
    "edited": {
      "time_stamp": "2018-11-28 14:57:10"
    },
    "text": "okay another question which I should know the answer to but don’t because I’ve never run into a situation that needed it I guess - *how do you get a blog’s listing page url based on it’s blog id?*"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 14:57:34",
    "text": "tried `page_by_id(blogid)` doesn’t work"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:00:48",
    "edited": {
      "time_stamp": "2018-11-28 15:01:00"
    },
    "text": "hmm think i found a way to do it, not the best way but lol works\n`blog_all_posts_url(blogid)|cut(\"/all\")`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:02:40",
    "text": "all kinds of useful nuggets today in <#C2YH119N2|hubl>"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:05:45",
    "text": "Is there any way to get a blog using the ID. I have a custom module where the user chooses a page, but I need to get the url and it doesn't seem to work with page_by_id()."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:06:37",
    "text": "lol you’re in luck I litterally just posted that"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:06:57",
    "text": "OMG, How did I miss that. Geez"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:07:09",
    "text": "haha"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:10:11",
    "text": "<@U7B0H5NPN> be aware though there is one possible flaw with how it’s implemented - if it’s possible another `/all` would appear in the url then it would break in that situation"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:45:04",
    "text": "<@U7SL518D6> In my case, I have a \"Page\" selector field in my module. When the user chooses a blog post, I get the blog ID, but I need the URL to the chosen blog. Your code above only gives me the listings url. Any ideas how I could get the post url?"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:48:55",
    "text": "What's the point of allowing a user to choose a blog post in the page field, if you can't do anything with it?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:54:09",
    "text": "I actually didn’t think you could select a blog post in that field"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:54:23",
    "text": "might be newly added, we’ve been requesting support for that and a few other things for a long time"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:54:24",
    "text": "I'm here to tell you, you can. :wink:"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:55:09",
    "text": "I've been going crazy trying to figure out what my link wouldn't work, then realized the client had chosen a blog in that field, and boom, here I am."
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:55:45",
    "text": "I'll try it. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:55:53",
    "text": "derp"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:55:56",
    "text": "i know it’s possible"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:55:57",
    "text": "you need"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:56:08",
    "text": "`blog_post_by_id()` actually"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 15:58:12",
    "text": "how you’d know what type of page it is is a whole other question but you could test if page by id returns anything then try post by id then try my listing page tick above"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 15:59:20",
    "text": "Any docs on that function, I'm not finding it."
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 16:01:24",
    "text": "Ok, that seems to work. Some documentation to at least indicate that it exists, would be helpful. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-28 16:02:45",
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#blog-post-by-id>"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-11-28 16:03:34",
    "text": "Thanks. Thought I had searched everywhere for this. Appreciate the help."
  },
  null,
  null
]
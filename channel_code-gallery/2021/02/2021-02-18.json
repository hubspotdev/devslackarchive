[
  {
    "poster": {
      "poster_name": "Joel Gaudeul",
      "poster_handle": "joel.gaudeul"
    },
    "time_stamp": "2021-02-18 03:20:11",
    "text": "Hello. I'm working on a pricing page that features the ability to create your bundle:\nSelect the modules you want like in <https://www.HubSpot.fr/pricing/bundle?marketingPlanSelected=380&amp;salesPlanSelected=359&amp;servicePlanSelected=362>",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-02-18 03:25:37"
      },
      {
        "time_stamp": "2021-02-18 08:43:06"
      },
      {
        "time_stamp": "2021-02-18 10:47:49"
      },
      {
        "time_stamp": "2021-02-18 10:56:41"
      },
      {
        "time_stamp": "2021-02-18 11:48:54"
      },
      {
        "time_stamp": "2021-02-18 11:50:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Joel Gaudeul",
      "poster_handle": "joel.gaudeul"
    },
    "time_stamp": "2021-02-18 03:25:37",
    "text": "<@U22PKFRU5> maybe you can help me on this topic :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2021-02-18 08:43:06",
    "text": "Cc <@USHRKJCMD> <@U7SL518D6> "
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-02-18 10:47:49",
    "text": "Hey there Joel,\n\nDepending on how complex your package/bundle experience needs to be. The way I like to do it - is I build a module and use Vue.JS. We have a Vue boilerplate if you’re familiar with Vue. If you prefer react.js, we have a boilerplate for that too.\n\nIf you’re not familiar with Vue or React, it’s not necessary, you can write vanilla JavaScript to do the same things.\n\nAnyhow I build it all out as 1 module.\n\nI make it so on change the math recalculates and displays on the page.\n\nThe next part really depends on what you want to do. If you’d like to submit it all so that say a rep can follow up on a call or something you can submit the values the user entered into the forms API\n<https://legacydocs.HubSpot.com/docs/methods/forms/submit_form>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-02-18 10:56:41",
    "text": "Also a tip. It’s a really good idea to flesh out the design and the UX of how this thing will work before you start coding it. Calculator projects like this can easily have scope creep if both the developer and designer don’t have the same vision in their heads. Usually it comes down to ironing out what happens when you click certain things."
  },
  {
    "poster": {
      "poster_name": "Joel Gaudeul",
      "poster_handle": "joel.gaudeul"
    },
    "time_stamp": "2021-02-18 11:48:54",
    "text": "Indeed designing it on paper is a must. I'm very interested in seeing your code so I can start building from it. My calculation is normally pretty straight forward, I may be able to cope."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-02-18 11:50:37",
    "text": "I’m afraid I can’t share our code for how we built our bundle calculator with you. Sorry.\n\nBasic jist though is that it’s all javascript within a module"
  }
]
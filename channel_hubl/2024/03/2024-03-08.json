[
  {
    "poster": {
      "poster_name": "Lukas Knobling",
      "poster_handle": "lukas.knobling"
    },
    "time_stamp": "2024-03-08 08:36:49",
    "text": "Hello everyone, I don't know what is the best channel for this question, so I choose this. I'm completely new to frontend development and have the following question:\n\nI want to build a Form in the CMS Frontend of HubSpot and on submission I want to send the infos to our backend what is based on node.js and javascript. What would now be the safest method to do so? How can I verify, that the content is really from my frontend build with the HubSpot CMS?\n\nAny help would be great :)"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 12:29:51",
    "text": "<@U05QGQ7LUVB> To ensure the security of your form submission, you can use a technique called \"Form Validation\" and \"Content Verification\"."
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 12:32:37",
    "text": "or you can configure your Node.js server to allow Cross-Origin Resource Sharing (CORS) for requests coming from your HubSpot frontend. Have you ever used CORS before that?"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 12:35:53",
    "text": "Another possible method is to implement CSRF protection on your Node.js backend to ensure the request is from frontend. As you know, CSRF is Cross-Site Request Forgery.\nFor example,\n```const express = require('express');\nconst csurf = require('csurf');\nconst app = express();\n\nconst csrfProtection = csurf();\n\napp.use(csrfProtection);\n\n<http://app.post|app.post>('/api/form', csrfProtection, (req, res) =&gt; {\n  // Verify CSRF token\n  const token = req.headers['csrf-token'];\n  if (token !== req.csrfToken()) {\n    return res.status(403).send('Invalid CSRF token');\n  }\n\n  // Process your form data\n  const formData = req.body;\n  // ...\n\n  // Send response\n  res.status(200).send('Form data received');\n});```",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-11 07:02:23"
      },
      {
        "time_stamp": "2024-03-11 07:06:04"
      },
      {
        "time_stamp": "2024-03-11 07:12:22"
      },
      {
        "time_stamp": "2024-03-11 07:14:06"
      },
      {
        "time_stamp": "2024-03-11 07:17:14"
      },
      {
        "time_stamp": "2024-03-11 07:19:36"
      },
      {
        "time_stamp": "2024-03-11 07:24:43"
      },
      {
        "time_stamp": "2024-03-11 07:27:07"
      },
      {
        "time_stamp": "2024-03-11 07:28:34"
      },
      {
        "time_stamp": "2024-03-11 07:29:07"
      },
      {
        "time_stamp": "2024-03-11 07:29:29"
      },
      {
        "time_stamp": "2024-03-11 07:29:33"
      },
      {
        "time_stamp": "2024-03-11 07:35:10"
      }
    ]
  }
]
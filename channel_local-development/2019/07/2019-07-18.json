[
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "subtype": "channel_topic",
    "topic": ":warning:BETA - functionality subject to change :warning:  A channel to discuss the local development beta.\n\nGetting Started: <https://designers.HubSpot.com/docs/tools/local-development>\nReference:...",
    "text": "set the channel topic: :warning:BETA - functionality subject to change :warning:  A channel to discuss the local development beta.\n\nGetting Started: <https://designers.HubSpot.com/docs/tools/local-development>\nReference:...",
    "time_stamp": "2019-07-18 07:38:11"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 07:38:54",
    "edited": {
      "time_stamp": "2019-07-18 07:56:30"
    },
    "text": "We are extremely excited to introduce a new way to develop using your preferred workflows on the HubSpot CMS! This new workflow supports all Design Manager assets being represented as a true project of files (DnD templates, HTML template, CSS files, JS files &amp; Modules), unlocking local development, code living in GitHub/version control, build stages, and more.\n\nSee <https://designers.HubSpot.com/docs/tools/local-development> for a guide on how to get started, and <https://designers.HubSpot.com/docs/tools/local-development-reference> for the full reference documentation. *Please note this functionality is in BETA and subject to change.* We have lots of plans to expand on the local development experience but want to craft it with your feedback, which is why we are so excited to get it in the hands of developers. This is only the beginning :slightly_smiling_face:\n\nAny feedback/support for this functionality should be kept within this Slack Channel. Please feel free to ask questions, request features and generally discuss local development in this channel! We plan to open-source this tooling so you can contribute and file issues.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-07-18 07:58:16"
      }
    ]
  },
  null,
  {
    "time_stamp": "2019-07-18 07:40:11",
    "text": ""
  },
  null,
  null,
  null,
  null,
  {
    "subtype": "channel_topic",
    "topic": ":warning: BETA - functionality subject to change :warning:  A channel to discuss the local development beta.\n<https://designers.HubSpot.com/docs/tools/local-development>\n<https://designers.HubSpot.com/docs/tools/local-development-reference>",
    "text": "set the channel topic: :warning: BETA - functionality subject to change :warning:  A channel to discuss the local development beta.\n<https://designers.HubSpot.com/docs/tools/local-development>\n<https://designers.HubSpot.com/docs/tools/local-development-reference>",
    "time_stamp": "2019-07-18 07:44:26"
  },
  {
    "time_stamp": "2019-07-18 07:44:45",
    "text": ""
  },
  null,
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-07-18 07:47:21",
    "text": "does this support sass??",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-07-18 07:49:13"
      },
      {
        "time_stamp": "2019-07-18 18:16:54"
      },
      {
        "time_stamp": "2019-07-30 06:34:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-07-18 07:47:37",
    "text": "I guess it does"
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 07:49:13",
    "text": "yeah, you can use whatever frontend tooling you would like when working with files locally."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-18 07:52:00",
    "text": "song I linked wasn’t as appropriate as I thought lol\n\nbut the chorus is “I’m so excited, and I just can’t hide it\nI’m about to lose control and I think I like it”"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 07:55:21",
    "text": "well shit"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 07:55:32",
    "text": "This is certainly exciting"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-18 07:56:14",
    "text": "Christmas in July"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 07:57:32",
    "text": "for folks looking to start using the tooling, we recommend using a CMS developer portal as a sandbox/DEV environment. if you don’t have one, you can create one via <https://designers.HubSpot.com/discoverykit>.",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-18 08:01:31"
      },
      {
        "time_stamp": "2019-07-18 08:02:40"
      },
      {
        "time_stamp": "2019-07-18 08:08:41"
      },
      {
        "time_stamp": "2019-07-18 08:10:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 07:58:16",
    "text": "<https://HubSpotdev.slack.com/archives/CLJJXGTC0/p1563458252011700>"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 07:58:21",
    "text": "lol... <@U22VBL87M> was literally just figuring out how to phrase my question about doing this"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-18 08:01:31",
    "text": "fyi, unless this has been updated, the HubSpot portal created here is just the free HubSpot portalm not the full featured portal you get here: <https://developers.HubSpot.com/>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-07-18 08:02:40",
    "text": "<@UFBNA9K9A> pointed that out to me"
  },
  null,
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 08:08:41",
    "text": "yeah, there are two different types of developer portals: CMS and API and their capabilities differ. You may want one of each. Luckily, they are both free."
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 08:10:07",
    "text": "if you hit limitations when it comes to being able to use a CMS developer portal when building for the CMS, please let <@U6W3H6YN8> know."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 08:15:48",
    "text": "Question: is it possible to fetch your Design manager root, or does it have to be a directory within?"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-07-18 08:16:11",
    "text": "Anybody know the path in HubSpot Design Tools? Silly question but I thought it would be the URL??",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-18 08:18:53"
      },
      {
        "time_stamp": "2019-07-18 08:19:49"
      },
      {
        "time_stamp": "2019-07-18 08:25:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-07-18 08:16:19",
    "text": "Browser* URL"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-07-18 08:16:29",
    "text": "followed by the folder name?"
  },
  {
    "text": "Great question. The `src` is simply the path of the file project in the Design Tools. So if you wanted to fetch this project, the `src` path is just `cms-project`",
    "time_stamp": "2019-07-18 08:18:53"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-07-18 08:19:49",
    "text": "I keep getting [ERROR] Error fetching “D22”: TypeError: Cannot destructure property `env` of ‘undefined’ or ‘null’.\n[ERROR] Error downloading “D22\" to “/Users/scott/Documents/Test”: “Cannot read property ‘name’ of undefined”"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:25:05",
    "text": "<@UGMGP7A72> could you DM myself and <@U22VBL87M> what the contents of your config file are please? Feel free to edit out your apikey or oauth token information. Happy to see whats up here"
  },
  null,
  {
    "text": "Failing fetching the root, how would I fetch the contents of \"Vision Critical\"",
    "time_stamp": "2019-07-18 08:26:31",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-18 08:27:32"
      },
      {
        "time_stamp": "2019-07-18 08:30:00"
      },
      {
        "time_stamp": "2019-07-18 08:33:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 08:27:05",
    "text": "` hscms fetch --portal=4976390 Vision_Critical` returns `[ERROR] Error fetching \"Vision_Critical\": StatusCodeError: 404 - undefined`"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:27:32",
    "edited": {
      "time_stamp": "2019-07-18 08:28:44"
    },
    "text": "Try `npx hscms fetch --portal=4976390 \"Vision Critical\"` and let me know if that works!"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2019-07-18 08:28:00",
    "edited": {
      "time_stamp": "2019-07-18 08:31:40"
    },
    "text": "This looks pretty cool. Especially for building modules. Questions I have.\n1. When you sync does it do it both ways or just push changes? What if you or another developer makes changes via web editor?\n2. I assume it ignores git repository folders files right?\n3. If you sync, would a live preview window auto update to show the file changes?\n4. Is there a way to access to files manager to upload images?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-18 08:31:45"
      },
      {
        "time_stamp": "2019-07-18 08:32:03"
      },
      {
        "time_stamp": "2019-07-18 08:34:21"
      },
      {
        "time_stamp": "2019-07-18 08:35:28"
      },
      {
        "time_stamp": "2019-07-18 08:38:29"
      },
      {
        "time_stamp": "2019-07-18 08:42:13"
      },
      {
        "time_stamp": "2019-07-18 08:48:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 08:30:00",
    "text": "Thanks Will, that did it"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:31:45",
    "edited": {
      "time_stamp": "2019-07-18 08:43:27"
    },
    "text": "Great questions!\n\n1. The sync is not bidirectional. But, you can use the `fetch` command to update your local environment with remote changes (use the `--overwrite` option to overwrite local files). We are likely going to merge `sync` into `upload` to avoid this confusion. Bidirectional syncing is another thing we are considering.\n\n2. It will not ignore anything at the moment. If you have files which should not be synced, I would recommend having some sort of `build` or `src` folder to upload, which only contained the files you wanted to sync, where stuff like your package, etc. are in a root folder."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:32:03",
    "text": "3. Yes, if you are using the Design Manage preview functionality"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:33:01",
    "text": "Sure thing!"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:34:21",
    "text": "4. Not at the moment using this tooling. out of curiosity, are the images you are referring \"developer assets\", which you would like to be colocated with your file package, and not selectable for content creators in file pickers?"
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2019-07-18 08:35:28",
    "text": "yeah more theme based images or placeholder images (logos, carousel placeholders, team photo placeholder, social icons, etc)"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:38:29",
    "edited": {
      "time_stamp": "2019-07-18 08:38:37"
    },
    "text": ":thumbsup: we are investigating supporting developer assets, such as the ones you are referring, being colocated with the rest of your developer assets. Thanks for the feedback!"
  },
  null,
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-07-18 08:39:58",
    "text": "<@UDU6KEBFB>"
  },
  null,
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 08:41:47",
    "edited": {
      "time_stamp": "2019-07-18 08:41:56"
    },
    "text": "If we're copying `fields` json objects between modules, should we remove the `\"id\"` completely, or leave it blank?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-07-18 08:49:04"
      },
      {
        "time_stamp": "2019-07-18 08:49:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2019-07-18 08:42:13",
    "text": "you're welcome. Thank you for your hard work. Really enjoy working with the CMS and have seen a lot of great improvement."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:48:12",
    "text": "Thank you for helping shape the project, <@UG7S8J18D>! We greatly appreciate your feedback"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:49:04",
    "edited": {
      "time_stamp": "2019-07-18 08:51:30"
    },
    "text": "You can completely leave out \"id\", and we will handle it for you when creating a new module/module field"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 08:49:46",
    "edited": {
      "time_stamp": "2019-07-18 08:49:51"
    },
    "text": "If you use the `create` command (<https://designers.HubSpot.com/docs/tools/local-development-reference#create>), you can generally see what we are expecting"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 09:00:24",
    "text": "First off, let me start by saying that I really like the direction this is going.  I see a lot of value in this tool for creating Modules locally.\n\nOne place where I see some room for improvement would be some kind of hot reloading of pages to allow for speedier css/js development.  Running a sync every time I want to see my updates seems a little cumbersome to me.",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-07-18 09:01:49"
      },
      {
        "time_stamp": "2019-07-18 09:01:50"
      },
      {
        "time_stamp": "2019-07-18 09:02:28"
      },
      {
        "time_stamp": "2019-07-18 09:07:17"
      },
      {
        "time_stamp": "2019-07-18 09:09:27"
      },
      {
        "time_stamp": "2019-07-18 09:13:46"
      },
      {
        "time_stamp": "2019-07-18 09:18:59"
      }
    ]
  },
  {
    "time_stamp": "2019-07-18 09:00:32",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 09:01:49",
    "text": "Despite lacking the ability to edit/update modules, I think I'm going to stick with this: <https://github.com/Absanater/HubSpot-frontend-local>\n\nThe hot reload on localhost really speeds up development a lot"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 09:01:50",
    "edited": {
      "time_stamp": "2019-07-18 09:02:47"
    },
    "text": "Thanks for the feedback, <@U54TVT3C1>! We really appreciate it. You might like the `watch` command (<https://designers.HubSpot.com/docs/tools/local-development-reference#watch>)\n\nBut great feedback on hot-reloading pages! This will happen if you are using the Design Manager Previewer tool, but not on its own for pages. We are thinking about that!"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 09:02:28",
    "text": "Ah... I spoke too soon"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-07-18 09:03:53",
    "text": "yall. this is incredible."
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-07-18 09:04:28",
    "text": "this looks super promising (and familiar to a gulp workflow I setup for our company to use for clients)"
  },
  {
    "time_stamp": "2019-07-18 09:04:31",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 09:07:17",
    "text": "I think `watch` might get me pretty close to where I want to be"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 09:09:27",
    "text": "In between my gulp watch and this watch, there is going to be a lot of watching going on"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 09:13:46",
    "text": "Soon enough we’ll share how the tooling can be integrated directly with gulp and other tools like webpack so that files can automatically be upload after they are built without a separate node process."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 09:15:37",
    "text": "Honestly.  Great work on this.  I know there has been a ton of interest in something like this from the HS dev community."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-18 09:16:53",
    "text": "I'm just thinking back to trying to wrap my head around the local-hubl-server back in 2016 and figure out a way to make it truly useful"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-07-18 09:18:59",
    "text": "WOOP WOOP"
  },
  {
    "subtype": "channel_purpose",
    "purpose": "Answering prayers, fulfilling dreams",
    "text": "set the channel description: Answering prayers, fulfilling dreams",
    "time_stamp": "2019-07-18 09:52:43"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2019-07-18 10:24:20",
    "text": "Is there a way to pull all client portals?",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-07-18 11:16:48"
      },
      {
        "time_stamp": "2019-07-18 11:17:33"
      },
      {
        "time_stamp": "2019-07-18 11:20:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 11:16:48",
    "text": "It is possible to use the portals against many portals by adding them all to the `HubSpot.config.yml` or creating configs for each project, but we don’t have an easy way to pull down all the developer assets for a portal, yet."
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 11:17:33",
    "edited": {
      "time_stamp": "2019-07-18 11:19:32"
    },
    "text": "A goal for the tooling is for there to be a lot of flexibility so that developers can write their own shell scripts like:\n`my-script`\n```\n#!/bin/bash\nhscms fetch --portal clientA folderA clientA/folderA\nhscms fetch --portal clientB folderB clientB/folderB\n```"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-18 11:20:22",
    "text": "and also be able to write node scripts as well use in tools like gulp"
  },
  {
    "text": "trying to setup OAuth2 but get this error. Followed the directions for a private developer app. anyone know what's wrong?",
    "time_stamp": "2019-07-18 11:40:06"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 11:42:27",
    "text": "ah nvm. I entered the dev account's portal id instead of a real portal"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 11:44:16",
    "text": "now to try and get super admin access from my clients :grimacing:"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-07-18 12:18:06",
    "text": "Has anyone pulled down a drag and drop page yet? I'm curious what that workflow looks like",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-18 12:20:21"
      },
      {
        "time_stamp": "2019-07-18 12:34:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 12:20:21",
    "text": "Right now, fetching a Drag and Drop template will pull down the JSON object which represents the template."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-07-18 12:34:43",
    "text": "gotcha, sweet"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 12:59:36",
    "edited": {
      "time_stamp": "2019-07-18 12:59:49"
    },
    "text": "i setup the configuration file using the `npx hscms auth oauth2` command but when i fetch i get `Error fetching \"Modules\": StatusCodeError: Any of the listed authentication credentials are missing`"
  },
  null,
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 13:06:01",
    "text": "i think a new dev account or new app just takes a while to populate the data."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 13:06:28",
    "text": "looked in the yml and all the credentials were blank, ran the auth command again and now they have the real credentials",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-18 13:38:02"
      },
      {
        "time_stamp": "2019-07-18 13:43:48"
      },
      {
        "time_stamp": "2019-07-18 13:44:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 13:07:08",
    "text": "for anyone else out there that couldn't get the initial fetch to work"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-18 13:38:02",
    "edited": {
      "time_stamp": "2019-07-18 13:38:07"
    },
    "text": ":thumbsup: glad you got it figured out. Odd this occurred :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 13:43:48",
    "text": "it may have also had something to do with the portal's Account name being blank"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-18 13:44:25",
    "text": "when signing up for new the dev account it didn't set an account name for the portal"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2019-07-18 18:16:54",
    "text": ":raised_hands::skin-tone-5:"
  },
  {
    "poster": {
      "poster_name": "Jon Miller",
      "poster_handle": "jon748"
    },
    "time_stamp": "2019-07-18 20:31:52",
    "edited": {
      "time_stamp": "2019-07-18 20:32:41"
    },
    "text": "anyone have any insight to not get my editor to blow up when i use variables in my css? I am currently setting variables in my css files as so `{% set primaryColor = 'blue' %}` and then using said variables within a number of css files."
  },
  {
    "poster": {
      "poster_name": "Jon Miller",
      "poster_handle": "jon748"
    },
    "time_stamp": "2019-07-18 20:33:16",
    "text": "but my local editor is screaming at me and won't auto format because of the 200+ errors I am getting now.... :face_palm:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-18 20:36:16",
    "text": "If you use vs code and use the hubl language extension and jinja extension it doesnt show errors"
  },
  {
    "poster": {
      "poster_name": "Jon Miller",
      "poster_handle": "jon748"
    },
    "time_stamp": "2019-07-18 20:36:24",
    "text": "I have both...."
  },
  {
    "poster": {
      "poster_name": "Jon Miller",
      "poster_handle": "jon748"
    },
    "time_stamp": "2019-07-18 20:36:40",
    "edited": {
      "time_stamp": "2019-07-18 20:36:58"
    },
    "text": "i haven't configured them outside of default settings though, so that might be where I start!"
  },
  {
    "poster": {
      "poster_name": "Jon Miller",
      "poster_handle": "jon748"
    },
    "time_stamp": "2019-07-18 20:37:23",
    "text": "also one more note: I am not getting the errors in my .html files, just my .css files"
  },
  {
    "text": "To all who have been working on this:",
    "time_stamp": "2019-07-18 21:11:03"
  },
  {
    "time_stamp": "2019-07-18 21:27:50",
    "text": ""
  },
  null
]
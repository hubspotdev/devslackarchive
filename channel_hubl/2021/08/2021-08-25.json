[
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2021-08-25 05:24:57",
    "text": "thatâ€™s neat, but was hoping to use a filter so all future headings someone might enter would also have an id on them"
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-08-25 05:40:53",
    "edited": {
      "time_stamp": "2021-08-25 05:41:22"
    },
    "text": "Is there any way to use bracket notation in Hubl?\n\n```{% set obj = { \"foo\": true, \"bar\": true } %}\n\n{% for key in ['foo', 'bar'] %}\n  {{ obj[key] }}    &lt;--- Can we do something like this?\n{% endfor %}```",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-08-25 08:22:00"
      },
      {
        "time_stamp": "2021-08-25 08:48:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2021-08-25 08:22:00",
    "text": "Yeah, that works in HubL"
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-08-25 08:48:53",
    "text": "Sweet, thanks."
  },
  {
    "text": "Hey guys,\n\nIs there anyway to pull attachments from custom objects in pages?\n\nWe are able to pull custom object data in pages but having issue in fetching attachments that we will upload in this highlighted section",
    "time_stamp": "2021-08-25 10:34:12"
  },
  {
    "poster": {
      "poster_name": "Kevin-C",
      "poster_handle": "kevin285"
    },
    "time_stamp": "2021-08-25 12:58:03",
    "text": "Ahhh, well I'm very interested in the idea if something ever comes of it!"
  },
  {
    "text": "Hey everyone, I have a pretty strange issue occurring with a for loop's index. Has anyone ever seen this before?\n\nSo I have a standard for loop iterating through blog_recent_tag_posts. The for loop is appropriately looping through the posts and displaying their content accurately. However, the _loop.index_ value is staying at 1.\n\nWhy would this ever be the case, and how is it possible? Does anyone know? I've attached the relevant code and a screenshot of the page below. Currently, the template is displaying debug info on the page. (You'll see under the post info that this is the 13th iteration (using my hard coded incrementer), but the loop index still shows as 1)",
    "time_stamp": "2021-08-25 14:00:54",
    "edited": {
      "time_stamp": "2021-08-25 14:01:23"
    },
    "reply_count": 19,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-08-25 14:09:04"
      },
      {
        "time_stamp": "2021-08-25 15:36:41"
      },
      {
        "time_stamp": "2021-08-25 15:38:58"
      },
      {
        "time_stamp": "2021-08-25 15:47:50"
      },
      {
        "time_stamp": "2021-08-25 16:06:32"
      },
      {
        "time_stamp": "2021-09-01 10:45:54"
      },
      {
        "time_stamp": "2021-09-01 10:58:32"
      },
      {
        "time_stamp": "2021-09-01 10:58:53"
      },
      {
        "time_stamp": "2021-09-01 10:59:15"
      },
      {
        "time_stamp": "2021-09-01 11:01:31"
      },
      {
        "time_stamp": "2021-09-01 11:02:59"
      },
      {
        "time_stamp": "2021-09-01 11:15:56"
      },
      {
        "time_stamp": "2021-09-01 11:21:29"
      },
      {
        "time_stamp": "2021-09-01 11:22:09"
      },
      {
        "time_stamp": "2021-09-01 15:17:17"
      },
      {
        "time_stamp": "2021-09-01 16:44:55"
      },
      {
        "time_stamp": "2021-09-01 16:45:02"
      },
      {
        "time_stamp": "2021-09-03 08:09:54"
      },
      {
        "time_stamp": "2021-09-10 13:27:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2021-08-25 14:09:04",
    "text": "Are you able to reproduce this going through a for loop of something simple like numbers or strings?"
  },
  {
    "poster": {
      "poster_name": "James Ward",
      "poster_handle": "james181"
    },
    "time_stamp": "2021-08-25 15:36:41",
    "text": "This issue seems to stem directly from this line:\n\n\n`{% if loop.index &gt; offsetNum and loop.index &lt; endIndex %}`"
  },
  {
    "poster": {
      "poster_name": "James Ward",
      "poster_handle": "james181"
    },
    "time_stamp": "2021-08-25 15:38:58",
    "text": "The issue appears to be specifically with the \"and\" operator. If I keep the if statement with either of the two checks individually, the index increments. otherwise it does not increment."
  },
  {
    "poster": {
      "poster_name": "James Ward",
      "poster_handle": "james181"
    },
    "time_stamp": "2021-08-25 15:47:50",
    "text": "Breaking the if statement up into two separate if statements fixed the issue."
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2021-08-25 16:06:32",
    "text": "Could you dm me a link to this page? That probably shouldn't be happening. I can look into what's going on tomorrow"
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-08-25 16:16:43",
    "text": "Is there a way to set the key in a key:value pairing programmatically? For example:\n\n```{% set key = \"best_key\" %}\n{% set obj = { [key]: \"value\" } %}```",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-08-26 02:29:28"
      },
      {
        "time_stamp": "2021-08-26 07:38:16"
      }
    ]
  }
]
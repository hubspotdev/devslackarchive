[
  {
    "poster": {
      "poster_name": "Matt Murphy",
      "poster_handle": "mmatt5439"
    },
    "time_stamp": "2024-10-31 00:21:07",
    "text": "Hey Team, I'm currently trying to use the `/crm/v3/objects/line_items` API, and just wondering about the associations feature, I see there is documentation and an example to when setup the association so when it's created, you can associate it to a *Deal* as part of the 1 API call by referencing *<https://developers.HubSpot.com/beta-docs/guides/api/crm/associations-v4?uuid=e0e32664-d2e9-4334-a9d8-71643de295d9#v1-associations-legacy|association 20>*, however I'm checking the association list, and I'm looking to associate a *Line Item &gt; Cart*, I do see there is a *Cart &gt; Line Item*, but that will require me to run a seperate API after creating the *line-item*.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-10-31 00:42:54"
      },
      {
        "time_stamp": "2024-10-31 00:46:02"
      },
      {
        "time_stamp": "2024-10-31 00:47:53"
      },
      {
        "time_stamp": "2024-10-31 00:52:37"
      },
      {
        "time_stamp": "2024-10-31 00:54:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ahmed Hassan",
      "poster_handle": "ahmed703"
    },
    "time_stamp": "2024-10-31 00:42:54",
    "text": "If I recall correctly, we previously had to do this, yes. And also it gives the benefit of adding for example the property details for the line items i.e: billing frequency, start date, end date, etc.\n\nYou can alternatively maybe also try to create the line item and then associate line item to the cart? This will depend on what you want to achieve."
  },
  {
    "poster": {
      "poster_name": "Matt Murphy",
      "poster_handle": "mmatt5439"
    },
    "time_stamp": "2024-10-31 00:46:02",
    "text": "Hey <@U0623BNGR5H>, thanks for the help so promptly, yeah that approach is what I have at the moment, however the API takes a while to run, I plan to use it on an interactive ecommerce system and have it logged live. So running 2x API calls I guess functionally will work, but in a time matter, I don't think it's a good approach"
  },
  {
    "poster": {
      "poster_name": "Ahmed Hassan",
      "poster_handle": "ahmed703"
    },
    "time_stamp": "2024-10-31 00:47:53",
    "text": "You're most welcome <@U05TE9CNYLQ>. Oh yes 100%, also to add to your point as well, with a previous experience on the e-commerce business, sometimes the rate limits are an issue and hits that peak on HS at some point."
  },
  {
    "poster": {
      "poster_name": "Ahmed Hassan",
      "poster_handle": "ahmed703"
    },
    "time_stamp": "2024-10-31 00:52:37",
    "text": "Another way, which isn't the best approach also not the most scalable and sustainable, but does the trick is to create a deal property i.e: the product line items which can be used later to trigger a workflow once this property is updated."
  },
  {
    "poster": {
      "poster_name": "Ahmed Hassan",
      "poster_handle": "ahmed703"
    },
    "time_stamp": "2024-10-31 00:54:30",
    "text": "You can always use the OPS Hub for this workflow but again will require updating regularly and testing once you have any changes on the product or line items side."
  }
]
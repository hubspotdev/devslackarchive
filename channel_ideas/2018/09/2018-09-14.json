[
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-09-14 09:59:52",
    "text": "I have an idea here: In DM2, I need the ability to add a page/URL field. That is, I need the ability to just inject a PAGE if the user selects a page, and a LINK if they decide to use a link. Currently I have to add two fields and it seems like something that would be useful for a lot of people."
  },
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-09-14 10:01:18",
    "text": "Oh and currently it is set up so I have to use display conditions for both in order to get one to disappear or appear based on what the page editor user wants."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-14 10:54:53",
    "text": "Would be nice if the rich text editor - when you set an image to float left or right or whatever would inject a css class onto the image like `hs-img-float-left`\n\nThat way us developers can do things to better accomodate.\n\nHere’s an example: client pops in an image floats it left. They don’t realize that on mobile that float will still be there so they will get a really crappy experience.\n\nIf classes are injected(even if they don’t have actual styles applied to them) that gives us developers the ability to adjust for things like this"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-14 10:55:27",
    "text": "In this case doing something like kiliing the float so the text stops trying to wrap 1 letter at a time"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-14 10:55:45",
    "text": "Also this isn’t a new idea - other CMSs like WordPress do this."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-14 11:02:31",
    "text": "<https://spin.d.pr/PyI5m0+> screen recording illustrating the problem"
  },
  null,
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-09-14 12:22:12",
    "text": "IDEA: A blog listing page view (similar to how you’d view / edit a landing page) for modifying custom module parameters / settings for the Listing Page",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-09-14 12:23:25"
      },
      {
        "time_stamp": "2018-09-14 12:38:04"
      },
      {
        "time_stamp": "2018-09-14 12:38:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-09-14 12:23:25",
    "text": "I’ve done a workaround for this in the past where I have a hidden page with all of the values for the landing page. The landing page references all of these values."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-09-14 12:38:04",
    "text": "Oh, that's a clever solution"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-09-14 12:38:32",
    "text": "I usually just have a bunch of settings saved as HubL variables in the blog header settings"
  },
  null,
  null
]
[
  {
    "poster": {
      "poster_name": "Shamash Athoraya",
      "poster_handle": "shamash.athoraya"
    },
    "time_stamp": "2020-06-18 07:07:23",
    "text": "",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-06-18 07:16:49"
      },
      {
        "time_stamp": "2020-06-18 07:18:26"
      },
      {
        "time_stamp": "2020-06-18 07:21:07"
      },
      {
        "time_stamp": "2020-06-18 07:37:13"
      },
      {
        "time_stamp": "2020-06-18 07:39:52"
      },
      {
        "time_stamp": "2020-06-18 07:42:26"
      },
      {
        "time_stamp": "2020-06-18 07:44:32"
      },
      {
        "time_stamp": "2020-06-18 08:13:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-06-18 07:16:49",
    "text": "Hey Shamash, I found this little article very helpful for this: <https://legacydocs.HubSpot.com/docs/methods/tracking_code_api/get_consent_status>"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-06-18 07:18:26",
    "text": "Although those docs look a little out of date to me"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-06-18 07:21:07",
    "text": "I’m using a function like this and then using Google Tag Manager to fire tags based on HubSpot consent status:\n```app.userConsent = function() {\n    _hsq.push([\n      \"addPrivacyConsentListener\",\n      function(consent) {\n        if (consent.allowed === true) {\n          dataLayer.push({ event: \"HubSpot-consent-true\" });\n        } else if (consent.allowed === false) {\n          dataLayer.push({ event: \"HubSpot-consent-false\" });\n        }\n      }\n    ]);\n  };```"
  },
  {
    "poster": {
      "poster_name": "Shamash Athoraya",
      "poster_handle": "shamash.athoraya"
    },
    "time_stamp": "2020-06-18 07:37:13",
    "text": "Thanks <@U54TVT3C1> ! Would it be possible to handle cookies that are stored by a 3rd party, for example from Google if you embed a YouTube video on a page?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-06-18 07:39:52",
    "text": "I believe there’s a setting in youtube to prevent cookies from loading on embedded videos"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-06-18 07:42:26",
    "text": "I think you can change the source to `<http://youtube-nocookie.com|youtube-nocookie.com>` and it will prevent tracking cookies from loading.\n\nYoutube will still load some necessary cookies, but they aren’t for tracking so they are fully GDPR compliant.  (I think.  I’m not a lawyer, but that’s how it was explained to me by out privacy commissioner)"
  },
  {
    "poster": {
      "poster_name": "Shamash Athoraya",
      "poster_handle": "shamash.athoraya"
    },
    "time_stamp": "2020-06-18 07:44:32",
    "text": "Okay, will look into that. Thanks Ian"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-06-18 08:13:44",
    "text": "My pleasure.  It took me a long time to figure out GDPR compliance using the HubSpot consent banner.  Always happy to help others who are working on this"
  }
]
[
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2024-06-27 01:31:50",
    "text": "Really great"
  },
  {
    "poster": {
      "poster_name": "Marianne",
      "poster_handle": "marianne680"
    },
    "time_stamp": "2024-06-27 03:07:21",
    "text": "hi everyone, ive read somewhere that we can set the limit for the contents variable in the blog listing page. does anyone here know how to configure it?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-06-27 03:09:53"
      },
      {
        "time_stamp": "2024-06-27 03:10:44"
      },
      {
        "time_stamp": "2024-06-27 06:13:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-06-27 03:09:53",
    "text": "Hi Marianne, have you tried something like\n``` {{ content.body|truncate(40) }}  ```\n"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-06-27 03:10:44",
    "text": "oh sorry, in the listing its probably not content.body but something different"
  },
  {
    "poster": {
      "poster_name": "Paulo Barcelos",
      "poster_handle": "paulo"
    },
    "time_stamp": "2024-06-27 03:21:05",
    "text": "I did `{{ standard_header_includes|replace('{{', '[[')|replace('}}', ']]') }}`  , so I was able to \"reveal\" them, but stopped them from being expanded further :wink:"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2024-06-27 06:13:06",
    "text": "Hi <@U073HL56L9Z>,\nif your listing template contains the default blog variable\n`{% for content in contents %}`\n\nit's like Andreas suggested.\n\nUse it like this:\n```{% for content in contents %}\n{{ content.post_body|truncate(200) }} {# the number defines the char count that will be displayed #}\n{% endfor %}```\nif your using some custom solution like the <https://developers.HubSpot.com/docs/cms/hubl/functions#blog-recent-posts|blog_recent_posts function>\nit would be something like this\n\n```{% set rec_posts = blog_recent_posts(\"default\", 5) %}\n{% for rec_post in rec_posts %}\n    {{ rec_post.post_body|truncate(200) }}\n{% endfor %}```\n\n*just a recommendation:*\nuse `truncatehtml(200)` instead of just `truncate(200)`. By doing so it won't count/consider the possible wrapping HTML and might show more content"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-06-27 07:57:11",
    "text": "I find `|json` and copy/pasting into json pretty print in vs code or on an online item much easier to work with. It allows you to minimize/maximize different objects\n\nsure, the above works, but I think there are just faster ways that display the content much better in regards to nesting then using this"
  },
  {
    "poster": {
      "poster_name": "Kyle Nazario",
      "poster_handle": "knazario"
    },
    "time_stamp": "2024-06-27 14:04:47",
    "text": "Hello, everyone! Our website has a section at the bottom of each blog post for displaying the previous and next posts. It uses the vars `content.previous_post_name` and so on. However, the previous and next post for each blog is simply the two posts that were chronologically published before and after, regardless of blog topic.\n\nIs there a Hubl var to get the previous and next post with a given topic?"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-06-27 15:16:24",
    "text": "Absolutely love this â€” definitely going to macro-fy it and add it to my regular repertoire!"
  }
]
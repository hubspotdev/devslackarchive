[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-07-28 07:01:51",
    "text": "Never mind to my earlier (now deleted post) about theme errors"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-07-28 08:03:22",
    "edited": {
      "time_stamp": "2020-07-28 08:03:28"
    },
    "text": "Anyone know how what properties are in the `styles` object for a <https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields#font|font field>? There is no documentation on it"
  },
  {
    "poster": {
      "poster_name": "Kris Gösser",
      "poster_handle": "kris443"
    },
    "time_stamp": "2020-07-28 11:52:16",
    "text": "Hi, not sure if this is a noob question or not:\n\nWhy do I need to run `npx hs &lt;command&gt;` in order to use the CLI?\n\nWhen I run `hs &lt;command&gt;` I always get an error that `hs` can't be found.\n\nI saw via the Academy video on setup that he uses `npx hs init` initially, so I've used that, but I'm not sure what step I missed to not require `npx` anymore, as per all the documentation says to use in the CLI.\n\nThanks!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-07-28 12:00:33",
    "text": "npx localizes the install of the package, otherwise it needs to be installed globally:\n```npm install -g @HubSpot/cms-cli@latest```\n"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-07-28 12:00:57",
    "text": "the -g flag should add the hs command to path"
  },
  {
    "poster": {
      "poster_name": "Kris Gösser",
      "poster_handle": "kris443"
    },
    "time_stamp": "2020-07-28 12:15:28",
    "text": "Ah, I see. So by not installing globally, I effectively need to use npx to sudo run `hs` .\n\nI ran into the <https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally|EACCES issue> so fixed that. Good to go, thanks <@U26BLKGE4>\n\nbtw quick question: is there a cli command to check which 'portal' I'm working in? Or is it best practice to just rely on whatever is the default in the YAML config?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-28 12:37:28"
      },
      {
        "time_stamp": "2020-07-28 12:39:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-07-28 12:37:28",
    "text": "I usually use the portal flag `--portal=NAME` because we work on several projects at a time from the master folder"
  },
  {
    "poster": {
      "poster_name": "Sandy Garrido",
      "poster_handle": "sandy889"
    },
    "time_stamp": "2020-07-28 12:38:37",
    "edited": {
      "time_stamp": "2020-07-28 12:38:50"
    },
    "text": "Does anyone know if its possible to tag pages and then get a list of website pages based on that tag?\nSimilarly to a blog but not a blog?\n\nOR a solution similar"
  },
  {
    "poster": {
      "poster_name": "Kris Gösser",
      "poster_handle": "kris443"
    },
    "time_stamp": "2020-07-28 12:39:15",
    "text": "Noted, thanks"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-07-28 14:54:50",
    "text": "has anybody ever ran fetch and had an image get replaced with this?\n\n```&lt;html&gt;\n&lt;head&gt;&lt;title&gt;502 Bad Gateway&lt;/title&gt;&lt;/head&gt;\n&lt;body bgcolor=\"white\"&gt;\n&lt;center&gt;&lt;h1&gt;502 Bad Gateway&lt;/h1&gt;&lt;/center&gt;\n&lt;/body&gt;\n&lt;/html&gt;```",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-28 15:22:38"
      },
      {
        "time_stamp": "2020-07-28 15:23:21"
      },
      {
        "time_stamp": "2020-07-28 15:23:34"
      },
      {
        "time_stamp": "2020-07-28 15:23:35"
      },
      {
        "time_stamp": "2020-07-28 15:24:26"
      },
      {
        "time_stamp": "2020-07-28 15:25:04"
      },
      {
        "time_stamp": "2020-07-28 15:27:43"
      },
      {
        "time_stamp": "2020-07-28 15:27:46"
      },
      {
        "time_stamp": "2020-07-28 15:27:53"
      },
      {
        "time_stamp": "2020-07-29 08:32:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-07-28 15:22:38",
    "text": "Do you mean the file type was overwritten to html?"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-07-28 15:23:21",
    "text": "That looks like it might have been a temporary CDN blip"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-07-28 15:23:34",
    "text": "But the fetch should just fail if this happens"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-07-28 15:23:35",
    "text": "yep. it was an svg image. it was overwritten to the html above. it happened on 2 image files during my last fetch. and i've seen it a couple other times in the same portal. its a bit concerning."
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-07-28 15:24:26",
    "text": "saw it here too: <https://HubSpotdev.slack.com/archives/CLJJXGTC0/p1592250962497600>"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-07-28 15:25:04",
    "text": "fetching's got me nervous these days! :cold_sweat:"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-07-28 15:27:43",
    "text": "I will make sure we look into this :thumbsup:"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2020-07-28 15:27:46",
    "text": "Thanks for reporting"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-07-28 15:27:53",
    "text": "thank you!"
  }
]
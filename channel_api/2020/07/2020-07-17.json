[
  {
    "poster": {
      "poster_name": "Rick",
      "poster_handle": "rick546"
    },
    "time_stamp": "2020-07-17 03:14:27",
    "text": "Hey\n\nWhen I get an engagment of type CALL via the API (v1), it contains properties related to the accompanying text, bodyPreview for example.\n\nIs it possible to add this text when logging a call via the API (creating a engagment work type CALL)\n\nSome of the fields seems to be derived fields so not quite sure what the input property would be called as its not documented."
  },
  {
    "poster": {
      "poster_name": "Rohan",
      "poster_handle": "rmaheshwari"
    },
    "time_stamp": "2020-07-17 07:26:42",
    "edited": {
      "time_stamp": "2020-07-17 07:27:10"
    },
    "text": "I have looked at the CMS already. My issue is that it’s not predictable where the html contents for a abstract template is. For different types of templates, the html context is hidden somewhere in the get page api response"
  },
  {
    "poster": {
      "poster_name": "Rohan",
      "poster_handle": "rmaheshwari"
    },
    "time_stamp": "2020-07-17 07:27:45",
    "text": "tldr how can I predictably get all the HTML contents of a page via the get page api?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 07:48:45",
    "text": "Can the HubSpot API be used to customize dashboards?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 07:49:20",
    "text": "Specifically, I want to take an existing “report” and add some fields to it that aren’t currently options"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 07:49:32",
    "text": "with just data from the contact"
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 08:25:24",
    "text": "Please Matthew, just this once shed some light!"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 08:27:06",
    "text": "Hey <@U016VFW8XDJ> :wave:"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 08:27:26",
    "text": "After internal discussion, we concluded that the IN and BETWEEN operators were confusing and stopped supporting them. They have complicated interfaces and the end goal can be accomplished by using the documented AND and OR logic built into filters and filterGroups . They were exposed as part of an experiment that ultimately concluded wasn’t successful. We’re working to remove the operators from the docs to reduce confusion, thanks for raising this!"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 08:27:40",
    "text": "How were you thinking about using these? I want to make sure we didn’t miss anything"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 08:30:44",
    "text": "this is the best: <https://developers.HubSpot.com/en/docs-beta/idea-tracker-tutorial-part-1?_ga=2.255996619.1377299522.1594656030-1457999524.1575275352> !",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-17 08:44:17"
      },
      {
        "time_stamp": "2020-07-17 08:59:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 08:31:01",
    "text": "very excited to try that out"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-07-17 08:44:17",
    "text": "Happy to see you’re excited. I actually wrote the tutorial so if you have any feedback for me, I’d love to hear how to improve it"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-17 08:59:09",
    "text": "I’ll definitely let you know how it goes. I’ll probably give it a try over the weekend."
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 08:59:53",
    "edited": {
      "time_stamp": "2020-07-17 09:00:32"
    },
    "text": "Hi Christopher! Appreciate you reaching out. I'm attempting to fetch all deals related to a list of contacts.\n\nI can utilize the API one at a time (example: associations.contact EQ 1234), in order to get the deals related to a contact, but that's a single case. Why is this an issue? Because the Search API is limited to 4 calls a second, and in some cases I may have to determine what deals are related to 1000 contacts."
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 09:04:11",
    "text": "Maybe I missed something. Could I simply do 'OR' operators for every contact?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-17 09:15:43",
    "text": "<@ULCJTNGFK> you should reconsider this, because of the limits on the size of filter groups and the added complexity of using them on a query"
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 09:18:00",
    "text": "Precisely!"
  },
  {
    "poster": {
      "poster_name": "Bill Huertas",
      "poster_handle": "bhuertas"
    },
    "time_stamp": "2020-07-17 09:24:29",
    "text": "howdy folks! i hope this is an easy question; i’m looking through the API docs in search of an endpoint that would allow me to get ad interactions from a contact (e.g. the ads activity events that appear on that contact’s timeline when they click on a Google search ad). is there a place to access this via an API?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-17 10:27:48"
      },
      {
        "time_stamp": "2020-07-17 10:59:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 09:39:23",
    "text": "Documentation mentions it supports a maximum of 3 filterGroups with 3 filters each. If I'm utilizing a logical OR operator, I denote the filter by filterGroups, correct? This entails that I can grab 3 associated contacts at a time. &gt;300 API calls if I need deals for 1000 contacts, at 4 calls per second"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:05:27",
    "text": "&gt;  I’m attempting to fetch all deals related to a list of contacts."
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:06:41",
    "text": "I think that should be possible in a couple of other ways that don’t involve search."
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:07:40",
    "text": "the get Contact List and get Single Contact endpoints support a query parameter `?associations=deals` that will return the IDs of any associated deals"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:09:07",
    "text": "you could then take that list of associated deal IDs and feed it back into the deals batch read endpoint `POST /crm/v3/objects/deals/batch/read`"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:09:32",
    "text": "<https://developers.HubSpot.com/docs/api/crm/contacts>"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:11:24",
    "text": "Alternatively, the CRM Associations API supports reading associations between two types, you’d still need to send the deals to the batch read endpoint to get the properties (if you wanted more than the IDs)"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:11:26",
    "text": "<https://developers.HubSpot.com/docs/api/crm/associations>"
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-07-17 10:15:43",
    "text": "When creating a `datetime` property via the API - the docs state that you need to specify a `type` (datetime) and also a `fieldType` field in the POST request. I'm confused because there doesn't seem to be a `datetime` option for `fieldType` - and if I use `date` it doesn't seem to store the time when I post a unix timestamp in microseconds to it as the documentation states.\n\nWhat is the proper way to make sure that the property shows the actual Date/Time in the HubSpot contact record?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-17 10:28:57"
      },
      {
        "time_stamp": "2020-07-17 10:40:44"
      },
      {
        "time_stamp": "2020-07-21 09:27:13"
      },
      {
        "time_stamp": "2020-07-21 12:21:47"
      },
      {
        "time_stamp": "2020-07-23 04:00:10"
      },
      {
        "time_stamp": "2020-07-23 15:41:49"
      },
      {
        "time_stamp": "2020-07-24 03:47:51"
      },
      {
        "time_stamp": "2020-07-24 06:42:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-17 10:23:23",
    "text": "I agree! Let's see what we hear."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-17 10:27:48",
    "text": "Best bet: <https://developers.HubSpot.com/docs/api/events/web-analytics> ."
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 10:28:12",
    "edited": {
      "time_stamp": "2020-07-17 10:30:48"
    },
    "text": "Hi Christopher, much appreciate your response. Often times I'll find myself working with easily 100k contacts in total, which would mean 1000 API calls at 100/call, then another sizable fraction to retrieve the deals. It does work, however.\n\nThe reason for my inquiry was to avoid needless data within memory on my end. With a large contact base, this makes the above logic virtually useless unless pre-loading that data prior in some sort of backend job. It simply takes too long, especially considering 10/s rate limiting."
  },
  {
    "text": "This is what I am trying to get the data to look like inside the contact record.. But it always just stores the date... - not the time",
    "time_stamp": "2020-07-17 10:28:57"
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 10:35:09",
    "text": "For this reason, I would urge HubSpot to reconsider the IN operator for the search API's. There are severe limitations otherwise."
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:39:33",
    "text": "Thanks for the context Will, I can empathize with your situation. Let me think a bit about what can be done to help. Transparently, I’m not sure that the `IN` operator (if supported) would have acceptable performance for your use case."
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-07-17 10:40:44",
    "text": "I think I figured it out... you need to set it as\n```\"readOnlyValue\": true,\n  \"readOnlyDefinition\": true,```\nEven though none of those options are listed in the Create a Property endpoint - once they're set it seems to do the trick."
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 10:42:00",
    "text": "Thank you very much sir. By the looks of it, I'm sure others would appreciate some more flexibility in that regard. I look forward to hearing from you! Thanks again"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:44:27",
    "text": "OOC, what programming language are you using?"
  },
  {
    "poster": {
      "poster_name": "Will Craig",
      "poster_handle": "will582"
    },
    "time_stamp": "2020-07-17 10:45:56",
    "text": "JavaScript front-end and back-end; React and Node.js respectively"
  },
  {
    "poster": {
      "poster_name": "Christopher Baldauf",
      "poster_handle": "cbaldauf"
    },
    "time_stamp": "2020-07-17 10:56:03",
    "text": "that’s helpful, thanks."
  },
  {
    "poster": {
      "poster_name": "Bill Huertas",
      "poster_handle": "bhuertas"
    },
    "time_stamp": "2020-07-17 10:59:27",
    "text": "i’ve looked at that one, unfortunately it doesn’t give anything at the contact level"
  },
  {
    "poster": {
      "poster_name": "Tanmay Pal",
      "poster_handle": "tanmay.pal"
    },
    "time_stamp": "2020-07-17 15:38:30",
    "text": "Hi All, I am using double quotes in deal search but it is failing. I am getting error - problem: Filter value 'Optional[Wingless .001\\\" (.025 m]' has mismatched quotation marks\". Could you please suggest how to pass double quotes in search."
  },
  {
    "poster": {
      "poster_name": "Ian Turnbull",
      "poster_handle": "ian_turnbull"
    },
    "time_stamp": "2020-07-17 15:54:15",
    "text": "Hey guys,  I am trying to make api calls so that I can make a report of marketing emails against our contacts to identify trends and do testing.  Does anyone have any experience doing so?"
  }
]
[
  null,
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-05-24 10:25:44",
    "text": "When using a rich text field in a HubDB table is there a way to edit the source code? If not, is there a way to get a wider set of formatting options versus what is shown here?"
  },
  {
    "text": "<@U2LEJ045D> uploaded a file: <https://HubSpotdev.slack.com/files/U2LEJ045D/FAWJKEXNJ/screen_shot_2018-05-24_at_12.24.30_pm.png|Screen Shot 2018-05-24 at 12.24.30 PM.png>",
    "time_stamp": "2018-05-24 10:26:08"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-24 10:28:43",
    "text": "there isn’t, it’s a very highly requested feature.",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-05-24 10:30:38"
      },
      {
        "time_stamp": "2018-05-24 10:40:47"
      },
      {
        "time_stamp": "2018-05-24 10:42:19"
      },
      {
        "time_stamp": "2018-05-24 10:42:31"
      },
      {
        "time_stamp": "2018-05-24 11:08:01"
      },
      {
        "time_stamp": "2018-05-24 11:31:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-05-24 10:30:38",
    "text": "oh bummer - thanks <@U7SL518D6> appreciate the quick response"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-05-24 10:40:47",
    "text": "I’ve been asking for this thing for a while too"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-05-24 10:42:19",
    "text": "Yeah would make my life quite a bit easier"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-05-24 10:42:31",
    "text": "hopefully they add it soon"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-05-24 11:08:01",
    "text": "There _at least_ needs to be the option to add heading tags"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-05-24 11:31:04",
    "text": "right - that is what I was wanting as well"
  },
  null,
  {
    "poster": {
      "poster_name": "Gary Wong",
      "poster_handle": "gary"
    },
    "time_stamp": "2018-05-24 11:52:08",
    "text": "<@U7B0M5QSG> selectattr is great for Hubdb returned data but for things like blog posts where the data is deeper (like in widgets) it’s not as useful.  Unless someone has another trick?"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-05-24 15:03:22",
    "edited": {
      "time_stamp": "2018-05-24 15:14:55"
    },
    "text": "Does anyone know if its possible to have a mix of links to dynamic pages and regular web page links for rows in a hubdb table? I have a resource center that I want to have both in. Thoughts on how to code this in the custom module or am I out of luck? Could this be done with if statements?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-05-24 15:19:14",
    "text": "I would add a column that takes a URL. If that column has a value, use that, otherwise use the dynamic page URL."
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-05-24 15:24:14",
    "text": "<@U3A4KEWK1> so would that involve hard coding the dynamic link in the URL column rather than using hubl to build the link based on the hs_path column?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-05-24 15:24:52",
    "text": "No I mean, in your template, you can check to see if your url column has a value. If it does, print that, if it doesn't print the dynamic URL instead."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-05-24 15:25:54",
    "text": "`{% set row_url = row.url or content.absolute_url ~ row.hs_path %}` should do that"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-05-24 15:26:35",
    "text": "May or may not need to add a slash, I can't remember if those are in there"
  },
  {
    "text": "Anyone else come across the new strange HubDB permissions model?",
    "time_stamp": "2018-05-24 15:44:45"
  },
  {
    "text": "<@U7D5W6EVA> uploaded a file: <https://HubSpotdev.slack.com/files/U7D5W6EVA/FAWR25Z1C/image.png|image.png>",
    "time_stamp": "2018-05-24 15:45:11"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-05-24 15:47:54",
    "text": "Why would I need to specify HubDB edit access in Marketing &amp; Admin. It is feasible that I would be a non-admin and want read or edit access (as in the case I just wasted an hour on troubleshooting). So the situation now allows this person to edit all tables, but NOT publish them. Maybe I missed a documentation article update?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-07-18 09:07:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-05-24 15:49:04",
    "text": "From what I gather, also making my user a super admin just so they can publish, also allows them other privileges...?"
  },
  {
    "poster": {
      "poster_name": "Trish Lessard - Media Junction",
      "poster_handle": "trish"
    },
    "time_stamp": "2018-05-24 20:42:48",
    "text": "I spend hours every day with permissions when adding my team to portals. Also be careful when it comes to what people can see on the contact level to ensure compliance with gdpr. "
  }
]
[
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-05-21 09:00:48",
    "text": "I'm leveraging Browserify with NPM to create a `bundle.js` file from TypeScript. It compiles and uploads to a `build` directory, that is then referenced in my template. All is well, except...\n\nI'm trying to utilize Select2 to style my `&lt;select&gt;` tags to fit the style guide of my client. Here is my TS file's code:\n\n```import * as $ from 'jquery';\nimport 'select2';\n\n$(() =&gt; console.log($.fn.select2));```\nPretty straight-forward. However, the log returns `undefined` as a result. I'm not loading Jquery through HubSpot, so I don't believe Select2 would attach itself to another version of Jquery, though I'm not ruling it out. Any insight on if Jquery is loaded and I'm just not seeing it? Thanks ahead of time."
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-05-21 09:09:05",
    "edited": {
      "time_stamp": "2021-05-21 09:09:12"
    },
    "text": "Going to try with CDN and letting HubSpot provide the Jquery. I'll report back with success or no."
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-05-21 09:13:27",
    "text": "```  &lt;!-- CDNs, JS scripts &amp; stylesheets --&gt;\n  &lt;!-- Jquery --&gt;\n  &lt;script src=\"<https://code.jquery.com/jquery-3.6.0.min.js>\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n  &lt;!-- Select2 --&gt;\n  &lt;link href=\"<https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css>\" rel=\"stylesheet\" /&gt;\n  &lt;script src=\"<https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js>\"&gt;&lt;/script&gt;```"
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-05-21 09:15:19",
    "text": "This worked - `select2` method is now defined. Within my TS file, the types for both libraries are provided, so it'll do what I need it to do. I was hoping to contain all of my libraries and bundle them locally, so I'll keep working on that to see how I can make it work. This is a decent interim solution."
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-05-21 09:22:30",
    "text": "I may try to load all of my dependencies in a separate file, and place that in my `&lt;head&gt;`. Then I can use whatever I like elsewhere throughout the project, similar to CDNs but with full control over versioning via NPM, and all of the benefits therein."
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-05-21 11:10:10",
    "text": "One little gotcha for HS forms - since they're loaded with React, if you wish to do any kind of DOM manipulation to the forms when applying Select2, you have to wait until the form itself loads. The code below will allow you to watch the `[data-hs-cos-type=\"form\"]` for when it will insert the React form (notice `.one` being used, don't need to listen once the form has been applied). Once the form is there, we can apply `.select2()` and update our selectors. Also note the `.on('change')` event listener. Anytime you select a field within the form, it'll show the original select element; hiding the target will fix that.\n```function setupFormSelectElements(): void {\n  $('[data-hs-cos-type=\"form\"]').one('DOMNodeInserted', () =&gt; {\n    $('select')\n      .select2()\n      .on('change', (e) =&gt; $(e.target).hide());\n  });\n}\n\n$(() =&gt; {\n  setupFormSelectElements();\n});```",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-21 11:16:22"
      },
      {
        "time_stamp": "2021-05-21 11:16:46"
      },
      {
        "time_stamp": "2021-05-21 11:17:33"
      },
      {
        "time_stamp": "2021-05-21 11:50:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 11:16:22",
    "text": "Hey - Stuart were you aware the forms actually fire loaded evens"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 11:16:46",
    "text": "Some docs here - <https://legacydocs.HubSpot.com/docs/methods/forms/advanced_form_options>"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 11:17:33",
    "text": "Additionally - a global listener - <https://community.HubSpot.com/t5/Share-Your-Work/Global-Form-Event-Listener-for-HubSpot-Forms-JavaScript/td-p/260900>"
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2021-05-21 11:50:50",
    "text": "Ooo, nice! Good to know, thanks for sharing Kieran."
  }
]
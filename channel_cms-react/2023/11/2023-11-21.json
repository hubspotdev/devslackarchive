[
  {
    "poster": {
      "poster_name": "Tae Kim",
      "poster_handle": "takim"
    },
    "time_stamp": "2023-11-21 10:46:01",
    "edited": {
      "time_stamp": "2023-11-21 11:12:03"
    },
    "text": ":rocket: *[Developer Project Platform Version 2023.2 Release in Public Beta]* :rocket:\n\n:exclamation: _*Disclaimer: this release will only impacts CMS JS rendering by deprecating CMS serverless endpoint functions in favor of app functions*_\n\nHello fellow developers! We are happy to announce the release of <https://developers.HubSpot.com/changelog/developer-projects-platform-version-2023.2|Project Platform Version 2023.2>, the first version for the new <https://developers.HubSpot.com/docs/platform/platform-versioning|versioning mechanism> that we are implementing for <https://developers.HubSpot.com/docs/platform/create-a-project|Developer Projects>. Users can now easily update their software to new platform versions containing the latest changes, rollback to previous versions, and manage any breaking changes in a more coordinated fashion. :developers-developers-developers:\n\nPlatform version 2023.2 includes the following new features:\n\n• *Endpoint function deprecation for CMS Projects* - App Functions will replace Endpoint Functions for Projects\n• *Support for asynchronous functions for App Functions (Async Await support)*\n• *Control Node version for serverless functions (v2023.2 will point to Node 18)* - Simply update your platform version to get the latest Node version! _Note that this Node version only applies to serverless functions, not JS rendering components._\nSimply update your platform version to 2023.2 following the instructions in the <https://developers.HubSpot.com/docs/platform/platform-versioning|Project Platform Versioning> documentation to get access to these features. The previous platform version (2023.1) is on path to deprecation on March 2024.\n\nYou can refer to the <https://developers.HubSpot.com/changelog/developer-projects-platform-version-2023.2|changelog announcement> and <https://developers.HubSpot.com/docs/platform/platform-versioning|Project Platform Versioning> documentation for more details and instructions! :sprocket-dance:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:11:29",
    "text": "^ are these changes backwards compatible? (in other words, do I need to worry about things breaking if I don't have time to do the update?)",
    "reply_count": 21,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-11-21 13:12:19"
      },
      {
        "time_stamp": "2023-11-21 13:13:36"
      },
      {
        "time_stamp": "2023-11-21 13:15:21"
      },
      {
        "time_stamp": "2023-11-21 13:16:44"
      },
      {
        "time_stamp": "2023-11-21 13:18:59"
      },
      {
        "time_stamp": "2023-11-21 13:19:34"
      },
      {
        "time_stamp": "2023-11-21 13:21:56"
      },
      {
        "time_stamp": "2023-11-21 13:22:19"
      },
      {
        "time_stamp": "2023-11-21 13:23:43"
      },
      {
        "time_stamp": "2023-11-21 13:24:28"
      },
      {
        "time_stamp": "2023-11-21 13:25:02"
      },
      {
        "time_stamp": "2023-11-21 13:26:37"
      },
      {
        "time_stamp": "2023-11-21 13:26:57"
      },
      {
        "time_stamp": "2023-11-21 13:27:59"
      },
      {
        "time_stamp": "2023-11-21 13:28:18"
      },
      {
        "time_stamp": "2023-11-21 13:30:18"
      },
      {
        "time_stamp": "2023-11-21 13:30:56"
      },
      {
        "time_stamp": "2023-11-21 13:31:39"
      },
      {
        "time_stamp": "2023-11-21 13:32:00"
      },
      {
        "time_stamp": "2023-11-21 13:32:12"
      },
      {
        "time_stamp": "2023-11-21 13:33:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-21 13:12:19",
    "edited": {
      "time_stamp": "2023-11-21 13:12:26"
    },
    "text": "Yes. Your current builds/deploys will continue to work as expected."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:13:36",
    "text": "awesome, thanks! that's exciting then and looks like a worthwhile update"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:15:21",
    "text": "<@UAYBXDG4U> can you explain like I'm 5 the impact that this update has on cms-js-rendering / my new react world?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:16:44",
    "text": "like, does this mean we are closer to HubSpot serverless function hooks?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-21 13:18:59",
    "text": "There is essentially no impact on cms-js-rendering."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-21 13:19:34",
    "text": "&gt; HubSpot serverless function hooks\nCan you clarify what you mean by this?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:21:56",
    "text": "mostly just a random thought / misunderstanding.\n\nI imagine that when we can interact with HubSpot on the server through a react app it would be handled with hooks. Maybe something like\n```const { newContact } = useCreateNewContact();```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:22:19",
    "text": "mostly just thinking out loud..."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-21 13:23:43",
    "text": "I see what you're saying here. We are working on the ability to at render time make authed API calls to existing HubSpot services."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-21 13:24:28",
    "text": "The update/creation of records will still likely be better orchestrated by a serverless function and not a JSR specific feature."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:25:02",
    "text": "can you think of an example of something that would make more sense as a hook?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-11-21 13:26:37",
    "edited": {
      "time_stamp": "2023-11-21 13:27:41"
    },
    "text": "I don't know if we will ship custom hooks that wrap existing APIs, but I don't see any reason why a developer couldn't create their own hooks to that end."
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-21 13:26:57",
    "text": "i’m not sure a hook adds much value for the server since it’s a single render pass, and would be getting data a single time rather than reacting to state"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-21 13:27:59",
    "text": "instead you could just call `getContact(contactId)` or something directly somewhere"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-21 13:28:18",
    "text": "(extremely vague on the specifics but just directly making some async request)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:30:18",
    "text": "gotcha (more or less)—I don't have a specific use case in mind but I'm thinking about potential \"page builders\" that maybe incorporate AI and use the HubSpot API more heavily from within the app"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:30:56",
    "text": "building more HubSpot pages from inside of HubSpot pages"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:31:39",
    "text": ":exploding_head:"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-21 13:32:00",
    "text": "interesting, what i would say then is the creation side of that probably isn’t blocked by missing server-side data fetching"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-11-21 13:32:12",
    "edited": {
      "time_stamp": "2023-11-21 13:32:31"
    },
    "text": "and you would need to make calls to serverless or whatever from the client in an island anyways, if it’s based on some sort of user input"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-11-21 13:33:23",
    "text": "cool, glad it's at least conceptually possible. I have not dug into the source API or whatever API I might need but I'm pretty sure it exists"
  }
]
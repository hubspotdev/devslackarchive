[
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 09:51:06",
    "text": "gave it some love, yeah, that is definitely restricting!"
  },
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 09:53:17",
    "text": "That'd be a winner <@UQERM7BLY> I guess this is a client that hasn't already proxied their site with a balancer before HS"
  },
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 09:59:40",
    "text": "just riffing:\n\nwould a proxying serverless solution work? I would say with a Go based proxy or a *very very very* lean Node.js serverless function this could work nicely?\n\n(IF you could have dynamic routes instead of this `_hmcs/api/x` business)?"
  },
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 10:02:28",
    "text": "the serverless function I guess would have the contextual information...\n\nthis totally (without say AWS ALB in front) does make it a PITA to upgrade your entire @.<http://yourdomain.com|yourdomain.com> work"
  },
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 10:03:04",
    "text": "also paying for traffic cost for all proxying :moneybag:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-19 10:04:46",
    "text": "yeah, considered serverless - I don’t think the serverless functions would really scale well when it comes moderate traffic"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-19 10:04:51",
    "text": "```60 function executions per minute```"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-19 10:06:52",
    "edited": {
      "time_stamp": "2020-07-19 10:07:01"
    },
    "text": "I remember where I’ve used this before - Shopify"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-19 10:06:54",
    "edited": {
      "time_stamp": "2020-07-19 10:07:34"
    },
    "text": "<https://shopify.dev/tutorials/display-data-on-an-online-store-with-an-application-proxy-app-extension>"
  },
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 10:09:08",
    "text": "yeah and Cloudflare Page Rules are also a good source of reference / implementation too as then you don't need to burn through your credits and/or some really intensive proxying from some stackexchange code that does nothing more than use well, request/fetch..."
  },
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 10:09:52",
    "text": "is nicer to have just in RAM as a 10kb proxy not 10000000 10kb proxies"
  },
  {
    "poster": {
      "poster_name": "Steve Mount (stemount // ste.london)",
      "poster_handle": "sm"
    },
    "time_stamp": "2020-07-19 10:17:25",
    "text": "it really doesn't help when community solutions are \"solved\" with HTTP redirects\n\n1. not everything is going to be set up with follow redirects when fetching JSON\n2. it sort of becomes an invitation to \"silent\" JSON poisoning if a systems architect cannot just proxy this... <https://community.HubSpot.com/t5/HubSpot-Ideas/Support-for-apple-iOS-universal-links-deep-links/idc-p/337771/highlight/true#M56678>"
  }
]
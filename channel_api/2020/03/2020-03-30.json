[
  {
    "poster": {
      "poster_name": "Josh B",
      "poster_handle": "joshb"
    },
    "time_stamp": "2020-03-30 10:37:13",
    "edited": {
      "time_stamp": "2020-03-30 10:44:02"
    },
    "text": "Hi there! I’m trying to create a contact -&gt; company association with the v3 api and the NodeJS client (`@HubSpot/api-client`). I keep getting the error “Invalid input JSON on line 1, column 57: Cannot build PublicAssociation, some of required attributes are not set [type]”\n\n```client.crm.associates.batchApi.createBatch('contact', 'company', {\n  inputs: [\n    {\n      from: {\n        id: ##### // contact id\n      },\n      to: {\n        id: ##### // company id\n      }\n    }\n  ]\n})```\nAm I missing something? The docs say to add the `type` key to the parameters, but I’m assuming the api client does that automatically with the `contact`, and `company` parameters on the `createBatch` method. I should probably add that the request works perfectly in Postman/Paw/Insomnia.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-03-30 11:17:08"
      },
      {
        "time_stamp": "2020-03-30 11:52:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-30 11:17:08",
    "text": "Hey <@UHPKX91E3> This is something we actually _just_ changed <https://developers.HubSpot.com/changelog/new-required-information-for-the-associations-api-v3-in-developer-preview>\n\nThe client libraries haven’t been rebuilt though. If you need to use this immediately you can use the use the generic `client.apiRequest()` function for now until we get the client updated"
  },
  {
    "poster": {
      "poster_name": "Josh B",
      "poster_handle": "joshb"
    },
    "time_stamp": "2020-03-30 11:52:29",
    "text": "<@UFBNA9K9A> Thank you so much! I’ll try out the `client.apiRequest()` until the client is updated."
  },
  {
    "poster": {
      "poster_name": "Diego Chohfi Turini",
      "poster_handle": "dchohfi"
    },
    "time_stamp": "2020-03-30 12:54:23",
    "text": "hey, quick question. does HubSpot support native/real time chat for iOS/Android?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-03-30 14:12:54",
    "text": "They have a HubSpot app that you can use to chat with"
  },
  {
    "poster": {
      "poster_name": "Tanmay Pal",
      "poster_handle": "tanmay.pal"
    },
    "time_stamp": "2020-03-30 16:05:52",
    "text": "Hi... I am using <https://developers.HubSpot.com/docs/methods/products/create-product> to create prodct but getting error like \"message\": \"Must have scope inbounddb-product-library-write\",",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-03-30 16:54:39"
      },
      {
        "time_stamp": "2020-03-30 16:55:29"
      },
      {
        "time_stamp": "2020-04-01 11:17:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dan Taylor",
      "poster_handle": "dantaylor801"
    },
    "time_stamp": "2020-03-30 16:54:39",
    "text": "I would assume you’re missing the right scope request during authentication with the OAuth 2 flow.  Which ones are you using currently?"
  },
  {
    "poster": {
      "poster_name": "Dan Taylor",
      "poster_handle": "dantaylor801"
    },
    "time_stamp": "2020-03-30 16:55:29",
    "text": "The doc page you linked mentions needing `e-commerce` as a required scope"
  },
  {
    "poster": {
      "poster_name": "Dan Taylor",
      "poster_handle": "dantaylor801"
    },
    "time_stamp": "2020-03-30 16:57:58",
    "edited": {
      "time_stamp": "2020-03-30 16:58:05"
    },
    "text": "When using the new crm search endpoints, is it possible to sort on the `updatedAt` field instead of an object property?"
  },
  {
    "poster": {
      "poster_name": "Dan Taylor",
      "poster_handle": "dantaylor801"
    },
    "time_stamp": "2020-03-30 17:01:53",
    "text": "I’d like to use the normal contact object endpoint (*`/crm/v3/objects/contacts`*) to pull all contacts every once in a while.  At a more regular frequency I’d like to fetch any updates by utilizing the `updatedAt` field.  This was possible previously by using the recently updated contacts endpoint (`/contacts/v1/lists/recently_updated/contacts/recent`) but I’m not sure how to recreate that functionality with v3",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-03-31 10:21:09"
      },
      {
        "time_stamp": "2020-04-01 07:54:52"
      },
      {
        "time_stamp": "2020-04-01 10:21:47"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 08:56:58",
    "text": "Currently no HubSpot doesn't allow users to use that for anything they just do everything on the backend"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 08:57:22",
    "text": "BuiltWith is definitely an option for these types of things though"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 08:57:26",
    "text": "(That's what I do)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 08:58:57",
    "edited": {
      "time_stamp": "2023-04-17 08:59:04"
    },
    "text": "Could you request an email or phone or some identifiable information through your message form?"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 08:59:11",
    "text": "<@U04NQ0Z32GK> this worked! But now I'm not able to find the associations to the calls.\nEvery time I do:\n```\"filters\": [\n                {\n                    \"propertyName\": \"associations.company\",\n                    \"operator\": \"NOT_HAS_PROPERTY\"\n                }\n            ]```\nI get:\n```{\n    \"status\": \"error\",\n    \"message\": \"There was a problem with the request.\",\n    \"correlationId\": \"50ad021b-38c5-4545-820d-ab293bd0e2c9\"\n}```\nI want to get all the `hs_object_id` for the calls that don't have a company associated to. I'm using this with a POST request:\n`<https://api.hubapi.com/crm/v3/objects/calls/search>`\nunfortunately, it's not working.\nDo you know how?"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-04-17 08:59:54",
    "text": "I'm getting the exact same issue! I want to find meetings not associated with deals."
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 08:59:57",
    "text": "<@U01QVR44MEY> thank you for the proposal! I've decided to move forward with the HS API and moved a lot forward. But now I'm trying to find all the calls that aren't associated. See this thread. <https://HubSpotdev.slack.com/archives/C2YHAHB6K/p1681743551095199?thread_ts=1681454686.839199&amp;cid=C2YHAHB6K>"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:00:37",
    "text": "I'v googled the whole morning (I'm in Berlin), no luck at all.... maybe <@U01QVR44MEY> might know?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:01:00",
    "text": "Currently the only way to create buttons right there is through a chrome extension that injects a little button there and then you can have that button open up a form which you could then send information from that form back to the api. I've created a couple of those buttons now and it's the best/only way to do it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:02:10",
    "text": "Sure, doing a quick test one moment"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:05:29",
    "text": "cool cool"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:17:57",
    "text": "Yeah that's an interesting problem, never heard of someone wanting to do this before. Currently I don't think you can do this through the search api (after running a lot of tests)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:18:17",
    "text": "You can only do the opposite (get all calls with associations):\n```{\n    \"filterGroups\":[\n      {\n        \"filters\":[\n          {\n            \"propertyName\": \"associations.company\",\n            \"operator\": \"NEQ\",\n            \"value\": \"1\"\n          }\n        ]\n      }\n    ]\n  }```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:19:13",
    "text": "Let me try and set this up using the associations api instead"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:21:44",
    "text": "Just to double check you want all calls that aren't associated to a deal right?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:23:27",
    "text": "CC <@U051F1U6C31>"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:30:22",
    "text": "that is correct"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:30:30",
    "text": "Awesome"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:30:34",
    "text": "all the calls that ARE NOT associated to any company and / or contact"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:30:48",
    "text": "Then I have the solution using the search endpoint :tada:"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:30:53",
    "text": "oh boi"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:31:01",
    "text": "```{\n    \"filterGroups\":[\n      {\n        \"filters\":[\n          {\n            \"propertyName\": \"hs_call_primary_deal\",\n            \"operator\": \"NOT_HAS_PROPERTY\"\n          }\n        ]\n      }\n    ],\n\"properties\":[\"hs_call_primary_deal\"]\n}```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:31:11",
    "text": "This will pull all calls not associated to deals"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:31:45",
    "text": "testing.."
  },
  {
    "text": ":heart:",
    "time_stamp": "2023-04-17 09:32:10"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:32:18",
    "text": "and for companies, owuld itb e the same?"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:33:28",
    "edited": {
      "time_stamp": "2023-04-17 09:33:36"
    },
    "text": "so.. this isn't working:\n\"hs_call_primary_company\",\n        \"hs_call_primary_contact\""
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:33:38",
    "text": "no unfortunately that deal is the only one"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:33:52",
    "text": "But the deal is the top level filter right?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:34:03",
    "text": "so you could just filter down the deals using a zapier filter right?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:34:09",
    "text": "(this is for zapier right?)"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:36:10",
    "text": "no, decided not to go with zapier and create my custom script via python. so I'm running via postman and it looks good.\nBut as you confirmed, then the only association possible is for deals and not for companies and contacts. Then I need to make sure to revert back to my stakeholders and tell them that all their calls must be associated to a deal..."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:37:13",
    "text": "or you could just do this request and then figure out one by one for each call if they have an associated company and/or contact"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:37:18",
    "text": "so it's very possible"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 09:40:58",
    "text": "that was a joke right? sarcasm doesn't travel well in slack :smile:\nbut ok, I can find at least a good number of results that I can delete now. thank you!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 09:41:49",
    "text": "It definitely wasn't a joke just use the api to check if any of the calls have an associated contact or company"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-04-17 10:16:27",
    "text": "I use <http://make.com|make.com> instead of zapier. It has an iterator function that I imagine I can use to do such a lookup. I might run into API query limits, so they'd have to be done in batches."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 10:17:11",
    "text": "Yeah that's definitely an option using make (I also use it over zapier because it's so much better)"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 11:32:01",
    "text": "thank you both!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-17 12:43:50",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Nikolas Artadi",
      "poster_handle": "nikolas.artadi"
    },
    "time_stamp": "2023-04-17 13:18:52",
    "text": "one last question :smile:\nso I have this object type `HubSpot.crm.objects.calls.models.collection_response_with_total_simple_public_object_forward_paging.CollectionResponseWithTotalSimplePublicObjectForwardPaging` but I want to extract the ID to send it to a DELETE request.\nHow can I transfer it to JSON in python?\nI'm using `respones.json()` but no luck. It gives me an error... it seems the result isn't a json? How would you go about? Can you do a SEARCH + DELETE in the same call?\n```---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nCell In[77], line 1\n----&gt; 1 api_response.json()\n\nAttributeError: 'CollectionResponseWithTotalSimplePublicObjectForwa' object has no attribute 'json'```"
  },
  {
    "poster": {
      "poster_name": "Ali Afzal",
      "poster_handle": "ali.afzal"
    },
    "time_stamp": "2023-04-17 23:36:06",
    "text": "Hello! <@U01QVR44MEY>. Sorry I forgot to tell you and I just remembered now. It is working good in the cloud functions."
  }
]
[
  {
    "poster": {
      "poster_name": "Liz Mac",
      "poster_handle": "emacdougall"
    },
    "time_stamp": "2023-09-07 07:23:20",
    "text": "Hi everyone, is there anyways to leverage hubl pagination (with total_page_count and total_count) but under a custom blog_recent_tag_posts query? I have a blog that I want to display, but while excluding one tag from its list of posts. I can't use the standard contents, but total_page_count doesn't seem to work under the blog_recent_tag_posts. Any ideas?"
  },
  {
    "poster": {
      "poster_name": "Tommaso Campani",
      "poster_handle": "tommaso.campani"
    },
    "time_stamp": "2023-09-07 07:26:54",
    "edited": {
      "time_stamp": "2023-09-20 02:25:13"
    },
    "text": "Hello Everyone,\nWe are sperimenting a strange behaviour: we have a custom property on Hubspost (multitext) where a JSON string is saved.\nIn an email template, via Hubl we would like to retrieve that value, make it fromJson and then use the properties of the json in the template.\nBelow you can see an example of code, in the first piece of code we try to read the value of the custom field \"my_property \", but the fromJson filter  returns a NULL.\nIn the second piece of code we statically reported the value of the my_property property and in that case it works correctly.\nWhat are we doing wrong?\n```# Reading json string value from a custom property called my_property\n\n{% set json = contact.my_property %}\n{% set obj = json |fromjson %}\nJson STR: {{ json |pprint }} --&gt; {\"tag\": [\"<http://test123.com|test123.com>\", \"<http://test123.it|test123.it>\"]}  \"OK\"\nJson OBJ: {{ obj | pprint }} --&gt; NULL  (ERROR)\n\n\n# Test with static value\n\n{% set json _2 = '{\"tag\": [\"<http://test123.com|test123.com>\", \"<http://test123.it|test123.it>\"]}' %}  (Static value of contact.my_property)\n{% set obj2 = json_2|fromjson %}\nJson STR2: {{ json_2|pprint }}\nJson OBJ2: {{ obj2['tag'] }} --&gt; WORK```",
    "reply_count": 19,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-09-08 03:00:59"
      },
      {
        "time_stamp": "2023-09-08 03:32:53"
      },
      {
        "time_stamp": "2023-09-08 03:35:16"
      },
      {
        "time_stamp": "2023-09-11 13:44:03"
      },
      {
        "time_stamp": "2023-09-12 01:03:54"
      },
      {
        "time_stamp": "2023-09-12 02:18:08"
      },
      {
        "time_stamp": "2023-09-12 02:18:23"
      },
      {
        "time_stamp": "2023-09-12 02:37:26"
      },
      {
        "time_stamp": "2023-09-12 02:37:36"
      },
      {
        "time_stamp": "2023-09-12 02:38:14"
      },
      {
        "time_stamp": "2023-09-12 02:40:02"
      },
      {
        "time_stamp": "2023-09-12 02:40:10"
      },
      {
        "time_stamp": "2023-09-19 14:16:50"
      },
      {
        "time_stamp": "2023-09-20 01:20:55"
      },
      {
        "time_stamp": "2023-09-20 01:21:42"
      },
      {
        "time_stamp": "2023-09-20 01:55:49"
      },
      {
        "time_stamp": "2023-09-20 01:59:26"
      },
      {
        "time_stamp": "2023-09-20 02:19:08"
      },
      {
        "time_stamp": "2023-09-20 02:24:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-09-07 08:15:13",
    "text": "Has anyone ever ran into an instance of HubL code automatically commenting itself out? To the point where it goes _back in time_ and autocomments out a line?"
  }
]
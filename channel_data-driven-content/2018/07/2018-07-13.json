[
  null,
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-13 10:58:31",
    "text": "Can anoyne give a quick example of doing a search with hubDB on two fields?\n\nFor example, if there is an input that the user can enter product name or upc, would I have to append a param with `__icontains` on both the prod name and upc cols or would it be easier to combine those into one field and have them search on that",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-07-13 11:31:17"
      },
      {
        "time_stamp": "2018-07-13 11:58:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-13 10:59:34",
    "text": "I'm guessing the searching on both cols for the input entered using the `icontains` but wasnt sure if I was looking at it wrong"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-13 11:31:17",
    "text": "Does it work as expected with the 2 __icontains?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-13 11:58:19",
    "text": "I'm thinking it would but also the data returned could be really mismatched. "
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-13 14:45:05",
    "text": "im guessing theres no way to do a filter on a table with an 'OR' statement is there? :disappointed:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-13 14:46:17",
    "text": "for instance:\n```\n {% set queryparam = queryparam ~ \"&amp;product_name__icontains=\"~request.query_dict.q [OR WOULD GO HERE]&amp;item_code__icontains=\"~request.query_dict.code %}\n```"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-07-13 15:09:19",
    "text": "correct. You can do a contains with a multi-select column though"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-13 15:28:21",
    "text": "I think you could do multiple table queries, one with the product name and the other with the item code, combine them, then use the `|unique` filter to remove the duplicate entries"
  }
]
[
  {
    "poster": {
      "poster_name": "Michael Stubbs",
      "poster_handle": "michael.stubbs"
    },
    "time_stamp": "2022-05-17 06:41:07",
    "text": "Thanks so much for the feedback you have saved us alot of research time! Was wandering whether taking the approach of using the react-cms-boilerplate plus the standard modules approach is recommended. I have been trying out this way, basically building the modules per the standard way but because we use sass that means the sass is compiled into main.css and we dont have to worry abut rewriting our sass to css?"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-05-17 07:06:59",
    "text": "If you can just include your compiled sass then, ignoring potential performance concerns, yes the styling should work as intended if the class names are the same. That said, there are some build systems that would allow you to write sass as well, either using Gulp, NPM scripts, or even webpack with a more minimal JS setup"
  },
  {
    "poster": {
      "poster_name": "Noel Williams",
      "poster_handle": "noel.williams"
    },
    "time_stamp": "2022-05-17 10:50:12",
    "text": "I really like <@UQWGKUEN7> approach to <https://devbeej.com/library/advanced-HubSpot-module-building/|building modules using macros> as it does allow better re-use of code and easier long term management. Combine that with <https://github.com/iGoMoon/HubSpot-tools/tree/main/packages/HubSpot-fields-js#advanced-usage|Fields JS> to define module fields as partials, you can abstract components for use in modules."
  }
]
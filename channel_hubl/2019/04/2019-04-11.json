[
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-11 01:54:43",
    "text": "<@U6W3H6YN8> <@UE24LMGSZ> Is there any further documentation on how to filter ‘email_each’ statement.\n\nThe use case here is to limit the amount of items in an abandoned cart email from HubSpot deal.\n\nThis is holding back a project and it’s something that I imagine has a very simple answer"
  },
  {
    "poster": {
      "poster_name": "Mario Girón",
      "poster_handle": "mariogironm"
    },
    "time_stamp": "2019-04-11 04:15:57",
    "text": "Hi, I have a small question that is driving me crazy. Is it possible to define dynamic urls for my pages and retrieve the information of this urls from my template modules?",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-11 05:54:53"
      },
      {
        "time_stamp": "2019-04-11 06:43:06"
      },
      {
        "time_stamp": "2019-04-11 14:09:40"
      },
      {
        "time_stamp": "2019-04-11 14:27:43"
      },
      {
        "time_stamp": "2019-04-11 14:57:21"
      },
      {
        "time_stamp": "2019-04-11 14:58:38"
      },
      {
        "time_stamp": "2019-04-11 15:56:57"
      },
      {
        "time_stamp": "2019-04-11 15:57:08"
      },
      {
        "time_stamp": "2019-04-11 15:57:48"
      },
      {
        "time_stamp": "2019-04-11 15:58:05"
      },
      {
        "time_stamp": "2019-04-11 15:58:45"
      },
      {
        "time_stamp": "2019-04-11 16:03:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-04-11 04:40:37",
    "text": "Sorry Nick, I'm not aware of any further documentation for that tag."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-11 05:54:53",
    "text": "Hi Mario, this can be done with HubDB"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-11 05:56:22",
    "text": "Any ideas on how to get the list to sort/filter? \n\nIf I put a for loop inside it doesn’t work. Adding ‘first’ or index=0 doesn’t work. \n\nI am at a loss :("
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-11 06:43:06",
    "text": "I think actually what you’re wanting are query parameters, you can grab that data using `{{request.query_dict.queryparamname}}`"
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-04-11 06:58:41",
    "text": "Are you able to use {{loop.index}} inside the loop to get the index of the current iteration of the list? "
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2019-04-11 09:33:03",
    "text": "Has anyone created a module to lazy load content within a repeater before, is it even possible in HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-11 09:34:27",
    "text": "it’s definitely possible. I don’t generally do it for things in a repeater, because usually it’s for longer lists of content people manage in a HubDB or a blog listing, but same concept applies"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-11 09:34:51",
    "text": "just find a lazyloading library, do the data attribute src if that’s how that library works, and voila"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2019-04-11 09:47:23",
    "text": "Sound cool do you have an example of a  lazyload/pagination from HubDb by any chance? I was going to do it on repeater because I’m on the fence whether it’ll have enough content for HubDb but would still like the option if possible and doesn’t make sense to have a blog as these are just to be linked to external stuff.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-04-11 09:48:08"
      },
      {
        "time_stamp": "2019-04-11 18:55:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-11 09:48:08",
    "text": "You could use the hubdb client in JS"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-04-11 09:57:19",
    "text": "For blog templates, do I have to have the if/else if it is a single post template vs blog list or can I create two seperate templates, one for individual posts and one for listing blog posts? these are coded templates btw, not drag and drop",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-04-11 09:58:07"
      },
      {
        "time_stamp": "2019-04-11 09:59:57"
      },
      {
        "time_stamp": "2019-04-11 10:01:03"
      },
      {
        "time_stamp": "2019-04-11 10:41:19"
      },
      {
        "time_stamp": "2019-04-11 10:42:56"
      },
      {
        "time_stamp": "2019-04-11 11:05:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-04-11 09:58:07",
    "text": "the reason for this is I want different hero designs for posts, blog home, and blog listings (by author, category, or whatever). Plus it just seems logical to keep them seperate..."
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-04-11 09:59:57",
    "text": "You can definitely keep those separate. In the blog settings under the \"template\" tab you can either choose one template for both or a separate template for the post and listing pages."
  },
  {
    "text": "",
    "time_stamp": "2019-04-11 10:01:03"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-04-11 10:41:19",
    "text": "<@U26AKMZ19> Ah! I didn't even see that..."
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-04-11 10:42:56",
    "text": "can I separate the blog home from listing pages? I assume I would just create  unique page with all the relevant blog tags I wanted to use"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-04-11 11:05:39",
    "text": "The blog home page would need to be the same template as the blog listing pages in settings. Depending on what you're looking to do you could use some conditionals to only show certain things on certain listing pages (e.g. an author conditional if you were looking to have a different layout for the author pages: <https://designers.HubSpot.com/docs/hubl/blog-content-markup#if-blog-author-statement> )"
  },
  {
    "poster": {
      "poster_name": "Mario Girón",
      "poster_handle": "mariogironm"
    },
    "time_stamp": "2019-04-11 14:09:40",
    "text": "the problem is that I think I can´t define a dynamic url for a page, just static."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-11 14:24:07",
    "text": "No, this didn’t work for emaileach.\n\n"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-11 14:27:43",
    "edited": {
      "time_stamp": "2019-04-11 14:28:10"
    },
    "text": "I think you’re going to have to explain your actual meaning, because both what Nick and I described are what we’d refer to as a dynamic URL."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-11 14:57:21",
    "text": "<https://designers.HubSpot.com/docs/tutorials/how-to-build-dynamic-pages-with-hubdb>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-11 14:58:38",
    "text": "I really think he’s meaning URLs with query parameters.\n<https://designers.HubSpot.com/docs/hubl/hubl-supported-variables#http-request-variables>\nrequest.query_dict would be how you get URL params"
  },
  {
    "poster": {
      "poster_name": "Mario Girón",
      "poster_handle": "mariogironm"
    },
    "time_stamp": "2019-04-11 15:56:57",
    "text": "First of all, thank you for your time :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Mario Girón",
      "poster_handle": "mariogironm"
    },
    "time_stamp": "2019-04-11 15:57:08",
    "text": "one example:"
  },
  {
    "poster": {
      "poster_name": "Mario Girón",
      "poster_handle": "mariogironm"
    },
    "time_stamp": "2019-04-11 15:57:48",
    "text": "in many frameworks routers, you can define something like: <http://www.domain.com/:course_id/:city>"
  },
  {
    "poster": {
      "poster_name": "Mario Girón",
      "poster_handle": "mariogironm"
    },
    "time_stamp": "2019-04-11 15:58:05",
    "text": "and then you can retrieve the data of course_id and city spots"
  },
  {
    "poster": {
      "poster_name": "Mario Girón",
      "poster_handle": "mariogironm"
    },
    "time_stamp": "2019-04-11 15:58:45",
    "text": "the only thing that i have found to do something like this is redirecting the urls to a page url and then put the values into the queryparams"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-11 16:03:25",
    "text": "so - yes you can go the query param method,\n\nIf you want to go the way you’re talking though you could build a HubDB set it to dynamic, and then make a page template that’s a dynamic page, and it will let you do basically what you’re wanting to do. the data  for course_id and City would need to be stored in the HubDB"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-11 16:41:09",
    "text": "Is it because it is a list not a loop?"
  },
  {
    "poster": {
      "poster_name": "Damon Brown",
      "poster_handle": "damon"
    },
    "time_stamp": "2019-04-11 18:45:25",
    "text": "Hello, is their Hubl code that updates the date on forms?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-04-11 18:55:34",
    "text": "<https://github.com/shrimpwagon/jquery-lazyloadanything>"
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-04-11 19:19:12",
    "text": "Yeah, could be. Wish I could do more here, but I don't have access to an environment where I'd be able to practice with this."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-11 19:21:51",
    "text": "Is there anyone internally who can help get more documentation for statement ‘email_each’?"
  }
]
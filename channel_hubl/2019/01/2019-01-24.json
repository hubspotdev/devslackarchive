[
  null,
  null,
  null,
  null,
  {
    "text": "Is anyone using HubL with _hsq.push tracking events: <https://developers.HubSpot.com/docs/methods/tracking_code_api/javascript_events_api>, basically I have a Blog template that pulls in multiple blog posts and I would like to track the button I have for each Blog post that is clicked on for a “Read More” button but I would like for it repot the title of the blog post as the ID, I tried someting like this but I get multiple errors in console saying “Unexpected token”",
    "time_stamp": "2019-01-24 07:52:27"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-01-24 13:01:44",
    "text": "with `local-hubl-server`, is there a way to automatically update the `site_settings.json` file with the correct data? I have entered the portal id, but nothing renders locally from that portal’s ID. I guess it is grabbing the original dummy data from `site_settings.json`. IDK, does a gulp function already exist to overwrite the dummy data?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-24 13:21:59"
      },
      {
        "time_stamp": "2019-01-24 13:34:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Brian Krainer",
      "poster_handle": "bkrainer"
    },
    "time_stamp": "2019-01-24 13:21:59",
    "edited": {
      "time_stamp": "2019-01-24 13:26:17"
    },
    "text": "not yet, unfortunately (but it is on our radar!) As a workaround you could download your portal's json yourself via `<http://api.hubapi.com/content-settings/v1/site-settings/by-portal-id/&lt;portalId&gt;?hapikey=12345|api.hubapi.com/content-settings/v1/site-settings/by-portal-id/&lt;portalId&gt;?hapikey=12345>` and replace `site-settings.json` with that"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-01-24 13:34:57",
    "text": "thank you <@UEKMY50SU>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-24 14:56:25",
    "edited": {
      "time_stamp": "2019-01-24 15:09:46"
    },
    "text": "`{{event.start_date|datetimeformat(\"e MMMM y\", 'GMT-6')}}` does this look wrong to anyone?\n\nevent.start_date is a date stored in HubDB\n\nI’m just finding that the dates getting printed don’t match the HubDB.\n\n`event.start_date = 1548633600000`\nprints using that function as\n“1 January 2019”\n\nIn HubDB it’s set to <https://spin.d.pr/FP8AV2>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-01-24 15:16:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-01-24 15:10:20",
    "text": "Can you call HubL from a custom module within a blog post, to a different page? I have a module for a custom event date and time that i need to show on home page"
  },
  {
    "text": "module code",
    "time_stamp": "2019-01-24 15:10:44"
  },
  {
    "text": "need to send that data to replace 08 / NOV",
    "time_stamp": "2019-01-24 15:11:53"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-24 15:16:26",
    "text": "solved, needed to use %e instead"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-01-24 15:47:51",
    "text": "<@U795QFHDE> awkwardly, you can use content.all_widgets I think"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-01-24 15:48:08",
    "text": "do content.all_widgets|pprint and follow the rabbit down the hole"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-24 17:22:41",
    "text": "is there a hubl variable for the baseurl?"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-01-24 17:24:48",
    "text": "{{ request.domain }} ?"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-24 17:25:28",
    "text": "that might work. thanks <@UDARG2NKZ>! just getting started so lotsa learning hapening over here"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-01-24 17:26:32",
    "text": "request variable is amazingly helpful"
  }
]
[
  {
    "text": "Indeed, but there are no ways to describe what X template/module does?\n\nFeel it would be a small job to add a json field that could display the descriptions behind a (?)-mark f.e. :slightly_smiling_face:",
    "time_stamp": "2023-02-20 01:16:08"
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2023-02-20 04:51:31",
    "text": "are you using DnD? if so, you would have to be in the <https://community.HubSpot.com/t5/HubSpot-Ideas/Drag-amp-Drop-functionality-for-Blog-Posts/idi-p/408909|blog post DnD beta>"
  },
  {
    "poster": {
      "poster_name": "Chris Davis",
      "poster_handle": "chris.davis616"
    },
    "time_stamp": "2023-02-20 10:36:24",
    "text": "Awesome, thank you, sir!"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-02-20 10:52:09",
    "edited": {
      "time_stamp": "2023-02-20 10:52:34"
    },
    "text": "I was once told that it has to do with the problem that consistent behavior can´t be guaranteed and if something breaks, that might lead to confusion for the Marketer/ User."
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-02-20 10:53:46",
    "text": "Also, some features are not implemented because the user experience across portals would not be the same, therefore also leading to an inconsistent UI experience"
  },
  {
    "poster": {
      "poster_name": "Kauland Buchanan",
      "poster_handle": "kauland.b"
    },
    "time_stamp": "2023-02-20 13:34:42",
    "text": "I might be missing something obvious, but is there a way to prevent certain modules from being allowed to be placed in columns? For example, say I have a module that is a 3 column grid by default, I don’t want a user to be able to drag that into another column and it now become a 3 column grid inside a 2 column grid.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-02-21 16:11:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Shiv Shukla",
      "poster_handle": "shivshukla095"
    },
    "time_stamp": "2023-02-20 22:08:02",
    "text": "Hey Arvin, You can use this CSS code to disable the AOS on page editor.\n\nbody.HubSpot-disable-focus-styles .aos-init,\nbody.HubSpot-disable-focus-styles .aos--active {\n  visibility: visible!important;\n  opacity: 1 !important;\n  transform: unset !important;\n}"
  },
  {
    "poster": {
      "poster_name": "mathes waran",
      "poster_handle": "matheskrishna"
    },
    "time_stamp": "2023-02-20 22:29:24",
    "text": "Hi ,\nIn HubSpot cms, how long cache was stored.?  any time-period to refresh automatically.?\n\nand also anyone please share how to clear the cache in webpages for this cms.?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-21 07:16:13"
      },
      {
        "time_stamp": "2023-02-21 07:16:22"
      },
      {
        "time_stamp": "2023-02-21 07:17:28"
      },
      {
        "time_stamp": "2023-02-21 07:20:21"
      },
      {
        "time_stamp": "2023-02-22 06:28:01"
      },
      {
        "time_stamp": "2023-02-22 07:09:50"
      }
    ]
  },
  {
    "text": "Hi Guys,\nI have an observation that I don't understand much and I would like to check if anybody experience this before.\n\nSo what happened was , last week, we implemented a button in our module and we published a page with this module and thing are fine.\n\nThen earlier this week, we add a flag to hide/show the button, we implemented it as a `show` field with boolean type in the module and we make the default value as `true`\n(like in the screenshot below)\n\nAnd the observation is the button is hidden instead of show :disappointed:\nHas anybody see this kind of thing before?",
    "time_stamp": "2023-02-21 00:41:09",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-21 13:19:04"
      },
      {
        "time_stamp": "2023-02-22 04:59:47"
      },
      {
        "time_stamp": "2023-02-22 05:35:59"
      },
      {
        "time_stamp": "2023-02-22 05:55:03"
      },
      {
        "time_stamp": "2023-02-22 05:55:22"
      },
      {
        "time_stamp": "2023-02-22 06:07:11"
      },
      {
        "time_stamp": "2023-02-23 00:23:27"
      }
    ]
  }
]
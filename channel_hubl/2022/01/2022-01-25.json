[
  {
    "text": "Is there any way to check the template type of a page in hubl? I am trying to add a class to my body on my base template only if it's used on an error page. (I have a base template which would have the hubl logic and it is getting extended onto the error_page template.)",
    "time_stamp": "2022-01-25 06:06:33",
    "edited": {
      "time_stamp": "2022-01-25 06:07:17"
    },
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-01-25 06:09:01"
      },
      {
        "time_stamp": "2022-01-25 06:09:11"
      },
      {
        "time_stamp": "2022-01-25 06:16:58"
      },
      {
        "time_stamp": "2022-01-25 09:44:11"
      },
      {
        "time_stamp": "2022-01-25 09:46:16"
      },
      {
        "time_stamp": "2022-01-25 10:01:57"
      },
      {
        "time_stamp": "2022-01-25 10:26:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 06:09:01",
    "text": "have you tried:\n\n``` {% set pageType = content.CMSContentType %}  ```\n?"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 06:09:11",
    "text": "found this article: <https://community.HubSpot.com/t5/APIs-Integrations/HubL-variable-to-determine-if-a-page-is-a-website-page-or-a/td-p/353653>"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2022-01-25 06:16:58",
    "text": "That tells me if its a landing page vs. a standard page (which is useful and I'll have to remember that) but I need more specific. I only want this on error_page template types."
  },
  {
    "poster": {
      "poster_name": "Martin Carlin",
      "poster_handle": "martin264"
    },
    "time_stamp": "2022-01-25 07:42:28",
    "text": "Hi, just trying to take my pages from being static to being editable and using multiple `rich_text` modules, but after the first they seem to be clashing with each other. I'm sure they require a unique identifier but can't find what it is, the docs seem to say that the only parameter available is `html`? <https://developers.HubSpot.com/docs/cms/building-blocks/modules/default-modules>\n\n```&lt;div class=\"f-50 text-black poppins-bold mb-3\"&gt;{% module \"rich_text\" path=\"@HubSpot/rich_text\" %}&lt;/div&gt;\n&lt;p class=\"f-22 text-black poppins-semibold mb-4\"&gt;{% module \"rich_text\" path=\"@HubSpot/rich_text\" %}&lt;/p&gt;```\n",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-01-25 07:45:11"
      },
      {
        "time_stamp": "2022-01-25 07:47:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-01-25 07:45:11",
    "text": "inside the hubl tag, the part in quotes is the id. That needs to be unique across all uses of the tag within a page (both for accessibility, as the the HTML generated gets an `id` based on it, and because our system uses that to determine the value to display there)\n\nNot sure the use-case you have but consider using drag and drop areas/custom modules instead of HubL tags."
  },
  {
    "poster": {
      "poster_name": "Martin Carlin",
      "poster_handle": "martin264"
    },
    "time_stamp": "2022-01-25 07:47:06",
    "text": "Thanks, still building out and trying to figure out what's best as I go.\n\nSomeone DM'd this page which is helpful. <https://developers.HubSpot.com/docs/cms/hubl/tags#rich-text>"
  },
  {
    "text": "Sorry, one more - trying to use the `button` module but seem to have the same issue I had originally, the CMS seems to think I only have one instead of two.\n\nHave tried\n\n```{% button \"hero_button1\" label=\"Hero Button 1\", link=\"<https://www.google.com>\", button_text=\"Join us now\", no_wrapper=True %}\n{% button \"hero_button2\" label=\"Hero Button 2\", link=\"<https://www.google.com>\", button_text=\"Log in\", no_wrapper=True %}```\nand\n\n```{% module \"button\" path=\"@HubSpot/button\" \"hero_button1\" label=\"Hero Button 1\", link=\"<https://www.google.com>\", button_text=\"Join us now\", no_wrapper=True %}\n{% module \"button\" path=\"@HubSpot/button\" \"hero_button2\" label=\"Hero Button 2\", link=\"<https://www.google.com>\", button_text=\"Log in\", no_wrapper=True %}```",
    "time_stamp": "2022-01-25 09:07:50",
    "edited": {
      "time_stamp": "2022-01-25 09:08:11"
    },
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-01-25 13:13:25"
      },
      {
        "time_stamp": "2022-01-25 13:16:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:08:54",
    "text": "how do you know that the app thinks it is only one button?"
  },
  {
    "text": "Can only see one in the sidebar and both have the same text when they should be different (one should say `Log in` )",
    "time_stamp": "2022-01-25 09:09:43",
    "edited": {
      "time_stamp": "2022-01-25 09:09:56"
    }
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:10:22",
    "text": "ah, you have two \"button\""
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:10:32",
    "text": "as the name"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:10:35",
    "text": "in the second one"
  },
  {
    "poster": {
      "poster_name": "Martin Carlin",
      "poster_handle": "martin264"
    },
    "time_stamp": "2022-01-25 09:11:04",
    "text": "ah, so the first `button` is the name in that syntax? I thought that was pointing to the module, guessing the module only needs the path?"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:11:13",
    "text": "{% module  path=\"@HubSpot/button\" \"hero_button1"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:11:15",
    "text": "try this"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:11:37",
    "edited": {
      "time_stamp": "2022-01-25 09:11:48"
    },
    "text": "``` {% module  path=\"@HubSpot/button\" \"hero_button1\" label=\"Hero Button 1\", link=\"<https://www.google.com>\", button_text=\"Join us now\", no_wrapper=True %}  ```"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:12:20",
    "text": "see, you are saying \"the name is button\" and then later you are saying the name is \"hero_button1\""
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:12:38",
    "text": "so HubSpot picks up the first name but that is equal in both cases"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:12:44",
    "text": "so you are confusing HS"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-01-25 09:13:03",
    "text": "if you were to get rid of the \"button\"  names, it should work"
  },
  {
    "poster": {
      "poster_name": "Martin Carlin",
      "poster_handle": "martin264"
    },
    "time_stamp": "2022-01-25 09:14:42",
    "text": "Makes a lot more sense now, I thought the first parameter was always the module name and not the identifier. Trying a few different combinations, still not working - yet\n\n```{% module path=\"@HubSpot/button\" label=\"Hero Button 1\", link=\"<https://www.google.com>\", button_text=\"Join us now\", no_wrapper=True %}\n{% module path=\"@HubSpot/button\" label=\"Hero Button 2\", link=\"<https://www.google.com>\", button_text=\"Log in\", no_wrapper=True %}```"
  },
  {
    "poster": {
      "poster_name": "Martin Carlin",
      "poster_handle": "martin264"
    },
    "time_stamp": "2022-01-25 09:14:58",
    "text": "ah, just noticed error in console, no name provided"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-01-25 09:15:43",
    "text": "Can just do “button1” and “button2\""
  },
  {
    "poster": {
      "poster_name": "Martin Carlin",
      "poster_handle": "martin264"
    },
    "time_stamp": "2022-01-25 09:18:12",
    "text": "thank you both, working now, only thing I don't think is working is the `link` default value isn't being populated, will take another look at the docs"
  },
  {
    "poster": {
      "poster_name": "Martin Carlin",
      "poster_handle": "martin264"
    },
    "time_stamp": "2022-01-25 09:21:00",
    "text": "ah yeah, it's an object, not just a string, got it - cheers!"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-01-25 09:44:11",
    "text": "use the developer information in the hubl sprocket, (I recommend an extension like jsonVue to view the information but it will give you lots of data that you can pull out in hubl including templates template directories etc etc"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-01-25 09:46:16",
    "edited": {
      "time_stamp": "2022-01-25 09:47:16"
    },
    "text": "```{% if current_path is string_containing 'template-name.html' %}```\nthis is an example of something i’ve used in the past for a different use"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2022-01-25 10:01:57",
    "edited": {
      "time_stamp": "2022-01-25 10:03:11"
    },
    "text": "I already tried using the dev info and found the  `content.id` but I couldn't get that to work. For some reason the error_pages didn't have an ID I could access (probably doing it wrong). However, all of my error templates are pathed with \"error\" in the file name so I can use the current_path example you used above. Thank for the advice!"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-01-25 10:26:20",
    "text": "No problem, but yeah it’s definitely tricky to find what your looking for in the dev info!"
  },
  {
    "poster": {
      "poster_name": "Sam McKinney",
      "poster_handle": "sam"
    },
    "time_stamp": "2022-01-25 12:18:42",
    "text": "Has anyone ever tried creating a custom RSS feed for the blog? I have a client that is wanting the full post instead of just the summaries listed in the RSS feed. I was curious if this is just something that I could create using a theme and declaring it as xml etc or if its more involved needing the API and so on?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-01-25 13:13:25",
    "edited": {
      "time_stamp": "2022-01-25 13:14:36"
    },
    "text": "```{% module \"button\" path=\"@HubSpot/button\" \"hero_button1\" label=\"Hero Button 1\", link=\"<https://www.google.com>\", button_text=\"Join us now\", no_wrapper=True %}\n{% module \"button\" path=\"@HubSpot/button\" \"hero_button2\" label=\"Hero Button 2\", link=\"<https://www.google.com>\", button_text=\"Log in\", no_wrapper=True %}```\nwould not work, as you are telling it they are the same button module. `\"button\"` is the id for the button.\n\nYour first code sample here should have worked. Just to rule out potential issues though you could change the number to `hero_button_one` and `hero_button_two`.\n\nUltimately though if you’re using these within a hero section I’d suggest considering making a custom module or using dnd areas to make this. With a custom module you can make that whole section movable/reusable across different pages, as well have multiple fields for customizing both the content, the styling etc.\n\nWith dnd_areas, you can still use the default modules but you’ll be empowering content creators to have more control, being able to move and remove the pieces as necessary. They can even create reusable sections."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-01-25 13:16:12",
    "text": "apologize for my way late response lol Scrolled through and saw <@U26BLKGE4> and <@UBT0AHWLD> helped you sort it out. Nice work fellas."
  },
  {
    "poster": {
      "poster_name": "Jonah Gonzalez",
      "poster_handle": "jonah3254"
    },
    "time_stamp": "2022-01-26 00:58:42",
    "text": "I see. Thank you!"
  }
]
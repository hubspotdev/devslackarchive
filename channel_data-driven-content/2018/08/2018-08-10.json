[
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:05:04",
    "text": "Hey guys.. i feel like ive done this before but I cant figure it out for the life of me.. I need the string to only be the name for the titles and default selectors BUT group.grouper.name doesnt work <https://preview.hs-sites.com/_hcms/preview/template/multi?domain=undefined&amp;portalId=2821511&amp;tc_deviceCategory=undefined&amp;template_file_path=/bz_Gun_Builder.html&amp;updated=1533853860612>"
  },
  {
    "text": "it should look like this",
    "time_stamp": "2018-08-10 09:06:00"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 09:09:41",
    "text": "can you post your HubL"
  },
  {
    "text": "",
    "time_stamp": "2018-08-10 09:10:48"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:11:08",
    "edited": {
      "time_stamp": "2018-08-10 09:11:23"
    },
    "text": "`part_type` is a select menu"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:14:30",
    "text": "group.grouper.name should work, are you sure you didn't have a typo in there somewhere?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 09:14:32",
    "text": "just to clarify - `part_type` is a select field column correct? I’m not sure you can use the Group by filter this way because the output of the select field columns is an object"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 09:15:18",
    "text": "so you would be grouping by something like: {id=1,name=‘Lightning Handle’}"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-08-10 09:15:42",
    "text": "i have some NUMBER columns in a hubDB table that I need to output to 2 decimal places, however, trailing 0s are getting stripped out. I thought the `|float` filter would be able to get it but no luck. any advice?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:17:02",
    "text": "nope… it doesnt."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:17:10",
    "text": "<@U3A4KEWK1>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 09:17:55",
    "text": "Try replacing `{{typeName}}` with `{{ typeName|selectattr('name')}}` not at all sure this will work how I’m thinking"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:18:42",
    "text": "`cannot resolve property 'name'`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:19:17",
    "text": "I think group.grouper outputs the object as a string."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:19:32",
    "edited": {
      "time_stamp": "2018-08-10 09:19:36"
    },
    "text": "that is why theme things arent working"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:21:16",
    "text": "Instead of using |groupby, can you just sort in the hubdb_table_rows query?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:21:30",
    "text": "I was right.. if you pprint group.grouper it is a string"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:21:37",
    "text": "Maybe that's a thing"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:22:14",
    "text": "Try pprinting `parts` without the groupby"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:23:39",
    "text": "Oh wait I think I was not understanding what groupby does"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:24:08",
    "text": "Still, seeing about unfiltered parts will help trace where this is happening"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:25:30",
    "text": "I wish there was a `|object` like there is a `|string`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 09:31:05",
    "text": "I mean i can do this in javascript but I dont want to."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 09:53:53",
    "text": "I can add this soon"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 10:12:06",
    "text": "<https://github.com/HubSpot/jinjava/pull/215>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 10:32:50",
    "text": "Should I just refresh for this?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 10:33:24",
    "text": "It will be deployed out soon"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 10:37:33",
    "text": "Ah ok.. cool."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 10:43:12",
    "text": "expecting a blog post from <@U38EZFVFE> “First! Using the new JSON to Map Function”"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 10:43:21",
    "text": "yeah baby"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 10:43:48",
    "text": "im overdue"
  },
  {
    "poster": {
      "poster_name": "Andrew Rogers",
      "poster_handle": "andrewrogers"
    },
    "time_stamp": "2018-08-10 11:34:21",
    "text": "Hello, Developer Megaminds! I'm using the new search module but I've run into an interesting \"bug\". Here is the link to the page - <https://www.feg.com/people>\nThe page renders the content from a database so I would presume HubSpot caches the page which would make it's content searchable. However when I use the search function (located in the header) to search for a given name it won't show in the search results. Has anybody found a solution for this scenario?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 11:35:54",
    "text": "Which name, it seems to work for me fine?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 11:36:08",
    "text": "Oh you mean the top bar"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 11:36:24",
    "text": "Let me check the indexing"
  },
  {
    "text": "I'm talking about when you search using the global search field in the nav header",
    "time_stamp": "2018-08-10 11:37:14"
  },
  {
    "poster": {
      "poster_name": "Andrew Rogers",
      "poster_handle": "andrewrogers"
    },
    "time_stamp": "2018-08-10 11:37:38",
    "text": "The search box on the people page is an isotope filter."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 11:37:41",
    "text": "Yea let me double check what is going on"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 12:04:33",
    "text": "should the `fromJson` filter be working yet?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 12:06:45",
    "text": "Theoretically yes, but trying to figure out why it isn't right now"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 12:06:58",
    "text": ":thumbsup_all:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 12:40:06",
    "text": "Sorry about that <https://github.com/HubSpot/jinjava/pull/216> should be out soon"
  },
  {
    "time_stamp": "2018-08-10 12:44:00",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 12:50:17",
    "text": "like this `group.grouper|fromJson|map('name')` ?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 12:59:47",
    "text": "What is the value of `grouper`?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:00:31",
    "text": "The `fromJson` assumes the string is in JSON format"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:00:52",
    "text": "{ID=1, NAME=‘LIGHTNING HANDLE’}"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:00:58",
    "text": "ah yeah it isnt exactly json"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:01:18",
    "text": "its sorta HUBson"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:11:50",
    "text": "so if I use replace and reformat the HUBson to json in string form should it work <@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:11:52",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:12:20",
    "text": "Wait you need this PR instead one moment"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:15:29",
    "text": "<https://github.com/HubSpot/jinjava/pull/218>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:15:42",
    "text": "Now that I understand your use case"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:16:25",
    "text": "hahah Dude i feel like i have been wasting your time.. BUT this will be a great addition"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:16:39",
    "text": "So you can get the underlying group object `group.grouperObject`"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 13:16:49",
    "text": "Ah-ha so I was right, groupby was the culprit!"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:17:31",
    "text": "yeah.. group.grouper is a string only"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:20:41",
    "text": "i used replace and transformed the string into well formated json but the  fromJson didnt seem to be working. FYI.. if it can even work that way."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:21:21",
    "text": "It won't because it isn't written out as json"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:21:35",
    "text": "But going to deploy that out soon"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:22:01",
    "text": "I converted it to this {“id”:1, “name”:“Lightning Handle”}"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:23:37",
    "text": "Right but I haven't deployed out the `fromJson` code yet"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:23:45",
    "text": "ah gotcha…"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 13:23:52",
    "text": "So both that and `grouperObject` will be deployed out at the same time"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:24:00",
    "text": "sweet,"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 13:24:12",
    "text": "that make sooo much more sense"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 14:02:16",
    "text": "<@U38EZFVFE> should be available to test in previews now"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 14:02:22",
    "text": "Will be out to live content soon"
  }
]
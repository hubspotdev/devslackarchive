[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-25 07:31:47",
    "text": "browsers are blocking font assets because they are served from a `<http://fs1.HubSpotusercontent-na1.net|fs1.HubSpotusercontent-na1.net>` domain. I’m calling the fonts in my theme font folder with `get_asset_url()`. Some are coming from the primary domain, others from the hubspousercontent-na1 domain. How do we resolve this?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-04-25 07:32:19"
      },
      {
        "time_stamp": "2023-04-25 07:32:30"
      },
      {
        "time_stamp": "2023-04-25 07:33:25"
      },
      {
        "time_stamp": "2023-04-25 09:49:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-04-25 07:32:19",
    "text": "do you have them in the file manager?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-25 07:32:30",
    "text": "no in theme fonts folder"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-04-25 07:33:25",
    "text": "ah ok, i think i remember that, at least in the file manager, you can chose from which domain the file is loaded"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-04-25 07:52:50",
    "text": "Has anyone embedded a .json file into a HubL module and used that data? I tried:\n\n```{%  import \"../test.json\" as test %}```\nbut upon {{test}} I get:\n\n```{import_resource_path=hubfs/2/test-json/test.json}```\n",
    "reply_count": 10,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-04-25 07:59:47"
      },
      {
        "time_stamp": "2023-04-25 08:00:35"
      },
      {
        "time_stamp": "2023-04-25 08:00:50"
      },
      {
        "time_stamp": "2023-04-25 08:01:08"
      },
      {
        "time_stamp": "2023-04-25 08:01:37"
      },
      {
        "time_stamp": "2023-04-25 08:02:04"
      },
      {
        "time_stamp": "2023-04-25 08:02:16"
      },
      {
        "time_stamp": "2023-04-25 08:02:34"
      },
      {
        "time_stamp": "2023-04-26 05:44:26"
      },
      {
        "time_stamp": "2023-04-26 05:59:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-25 07:59:47",
    "text": "why not use `get_asset_url('../test.json')`?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-04-25 08:00:35",
    "text": "can you assign it to a variable that way? :open_mouth:"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-25 08:00:50",
    "text": "nah… only used in js"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-04-25 08:01:08",
    "text": "yeah :disappointed:"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-25 08:01:37",
    "edited": {
      "time_stamp": "2023-04-25 08:01:51"
    },
    "text": "if you’re trying to use it _(json)_ as hubl, then theoretically you’d have to convert json -&gt; hubl dictionary with some sort of serverless function and write it to a html file"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-04-25 08:02:04",
    "text": "yeah that's what I was fearing lol"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas689"
    },
    "time_stamp": "2023-04-25 08:02:16",
    "text": "okie dokie thank you"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-25 08:02:34",
    "text": ":saluting_face:"
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2023-04-25 09:49:42",
    "text": "+1 on using the marketing Files tool rather than the Design Tools file directory for font files :slightly_smiling_face:"
  }
]
[
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-07-18 07:59:44",
    "text": "not possible with dynamic pages, but you could do that with the rowid as a query param"
  },
  {
    "poster": {
      "poster_name": "Patrick O'Neal",
      "poster_handle": "poneal"
    },
    "time_stamp": "2017-07-18 08:29:13",
    "text": "Hey <@U22PJPGK0>, do you know if you guys are planning to make it possible to move rows around inside the table?"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2017-07-18 08:29:47",
    "text": "<@U2H3TT8F2> we did this by utilizing the url slug and matching it to a query param. Cleaner urls and allows for 1-off pages to be built (and seo items) but pulls information from the database on the actual page.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2017-07-18 09:57:01"
      },
      {
        "time_stamp": "2017-07-18 10:22:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-07-18 08:35:02",
    "text": "<@U2E6FUEEP> just for display purposes in the editor? You’d still need to sort them by some column for display on a page I think."
  },
  {
    "poster": {
      "poster_name": "Patrick O'Neal",
      "poster_handle": "poneal"
    },
    "time_stamp": "2017-07-18 09:39:06",
    "edited": {
      "time_stamp": "2017-07-18 09:40:57"
    },
    "text": "Gotcha. So it looks like I’ll want to stick with a query parameter of random. Here’s an odd one. Has anyone tried to blend two tables together? For instance, list out an entire table but after every 10th element, put one of the items from the second table into the displayed list.\n\nI’m assuming it will be some sort of embedded for loop, but execution is eluding me."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-07-18 09:55:03",
    "text": "<@U2E6FUEEP>  In your for loop, at the bottom of it put in a check for loop index"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-07-18 09:55:37",
    "text": "{% if loop.index == 10 %}  {# new call here #} {% endif %}"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-07-18 09:57:01",
    "text": "I'm sidetracked on some work right now but I may reach out to later for some examples of this if thats ok"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2017-07-18 10:22:04",
    "text": "sure thing"
  },
  {
    "poster": {
      "poster_name": "Patrick O'Neal",
      "poster_handle": "poneal"
    },
    "time_stamp": "2017-07-18 11:39:17",
    "text": "Is there a way to keep the other for loop active? Or will it keep trying to put the first item of the second table in? I feel this might be a problem if I’m trying to randomize both lists."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-07-18 11:53:54",
    "text": "yeah. I need an hour for my son to take a nap and then i can respond with a code example!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-07-18 12:00:39",
    "text": "<@U2E6FUEEP>  here is a quick idea: <https://gist.github.com/NickDeckerDevs/78dfdcfcc6ed3739c45a3d31e01488bb>"
  },
  {
    "text": "<@U25PYL3Q8|nickdeckerdevs> shared a file: <https://HubSpotdev.slack.com/files/nickdeckerdevs/F6B8YJM70/gistfile1.txt|gistfile1.txt>",
    "time_stamp": "2017-07-18 12:00:40"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2017-07-18 12:32:35",
    "text": "this is a good solution. Avoid making calls to hubdb_table_rows inside a loop that’s iterating over the rows of another hubdb_table_rows call unless you like your pages to be really slow"
  },
  {
    "poster": {
      "poster_name": "Patrick O'Neal",
      "poster_handle": "poneal"
    },
    "time_stamp": "2017-07-18 13:43:26",
    "text": "That looks perfect! Thanks so much!"
  },
  {
    "poster": {
      "poster_name": "Patrick O'Neal",
      "poster_handle": "poneal"
    },
    "time_stamp": "2017-07-18 14:17:12",
    "text": "Wild question. Can we get an RSS feed of HubDB tables or is that not currently doable? A client is wanting to treat it like a blog when they add new resources and notify anyone who cares."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-07-18 14:27:46",
    "text": "I am not sure if this is possible, but you might be able to use dynamic pages and have it form an XML page on the main page..."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-07-18 14:28:04",
    "text": "would have to do it all with coded templates to attempt it. Not sure how much the HubSpot editor is going to like it"
  }
]
[
  {
    "poster": {
      "poster_name": "Erik Rorstrom",
      "poster_handle": "erik.rorstrom"
    },
    "time_stamp": "2020-04-15 02:17:59",
    "text": "You could use the webpackplugin to build 5 different themes from one codebase <@UDEASNWEB>"
  },
  {
    "poster": {
      "poster_name": "Johan Vantomme",
      "poster_handle": "johanvt"
    },
    "time_stamp": "2020-04-15 02:53:22",
    "text": "We noticed that the theme pages &amp; even boilerplate example ( <https://boilerplate.HubSpotcms.com/> ) CSS is not combining\nis this work in progress? ETD on this?"
  },
  {
    "poster": {
      "poster_name": "Katie Tade",
      "poster_handle": "ktade"
    },
    "time_stamp": "2020-04-15 08:30:31",
    "text": "The mobile editing stuff would be related to pages"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 12:05:22",
    "text": "ok"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 12:36:38",
    "text": "when i use theme variables in modules they dont work.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-15 12:38:29"
      },
      {
        "time_stamp": "2020-04-15 12:38:46"
      },
      {
        "time_stamp": "2020-04-15 12:39:09"
      },
      {
        "time_stamp": "2020-04-15 12:39:18"
      },
      {
        "time_stamp": "2020-04-15 12:39:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-04-15 12:38:29",
    "text": "yeah, it’s something they are working on. You could save the theme values to css variables and use it that way `color: var(--primary-color)`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 12:38:46",
    "text": "erf…"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-04-15 12:39:09",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 12:39:18",
    "text": "you can change the color here BUT here you cant…"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 12:39:23",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-04-15 12:45:10",
    "text": "<@UDEASNWEB> maybe look at some processes? I’d setup a build process with a deployment step - for example using bitbucket pipelines"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-04-15 12:46:53",
    "edited": {
      "time_stamp": "2020-04-15 12:47:28"
    },
    "text": "You could use bitbucket pipelines (as an example) to build when a push is made to master. You could then on the deployment step use hscli to push the theme to multiple portals."
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2020-04-15 12:49:23",
    "text": "i like that idea, thanks"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-04-15 12:56:33",
    "edited": {
      "time_stamp": "2020-04-15 13:01:29"
    },
    "text": "It works well, as you can include some steps in the build process which check code standards and if you’ve got some JS - you can run unit tests and potentially selenium tests.\n\nI’m planning on using this for HS (use it on other projects), but i imagine something like this would work (roughly)\n\n1. git repo, master branch = stable, develop=wip, feature/{ticketnumber}-XXX = local dev branch\n2. Develop on feature branch, pull request into develop\n3. Build process runs standard checks, including gulp/webpack build \n4. Any pushes to develop gets auto deployed to a development portal, where you can run selenium tests\n5. Ready for prod - tag and PR to master (maybe no need for a release branch step)\n6. builds and deploys with same tests as the development deploy"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2020-04-15 19:32:29",
    "text": "Hi all, I am new to this Channel, trying to find out more about Themes, currently I have two HTML templates already created and I want to designate only specific modules to those template when an Editor uses those two templates, is Themes something that can help me accomplish that? To help permission what modules belong to specific templates?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 19:45:05",
    "text": "well themes can offer those modules first . But you can still select any module you want."
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2020-04-15 19:46:36",
    "text": "<@U38EZFVFE>, so there is no isolating specific modules for specific templates using a theme structure"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 19:48:25",
    "text": "no. not that im aware of. <https://designers.HubSpot.com/docs/building-blocks/themes#theme-modules>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-15 19:49:13",
    "text": "it suggest them first BUT doenst prevent you from selecting the others"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2020-04-15 20:14:27",
    "text": "<@U38EZFVFE> :+1:, ok listing them at top, I see that now, I missed that, thanks"
  }
]
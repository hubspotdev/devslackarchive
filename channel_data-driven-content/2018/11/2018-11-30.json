[
  null,
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 06:38:03",
    "text": "Hey russ -- generally that stuff gets stored in order of how it was entered. What's the reasoning behind sorting like this? Is this just to see it in HubDB? Or something else on the page?"
  },
  null,
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-30 07:05:49",
    "text": "On page display. The foreign table is being used to show resources based off the looped table row."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:06:07",
    "text": "HMM"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:07:53",
    "text": "are yo doing"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:08:03",
    "text": "somethign like this"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-30 07:08:20",
    "text": "im building dynamic pages to display content based on the multi select options"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-30 07:08:36",
    "text": "either image, video or richtext"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-30 07:08:42",
    "text": "or mix of a couple"
  },
  {
    "text": "",
    "time_stamp": "2018-11-30 07:09:10"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-30 07:09:13",
    "text": "so moving them in the multi select and it reflecting on the front end would make it so the rich text loads before the image"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-30 07:10:28",
    "text": "something similar yes"
  },
  {
    "text": "",
    "time_stamp": "2018-11-30 07:10:56"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:11:09",
    "text": "have you tried using that sort"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:11:24",
    "text": "I'm not sure if that would work, that is what I was thinking, but now that I'm looking at it I'm not sure how it would work"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2018-11-30 07:11:50",
    "text": "it wont sort the multi select values however"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:13:08",
    "text": "Yeah if you want this you will likely have to reverse the way you are setting up the db"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:13:13",
    "text": "I'm not sure how you can do that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-11-30 07:13:26",
    "text": "other than hope they will implement sorting on it"
  },
  null,
  null
]
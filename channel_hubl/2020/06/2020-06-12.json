[
  {
    "poster": {
      "poster_name": "Sylvain Tirreau",
      "poster_handle": "sylvain"
    },
    "time_stamp": "2020-06-12 01:58:21",
    "edited": {
      "time_stamp": "2020-06-12 05:06:15"
    },
    "text": "Maybe this: you create your own Rich Text Module (or/and image module if you want to add some styles on it with classes) with a javascript which detect the parent dnd section, column, or row, and wich add classes you have inserted in your own Rich Text module (you insert your classes in a text field or with a dropdown list). I didn't test it yet, but I have the same need..."
  },
  {
    "poster": {
      "poster_name": "Antoine Ravet",
      "poster_handle": "aravet"
    },
    "time_stamp": "2020-06-12 04:07:25",
    "text": "<@U3T21PDBK>, <@UNWHHSWHJ>, yes indeed. <https://developers.HubSpot.com/docs/faq/do-HubSpot-apis-support-ajax-request>\nAnd HubSpot APIs doesnt support CORS/AJAX requests according to this link.."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-06-12 06:15:23",
    "text": "what’s your use case for showing authors without posts?"
  },
  {
    "poster": {
      "poster_name": "Antoine Ravet",
      "poster_handle": "aravet"
    },
    "time_stamp": "2020-06-12 06:39:39",
    "text": "Hi <@U3T21PDBK>, i want to create a custom module on my blog post to add co-author. It works pretty well for authors with at least one post.."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-06-12 06:45:41",
    "edited": {
      "time_stamp": "2020-06-12 06:48:38"
    },
    "text": "hmmm I could think of ways to get around your problem. Basically create an additional group that allows a custom author. Then in your markup do something like:\n```{% set authors = blog_authors('default', 250) %}\n{% if module.custom_author.author_name is within authors %}\n  [use native hubl author markup]\n{% else %}\n  {{ module.custom_author.author_name }}\n{% endif %}```"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-06-12 06:46:31",
    "text": "For now I think it's best to only use DND sections for flexible content areas that you don't need any control over. It's less error prone to build the sidebar (or whatever other component that you need specific lcasses on or what have you) into your template outside the DND area."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-06-12 06:46:52",
    "text": ":point_up::skin-tone-2: That way if the author creates posts in the future, then the first conditional will scrap the custom author in your module and use the HS author"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-12 07:07:11",
    "text": "You would want to use javascript and CSS for handling different screen sizes. Even if HubL supported changing the rendered content based on screen size it would be less efficient since pages using that couldn’t be cached."
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2020-06-12 07:16:53",
    "text": "I have a design that shows blogs in a dropdown navigation. I’d just like to show 3 blogs when on a larger screen. I’ll try the javascript route. Thanks"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-12 07:20:36",
    "text": "depending on the type of dropdown, as long as you’re not using a select field for your drop-down you should be able to use CSS :nth-child(n+3) to hide items beyond 3"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2020-06-12 07:26:35",
    "text": "Jon!!! Legend. You don’t think about the easiest solution when you’ve been looking at a task for so long! MAGIC!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-12 07:28:18",
    "text": "Indeed. Love the power and simplicity of CSS.\nUsed it in the past to do some cool interactive stuff in HTML emails(which can’t support javascript)."
  },
  {
    "poster": {
      "poster_name": "Antoine Ravet",
      "poster_handle": "aravet"
    },
    "time_stamp": "2020-06-12 07:29:02",
    "text": "Yes i'll do that :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Antoine Ravet",
      "poster_handle": "aravet"
    },
    "time_stamp": "2020-06-12 07:29:10",
    "text": "Thanks for your help John !"
  },
  {
    "text": "Hey Folks, I have a bit of a challenge of having a lot of modules within a HTML email template. The challenge being that there is no order to how they appear in the \"Edit modules\" panel at email builder level. Has anyone managed to get these displaying in a more reasonable way?\n\nScreen shot shows image modules at the very top, choice panels somewhere in the middle and rich-text and cta panels at the bottom (in order)",
    "time_stamp": "2020-06-12 11:07:25",
    "edited": {
      "time_stamp": "2020-06-12 11:08:42"
    }
  },
  {
    "poster": {
      "poster_name": "Tim Ostheimer",
      "poster_handle": "tostheimer"
    },
    "time_stamp": "2020-06-12 11:15:04",
    "text": "I'm having an issue where `{{ request.geoip_country }}` appears to only be working once the GDPR banner is accepted. However, this is only happening in one portal and all other portals I'm testing this in are loading the variable fine prior to clicking the banner. Are any HubSpot people available to help look into this with me?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-06-12 11:28:03"
      },
      {
        "time_stamp": "2020-06-12 11:30:58"
      },
      {
        "time_stamp": "2020-06-15 07:35:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Felix Klauke",
      "poster_handle": "felix957"
    },
    "time_stamp": "2020-06-12 11:28:03",
    "text": "That sounds like intended behaviour. Do you have equal Policies in all portals? You shouldn't be able to process the users data before he accepts that, thats perfectly fine."
  },
  {
    "poster": {
      "poster_name": "Tim Ostheimer",
      "poster_handle": "tostheimer"
    },
    "time_stamp": "2020-06-12 11:30:58",
    "text": "I don't believe that variable is blocked until GDPR consent so there shouldn't be any reason for it to return an empty value. The configuration appears to be the same in each portal I'm testing. Additionally, the variable loads fine if I add any query string to the URL of the page which makes no sense. I'm still trying to determine what's causing this but it might be on HubSpot's end."
  }
]
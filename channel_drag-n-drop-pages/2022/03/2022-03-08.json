[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-03-08 08:40:44",
    "text": "Is there a way to prevent the dnd iframe from reloading on every single applied text change?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-03-08 13:30:58"
      },
      {
        "time_stamp": "2022-03-09 08:36:51"
      },
      {
        "time_stamp": "2022-03-09 08:37:16"
      },
      {
        "time_stamp": "2022-03-09 08:37:30"
      },
      {
        "time_stamp": "2022-03-09 10:51:49"
      },
      {
        "time_stamp": "2022-03-09 12:42:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-03-08 08:41:06",
    "text": "been getting a lot of complaints on this"
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2022-03-08 13:30:58",
    "text": "It took a boat load of work, but years ago any change to any module would cause an iframe reload (aside from inline editing rich text modules or something). Now a days we’ll hot swap the DOM elements in the dnd iframe for any module _so long as it doesn’t have javascript associated with it_. If the editor sees that is JS associated with the module it takes the conservative approach and requires a refresh of the whole iframe. We can’t be sure what the JS is doing (is it generating DOM client side? binding event listeners? something else?), and we also can’t be sure if we can safely re-execute the JS a second or third time without some gnarly side effects on the page. We’ve thought about adding something to the cmv2 spec that would allow a developer to say “JS isn’t really needed for this module in the editor” or something so we can “live update” more often, but never really got around to it."
  }
]
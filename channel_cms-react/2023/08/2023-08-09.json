[
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 15:46:31",
    "text": "Hey folks, simple question:\n\nIs it possible to configure how and what gets indexed in the root of the local dev server (<http://hslocal.net:3000>) from the `/components` folder. According to docs `/partial/&lt;partial filename&gt;` &amp; `/module/&lt;module name&gt;` get indexed, however i'm wondering if it can serve sub directories like `/partial/&lt;partial folder&gt;/&lt;partial filename&gt;`  or even `/elements/&lt;element folder&gt;/&lt;element filename&gt;` ?\n\nAlso, the there's a typo in the <https://github.com/HubSpot/cms-js-building-block-examples/blob/main/hello-world/README.md#4-developing-locally|readme>, should be `/partials/&lt;partial filename&gt;` , plural `partials`",
    "reply_count": 24,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-08-09 16:01:56"
      },
      {
        "time_stamp": "2023-08-09 16:04:29"
      },
      {
        "time_stamp": "2023-08-09 16:05:39"
      },
      {
        "time_stamp": "2023-08-09 16:05:50"
      },
      {
        "time_stamp": "2023-08-09 16:07:15"
      },
      {
        "time_stamp": "2023-08-09 16:09:00"
      },
      {
        "time_stamp": "2023-08-09 16:09:47"
      },
      {
        "time_stamp": "2023-08-09 16:12:31"
      },
      {
        "time_stamp": "2023-08-09 16:13:51"
      },
      {
        "time_stamp": "2023-08-09 16:15:29"
      },
      {
        "time_stamp": "2023-08-09 16:16:59"
      },
      {
        "time_stamp": "2023-08-09 16:17:34"
      },
      {
        "time_stamp": "2023-08-09 16:17:57"
      },
      {
        "time_stamp": "2023-08-09 16:18:05"
      },
      {
        "time_stamp": "2023-08-09 16:19:24"
      },
      {
        "time_stamp": "2023-08-09 16:19:37"
      },
      {
        "time_stamp": "2023-08-09 16:20:44"
      },
      {
        "time_stamp": "2023-08-09 16:22:31"
      },
      {
        "time_stamp": "2023-08-09 16:23:45"
      },
      {
        "time_stamp": "2023-08-09 16:24:17"
      },
      {
        "time_stamp": "2023-08-09 16:25:19"
      },
      {
        "time_stamp": "2023-08-09 16:40:45"
      },
      {
        "time_stamp": "2023-08-09 16:41:49"
      },
      {
        "time_stamp": "2023-08-22 09:14:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:01:56",
    "edited": {
      "time_stamp": "2023-08-09 16:02:53"
    },
    "text": "In addition to “indexing” those subdirectories are you hoping for each individual component/file to be things you can click and see a render preview for?"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:04:29",
    "text": "Yes. Basically I like to structure react components like:\n```components/\n   ComponentX/\n      ComponentX.js\n      ComponentX.module.css\n      ComponentX.whatever```"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:05:39",
    "text": "Ok, and clicking `ComponentX.js` would show the that Component’s rendered HTML? (Or are you only asking to display the file structure?)"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:05:50",
    "text": "potentially w/ parent directories between `/components` &amp; `ComponentX` e.g. `/components/partials/ComponentX`"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:07:15",
    "edited": {
      "time_stamp": "2023-08-09 16:07:30"
    },
    "text": "Either file structure or direct to the child js file. But that's a bit opinionated and open to human error"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:09:00",
    "edited": {
      "time_stamp": "2023-08-09 16:09:10"
    },
    "text": "I see, maybe you are asking more about the folder structure requirements/assumptions we make and how our build system works (opposed to specific local dev server preview behavior).\n\nIn other words, I think you are asking for `…/components/partials/ComponentsX/ComponentsX.jsx` to end up as a JS partial in the output of your project build/deploy. Because right now we require `…/components/partials/ComponentsX.jsx` ? (a sub folder there doesn’t get built)"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:09:47",
    "text": "ahh, correct. The build is a bit of a black box :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:12:31",
    "text": "One more question. We do have prescedence for JS modules that you can do `components/modules/ModuleFolder/index.jsx` or `components/modules/TopLevel.jsx`.\n\nIf you had to do `…/components/partials/ComponentsX/index.jsx` , would that be OK?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:13:51",
    "text": "If you wanted, `index.js` could simply re-export things from `ComponentX.js` `ComponentX.fields.jsx`, etc"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:15:29",
    "text": "I noticed that works for modules, not for partials folder.\n\nTo be honest, I don't love having tons of index.js's... :grimacing: , but I could export from index.js yes"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:16:59",
    "text": "Fair :+1:, so far we’ve been kinda following the node behavior of `folder/index.js` is the same thing has `folder.js` in various places and may want to continue that. :thinking_face: …\n\nThanks for the feedback!"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:17:34",
    "text": "yes, that that works for /modules, not for /partials :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:17:57",
    "edited": {
      "time_stamp": "2023-08-09 16:18:01"
    },
    "text": "Filing the bug report/issue now :wink:"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:18:05",
    "text": "I also noticed that you've got a storybook POC, looks like command line flag - does that have HMR support?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:19:24",
    "text": "I think the storybook HMR support there is there but a little varied. It has been a little while since I checked, but there are subtleties depending on the story you write, if you are changing server-rendered vs client-rendered code, etc."
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-09 16:19:37",
    "text": "(save me Ben)"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-09 16:20:44",
    "text": ":wave:  it does support HMR but like tim said that gets a little wacky when you have hybrid rendering going on, so if you have an island in your component it might render more often than in real usage"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:22:31",
    "text": "Ok. Well i'll play a bit. Really appreciate your time and prompt responses fellas!"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-09 16:23:45",
    "text": "we have a way currently for modules (2/2 now on module-only behavior :sweat_smile: ) to render in storybook as they would in a real site with a server render and then a client hydration via `moduleStoryWithIsland` that `@HubSpot/cms-dev-server` exports, but the tradeoff is it doesn’t do HMR and will full reload. since it’s doing a server render there’s not a great way in my mind around that unfortunately. so we give you the choice for now at least"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-09 16:24:17",
    "text": "let me know if that `moduleStoryWithIsland` behavior would be useful to you for partials and i can add a version that does the same thing for a partial"
  },
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2023-08-09 16:25:19",
    "text": "Will do, might be a bit before I get to it. I'll follow-up"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-09 16:40:45",
    "text": "one last thing i meant to mention - one short-term option would be doing whatever file structure you want outside of the `components/partials` directory and then just having files the files in there just import and export from outside"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2023-08-09 16:41:49",
    "text": "so for example `components/partials/ComponentX.js` could be just\n```export * from '../ComponentX/ComponentX`;```\nor something like that, where you’re pulling from whatever structure suits you"
  }
]
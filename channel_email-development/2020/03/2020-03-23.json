[
  {
    "poster": {
      "poster_name": "Anthony Noel",
      "poster_handle": "mail160"
    },
    "time_stamp": "2020-03-23 02:13:46",
    "edited": {
      "time_stamp": "2020-03-23 02:15:42"
    },
    "text": "Hi all. I’m a HS noob, so apologies if this a basic, well-established question:\n\nHow does HubSpot handle CSS and media queries and so in custom coded templates?\n\nCan we keep our style definitions in a single global file, so that everything not only gets compiled into a single file at run-time, but is also automatically inlined?\n\nAnd when we’re developing new templates, or modifying existing modules, how easy is it to do QA? For example, do we have to create a full test email from the new/edited modules, then send a test out to see the inlined code work properly?\n\nI thought I saw somewhere that Litmus previews are built in. Do these work well – by which I mean as well as they do in Litmus itself? I’ve found the experience of integrated Litmus to be less useful than the full native Litmus; I’m thinking of integrations in Campaign Monitor and Return Path that had fewer features and rendered very slowly compared with Litmus itself.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-03-23 03:18:41"
      },
      {
        "time_stamp": "2020-03-23 03:23:17"
      },
      {
        "time_stamp": "2020-03-23 03:23:47"
      },
      {
        "time_stamp": "2020-03-23 03:26:43"
      },
      {
        "time_stamp": "2020-03-23 03:27:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-03-23 03:18:41",
    "text": "Hey <@U010D3MDKFH> this would be a good intro: <https://designers.HubSpot.com/docs/building-blocks/templates/email-template-markup>"
  },
  {
    "poster": {
      "poster_name": "Anthony Noel",
      "poster_handle": "mail160"
    },
    "time_stamp": "2020-03-23 03:23:17",
    "text": "Thank you <@UQERM7BLY>, I see the paragraph on inlining now – that is useful, thanks"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-03-23 03:23:47",
    "edited": {
      "time_stamp": "2020-03-23 03:24:59"
    },
    "text": "I personally would handle inlining as part of my local development (using gulp), but that’s just my preference as i also like to use sass."
  },
  {
    "poster": {
      "poster_name": "Anthony Noel",
      "poster_handle": "mail160"
    },
    "time_stamp": "2020-03-23 03:26:43",
    "text": "Yeah, I’m trying to decide if this can be a system that once it’s set up, my CRM team can more or less manage by themselves."
  },
  {
    "poster": {
      "poster_name": "Anthony Noel",
      "poster_handle": "mail160"
    },
    "time_stamp": "2020-03-23 03:27:07",
    "text": "So, keeping most of it within the HS ecosystem and not in a LDE"
  },
  {
    "poster": {
      "poster_name": "David",
      "poster_handle": "david419"
    },
    "time_stamp": "2020-03-23 04:50:15",
    "text": "Hi, does anyone know the best way to enable someone to forward a HubSpot marketing email and add a personalised message to it? Thanks for your help!"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-23 14:00:25",
    "text": "Question: how do you refer to a custom module's fields in email html markup?"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-23 14:01:21",
    "text": "I am build a simple rich text module for email and used the {% module.field_name %} but then I get\n```[ERROR] internal error\n[ERROR] line -1: 'module' is disabled in this context```",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-03-23 14:08:54"
      },
      {
        "time_stamp": "2020-03-23 14:09:30"
      },
      {
        "time_stamp": "2020-03-23 14:09:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-23 14:08:54",
    "text": "nvm"
  },
  {
    "time_stamp": "2020-03-23 14:09:30",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-03-23 14:09:47",
    "text": "I used {% instead of {{ ....."
  }
]
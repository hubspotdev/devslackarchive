[
  {
    "poster": {
      "poster_name": "Connor Redmon",
      "poster_handle": "connor854"
    },
    "time_stamp": "2020-09-25 04:55:00",
    "text": "I currently need property history to come back so I am not able to use search at this moment."
  },
  {
    "subtype": "tombstone",
    "text": "This message was deleted.",
    "time_stamp": "2020-09-25 06:04:38",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-09-25 08:48:56"
      },
      {
        "time_stamp": "2020-09-25 08:49:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-09-25 08:48:56",
    "text": "Hey <@UFDUSH7FV> glad you got it figuried out.  Please edit your message to remove the api key. You should also rotate the key to a new to be safe"
  },
  {
    "poster": {
      "poster_name": "Theodor Dumitriu",
      "poster_handle": "theodor.dumitriu"
    },
    "time_stamp": "2020-09-25 08:49:55",
    "edited": {
      "time_stamp": "2020-09-25 08:52:52"
    },
    "text": "yes, thank you, you are right, it’s a development enviroment"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Fernandez Plaza",
      "poster_handle": "gonzalo.fernandez"
    },
    "time_stamp": "2020-09-25 09:09:08",
    "edited": {
      "time_stamp": "2020-09-25 09:09:40"
    },
    "text": "Hello, i guess that this message has been asked a lot of times, so sorry for it, but is there a way to access to Marketing Adds information (clicks, sales, leads...) using the API, integrating it with salesforce... Just a way to do that. If this is not possible, I saw that it is being implementing. Is there a release date? Thanks in advance!"
  },
  {
    "poster": {
      "poster_name": "Michael Bushe",
      "poster_handle": "michael125"
    },
    "time_stamp": "2020-09-25 11:49:36",
    "text": "I think I discovered the pipeline is required so the minimum body is like this:\n```let dealProps = {\n  \"properties\": {\n    \"dealname\": dealName ,\n    \"pipeline\": \"default\"\n  }\n};```\n"
  },
  {
    "poster": {
      "poster_name": "Michael Bushe",
      "poster_handle": "michael125"
    },
    "time_stamp": "2020-09-25 16:53:09",
    "text": "Hello, I’m pretty new to HubSpot (but a 30+ year developer) and I’m finding my integration of application with a Lambda function on AWS is flaky.   I have a button that creates a new Deal.  Most of the time I click on it and I see a log message in AWS.  Sometimes I click on it and there’s no log message in AWS as if it never hit the Lambda function.\n\nA second flakiness is the same exact code will sometimes create a deal and it persists but most times it returns successful but there’s no deal there.  I’ve tried the HS js api and raw REST calls.\n\nSimilarly, my client has a third-party integration that just seems to fail to hook write to HS objects sometimes but gets it most of the time.\n\nDo other folks see such flakiness?\n\nWould it help to use a HS serverless function in an application?\n\nThank you in advance.\n\n```async function createDeal(dealName) {\n  console.debug(\"start createDeal\");\n  try {\n    let dealProps = {\n      \"properties\": {\n        \"dealname\": dealName ,\n        \"pipeline\": \"default\"\n      }\n    };\nPick one....\n    const createDealResult = newDealViaPostmanCode(dealProps)\n    //const createDealResult = await HubSpotClient.crm.deals .basicApi.create(dealProps)\n    //const createDealResult =  await makePostRequest(HS_DEALS_V3_URL, dealProps)\n    //const createDealResult =  await makePostRequest(HS_DEALS_V2_URL, dealProps)\n    console.log(JSON.stringify(\"createDeal post result:\" + JSON.stringify(createDealResult)))\n    return createDealResult;\n  } catch (err) {\n    console.log(\"Error creating deal:\" + err)\n    throw err\n  }\n}```\n",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-05 18:50:27"
      },
      {
        "time_stamp": "2020-10-05 18:52:02"
      },
      {
        "time_stamp": "2020-10-05 18:52:46"
      }
    ]
  }
]
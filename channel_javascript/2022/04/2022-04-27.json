[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-27 04:41:06",
    "text": "Hi everyone I’ve got a hidden field on a form that’s a multi select checkbox property, does anyone know how I can populate it via JS as it’s just an input type text when hidden, i’ve tried comma separated list but that doesn’t work\nAny idea’s appreciated :slightly_smiling_face:",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-04-27 04:49:24"
      },
      {
        "time_stamp": "2022-04-27 12:15:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-27 04:49:24",
    "text": "Never Mind, semi colon separated works\nI used `array.join(';');`"
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2022-04-27 12:15:47",
    "text": "Yeah - that took me a while to figure out too the first time I tried it"
  },
  {
    "poster": {
      "poster_name": "Sandipan Saha",
      "poster_handle": "sandipan.s"
    },
    "time_stamp": "2022-04-28 00:44:19",
    "edited": {
      "time_stamp": "2022-04-28 00:44:35"
    },
    "text": "Hi everyone,\n\nI’m trying to fetch two random rows from a hubdb table using the shuffle function and display their data on a page. The hubdb loop runs each time the page refreshes. But since there are only 6 rows currently, at times the two random rows selected turns out to be the same. Is there any way to ensure that the two random rows that are selected, are always different from each other ?\n\n\nAlso, is there a way to use While loop of Do-While loop within hubl ?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-04-28 09:33:00"
      },
      {
        "time_stamp": "2022-04-28 21:53:42"
      },
      {
        "time_stamp": "2022-04-29 07:44:04"
      },
      {
        "time_stamp": "2022-05-02 00:38:26"
      },
      {
        "time_stamp": "2022-05-02 07:09:01"
      },
      {
        "time_stamp": "2022-05-04 06:36:07"
      }
    ]
  }
]
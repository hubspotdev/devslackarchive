[
  {
    "poster": {
      "poster_name": "Guillaume Parent",
      "poster_handle": "guillaume.parent"
    },
    "time_stamp": "2023-04-07 01:41:10",
    "text": "hey Guys,\nDo you know if it is possible in any way to push specific cookie category consent from the Cookie Consent Banner API? Nothing seems to be show there : <https://developers.HubSpot.com/docs/api/events/cookie-banner>\nThanks!",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-04-11 01:38:26"
      },
      {
        "time_stamp": "2023-04-11 06:56:29"
      },
      {
        "time_stamp": "2023-04-11 08:59:15"
      },
      {
        "time_stamp": "2023-04-11 09:04:39"
      },
      {
        "time_stamp": "2023-04-11 09:04:49"
      },
      {
        "time_stamp": "2023-04-11 09:10:27"
      },
      {
        "time_stamp": "2023-04-13 02:57:07"
      },
      {
        "time_stamp": "2023-04-14 11:25:40"
      },
      {
        "time_stamp": "2023-04-18 00:33:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Utkarsh Gupta",
      "poster_handle": "techadmin"
    },
    "time_stamp": "2023-04-07 01:46:51",
    "text": "Hi, I am new to HubSpot, I had a question, I have a react web application and wanted to track visitors on it, will dropping the tracking code in my head tag work? as in it will track page views, form events, video events ... all of them without doing anything additional?"
  },
  {
    "poster": {
      "poster_name": "Logan Armstrong",
      "poster_handle": "logan565"
    },
    "time_stamp": "2023-04-07 07:53:09",
    "text": "hey all, i'm trying to populate a hidden form field based on the data provided in a visible field upon form submit â€“ anyone know if this is possible?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-04-07 08:12:44"
      },
      {
        "time_stamp": "2023-04-07 09:48:41"
      },
      {
        "time_stamp": "2023-04-07 11:48:22"
      },
      {
        "time_stamp": "2023-04-07 11:54:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-07 08:12:44",
    "text": "<@U0429V78FDK> This is similar to your question right? <https://HubSpotdev.slack.com/archives/CBA9UA4EN/p1678999269823669>"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin.perolio"
    },
    "time_stamp": "2023-04-07 09:48:41",
    "edited": {
      "time_stamp": "2023-04-07 09:54:17"
    },
    "text": "Yeah. What I would do is attach a `change` listener to the visible input or `click` listener to the submit button and then set the value of the hidden input.\n\n```const visibleInput = document.querySelector('[visible-input-selector]');\nconst hiddenInput = document.querySelector('[hidden-input-selector]');\n\nvisibleInput.addEventListener('change', evt =&gt; {\n  if (hiddenInput) {\n    hiddenInput.value = evt.target.value;\n    hiddenInput.dispatchEvent(new Event('change', { bubbles: true }));\n  }\n});```\nAnd that should be all you need. You would need to modify the `[visible-input-selector]` and `[hidden-input-selector]` above to be valid CSS selectors for your particular case. If you need help with that, let me know."
  },
  {
    "poster": {
      "poster_name": "Logan Armstrong",
      "poster_handle": "logan565"
    },
    "time_stamp": "2023-04-07 11:48:22",
    "text": "awesome, thanks both of you!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-07 11:54:00",
    "text": "All the credit goes to <@U0429V78FDK>"
  },
  {
    "poster": {
      "poster_name": "erin wiggers",
      "poster_handle": "erin245"
    },
    "time_stamp": "2023-04-07 15:37:22",
    "text": "<@U03SZJTN39S> It sounds like it's doing what you want the first time and then defaulting to the usual form action of creating a URL param. Maybe check for a conditional statement around the code that fires the preventDefault() that would be true after submission it not before"
  },
  {
    "poster": {
      "poster_name": "erin wiggers",
      "poster_handle": "erin245"
    },
    "time_stamp": "2023-04-07 15:39:46",
    "text": "You could also do this with a HubDB that uses a location column and then use the latitude and longitude coordinates returned from that field to compare against the user's lat/long using the Google or Mapbox API"
  },
  {
    "poster": {
      "poster_name": "erin wiggers",
      "poster_handle": "erin245"
    },
    "time_stamp": "2023-04-07 15:41:50",
    "text": "Could be a timing issue. Try making the require wrapper for helper look like this:\n```{% require_js position=\"header\" %}```"
  },
  {
    "poster": {
      "poster_name": "erin wiggers",
      "poster_handle": "erin245"
    },
    "time_stamp": "2023-04-07 15:53:23",
    "edited": {
      "time_stamp": "2023-04-07 17:07:39"
    },
    "text": "The HubSpot forms take a while to load so make sure it's there before you fire your code by wrapping it in an event listener that waits for the form with onFormReady"
  }
]
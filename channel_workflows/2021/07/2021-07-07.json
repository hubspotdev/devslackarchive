[
  {
    "poster": {
      "poster_name": "Noel Williams",
      "poster_handle": "noel.williams"
    },
    "time_stamp": "2021-07-07 21:37:29",
    "text": "we had a similar issue with leads form our call center. We used the phone and our company domain to generate a faux email as a placeholder and used a list to exclude from email sends based on the email domain. Our call center was connect via formsAPI. This way any lead with the same phone number was de-duped automatically by the phone number and there was less manual merging.\nformat: <mailto:0000000000@noemail.yourcompany.com|0000000000@noemail.yourcompany.com>"
  },
  {
    "poster": {
      "poster_name": "Noel Williams",
      "poster_handle": "noel.williams"
    },
    "time_stamp": "2021-07-07 21:48:17",
    "edited": {
      "time_stamp": "2021-07-07 21:51:25"
    },
    "text": "yeah, this is a real challenge. I started to do the follow...\n1. use static lists for enrolling in other workflows vs directly enrolling. By using lists, you can stack your processes so workflows follow an enrollment order. workflow 1 adds to list A and list A is trigger criteria for Workflow 2\n2. You can easily see the workflow dependencies in the lists. I have my workflows grouped as follows \n    a. Pre-process: anything that needs to update properties after a new lead is created.\n    b. Post-Process: evaluating data for scoring and campaigns. \n    c. Campaigns: campaign enrollment based on list from post-process.\n    d. Lifecycle and Routing"
  }
]
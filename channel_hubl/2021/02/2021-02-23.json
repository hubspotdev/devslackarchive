[
  {
    "poster": {
      "poster_name": "Albert Soriano",
      "poster_handle": "soriano"
    },
    "time_stamp": "2021-02-23 02:33:54",
    "text": "Hello community! Does anyone has any idea why the variable {{contents}} would be empty in some listing pages?\nI’m using partial templates and in some templates {{contents}} is full with all the articles and in others it’s just empty, so I’m wondering if I’m missing some configuration or something :thinking_face:\nAny idea?\nThank you!"
  },
  {
    "subtype": "tombstone",
    "text": "This message was deleted.",
    "time_stamp": "2021-02-23 08:20:39",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-02-23 09:27:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-02-23 09:27:28",
    "edited": {
      "time_stamp": "2021-02-23 09:27:34"
    },
    "text": "Lets say you have an array of objects:\n\n```{% set users = [\n  {\"name\": \"username1\", \"country\": \"France, \"age\": 30},\n  {\"name\": \"username2\", \"country\": \"Italy\", \"age\": 18},\n  {\"name\": \"username3\", \"country\": \"Italy\", \"age\": 50},\n] %}```\nAnd you want to get all users in france:\n\n```{{ users | selectattr(\"country\", \"eq\", \"France\" }}```\nusers in this scenario will output:\n```[\n  {\"name\": \"username1\", \"country\": \"France\"}\n]```\nYou can use any of the operators here: <https://developers.HubSpot.com/docs/cms/hubl/operators-and-expression-tests#other-hubl-operators> so, if you want to select everyone whos 30 and older:\n```{{ users | selectattr(\"age\", \"gte\", \"30\" }}```\n"
  },
  {
    "poster": {
      "poster_name": "Matt Atlas",
      "poster_handle": "matt616"
    },
    "time_stamp": "2021-02-23 19:25:07",
    "text": "Hello, i am looking for a way to loop the \"Query\" object, or an idea on how to go and produce the query string for the HUBDB table I have on the page. Thanks"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-02-23 19:27:29",
    "text": "How are you accessing the table?"
  },
  {
    "poster": {
      "poster_name": "Matt Atlas",
      "poster_handle": "matt616"
    },
    "time_stamp": "2021-02-23 19:30:50",
    "edited": {
      "time_stamp": "2021-02-23 19:31:16"
    },
    "text": "Accessing via template hubl: \"dynamic_page_hubdb_table_id\", passing the query in hubdb_table_rows()"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-02-23 19:31:30",
    "text": "Did you select the table in the page settings?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-02-23 19:31:50",
    "text": "If your using dynamic pages"
  },
  {
    "poster": {
      "poster_name": "Matt Atlas",
      "poster_handle": "matt616"
    },
    "time_stamp": "2021-02-23 19:32:15",
    "text": "Yes it is all showing correctly, however I have up to 6 parameters to set, the string composition is not great"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-02-23 19:32:42",
    "text": "It works like a url query"
  },
  {
    "poster": {
      "poster_name": "Matt Atlas",
      "poster_handle": "matt616"
    },
    "time_stamp": "2021-02-23 19:32:52",
    "text": "Or maybe I will just make a dictionary to overwrtie"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-02-23 19:32:55",
    "text": "Just leave off the first ?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-02-23 19:33:44",
    "text": "request.query_dict|pprint"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-02-23 19:34:06",
    "text": "That will pull in the query from the url"
  },
  {
    "poster": {
      "poster_name": "Matt Atlas",
      "poster_handle": "matt616"
    },
    "time_stamp": "2021-02-23 19:39:04",
    "text": "got \"tojson\" to transform into object, which should be good enough for a loop"
  },
  {
    "poster": {
      "poster_name": "Matt Atlas",
      "poster_handle": "matt616"
    },
    "time_stamp": "2021-02-23 19:41:35",
    "edited": {
      "time_stamp": "2021-02-23 19:41:51"
    },
    "text": "```{% for (k,q) in request.query_dict|tojson %}\n    {{k}} - {{q}}\n{% endfor %}\n- that's my goal, however it doesn't seem to be working, with or without brackets```"
  }
]
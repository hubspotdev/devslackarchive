[
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 02:58:37",
    "text": "Hi Everyone\nIs there a way to have recent blog coded and results that come up are related to the user's search keywords?",
    "reply_count": 36,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-22 05:22:11"
      },
      {
        "time_stamp": "2024-02-22 06:43:07"
      },
      {
        "time_stamp": "2024-02-22 06:52:11"
      },
      {
        "time_stamp": "2024-02-22 07:16:44"
      },
      {
        "time_stamp": "2024-02-22 07:18:51"
      },
      {
        "time_stamp": "2024-02-22 07:21:21"
      },
      {
        "time_stamp": "2024-02-22 07:27:20"
      },
      {
        "time_stamp": "2024-02-22 07:28:02"
      },
      {
        "time_stamp": "2024-02-22 07:28:49"
      },
      {
        "time_stamp": "2024-02-22 07:45:58"
      },
      {
        "time_stamp": "2024-02-22 07:47:49"
      },
      {
        "time_stamp": "2024-02-22 07:48:07"
      },
      {
        "time_stamp": "2024-02-22 07:48:55"
      },
      {
        "time_stamp": "2024-02-22 07:50:42"
      },
      {
        "time_stamp": "2024-02-22 07:51:01"
      },
      {
        "time_stamp": "2024-02-22 07:51:26"
      },
      {
        "time_stamp": "2024-02-22 07:52:00"
      },
      {
        "time_stamp": "2024-02-22 07:52:49"
      },
      {
        "time_stamp": "2024-02-22 07:53:07"
      },
      {
        "time_stamp": "2024-02-22 07:53:38"
      },
      {
        "time_stamp": "2024-02-22 07:53:55"
      },
      {
        "time_stamp": "2024-02-22 07:53:59"
      },
      {
        "time_stamp": "2024-02-22 07:54:53"
      },
      {
        "time_stamp": "2024-02-22 07:55:09"
      },
      {
        "time_stamp": "2024-02-22 07:55:44"
      },
      {
        "time_stamp": "2024-02-22 07:55:55"
      },
      {
        "time_stamp": "2024-02-22 07:56:10"
      },
      {
        "time_stamp": "2024-02-22 07:56:24"
      },
      {
        "time_stamp": "2024-02-22 07:56:49"
      },
      {
        "time_stamp": "2024-02-22 08:06:45"
      },
      {
        "time_stamp": "2024-02-22 08:08:16"
      },
      {
        "time_stamp": "2024-02-22 08:08:56"
      },
      {
        "time_stamp": "2024-02-22 08:09:57"
      },
      {
        "time_stamp": "2024-02-22 08:10:44"
      },
      {
        "time_stamp": "2024-02-22 08:11:11"
      },
      {
        "time_stamp": "2024-02-22 08:11:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 05:22:11",
    "text": "the search results page can be used to pull in blog posts and this could be styled to look like your blog\n<http://example.com/hs-search-results?term=test&amp;type=BLOG_POST|example.com/hs-search-results?term=test&amp;type=BLOG_POST>"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 06:43:07",
    "text": "Thanks for the reply <@U02K6V72MR8> but what I need is when I search for any keyword, it should give all the results but it should give separate results for blog. Left in left column it should be entire website reuslt and in right column it should be only blog keyword results."
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 06:52:11",
    "edited": {
      "time_stamp": "2024-02-22 06:52:34"
    },
    "text": "If you use the default search_results.module as a starting point you could split the results in the javascript and output them in different divs in the html.\n\nSo in the html you would have 2 separate containers, eg <div id=“page_results”></div><div id=“blog_results”></div>\n\nand in the javascript you would say:\nif type == SITE_PAGE put the result in the #page_results\nif type == BLOG_POST put in the #blog_results\n\nIf that doesn’t make sense then you will need a developer to help you do this. Let me know if I can be of any further help"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:16:44",
    "text": "okay but then we have the url like this - term=blog&amp;type=SITE_PAGE&amp;type=LANDING_PAGE&amp;type=BLOG_POST&amp;type=LISTING_PAGE&amp;type=KNOWLEDGE_ARTICLE\n\nHow will my code know what type is that ?"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:18:51",
    "text": "and in the search result code as well there is no way to differentiate them."
  },
  {
    "text": "Also can we have this href url visible like this in p tag. I tried printing it but dont know why it is giving this kind of conversion url which gets redirected to actual page when clicked. How can I get the redirect url direclty in the p tag?",
    "time_stamp": "2024-02-22 07:21:21"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:27:20",
    "text": "in the default search_results.module change:\n\n```function fillResults(results) {\n      results.results.forEach(function(result, i) {\n        addResult(\n          result.title,\n          result.url,\n          result.description,\n          result.featuredImageUrl\n        );\n      });\n    }```\nto\n\n```function fillResults(results) {\n      results.results.forEach(function (result, i) {\n        addResult(\n          result.title,\n          result.url,\n          result.description,\n          result.featuredImageUrl,\n          result.type,\n          result.tags,\n          result.publishedDate\n        );\n      });```"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:28:02",
    "text": "line 34 change\n\n```function addResult(title, url, description, featuredImage) {```\nto\n\n```function addResult(title, url, description, featuredImage, type, tags, publishedDate) {```"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:28:49",
    "text": "then within the addResult function you can say if (type == “SITE_PAGE”) or if (type == “BLOG_POST”)"
  },
  {
    "text": "Makes sense. I did this and now its not printing anything on my page",
    "time_stamp": "2024-02-22 07:45:58"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:47:49",
    "text": "are you getting the correct console logs?"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:48:07",
    "text": "nope nothing there as well"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:48:55",
    "text": "try console.log(title + ” : ” + type);"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:50:42",
    "text": "nope all blank."
  },
  {
    "text": "it says this",
    "time_stamp": "2024-02-22 07:51:01"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:51:26",
    "text": "maybe change the quotes"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:52:00",
    "text": "from ” to '"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:52:49",
    "text": "nope not working"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:53:07",
    "text": "any errors? It’s hard without seeing the whole code"
  },
  {
    "text": "",
    "time_stamp": "2024-02-22 07:53:38"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:53:55",
    "text": "i think again \"\" to '"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:53:59",
    "text": "change all the double quotes"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:54:53",
    "text": "yay workinggg"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:55:09",
    "text": "thank you, your are awesome"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:55:44",
    "text": "no problem, let me know who to send the invoice to"
  },
  {
    "text": "it would be great if you can help me with this too please",
    "time_stamp": "2024-02-22 07:55:55"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:56:10",
    "text": "haha u kidding ?"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 07:56:24",
    "text": "worth a try :joy:"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 07:56:49",
    "text": "i am just new to HubSpot. wiill hire you once i get expert haha"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 08:06:45",
    "text": "Regarding the URL, if you change\n\n```var requestUrl = SEARCH_URL + searchParams + \"&amp;analytics=true\";```\nto\n\n```var requestUrl = SEARCH_URL + searchParams + \"&amp;analytics=false\";```\nthat should do the trick"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 08:08:16",
    "text": "oh man you are so great. thank you so much"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 08:08:56",
    "text": "you’re welcome :right-facing_fist:"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 08:09:57",
    "text": "Not sure if I can be your helping hand in anything on HubSpot. But please do let me know, i will try my best"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 08:10:44",
    "text": "and would love to connect with you personally for an problems I face in future if you are ok with it haha"
  },
  {
    "poster": {
      "poster_name": "Sam Sharples",
      "poster_handle": "sam.sharples"
    },
    "time_stamp": "2024-02-22 08:11:11",
    "text": "feel free to message me whenever. I will always try and help"
  },
  {
    "poster": {
      "poster_name": "Sakshi Bansal",
      "poster_handle": "sakshib103"
    },
    "time_stamp": "2024-02-22 08:11:27",
    "text": "Thank you so much :heart:"
  },
  {
    "poster": {
      "poster_name": "John Kelleher",
      "poster_handle": "john785"
    },
    "time_stamp": "2024-02-22 12:04:48",
    "text": "Anyone else have a headache because `==` was changed alongside `__eq=` in this change today: <https://developers.HubSpot.com/changelog/filter-improvements-for-hubl-crm-functions>\n\nI feel I should have seen it coming but the difference in syntax had me thinking otherwise.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-23 07:45:24"
      },
      {
        "time_stamp": "2024-02-23 07:54:06"
      },
      {
        "time_stamp": "2024-02-23 08:47:26"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "JuanPablo Sánchez",
      "poster_handle": "juanpablo.sanchez"
    },
    "time_stamp": "2020-10-13 04:45:07",
    "text": "Great! thanks! Taras!"
  },
  {
    "poster": {
      "poster_name": "JuanPablo Sánchez",
      "poster_handle": "juanpablo.sanchez"
    },
    "time_stamp": "2020-10-13 04:48:30",
    "text": "<@U01BSNHRCQJ> it´s this one HubSpot Use in order to update products?.. thanks"
  },
  {
    "poster": {
      "poster_name": "Egoi Cantero",
      "poster_handle": "egoi"
    },
    "time_stamp": "2020-10-13 08:13:34",
    "text": "Hi everyone!\n\nIs there any way to use the API to access the attribute onFormSubmit without using:\n\n```hbspt.forms.create({ … })```\nI just want to know if the HubSpot form has been successfully submitted to create an action, but don’t want to create a new one."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-13 08:14:54",
    "text": "There is an event for after the for I'm ready.. is that what your looking for?"
  },
  {
    "poster": {
      "poster_name": "Egoi Cantero",
      "poster_handle": "egoi"
    },
    "time_stamp": "2020-10-13 08:18:18",
    "text": "How could I use it? Could work but I´m not sure"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-13 08:19:31",
    "text": "<@UQYHX7CTD> I don't know about this. But I know that You can't create 2 products with the same `hs_sku`  field. It's like product's identificator - <https://en.wikipedia.org/wiki/Stock_keeping_unit>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-13 08:21:11",
    "edited": {
      "time_stamp": "2020-10-13 08:22:30"
    },
    "text": "window.addEventListener(\"message\", function(event) {\n  if (event.data.type === 'hsFormCallback' &amp;&amp; event.data.eventName === 'onFormReady') {\n\n    // Code here\n\n  })}"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-13 08:21:56",
    "text": "I'm missing a couple clsong brackets there"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-13 08:22:00",
    "text": "Closing"
  },
  {
    "poster": {
      "poster_name": "Egoi Cantero",
      "poster_handle": "egoi"
    },
    "time_stamp": "2020-10-13 08:25:22",
    "text": "It does not seem to work, the code is running even the form has not been submitted"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-13 08:25:54",
    "text": "Ah you want it on submit"
  },
  {
    "poster": {
      "poster_name": "James Mullen",
      "poster_handle": "james063"
    },
    "time_stamp": "2020-10-13 08:26:01",
    "edited": {
      "time_stamp": "2020-10-13 08:26:55"
    },
    "text": "I'm accessing HubSpot API via their PHP package HubSpot/HubSpot ver. 1.2.9. That code calls the /v1 of the API . So calls to \"updateByEmail()\" are making a call to\n```<https://api.hubapi.com/contacts/v1/contact/email/{$email}/profile>```\nwhich is responding with a 400 Bad Request response . I'm providing an email address for a valid contact and tried providing the property array in both\n```{\n    'property': '&lt;property name&gt;',\n    'value': '&lt;value&gt;\n}```\nand\n```{\n    '&lt;property name&gt;': '&lt;value&gt;'\n}```\nformat but both result in the same 400 response. Any ideas? (or links to the v1 documentation)",
    "reply_count": 11,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-13 08:30:04"
      },
      {
        "time_stamp": "2020-10-13 08:36:00"
      },
      {
        "time_stamp": "2020-10-13 08:38:38"
      },
      {
        "time_stamp": "2020-10-13 08:38:51"
      },
      {
        "time_stamp": "2020-10-13 08:47:15"
      },
      {
        "time_stamp": "2020-10-13 08:48:35"
      },
      {
        "time_stamp": "2020-10-13 08:49:00"
      },
      {
        "time_stamp": "2020-10-13 08:50:44"
      },
      {
        "time_stamp": "2020-10-13 10:35:15"
      },
      {
        "time_stamp": "2020-10-13 10:39:38"
      },
      {
        "time_stamp": "2020-10-13 12:47:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-13 08:26:05",
    "text": "Yeah that has to use form create"
  },
  {
    "poster": {
      "poster_name": "Egoi Cantero",
      "poster_handle": "egoi"
    },
    "time_stamp": "2020-10-13 08:27:12",
    "text": "Might try to find another way, thanks anyway! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-13 08:30:04",
    "text": "<@U01CP6RQUQL> Hi! Can you provide a full response from HubSpot?"
  },
  {
    "poster": {
      "poster_name": "James Mullen",
      "poster_handle": "james063"
    },
    "time_stamp": "2020-10-13 08:36:00",
    "text": "<@U01BSNHRCQJ> Here's the json from the 400 Bad Request response\n```{\n  \"status\":\"error\",\n  \"message\":\"property cannot be missing or null\",\n  \"correlationId\":\"&lt;removed&gt;\"\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-13 08:38:38",
    "text": "Did you send all properties in\n```properties```\narray?"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-13 08:38:51",
    "text": "like here - <https://legacydocs.HubSpot.com/docs/methods/contacts/update_contact-by-email>"
  },
  {
    "poster": {
      "poster_name": "James Mullen",
      "poster_handle": "james063"
    },
    "time_stamp": "2020-10-13 08:47:15",
    "text": "I'm using their API client code library for PHP. I checked and, yes, it is sending the values through in a 'properties' array"
  },
  {
    "poster": {
      "poster_name": "James Mullen",
      "poster_handle": "james063"
    },
    "time_stamp": "2020-10-13 08:48:35",
    "text": "Thanks for the link to the legacy docs. That verifies that the 'property' and 'value' keys are the correct method for sending the array values"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-13 08:49:00",
    "text": "```{\n  \"status\":\"error\",\n  \"message\":\"property cannot be missing or null\",\n  \"correlationId\":\"&lt;removed&gt;\"\n}```\nthis is a response for your second request. Can you provide a response for the first one?"
  },
  {
    "poster": {
      "poster_name": "James Mullen",
      "poster_handle": "james063"
    },
    "time_stamp": "2020-10-13 08:50:44",
    "text": "The response to both requests were exactly the same (except for the correlationId)"
  },
  {
    "poster": {
      "poster_name": "James Mullen",
      "poster_handle": "james063"
    },
    "time_stamp": "2020-10-13 10:35:15",
    "edited": {
      "time_stamp": "2020-10-13 10:36:38"
    },
    "text": "I found the issue...I needed to wrap the single property/value array in another array. So instead of this\n```{\n  \"properties\": \n    {\n       \"property\": \"&lt;property name&gt;\",\n       \"value\": \"&lt;value&gt;\"\n    }\n}```\nI needed this\n```{\n  \"properties\": [\n    {\n      \"property\": \"&lt;property name\"&gt;,\n      \"value\": \"&lt;value&gt;\"\n    }\n  ]\n}```"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-13 10:39:38",
    "text": "Yes, like in the docs)"
  },
  {
    "poster": {
      "poster_name": "Richard Walsh",
      "poster_handle": "richard226"
    },
    "time_stamp": "2020-10-13 12:37:27",
    "text": "I don’t see an endpoint for updating menus (we use for breadcrumbs) has anyone done this in the past for dynamic pages from HubDB?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:39:29",
    "text": "Hmm, I will be curious to see the answer on this, as I have things depending on similar properties and this could be a bad time for me too."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:41:37",
    "text": "2: Contacts, by default, don't have children, you'd need to make new Contacts and log a contact-to-contact relationship with a relationship API.\n\n3: If you get the associations created right you will probably get it for free with no work... I have a B2B2B strategy with similar associations and I got it to work mostly OK with a bit of custom API configuring the objects right at the outset when they are created. Note that some of the features for handling sophisticated associations are Beta, so you might have to get a HubSpotter to help sign you up for the right beta."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:41:44",
    "text": "<@UD53A9UUR>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:43:09",
    "text": "I would imagine you could hit some odd behavior in such a case, have you gotten a developer account?\n\n<https://developers.HubSpot.com/get-started>\n\nI use this to build all of my stuff and I have a totally separate staging copy so my team can be outage-free"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:44:46",
    "text": "This is hairy enough, given the Cookie involvement, that you might have to make a Support ticket. Most of us here are people custom-making things in the API to get it to do exactly what we need to have it do, and overriding or bypassing much of the standard front-end infra"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:45:14",
    "text": "Maybe there is another channel in the ocean of channels for people that are doing ad / media targeting and re targeting who could help more"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:47:53",
    "text": "Yeah... the `properties` array is very picky in the Old APIs and the messages when you get it wrong are really weird, and on some of the APIs it is not even called `properties` or the names of the key and value inside of each entry are inconsistent. Needless to say you have to really carefully check calls on non-V3 APIs. I got bitten on the butt by this when I started making HS integrations for my company early this year."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 12:49:45",
    "text": "<@UD53A9UUR> I spotted a bug in the documentation for Files V3 when addressing one of HS's emails telling me to migrate my use of Files V2 by 01/2021: \"duplicateValidationStartegy\" on one copy of that field's name instead of \"duplicateValidationStrategy\". It's one thing if the docs is typo'ed but if that's typo'ed in the implementation code too, it could be a rough time for the next user.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-13 12:50:27"
      },
      {
        "time_stamp": "2020-10-16 17:35:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-13 12:50:27",
    "text": "<@U7SL518D6> :point_up_2:"
  },
  {
    "poster": {
      "poster_name": "Nathan Stewart",
      "poster_handle": "nstewart"
    },
    "time_stamp": "2020-10-13 13:50:13",
    "text": "anyone have experience with the Azure Data Factory HubSpot connector?  No issues with the client id and secret, but it also requires entering the access and refresh token in the linked service, which you wouldn't have until after making the first call in OAuth.",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-13 16:16:37"
      },
      {
        "time_stamp": "2020-10-13 16:17:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "karna",
      "poster_handle": "karunakaran7415"
    },
    "time_stamp": "2020-10-13 14:48:37",
    "text": ":raising_hand: Roll call! Who else is here?"
  },
  {
    "poster": {
      "poster_name": "TaRan Wilson",
      "poster_handle": "taran.wilson"
    },
    "time_stamp": "2020-10-13 14:54:32",
    "text": "I am trying to get the Associated Contacts, Associated Companies and Associated Deals. If I look at the internal name for Associated Contacts, it is _num_associated_contacts_, but if I add that to my URL as a property, the JSON returns nothing.\n\nE.g. <https://api.hubapi.com/deals/v1/deal/paged?&amp;properties=num_associated_deals&amp;>\n\nI have many Associated Contacts/Companies/Deals, but I always get null results. How can I pull this information?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-13 16:18:06"
      },
      {
        "time_stamp": "2020-10-13 17:43:30"
      },
      {
        "time_stamp": "2020-10-13 17:45:03"
      },
      {
        "time_stamp": "2020-10-13 17:45:17"
      },
      {
        "time_stamp": "2020-10-13 17:47:25"
      },
      {
        "time_stamp": "2020-10-13 18:55:41"
      },
      {
        "time_stamp": "2020-10-16 17:30:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "karna",
      "poster_handle": "karunakaran7415"
    },
    "time_stamp": "2020-10-13 14:57:00",
    "edited": {
      "time_stamp": "2020-10-13 15:20:57"
    },
    "text": "If anyone can help me what I am missing to show CRM Extension cards on my HubSpot developer account.\n\n1. I am using a pure PHP script. \n2. I can send an OAuth request to get access_token and contacts at <https://ngrokxxxx/home>.\n3. I have created the CRM Extension card with a few custom properties. Set up <https://ngrokxxxx/crm_fetch_api> . This API will return data based on request.\nI think I am missing a few things to make it works. Thanks."
  },
  {
    "poster": {
      "poster_name": "Alex Kutalo",
      "poster_handle": "dalexey025"
    },
    "time_stamp": "2020-10-13 16:07:07",
    "text": "Hi\n```<https://api.hubapi.com/contacts/v1/lists/226468/contacts/all?hapikey=demo&amp;count=300>```\nThis list containing over 300 contacts , and HubSpot API said 100 is limited number of api call,\nI want to run api call in PHP for those 300 contacts, but it seems, not working properly.\nMy plan is: get two date property values from 300 contacts and update one property value with difference between two dates for all contacts in the list.\nIt looks pretty simple. But API call is limited to 100\nAny solution for this ?\nThanks",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-13 16:16:50"
      },
      {
        "time_stamp": "2020-10-13 16:19:15"
      },
      {
        "time_stamp": "2020-10-14 08:44:58"
      },
      {
        "time_stamp": "2020-10-16 17:33:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dan Green",
      "poster_handle": "dan436"
    },
    "time_stamp": "2020-10-13 16:12:01",
    "text": "HubSpot provides 1 API key per account. How might I create a temporary API key for use with contractors?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-13 16:20:27"
      },
      {
        "time_stamp": "2020-10-13 17:08:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 16:16:37",
    "text": "I have seen stuff like this on hard-core backend OAuth applications, generally when there is an architectural limitation, which prevents the backend app from being able to do open-Internet handshakes with callback URLs to OAuth to capture said creds itself. It's one of a long list of reasons I am really not a fan of OAuth for the most part..."
  },
  {
    "poster": {
      "poster_name": "TaRan Wilson",
      "poster_handle": "taran.wilson"
    },
    "time_stamp": "2020-10-13 16:16:50",
    "edited": {
      "time_stamp": "2020-10-13 16:18:24"
    },
    "text": "Use _all_ in place of the number (226468) you have. So it would look like: <https://api.hubapi.com/contacts/v1/lists/all/contacts/all?hapikey=demo&amp;count=300>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 16:17:02",
    "text": "I don't like the auth system being dependent on pretty wide open Internet access and hand clicking screens in graphical non headless browsers"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 16:18:06",
    "text": "Somebody else complained about a `num_X` property earlier in the week, I have not got proof of it but I think these are calculated props which get generated outbound during the serialization or pre-serialization of the API reply and are not actually stored to be queryable in the underlying DB"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 16:19:15",
    "text": "Pagination... and yeah that URL is not right..."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 16:20:27",
    "text": "Might have to hand hack your way through the OAuth provisioning to get a refresh token from a stub OAuth app added to your HS instance, I don't think there is another option. Really, the API keys should be per-user, or multi-tenant, and they aren't, and it's suboptimal but cannot really be engineered around from the outside"
  },
  {
    "poster": {
      "poster_name": "Dan Green",
      "poster_handle": "dan436"
    },
    "time_stamp": "2020-10-13 17:08:31",
    "text": "#handhack it is! Thanks for the reply <@U012W4YEUTX>."
  },
  {
    "text": "<@U012W4YEUTX> Thanks for the reply. Perhaps `num_associated_contacts` is not the correct internal name then. I am needing the Associated Contacts/Companies/Deals properties. They are listed under All Properties when I go into Settings, but I did notice they show as being used in 0 properties (see the screenshot).\n\nThis is not accurate. I know those properties are listed in almost every contact I have. If I export my contacts as a CSV, I can see the Associated Companies and Deals listed.",
    "time_stamp": "2020-10-13 17:43:30",
    "edited": {
      "time_stamp": "2020-10-13 17:45:14"
    }
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 17:45:03",
    "text": "I never saw one where its true internal name was anything different than what the HubSpot UI said it was"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-13 17:45:17",
    "text": "I have definitely seen people report crazy behavior with `num_X` props though"
  },
  {
    "poster": {
      "poster_name": "TaRan Wilson",
      "poster_handle": "taran.wilson"
    },
    "time_stamp": "2020-10-13 17:47:25",
    "text": "I saw someone use `associatedcompanyid` as a property, but I haven't tried that yet. Could it be something like that? Surely there is a way to get this information through the API."
  },
  {
    "poster": {
      "poster_name": "TaRan Wilson",
      "poster_handle": "taran.wilson"
    },
    "time_stamp": "2020-10-13 18:55:41",
    "text": "So using `associatedCompanyId` will give me the Associated Company ID value, but unfortunately `associatedCompany` will not return just the Associated Company. It is critical to my project that I am able to get the Associated Company/Contact/Deal via a `get` call or something similar (I'm using Python for my coding). Is there any way to get this information?"
  },
  {
    "poster": {
      "poster_name": "Egoi Cantero",
      "poster_handle": "egoi"
    },
    "time_stamp": "2020-10-14 00:38:21",
    "text": "Hi everyone!\n\nI am trying to use `hbspt.forms.create` to create a form inside a component, so that I can use onFormSubmit function and send a dataLayer after submit. The problem is that I get `Uncaught ReferenceError: hbspt is not defined` error. Any advice? Here is the script code:\n\n```&lt;script&gt;\n      hbspt.forms.create({\n          portalId: 'portalID',\n          formId: '{{ module.formulario.form_field.form_id }}',\n          onFormSubmit: function($form) {\n            window.dataLayer = window.dataLayer || [];\n            dataLayer.push({\n              'event': 'eventName',\n              'fn': $form[0][0].defaultValue,              \n              'ln': $form[0][1].defaultValue,               \n              'em': 'email', \n              'ph': 'phone_number',  \n              'co': 'company'  \n            });\n          } \n      });  \n    &lt;/script&gt;```\n",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-14 08:26:36"
      },
      {
        "time_stamp": "2020-10-14 23:41:45"
      },
      {
        "time_stamp": "2021-10-26 08:27:12"
      }
    ]
  }
]
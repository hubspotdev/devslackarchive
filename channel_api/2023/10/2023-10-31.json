[
  {
    "poster": {
      "poster_name": "Nidhi Bhanushali",
      "poster_handle": "nidhi.bhanushali"
    },
    "time_stamp": "2023-10-31 03:40:05",
    "text": "Hi everyone, while integrating with HubSpot, we have a webhook which we get every time a deal is associated with a company, the deal data that this webhook gives is correct but while processing this data, when we fetch company properties, we get stale data for `total_deal_value` .\n\nWe assumed that there's a delay from HubSpot's end in updating the associated information but is there a full proof way we can get correct data? Any help on this would be appreciated, thanks!"
  },
  {
    "text": "Hello.\nI am inquiring because the result value is different while using <https://api.hubapi.com/content/api/v2/blog-posts>\n\nIf I adjust the limit value of params, the number of api data comes out differently, but I don't know what I did wrong.\n\nLook at the reference picture below and let me know the solution!",
    "time_stamp": "2023-10-31 04:09:38"
  },
  {
    "poster": {
      "poster_name": "Luc Benayoun",
      "poster_handle": "luc"
    },
    "time_stamp": "2023-10-31 07:57:09",
    "text": "Hi guys :slightly_smiling_face: I needed this for a migration project, I thought maybe it could help you if you need an object containing associations:\n```const associations = { \n    types : [\n        { name: \"contact_to_company_unlabeled\", id: 1, \"from\": \"contacts\", \"to\": \"companies\" }, \n        { name: \"company_to_contact_unlabeled\", id: 2, \"from\": \"companies\", \"to\": \"contacts\" }, \n        { name: \"deal_to_contact\", id: 3, \"from\": \"deals\", \"to\": \"contacts\" }, \n        { name: \"contact_to_deal\", id: 4, \"from\": \"contacts\", \"to\": \"deals\" }, \n        { name: \"deal_to_company_unlabeled\", id: 5, \"from\": \"deals\", \"to\": \"companies\" }, \n        { name: \"company_to_deal_unlabeled\", id: 6, \"from\": \"companies\", \"to\": \"deals\" }, \n        { name: \"parent_to_child_company\", id: 13, \"from\": \"companies\", \"to\": \"companies\" },\n        { name: \"child_to_parent_company\", id: 14, \"from\": \"companies\", \"to\": \"companies\" }, \n        { name: \"contact_to_ticket\", id: 15, \"from\": \"contacts\", \"to\": \"tickets\" }, \n        { name: \"ticket_to_contact\", id: 16, \"from\": \"tickets\", \"to\": \"contacts\" }, \n        { name: \"company_to_ticket_unlabeled\", id: 25, \"from\": \"companies\", \"to\": \"tickets\" }, \n        { name: \"ticket_to_company_unlabeled\", id: 26, \"from\": \"tickets\", \"to\": \"companies\" }, \n        { name: \"deal_to_ticket\", id: 27, \"from\": \"deals\", \"to\": \"tickets\" }, \n        { name: \"ticket_to_deal\", id: 28, \"from\": \"tickets\", \"to\": \"deals\" }, \n        { name: \"contact_to_communication\", id: 82, \"from\": \"contacts\", \"to\": \"communications\" },  \n        { name: \"communication_to_contact\", id: 83, \"from\": \"communications\", \"to\": \"contacts\" },  \n        { name: \"ticket_to_communication\", id: 84, \"from\": \"tickets\", \"to\": \"communications\" }, \n        { name: \"communication_to_ticket\", id: 85, \"from\": \"communications\", \"to\": \"tickets\" }, \n        { name: \"deal_to_communication\", id: 86, \"from\": \"deals\", \"to\": \"communications\" }, \n        { name: \"communication_to_deal\", id: 87, \"from\": \"communications\", \"to\": \"deals\" }, \n        { name: \"company_to_communication\", id: 88, \"from\": \"companies\", \"to\": \"communications\" }, \n        { name: \"communication_to_company\", id: 89, \"from\": \"communications\", \"to\": \"companies\" }, \n        { name: \"company_to_call\", id: 181, \"from\": \"companies\", \"to\": \"calls\" }, \n        { name: \"call_to_company\", id: 182, \"from\": \"calls\", \"to\": \"companies\" }, \n        { name: \"company_to_email\", id: 185, \"from\": \"companies\", \"to\": \"emails\" }, \n        { name: \"email_to_company\", id: 186, \"from\": \"emails\", \"to\": \"companies\" }, \n        { name: \"company_to_meeting\", id: 187, \"from\": \"companies\", \"to\": \"meetings\" }, \n        { name: \"meeting_to_company\", id: 188, \"from\": \"meetings\", \"to\": \"companies\" }, \n        { name: \"company_to_note\", id: 189, \"from\": \"companies\", \"to\": \"notes\" }, \n        { name: \"note_to_company\", id: 190, \"from\": \"notes\", \"to\": \"companies\" }, \n        { name: \"company_to_task\", id: 191, \"from\": \"companies\", \"to\": \"tasks\" }, \n        { name: \"task_to_company\", id: 192, \"from\": \"tasks\", \"to\": \"companies\" }, \n        { name: \"contact_to_email\", id: 197, \"from\": \"contacts\", \"to\": \"emails\" },\n        { name: \"email_to_contact\", id: 198, \"from\": \"emails\", \"to\": \"contacts\" }, \n        { name: \"contact_to_meeting\", id: 199, \"from\": \"contacts\", \"to\": \"meetings\" },\n        { name: \"meeting_to_contact\", id: 200, \"from\": \"meetings\", \"to\": \"contacts\" }, \n        { name: \"contact_to_note\", id: 201, \"from\": \"contacts\", \"to\": \"notes\" },\n        { name: \"note_to_contact\", id: 202, \"from\": \"notes\", \"to\": \"contacts\" }, \n        { name: \"contact_to_task\", id: 203, \"from\": \"contacts\", \"to\": \"tasks\" },\n        { name: \"task_to_contact\", id: 204, \"from\": \"tasks\", \"to\": \"contacts\" }, \n        { name: \"deal_to_call\", id: 205, \"from\": \"deals\", \"to\": \"calls\" }, \n        { name: \"call_to_deal\", id: 206, \"from\": \"calls\", \"to\": \"deals\" }, \n        { name: \"deal_to_email\", id: 209, \"from\": \"deals\", \"to\": \"emails\" }, \n        { name: \"email_to_deal\", id: 210, \"from\": \"emails\", \"to\": \"deals\" }, \n        { name: \"deal_to_meeting\", id: 211, \"from\": \"deals\", \"to\": \"meetings\" },\n        { name: \"meeting_to_deal\", id: 212, \"from\": \"meetings\", \"to\": \"deals\" }, \n        { name: \"deal_to_note\", id: 213, \"from\": \"deals\", \"to\": \"notes\" },\n        { name: \"note_to_deal\", id: 214, \"from\": \"notes\", \"to\": \"deals\" }, \n        { name: \"deal_to_task\", id: 215, \"from\": \"deals\", \"to\": \"tasks\" },\n        { name: \"task_to_deal\", id: 216, \"from\": \"tasks\", \"to\": \"deals\" }, \n        { name: \"ticket_to_call\", id: 219, \"from\": \"tickets\", \"to\": \"calls\" },\n        { name: \"call_to_ticket\", id: 220, \"from\": \"calls\", \"to\": \"tickets\" }, \n        { name: \"ticket_to_email\", id: 223, \"from\": \"tickets\", \"to\": \"emails\" },\n        { name: \"email_to_ticket\", id: 224, \"from\": \"emails\", \"to\": \"tickets\" }, \n        { name: \"ticket_to_meeting\", id: 225, \"from\": \"tickets\", \"to\": \"meetings\" },\n        { name: \"meeting_to_ticket\", id: 226, \"from\": \"meetings\", \"to\": \"tickets\" }, \n        { name: \"ticket_to_note\", id: 227, \"from\": \"tickets\", \"to\": \"notes\" },\n        { name: \"note_to_ticket\", id: 228, \"from\": \"notes\", \"to\": \"tickets\" }, \n        { name: \"ticket_to_task\", id: 229, \"from\": \"tickets\", \"to\": \"tasks\" }, \n        { name: \"task_to_ticket\", id: 230, \"from\": \"tasks\", \"to\": \"tickets\" }, \n        { name: \"contact_to_company\", id: 279, \"from\": \"contacts\", \"to\": \"companies\" }, \n        { name: \"company_to_contact\", id: 280, \"from\": \"companies\", \"to\": \"contacts\" }, \n        { name: \"ticket_to_company\", id: 340, \"from\": \"tickets\", \"to\": \"companies\" }, \n        { name: \"deal_to_company\", id: 341, \"from\": \"deals\", \"to\": \"companies\" }, \n        { name: \"company_to_deal\", id: 342, \"from\": \"companies\", \"to\": \"deals\" }, \n        { name: \"contact_to_contact\", id: 449, \"from\": \"contacts\", \"to\": \"contacts\" }, \n        { name: \"company_to_company\", id: 450, \"from\": \"companies\", \"to\": \"companies\" }, \n        { name: \"deal_to_deal\", id: 451, \"from\": \"deals\", \"to\": \"deals\" }, \n        { name: \"ticket_to_ticket\", id: 452, \"from\": \"tickets\", \"to\": \"tickets\" }, \n        { name: \"contact_to_postal_mail\", id: 454, \"from\": \"contacts\", \"to\": \"postal_mails\" },\n        { name: \"ticket_to_postal_mail\", id: 456, \"from\": \"tickets\", \"to\": \"postal_mails\" },\n        { name: \"deal_to_postal_mail\", id: 458, \"from\": \"deals\", \"to\": \"postal_mails\" },\n        { name: \"company_to_postal_mail\", id: 460, \"from\": \"companies\", \"to\": \"postal_mails\" }\n    ],\n    parameters: { \n        companies: [],\n        contacts: ['companies'] ,\n        deals: ['companies', 'contacts'],\n    }\n};```"
  },
  {
    "poster": {
      "poster_name": "Adam Brown",
      "poster_handle": "abrown"
    },
    "time_stamp": "2023-10-31 11:15:31",
    "text": "finding mixed opinions online and in developer docs, are you able to batch with filtering?"
  },
  {
    "poster": {
      "poster_name": "Ryan Liu",
      "poster_handle": "ryan935"
    },
    "time_stamp": "2023-10-31 13:52:11",
    "text": "Hi, I am running into issues fetching archived companies and I’m wondering if others have run into this issue.\n\nWhen doing a `GET` on `/crm/v3/objects/companies?limit=1&amp;archived=true` , I’m getting a 504 (gateway timeout) every single time. If I remove the `archived=true`, it works just fine.",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-11-03 14:14:14"
      },
      {
        "time_stamp": "2023-11-03 14:40:09"
      },
      {
        "time_stamp": "2023-11-03 14:40:39"
      },
      {
        "time_stamp": "2023-11-14 12:39:18"
      },
      {
        "time_stamp": "2023-11-15 09:26:18"
      },
      {
        "time_stamp": "2023-11-17 13:06:50"
      },
      {
        "time_stamp": "2023-11-27 07:32:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jose Nunez",
      "poster_handle": "joseenrique0595"
    },
    "time_stamp": "2023-10-31 13:59:17",
    "text": "Hi!\nI'm working with the `Single Send API` and I already created a private app with these scopes:\n• transactional-email\n• marketing-email\nWhen I send the POST request to this endpoint using postman\n```<https://api.hubapi.com/marketing/v3/transactional/single-email/send>```\n\"Auth Bearer Token\"\n\nI'm getting this response back:\n\n```{\n    \"status\": \"error\",\n    \"message\": \"This app hasn't been granted all required scopes to make this call. Read more about required scopes here: <https://developers.HubSpot.com/scopes>.\",\n    \"correlationId\": \"d3-xxx-xxx\",\n    \"errors\": [\n        {\n            \"message\": \"All of the following scopes are required.\",\n            \"context\": {\n                \"requiredScopes\": [\n                    \"transactional-email\"\n                ]\n            }\n        }\n    ],\n    \"links\": {\n        \"scopes\": \"<https://developers.HubSpot.com/scopes>\"\n    },\n    \"category\": \"MISSING_SCOPES\"\n}```\nDoes somebody know what I'm doing wrong?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-10-31 14:06:40"
      },
      {
        "time_stamp": "2023-10-31 14:08:06"
      },
      {
        "time_stamp": "2023-10-31 14:08:22"
      },
      {
        "time_stamp": "2023-10-31 14:08:32"
      },
      {
        "time_stamp": "2023-10-31 14:09:29"
      },
      {
        "time_stamp": "2023-10-31 14:09:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jonathan Bredo",
      "poster_handle": "jonathan355"
    },
    "time_stamp": "2023-10-31 14:06:40",
    "text": "Have you double checked its the correct API key?"
  },
  {
    "poster": {
      "poster_name": "Jose Nunez",
      "poster_handle": "joseenrique0595"
    },
    "time_stamp": "2023-10-31 14:08:06",
    "text": "• Yes, I double checked and it's the correct One. But the account is not \"You must have a _Marketing Hub Enterprise_ account.\". I think the issues is there..."
  },
  {
    "poster": {
      "poster_name": "Jonathan Bredo",
      "poster_handle": "jonathan355"
    },
    "time_stamp": "2023-10-31 14:08:22",
    "text": "Do you have the transaction email add-on?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Bredo",
      "poster_handle": "jonathan355"
    },
    "time_stamp": "2023-10-31 14:08:32",
    "text": "<https://www.HubSpot.com/products/marketing/transactional-email>"
  },
  {
    "poster": {
      "poster_name": "Jonathan Bredo",
      "poster_handle": "jonathan355"
    },
    "time_stamp": "2023-10-31 14:09:29",
    "text": "It’s not an enterprise thing, it’s a separate €590 per month add-on"
  },
  {
    "poster": {
      "poster_name": "Jose Nunez",
      "poster_handle": "joseenrique0595"
    },
    "time_stamp": "2023-10-31 14:09:59",
    "text": "Got it. I'm going to check that. Thank you very much!"
  },
  {
    "poster": {
      "poster_name": "Connor McPherson",
      "poster_handle": "connor376"
    },
    "time_stamp": "2023-10-31 14:43:51",
    "edited": {
      "time_stamp": "2023-10-31 14:57:39"
    },
    "text": "Does anyone know a way to get group memberships when pulling contacts? I've been using <https://api.hubapi.com/contacts/v1/contact/vid/{contactId}/profile> for each contact individually but I keep running into Rate Limit problems. Is there a way to get each contact's group memberships in bulk?"
  },
  {
    "poster": {
      "poster_name": "Ted Malone",
      "poster_handle": "ted607"
    },
    "time_stamp": "2023-10-31 15:01:27",
    "text": "Hello API experts, I have been scouring the developer documentation and sample code on Github. In Python, I'm trying to authenticate to my private app with Oauth 2.0. However, the examples show that you need a client_id and client_secret in order to authenticate. On my private app's Auth screen, I only see Access Token and Client Secret. There is no Client ID shown anywhere. Do I need to use Oauth to authenticate to a private app, or can I just use the Access Token?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-10-31 15:21:51"
      },
      {
        "time_stamp": "2023-10-31 18:13:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lukas Knobling",
      "poster_handle": "lukas.knobling"
    },
    "time_stamp": "2023-10-31 15:21:51",
    "text": "For Private Apps you don’t use OAuth with a refresh token, this is just for public Apps. For private apps you do the authentication via the Privat App Access Token. \n\nTake a look here <https://developers.HubSpot.com/docs/api/private-apps|https://developers.HubSpot.com/docs/api/private-apps>\n\n and here <https://developers.HubSpot.com/docs/api/intro-to-auth|https://developers.HubSpot.com/docs/api/intro-to-auth>\n\nfor more infos. :) hope this helps. \n\n"
  },
  {
    "poster": {
      "poster_name": "Brad Filip",
      "poster_handle": "brad149"
    },
    "time_stamp": "2023-10-31 15:51:12",
    "text": "Hi - I have a question regarding line items and deals. It appears there is no way to bulk create/associate line items with a deal - so let’s say an e-commerce checkout that creates a deal for the customer (contact) that has potentially 500 line items would require first creating the deal and then looping through each line item one by one via a new api request and creating/assigning it therefor running into a rate limiting problem if it took more than 10 seconds"
  },
  {
    "text": "Hello, I wasn't sure where to put this as it's more related to payments than API.\n\nHas anyone had it where the \"Payment Source Name\" doesn't match the name of the payment link? (See attachment)\n1. The payment link was created with name `Customer #10061787037...`\n2. Payment link was used to complete payment\n3. Payment link name was updated to `Customer #5369525...`\nIt doesn't appear that the updated payment link name is being reflected on the payment",
    "time_stamp": "2023-10-31 16:22:41"
  },
  {
    "poster": {
      "poster_name": "Ted Malone",
      "poster_handle": "ted607"
    },
    "time_stamp": "2023-10-31 18:13:00",
    "text": "Thank you! This distinction is not as clear on Github."
  },
  {
    "poster": {
      "poster_name": "Andy Day",
      "poster_handle": "aday"
    },
    "time_stamp": "2023-10-31 18:17:22",
    "text": "does anyone know if it's possible to access a call's transcript via the API?"
  }
]
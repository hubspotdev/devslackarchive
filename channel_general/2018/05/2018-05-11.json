[
  {
    "poster": {
      "poster_name": "Parag",
      "poster_handle": "parag.patel"
    },
    "time_stamp": "2018-05-11 03:05:02",
    "text": "I got you, I should change my approach.\nThanks for your reply <@U7V9DQ31P> <@U7NGDL8TS> and <@U3A4KEWK1>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 04:50:30",
    "text": "next time a designer critiques something I build out I’ll just let them know “I decided to make it more organic”"
  },
  {
    "text": "A file was commented on",
    "time_stamp": "2018-05-11 04:52:47",
    "edited": {
      "time_stamp": "2018-05-11 04:54:58"
    }
  },
  {
    "text": "A file was commented on",
    "time_stamp": "2018-05-11 04:58:06"
  },
  {
    "poster": {
      "poster_name": "Andy Mc",
      "poster_handle": "andy"
    },
    "time_stamp": "2018-05-11 08:01:57",
    "text": "is it not possible to get all companies by Company Status via the API without first getting all companies and then sorting through the results via code. I see where we can get Companies by domain or by ID but that seems like the only way to get a specified list of companies via a single API call."
  },
  {
    "text": "I'm running into an issue porting a module to another portal, I excluded the dependencies in the export wizard, but I get an email saying that it was unable to copy over such dependencies that I told not to copy over. Anyone else run into this issue?",
    "time_stamp": "2018-05-11 08:57:15"
  },
  {
    "text": "<@UA19PGELA> uploaded a file: <https://HubSpotdev.slack.com/files/UA19PGELA/FAMPDP8FK/mail.google.com_mail_u_0___1_.png|mail.google.com_mail_u_0_ (1).png>",
    "time_stamp": "2018-05-11 08:57:23"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 08:59:05",
    "text": "ran into this before, it sucks but you need to remove the placeholder asset",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-05-11 09:53:49"
      },
      {
        "time_stamp": "2018-05-11 10:02:33"
      },
      {
        "time_stamp": "2018-05-11 10:18:20"
      },
      {
        "time_stamp": "2018-05-11 10:20:38"
      },
      {
        "time_stamp": "2018-05-11 10:31:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 08:59:24",
    "text": "if it helps you could exchange that for <http://placehold.it/500>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 08:59:55",
    "edited": {
      "time_stamp": "2018-05-11 09:00:30"
    },
    "text": "and to clarify, the issue shouldn’t exist. but that’s the workaround.\n\nAlso excluding dependencies doesn’t actually seem to work. never been able to get it to succeed."
  },
  {
    "poster": {
      "poster_name": "Alex Girard",
      "poster_handle": "alexg"
    },
    "time_stamp": "2018-05-11 09:43:06",
    "edited": {
      "time_stamp": "2018-05-11 09:43:13"
    },
    "text": "Hi all, <!here> Wanted to let you know that we’ve made some updates to our local HubL server. The local server now supports Java9+, and  includes support for the new modules framework. Feel free to check out this blog post for a full rundown on what’s been added, and install the latest version!"
  },
  {
    "poster": {
      "poster_name": "Alex Girard",
      "poster_handle": "alexg"
    },
    "time_stamp": "2018-05-11 09:43:32",
    "text": "<https://designers.HubSpot.com/blog/the-refreshed-local-hubl-server-is-now-available>"
  },
  {
    "poster": {
      "poster_name": "Vincent Cifelli",
      "poster_handle": "vincent"
    },
    "time_stamp": "2018-05-11 09:53:49",
    "text": "Hi Jon, I like that workaround, but I can't even locate where that placeholder asset is being reference in my module"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 10:02:33",
    "edited": {
      "time_stamp": "2018-05-11 10:02:55"
    },
    "text": "It’s not in the linked assets area?(below linked stylesheets and linked javascript)"
  },
  {
    "poster": {
      "poster_name": "Colleen Cooney",
      "poster_handle": "ccooney"
    },
    "time_stamp": "2018-05-11 10:08:28",
    "text": "i have a question about content staging. i had a landing page that i staged, updated, and published. we had a workflow that would enroll contacts when they filled out the form on this particular page. when i published the staged page, the workflow was now tied to the archived version of the page instead of the new active version. is this the intended behavior when publishing a page from content staging? should the workflow automatically update so that it is tied to the new, active version of the page instead of the archived version?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 10:11:36",
    "edited": {
      "time_stamp": "2018-05-11 10:12:15"
    },
    "text": "that sounds like a bug.\n\nThe reason why it’s happening though - Content staging appears to work like this at the technical level - It creates a whole new page(even when you stage an existing page) then when you go to publish the page live, if the page was staged from an existing page, it does a 1 time transfer of all the stats to the new version of the page and changes the URL of the staged page to the live URL. The old live page gets archived and -archived is added to it’s url."
  },
  {
    "poster": {
      "poster_name": "Vincent Cifelli",
      "poster_handle": "vincent"
    },
    "time_stamp": "2018-05-11 10:18:20",
    "text": "I don't have a linked assets in my sidebar"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-05-11 10:20:38",
    "text": "then that sounds like a bug.  I had a similar issue before where a css file that was being called by a template my module was in, was causing that module to have a “dependency” that wasn’t actually part of the module. could be a similar issue.\n\nI’d contact support."
  },
  {
    "poster": {
      "poster_name": "Vincent Cifelli",
      "poster_handle": "vincent"
    },
    "time_stamp": "2018-05-11 10:31:51",
    "text": "ah, kind sounds like an issue for support, thanks for the workaround though!"
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2018-05-11 11:28:10",
    "text": "FYI: returning `false` from the `onFormSubmit` callback doesn't stop the submission from happening"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-05-11 11:38:52",
    "text": "Since there are no Hubl or Custom HTML modules in the new design manager, is there no way to use a `{% include 'template/page/here.html' %}` in the new template builder? If you try to put `{% include %}` in a custom module, it errors and says that function is disabled",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-05-11 13:30:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-05-11 11:39:12",
    "text": "correct"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-05-11 11:39:51",
    "text": "I think the idea is to include the file as a dependency, but I'm not sure"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 11:45:43",
    "text": "correct you can no longer use Include. There isn’t as much need for it anyways as you can just add the files as a dependency as Mark said. ALL css and js files get combined and minified"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-05-11 11:48:55",
    "text": "only use case I've had issues with is I will sometimes use a \"variables.html\" file that is just a bunch of HubL variables with no actual HTML markup that I can reference across files, but like I said, only have that on a couple portals so it hasn't been a deal-breaker. And you could easily replace that with a HubDB table, if only more of our clients had it lol"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 11:50:12",
    "text": "Yea I ran into the same problem - interesting solution regarding the HubDB table."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-05-11 11:51:01",
    "text": "I mean, all a variable really is is a key-value pair lol"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 11:51:24",
    "edited": {
      "time_stamp": "2018-05-11 11:52:01"
    },
    "text": "been considering converting all my variables to css custom properties to solve the problem myself, but that’d require me to polyfill those"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 11:52:56",
    "text": "not even sure if a full polyfill for it exists tbh"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-05-11 11:54:23",
    "text": "yeah, mine aren't always CSS vars, they could be addresses, team members, stuff like that. For CSS vars, I'm not sure either. If you're using a build system I'd say look into PostCSS, then you can use pretty much whatever you want."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 11:55:37",
    "text": "yea… postCSS only supports :root level custom properties. looked into it :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Christine Austin",
      "poster_handle": "caustin"
    },
    "time_stamp": "2018-05-11 11:56:16",
    "text": "We’re just very used to include headers that way for particular projects, thats why I asked"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 11:57:06",
    "text": "ahh, yea.\n\nYou could build the whole header as a custom module instead. I’ve been moving toward that way myself"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-05-11 11:57:50",
    "text": "^ What we're doing now"
  },
  {
    "text": "A file, which can't be shown because your team is past the free storage limit, was commented on.",
    "time_stamp": "2018-05-11 12:45:10"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-05-11 13:12:15",
    "edited": {
      "time_stamp": "2018-05-11 13:12:25"
    },
    "text": "And when I said soon, I meant tomorrow, which is now today. :slightly_smiling_face: <https://designers.HubSpot.com/blog/in-beta-manage-where-HubSpots-included-jquery-library-loads>"
  },
  {
    "poster": {
      "poster_name": "Alex Girard",
      "poster_handle": "alexg"
    },
    "time_stamp": "2018-05-11 13:15:05",
    "text": "Ya beat me to it <@U22PJPGK0>! For anyone interested, there is a link to a landing page on that blog post that will let you sign up for this beta. We'll be giving access to those who ask for the ability to manage where HubSpot's included jQuery library loads by May 21!"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-05-11 13:30:45",
    "text": "What I do to manage that kind of stuff is call it in the header of the template.\nIf you use the html file to save HubL variables, macros os even custom fields, everything work fine calling in to the template level.\nAlso it can be used inside the CM which solves all my issues.\nThe \"problem\" is that there is actually a dependency which is not managed by the CM so you can't use that method if you want to sell the CM or something like that..."
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-11 14:19:37",
    "edited": {
      "time_stamp": "2018-05-11 14:21:48"
    },
    "text": "Anyone else seeing module issues today? I am getting weird spacing in built-in modules and they seem to have reverted their settings."
  },
  {
    "text": "<@U98RGFUQZ> uploaded a file: <https://HubSpotdev.slack.com/files/U98RGFUQZ/FANLDQ45B/screen_shot_2018-05-11_at_4.19.03_pm.png|When I enter text, it adds a ton of spacing at the top>",
    "time_stamp": "2018-05-11 14:20:01"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:29:08",
    "text": "that looks fun.\n\nTry first disabling your grammer checking extension then see if the issue is still there"
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-11 14:32:30",
    "text": "It actually was at the template level, the selections got reset. Looked through revisions and it doesn’t show anyone changing them at the template level either…."
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-11 14:33:45",
    "text": "Pretty frustrating too, because fixing it at the template level doesn’t change it back at the individual page, somehow. So had to drop it, replace it, update each page (luckily it was just 2)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:37:54",
    "text": "weird"
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-11 14:44:47",
    "text": "Here’s another wonky HubSpot thing and corresponding not-so-great reply. We have a date select field that we use for all of our clients leads - they all have a renewal date and everything pretty much circles around that. This date can be self selected or added by an AM. In any case, they select, for example, 6/1/2018 from a HubSpot created Datepicker, however, in HubSpot on the contact record the date shows as 5/31/2018. This is new behavior in the last month or so. HubSpots response:\n```\nThere are technically two kinds of date properties in HubSpot: date properties and datetime properties. Renewal date is a datetime property. Datetime properties when selected on forms are set to midnight GMT regardless of where the form was submitted in the world. However, when datetime properties are shown in HubSpot, they align to that specific time in your timezone, which in your case would mean the day before at 5pm as I notice your portal timezone is set to Pacific.\n\nDate properties, on the other hand, are not subject to the above behavior. When a date property is set in a form, it is still set to midnight GMT regardless of where in the world the form was submitted. However, when it is shown in the portal, the date will be shown in GMT still, so the date will remain static.\n```\nThis makes no sense, though. If someone selects 6/1/2018, the expectation should be that the date shows as 6/1/2018 on their account, not Midnight GMT regardless of the time zone. The field doesn’t even have an option to select a time!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:48:41",
    "text": "actually what the HS support person said makes pretty good sense"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:49:27",
    "text": "in the database you want uniform GMT times and dates, you can use HubL to output the local timezone version"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-05-11 14:51:50",
    "edited": {
      "time_stamp": "2018-05-11 14:53:32"
    },
    "text": "Otherwise someone at GMT -1 could post at 1AM and someone at GMT +1 could post at 11PM and  it would be recorded in your data incorrectly, as if person at GMT +1 submitted first.\n\nIn reality they submitted at the same time\n\nUnless I’m reading what they’re saying wrong."
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-11 15:04:06",
    "text": "Yeah, I copied only a part of the full response. The use case is for someone to select their renewal date and it worked flawlessly until about a month ago.\n\nFortunately, it’s reverting to a day earlier so people are getting emails/etc in advance. Like, a person would select 6/1/2018 as their renewal date, and the expectation would be that they get their information on 6/1/2019 (a year later). However, now it’s in the database as 5/31/2018 and they’re going to get their information on 5/31/2018. Make sense?"
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-11 15:05:52",
    "text": "More about me having to field the questions from customers asking why they entered 6/1/2018 and their emails are coming telling them they selected 5/31/2018.... "
  }
]
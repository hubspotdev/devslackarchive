[
  {
    "poster": {
      "poster_name": "Bob Balm",
      "poster_handle": "bob209"
    },
    "time_stamp": "2023-10-20 07:07:13",
    "text": "If it's a custom label created by a HubSpot user, then category needs to be USER_DEFINED and definitionId the ID of the association. You can get this through the  Read Associations Schema endpoint (fromObjectType = Deals, toObjectType = whatever object you're associating with).\nSee  <https://developers.HubSpot.com/docs/api/crm/associations>\n\nShould note that Associations is up to v4 atm. May be handier to use the most recent version."
  },
  {
    "poster": {
      "poster_name": "Kevin Williams",
      "poster_handle": "kevin872"
    },
    "time_stamp": "2023-10-20 07:11:27",
    "text": "Ok great, yes v4 looks like it might be the only way to do what I need for this particular account Iâ€™m working with. Thanks for the info friend."
  },
  {
    "poster": {
      "poster_name": "Bob Balm",
      "poster_handle": "bob209"
    },
    "time_stamp": "2023-10-20 07:11:29",
    "text": "Oh just read this. So yeah v4 is what you need, but what IDs are you using for what?\n\n*fromObjectId* should be the ID of your individual deal\n*fromObjectType* should be \"Deals\"\n*toObjectId* should be the ID of the record you're associating with\n*toObjectType* should be the name of whatever object the record is in. If it's a custom object, you can find the ID in the URL when looking at any custom object record. Starts with 2-"
  },
  {
    "poster": {
      "poster_name": "Bob Balm",
      "poster_handle": "bob209"
    },
    "time_stamp": "2023-10-20 07:11:56",
    "text": "the naming is a bit wonky, because object ID is really a record ID, not an object ID :man-shrugging:"
  },
  {
    "poster": {
      "poster_name": "Bob Balm",
      "poster_handle": "bob209"
    },
    "time_stamp": "2023-10-20 07:12:05",
    "text": "if you ask me"
  },
  {
    "poster": {
      "poster_name": "Bob Balm",
      "poster_handle": "bob209"
    },
    "time_stamp": "2023-10-20 07:14:09",
    "text": "And then for the label, assuming it's a custom label, it's USER_DEFINED as the category, and for the id you can also see that in HubSpot when you edit the label under association labels. Again, it's in the URL, probably 3 digits"
  },
  {
    "poster": {
      "poster_name": "Josh Abrams",
      "poster_handle": "jabrams"
    },
    "time_stamp": "2023-10-20 07:32:40",
    "text": "Hi All! We have encountered an issue with our API calls in Snaplogic, and I'm seeking your assistance in resolving it.\nThe problem we're facing is that when making a basic call to a non-custom object API, we often (but not always) receive the following error:\n\"HTTP Response Code: 401Unauthorized operation\n\n*Resolution:*\nCheck account settings\n\n*Reason:*\nUnauthorized/forbidden operation for this account\n*Hide Details...*\nSnapCompletionService\ncom.snaplogic.api.ConfigurationException: HTTP Response Code: 401Unauthorized operation\n    at com.rojoconsultancy.snaps.HubSpot.utils.RequestHandlerUtility.hubSpotHttpException(RequestHandlerUtility.java:200)\n    at com.rojoconsultancy.snaps.HubSpot.utils.RequestHandlerUtility.processResponse(RequestHandlerUtility.java:175)\n    at com.rojoconsultancy.snaps.HubSpot.Base.executeRequest(Base.java:410)\n    at com.rojoconsultancy.snaps.HubSpot.Base.process(Base.java:374)\n    at com.snaplogic.snap.api.ExecutionUtil.process(ExecutionUtil.java:106)\n    at com.snaplogic.snap.api.ExecutionUtil.execute(ExecutionUtil.java:70)\n    at com.snaplogic.snap.api.SimpleSnap.execute(SimpleSnap.java:70)\n    at com.snaplogic.cc.snap.common.SnapRunnableImpl.executeSnap(SnapRunnableImpl.java:812)\n    at com.snaplogic.cc.snap.common.SnapRunnableImpl.execute(SnapRunnableImpl.java:586)\n    at com.snaplogic.cc.snap.common.SnapRunnableImpl.doRun(SnapRunnableImpl.java:877)\n    at com.snaplogic.cc.snap.common.SnapRunnableImpl.call(SnapRunnableImpl.java:436)\n    at com.snaplogic.cc.snap.common.SnapRunnableImpl.call(SnapRunnableImpl.java:120)\n    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n    at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n    at java.base/java.lang.Thread.run(Thread.java:829)\nReason: Unauthorized/forbidden operation for this account\nResolution: Check account settings\n\nError Fingerprint[0] = efp:com.rojoconsultancy.snaps.HubSpot.utils.DKA2RosO\"\n\nThe unusual aspect of this issue is that approximately 3 out of 4 times, we encounter this error. However, approximately 1 out of every 4 attempts seems to work seamlessly, without making any changes to our API call.\nThe error message indicates that the issue is related to an unauthorized or forbidden operation for our account. We suspect there might be an issue with how we are trying to call the API, but we are not sure.\nCould you please assist us in diagnosing and resolving this issue? It's critical for us to ensure the reliability of our API calls."
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 08:34:23",
    "edited": {
      "time_stamp": "2023-10-20 08:35:50"
    },
    "text": "Hi, is it possible to use the deals API such that the JSON query can be given as part of the URL? I'd like to append this: <https://api.hubapi.com/crm/v3/objects/deals/> with this \"\n```{\n  \"properties\": [\n    \"dealname\",\n    \"dealstage\",\n    \"pipeline\"\n  ]\n}```\n\"",
    "reply_count": 25,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-10-20 08:44:46"
      },
      {
        "time_stamp": "2023-10-20 08:45:48"
      },
      {
        "time_stamp": "2023-10-20 08:46:20"
      },
      {
        "time_stamp": "2023-10-20 08:46:34"
      },
      {
        "time_stamp": "2023-10-20 08:47:11"
      },
      {
        "time_stamp": "2023-10-20 08:47:45"
      },
      {
        "time_stamp": "2023-10-20 08:48:59"
      },
      {
        "time_stamp": "2023-10-20 08:49:47"
      },
      {
        "time_stamp": "2023-10-20 08:53:13"
      },
      {
        "time_stamp": "2023-10-20 08:53:32"
      },
      {
        "time_stamp": "2023-10-20 09:21:33"
      },
      {
        "time_stamp": "2023-10-20 09:21:34"
      },
      {
        "time_stamp": "2023-10-20 09:22:15"
      },
      {
        "time_stamp": "2023-10-20 09:28:07"
      },
      {
        "time_stamp": "2023-10-20 09:28:38"
      },
      {
        "time_stamp": "2023-10-20 09:29:06"
      },
      {
        "time_stamp": "2023-10-20 09:34:08"
      },
      {
        "time_stamp": "2023-10-20 09:34:13"
      },
      {
        "time_stamp": "2023-10-20 09:36:49"
      },
      {
        "time_stamp": "2023-10-20 09:37:06"
      },
      {
        "time_stamp": "2023-10-20 09:37:09"
      },
      {
        "time_stamp": "2023-10-20 09:44:34"
      },
      {
        "time_stamp": "2023-10-20 09:44:42"
      },
      {
        "time_stamp": "2023-10-20 09:45:25"
      },
      {
        "time_stamp": "2023-10-20 09:45:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin Sam",
      "poster_handle": "kevinalexsam"
    },
    "time_stamp": "2023-10-20 08:44:46",
    "text": "you can url-encode the JSON query and send it as a URL parameter"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 08:45:48",
    "text": "Ok, that's what I did using a converter, but maybe I'm not understanding how to use the API parameters in the software that I'm using. This is probably peanuts to someone who's used to working with APIs, but I'm not sure. I have the following fields:"
  },
  {
    "text": "",
    "time_stamp": "2023-10-20 08:46:20"
  },
  {
    "text": "",
    "time_stamp": "2023-10-20 08:46:34"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 08:47:11",
    "text": "Any clue how to enter the property list data into one of these fields, the \"connection string options\" or \"filter data\"?"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 08:47:45",
    "text": "Also, do you know if the API returns only 10 results by default? I get only 10 rows using <https://api.hubapi.com/crm/v3/objects/deals/>"
  },
  {
    "poster": {
      "poster_name": "Kevin Sam",
      "poster_handle": "kevinalexsam"
    },
    "time_stamp": "2023-10-20 08:48:59",
    "text": "try this site: <https://www.urlencoder.org/|https://www.urlencoder.org/>"
  },
  {
    "poster": {
      "poster_name": "Kevin Sam",
      "poster_handle": "kevinalexsam"
    },
    "time_stamp": "2023-10-20 08:49:47",
    "text": "you could pass the request limit in the header.. it is 10 by default"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 08:53:13",
    "text": "Where could I find documentation on this? Tried searching but haven't run into it yet?"
  },
  {
    "poster": {
      "poster_name": "Kevin Sam",
      "poster_handle": "kevinalexsam"
    },
    "time_stamp": "2023-10-20 08:53:32",
    "text": "see \"Paging through results\" section here: <https://developers.HubSpot.com/docs/api/crm/search|https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:21:33",
    "text": "Hm...so should the following type of query be working:"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:21:34",
    "text": "<https://api.hubapi.com/crm/v3/objects/deals/%7B%0D%0A%20%20%22properties%22%3A%20%5B%0D%0A%20%20%20%20%22dealname%22%2C%0D%0A%20%20%20%20%22dealstage%22%2C%0D%0A%20%20%20%20%22pipeline%22%0D%0A%20%20%5D%7D|https://api.hubapi.com/crm/v3/objects/deals/%7B%0D%0A%20%20%22properties%22%3A%20%5B[â€¦]stage%22%2C%0D%0A%20%20%20%20%22pipeline%22%0D%0A%20%20%5D%7D>"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:22:15",
    "text": "or is there another type of notation when passing parameters connected to the base URL of <https://api.hubapi.com/crm/v3/objects/deals/>?"
  },
  {
    "poster": {
      "poster_name": "Kevin Sam",
      "poster_handle": "kevinalexsam"
    },
    "time_stamp": "2023-10-20 09:28:07",
    "text": "did that url encoded api call return any error response?"
  },
  {
    "text": "",
    "time_stamp": "2023-10-20 09:28:38"
  },
  {
    "text": "this is what I pasted",
    "time_stamp": "2023-10-20 09:29:06"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:34:08",
    "text": "Maybe I need to use the \"?properties=dealname,dealstage&amp;\"... style"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:34:13",
    "text": "I'll give it a try"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:36:49",
    "text": "Yes! It worked"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:37:06",
    "text": "<https://api.hubapi.com/crm/v3/objects/deals/?properties=dealname,total_revenue,dealstage>"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:37:09",
    "text": "For example that worked"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:44:34",
    "text": "Now just need to get the limit parameter to work....this isn't working:"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:44:42",
    "text": "<https://api.hubapi.com/crm/v3/objects/deals/?properties=dealname,total_revenue,dealstage&amp;limit=20>"
  },
  {
    "text": "",
    "time_stamp": "2023-10-20 09:45:25"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:45:40",
    "text": "Any idea if this \"--data\" parameter needs to be somehow included?"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 09:59:31",
    "text": "<https://api.hubapi.com/crm/v3/objects/deals/?properties=dealname,total_revenue,dealstage>  This call works well, but how would I use\n```--data '{\n    \"limit\": 20\n  }```\nparameter with it? I cannot get the following call to work:\n\n<https://api.hubapi.com/crm/v3/objects/deals/?properties=dealname,total_revenue,dealstage&amp;limit=20>"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 10:01:03",
    "text": "<https://api.hubapi.com/crm/v3/objects/deals/?limit=20> Hmm, this works"
  },
  {
    "poster": {
      "poster_name": "Sakari Lapinsuo",
      "poster_handle": "lapinsuo"
    },
    "time_stamp": "2023-10-20 10:02:28",
    "text": "I got it to work, needs to be the other way around, i.e. this works:\n<https://api.hubapi.com/crm/v3/objects/deals/?limit=20&amp;properties=dealname,total_revenue,dealstage&amp;limit=20>"
  },
  {
    "poster": {
      "poster_name": "Stephen Kvedaras",
      "poster_handle": "stephen.kvedaras"
    },
    "time_stamp": "2023-10-20 11:21:50",
    "text": "Hey <@U048AH500QM> - Not in this case, this is a contact workflow and I'm aiming to grab a company record property. (I've used `inputFields` for any contact rec properties without issue).\n\nThe company record is not associated to the contact record in this scenario, so can't go down that route"
  }
]
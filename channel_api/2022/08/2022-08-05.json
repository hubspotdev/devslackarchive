[
  {
    "poster": {
      "poster_name": "Milan Dodiya",
      "poster_handle": "dev.milandodiya"
    },
    "time_stamp": "2022-08-05 02:11:23",
    "edited": {
      "time_stamp": "2022-08-05 02:11:47"
    },
    "text": "Hello,\nI need help in API V3!\nWhen I tried to fetch HubDB row with specific column value from all the rows I'm getting `Unable to deduce portalId from this request.` an error while calling the API in code. This works fine in postman.\n\nAPI call: `<https://api.hubapi.com/cms/v3/hubdb/tables/5314947/rows?hs_name__eq=JR> International Logistics Co., Ltd.`\n\nCan anyone please help me out?"
  },
  {
    "poster": {
      "poster_name": "Jay Phillips",
      "poster_handle": "jay695"
    },
    "time_stamp": "2022-08-05 06:17:21",
    "text": "Hey <@UFBNA9K9A> , do you know if there has been any change to the API in the last 3 years in this respect, or any known workarounds? I need to import blog comments, but will need to retain their original date."
  },
  {
    "poster": {
      "poster_name": "Dewayne Higgs",
      "poster_handle": "dewayne"
    },
    "time_stamp": "2022-08-05 07:41:14",
    "text": "Hey everyone, does anyone know if the Source Code API will be updated to allow for .graphql files when HubSpot's GraphQL functionality comes out of beta?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2022-08-05 07:41:28",
    "text": "I would reach out to them to see what their plans are.  Their best path would be to offer an OAuth method of authentication."
  },
  {
    "poster": {
      "poster_name": "Iris Schwartz",
      "poster_handle": "irisschwartz9"
    },
    "time_stamp": "2022-08-05 09:27:33",
    "text": "<@U01E105CPC3> Thank you! Your solution really helped!"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin-tekpartners"
    },
    "time_stamp": "2022-08-05 11:21:05",
    "text": "```// 'true' tracks this event on every page view\nif (true) {\n_hsq.push([\n  'trackCustomBehavioralEvent',\n  {\n    name: \"asdadasdasfxcvz\",\n    properties: {\n      // give each property a value so we know what they mean\n      \n    },\n  },\n]);\n}```\nThis is the snippet provided from a custom behavioral event in HubSpot. I don’t understand the `if (true)` portion though. I don’t understand why it’s needed. When would it ever be false? You literally just put the snippet like this, right?\n```&lt;script&gt;\n// 'true' tracks this event on every page view\nif (true) {\n_hsq.push([\n  'trackCustomBehavioralEvent',\n  {\n    name: \"pe4307349_quick_test\",\n    properties: {\n      // give each property a value so we know what they mean\n      \n    },\n  },\n]);\n}\n&lt;/script&gt;```\n"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2022-08-05 14:07:44",
    "edited": {
      "time_stamp": "2022-08-05 14:09:16"
    },
    "text": "good catch, but the error mentions `\"Unable to parse value for path parameter: objectId\"` not `toObjectId`  the `dealId` is the `toObjectId` ... the `objectId` Is defined right from the `event.inputFields`\n\n`const buyingInterestId = event.inputFields['hs_object_id'];`\n\nI don't get what could be wrong"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2022-08-05 14:08:27",
    "text": "Thanks for your help <@UFBNA9K9A>"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "lchausse"
    },
    "time_stamp": "2022-08-05 14:12:10",
    "text": "oh just figured that out. thanks again!"
  }
]
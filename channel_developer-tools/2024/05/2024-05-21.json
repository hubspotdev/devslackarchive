[
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2024-05-21 03:43:55",
    "text": "Hey <@UDF0QRPNZ> - what type of listing do you mean? Marketplace?\nIf you'd like to publish modules and/or themes to the marketplace, you'll need a specific marketplace provider account ( <https://developers.HubSpot.com/docs/cms/marketplace-guidelines#overview-and-requirements> )"
  },
  {
    "poster": {
      "poster_name": "Mike Eastwood",
      "poster_handle": "mike330"
    },
    "time_stamp": "2024-05-21 03:48:39",
    "text": "Hey Anton, I’ve created a new Developer Account for Portal-iQ (moving it out of Webalite’s account) and I want to add some custom modules to the Marketplace so other HubSpot Partners can sign up their customers, from their website, with a Custom Module. BUT gif I set up a Template Account it’s separate from my Developer Account. Any suggestions?"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2024-05-21 04:04:34",
    "text": "It's seperated, yes.\n\nIf you want a connection I could think of creating a github action that pushes/updates both portals. So you're pushing your code from local to this git repo and once it's in the repo it gets pushed to both portals"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:22:49",
    "text": "I’m trying to figure out how changes made to theme settings in the HubSpot UI are saved/stored in the file system so they can be fetched locally"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:23:23",
    "text": "I have a child theme that’s new - I just did a ‘clone’ and that’s it, and moved a fonts folder over to it from the parent, nothing else"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:23:50",
    "text": "fully hooked up with local development, I have a ‘watch’ running on both it and the parent theme folders (just in case)"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:24:23",
    "text": "I needed to change the default colors in the child theme so I did so using the ‘Preview’ link to the right of the child theme folder name in the Design Manager"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:24:55",
    "text": "that opens the theme settings page, which allowed me to edit the colors, etc."
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:25:25",
    "text": "but where are these changes stored in the filesystem? I don’t see any changes to the files in the parent OR child theme, so these changes can’t be synced locally"
  },
  {
    "text": "these settings, in this case:",
    "time_stamp": "2024-05-21 12:26:00"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:26:39",
    "text": "I changed these, but the fields.json in the parent theme doesn’t change (nor should it), and there’s not a fields.json file created when you clone a theme to a child theme"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:26:58",
    "text": "so, I clicked the ‘Copy theme settings’ button in the above screenshot"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:27:16",
    "text": "which copies a fields.json file to the clipboard (or seems to)"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:27:37",
    "text": "but when I create a new local fields.json and paste the contents into it and try to upload back to HubSpot, I get errors"
  },
  {
    "text": "here’s the call stack:",
    "time_stamp": "2024-05-21 12:28:10"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:30:04",
    "text": "moreover, in the parent theme I’ve turned on custom fonts"
  },
  {
    "text": "",
    "time_stamp": "2024-05-21 12:30:36"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 12:30:57",
    "text": "and that updates the fields.json in various ways, but mostly here:"
  },
  {
    "text": "",
    "time_stamp": "2024-05-21 12:32:09"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2024-05-21 16:33:39",
    "edited": {
      "time_stamp": "2024-05-21 16:49:16"
    },
    "text": "<@U074DEHAXMK> unfortunately they are not stored anywhere you can access them. They are stored in the portal and the fields.json file is never actually changed. Updating fields.son only changes the default values\n\nI'm the Lead Developer on Sprocket Rocket, what are you trying to accomplish? I may be able to help :slightly_smiling_face:",
    "reply_count": 55,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-05-21 18:12:30"
      },
      {
        "time_stamp": "2024-05-21 18:17:21"
      },
      {
        "time_stamp": "2024-05-21 18:17:43"
      },
      {
        "time_stamp": "2024-05-21 18:18:12"
      },
      {
        "time_stamp": "2024-05-21 18:22:01"
      },
      {
        "time_stamp": "2024-05-22 11:09:24"
      },
      {
        "time_stamp": "2024-05-22 11:09:49"
      },
      {
        "time_stamp": "2024-05-22 11:09:59"
      },
      {
        "time_stamp": "2024-05-22 11:10:09"
      },
      {
        "time_stamp": "2024-05-22 11:11:56"
      },
      {
        "time_stamp": "2024-05-22 11:11:58"
      },
      {
        "time_stamp": "2024-05-22 11:12:02"
      },
      {
        "time_stamp": "2024-05-22 11:12:24"
      },
      {
        "time_stamp": "2024-05-22 11:12:41"
      },
      {
        "time_stamp": "2024-05-22 11:14:05"
      },
      {
        "time_stamp": "2024-05-22 11:14:07"
      },
      {
        "time_stamp": "2024-05-22 11:18:32"
      },
      {
        "time_stamp": "2024-05-22 11:22:18"
      },
      {
        "time_stamp": "2024-05-22 11:23:45"
      },
      {
        "time_stamp": "2024-05-22 11:24:59"
      },
      {
        "time_stamp": "2024-05-22 11:26:30"
      },
      {
        "time_stamp": "2024-05-22 11:27:25"
      },
      {
        "time_stamp": "2024-05-22 11:30:55"
      },
      {
        "time_stamp": "2024-05-22 11:32:19"
      },
      {
        "time_stamp": "2024-05-22 11:34:37"
      },
      {
        "time_stamp": "2024-05-22 11:35:43"
      },
      {
        "time_stamp": "2024-05-22 11:35:45"
      },
      {
        "time_stamp": "2024-05-22 11:35:59"
      },
      {
        "time_stamp": "2024-05-22 11:44:08"
      },
      {
        "time_stamp": "2024-05-22 11:48:54"
      },
      {
        "time_stamp": "2024-05-22 11:49:32"
      },
      {
        "time_stamp": "2024-05-22 11:49:33"
      },
      {
        "time_stamp": "2024-05-22 11:50:12"
      },
      {
        "time_stamp": "2024-05-22 11:51:14"
      },
      {
        "time_stamp": "2024-05-23 11:06:37"
      },
      {
        "time_stamp": "2024-05-23 11:07:19"
      },
      {
        "time_stamp": "2024-05-23 11:07:34"
      },
      {
        "time_stamp": "2024-05-23 11:07:53"
      },
      {
        "time_stamp": "2024-05-23 11:08:00"
      },
      {
        "time_stamp": "2024-05-23 11:08:27"
      },
      {
        "time_stamp": "2024-05-23 11:08:29"
      },
      {
        "time_stamp": "2024-05-23 11:08:51"
      },
      {
        "time_stamp": "2024-05-23 11:09:13"
      },
      {
        "time_stamp": "2024-05-23 11:10:29"
      },
      {
        "time_stamp": "2024-05-23 11:11:20"
      },
      {
        "time_stamp": "2024-05-23 11:12:05"
      },
      {
        "time_stamp": "2024-05-23 11:35:08"
      },
      {
        "time_stamp": "2024-05-23 13:33:24"
      },
      {
        "time_stamp": "2024-05-24 12:21:30"
      },
      {
        "time_stamp": "2024-05-24 12:23:01"
      },
      {
        "time_stamp": "2024-05-24 13:01:05"
      },
      {
        "time_stamp": "2024-05-24 13:10:07"
      },
      {
        "time_stamp": "2024-05-24 13:16:00"
      },
      {
        "time_stamp": "2024-05-28 10:54:06"
      },
      {
        "time_stamp": "2024-05-29 04:18:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2024-05-21 16:44:37",
    "text": "As for the CLI error - it seems that you haven't set up the font settings"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2024-05-21 16:45:10",
    "text": "also: the child themes do not need a fields.json since they \"rely\" on the fields of the parent",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-05-21 18:07:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2024-05-21 16:46:36",
    "text": "if you create a fields.json in the child ( which is possible) it might lead to errors since it'll be a different path"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 18:07:49",
    "text": "I did. I added a /fonts directory to the parent theme as well as a _fonts.css file overriding everything relevant. No dice."
  },
  {
    "poster": {
      "poster_name": "Mike Eastwood",
      "poster_handle": "mike330"
    },
    "time_stamp": "2024-05-21 18:09:31",
    "text": "Ok, it's official, for Portal-iQ to publish Apps and Themes I need two separate accounts. The Theme Developer account has a CRM so now Portal-iQ has:\n1. a HubSpot Account to run the business (CRM, Website, Payments, etc.)\n2. a HubSpot Account to publish Apps to the Marketplace (Apps, Test Accounts and Listings)\n3. a HubSpot Account to publish Themes to the Marketplace (CRM, Payments, Themes, Custom Modules, Test Accounts and Listings)\nHere's the soundtrack for this rant: <https://www.youtube.com/watch?v=3z0E8TNFp1g&amp;t=68s>"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 18:12:30",
    "edited": {
      "time_stamp": "2024-05-21 18:23:57"
    },
    "text": "Great! Thanks. Here’s what I’m trying to accomplish:\n• simple SR child theme, specifically using the blog template. Nothing else, no customizations, just boilerplate at this point.\n• Using HubSpot CLI to develop locally, but also occasionally use the Design Manager UI to update things\n• I want to change the defaults for both the colors and fonts of the child theme\n• I cloned the ‘sr’ theme into a child theme using the Design Manager\n• I changed my blog post template to point to the newly-created child theme the UI/Design Manager\n• Clicked on ‘Edit Settings’ under the blog post template setting to edit the child theme (to ensure ‘Test Mode’ was off)\n• changed primary color in the UI\n• how do I get those changes to the CLI client? I have no record of them there since they’re only seemingly in the portal\n• If I want to change the font, how do I do it? Using your instructions for custom fonts it’s unclear if the changes should be made to the child them (if it exists) or only the parent"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 18:17:21",
    "text": "Also, the docs RE custom fonts on your site are very confusing mentioning ‘search for _fonts.css’ which doesn’t exist? Here: <https://docs.sprocketrocket.co/theme/custom-fonts>"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 18:17:43",
    "text": "That page says, “To begin, search for *_fonts.css* and click on it.”"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-21 18:18:12",
    "text": "but that file doesn’t exist anywhere unless you create it. But you don’t say where or IF to create it"
  },
  {
    "text": "",
    "time_stamp": "2024-05-21 18:22:01"
  }
]
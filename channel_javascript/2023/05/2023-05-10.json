[
  {
    "poster": {
      "poster_name": "Yeu-Kang Hua",
      "poster_handle": "yeu-kang.hua"
    },
    "time_stamp": "2023-05-10 02:54:38",
    "text": "Does anybody know if you can query GraphQL via Javascript? Is there an HubSpot API endpoint we can post to?",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-05-10 04:51:45"
      },
      {
        "time_stamp": "2023-05-10 07:04:28"
      },
      {
        "time_stamp": "2023-05-10 07:59:07"
      },
      {
        "time_stamp": "2023-05-10 08:37:47"
      },
      {
        "time_stamp": "2023-05-10 08:38:21"
      },
      {
        "time_stamp": "2023-05-10 08:40:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 04:51:45",
    "edited": {
      "time_stamp": "2023-05-10 04:53:05"
    },
    "text": "<@UPK28EM89> you can use axios library which is available in HubSpot to send a GraphQL query to a HubSpot endpoint:\n\n```const axios = require('axios');\n\nconst token= 'your-private-app-token';\nconst query = `\n  query {\n    company(id: \"company-id-here\") {\n      name\n      industry\n      contacts {\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\n\nconst headers = {\n  'Content-Type': 'application/json',\n   Authorization: `Bearer ${token}`\n};\n\n<http://axios.post|axios.post>('<https://api.hubapi.com/graphql>', { query }, { headers })\n  .then(response =&gt; console.log(response.data))\n  .catch(error =&gt; console.error(error));```"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 06:08:36",
    "edited": {
      "time_stamp": "2023-05-10 06:20:01"
    },
    "text": "Hey <@U057DHLS75W> I created this video for you check it out:\n<https://www.loom.com/share/3892b15cbbfe4540bf7875e25cd60060>"
  },
  {
    "text": "here is what you need to add inside your Footer HTML in the page Settings, remember to change my button id with yours check the image:\n```&lt;script&gt;\n  // grab learn more button\n  const learnMoreButton = document.querySelector(\"#hs-button_widget_1683718621508\");\n  \n  // add event listener\n  learnMoreButton.addEventListener(\"click\", () =&gt; {\n    // open the chat-bot\n    window.HubSpotConversations.widget.open();\n  })\n\n&lt;/script&gt;```",
    "time_stamp": "2023-05-10 06:12:44"
  },
  {
    "text": "Here is what you need to add to your button URL inside the page editor:\n\n#hs-chat-open",
    "time_stamp": "2023-05-10 06:13:30"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 06:14:14",
    "text": "Please let me know if you can follow along in the video, if not shoot me a zoom link or something I can explain it better for you."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2023-05-10 07:04:28",
    "text": "The endpoint and GraphQL documentation can be found here <https://developers.HubSpot.com/docs/cms/data/query-HubSpot-data-using-graphql#use-a-graphql-query-in-an-api-request>\n\nThe endpoint path is `<https://api.hubapi.com/collector/graphql>`"
  },
  {
    "poster": {
      "poster_name": "Yeu-Kang Hua",
      "poster_handle": "yeu-kang.hua"
    },
    "time_stamp": "2023-05-10 07:59:07",
    "text": "Thanks for the answers!"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2023-05-10 08:37:47",
    "text": "What are you building <@UPK28EM89>?"
  },
  {
    "poster": {
      "poster_name": "Yeu-Kang Hua",
      "poster_handle": "yeu-kang.hua"
    },
    "time_stamp": "2023-05-10 08:38:21",
    "text": "We’re trying out GraphQL to fetch deal with contact and line item associations"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2023-05-10 08:40:52",
    "text": "Cool, should be perfect for that. Share what you build when you make it or if you run into any issues."
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 08:53:42",
    "text": "You are truly amazing <@U0572Q18XLG>! Thank you for taking the time to show me this. Here's the page I applied the action to: <https://go.livplasticsurgery.com/en-us/hair-transplant>"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:00:05",
    "text": "Let’s go!!! Haha team work makes the dream work!!! Good job :+1:  "
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 09:03:11",
    "text": "If you ever need help with anything design or animation related, don't hesitate to reach out. I'd be glad to help you. I appreciate teachers, because I am one myself!\n<http://www.youtube.com/angelomontilla|www.youtube.com/angelomontilla>\n\nThank you again! :pray:"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:08:36",
    "text": "<@U057DHLS75W> oh wow that’s awesome, subscribing right away, and will do boss :saluting_face:  thank you for sharing this!!! "
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 09:18:44",
    "text": "Thanks <@U0572Q18XLG>!\n\nOne last thing: If I change the text of the cta button, to say \"Let's Chat\" or \"Start Today\", does the code would look like this?\n\n&lt;script&gt;\n  // grab let's chat button\n  const let'schatButton = document.querySelector(\"#hs-button_module_1678210131844\");\n\n  // add event listener\n  let'schatButton.addEventListener(\"click\", () =&gt; {\n    // open the chat-bot\n    window.HubSpotConversations.widget.open();\n  })\n\n&lt;/script&gt;\n\nOR\n\n&lt;script&gt;\n  // grab start today button\n  const starttodayButton = document.querySelector(\"#hs-button_module_1678210131844\");\n\n  // add event listener\n  starttodayButton.addEventListener(\"click\", () =&gt; {\n    // open the chat-bot\n    window.HubSpotConversations.widget.open();\n  })\n\n&lt;/script&gt;"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:27:57",
    "text": "Oh we can change the text all we want the script should be the same nothing changes. I just name the variable learnMoreButton for you to relate hehe. What you need to be careful is when declaring your button variable in the script for example const let'schatButton will throw an error. So you could change the text of the button and leave the script as you have it right now"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:33:14",
    "text": "<@U057DHLS75W> you don't need to name your variable the same as the text. It helps to have descriptive variable names, for example I use the learnMoreButton to represent our learn more button we were grabbing but I could've name the variable const princessFiona and the script would've run the same lol."
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:37:40",
    "edited": {
      "time_stamp": "2023-05-10 09:37:53"
    },
    "text": "So basically the second script you wrote will work the first one won't because of the apostrophe on: let*'*s"
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 09:37:59",
    "text": "Ahhh so to remain consistent, I can call the variable names all triggerButton for consistency. That's good to know!"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:41:43",
    "text": "Well is a more than that, to remain consistent just be descriptive but be aware if you have the same variable name through out your script could be confusing and they may override eachother lol."
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 09:45:27",
    "text": "So I have applied the code to 5 landing pages, but changed the ID for each. They all seem to work just fine."
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:46:38",
    "text": "Oh yes for sure to different pages that would do the magic since you are only selecting the particular button. Great job!!"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:49:13",
    "text": "Now for future references if you had multiple buttons that needed to be grabbed in the same page in your script tag, then you will give them unique variable names to all of them so they don't override eachother"
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 09:51:26",
    "text": "Ahh yes I understand now. As of now we just wanted to have that chat bot triggered. Do you know how we added the #hs-chat-open URL command? What other URL commands are there like this?"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:55:51",
    "text": "Oh that's so when we click the button it does not take you to the url so check the url in your page before clicking the button and check it after, see how it adds the #hs-chat-open at the end?"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:56:09",
    "text": "without it it will just open another page"
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 09:57:45",
    "text": "Yes perfect. There's one instance where I can only launch the chat bot once. If I close the bot and click learn more again, it doesn't launch. Do you you know why?\n\n<https://go.livplasticsurgery.com/en-us/breast-augmentation>"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 09:59:18",
    "text": "oh let me check it out"
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 10:00:07",
    "text": "The others work fine"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 10:24:13",
    "edited": {
      "time_stamp": "2023-05-10 10:25:24"
    },
    "text": "<@U057DHLS75W> instead of adding try setting up the onclick attribute like this just on the page that is giving us trouble:\n\n```&lt;script&gt;\n  // grab button\n  const triggerButton= document.querySelector(\"#hs-button_module_1677365334838\");\n  // add onclick attribute to open chatbot\n  triggerButton.setAttribute(\"onclick\",\"window.HubSpotConversations.widget.open();\")\n&lt;/script&gt;```"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 10:25:52",
    "text": "so get rid of the script you have in there now and add this one instead see if it fixes it"
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 10:36:14",
    "text": "It works!"
  },
  {
    "poster": {
      "poster_name": "Angelo Montilla",
      "poster_handle": "angelo.montilla"
    },
    "time_stamp": "2023-05-10 10:37:44",
    "text": "So no event listener in this case? Is this a better way or just another way of doing this? lol"
  },
  {
    "poster": {
      "poster_name": "Alejandro Rodriguez",
      "poster_handle": "alerodriguezlarosa"
    },
    "time_stamp": "2023-05-10 11:08:53",
    "text": "Hey <@U057DHLS75W> sorry I was on my lunch break, and basically I couldn't find the issue so I just went ahead and setup the onclick attribute to open the chat-bot instead. The button is still listening for the click event but this is just another way of adding it. I personally like adding the event listener more then setting the inline attribute since I have more control, with inline we may only have one assigned and can be overwritten but I just couldn't find why the event was not firing again and when I came back you had already updated the page hehe so ooppss there goes my chance to re-invent the wheel lol. But glad that it works!"
  }
]
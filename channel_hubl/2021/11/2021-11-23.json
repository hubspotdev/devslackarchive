[
  {
    "poster": {
      "poster_name": "Sari",
      "poster_handle": "sari.myllynen"
    },
    "time_stamp": "2021-11-23 01:42:02",
    "text": "no"
  },
  {
    "poster": {
      "poster_name": "Sari",
      "poster_handle": "sari.myllynen"
    },
    "time_stamp": "2021-11-23 01:44:51",
    "text": "like this\n```function remove_currency_symbol(price) {\n  currency_symbols = # Get list of currency symbols from somewhere... Direct reference preferred\n  for currency_symbol in currency_symbols: \n    price = price|replace(currency_symbol, '')\n  price = price|trim # Remove possible white space from price\n  return price\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Sari",
      "poster_handle": "sari.myllynen"
    },
    "time_stamp": "2021-11-23 01:47:35",
    "text": "i have this problem Custom Quote"
  },
  {
    "poster": {
      "poster_name": "Sari",
      "poster_handle": "sari.myllynen"
    },
    "time_stamp": "2021-11-23 01:48:32",
    "text": "```someone wants no currencies to come```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2021-11-23 03:22:28",
    "text": "I’m sorry, I saw a hubl string and tried to solve that. I don’t know what you are attempting to do"
  },
  {
    "poster": {
      "poster_name": "Sari",
      "poster_handle": "sari.myllynen"
    },
    "time_stamp": "2021-11-23 03:46:35",
    "text": ":disappointed_relieved:"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-11-23 06:53:56",
    "text": "use a regex replace in whatever lang you’re using"
  }
]
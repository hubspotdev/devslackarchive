[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-11 07:48:44",
    "text": "you can technically “scope” it if your css is in the html/hubl section/file of the module.\n\njust use `{{ name }}` (generated id)\n```{% require_css %}\n&lt;style&gt;\n  {{ name }} h2 {\n    font-family: 'comic sans'\n  }\n&lt;/style&gt;\n{% end_require_css %}```"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-11 07:49:55",
    "edited": {
      "time_stamp": "2020-02-11 07:50:10"
    },
    "text": "You can use `{{ id }}` as well"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-11 07:50:35",
    "text": "Name could have spaces"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-11 07:51:30",
    "text": "But that isn't my favorite way cause it doesn't get concantinated with the other was files"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-11 08:05:13",
    "edited": {
      "time_stamp": "2020-02-11 08:05:37"
    },
    "text": "yeah, I only use this technique for dynamic styles… not really scoping.\n\nRegarding this scoping idea… If styles were to be scoped to a module, and the module were to be used 20 times on the page, wouldn’t there be 20 stylesheets (1 per module)? Unless I’m not understanding this, it kinda seems like a poor tradeoff to me"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-11 08:07:19",
    "text": "I’d just name prefix it and use BEM, then call it a day"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-11 08:07:50",
    "text": "If the scoping was done inside the CSS block then you could do that but if it's done inside the HTML block then yeah you get CSS for every instance of the module"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-11 08:08:02",
    "text": "But that's no different than today"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-02-11 08:09:47",
    "text": "whoa, that's pretty cool thanks <@U3T21PDBK>!"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-02-11 08:10:44",
    "text": "regarding the 20 modules on a page issue, i think the scoping should maybe be off by default (especially for styles) but make it an option in the advanced settings of the module somewhere."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2020-02-11 08:11:05",
    "text": "more of a nice to have, not really necessary"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-11 08:27:05",
    "text": ":point_up:"
  }
]
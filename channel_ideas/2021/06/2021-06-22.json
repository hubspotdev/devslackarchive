[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-06-22 09:28:35",
    "text": "it would be stellar to have a `loop.total_depth` property to access. I know `loop.depth` exists, but it only shows the current iteration of the loop, I want to see the actual depth",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-06-22 09:32:40"
      },
      {
        "time_stamp": "2021-06-22 12:33:40"
      },
      {
        "time_stamp": "2021-06-22 13:09:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-22 09:32:40",
    "text": "We have `loop.length` wouldn’t that be the same thing?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-06-22 12:33:40",
    "edited": {
      "time_stamp": "2021-06-22 13:06:06"
    },
    "text": "It only shows the current iteration. So if I wanted to see how deep an `{{ items }}` array goes, then I’d have to\n1. create an empty array `{% set foo_count = [] %}` \n2. iterate over `{{ items }}` and push the current depth to it `{% do foo_count.append( loop.index ) %}`\n3. then get the highest / last number appended `{{ foo_count|sort(0,0)|last }}`\nIt would be amazing not to have to go through all this to find the deepest level of an array"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-06-22 13:09:17",
    "text": "actually the hypothetical code above is not really possible on a practical level cause devs would not know how many times to loop"
  }
]
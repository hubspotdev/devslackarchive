[
  {
    "poster": {
      "poster_name": "Robert Gonzalez",
      "poster_handle": "robert"
    },
    "time_stamp": "2021-06-01 07:26:13",
    "text": "Hi all! I'm creating a new theme using the CMS boilerplate and I noticed the blog listing template now uses dnd_areas. Is there some kind of new listing page editing experience I am not aware of? If so, can someone point me in the right direction to find it?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-06-01 07:44:02"
      },
      {
        "time_stamp": "2021-06-01 08:18:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Robert Gonzalez",
      "poster_handle": "robert"
    },
    "time_stamp": "2021-06-01 07:28:27",
    "text": "Woops, spoke too soon. Just saw a message saying this is a beta feature. Could someone at HS message me so I can get access?"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2021-06-01 07:44:02",
    "text": "CC: <@U6W3H6YN8>"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2021-06-01 08:18:49",
    "text": "I will send you a DM <@UDJMFTHAS>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-06-01 14:03:47",
    "text": "Why doesn't the standard boilerplate concatenate CSS from modules into the main CSS file? For some reason, I thought that HubSpot did that but now I'm second guessing myself.",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-06-01 16:07:45"
      },
      {
        "time_stamp": "2021-06-01 16:15:56"
      },
      {
        "time_stamp": "2021-06-01 16:16:01"
      },
      {
        "time_stamp": "2021-06-01 16:17:55"
      },
      {
        "time_stamp": "2021-06-02 12:01:54"
      },
      {
        "time_stamp": "2021-06-02 12:02:30"
      },
      {
        "time_stamp": "2021-06-02 12:05:09"
      },
      {
        "time_stamp": "2021-06-02 16:51:06"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2021-06-01 14:04:22"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-06-01 14:04:50",
    "text": "and does it have anything to do with this occasional warningL"
  },
  {
    "text": "",
    "time_stamp": "2021-06-01 14:04:55"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-06-01 14:05:07",
    "text": "(this is from demo CMS link) <https://boilerplate.HubSpotcms.com/>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-06-01 14:10:19",
    "text": "The latest plan is to try to build a global \"search\" module that uses the search API and either React/Vue"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-01 16:07:45",
    "edited": {
      "time_stamp": "2021-06-01 16:10:13"
    },
    "text": "Generally speaking it’s not the best practice to do that for performance so we don’t.\n\nThanks to HTTP 2 the way you should think about your CSS has changed from the days of monolithic files. Browsers can request multiple assets at once.\n\nFirst and foremost when optimizing the speed of your css you should - only load css that’s actually needed to render the page. If you load CSS that isn’t used on the page that’s extra file size, and extra CSS processing in the browser that doesn’t need to happen.\n\nYour files should be cacheable, so if you navigate to a subsequent page - anything that was previously loaded should be pulled from cache so you only have a minimal amount of CSS to fetch.\n\nIn other words if you have 10 modules on your homepage, and a visitor navigates there. Then they click a link to go to your about page. The about page has some of the same modules as the homepage, plus 1 new one the visitor hasn’t seen. Instead of downloading  MB of CSS they get a tiny few kb css file containing only the CSS for the new module. Everything else is returned from cache making loading incredibly fast.\n\nNow there is further optimization you can do. If you have modules that are frequently always loaded together, you could put those in a shared stylesheet that you either load using require_css or an attached stylesheet to the module. A prime example of this are your site’s header and footer modules. If these modules are always used together, then why not bundle their css.  This will save some separate requests.\n\nSimilarly if you have CSS classes that you share across modules you should do the same vs repeating CSS in each module."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-06-01 16:15:56",
    "text": "1. Thank you for the detailed reply. \n2. Damn it! I just combined my CSS again and now I need to undo. :slightly_smiling_face: \n3. I'm going to save this response somewhere so I can have a good answer when someone complains\n4. I have a rather large \"template.css\" file that I think I can split into 2 files to prevent additional load time on subsequent pages \n5. All of the difficult/annoying webpack setup I've done recently related to being able to keep the original HubSpot file structure. #2 again. "
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-01 16:16:01",
    "text": "more performance tips can be found at: <https://developers.HubSpot.com/docs/cms/guides/speed>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-06-01 16:17:55",
    "text": "I really need to update that old popular forum post with this info..."
  }
]
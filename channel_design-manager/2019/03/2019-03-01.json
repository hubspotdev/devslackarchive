[
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-01 07:12:03",
    "text": "<@UCY83QS6Q> The field wont let me reset it back to null/empty"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2019-03-01 08:50:19",
    "text": "Got it. While I totally agree that this UX is wonky and needs much improvement, the original _intention_ (I believe) was to let default values that come from `getComputedStyle` “flow through” so you can see them.\n\nUnder the covers _I think_ when you hit backspace that last time the data under the covers is null/empty. But the problem is that we don’t have a UI state for that color picker that shows a faded out placeholder (like we are showing for the gray-ed out text in font size or line height in your video)"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2019-03-01 08:50:59",
    "text": "<@U38EZFVFE> Thanks again for pointing out the feedback, something we totally need to improve!"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-01 08:52:27",
    "text": ":thumbsup_all:"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-01 11:34:55",
    "text": "_Bug?_ Pre-selected `choice` fields are not rendering for custom modules on initial load. I have to change the radio button (option) for the value to reflect on the front end.\nAnyone else have this issue?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 11:35:35",
    "text": "yes had this issue but with the menu field, uses the same logic - annoying as all heck"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-03-01 14:22:32",
    "text": "Wondering for text fields in custom modules, can you do a character count display so User knows what the max character is?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-01 14:24:57"
      },
      {
        "time_stamp": "2019-03-01 14:25:19"
      },
      {
        "time_stamp": "2019-03-01 14:25:30"
      },
      {
        "time_stamp": "2019-03-01 14:26:05"
      },
      {
        "time_stamp": "2019-03-01 14:27:11"
      },
      {
        "time_stamp": "2019-03-01 14:28:43"
      },
      {
        "time_stamp": "2019-03-01 14:29:03"
      },
      {
        "time_stamp": "2019-03-01 14:29:15"
      }
    ]
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2019-03-01 14:24:57",
    "text": "unfortunately not at this time"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 14:25:19",
    "text": "you could give them placeholder/default text that helps clarify it"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-03-01 14:25:30",
    "text": "ah ok thanks"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-03-01 14:26:05",
    "text": "no way with jquery to target the input field to dynamically change a &lt;span&gt; tag that sits next to the title of the field"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 14:27:11",
    "text": "it sits in an iframe, so no, but you can detect whether the page is being viewed in the page editor, and display something in the actual page  to alert the user they have too much text."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 14:28:43",
    "text": "I haven’t used it in a little while but the class you try to detect using JS in your page(or just do it completely with CSS) is `hs-inline-edit` I think and it gets applied to the html element"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-01 14:29:03",
    "text": "you’ll want to verify that by inspecting your page within the page editor, that’s going off my memory"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-03-01 14:29:15",
    "text": "ok cool I verify, much appreciated"
  }
]
[
  {
    "poster": {
      "poster_name": "Jatin Sharma",
      "poster_handle": "jatin215"
    },
    "time_stamp": "2024-01-05 04:37:46",
    "text": "Hi Everyone,\nHow can i get the latest data at top from api `/crm/v3/objects/contacts`?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-05 06:38:50"
      },
      {
        "time_stamp": "2024-01-05 23:43:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lee McDonald",
      "poster_handle": "lee.mcdonald"
    },
    "time_stamp": "2024-01-05 06:38:50",
    "text": "Hey :wave:\n\nSorting isn’t possible using the Contacts API, but you can do this using the <https://developers.HubSpot.com/docs/api/crm/search|Search API >instead.\n\nSend a POST to `<https://api.hubapi.com/crm/v3/objects/contacts/search>`  and assuming you want to sort by `createdate`, send the following request body:\n\n```{\n    \"limit\": 100,\n    \"sorts\": [\n      {\n        \"propertyName\": \"createdate\",\n        \"direction\": \"DESCENDING\"\n      }\n    ]\n}```\nThis will return the last 100 created Contacts. If you want to sort by `lastmodifieddate`  replace the propertyName with that instead."
  },
  {
    "poster": {
      "poster_name": "Fabian Glaw",
      "poster_handle": "fabian643"
    },
    "time_stamp": "2024-01-05 07:25:23",
    "text": "Hello there, I am doing some custom coded workflows where I access the hubdb to make some changes.\none of the apicalls:\n```HubSpotClient.apiRequest({\n      method: \"PUT\",\n      path: `/cms/v3/hubdb/tables/${dbId}/rows/${element[\"id\"]}/draft`,\n      body: {\n        values: element[\"values\"],\n      },\n    });\n  });```\nso later I run into issues with follow up action as the changes are not published. So my question is how can I publish the draft version of the hubdb? Or push the changes live right away?\nthank you a lot",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-05 07:26:59"
      },
      {
        "time_stamp": "2024-01-05 11:01:24"
      },
      {
        "time_stamp": "2024-01-05 11:03:04"
      },
      {
        "time_stamp": "2024-01-08 01:13:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Fabian Glaw",
      "poster_handle": "fabian643"
    },
    "time_stamp": "2024-01-05 07:26:59",
    "text": "in the doc it says\nDraft data can be reviewed and then pushed in HubSpot, or with the `/push-live` endpoint.\nBut there is no example and what method should be used. mayebe somebody has an example for me?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 08:04:24",
    "text": "Sorry man, looked up the docs but then forgot why I had grabbed the docs: <https://developers.HubSpot.com/docs/api/crm/imports>"
  },
  {
    "text": "Is there a way to build an app for reading content only with the API and no write permissions? This is what I have.",
    "time_stamp": "2024-01-05 08:10:11",
    "reply_count": 12,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-05 10:59:35"
      },
      {
        "time_stamp": "2024-01-05 11:01:22"
      },
      {
        "time_stamp": "2024-01-05 11:03:30"
      },
      {
        "time_stamp": "2024-01-05 11:03:59"
      },
      {
        "time_stamp": "2024-01-05 11:04:36"
      },
      {
        "time_stamp": "2024-01-05 11:04:44"
      },
      {
        "time_stamp": "2024-01-05 11:05:07"
      },
      {
        "time_stamp": "2024-01-05 11:05:52"
      },
      {
        "time_stamp": "2024-01-05 11:07:19"
      },
      {
        "time_stamp": "2024-01-05 11:07:57"
      },
      {
        "time_stamp": "2024-01-05 11:15:03"
      },
      {
        "time_stamp": "2024-01-05 11:29:17"
      }
    ]
  },
  {
    "text": "Hi Folks ,  I am trying to extract the marketing data from HubSpot using python , most of the places I have seen use example for extacting contacts data but none talk about how to do for marketing , in marketing for example i need Marketing Ads, email , Website SEO for eg. I need to export this data as an example below using python API (or in an automatic fashion)",
    "time_stamp": "2024-01-05 09:57:36",
    "reply_count": 25,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-05 14:16:26"
      },
      {
        "time_stamp": "2024-01-05 14:17:36"
      },
      {
        "time_stamp": "2024-01-05 14:17:48"
      },
      {
        "time_stamp": "2024-01-05 14:17:49"
      },
      {
        "time_stamp": "2024-01-05 14:18:15"
      },
      {
        "time_stamp": "2024-01-05 14:18:56"
      },
      {
        "time_stamp": "2024-01-05 14:18:57"
      },
      {
        "time_stamp": "2024-01-05 14:19:16"
      },
      {
        "time_stamp": "2024-01-05 14:19:27"
      },
      {
        "time_stamp": "2024-01-05 14:21:13"
      },
      {
        "time_stamp": "2024-01-05 14:21:32"
      },
      {
        "time_stamp": "2024-01-05 14:21:40"
      },
      {
        "time_stamp": "2024-01-05 14:21:52"
      },
      {
        "time_stamp": "2024-01-05 14:25:46"
      },
      {
        "time_stamp": "2024-01-05 14:27:22"
      },
      {
        "time_stamp": "2024-01-05 14:28:34"
      },
      {
        "time_stamp": "2024-01-05 14:40:13"
      },
      {
        "time_stamp": "2024-01-29 23:35:50"
      },
      {
        "time_stamp": "2024-01-30 06:56:58"
      },
      {
        "time_stamp": "2024-01-30 06:57:46"
      },
      {
        "time_stamp": "2024-01-30 16:36:31"
      },
      {
        "time_stamp": "2024-01-30 16:44:26"
      },
      {
        "time_stamp": "2024-01-30 20:26:43"
      },
      {
        "time_stamp": "2024-01-30 20:41:33"
      },
      {
        "time_stamp": "2024-02-11 21:55:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 10:59:35",
    "text": "<@U06513F6DTL> that looks right. Did you test it out?"
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2024-01-05 11:01:22",
    "text": "I tested calling the v2/pages API which is all it needs to do (I removed hubdb). But I want to make sure that settings doesn't allow access to edit content or something else I don't know about.  <https://legacydocs.HubSpot.com/docs/methods/pages/get_pages_page_id>"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 11:01:24",
    "text": "<@U029WCYHMDL> you need to do a POST request to the {table} to publish the draft.\n\n`/cms/v3/hubdb/tables/${dbId}/draft/publish`"
  },
  {
    "text": "",
    "time_stamp": "2024-01-05 11:03:04"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 11:03:30",
    "text": "that scope does allow editing."
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2024-01-05 11:03:59",
    "text": "What I'm attempting to do is to use this API as a headless solution to display some content in an app."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 11:04:36",
    "text": ":boom: awesome idea"
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2024-01-05 11:04:44",
    "text": "So we would need to run this through a server to protect the auth token?"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 11:05:07",
    "text": "I wouldn’t recommend doing this in a private app. You’ll probably hit the API limit."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 11:05:52",
    "text": "Yes, I would run it through a middleman, one for caching, and two to handle changing in the API without dealing with App store updates."
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2024-01-05 11:07:19",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 11:07:57",
    "text": "Yup! We did this with a WordPress Plugin to sync down Blog content, landing pages, and forms to be all native within the WP Admin."
  },
  {
    "poster": {
      "poster_name": "Tim Flaspoler",
      "poster_handle": "tflaspoehler"
    },
    "time_stamp": "2024-01-05 11:15:03",
    "text": "Thanks again. We're trying to evaluate moving ~5+ sites over to HubSpot so I'm trying to cover all scenarios."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-01-05 11:29:17",
    "text": "Let me know if you need any other help or assistances"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tommymartinez1363"
    },
    "time_stamp": "2024-01-05 13:00:04",
    "text": "Hi everyone, I am using the <https://developers.HubSpot.com/docs/api/conversations/conversations|HubSpot API> on a custom chatbot. Using the API, I want the user to be able to chat to our employees.\nThe problem is it that I can only do this if I have a threadID. I read that the API can't create threads. Is there anywork arounds or other ways to achieve this? Thanks!",
    "reply_count": 18,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-01-05 13:02:12"
      },
      {
        "time_stamp": "2024-01-05 13:02:50"
      },
      {
        "time_stamp": "2024-01-05 13:07:30"
      },
      {
        "time_stamp": "2024-01-05 13:08:25"
      },
      {
        "time_stamp": "2024-10-22 14:27:27"
      },
      {
        "time_stamp": "2024-10-22 16:15:11"
      },
      {
        "time_stamp": "2024-10-23 09:25:22"
      },
      {
        "time_stamp": "2024-10-23 09:26:32"
      },
      {
        "time_stamp": "2024-10-23 10:19:58"
      },
      {
        "time_stamp": "2024-10-23 10:44:28"
      },
      {
        "time_stamp": "2024-10-23 11:42:03"
      },
      {
        "time_stamp": "2024-10-23 11:42:32"
      },
      {
        "time_stamp": "2024-10-23 13:24:32"
      },
      {
        "time_stamp": "2024-10-24 06:48:09"
      },
      {
        "time_stamp": "2024-10-24 06:48:44"
      },
      {
        "time_stamp": "2024-10-24 07:59:56"
      },
      {
        "time_stamp": "2024-11-01 13:48:47"
      },
      {
        "time_stamp": "2024-11-04 08:03:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 13:02:12",
    "text": "Currently no good workarounds, you can programmatically send emails to the conversations inbox or submit ticket forms to create conversations but this is pretty hacky"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 13:02:50",
    "text": "<@U04B32JHTUZ> and the team are currently building out a couple of things for these types of use cases, and would probably love to hear what you want to build"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tommymartinez1363"
    },
    "time_stamp": "2024-01-05 13:07:30",
    "text": "Ah I see, thank you. Could I send an email to my all my clients, create a thread and leave it open, so that when they access through the chatbot I can redirect them to that thread?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 13:08:25",
    "text": "yeah I think that should work"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:16:26",
    "text": "<@U01QVR44MEY> can you please help me with the above issue"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:17:36",
    "text": "Currently this is really tough to do, basically impossible"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:17:48",
    "text": "SEO isn't tied to particular objects"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:17:49",
    "text": "`import requests`\n\nurl = \"<https://api.hubapi.com/ads/v3/campaigns>\"\n\n\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'authorization': \"Bearer TOKEN\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response)"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:18:15",
    "text": "i have tried this , but it gives 404 response"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:18:56",
    "text": "and what about marketing Ads and campaigns?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:18:57",
    "text": "yeah that endpoint doesn't exist"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:19:16",
    "text": "so how to look for the correct endpoint?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:19:27",
    "text": "What are you trying to pull?"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:21:13",
    "text": "total marketing contacts, marketing contacts by source.,email subscribers , marketing ad and campign data"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:21:32",
    "text": "you can pull all that with the search api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:21:40",
    "text": "<https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:21:52",
    "text": "Filter by marketing contact status"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:25:46",
    "text": "okay how to know what properties are associated with it for filtering , you mentioned contact status but for other data how to find out"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:27:22",
    "text": "I would check the property settings"
  },
  {
    "poster": {
      "poster_name": "Jui Guram",
      "poster_handle": "datawarehouse"
    },
    "time_stamp": "2024-01-05 14:28:34",
    "text": "Thanks i will check this out"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-05 14:40:13",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Olukunle",
      "poster_handle": "olukunle.ogunmokun"
    },
    "time_stamp": "2024-01-05 19:05:45",
    "edited": {
      "time_stamp": "2024-01-05 19:07:27"
    },
    "text": "Hi <@U049L2A5T71>\nAny luck solving this?\n\nThe issue I have with everyone's recommendation of using `SimplePublicObjectInput` is that it doesn't support association on the create request.\n\nMind sharing if you were able to get around this.\n\nIn my case, I'm trying to create a Deal with an association to a company and contact"
  },
  {
    "poster": {
      "poster_name": "Jatin Sharma",
      "poster_handle": "jatin215"
    },
    "time_stamp": "2024-01-05 23:43:58",
    "text": "Thank you <@U02M1607ZTK>"
  },
  {
    "poster": {
      "poster_name": "Kevin Wong",
      "poster_handle": "kevin143"
    },
    "time_stamp": "2024-01-06 00:14:31",
    "edited": {
      "time_stamp": "2024-01-06 00:16:18"
    },
    "text": "Hi all HubSpot developers,\n\nI am trying to do the refresh token with the following code, but got an 403 error:\n`{'status': 'BAD_HUB', 'message': 'missing or unknown hub id', 'correlationId': 'f8be782a-c3cf-4cbc-a063-134ec662d2bd'}`\n\nAnd here is the code used:\n```request_body = {\n    \"grant_type\": \"refresh_token\",\n    \"client_id\": HubSpot_GRATA_APP_CLIENT_ID,\n    \"client_secret\": HubSpot_GRATA_APP_CLIENT_SECRET,\n    \"refresh_token\": refresh_token,\n}\nheaders = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\nHubSpot_TOKEN_ENDPOINT=\"<https://api.hubapi.com/oauth/v1/token>\"\nresponse = requests.post(HubSpot_TOKEN_ENDPOINT, data=request_body, headers=headers)\n\n>>> print(response)\n<Response [403]>\n>>> print(response.json())\n{'status': 'BAD_HUB', 'message': 'missing or unknown hub id', 'correlationId': 'f8be782a-c3cf-4cbc-a063-134ec662d2bd'}\n>>> print(response.json())```\nAny idea?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-06 04:22:36"
      },
      {
        "time_stamp": "2024-01-06 08:25:23"
      },
      {
        "time_stamp": "2024-01-06 11:24:53"
      },
      {
        "time_stamp": "2024-01-06 12:41:01"
      },
      {
        "time_stamp": "2024-01-07 01:12:57"
      },
      {
        "time_stamp": "2024-01-07 03:03:51"
      },
      {
        "time_stamp": "2024-01-07 03:17:41"
      }
    ]
  }
]
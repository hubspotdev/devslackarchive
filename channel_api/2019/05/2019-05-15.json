[
  {
    "poster": {
      "poster_name": "Valon Breznica",
      "poster_handle": "valon.breznica"
    },
    "time_stamp": "2019-05-15 07:29:06",
    "text": "Just posted this same Q in <#C2YH119N2|hubl> by accident.\n\nIs there any tool out there to convert from :arrow_right: &lt;div class=\\\"collapsenavbar-collapsenavbar-ex1-collapse\\\"&gt;\\n  :arrow_left:to HTML and vice versa?"
  },
  {
    "poster": {
      "poster_name": "Valon Breznica",
      "poster_handle": "valon.breznica"
    },
    "time_stamp": "2019-05-15 07:29:24",
    "text": "Need to create templates using API"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-05-15 07:36:17",
    "text": "sounds like you need a function similar to this:  <https://css-tricks.com/snippets/javascript/unescape-html-in-js/>"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-05-15 08:13:11",
    "text": "<@UCV4WAGLC> Just went across all your docs and links. Those Higher functions are really great to manipulate responses from apis. But, I still have a question...\n\nthis code:\n```newData.forEach(item =&gt; {\n   <http://axios.post|axios.post>(url, config, item).then(res =&gt; {\n       console.log(\"...Done!\")\n   })\n});```\n\nIt could be use to directly create something new in the api you call each time there is a new value, but In my case I want to use what is mapped in ```newData``` to create the options of a \"enumeration\" property in HubSpot... I don't get how I could do this since there is not an api endpoint to create/update options of a property. Thanks for your help!"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-05-15 08:17:36",
    "text": "In fact, How do I use the .forEach method to pass the correct variables in that part of my code so the options \"label\" and \"value\" are mapped with my newData ```//====================================================//\n//   Post the list of programs to HubSpot             //\n//====================================================//\n\n// Creating an \"enumeration\" type contact property in HubSpot to store programs from the list retrieved from the external software \n\nconst createPrograms = async (accessToken) =&gt; {  console.log('Creating a property named programs');\n\nconst headers = {\n  Authorization: `Bearer ${accessToken}`,\n  'Content-Type': 'application/json'\n};\n\nconst program = {  headers: headers,  method: 'POST',  uri: '<https://api.HubSpot.com/properties/v1/contacts/properties>',  body: {      name: 'programs',      label: 'Programs',      description: 'programs in which the contact is enrolled',      groupName: 'group_of_properties',      type: 'enumeration',      fieldType: 'select',      options: [ // THIS IS WHERE I NEED HELP TO CREATE AS MANY OPTIONS AS CREATED REUSABLE VARIABLES\n        {\n          \"label\": programTitle,\n          \"value\": programId\n        },\n      ]\n  },  json: true // Automatically stringifies the body to JSON\n};```"
  },
  {
    "poster": {
      "poster_name": "Scott Burton",
      "poster_handle": "scott.burton"
    },
    "time_stamp": "2019-05-15 12:24:47",
    "text": "Cross-posting from <#C22PDRW72|data-driven-content>. We're just starting to see this error in a few deployed applications.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-15 12:26:50"
      },
      {
        "time_stamp": "2019-05-15 12:27:05"
      },
      {
        "time_stamp": "2019-05-15 12:36:27"
      },
      {
        "time_stamp": "2019-05-15 12:54:11"
      },
      {
        "time_stamp": "2019-05-15 12:55:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Burton",
      "poster_handle": "scott.burton"
    },
    "time_stamp": "2019-05-15 12:26:50",
    "text": "```POST /hubdb/api/v2/tables/ HTTP/1.1\nAuthorization: Bearer my-token-here Content-Type: application/json; charset=utf-8\nCookie: __cfduid=d38998d1a09f0fc27c95e5eaab0ab1f901557560161\nHost: <http://api.HubSpot.com|api.HubSpot.com>\nConnection: close\nUser-Agent: Paw/3.1.8 (Macintosh; OS X/10.12.6) GCDHTTPRequest\nContent-Length: 21\n\n{\"name\":\"test-table\"}\n\nHTTP/1.1 200 OK\nDate: Wed, 15 May 2019 17:38:00 GMT\nContent-Type: application/json;charset=utf-8\nTransfer-Encoding: chunked\nConnection: close\nX-Trace: 2B0B4C1B9372F7711ACE383E6ED5837563C5B6867E000000000000000000\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Methods: GET\nAccess-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Accept-Charset, Accept-Encoding\nStrict-Transport-Security: max-age=31536000; includeSubDomains; preload\nExpect-CT: max-age=604800, report-uri=\"<https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct>\"\nServer: cloudflare\nCF-RAY: 4d76e21139fa7782-LAX\n\n{\"id\":1042573,\"name\":\"test-table\",\"portalId\":4596001,\"createdAt\":1557941880562,\"publishedAt\":0,\"updatedAt\":0,\"columns\":[],\"cosObjectType\":\"HUBDB_TABLE\",\"deleted\":false,\"updated\":0,\"label\":\"test-table\",\"cdnPurgeEmbargoTime\":null,\"rowCount\":0,\"createdBy\":{\"id\":2005923,\"email\":\"<mailto:scott.burton@hyfn.com|scott.burton@hyfn.com>\",\"firstName\":\"Scott\",\"lastName\":\"Burton\"},\"useForPages\":false,\"allowChildTables\":false,\"enableChildTablePages\":false,\"dynamicMetaTags\":{},\"columnCount\":0,\"allowPublicApiAccess\":true}```\n\n```GET /hubdb/api/v2/tables/1042173?portalId=4596001 HTTP/1.1\nAuthorization: Bearer my-token-here Cookie: __cfduid=d38998d1a09f0fc27c95e5eaab0ab1f901557560161\nHost: <http://api.HubSpot.com|api.HubSpot.com>\nConnection: close\nUser-Agent: Paw/3.1.8 (Macintosh; OS X/10.12.6) GCDHTTPRequest\n\nHTTP/1.1 403 Forbidden\nDate: Wed, 15 May 2019 18:18:01 GMT\nContent-Type: application/json;charset=utf-8\nContent-Length: 350\nConnection: close\nX-Trace: 2B154CD1EEDFDFC4BC24D4B9154836330A313112AE000000000000000000\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Methods: GET\nAccess-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Accept-Charset, Accept-Encoding\nStrict-Transport-Security: max-age=31536000; includeSubDomains; preload\nExpect-CT: max-age=604800, report-uri=\"<https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct>\"\nServer: cloudflare\nCF-RAY: 4d771caddbf353c4-LAX\n\n{\"status\":\"error\",\"message\":\"This oauth-token (my-token-here) does not have proper permissions! (cannot access an unscoped endpoint)\",\"correlationId\":\"c83bbef5-2b41-4e7b-b427-ed870237f14c\",\"requestId\":\"12fabde662431ab7465a049a2cb5e9ef\"}```"
  },
  {
    "poster": {
      "poster_name": "Scott Burton",
      "poster_handle": "scott.burton"
    },
    "time_stamp": "2019-05-15 12:27:05",
    "text": "`my-token-here` obv there's a real token there"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-05-15 12:36:27",
    "text": "checking"
  },
  {
    "poster": {
      "poster_name": "Scott Burton",
      "poster_handle": "scott.burton"
    },
    "time_stamp": "2019-05-15 12:54:11",
    "text": "It appears the issue is that GET /tables/:table-id no longer allows an `Authorization:` header? If I remove the OAuth token from the GET request, it works"
  },
  {
    "poster": {
      "poster_name": "Scott Burton",
      "poster_handle": "scott.burton"
    },
    "time_stamp": "2019-05-15 12:55:26",
    "text": "that seems new - all of this worked until recently"
  },
  {
    "poster": {
      "poster_name": "Bill Martinez",
      "poster_handle": "billwmartinez"
    },
    "time_stamp": "2019-05-15 18:16:48",
    "text": "I tried using api tools and the parent company is read only via api or ui.  I opened a ticket with support and you have to use the ui and update one by one."
  }
]
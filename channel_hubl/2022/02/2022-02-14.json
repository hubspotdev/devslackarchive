[
  {
    "poster": {
      "poster_name": "Ville Pekkarinen",
      "poster_handle": "ville"
    },
    "time_stamp": "2022-02-14 07:27:44",
    "text": "There seems to be a largely undocumented `is_in_editor` var to check if user is in page editor. It gets a mention on modules page though. It actually returns false as opposed to null as seems to happen with `request.postDict.inPageEditorUI` which is nice."
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2022-02-14 07:31:53",
    "text": "how can i achieve <https://shopify.dev/api/liquid/filters/string-filters#handle-handleize|this type of filtering> (handle) with hubl? perhaps with regex_replace? it’d be awesome if there was a simple filter like this with hubl. my use case is turning strings into data-attributes/classes for filtering.",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-02-14 08:46:50"
      },
      {
        "time_stamp": "2022-02-14 08:48:47"
      },
      {
        "time_stamp": "2022-02-14 09:02:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-02-14 07:37:54",
    "text": "I’d also suggest that infinite scrolling is cool and all, but it is terrible for the user to get to the footer to go someplace else when they scroll to far and posts keep showing up"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-02-14 08:46:50",
    "text": "as far as I know there are not any native filters that replace special characters with hyphens. Your best bet is likely regex_replace as you had mentioned. Trim will aslo take care of the leading and closing whitespace."
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2022-02-14 08:48:47",
    "text": "thanks <@UQWGKUEN7>. i’ll give that a go!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-02-14 09:02:18",
    "text": "Correct, if you need anything beyond <https://developers.HubSpot.com/docs/cms/hubl/filters#urlencode|urlencode> then regex_replace will be the way to go"
  }
]
[
  {
    "poster": {
      "poster_name": "Simon Tuck",
      "poster_handle": "simon.tuck"
    },
    "time_stamp": "2021-09-03 01:23:46",
    "text": "Hi!\nWe're starting on theme development/customisation for a client and I'm wondering about best practice for local development. Specifically I can't see any workflow that allows for devs to work on their own branches and merge changes to be published. There appears to be only ever one version of the template code in HubSpot. For example, if I were developing in Shopify each dev can work on his/her own theme version which retains all of the content and content settings and can be previewed separately from the live version and the work of other devs. I see nothing like this in HubSpot. Anything that's published goes straight to the live theme and potentially overwrites the work of other devs. Am I missing something? Just curious, how do you guys have your dev workflow and HubSpot portal tooled when you have multiple devs working the same code base?\nThanks!",
    "reply_count": 8,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2021-09-03 02:51:11"
      },
      {
        "time_stamp": "2021-09-03 05:00:52"
      },
      {
        "time_stamp": "2021-09-03 06:44:24"
      },
      {
        "time_stamp": "2021-09-03 07:11:52"
      },
      {
        "time_stamp": "2021-09-03 07:52:33"
      },
      {
        "time_stamp": "2022-02-16 02:11:46"
      },
      {
        "time_stamp": "2022-02-16 02:12:44"
      },
      {
        "time_stamp": "2022-02-16 02:14:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2021-09-03 02:51:11",
    "edited": {
      "time_stamp": "2021-09-03 02:51:26"
    },
    "text": "Hey Simon, where I work we have a main branch which is the live version of the site and work on a module by module basis if more than one dev is required.\n\nSo we will create branches for specific modules and work that way. Theres probably a better more efficient way to do things though."
  },
  {
    "poster": {
      "poster_name": "Simon Tuck",
      "poster_handle": "simon.tuck"
    },
    "time_stamp": "2021-09-03 05:00:52",
    "text": "Hi Scott, but you would still all be working on the same theme files in HubSpot? Or would you create a clone to match the branch?"
  },
  {
    "poster": {
      "poster_name": "Melinda Green",
      "poster_handle": "melinda.green"
    },
    "time_stamp": "2021-09-03 06:44:24",
    "text": "this is a question I’ve had for a while now, and other than “divide and conquer” like Scott said, I haven’t found a solution. We’ve had instances where two of us overwrite each other in a CSS file.\n\neven something as simple as a two-way sync, a “this file has changed; merge it into your local” message, would help a lot. but that might be just as complicated."
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2021-09-03 07:11:52",
    "text": "One possibility would be to use the git deploy workflow. Each dev can create their own dev sandbox and then use git to manage the main version. When there is a new merge the changes get pushed to the production account. <https://developers.HubSpot.com/docs/cms/guides/github-integration>"
  },
  {
    "poster": {
      "poster_name": "Simon Tuck",
      "poster_handle": "simon.tuck"
    },
    "time_stamp": "2021-09-03 07:52:33",
    "text": "Hi Jonathan, I had a look at the git actions. But this is just a deployment workflow, right? The real trick would be that each dev has his/her own sandbox. The issue with the sandbox is that I‘m missing all the content and settings from my main account so I can‘t really test and preview my work without deploying it to production. So I’m back where I started: everyone has to deploy to the same production branch just for work in progress and testing. Right now I‘m leaning towards cloning the entire theme along with relevant content for each dev. Then everyone can develop and test without having to worry about conflicts. Deployment is then a merge into the main theme version. "
  }
]
[
  {
    "text": "Hey all, I think it would be awesome to be able to create content staging page from the create dropdown in the website pages section (see first screenshot). Right now, users have to create a website page in order for themto access the content staging link in the \"More tools\" dropdown and can slow down the process. (see second screenshot).",
    "time_stamp": "2021-08-06 02:16:29"
  },
  {
    "poster": {
      "poster_name": "Ben Holness",
      "poster_handle": "ben.holness"
    },
    "time_stamp": "2021-08-06 02:18:27",
    "edited": {
      "time_stamp": "2021-08-06 02:18:41"
    },
    "text": "Also another great thing to have, which I'm sure has already been suggested, would be to have an option to scope CSS and JS files for modules :thumbsup:",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-08-06 08:24:40"
      },
      {
        "time_stamp": "2021-08-07 23:10:33"
      },
      {
        "time_stamp": "2021-08-09 02:04:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-08-06 08:15:04",
    "text": "We tie all of our global theme settings to CSS variables, and it would be awesome if there was a way to select or specify a CSS variable to use in the page editor for things like section background color. Maybe even tie it in to the color field, allowing the user to optionally use a CSS variable instead."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-08-06 08:24:40",
    "text": "Hi Ben, just trying to get some clarity on this bit.\n\nregarding scoping CSS we have `scope_css` <https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields-overview#writing-instance-specific-css>\n\nDoes that solve the problem youâ€™re trying to solve?\n\nAlso can you elaborate on the scoping JS bit?\n<https://developers.HubSpot.com/docs/cms/building-blocks/modules/files#javascript-module-js->\nOne thing we want to avoid doing is loading the same JavaScript code multiple times per page - when it could be written more efficient, where the 1 `module.js` can handle all instances."
  }
]
[
  {
    "poster": {
      "poster_name": "Thomas Bennedbæk",
      "poster_handle": "thomas_katalysator"
    },
    "time_stamp": "2019-03-14 03:37:21",
    "edited": {
      "time_stamp": "2019-03-14 03:37:32"
    },
    "text": "Try `request.path` instead:\n\n```{% if request.path is string_startingwith \"fr/\" %}\nBonjour!\n{% else %}\nFallback\n{% endif %}```"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-03-14 05:59:20",
    "text": "Looked like a great idea.  `{{ request.path }}` on an error page returns: `/content-rendering/v1/public/fr/notapage`"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-03-14 05:59:39",
    "text": "So unfortunately, looks like we're still stuck with JS"
  },
  {
    "poster": {
      "poster_name": "Thomas Bennedbæk",
      "poster_handle": "thomas_katalysator"
    },
    "time_stamp": "2019-03-14 08:00:45",
    "text": "Oh, bummer! For me it returns `/content-rendering/v1/public/fr`. So I guess you could cut the first part of the string. E.g.:\n```\n{% set path = request.path|cut('/content-rendering/v1/public') %}\n{% if path is string_startingwith \"fr/\" %}\nBonjour!\n{% else %}\nFallback\n{% endif %}\n```\nQuite prone to break though...\n\nAnother possible option is to do it IP-based with `{{ request.geoip_country }}`, but it can be inaccurate :slightly_smiling_face:"
  }
]
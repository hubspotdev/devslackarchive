[
  null,
  null,
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-12-11 04:18:00",
    "edited": {
      "time_stamp": "2018-12-11 04:19:17"
    },
    "text": "*It would be amazing to be able to add some filter to this kind of function blog_recent_posts('default', 5, filter)*\nFor example use a datetime filter to get recent post from a date"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-12-11 04:18:49",
    "text": "Example : blog_recent_posts('default', 5, today(\"America/New_York\").minusDays(3) )",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-11 05:27:45"
      },
      {
        "time_stamp": "2018-12-11 05:29:56"
      },
      {
        "time_stamp": "2018-12-11 06:38:11"
      },
      {
        "time_stamp": "2018-12-11 06:39:23"
      },
      {
        "time_stamp": "2018-12-11 08:33:40"
      },
      {
        "time_stamp": "2018-12-11 08:34:11"
      },
      {
        "time_stamp": "2018-12-11 08:34:27"
      },
      {
        "time_stamp": "2018-12-11 08:41:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-11 05:27:45",
    "text": "You can do this filtering after the blog posts are returned right?"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-12-11 05:29:56",
    "text": "Yes sure. But for my need I have to get posts published during the week and limit to 3.\n\nFiltering after I will have a for loop with too many items."
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-12-11 06:38:11",
    "text": "Or just to put an offset"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-12-11 06:39:23",
    "text": "Example\n\n*First Row*\nModule Getting 3 Recent post this week\n\n*Next Row*\nModule Getting 6 Recent post except 3 posts from first module"
  },
  null,
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:33:40",
    "text": "It would really be nice to be able to just query by multiple things at once. Something like get_posts in Wordpress, which is so painless to use compared to blog_recent_posts."
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-12-11 08:34:11",
    "edited": {
      "time_stamp": "2018-12-11 08:34:18"
    },
    "text": "yes or just the same in the HubDB with filterQuery"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:34:27",
    "text": "Yeah, HubDB also works great"
  },
  null,
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-12-11 08:41:40",
    "text": "If we just had something that had the same options as the blog posts API in HubL, really. That's basically what hubdb_table_rows is."
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-11 11:16:37",
    "text": "On the account dashboard, where it shows products, can we also have information about any Beta's the account may also be involved with?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-11 11:17:10",
    "text": "just seems like additional info that would be cool to have in case we are trying to make recommendations to a client so we know what betas they are involved with (if any)"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-11 13:34:12",
    "text": "Idea: Add in the pages in which forms are located on (the info from the \"Appears On\" column) to the api json data that is returned for forms."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-11 14:06:45",
    "text": "last idea: It would be awesome if we could get some kind of SQL based reporting tool for our portal. I mean I totally get the current reporting thats in the system (which is really more for marketers) but when it comes to needing to build complex reports, it makes it hard to marry up the data when you have to use constant API hits to grab data, then parse it correctly, and do other things like that.\n\nBeing able to integrate into something like _cough cough_ Google DataStudio _cough cough_ would be awesome."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-11 14:08:15",
    "text": "one example is i was asked to grab a list of all the forms we have in our portal, the people who are assigned as notification recipients, and the pages in which they are on."
  },
  null,
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2018-12-11 19:18:57",
    "text": "Idea: Allow flexible columns in blog templates",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-12 08:37:41"
      },
      {
        "time_stamp": "2018-12-12 14:21:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2018-12-11 19:19:23",
    "text": "Would be nice to be able to introduce custom modules in blog content to give a richer reading experience without having to use html"
  }
]
[
  {
    "poster": {
      "poster_name": "Deidra Kandra",
      "poster_handle": "dkandra"
    },
    "time_stamp": "2023-11-30 08:03:37",
    "text": "Thatâ€™s a great idea <@U01QVR44MEY>, thanks for the feedback! :raised_hands:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-11-30 08:04:10",
    "text": "of course, thanks!"
  },
  {
    "poster": {
      "poster_name": "Sejal Parikh (HubSpot PM)",
      "poster_handle": "sparikh"
    },
    "time_stamp": "2023-11-30 15:24:08",
    "edited": {
      "time_stamp": "2023-11-30 16:18:17"
    },
    "text": ":mega: :tada: *Some latest goodies that you can use to to enhance your extensions*\n1. *Expanded context with `location`, `objectType`, and `objectId`* : Those of you who were looking to render extensions conditionally based on object record (contact, company etc), or location (tab, sidebar), this is for you!\n2. *Programmatically refresh CRM object properties on record pages with `refreshObjectProperties` method without manual page load*: You can now the <https://developers.HubSpot.com/docs/platform/create-ui-extensions#refresh-properties-on-the-crm-record|refreshObjectProperties method> to refresh the property data within a CRM record. Properties displayed on the custom cards using CRM data components or on the cards added to record through <https://knowledge.HubSpot.com/crm-setup/customize-the-middle-column-of-records?_ga=2.245945220.1671734244.1701095666-1515175943.1700169858&_gl=1*o5r75g*_ga*MTUxNTE3NTk0My4xNzAwMTY5ODU4*_ga_LXTM6CQ0XK*MTcwMTEwNDE4NS4xMS4xLjE3MDExMTA0MDAuNjAuMC4w#manage-cards-in-the-middle-column|HubSpot UI> will refresh upon change with this method without manual page reload. However, this is not applicable for properties added on custom cards with REST or GraphQL.\nBtw, if you build something worth showing in public, <https://HubSpotdev.slack.com/archives/C05R599UA12/p1700680179438639|do fill out the form> for the upcoming Dev HUG and claim your fame!\n\nAs always, subscribe to <https://developers.HubSpot.com/changelog|the developer changelog> so you don't miss all of these updates.",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-11-30 15:24:55"
      },
      {
        "time_stamp": "2023-11-30 15:27:27"
      },
      {
        "time_stamp": "2023-11-30 15:27:42"
      },
      {
        "time_stamp": "2023-12-04 02:02:56"
      },
      {
        "time_stamp": "2023-12-04 10:11:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sejal Parikh (HubSpot PM)",
      "poster_handle": "sparikh"
    },
    "time_stamp": "2023-11-30 15:24:55",
    "text": "<@U0616TTM53R> <@U01QVR44MEY>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-11-30 15:27:27",
    "text": "The greatest update ever!!!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-11-30 15:27:42",
    "text": "This is huge, great job team!"
  },
  {
    "poster": {
      "poster_name": "Daniel Beitler",
      "poster_handle": "dan445"
    },
    "time_stamp": "2023-11-30 15:36:41",
    "text": "<@U03FJQPSC0Y> this is great! If I understand correctly, best practice would now be to call `refreshObjectProperties` anytime I change data on the object from within the extension?\nIs any solution coming for the other direction, like receiving a callback notification when a user changes a property outside of the extension?",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-11-30 16:16:01"
      },
      {
        "time_stamp": "2023-11-30 16:25:57"
      },
      {
        "time_stamp": "2023-12-01 06:45:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sejal Parikh (HubSpot PM)",
      "poster_handle": "sparikh"
    },
    "time_stamp": "2023-11-30 16:16:01",
    "text": "&gt; Is any solution coming for the other direction, like receiving a callback notification when a user changes a property outside of the extension?\nHi Daniel these updates are closely tied to UI extensions, so no, but can you give me an example?\n\nAlso it won't update the properties if you are using REST/GQL to display them on custom cards. We have a solution for that underway"
  },
  {
    "poster": {
      "poster_name": "Daniel Beitler",
      "poster_handle": "dan445"
    },
    "time_stamp": "2023-11-30 16:25:57",
    "edited": {
      "time_stamp": "2023-11-30 16:37:18"
    },
    "text": "Let's say I have associations between contacts and another object. I have an extension on the contact UI that loads the associations and related properties through GraphQL.\nIf the user now changes the associations outside of the extension, I would need to refresh the data by making another GraphQL call, otherwise stale data is displayed. Right now I can only do that by adding a Refresh button that the user must click manually. Ideally the extension could somehow subscribe to changes of properties/associations so that I can trigger a refresh when required."
  }
]
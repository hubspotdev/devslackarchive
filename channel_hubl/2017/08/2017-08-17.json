[
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 08:01:42",
    "text": "I dont think you can edit HubL modules on the page level (at least I havent been able to do when i have them in a template). I usually use an HTML module instead of a HubL module that way you can edit it from the page level."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 08:03:00",
    "text": "I have been editing mine in the template, and I keep it locked to prevent it getting edited on page level"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-08-17 09:59:37",
    "text": "I've been able to edit them in the past at the page level.  I'm still a bit of a HUBL newb, so it turns out that I was improperly using inline syntax when I should have been using block syntax.  Now that I've corrected my syntax error, everything is working fine.\n\nAnother work around I found was to take all the content of my custom Hubl Module, and dump it into a custom module.  I wasn't able to edit at the page level, but I was still able to edit, which was the most important thing to me yesterday."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 10:09:35",
    "text": "I prefer custom modules so that I can use it elsewhere"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 12:22:42",
    "text": "So i have a question on HubL and CSS files. Inside the CSS files I have the following:\n```\n/* @import url('<http://example.com/example_style.css>'); */\n\n/***********************************************/\n/* CSS @imports must be at the top of the file */\n/* Add them above this section                 */\n/***********************************************/\n\n/****************************************/\n/* HubSpot Style Boilerplate            */\n/****************************************/\n\n/* These includes are optional, but helpful. */\n{% include \"HubSpot/styles/responsive/modules.css\" %}\n{% include \"HubSpot/styles/patches/recommended.css\" %}\n\n\n/*****************************************/\n/* Start your style declarations here    */\n/*****************************************/\n{% include \"Custom/page/CLIENT/variables.css\" %}\n{% include \"Custom/page/CLIENT/base.css\" %}\n```\nIs this possible to do if all my HubL Variables I am setting are in one file and code using those variables are in another?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 12:31:24",
    "text": "@import is how you bring them in iirc"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 12:31:47",
    "text": "sorry, just going into a meeting"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 12:31:51",
    "text": "but i think it should be on this page <http://designers.HubSpot.com/docs/tutorials/how-to-import-sets-of-variables-into-another-template>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 12:31:55",
    "text": "I have it favortied"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 12:33:49",
    "text": "i know this will for templates, but i dont think it will work cross CSS files"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 12:41:49",
    "text": "Yep, it looks like you cant do it across css files."
  },
  {
    "text": "Both css classes use the same variables but the header classes are in the same file as the variables and the paragraph is in another one",
    "time_stamp": "2017-08-17 12:43:59"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-08-17 12:52:13",
    "text": "HUBL variables are pretty great.  You can even use then in JS when written in the code editor."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 12:58:44",
    "text": "im trying to create a SASS like approach to the css for a template and since I cant pass hubl var's between them, i instead have to opt for one file with all the variables at the top of the file. I was just trying to break it out so it was easier to manage."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2017-08-17 13:02:19",
    "text": "Could you have one file that would serve as a pseudo \"variables.scss\" file, then {% import variables.css as variables %} for each partial css file? or am I misunderstanding your use case?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 13:05:28",
    "text": "thats essentially what i did, in the screenshot above `variables.css` has all my variables that i set using `{% set x = \"y\" %}` and then in the second import `base.css` is where I have all the css code referencing those variables in the variable.css file. For some reason, the variables arent being assigned."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 13:07:10",
    "text": "my breakdown is this:\n```\n| - main.css  //has all the imports for the other files\n|---- @import variables.css  //all the vars\n|---- @import base.css //base code that uses some of the vars in variables.css\n```"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 13:07:53",
    "text": "which should generate and set the variables then load the styles and assign them to the calls in base"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 14:13:18",
    "text": "hey all -- wondering about this. usually on blog listing pages we do soemthign like this:  {{ content.post_list_content|safe|truncatehtml(334, '...', false) }}"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 14:13:44",
    "text": "have you used anything different?  Looking to see what other options are out there for the listing content"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 14:15:54",
    "text": "I've also used striptags as a filter if they have css that makes the listing akward"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 14:27:40",
    "text": "yea, i've used `{{ content.post_list_content|safe }}` on sites"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-08-17 14:32:26",
    "text": "```{% import \"path-to-variables.css\" as variables %}\nbody {\n    color: {{ variables.text_color }};\n}```\nThis should work"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-08-17 14:34:07",
    "text": "Though if you can, I would suggest just working in sass or something and uploading to HubSpot with HubSpot FTP using something like Gulp or Grunt"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-08-17 16:03:28",
    "text": "I like that second idea, i think I am going to see if I can get that implemented lol. Thanks <@U3A4KEWK1>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-08-17 18:29:21",
    "text": "If you need some help, or anyone for that matter getting setup in gulp / sass environment I would help out!"
  }
]
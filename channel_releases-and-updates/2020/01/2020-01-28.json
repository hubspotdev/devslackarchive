[
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:38:36",
    "text": "Something odd - I'm seeing far fewer properties in the APIs compared to v1, off a very stock API call. Is that intended?"
  },
  {
    "text": "",
    "time_stamp": "2020-01-28 08:38:46"
  },
  {
    "text": "",
    "time_stamp": "2020-01-28 08:38:53"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:44:06",
    "text": "Contacts v3 API has 5 variables, whereas v1 has 15"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-28 08:49:10",
    "text": "Hey <@USW076LLT> just to make sure I’m understanding your question. Are you referring to the the amount of contact properties the API returns by default?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-28 08:49:34",
    "text": "Wasn’t sure what you meant by variables, though my guess is top level properties in the results array"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:49:37",
    "text": "Yes, exactly - it looks like much less data is coming back"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:49:58",
    "text": "Sorry - variables = columns"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-28 08:51:04",
    "text": "gotcha, the idea there was to limit the response to just what we felt was needed, and allow you to request any other data you wanted using the `properties` param"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-28 08:51:16",
    "text": "what else would you find helpful to be included by default?"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:52:04",
    "text": "mainly the foreign keys, so that I can do joins on the various tables - contacts, companies, tickets"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:52:23",
    "text": "is there a grammar of properties I can query for what's available?"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:53:04",
    "text": "the intended outcome in this case is helping a client match tickets to their respective contacts and companies, to generate a snapshot view of what's happening in their support center"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-28 08:55:18",
    "text": "sounds like what you want is the `associations` param. That will return an object with the associated CRM objects for the returned Contacts"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-28 08:55:59",
    "text": "in your case, you could include `associations=tickets` and you’ll get an array of the tickets the contacts in the response are associated to"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:56:46",
    "text": "gotcha - thanks. So it's associations=companies,contacts for tickets, etc. Thanks! That wasn't clear in the endpoint documentation"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-28 08:58:18",
    "text": "exactly, I’ll see how we can make that clearer in the future"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-01-28 08:59:40",
    "text": "Thanks!"
  }
]
[
  {
    "poster": {
      "poster_name": "Chris Conant",
      "poster_handle": "conant_chris"
    },
    "time_stamp": "2019-04-24 07:20:44",
    "text": "The approach that I’ve used in the past is to use a repeater in a module, and cleared the row using css `nth-of-type(an+1)`. For example, clearing after every 4 instances:\n.container:nth-of-type(4n+1) {\nclear: left;\n}"
  },
  {
    "poster": {
      "poster_name": "Sebastien",
      "poster_handle": "sdelrue"
    },
    "time_stamp": "2019-04-24 07:48:09",
    "edited": {
      "time_stamp": "2019-04-24 07:48:20"
    },
    "text": "Not sur if i’m in the right place (there isn’t a #form room?).\nI’m looking to do a multi step form (without leaving the page).\nThe only way i see it is to create multiple form on the same page, show the first and hide the next ones, and in javascript, show the next one as we submit the previous one.\nPro: Should be working.\nCons: For a 3 step form, 3 email notification would go out\n\nAny advice on that?",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-24 08:46:44"
      },
      {
        "time_stamp": "2019-04-24 08:49:15"
      },
      {
        "time_stamp": "2019-04-24 08:54:33"
      },
      {
        "time_stamp": "2019-04-24 08:55:11"
      },
      {
        "time_stamp": "2019-04-24 08:55:33"
      },
      {
        "time_stamp": "2019-04-24 08:56:03"
      },
      {
        "time_stamp": "2019-04-24 08:56:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Cristian Teichner",
      "poster_handle": "cristianteichner"
    },
    "time_stamp": "2019-04-24 08:46:44",
    "text": "<@UJ7ARFV2S> if you’re comfortable with JS and want to use only one form you can take advantage of `Help Text` to add a wrapper for all inputs with the same help text (e.g. step1).\n\nHide submit button until you’re on the last step and toggle between the different steps as you need."
  },
  {
    "poster": {
      "poster_name": "Sebastien",
      "poster_handle": "sdelrue"
    },
    "time_stamp": "2019-04-24 08:49:15",
    "text": "Good idea. I didn’t know i could add html in `help text`. i could also use the `Rich text area` to open and close `fieldset` around my step and add `next` button i assume."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-04-24 08:54:33",
    "text": "I recently created a custom multi-step form module with custom markup/css/js and then I just used the forms api to post to the HubSpot form"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-04-24 08:55:11",
    "text": "only downside is you have to do your own error handling / validation with custom markup"
  },
  {
    "poster": {
      "poster_name": "Cristian Teichner",
      "poster_handle": "cristianteichner"
    },
    "time_stamp": "2019-04-24 08:55:33",
    "text": "<@UJ7ARFV2S> erm.. you can add the wrapper with js, no need for html in help text / rich text"
  },
  {
    "poster": {
      "poster_name": "Sebastien",
      "poster_handle": "sdelrue"
    },
    "time_stamp": "2019-04-24 08:56:03",
    "edited": {
      "time_stamp": "2019-04-24 08:56:16"
    },
    "text": "Ok, i see :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Sebastien",
      "poster_handle": "sdelrue"
    },
    "time_stamp": "2019-04-24 08:56:07",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Luis Jimenez",
      "poster_handle": "luisjimenez"
    },
    "time_stamp": "2019-04-24 10:13:30",
    "text": "Hey! Thanks for answering\n\nbut I need to do this in HubL, I already managed to make my \"rows\" infinite and that my \"columns\" were only 4 but I do not want to print or show my field"
  },
  {
    "poster": {
      "poster_name": "Luis Jimenez",
      "poster_handle": "luisjimenez"
    },
    "time_stamp": "2019-04-24 10:14:06",
    "text": "my code is this\n\n&lt;div class=\"containerl\"&gt;\n\n{% for content in module.row %}\n  &lt;div class=\"row\" &gt;\n\n      {% for col in module.col %}\n      &lt;div class=\"item\"&gt;\n        {% inline_text field=\"t1\" value=\"{{col.t1 }}\" %}\n      &lt;/div&gt;\n    {% endfor%}\n\n\n  &lt;/div&gt;\n {% endfor%}\n&lt;/div&gt;"
  },
  {
    "poster": {
      "poster_name": "Luis Jimenez",
      "poster_handle": "luisjimenez"
    },
    "time_stamp": "2019-04-24 10:15:28",
    "text": "My problem is that I do not know in the first FOR what to put instead of \"content\" to print"
  }
]
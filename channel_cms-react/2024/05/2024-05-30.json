[
  {
    "poster": {
      "poster_name": "Dennis K",
      "poster_handle": "dennis579"
    },
    "time_stamp": "2024-05-30 05:55:27",
    "edited": {
      "time_stamp": "2024-05-30 05:55:38"
    },
    "text": "Is there any community channel where there is some good knowledge and response rate? I’ll check with our HS account manager if they can connect us to the right person"
  },
  {
    "poster": {
      "poster_name": "Guy Paikowsky",
      "poster_handle": "guypaikowsky"
    },
    "time_stamp": "2024-05-30 08:36:40",
    "text": "When uploading my project i get this error:\n```[ERROR] Building JS Project with error message `ENOENT: no such file or directory, scandir '/tmp/cms_3OGKyx/cms-js-build/customer-package/dist/server/module-definitions'` and cause `\"\"`. ```\nCould anyone help me with this?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-06-06 16:54:39"
      },
      {
        "time_stamp": "2024-06-07 02:20:22"
      },
      {
        "time_stamp": "2024-06-07 07:28:57"
      },
      {
        "time_stamp": "2024-06-07 08:28:49"
      },
      {
        "time_stamp": "2024-06-07 08:28:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dennis K",
      "poster_handle": "dennis579"
    },
    "time_stamp": "2024-05-30 10:49:36",
    "text": "Set and forget works best for me as well. Also when you have Hubl templates and you want to use TailwindCSS there, you would need to install and build the css during development? It isn’t picking up any CSS styles when trying to set the hubl templates from the React folder. So I have a CSS file inside my HS folder which I build during upload, and the React modules have their own Tailwind CSS. Not ideal…"
  },
  {
    "poster": {
      "poster_name": "Josh GH",
      "poster_handle": "joshgh"
    },
    "time_stamp": "2024-05-30 10:59:15",
    "text": "What type of dynamic page do you mean? We just published our first page with user interactivity working with HubSpot data. Check out our projects filtering on this page: <https://www.bitovi.com/our-software-consulting-work>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2024-05-30 11:00:19",
    "text": "I’m referring to <#C22PDRW72|data-driven-content> "
  },
  {
    "poster": {
      "poster_name": "Josh GH",
      "poster_handle": "joshgh"
    },
    "time_stamp": "2024-05-30 11:03:42",
    "text": "gotcha. That we have not done yet. I’m hopeful we’ll re-write our blog with cms-react, but nothing yet."
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-30 14:16:18",
    "text": "Running a CMS-React module in the dev server (local) and I get the following error message:\n\n&gt; Field Validation Error in /Users/rich/projects/bitovi/website-HubSpot-modules/bitovi-limbo-project/bitovi-limbo-app/components/modules/Tools: ‘description’ is required but no default is set\n`description` is a text field\n\n&gt;       &lt;TextField\n&gt;         inlineHelpText=“A short description (&lt;150 characters) of the tool or software application.”\n&gt;         label=“Description”\n&gt;         name=“description”\n&gt;         required\n&gt;         validationRegex=“^[^\\n\\r]{0,150}$”\n&gt;       /&gt;\nI would not expect a required field to require a default value. In this case the TextField is in a RepeatedFieldGroup so a default value doesn’t provide a lot of use to an editor when they are constructing a page. I’m not sure if this error is expected or a bug.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-05-30 14:21:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-30 14:21:21",
    "text": "Don’t know if it matters here but this is the fields.type.ts content\n```type ToolsFieldsType = DefaultValues&lt;{\n    tools: Array&lt;Record&lt;\"_repeater\", {\n        tool_name: TextFieldType;\n        description: TextFieldType;\n        learn_more: Required&lt;LinkFieldType&gt;;\n        learn_more_text: Required&lt;TextFieldType&gt;;\n        graphic: Required&lt;ImageFieldType&gt;;\n        picture: Required&lt;ImageFieldType&gt;;\n        picture_alignment: \"left\" | \"right\";\n        background: \"blue-circles\" | \"green-circle\" | \"purple-circles\";\n    }&gt;&gt;;\n}&gt;;```"
  },
  {
    "poster": {
      "poster_name": "Rich McNeary",
      "poster_handle": "rich960"
    },
    "time_stamp": "2024-05-30 14:52:50",
    "text": "Just some thoughts based on what we’ve done (mostly static pages with some interactivity). I have a lot of experience in React but I’m not a HUBL expert.\n\n3 - CMS-React is just React, so you can compose multiple components together, for example a BlogContent component and a Sidebar component. These could be composed together into a single module that gets placed on the page. Ideally the module would get access to say the blog post ID and then pass those to the other two components via a prop so they can do their thing. In this case there’s only the default single column layout with React rendering the different pieces. Choosing one or the other probably depends on how you want to design your pages and how comfortable your are with React vs. HUBL.\n\n4 - My understanding is that you can’t place a module inside a module regardless of the source (React vs. HUBL). Can you get the menu data using HUBL APIs then pass it to a React partial via props?\n\n```{% js_partial\n   path=\"@projects/project-folder/js-package/components/partials/Header.jsx\"\n   options=\"{% HUBL API data call or some such? %}\"\n%}```"
  },
  {
    "poster": {
      "poster_name": "Dennis K",
      "poster_handle": "dennis579"
    },
    "time_stamp": "2024-05-30 15:38:36",
    "edited": {
      "time_stamp": "2024-05-30 15:38:45"
    },
    "text": "3. O yes, great! I could just create the blogpost template in Hubl but import the entire page as a JS Module, passing the data down or use graphql. Not sure about performance but I guess it’s similar to Hubl?\n\n\nFor the header and footer I think I’ll do it differently since it needs a level of customizability. I’ll just create a global hubl partial, and import JS Menu module for the mega menu so they can create their blocks and menu content inside the editor.\n\nFooter will be the same I think.\n\nHave a ton of React experience as well and prefer to work with CMS’s like Sanity, but sometimes a HS project will popup :sweat_smile:"
  }
]
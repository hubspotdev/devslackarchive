[
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:19:54",
    "text": "Can a Custom Workflow Action access the outputs of previously run Actions in a workflow? Not seeing any documentation that says one way or the other.",
    "reply_count": 41,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-08-11 08:21:50"
      },
      {
        "time_stamp": "2023-08-11 08:22:56"
      },
      {
        "time_stamp": "2023-08-11 08:23:36"
      },
      {
        "time_stamp": "2023-08-11 08:24:23"
      },
      {
        "time_stamp": "2023-08-11 08:24:31"
      },
      {
        "time_stamp": "2023-08-11 08:25:05"
      },
      {
        "time_stamp": "2023-08-11 08:32:56"
      },
      {
        "time_stamp": "2023-08-11 08:34:50"
      },
      {
        "time_stamp": "2023-08-11 08:35:32"
      },
      {
        "time_stamp": "2023-08-11 08:39:08"
      },
      {
        "time_stamp": "2023-08-11 08:40:31"
      },
      {
        "time_stamp": "2023-08-11 08:40:44"
      },
      {
        "time_stamp": "2023-08-11 08:41:22"
      },
      {
        "time_stamp": "2023-08-11 08:41:34"
      },
      {
        "time_stamp": "2023-08-11 08:42:57"
      },
      {
        "time_stamp": "2023-08-11 08:43:24"
      },
      {
        "time_stamp": "2023-08-11 08:43:36"
      },
      {
        "time_stamp": "2023-08-11 08:43:58"
      },
      {
        "time_stamp": "2023-08-11 08:44:25"
      },
      {
        "time_stamp": "2023-08-11 08:46:06"
      },
      {
        "time_stamp": "2023-08-11 08:46:40"
      },
      {
        "time_stamp": "2023-08-11 08:47:33"
      },
      {
        "time_stamp": "2023-08-11 08:50:03"
      },
      {
        "time_stamp": "2023-08-11 08:50:45"
      },
      {
        "time_stamp": "2023-08-11 08:51:40"
      },
      {
        "time_stamp": "2023-08-11 08:51:59"
      },
      {
        "time_stamp": "2023-08-11 08:52:00"
      },
      {
        "time_stamp": "2023-08-11 08:52:30"
      },
      {
        "time_stamp": "2023-08-11 08:53:22"
      },
      {
        "time_stamp": "2023-08-11 08:54:04"
      },
      {
        "time_stamp": "2023-08-11 08:54:45"
      },
      {
        "time_stamp": "2023-08-11 08:55:52"
      },
      {
        "time_stamp": "2023-08-11 08:56:00"
      },
      {
        "time_stamp": "2023-08-11 08:56:03"
      },
      {
        "time_stamp": "2023-08-11 08:57:23"
      },
      {
        "time_stamp": "2023-08-11 08:57:57"
      },
      {
        "time_stamp": "2023-08-11 08:58:11"
      },
      {
        "time_stamp": "2023-08-11 08:58:44"
      },
      {
        "time_stamp": "2023-08-11 08:59:17"
      },
      {
        "time_stamp": "2023-08-11 08:59:37"
      },
      {
        "time_stamp": "2023-08-11 09:32:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:21:50",
    "text": "it sure can"
  },
  {
    "text": "it appears under the `Property to include in code` section",
    "time_stamp": "2023-08-11 08:22:56"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:23:36",
    "text": "That looks like the Custom Code block — I am writing a Custom Workflow Action that we provide as part of our marketplace app"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:24:23",
    "text": "oh my bad, hmm let me think on it then"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:24:31",
    "text": "```\"objectRequestOptions\":{\n    \"properties\":[\n      \"email\"\n    ]\n  }```\nThe only examples I see are for adding extra properties from the enrolled object"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:25:05",
    "text": "i’m asking my engineers now to see if we have support for data passing in custom actions"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:32:56",
    "text": "it sounds like we’re in the process of exposing the functionality to customers but it’s still unstable (doesn’t always resolve the values properly) so we’re not exposing it as an option for custom actions"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:34:50",
    "text": "do you have any recommendations in the meantime? It’s kind of tricky to have our non-technical customers write Custom Code workflows"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:35:32",
    "text": "what’s the custom action meant to do?"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:39:08",
    "text": "Customer workflow: When a deal moves to Closed Won, run Create Record action to create a ticket, then we want to run a Custom Action that will “Move the plan” (which is some data that lives in our app and was linked to the deal). We would like to be able to get the result of the Create Record action so we can update our database to switch the link from the deal object to the ticket object"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:40:31",
    "text": "can your custom action access properties on the enrolled deal?"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:40:44",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:41:22",
    "text": "alright then a good workaround could be to use a “Set property” action after the Create Record action. This action can copy the value of the output from the previous Create Record action into a custom CRM property"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:41:34",
    "text": "your custom action coudl then pick up that value"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:42:57",
    "text": "I see, that might work"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:43:24",
    "text": "thanks!"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:43:36",
    "text": "awesome, glad to hear it"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:43:58",
    "text": "If the team is looking for any beta customers, please do pass on my email — we are using workflows in our marketplace action as a key feature"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:44:25",
    "text": "<https://app.HubSpot.com/ecosystem/23763990/marketplace/apps/customer-service/customer-success/onboarding-plans-by-arrows-431095>"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:46:06",
    "text": "great, will do, hopefully we can release this without a need for a beta as it’s such an integral part of our push to allow data access across the entire app"
  },
  {
    "text": "what type of data is “The created object”?",
    "time_stamp": "2023-08-11 08:46:40"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:47:33",
    "text": "oh hmm it’s the special object type, which I’m now realizing may not work with this action yet. Let me think for a second how we could extract that data"
  },
  {
    "text": "Maybe if we add a Data Source for “Ticket: Most recently created”?",
    "time_stamp": "2023-08-11 08:50:03"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:50:45",
    "text": "Would that handle a ticket that was created as part of the workflow run itself?"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:51:40",
    "text": "I was going to suggest that, I’m just worried about there being a delay that causes this to fail"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:51:59",
    "text": "in theory it should work though, could you try it out to confirm?"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:52:00",
    "text": "Yeah, same :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:52:30",
    "text": "I can run some tests, but when customers start sending real data, if there are timing issues, it’s gonna be a mess :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:53:22",
    "text": "agreed, I’m asking my team what the timing is for this sort of interaction"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:54:04",
    "text": "meanwhile I’m talking to the engineer building out “nested” support for data tokens that should enable these “record” types to be drillable to allow extracting of properties directly"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:54:45",
    "edited": {
      "time_stamp": "2023-08-11 08:54:49"
    },
    "text": "the nested data tokens would then be configurable in the `objectRequestOptions` ?"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:55:52",
    "text": "that’s a separate feature we’re workign on, but yes"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:56:00",
    "text": "it would be available in the Copy property action"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:56:03",
    "text": "It’s just unfortunate from my perspective that our Custom Workflow Action provides `outputFields` for other workflows to use, but we cant access input fields that are part of the workflow (only user input)"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:57:23",
    "text": "i agree, we all agree"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:57:57",
    "text": "to be transparent with you, we had plans to release that at the same time as the rest of our data passing feature, but we hit a major roadblock with our implementation and had to spend a few months reworking our solution"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:58:11",
    "text": "we’re at a good spot now so I’m hoping we can build out the rest of the support and release it soon"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:58:44",
    "edited": {
      "time_stamp": "2023-08-11 08:58:57"
    },
    "text": "Another work-around: run the Create Record, have a prop (Move from deal id) on the Ticket and copy the deal id to that as part of the Create Record\n\nThen a separate Ticket-based workflow with “Move from deal id” enrollment criteria to run out custom action so we would have the input data we need"
  },
  {
    "poster": {
      "poster_name": "Matt Swanson",
      "poster_handle": "matt353"
    },
    "time_stamp": "2023-08-11 08:59:17",
    "text": "That would do it, but not so user friendly :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2023-08-11 08:59:37",
    "text": "yeah not ideal at all hahaha"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-08-11 09:32:25",
    "text": "If worry is delay - could you implement a delay between parts of the action? (Creation of ticket &gt; delay &gt; other stuff\n\nAlternatively, you could split into 2 linked custom workflow actions, no?"
  }
]
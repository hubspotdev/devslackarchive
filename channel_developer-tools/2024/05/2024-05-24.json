[
  {
    "poster": {
      "poster_name": "Daniel Termale",
      "poster_handle": "d.termale"
    },
    "time_stamp": "2024-05-24 11:08:50",
    "text": "Hey group - question for you. What is the best way to track form submissions from a Luma landing page and connect the data to HubSpot?\n\nDoes anyone have any experience on where and how to add the HubSpot tracking code to a Luma page? I believe if i can get that snippet code added then I can access the data through the non-HubSpot forms."
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-24 12:21:30",
    "edited": {
      "time_stamp": "2024-05-24 12:21:58"
    },
    "text": "another question: how are you supposed to develop with your theme if you use the app? We want the ability to customize the theme without losing the ability to get updates to it from the app…\n• Originally, we used the app to get the sr theme\n• Devs changed a bunch of things (menus, site_header, colors, etc.) in our local sr theme using the UI, not code\n• we want the ability to get updates when new features are available from the app without losing changes we’ve made locally\n• Usually, that means child theme in HubSpot, but that appears to only be true for Marketplace themes?\n• According to HS docs, if you create a child theme from a theme it will use the ‘checkpoint’ of that point in time to copy those settings down to the child. \n    ◦ But this doesn’t seem to work for this theme\n        ▪︎ If we create a child theme from the sr parent theme, none of the changes that were made in the parent (via the UI) are copied to the child\n            • colors are the defaults for the theme\n            • site_header is the default sr site_header\n            • etc.\n        ▪︎ if we edit the parent theme (outside of custom_styles.css I guess) those files could get overwritten on update via the app, correct?"
  },
  {
    "poster": {
      "poster_name": "Cappy Popp",
      "poster_handle": "cappy.popp"
    },
    "time_stamp": "2024-05-24 12:23:01",
    "text": "So, what’s the optimal workflow for being able to customize the theme but still get updates without our changes getting overridden, and ideally being able to use code-based local development to do so?"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2024-05-24 13:01:05",
    "text": "So we use SR to build all our sites on the agency side, whether they are simple or super custom and we never make child themes. We also typically NEVER edit the \"core\" files. i.e base.css, header.html, etc. If we need to customize a module we'll clone it and make the customization in a new module.  If there is a completely custom section we'll just make a new module, all the customization is in the modules. Not the core files. That way we can always update module and files from the App\n\nAnd as far as local development, typically the design manager is gonna be the source of truth. So anytime I'm working on a client and re fetch everything from the design manager to my local. That way it'll pull the latest files."
  },
  {
    "text": "Great - thank you for the response, it is really much appreciated.\n\n• how does this work for an existing custom module (like ‘SR Navigation 01’)  where a client has modified all the colors, layout, logos, etc., in Design Manager already? Will cloning it get all those changes from the point at which the cloning occurs? Or are you out of luck and have to manually dig through the UI to pull out all the customizations to use in the clone (whether you override them in fields.json for the module or do it in CSS, etc.)?\n• what’s the difference between the custom modules in SR that have (global) in them vs ones that do not? Do I need to clone both? For example:\n",
    "time_stamp": "2024-05-24 13:10:07"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2024-05-24 13:16:00",
    "text": "(global) just mean its a global module.\n\nIf you've made change to that, just rename it (SR Navigation 02 or something )  and then SR App will see it as not installed and you can reinstall the 'stock' one"
  },
  {
    "poster": {
      "poster_name": "George Busby",
      "poster_handle": "george672"
    },
    "time_stamp": "2024-05-24 16:50:00",
    "text": "Curious if you ever got an answer or solution on this one as we're hitting the same thing. What did you end up doing?"
  }
]
[
  null,
  null,
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-10-12 07:20:46",
    "text": "the `content_attribute` syntax is supposed to\n&gt;specify a large block default content for a predefined content variable\nThis works for `content.email_body` but it does not work for `content.post_body` on blog posts."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-10-12 07:20:56",
    "edited": {
      "time_stamp": "2018-10-12 07:21:00"
    },
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-module-syntax-and-parameters#content-attribute>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-10-12 07:21:12",
    "text": "Is that by design, or is it a bug?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-10-12 07:27:04",
    "edited": {
      "time_stamp": "2018-10-12 07:29:48"
    },
    "text": "For example, the code below should pre-populate a blog post with content but it doesnâ€™t in a drag and drop blog template\n```{% content_attribute \"post_body\" %}\n&lt;p&gt;instructions on how to use this blog template&lt;/p&gt;\n{% end_content_attribute %}```"
  },
  null,
  null,
  {
    "text": "I am using this string of code to show events that are greater than today and hide past events, but have run into a snag. Upcoming 2019 event dates are not showing up and past dates with the year 2017 are showing up. It's only working for dates in the year 2018. Anyone have any insight on what code to use to fix this?\n\n{% if (row['date_and_time_start']|datetimeformat('%j'))&gt;=(local_dt|datetimeformat('%j'))%}",
    "time_stamp": "2018-10-12 08:04:34",
    "edited": {
      "time_stamp": "2018-10-12 08:05:44"
    },
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-12 08:06:22"
      },
      {
        "time_stamp": "2018-10-12 08:06:49"
      },
      {
        "time_stamp": "2018-10-12 08:07:35"
      },
      {
        "time_stamp": "2018-10-12 08:09:08"
      },
      {
        "time_stamp": "2018-10-12 08:09:29"
      },
      {
        "time_stamp": "2018-10-12 08:09:48"
      },
      {
        "time_stamp": "2018-10-12 08:37:21"
      },
      {
        "time_stamp": "2018-10-12 08:38:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-12 08:06:22",
    "text": "Why not use the datetime filter through the API?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-12 08:06:49",
    "text": "`datetime_column__gt=0s`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-12 08:07:35",
    "text": "<https://developers.HubSpot.com/docs/methods/hubdb/v2/get_table_rows>"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-12 08:09:08",
    "edited": {
      "time_stamp": "2018-10-12 08:09:20"
    },
    "text": "like this... {% set table = hubdb_table_rows(957964, locationquery, 'date_and_time_start__gt=0s') %} ?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-12 08:09:29",
    "text": "Yea that should give you every row GT now"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-12 08:09:48",
    "text": "Thank you for the quick response!! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-12 08:37:21",
    "text": "huh... its showing all rows (not hiding past events). Tried a bunch of tweaks and nothing seems to work. Maybe I'm not including in the right place?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-12 08:38:20",
    "text": "Can you send me the table?"
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null
]
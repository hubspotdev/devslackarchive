[
  {
    "poster": {
      "poster_name": "Laura Mauersberger",
      "poster_handle": "laura.mauersberger"
    },
    "time_stamp": "2018-08-09 02:38:01",
    "text": "Hello, I was wondering... Does anyone have any best practices for content staging A/B tests?\nReason for this is that we are starting to A/B test many things, but REALLY need to test the \"B\" version before setting them live extensively (also if the workflows related to the page work, etc. so the preview function is not sufficient).\n\nI understand that it is not possible to stage \"A/B\" tests... So how do other companies (extensively) test \"A/B\" tests before setting them live?"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-09 07:26:24",
    "text": "Look at the first item in the list in the right sidebar… works PERFECTLY for this site’s content"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-09 07:28:09",
    "text": "Hi <@UBAN5HW3A> if you are trying to browser test the B version then you can just browser test the template preview or the page preview."
  },
  {
    "poster": {
      "poster_name": "Laura Mauersberger",
      "poster_handle": "laura.mauersberger"
    },
    "time_stamp": "2018-08-09 07:32:55",
    "text": "Hi, that doesnt work for me because, while I am creating te A/B test, (which will take a while before going live), my boss wants me to update the current  website.\nAlso I want to test if all dependencies work (if a form is submitted, then the correct workflow is triggered, it points to the TY page, etc.etc.)\nShort version: My boss wants to Stage the content and not use the preview option"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-09 08:39:28",
    "text": ":disappointed: Unfortunately the only other way is to just stage a mock of the B site.. then when it is ready replicate it in the AB test.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-08-09 08:55:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-09 08:41:10",
    "text": "BUT to be completely honest you should only be testing small changes or that should be what the majority of you test should be. Making Large Sweeping changes may be hard to understand what actually caused the increase or decrease of conversions or clicks or whatever you are trying to track."
  },
  {
    "poster": {
      "poster_name": "Laura Mauersberger",
      "poster_handle": "laura.mauersberger"
    },
    "time_stamp": "2018-08-09 08:55:39",
    "text": "true"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:19:28",
    "text": "Got a rush project where I’m copying basically an existing site on another CMS. Building as a coded template - I don’t do full sites like this as often.\n\nWhat’s better practice, including your doctype and meta stuff in your header partial, or in the main template file itself?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:22:55",
    "text": "I’m gonna lean throwing that all in the header partial"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-09 10:24:16",
    "text": "I think the only thing is that HubSpot injects comments above and below included files and I think it can be a problem if the first thing in the file isn't the doctype?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-09 10:24:35",
    "text": "I could be wrong, it's been ages since that's been relevant to anything I'm doing :stuck_out_tongue:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:29:12",
    "text": "That’s a good point"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:31:14",
    "text": "thank you for that tip. Made just that part be part of the main template file instead XD"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-09 10:31:31",
    "text": "That might just be an IE thing"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:32:14",
    "text": "yea, unfortunately I have to care about IE… thank God we by default only support IE 11 and last couple versions of Edge"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:34:23",
    "text": "feels weird doing a coded template I’ve been doing drag n drop for clients for so long(they prefer it)\n\nJust reminds me of how unsemantic the drag n drop forces you to be."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-09 10:35:02",
    "text": "They are not good."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:36:12",
    "text": "yea, I mean least they could do is make the header and footer sections use &lt;header&gt; and &lt;footer&gt; and maybe make menus use &lt;nav&gt;"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-09 10:37:00",
    "text": "`header`,`main`,`footer`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:37:04",
    "text": "yea"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:38:48",
    "text": "I’d get if they have to make it so when you’re picking to do a drag n drop if you had to like pick a drag n drop version. (to prevent breaking stuff on old sites)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:39:02",
    "text": "just would be nice."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-08-09 10:39:41",
    "text": "this is how i typically do coded templates:\n\n```\n&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;\n        &lt;title&gt;{{ content.html_title }}&lt;/title&gt;\n        &lt;meta name=\"description\" content=\"{{ content.meta_description }}\"&gt;\n        {% include \"html-head.html\" %}\n        {{ standard_header_includes }}\n    &lt;/head&gt;\n    &lt;body class=\"{{ builtin_body_classes }}\"&gt; ...\n```"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-08-09 10:41:40",
    "text": "never had any issues doing it that way and you still can keep your template pretty clean by putting all your favicons and what not in the `html-head.html`"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-08-09 10:44:33",
    "text": "FYI the viewport meta tag is part of the standard header includes which is why it's not listed at the top"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:58:18",
    "text": "thank you for sharing. that makes sense"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 10:59:44",
    "text": "eek this seems buggy in the new editor. the generated public URLs to my files aren’t quite right"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 11:00:08",
    "edited": {
      "time_stamp": "2018-08-09 11:00:35"
    },
    "text": "or more accurately I have to manually type it out and cant trust right clicking and copying the public template url to work."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 11:03:30",
    "text": "so… I corrected the path that was in the public template url and while the file works fine now, it’s throwing an error in the editor saying there’s no resource at that path…"
  },
  {
    "poster": {
      "poster_name": "Ariel Luque",
      "poster_handle": "aluque"
    },
    "time_stamp": "2018-08-09 12:12:10",
    "text": "Hey all, random question. Does anyone here have a use case for the Workflows field in Custom Modules V2?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 12:40:23",
    "edited": {
      "time_stamp": "2018-08-09 12:41:33"
    },
    "text": "I’ll be honest I haven’t touched the field because I didn’t fully understand what it did.\n\nDoes it trigger the workflow? and does that happen immediately? idk that’s why i haven’t touched it.\n\nIt seems like the kinda thing where I don’t know exactly what it’s for/how it works so I don’t use it, but odds are it probably solves a very real problem."
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-09 13:00:16",
    "edited": {
      "time_stamp": "2018-08-09 13:14:25"
    },
    "text": "is there a way to add a custom class to the wrapping div that has the classes from the module being wrapped? \n`&lt;div … class=\"hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module my_module_class\"&gt;`\nwithout javascript?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-09 13:18:48",
    "text": "Some modules can make use of the `extra_classes=''` param in the module tag"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-09 13:20:10",
    "text": "I swore this was in docs somewhere and now I can't find it",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-08-09 13:20:28"
      },
      {
        "time_stamp": "2018-08-09 13:20:49"
      },
      {
        "time_stamp": "2018-08-09 13:27:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 13:20:28",
    "text": "#openSourceDocs"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-09 13:20:49",
    "text": "Yes, we def need this"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-09 13:23:08",
    "text": "You can use no_wrapper=True"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-09 13:23:13",
    "text": "that will remove that wrapper"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2018-08-09 13:27:35",
    "edited": {
      "time_stamp": "2018-08-09 13:27:43"
    },
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-module-syntax-and-parameters#hs_cos_wrapper_widget_2809836390>"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-09 13:28:59",
    "text": "```\n&lt;div class=\"secondaryNav\"&gt;\n  &lt;div class=\"containerCenter\"&gt;\n\t\t{% simple_menu menu_tree=\"{{ module.secondary_menu }}\", no_wrapper=True %}\n  &lt;/div&gt;\n&lt;/div&gt;\n```\n\nI have that as a custom module, and the module can be dragged into a flexible column… how can I remove the wrapper for the whole module in that case? … it’s a drag and drop template…"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-08-09 16:57:49",
    "text": "Is it possible to add Smart Content to rich text editors that are  in custom modules? I couldn’t find a way to do it …",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-08-09 17:38:04"
      },
      {
        "time_stamp": "2018-08-09 17:38:52"
      },
      {
        "time_stamp": "2018-08-30 13:06:35"
      },
      {
        "time_stamp": "2018-08-30 13:08:15"
      },
      {
        "time_stamp": "2018-08-30 13:13:56"
      },
      {
        "time_stamp": "2018-08-30 13:14:12"
      },
      {
        "time_stamp": "2018-09-21 10:56:31"
      },
      {
        "time_stamp": "2018-09-21 10:59:06"
      },
      {
        "time_stamp": "2018-09-21 11:03:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 17:38:04",
    "text": "Unfortunately no. The HS team has said they've been talking/working out how to do smart content in custom modules. It's just a very complex topic as you could either do it module wide or just certain fields and the UI needs to be easy enough"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-09 17:38:52",
    "text": "No ETA any time they've talked about it"
  }
]
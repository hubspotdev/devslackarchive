[
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-12-17 11:54:40",
    "text": "when using dynamic pages - is there a way to use the HubSpot Image slider?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-12-17 11:55:18",
    "text": "or would I have to use slick slider and then pass in a couple of different images?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 12:00:00",
    "text": "i would think you would need to create your own slider"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-12-17 12:00:10",
    "text": "ok yeah that is what I thought"
  },
  {
    "poster": {
      "poster_name": "Jonathan Pavoni - Level 9",
      "poster_handle": "jonathanpavoni"
    },
    "time_stamp": "2018-12-17 12:00:14",
    "text": "thanks <@UD53A9UUR>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 12:00:18",
    "text": "no worries"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 12:00:31",
    "text": "there are smarter people here than i, so keep your eyes open"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-17 12:42:34",
    "text": "Have you looked into multilevel dynamic pages?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-17 12:42:52",
    "text": "<https://designers.HubSpot.com/how-to-build-multilevel-dynamic-templates>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-12-17 12:43:13",
    "text": "Should only require two tables if you set it up like this"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-17 12:56:50",
    "text": "<@UD53A9UUR> you are correct."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 12:59:07",
    "text": "HOT DAMN"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-17 13:13:08",
    "edited": {
      "time_stamp": "2018-12-17 13:15:58"
    },
    "text": "It can be done using HS's Gallery module (which is their usage of slick slider)"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-17 13:14:08",
    "edited": {
      "time_stamp": "2018-12-17 13:17:03"
    },
    "text": "you would set two variables\n```\n// this would grab all the image columns and load their values into the var\n{% set img_columns = hubdb_table(module.hub_db_id).columns|selectattr(\"type\", \"equalto\", \"IMAGE\") %}\n\n{% set slides = [] %}\n```"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-12-17 13:15:28",
    "text": "Then you can loop through them, and use the Jinja `.append` in a for loop to simply populate all the image columns in the `slides` var. Then when using the gallery code you simply use:\n```\n{% gallery \n          \"Gallery\" \n          display_mode='thumbnail' \n          sizing='static', \n          transition='slide', \n          auto_advance='false', \n          overrideable=False, \n          show_pagination='False', \n          slides='{{ slides }}',\n      %}\n```"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-17 13:17:57",
    "text": "I was just thinking that it could be done making an array"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 13:18:27",
    "text": "that makes sense"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-17 13:18:37",
    "text": "i am willing to concede"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-17 13:18:40",
    "text": "You could use foreign id as well; and make your galleries their own tables"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 13:53:15",
    "text": "Oh hi everybody!\nIs there a way to filter a table using an array of values or a string that lists all the filtration criteria separated by a comma or something?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 13:54:47",
    "text": "I have an unknown number of tags that can be added to a hubdb row via a multi-select. I want the client to be able to enter the tag values in a text box in a custom module to filter the table."
  },
  null,
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-12-17 14:33:30",
    "text": "Iâ€™m thinking something like:\n```\n{% set resourceTable = hubdb_table_rows(8675309) %}\n// module.filter_resources would print out a string like:\n// \"adaptive,low_volatility,enhanced\"\n\n{% set resourceTableFiltered = resourceTable|selectattr('resource_tags.name','equalto',module.filter_resources) %}\n```"
  },
  null,
  null
]
[
  null,
  {
    "poster": {
      "poster_name": "Simon Taylor",
      "poster_handle": "simon.t"
    },
    "time_stamp": "2018-02-06 03:22:44",
    "text": "I've been asked about associating deals with customers and companies - Is there an automated API script that anyone's aware of?"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-02-06 04:16:41",
    "text": "Hey <@U7V9DQ31P> I created a URL field and just get it. My HTML code set &lt;iframe src=“dynamic_page_hubdb_row..url”&gt; and it works"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 07:31:29",
    "text": "As far as I know it already does."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 11:33:35",
    "text": "Hey HuBL wizards and HS staff, if you’re looking for a brain teaser - I have a relatively simple module that is wreaking havoc on the page editor screens - it has no JS, The template doesn’t have any JS.\n\nwhen you place the module into a page, it will show “this module has no fields” refresh the edit screen, suddenly the module has fields and they all work. Go to save any edits to that module, and javascript errors up the wazoo and the screen is stuck perpetually saving, and nothing else functions in the editor.\n\n<https://community.HubSpot.com/t5/Content-Design-Questions/Design-Manager-V2-custom-module-acting-really-weird-in-content/m-p/176970#M4645>\n\n(There’s also a video of it occuring)",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-02-06 12:41:34"
      },
      {
        "time_stamp": "2018-02-06 13:45:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 11:43:59",
    "text": "in otherwords if you want to see how to make HubSpot’s page editor explode using only the most mundane html and HuBL there - that’s how you do it"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 12:29:30",
    "text": "Add a space here `{%-set`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 12:29:44",
    "edited": {
      "time_stamp": "2018-02-06 12:29:53"
    },
    "text": "and here `int-%}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 12:30:42",
    "text": "adding spaces on all of those"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 12:30:47",
    "text": "will let you know how it turns out"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 12:30:47",
    "text": "Dont let the `%` touch"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 12:30:59",
    "text": "the attributes"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 12:32:37",
    "text": "Also Save the page and use &amp;hsDebug=True in the url and see if there are any Hubl Errors in the template when viewing page source"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 12:34:38",
    "text": "Also you might need to set `widget.content_column_size` as an integer BEFORE you use it in math"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 12:35:07",
    "text": "no HuBL errors evident when viewing the page with the debug flag.\n\nadding spaces didn’t seem to have an affect.\n\nTrying integer now"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 12:36:16",
    "text": "still no change, still having the issues"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-02-06 12:37:38",
    "text": "When checking for errors did you view source? (Sorry if this is a stupid question)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 12:38:16",
    "text": "yep, I viewed source didn’t see anything out of the norm. I did not go into the developer info"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 12:41:00",
    "text": "developer info doesn’t show any abrupt ends or syntax errors or anything out of the norm either"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-02-06 12:41:34",
    "text": "<http://jinja.pocoo.org/docs/2.10/templates/#whitespace-control>\n\nIncase anyone else was as confused as I was seeing those {%- ... -%}"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 12:43:12",
    "text": "yea sorry if that confused anyone we use that alot  especially when doing macros(which doesn’t apply to this module)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 13:11:04",
    "text": "Yea.. I feel like I should be on the HS payroll for how often I hit bugs like this. (not saying anything bad about the quality of the devs work, it’s just that I tend to find the really weird quirks that only happen if conditions are just bizzarely perfect.) I’m guessing this is one of those situations"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 13:24:48",
    "text": "Thank you guys for having taken a look. Appreciate it, those ideas were all worth the shot."
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-02-06 13:45:02",
    "text": "Reading the documentation explains why even when I would strip whitespace from my macros it would still render that space in the HTML... gotta put the stripping on the for loops as well!"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-02-06 13:46:58",
    "text": "This actually brings up a question I've always had about the HubL instantiation of Jinja... to what degree does this documentation relate to HubL ? Should we assume that all base information in the Jinja docs are valid + there's a layer of HubSpot's HubL documentation *on top of* the base Jinja?"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-02-06 13:48:51",
    "edited": {
      "time_stamp": "2018-02-06 13:50:00"
    },
    "text": "That's kinda how I view it. My approach is, if it's in HS docs, it's gospel, if it's in Jinja docs, it's worth a try. If it works great, if not oh well. I also try to avoid dependance on anything that _isn't_ in HubSpot documentation, just in case it changes in the future."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-02-06 13:53:29",
    "text": "I second Mark’s note here. That’s how I view it. If it works - awesome, but I don’t have an expectation that it works and I try to avoid relying heavily on anything that is not documented in the HubL docs."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-02-06 18:44:38",
    "text": "We strive to make HubL 100% compatible with Jinja, but there are a few cases where it’s not. Please point out any cases you find that don’t work."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-02-06 18:45:24",
    "text": "Of course jinjava is open source so feel free to contribute fixes as well. :slightly_smiling_face: <https://github.com/HubSpot/jinjava>"
  }
]
[
  {
    "poster": {
      "poster_name": "Delali Dzirasa",
      "poster_handle": "ddzirasa"
    },
    "time_stamp": "2024-01-26 10:19:14",
    "text": "We want it triggerd on firm submission (if possible).  Yes we need a new object instance to be created and then send form data to that custom object.  <@U0695UMTM2M>"
  },
  {
    "poster": {
      "poster_name": "Delali Dzirasa",
      "poster_handle": "ddzirasa"
    },
    "time_stamp": "2024-01-26 10:21:37",
    "text": "For example weâ€™re using a custom object to track speaking engagements.  Internally we have a workflow that we use to track this custom object that we uses as inbound for potential customers.\n\nWe share that link externally to a form for people request a speaker for an engagement.  When they make that request we want it to collect the metadata (talk, description, location, speaker, budget, etc) and that because a custom object that we work through an internal pipeline."
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-26 13:28:07",
    "text": "Cool, One last question: Is there a new contact record created when a new form is submitted?"
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-26 13:29:01",
    "text": "There are really 2 ways to do what you are asking for: 1 is native HubSpot where you can use the article you described and we can have the system create a new custom object reference directly from the form (I have that working in a dev environment)."
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-26 13:29:52",
    "text": "If you want a custom coded action in the workflow to do this we can set it up so that when a new contact is created on form submission it enrolls the contact in a work-flow and we create a new custom object record and do the association via the CRM api. Both are good options."
  },
  {
    "poster": {
      "poster_name": "Marcio Oliveira",
      "poster_handle": "marcio.oliveira"
    },
    "time_stamp": "2024-01-26 14:47:50",
    "text": "hey, thanks a lot, i solve that sending date like a getTime()."
  }
]
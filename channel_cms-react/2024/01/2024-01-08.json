[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 13:50:36",
    "edited": {
      "time_stamp": "2024-01-08 13:51:45"
    },
    "text": "can react modules use \"tags\" to show up in any of the other sections in the editor instead of under \"All\"? For example, can I tag it in some way to show up under \"Forms and Buttons\"? (I've never really used those tags before)",
    "reply_count": 21,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-08 13:52:27"
      },
      {
        "time_stamp": "2024-01-08 13:53:03"
      },
      {
        "time_stamp": "2024-01-08 13:53:19"
      },
      {
        "time_stamp": "2024-01-08 13:54:58"
      },
      {
        "time_stamp": "2024-01-08 13:54:59"
      },
      {
        "time_stamp": "2024-01-08 13:57:42"
      },
      {
        "time_stamp": "2024-01-08 14:04:14"
      },
      {
        "time_stamp": "2024-01-08 14:04:34"
      },
      {
        "time_stamp": "2024-01-08 14:04:45"
      },
      {
        "time_stamp": "2024-01-08 14:05:09"
      },
      {
        "time_stamp": "2024-01-08 14:05:39"
      },
      {
        "time_stamp": "2024-01-10 11:01:07"
      },
      {
        "time_stamp": "2024-01-10 11:01:22"
      },
      {
        "time_stamp": "2024-01-10 11:01:50"
      },
      {
        "time_stamp": "2024-01-10 11:18:51"
      },
      {
        "time_stamp": "2024-01-10 11:18:54"
      },
      {
        "time_stamp": "2024-01-10 11:26:26"
      },
      {
        "time_stamp": "2024-01-10 11:40:44"
      },
      {
        "time_stamp": "2024-01-10 11:42:03"
      },
      {
        "time_stamp": "2024-01-10 11:42:43"
      },
      {
        "time_stamp": "2024-01-18 06:18:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-08 13:52:27",
    "text": "I don’t think we’ve tried, but yes I believe should work and it would be adding categories in the exported meta object: <https://developers.HubSpot.com/docs/cms/building-blocks/modules/add-categories>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 13:53:03",
    "text": "neat, this is actually pretty great if it works (I'll test)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 13:53:19",
    "edited": {
      "time_stamp": "2024-01-08 13:53:25"
    },
    "text": "ideally, they would live under \"theme\" but this is a very close next best thing"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 13:54:58",
    "text": "interesting sorting of categories in the editor too, not alphabetical..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 13:54:59",
    "text": "hmm"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 13:57:42",
    "text": "it would be great if I could hide some standard HubSpot modules as well"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-08 14:04:14",
    "text": "Have you seen `hidden_modules`  to be used in theme.json?\n```\"hidden_modules\": [\n \"@HubSpot/button\",\n \"@HubSpot/form\"\n ]```\n<https://developers.HubSpot.com/docs/cms/building-blocks/themes/hide-modules-and-sections>"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-08 14:04:34",
    "edited": {
      "time_stamp": "2024-01-08 14:04:42"
    },
    "text": "There also is `hide_all_default_modules: true`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:04:45",
    "text": "amazing, thank you so much for that"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-08 14:05:09",
    "text": "You can also do per template with:\n\n```// example template file\n&lt;!--\ntemplateType: page\nisAvailableForNewContent: true\nlabel: Ticket listing\nscreenshotPath: ../images/template-previews/ticket-listing.png\nhiddenModules:\n- '@hubSpot/follow_me'\n- ../modules/form\nhiddenSections:\n- ../sections/card\n--&gt;```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:05:39",
    "text": "^ that's the best"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:31:15",
    "edited": {
      "time_stamp": "2024-01-08 14:31:30"
    },
    "text": "minor typo in docs I think (<https://github.HubSpot.com/cms-js-building-block-examples/reference/js-modules.html#directory-structure-requirements|here>). `/components/modules/ExampleModule/index.js` should either be .js or .jsx but both are listed"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:35:58",
    "text": "and I think fields has to be a .jsx no?\n```export { fields } from './ExampleModuleFields.js;```\n(just a bit lower on that page)",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-08 14:39:24"
      },
      {
        "time_stamp": "2024-01-08 14:40:46"
      },
      {
        "time_stamp": "2024-01-08 14:40:57"
      },
      {
        "time_stamp": "2024-01-08 14:41:08"
      },
      {
        "time_stamp": "2024-01-08 14:41:23"
      },
      {
        "time_stamp": "2024-01-08 14:41:42"
      },
      {
        "time_stamp": "2024-01-08 14:41:46"
      },
      {
        "time_stamp": "2024-01-08 14:42:32"
      },
      {
        "time_stamp": "2024-01-08 14:42:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:37:57",
    "text": "also, just to be double sure, it doesn't matter what I name my component if I am exporting it as the default inside of the component and then using `default as Component` when I re-export it?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-01-08 14:39:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2024-01-08 14:39:24",
    "text": "i think either should work unless you see otherwise, vite builds are forgiving with extensions or the lack thereof. the ESM standard of using `.js` gets confusing with jsx/ts/tsx being the ‘real’ extensions"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2024-01-08 14:39:31",
    "text": "yup, correct"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:40:46",
    "text": "ok, cool, yea, just a someone who is easily confused, I think it should stay consistent in the example context"
  },
  {
    "text": "",
    "time_stamp": "2024-01-08 14:40:57"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:41:08",
    "text": "so like here for index"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2024-01-08 14:41:23",
    "text": "yeah the `.js` above in that one is definitely a typo"
  },
  {
    "poster": {
      "poster_name": "Ben Briggs",
      "poster_handle": "bbriggs"
    },
    "time_stamp": "2024-01-08 14:41:42",
    "text": "when importing it can be flexible, but point taken on consistency"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:41:46",
    "text": "finally re-reading the docs to see all the things I missed"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 14:42:32",
    "text": "same consistency typo with fields here:"
  },
  {
    "text": "",
    "time_stamp": "2024-01-08 14:42:43"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 15:35:28",
    "text": "is there a way to only use an import if I am running my code locally / via proxy?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-08 15:36:02",
    "text": "either the `import whatever` or as a conditional check on a component"
  }
]
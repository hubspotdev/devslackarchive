[
  {
    "poster": {
      "poster_name": "KJ",
      "poster_handle": "karlon"
    },
    "time_stamp": "2019-05-01 03:37:41",
    "text": "Hi Community,\nHas anyone been able to do this or no how?\nEnd goal: Uses are logging into a website hosted on Wordpress. When they submit a form there since they already logged in I don't want them to have to enter their email address again. I want to submission to be connected to a contact in HubSpot and sync to HubSpot. Any thoughts on this?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-01 03:47:02"
      },
      {
        "time_stamp": "2019-05-01 04:01:17"
      },
      {
        "time_stamp": "2019-05-01 04:22:24"
      },
      {
        "time_stamp": "2019-05-01 04:23:41"
      },
      {
        "time_stamp": "2019-05-01 05:07:47"
      },
      {
        "time_stamp": "2019-05-01 05:26:37"
      }
    ]
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2019-05-01 03:47:02",
    "text": "hii <@UEZJ74UN8> so if i am getting you correctly, you are looking for auto-populate of email address for wordpress login users right ?"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-05-01 03:50:29",
    "text": "or you don't want to show them `email` field for logged in users ?"
  },
  {
    "poster": {
      "poster_name": "KJ",
      "poster_handle": "karlon"
    },
    "time_stamp": "2019-05-01 04:01:17",
    "text": "Yes either auto populate the email field or somehow have it recognize the user and then send that submission back to HubSpot with the email field being present..."
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-05-01 04:22:24",
    "text": "we can achieve that with little tweak i think, haven't tried yet, but if we can setup the email in the `hs_cookie` it will do the magic."
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-05-01 04:23:41",
    "text": "just like if we submitted any form, the email is available in other forms too, as it stores in the cookie, the same way, so if we set that on customer login, it has to work, if not then we can find out alternative."
  },
  {
    "poster": {
      "poster_name": "KJ",
      "poster_handle": "karlon"
    },
    "time_stamp": "2019-05-01 05:07:47",
    "text": "I think I get the logic. What endpoint would I need to use here?"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-05-01 05:26:37",
    "text": "no endpoint, you need to add it on wordpress end, code snippet, check on any hook like `init`  if the user is login set the cookie, `HubSpotutk` not sure if its good, but this is how we can do that i suppose. <@UEZJ74UN8>"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 07:24:51",
    "text": "Hey <@UGXQK1B7Y> what method of authentication are you using? API key or OAuth token?  Also just to double check, is this end API you are using  <https://developers.HubSpot.com/docs/methods/analytics/analytics-overview>?"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:00:52",
    "text": "Hi there guys, question - is there a reason that the `<https://api.hubapi.com/content/api/v2/menus/>` api endpoint is not sending an `Access-Control-Allow-Origin` header with the requested payload? This endpoint obviously returns data from a REST client such as Postman but, when trying to call it from an AJAX request in jQuery we are presented with the CORS security error. Thanks in advance :slightly_smiling_face:",
    "reply_count": 15,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-01 09:04:12"
      },
      {
        "time_stamp": "2019-05-01 09:04:40"
      },
      {
        "time_stamp": "2019-05-01 09:07:36"
      },
      {
        "time_stamp": "2019-05-01 09:08:20"
      },
      {
        "time_stamp": "2019-05-01 09:08:42"
      },
      {
        "time_stamp": "2019-05-01 09:09:09"
      },
      {
        "time_stamp": "2019-05-01 09:09:38"
      },
      {
        "time_stamp": "2019-05-01 09:10:34"
      },
      {
        "time_stamp": "2019-05-01 09:10:39"
      },
      {
        "time_stamp": "2019-05-01 09:12:38"
      },
      {
        "time_stamp": "2019-05-01 09:14:36"
      },
      {
        "time_stamp": "2019-05-01 09:15:00"
      },
      {
        "time_stamp": "2019-05-01 09:16:02"
      },
      {
        "time_stamp": "2019-05-01 09:17:33"
      },
      {
        "time_stamp": "2019-05-01 09:17:44"
      }
    ]
  },
  null,
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 09:04:12",
    "text": "Hey <@UHNBCT0Q1> that’s because (with very few exceptions) HubSPot’s API does not support cross-origin requests"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 09:04:40",
    "text": "This way you won’t have your api key or access token exposed on the front end"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:07:36",
    "text": "Hi again Zack, thanks for the quick reply"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:08:20",
    "text": "I understand this to some extent however, it appears that I only receive the CORS-related error for this specific endpoint. The `forms` or `tables` endpoints for example do not have the same issue"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:08:42",
    "text": "Could you clarify why this is the case and if possible, a solution/workaround for the `menus` api?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 09:09:09",
    "text": "forms and tables are some of the few exceptions I referred to above"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 09:09:38",
    "edited": {
      "time_stamp": "2019-05-01 09:09:41"
    },
    "text": "for a workaround, can you tell me a bit more about what you are trying to accomplish with it?"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:10:34",
    "text": "Hmm, yeah okay that makes sense"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:10:39",
    "text": "Sure, let me summarise"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:12:38",
    "text": "We're trying to get a list of the menu items for a given menu from the `navigation` section of the portal, so that we can build our own HTML menu-structure"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 09:14:36",
    "text": "is this on a HubSpot hosted page or another CMS?"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:15:00",
    "text": "yes, this is on a HubSpot-hosted page (a test portal)"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 09:16:02",
    "text": "I think this will get you what you want then <https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#menu> and <https://designers.HubSpot.com/docs/hubl/hubl-supported-variables> (scroll down to Menu node variables)"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:17:33",
    "text": "Interesting, I will take a look now thanks"
  },
  {
    "poster": {
      "poster_name": "Kane Small",
      "poster_handle": "kane.small"
    },
    "time_stamp": "2019-05-01 09:17:44",
    "text": "if I have any further questions I'll let you know :thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Fritz Roca",
      "poster_handle": "fritzr"
    },
    "time_stamp": "2019-05-01 11:32:05",
    "text": "Im using the oauth token and using the API report."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 11:32:50",
    "text": "When you installed the app into your portal, did you request the `business-intelligence` scope?"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-05-01 12:02:53",
    "text": "Is it possible to add an option to a pre-defined HubSpot property through the API?\n\nMy specific issue is that when new users register for our product, I use the API to create a contact for them if they don't exist yet. However the *original source* property gets sets by default to *Offline Sources* which is not an accurate representation of the true source. It's online and from our software directly. In the HubSpot GUI there is no way to add new source options, but was curious if I could do it in the API manually? Or if anyone has any other workaround so that our web analytics is more accurate for contacts who are created from our software directly.",
    "reply_count": 14,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-01 12:07:00"
      },
      {
        "time_stamp": "2019-05-01 12:07:41"
      },
      {
        "time_stamp": "2019-05-01 12:23:44"
      },
      {
        "time_stamp": "2019-05-01 12:25:13"
      },
      {
        "time_stamp": "2019-05-01 12:25:22"
      },
      {
        "time_stamp": "2019-05-01 12:30:43"
      },
      {
        "time_stamp": "2019-05-01 12:31:24"
      },
      {
        "time_stamp": "2019-05-01 12:31:38"
      },
      {
        "time_stamp": "2019-05-01 12:31:44"
      },
      {
        "time_stamp": "2019-05-01 12:34:01"
      },
      {
        "time_stamp": "2019-05-01 12:34:25"
      },
      {
        "time_stamp": "2019-05-01 12:35:03"
      },
      {
        "time_stamp": "2019-05-01 12:36:43"
      },
      {
        "time_stamp": "2019-05-01 12:37:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:07:00",
    "text": "Hey <@UEZ3125LL> you can’t add options to that property even though the API.  IMO the best solution would be to make sure the HubSpot tracking code is in your software (assuming a webapp) then attach the cookie to the contact record through either the Forms API or the Tracking Code API with the identify method to allow HubSpot to calculate the source correctly."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:07:41",
    "text": "Another option is to simply create your own source property and fill it with whatever options you want, but the built in traffic reports will continue to not be accurate"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-05-01 12:23:44",
    "text": "Thanks <@UFBNA9K9A>. Unfortunately I don't think the first way will work because we don't/can't have the tracking code on our software website as it's a different domain. We have our marketing website with HubSpot, but then where users signup/login is on a different domain. I believe the tracking code can only be installed on a HubSpot domain, correct?"
  },
  {
    "poster": {
      "poster_name": "Fritz Roca",
      "poster_handle": "fritzr"
    },
    "time_stamp": "2019-05-01 12:23:59",
    "text": "I only include report in my scope."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:25:13",
    "text": "nope, the tracking code can actually be installed on any domain and it can handle cross domain tracking"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:25:22",
    "text": "it’s just automatically on any HubSpot hosted domaisn"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:27:50",
    "text": "that’s an old scope that applies to something that’s actually no longer available. That makes sense with the error message you got, if you change the scope you are requesting it should work"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-05-01 12:30:43",
    "text": "oh really??? That's amazing, glad I asked this question. For some reason I thought it couldn't."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:31:24",
    "text": "Yup, glad you asked too"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:31:38",
    "edited": {
      "time_stamp": "2019-05-01 12:31:41"
    },
    "text": "let me know if you run into any issues or have any other questions around this"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-05-01 12:31:44",
    "text": "Thanks! If I'm reading the Tracking Code API right, it sounds like I went about creating contacts in an inefficient way and can just create new contacts with this API instead of the Contacts API?"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-05-01 12:34:01",
    "text": "When users signed up in our software, I used the contacts API to see if they existed and if not, created them then. But it sounds like the better way is to instead use the Identify method of the Tracking Code API, as that will not only create/update the contact but also associate it to the cookie at the same time. Am I understanding correctly?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:34:25",
    "text": "Contacts API is good for offline stuff but you might want to think about this <https://developers.HubSpot.com/docs/methods/forms/submit_form_v3> since you can create a contact and tell HS about the cookie in a single call"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:35:03",
    "edited": {
      "time_stamp": "2019-05-01 12:35:26"
    },
    "text": "The identify method is good for if you don’t want the form submission showing up on the timeline"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-01 12:36:43",
    "text": "given that it’s for a sign up I’d recommend Forms, if it was a sign in, then I would say that’s what identify is good for"
  },
  {
    "poster": {
      "poster_name": "Josh Saunders",
      "poster_handle": "jsaunders"
    },
    "time_stamp": "2019-05-01 12:37:40",
    "text": "awesome, thanks! Appreciate it"
  }
]
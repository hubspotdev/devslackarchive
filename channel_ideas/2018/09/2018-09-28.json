[
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-28 12:24:56",
    "text": "asked for this in the past but haven’t asked recently.\nIt’d be really nice if when we use require_js, we could add attributes to be injected into the script tag\nHere’s an example of what I’d like to be able to output:\n`&lt;script src=\"<https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.17/vue.js>\" integrity=\"sha256-3kjowa0CUPPK4W+yaGpNP1exjs8gbX2SSsToEMd06K8=\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;`\nthe integrity bit is a security feature, in-case CDNJS ever gets hacked and someone updates that file, the file would stop getting loaded on our HS sites, preventing HS sites from being hacked on the front end."
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-28 12:36:12",
    "text": "Related to CDNing scripts  - this is a bit of a far out there idea but would benefit all HS sites.\n\nThe ability to pick cloudflare(cdnjs) or HS hosted libraries in the linked files panels.\nhere’s where things would get real useful: if every HS dev is using the HS or cloudflare CDN’d files, all of the HS sites are simultaneously helping eachother’s performance because those files are more likely to be cached by visitors already. preventing them from being re-downloaded. HubSpot could also handle adding the SRI’s.\n\nOn top of that HS could start providing some killer functionality for developers that other platforms can’t easily offer:\n• Automatic version conflict detection - if two modules are calling for different versions of the same file, that info can be displayed to developers so they can update or downgrade a module’s version that it’s using, preventing conflict and preventing duplicated code.\n• HS gets analytics on what libraries are in the highest demand and can work toward making it easier to use them on HS. Example if React and Vue are heavily used, then adding babel functionality would be a good idea.",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-09-28 14:40:41"
      },
      {
        "time_stamp": "2018-09-28 14:41:24"
      },
      {
        "time_stamp": "2018-09-28 14:57:25"
      },
      {
        "time_stamp": "2018-09-28 15:24:44"
      },
      {
        "time_stamp": "2018-09-28 15:32:43"
      },
      {
        "time_stamp": "2018-09-28 18:02:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-09-28 14:40:41",
    "text": "We’ve talked about this, particularly in the context of the new modules framework. The challenge is making sure that whatever list we offer stays up to date (see our ancient jquery in settings). We’d also prefer to use assets served from customer domains rather than common ones because it’s better for branding and reduces HTTP connections, especially in an HTTP/2 world. Lastly, having the assets on domains we host keeps them under our control so we can assure they’re working."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-09-28 14:41:24",
    "text": "As for analytics, we can already do that by crawling templates and settings, though it’s a bit harder."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-28 14:57:25",
    "text": "Cool that you guys have thought about some of this more above and beyond type functionality.\n\nMaybe its just me, i dont personally think my clients know nor care if my vuejs(or other library) looks like its coming from their domain. \n\nI do get and understand the http2 side of it though. As a partial offset though if you know youre linking to cdn files you could preload, dns prefetch or preconnect. \n"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-09-28 15:24:44",
    "text": "yup, we’re doing a lot of predloads now"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-28 15:32:43",
    "text": "you are? I haven’t seen that on any portals lately?"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-09-28 18:02:54",
    "text": "yeah, see the headers for pretty much every site"
  }
]
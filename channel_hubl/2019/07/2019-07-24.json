[
  {
    "poster": {
      "poster_name": "Takuya",
      "poster_handle": "aimi"
    },
    "time_stamp": "2019-07-24 01:05:28",
    "edited": {
      "time_stamp": "2019-07-24 01:08:36"
    },
    "text": "Thank you!\n\nI want to know How to use variables in a custom module.\n\ncustom module\n```\n{% boolean \"display_HeaderMenu\" label=\"Display HeaderMenu\" value=\"false\", export_to_template_context=\"true\" %}\n{% set display_HeaderMenu = widget_data.display_HeaderMenu.value %}\n{% boolean \"display_FooterMenu\" label=\"Display FooterMenu\" value=\"true\", export_to_template_context=\"true\" %}\n{% set display_FooterMenu = widget_data.display_FooterMenu.value %}\n```\n\ntemplate\n```\n{% module \"XXX\" module_id=\"XXX\" label=\"XXX\" %}\n\n{{ display_HeaderMenu }}\n{{ module.display_HeaderMenu  }}\n{{ XXX.display_HeaderMenu  }}\n```\n↑ non value"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-24 04:52:31",
    "text": "You use the fields on the right side of the custom module editor then use copy snippet to get the hubl"
  },
  {
    "poster": {
      "poster_name": "Ryan Patterson",
      "poster_handle": "ryan290"
    },
    "time_stamp": "2019-07-24 12:25:26",
    "text": "I'm somewhat new to HubL. In my blog listing template code, how would I determine if I'm not on the blog author listing or topic/tag listing page. I know there are conditional statements to determine if you are on those other listing pages, but I need an expression that checks to see if I'm not on either of those listing pages. I have some elements that will only show up on the main blog listing page. I see the \"not\" operator in the docs, but doesn't give any examples on how to use it.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-24 12:32:19"
      },
      {
        "time_stamp": "2019-07-24 12:32:34"
      },
      {
        "time_stamp": "2019-07-24 12:33:01"
      },
      {
        "time_stamp": "2019-07-24 12:36:13"
      },
      {
        "time_stamp": "2019-07-24 12:39:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-07-24 12:32:19",
    "text": "Hey Ryan, I think you want something like this:"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-07-24 12:32:34",
    "text": "{% if not blog_author and not topic %}{% endif %}"
  },
  {
    "poster": {
      "poster_name": "Ryan Patterson",
      "poster_handle": "ryan290"
    },
    "time_stamp": "2019-07-24 12:33:01",
    "text": "Thanks, Jason! I'll try that out."
  },
  {
    "poster": {
      "poster_name": "Ryan Patterson",
      "poster_handle": "ryan290"
    },
    "time_stamp": "2019-07-24 12:36:13",
    "text": "Yep, that was it! Thanks again."
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-07-24 12:39:07",
    "text": "Awesome - no problem at all!"
  },
  {
    "poster": {
      "poster_name": "Dominik Goralczyk",
      "poster_handle": "dgoralczyk"
    },
    "time_stamp": "2019-07-24 14:16:20",
    "text": "I might be in the wrong channel, but I need to figure out how to build a dynamic menu from scratch. The point is that I would be able to manipulate all li’s, classes, and other attributes. I just need a barebones menu.",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-07-24 14:17:35"
      },
      {
        "time_stamp": "2019-07-24 14:21:59"
      },
      {
        "time_stamp": "2019-07-24 14:23:16"
      },
      {
        "time_stamp": "2019-07-24 14:24:01"
      },
      {
        "time_stamp": "2019-07-24 14:24:09"
      },
      {
        "time_stamp": "2019-07-24 14:25:03"
      },
      {
        "time_stamp": "2019-08-02 13:05:42"
      },
      {
        "time_stamp": "2019-08-02 13:06:06"
      },
      {
        "time_stamp": "2019-08-02 13:17:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-07-24 14:17:35",
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#menu>"
  },
  {
    "poster": {
      "poster_name": "Dominik Goralczyk",
      "poster_handle": "dgoralczyk"
    },
    "time_stamp": "2019-07-24 14:21:59",
    "text": "Thanks, this might work"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-24 14:23:16",
    "text": "Here’s an example of how you could use the HubL function\n<https://designers.HubSpot.com/code-gallery/entry/founders/TheWebTech-Basic-Menu-using-Menu-Function?hsLang=en>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-24 14:24:01",
    "text": "tutorial mentioned in description is not available, will likely post it in a different format but won’t be able to do that for awhile"
  },
  {
    "poster": {
      "poster_name": "Dominik Goralczyk",
      "poster_handle": "dgoralczyk"
    },
    "time_stamp": "2019-07-24 14:24:09",
    "text": "cool! that is exactly what I was looking for!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-24 14:25:03",
    "text": "thumb it up if you find it useful :wink:"
  }
]
[
  {
    "poster": {
      "poster_name": "Jeff Bell - Level 4",
      "poster_handle": "jeffrey.bell"
    },
    "time_stamp": "2024-12-12 08:55:40",
    "text": "Hey all. I'm pretty new to hubl and am wondering if there's a way to loop through all the files in a folder and display them?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-12-12 09:09:32"
      },
      {
        "time_stamp": "2024-12-12 09:35:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:09:32",
    "text": "What do you mean files in a folder? Like the file manager? We don’t have access to that in hubl. You would need to use the files api. If it is for something else let me know"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:13:20",
    "text": "This would need to be in a membership\n/private content page to use hubl\n\nYou would need to have graphql- not sure you could use lists, but you could create a graphql query that has the same filter as the list of it is a dynamic list. \n\nYou might be able to do the list and get all the contacts on that list, but I don’t know how to do that in GRaphael \n\nThen you would need to build out that functionality using JavaScript or some sort of tubular data filter like isotope.js"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:17:42",
    "text": "Hey josh. Been there on this. Recently I saw that when creating a file property in an object it gives you the option of public/private\n\nDo you have the file property set as public?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:18:03",
    "text": "I don’t know of his works, I’m testing it right now because I have to manage this for a portal I’m building "
  },
  {
    "poster": {
      "poster_name": "Josh Braner",
      "poster_handle": "braner.josh"
    },
    "time_stamp": "2024-12-12 09:19:56",
    "text": "Hey Nicholas, yes it's set as public. I'm having no issues with files uploaded from within the CRM... the issue is from files that were uploaded via the form submission it seems. As far as I can tell, anything uploaded via form submission is private no matter what you do, and there doesn't seem to be a way to get a public url from the code side since the file isn't in the file manager."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:21:31",
    "text": "Yes. I dealt with this in a membership portal and I made the assumption that this public item would change that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:22:06",
    "text": "Wanted them to upload their logo and then display it on their partner page. But I had to do some stuff to it. Let me find my code snippet and see what I did"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:30:30",
    "text": "<https://gist.github.com/NickDeckerDevs/82222490a4d40db1e5db864132709496|https://gist.github.com/NickDeckerDevs/82222490a4d40db1e5db864132709496>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:31:25",
    "text": "I built a custom form on the front end and used this to upload it and return the url and then I would update a string property with the url"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-12-12 09:32:02",
    "text": "I can’t find the front end upload for right now mom not sure I have it. \n\nI likely used some very basic file upload generic form"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2024-12-12 09:35:26",
    "edited": {
      "time_stamp": "2024-12-12 09:36:30"
    },
    "text": "Best way to manage this (I would say) is a custom module that uses a <https://developers.HubSpot.com/beta-docs/reference/cms/fields/module-theme-fields#file|file field> with a repeater option turned on. Then use a {% for file in module.name_of_file_field %} loop, which will give you the files public urls to manage in HTML however you wish\n\nIn the module settings, you can configure it with any number of files (from any folder) from the file manager"
  },
  {
    "poster": {
      "poster_name": "Josh Braner",
      "poster_handle": "braner.josh"
    },
    "time_stamp": "2024-12-12 09:39:14",
    "text": "ahhhh, man. I really appreciate this, but unfortunately this is the exact route I was avoiding, wanted to accomplish this entirely using a normal HS form on the frontend. I'm fully aware I'm trying to bend a jerry-rigged solution into place, just was trying to make it happen within some budget constraints in a way that would still work.\n\nAppreciate the help either way, man."
  },
  {
    "poster": {
      "poster_name": "Josh Braner",
      "poster_handle": "braner.josh"
    },
    "time_stamp": "2024-12-12 09:58:08",
    "text": "You could \"technically\" achieve this with HubL as long as the contacts are &lt; 1k. I'm not saying this is the best solution, as pulling this amount of data on page load is definitely going to cost you some load time... but it technically does work.\n\nGetting contact information requires that the module be behind an access controlled membership page for security reasons, so keep that in mind.\n\nYou could try something like this... we'll just say your property is \"xmas_card\"\n\n```{% set contacts_list = [] %}\n{% set max_iterations = 10 %}\n\n{% for i in range(max_iterations) %}\n\n  {% set list_offset = (loop.index0 * 100) %}\n  {% set add_contacts = crm_objects(\"contact\", \"xmas_card=yes=&amp;limit=100&amp;offset=\" ~ list_offset, \"firstname,lastname,xmas_card\") %}\n  {% do contacts_list.append(add_contacts.results) %}\n\n{% endfor %}\n\n{{contacts_list}}```\nFrom there, you'd build out a module like normal and use something like isotope to create your filters.\n\nAgain, I'm not saying this is the best solution, or even a good one, only that it \"technically\" works. Try/use it at your own risk."
  },
  {
    "poster": {
      "poster_name": "Atul Singh",
      "poster_handle": "atul564"
    },
    "time_stamp": "2024-12-12 10:10:01",
    "text": "Thank you for the above help. Thank you so much.\n\nI will try this"
  },
  {
    "text": "Hi <@U05AG9W9FN1> I have an Active Members List and I want to display all the contact data on the website. However, I'm only able to retrieve 20 contacts out of the 42 in the list. I have a total of 5,169 contacts in my database. I want to display only the contact data that has a `territory_name`  property associated with it\n\nIs there anything I might be doing wrong? Please help me resolve this.\n\n`{% set contacts_list = [] %}`\n`{% set max_iterations = 3 %} {# Reduce max_iterations for testing #}`\n\n`{% for i in range(max_iterations) %}`\n  `{% set list_offset = (loop.index0 * 100) %}`\n  `{% set add_contacts = crm_objects(\"contact\", \"limit=500&amp;offset=\" ~ list_offset, \"firstname,lastname,territory_name,territory_postcodes\") %}`\n  \n  `{% for contact in add_contacts.results %}`\n    `{% if contact.territory_name %}`\n      `{% do contacts_list.append(contact) %}`\n    `{% endif %}`\n  `{% endfor %}`\n`{% endfor %}`\n\n`&lt;h2&gt;Contacts with Territory Name and Postcodes&lt;/h2&gt;`\n`&lt;ul&gt;`\n  `{% for contact in contacts_list %}`\n    `&lt;li&gt;`\n      `&lt;strong&gt;{{ loop.index }} First Name:&lt;/strong&gt; {{ contact.firstname }} &lt;br&gt;`\n      `&lt;strong&gt;Last Name:&lt;/strong&gt; {{ contact.lastname }} &lt;br&gt;`\n      `&lt;strong&gt;Territory Name:&lt;/strong&gt; {{ contact.territory_name }} &lt;br&gt;`\n      `&lt;strong&gt;Territory Postcodes:&lt;/strong&gt; {{ contact.territory_postcodes }}`\n    `&lt;/li&gt;`\n  `{% endfor %}`\n`&lt;/ul&gt;`\n`&lt;p&gt;Total Contacts with Territory Name: {{ contacts_list|length }}&lt;/p&gt;`",
    "time_stamp": "2024-12-12 22:19:00"
  },
  {
    "text": "",
    "time_stamp": "2024-12-12 22:19:29"
  }
]
[
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-05-21 04:56:39",
    "text": "hey <@UDJV5B73R> thanks for the guide, this solved my issue. its not full dynamic but it gets the job done"
  },
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-05-21 04:56:44",
    "text": "thanks alot !!!"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2021-05-21 07:45:23",
    "text": "Jinjava 2.5.8 is now released, which includes namespaces"
  },
  {
    "poster": {
      "poster_name": "Bhréin Brannick",
      "poster_handle": "bhreinb"
    },
    "time_stamp": "2021-05-21 08:10:30",
    "text": "super <@UCJANAW1Y> thank you, have a great Friday :+1:"
  },
  {
    "poster": {
      "poster_name": "Bhréin Brannick",
      "poster_handle": "bhreinb"
    },
    "time_stamp": "2021-05-21 10:52:32",
    "text": "Hey looks like it hasn’t made it to maven central as of yet? Is it normal for it to be this long?"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2021-05-21 11:13:33",
    "text": "<https://search.maven.org/artifact/com.HubSpot.jinjava/jinjava/2.5.8/jar> it looks like it is there"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2021-05-21 11:18:03",
    "text": "<https://repo1.maven.org/maven2/com/HubSpot/jinjava/jinjava/2.5.8/>"
  },
  {
    "poster": {
      "poster_name": "Bhréin Brannick",
      "poster_handle": "bhreinb"
    },
    "time_stamp": "2021-05-21 11:25:17",
    "text": "Hmm weird I was looking here `<https://mvnrepository.com/artifact/com.HubSpot.jinjava/jinjava>`"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 11:40:00",
    "edited": {
      "time_stamp": "2021-05-21 11:40:11"
    },
    "text": "Getting a lexical error for a JS file - I’m assuming it’s because the JS file contains {{, is it possible to turn this off for a file?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-05-21 11:40:27",
    "text": "Wrap your JS in raw tags"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-05-21 11:40:39",
    "text": "{{ raw }}"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 11:40:48",
    "text": "i prefer medium rare"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 11:41:03",
    "text": "thanks :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 12:47:27",
    "text": "So for anyone else - a lazy way to handle this (i’m using rollup) is to add this to your output:\n\n```    banner: '{% raw %}',\n    footer: '{% endraw %}'```",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-05-21 12:47:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 12:47:42",
    "edited": {
      "time_stamp": "2021-05-21 12:47:50"
    },
    "text": "so:\n\n```  output: {\n    file: \"......\",\n    format: \"iife\",\n    sourcemap: false,\n    banner: '{% raw %}',\n    footer: '{% endraw %}'\n  },```"
  },
  {
    "poster": {
      "poster_name": "Cory Park",
      "poster_handle": "cory"
    },
    "time_stamp": "2021-05-21 16:18:22",
    "text": "Is there a way to easily get the last value in an array, or do I have to loop through it?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-21 16:20:51"
      },
      {
        "time_stamp": "2021-05-21 16:22:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-05-21 16:20:51",
    "text": "{{ items | last }}"
  },
  {
    "poster": {
      "poster_name": "Cory Park",
      "poster_handle": "cory"
    },
    "time_stamp": "2021-05-21 16:22:57",
    "text": "well that IS easy … :smile: thx"
  },
  {
    "poster": {
      "poster_name": "Stephen Yager",
      "poster_handle": "stephen.yager"
    },
    "time_stamp": "2021-05-21 19:28:47",
    "text": "Hello fellow devs, I am looking for a bit of help with this one. I am trying to get all rows (hubdb_table_rows) that match `Grey &amp; Sons` but the results returned are null. The filter I am using is `name__eq=Grey &amp; Sons`. I know that this is using the same format from the API docs, but even trying to encode the ampersand into `&amp;` doesn't seem to work. Is where any way to search for an exact match with a field that contains an ampersand?"
  }
]
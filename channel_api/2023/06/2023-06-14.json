[
  {
    "poster": {
      "poster_name": "Álvaro Castellanos López",
      "poster_handle": "alvaro747"
    },
    "time_stamp": "2023-06-14 05:36:41",
    "text": "Hi, Álvaro from LeadIQ :wave: We have a question/suggestion I’ve posted in HubSpot community <https://community.HubSpot.com/t5/APIs-Integrations/More-granular-batching-create-contact-system/m-p/807171#M64874>\nThanks!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-06-14 05:47:02",
    "text": "How should I interpret occasional 409 errors? It looks the request does eventually go through but sometimes a 409 is thrown. Is this something I am causing and can fix?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-06-14 05:48:19"
      },
      {
        "time_stamp": "2023-06-14 05:48:27"
      },
      {
        "time_stamp": "2023-06-14 05:49:18"
      },
      {
        "time_stamp": "2023-06-14 05:49:19"
      },
      {
        "time_stamp": "2023-06-14 05:49:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-06-14 05:48:19",
    "text": "just saw that this might have been related to Amazon going down briefly"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-06-14 05:48:27",
    "text": "\"Conflicts are most likely to occur in response to a PUT request\""
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2023-06-14 05:49:18",
    "text": "I think this had to do with serverless functions going down briefly due to the Amazon AWS issue"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-06-14 05:49:19",
    "text": "from MDN \"The HTTP 409 Conflict response status code indicates a request conflict with the current state of the target resource.\n\nConflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when uploading a file that is older than the existing one on the server, resulting in a version control conflict.\""
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-06-14 05:49:29",
    "text": "ah ok"
  },
  {
    "poster": {
      "poster_name": "Ali Afzal",
      "poster_handle": "ali.afzal"
    },
    "time_stamp": "2023-06-14 06:38:24",
    "text": "Hello <@U01QVR44MEY> ! I hope you are doing incredible as usual.\nIs there any HubSpot API exist which can give me all files against a DEAL.",
    "reply_count": 37,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-06-14 21:27:24"
      },
      {
        "time_stamp": "2023-06-14 21:27:39"
      },
      {
        "time_stamp": "2023-06-14 21:28:18"
      },
      {
        "time_stamp": "2023-06-14 21:28:25"
      },
      {
        "time_stamp": "2023-06-14 21:28:43"
      },
      {
        "time_stamp": "2023-06-14 21:29:07"
      },
      {
        "time_stamp": "2023-06-15 06:01:12"
      },
      {
        "time_stamp": "2023-06-15 07:59:23"
      },
      {
        "time_stamp": "2023-06-15 08:00:18"
      },
      {
        "time_stamp": "2023-06-15 08:00:27"
      },
      {
        "time_stamp": "2023-06-15 08:01:23"
      },
      {
        "time_stamp": "2023-06-15 08:02:25"
      },
      {
        "time_stamp": "2023-06-15 08:02:40"
      },
      {
        "time_stamp": "2023-06-15 08:02:42"
      },
      {
        "time_stamp": "2023-06-15 08:04:15"
      },
      {
        "time_stamp": "2023-06-15 08:04:25"
      },
      {
        "time_stamp": "2023-06-15 08:05:02"
      },
      {
        "time_stamp": "2023-06-15 08:05:55"
      },
      {
        "time_stamp": "2023-06-15 08:06:20"
      },
      {
        "time_stamp": "2023-06-15 08:06:38"
      },
      {
        "time_stamp": "2023-06-15 08:06:54"
      },
      {
        "time_stamp": "2023-06-15 08:06:57"
      },
      {
        "time_stamp": "2023-06-15 08:07:03"
      },
      {
        "time_stamp": "2023-06-15 08:07:06"
      },
      {
        "time_stamp": "2023-06-15 08:07:27"
      },
      {
        "time_stamp": "2023-06-15 08:07:27"
      },
      {
        "time_stamp": "2023-06-15 08:07:57"
      },
      {
        "time_stamp": "2023-06-15 08:08:04"
      },
      {
        "time_stamp": "2023-06-15 08:08:45"
      },
      {
        "time_stamp": "2023-06-15 08:08:52"
      },
      {
        "time_stamp": "2023-06-15 08:09:00"
      },
      {
        "time_stamp": "2023-06-15 08:09:23"
      },
      {
        "time_stamp": "2023-06-15 08:09:29"
      },
      {
        "time_stamp": "2023-06-15 08:09:46"
      },
      {
        "time_stamp": "2023-06-15 08:09:49"
      },
      {
        "time_stamp": "2023-06-15 08:10:12"
      },
      {
        "time_stamp": "2023-06-15 08:10:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Valentina Varela Alzate",
      "poster_handle": "valentina.varela"
    },
    "time_stamp": "2023-06-14 08:17:25",
    "text": "Hi everyone"
  },
  {
    "poster": {
      "poster_name": "Valentina Varela Alzate",
      "poster_handle": "valentina.varela"
    },
    "time_stamp": "2023-06-14 08:17:33",
    "text": "I am doing webhooks reading to store information regarding tickets and contacts, the way it works is that the payload of the ticket arrives, example:\n```{\n  \"eventId\": 3083626841,\n  \"subscriptionId\": 2106205,\n  \"portalId\": 9494835,\n  \"appId\": 1747647,\n  \"occurredAt\": 1686751896334,\n  \"subscriptionType\": \"ticket.creation\",\n  \"attemptNumber\": 0,\n  \"objectId\": 1689909882,\n  \"changeFlag\": \"CREATED\",\n  \"changeSource\": \"CRM_UI\",\n  \"sourceId\": \"userId:49150885\"\n}```\nAnd that objectId goes and searches with the api of <https://api.hubapi.com/crm/v3/objects/tickets/search> to bring the information and save it in database. The problem is that when this webhook arrives and goes and searches with the api it seems that the ticket does not exist and returns in the query total = 0, I tried putting 7 seconds of wait between the arrival of the webhook and the search and it seems that it worked, as if it was a timing problem.\nIs there any other way I can do it without setting the timeout?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-06-14 13:02:00"
      },
      {
        "time_stamp": "2023-06-14 13:02:38"
      },
      {
        "time_stamp": "2023-06-14 19:38:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Valentina Varela Alzate",
      "poster_handle": "valentina.varela"
    },
    "time_stamp": "2023-06-14 08:18:07",
    "text": "cc. <@U04B32JHTUZ>"
  },
  {
    "poster": {
      "poster_name": "Anthony Perez",
      "poster_handle": "anthony249"
    },
    "time_stamp": "2023-06-14 09:16:35",
    "text": "Hi there, im trying to create my own external form tracker for HubSpot which include logic to map mismatched properties, i need a little bit of help/inspiration for this as im quite new to using HubSpot’s api, i therefore have the following questions\n• Is it possible to make an external form? if so, how?\n• How would i check if the external form already exists or not?\n• Is there any place where i can see how the current HubSpot tracking script works, mainly for the form tracking?\nThanks! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-06-14 13:02:00",
    "text": "Get the ticket by id rather than searching for it"
  },
  {
    "poster": {
      "poster_name": "Jacob Jennings",
      "poster_handle": "jacob550"
    },
    "time_stamp": "2023-06-14 13:02:38",
    "text": "Replace search with the object id and make it a get request"
  },
  {
    "poster": {
      "poster_name": "G T",
      "poster_handle": "graemetulip"
    },
    "time_stamp": "2023-06-14 13:07:51",
    "text": "hello everyone,\nhas anyone tried the new zapier API request (Beta)?\n• it has the authorisation built in\nbut I can't for the life of me get it working, beyond the two following commands:\n• GET <https://api.hubapi.com/crm/v3/objects/contacts>\n• GET <https://api.hubapi.com/crm/v3/objects/contacts/[hs_object_id]>\nI can't get search to work:\n• POST <https://api.hubapi.com/crm/v3/objects/contacts/search>\n    ◦ I've tried with various search parameters and filters but it fails",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-06-15 00:04:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Valentina Varela Alzate",
      "poster_handle": "valentina.varela"
    },
    "time_stamp": "2023-06-14 19:38:07",
    "text": "<@U038DUUV3GE> that works perfect, :pray:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-06-14 21:27:24",
    "text": "well no not really"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-06-14 21:27:39",
    "text": "So files are connected to engagements (notes, tasks, emails etc)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-06-14 21:28:18",
    "text": "so you have to pull all the associated objects for a particular engagement type and get the associated files. You can use the search api for this"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-06-14 21:28:25",
    "text": "just use the associated object search"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-06-14 21:28:43",
    "text": "<https://developers.HubSpot.com/docs/api/crm/search#search-through-associations>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-06-14 21:29:07",
    "text": "All the file id are under the `hs_attachment_ids` property"
  },
  {
    "poster": {
      "poster_name": "G T",
      "poster_handle": "graemetulip"
    },
    "time_stamp": "2023-06-15 00:04:30",
    "text": "urgh, I think I've abandoned it and just gone on to webshooks"
  }
]
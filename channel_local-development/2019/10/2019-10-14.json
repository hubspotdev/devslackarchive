[
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2019-10-14 10:15:34",
    "text": "anyone know of any tricks for getting an auto-prefixer to not freak out when you have hubl in your css?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-10-14 10:25:51"
      },
      {
        "time_stamp": "2019-10-14 10:26:33"
      },
      {
        "time_stamp": "2019-10-14 10:34:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-10-14 10:25:51",
    "text": "use sass instead of hubl css? :upside_down_face:"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-10-14 10:26:33",
    "text": "it would be really great if someone created a hubl extension for jsprettier and autoprefixor"
  },
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2019-10-14 10:34:04",
    "text": ":100:"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-10-14 11:24:48",
    "text": "How are people handling the `\"controlling_field\" :` ID requirement for visibility when the controlling field doesn't have an ID assigned to it already?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-10-14 11:39:52"
      },
      {
        "time_stamp": "2019-10-14 11:40:59"
      },
      {
        "time_stamp": "2019-10-14 11:54:26"
      },
      {
        "time_stamp": "2019-10-14 11:55:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-10-14 11:26:06",
    "edited": {
      "time_stamp": "2019-10-14 11:26:29"
    },
    "text": "i.e.\n```{\n    \"id\" : \"\",\n    \"name\" : \"i_control\",\n    \"label\" : \"I'm the controller!!\",\n    \"sortable\" : false,\n    \"required\" : true,\n    \"locked\" : false,\n    \"type\" : \"boolean\",\n    \"default\" : false\n    } , {\n    \"id\" : \"\",\n    \"name\" : \"I'm controlled\",\n    \"label\" : \"Controlled Field\",\n    \"sortable\" : false,\n    \"required\" : true,\n    \"locked\" : false,\n    \"type\" : \"boolean\",\n    \"visibility\" : {\n        \"controlling_field\" : \"i_control\",  --- this guy needs the ID #\n        \"controlling_value_regex\" : \"true\",\n        \"operator\" : \"EQUAL\",\n        \"access\" : null\n    },\n    \"default\" : false\n    }```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-10-14 11:39:52",
    "text": "on upload of the module the id will become populated.\n\nThis would mean youâ€™d have to re-sync down afterward before setting up your controlling fields"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-10-14 11:40:59",
    "text": "<@U6W3H6YN8> this is an interesting hurdle in local dev. wonder if anything can be done like creating an alias id\n\nuser specifies an id which gets overwritten, but keeps the relationship between fields"
  },
  {
    "poster": {
      "poster_name": "Brian Krainer",
      "poster_handle": "bkrainer"
    },
    "time_stamp": "2019-10-14 11:54:26",
    "text": "you could also just define the id yourself here. we have been recommending using dot paths to the field as the ID (and this is what the auto-populated ID is if you leave it blank). So in this case, the `id` would just be `i_control`"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-10-14 11:55:40",
    "text": "that did the trick"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-10-14 12:05:59",
    "text": "4379491"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-10-14 12:06:00",
    "text": "thanks!"
  }
]
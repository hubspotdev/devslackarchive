[
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-06-03 02:09:36",
    "text": "When using the HubDB API, using the getrows endpoint, can I pass multiple parameters for a text column? Lets say I have a duration column, I want to retrieve all rows with `8 day` or `12 days` . I have only been able to achieve this with a multiselect column, but would like to do this with a text column as well.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-06-03 02:12:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-06-03 02:12:30",
    "text": "Think I found the answer already. ‘All filters are ANDed together. ORing filters is not currently supported.’"
  },
  {
    "poster": {
      "poster_name": "Florent",
      "poster_handle": "florent"
    },
    "time_stamp": "2021-06-03 02:24:01",
    "text": "Hi everyone, i'm having a really anoying issue.\nI would like to be able to listen for a contact update with a webhook. Problem is, i can only listen to property change. How can i manage to listen for any change in contact update through webhooks ?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-06-03 19:32:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Marcos Rodriguez",
      "poster_handle": "marcos.rodriguez"
    },
    "time_stamp": "2021-06-03 03:36:41",
    "text": "I guys!\nI'm working with Qwirl IT guys in order to integrate it with HubSpot and there's an issue that i can't resolve so I'd appreciate your help.\nWhen trying to get a HubSpot custom propery via API, I'd like to get its label instead of its internal value, but the guys at Qwirl are telling me that this is not possible. Are they right or there's a possibility they don't know about?\nThank you all :)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-06-03 12:52:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rick Siner",
      "poster_handle": "ricks"
    },
    "time_stamp": "2021-06-03 08:41:30",
    "edited": {
      "time_stamp": "2021-06-03 08:42:25"
    },
    "text": "Will want to be aware of the \"Notes\" in the new API preview:\n\"HubSpot owners and HubSpot users (people who can log into HubSpot) are not necessarily the same thing, as you may have owners created through the Salesforce integration\""
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2021-06-03 12:52:46",
    "text": "When you’re working with the Objects API (making API calls to contacts, companies, deals, etc) we’ll return the internal value. If you’d like to know what the label is for those values, you’ll need to make an additional call to the <https://developers.HubSpot.com/docs/api/crm/properties|Properties API> so it is possible, it just takes an extra call"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-06-03 13:08:17",
    "text": "I'll let you know how it goes"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:19:39",
    "text": "I would need to see a bit more detail on what blew up in the HubSpot side to fully comment on this. But generally timestamps in HubSpot are not in ISO 8601, they are in Java style millis:\n\n<https://legacydocs.HubSpot.com/docs/faq/how-should-timestamps-be-formatted-for-HubSpots-apis>\n\nSo I suspect you might be talking about stuff done by some other intermediary and not by HubSpot itself.\n\nThus I would ask if you have logs, sample requests, or a way to reproduce it on the stock API, not in the middle of other tools we don't have source code for."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:22:35",
    "text": "The contact ID would be unique per-portal, but would not prevent somebody who is not that contact from guessing other IDs.\n\nI don't think there's any good way to do an encryption and still get it to play nice w/ HubSpot's marketing emailer infrastructure.\n\nThere is a way you can assign three idProperty property fields to an object, which HubSpot will require to be unique per object and let you use to look up objects. You could stash a GUID in one of those and that would give you a GUID for every object, but it could be rather entertaining, as you'd need to gen the GUID and auto add to the objects using the Workflows feature and serverless JS function I would assume."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:23:31",
    "text": "<https://community.HubSpot.com/t5/HubSpot-Ideas/Hyperlink-using-a-URL-personalisation-token/idi-p/254009>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:25:37",
    "text": "<https://community.HubSpot.com/t5/APIs-Integrations/Personalized-Links-in-email-templates/td-p/227632>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:26:17",
    "text": "probably need support help to debug / check docs if the email is included when you do it this way"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:27:04",
    "text": "it vaguely sounds like it might be part of the CMS?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:27:07",
    "text": "<@UFBNA9K9A>?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:27:44",
    "text": "custom obj's via OAuth not supported, must use regular API key"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:28:21",
    "text": "what error or behavior do you get when it does not do what you want?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:30:21",
    "text": "what does too long mean? how many of what kind of objs? did you check the status pages?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:31:18",
    "text": "we'd need lots more data to confirm but my first theory would be something is damaging the associations of IDs to IDs, could not say more w/o more data on all the moving parts of the question"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:31:41",
    "text": "kind of depends on what \"should no longer be synced\" means"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:32:20",
    "text": "using a workflow to trigger a webhook, based on the kind of change to the contact you want to capture, might help, but would need more detail what change you are trying to capture"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-06-03 19:33:18",
    "text": "usually there are some time fields you can fill in like <https://legacydocs.HubSpot.com/docs/faq/how-should-timestamps-be-formatted-for-HubSpots-apis> ."
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2021-06-03 19:42:14",
    "text": "There’s a bit of mixed messaging going on, because the newer docs say both are accepted <https://developers.HubSpot.com/docs/api/faq>"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2021-06-03 19:44:20",
    "text": "In the end, trying to store it as datetime was kind of futile. The HubSpot UI and email notifications still just showed it as a date, so we jettisoned that idea and just stored a human friendly string instead."
  }
]
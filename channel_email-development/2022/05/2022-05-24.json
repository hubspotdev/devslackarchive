[
  {
    "poster": {
      "poster_name": "Courtney Fantinato",
      "poster_handle": "courtneyfantinato"
    },
    "time_stamp": "2022-05-24 09:24:28",
    "text": "The `mso-line-height-rule` might be the culprit. That’s a lot of code for a simple button though, which makes it more difficult to troubleshoot! I would recommend simplifying it, if possible. Here is a great example: <https://www.goodemailcode.com/email-code/link-button>"
  },
  {
    "poster": {
      "poster_name": "Chandresh Kr Singh",
      "poster_handle": "chandreshkumar684"
    },
    "time_stamp": "2022-05-24 09:33:39",
    "text": "<https://buttons.cm/|https://buttons.cm/>\n\ncheck this for button. It works on all platform."
  },
  {
    "poster": {
      "poster_name": "Courtney Fantinato",
      "poster_handle": "courtneyfantinato"
    },
    "time_stamp": "2022-05-24 09:40:55",
    "text": "<@U03GHANKUF2> He’s already using a VML background image. Nesting a VML button inside of that will cause issues. It’s not recommended to nest VML. VML buttons also come with other issues like having two places to update the button copy/URLs, and ESPs/MAPs can have issues tracking clicks on VML buttons."
  },
  {
    "poster": {
      "poster_name": "sofia santa maria",
      "poster_handle": "yolaresofia"
    },
    "time_stamp": "2022-05-24 10:11:06",
    "text": "Hey folks! I'm trying to set up a workflow with a custom email template, and I need to populate that email with data from the client within my Next.js application (outside HubSpot). I know I can do this by adding the data directly from my database to the HubSpot client and depending on x or y trigger an email through workflow. My Q is, is there a way to not have to save all this data to HubSpot client and directly populate email with data coming from my application database and be able to utilise this on a workflow to send a specific email? Hope I made myself clear enough :upside_down_face: thanks y'all :heart:",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-05-30 10:46:24"
      }
    ]
  }
]
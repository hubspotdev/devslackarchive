[
  {
    "text": "Hi all, does anyone know if there is a way to remove the surrounding span from a module? It is causing some validation issues. This is created using the form field inside the module",
    "time_stamp": "2023-03-09 04:59:29",
    "edited": {
      "time_stamp": "2023-03-09 05:05:19"
    },
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-03-09 05:06:22"
      },
      {
        "time_stamp": "2023-03-09 05:07:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Julian Purser",
      "poster_handle": "juliangd"
    },
    "time_stamp": "2023-03-09 05:06:22",
    "edited": {
      "time_stamp": "2023-03-09 05:06:46"
    },
    "text": "Never mind I found the answer. I didn’t realise you could add the ‘no_wrapper=True’ parameter to fields within a module\n```     {% form\n        form_to_use=\"{{ module.form_field.form_id }}\"\n        response_response_type=\"{{ module.form_field.response_type }}\"\n        response_message=\"{{ module.form_field.message }}\"\n        response_redirect_id=\"{{ module.form_field.redirect_id }}\"\n        response_redirect_url=\"{{module.form_field.redirect_url}}\"\n        gotowebinar_webinar_key=\"{{ module.form_field.gotowebinar_webinar_key }}\"\n        , no_wrapper=True\n    %}```\n"
  },
  {
    "poster": {
      "poster_name": "Julian Purser",
      "poster_handle": "juliangd"
    },
    "time_stamp": "2023-03-09 05:07:09",
    "text": "Just in case anyone else had this issue :smile:"
  },
  {
    "text": "Hey there! I'm using the HubSpot icon module to generate icons using this HubL more than once on the page\n\n```{% icon \n  name=\"envelope\"\n  style=\"SOLID\" \n  icon_set=\"fontawesome-5.14.0\"\n  title=\"Email\"\n  purpose=\"decorative\"\n%}```\nThe problem is that the HubSpot native module is producing the same id for both elements, which is an accessibility bad practice... Any way using HubL to make the generated element IDs unique so that there is no error?",
    "time_stamp": "2023-03-09 07:26:17"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2023-03-09 08:43:28",
    "text": "God bless :pray::skin-tone-2:\n\n<https://developers.HubSpot.com/docs/cms/marketplace-guidelines/module-requirements#aliases>",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-03-09 10:01:25"
      },
      {
        "time_stamp": "2023-03-09 10:10:52"
      },
      {
        "time_stamp": "2023-03-09 10:11:39"
      },
      {
        "time_stamp": "2023-03-09 11:39:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Yiz Segall",
      "poster_handle": "yiz.segall"
    },
    "time_stamp": "2023-03-09 09:37:48",
    "text": "G'day folks, I'm new to hubl and modules, a question for you all. I have created style fields so that, even though a template will have default styling, I want this to be scalable. Can I add the variable name to the css in the module css or does this need to be somewhere else?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-03-13 07:05:28"
      },
      {
        "time_stamp": "2023-03-13 07:08:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin.perolio"
    },
    "time_stamp": "2023-03-09 10:01:25",
    "edited": {
      "time_stamp": "2023-03-09 10:02:10"
    },
    "text": "The docs would be so much better if the content was hosted on GitHub as md/mdx files or something so we could see changelogs of what and when changes happen. :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2023-03-09 10:10:52",
    "text": "yeah for real"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2023-03-09 10:11:39",
    "edited": {
      "time_stamp": "2023-03-09 12:58:18"
    },
    "text": "To be fair they'll probably announced it at some point"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-03-09 11:39:44",
    "text": "Wow, thanks for sharing — as someone whose projects don’t touch the marketplace, I don’t think I’d _ever_ have found this."
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-03-09 11:55:01",
    "text": "In the new crop of modules I’m building out, my default images for image fields aren’t loading until the page builder has been refreshed. Anyone else come across this, and have any suggestions?\n\nIs it because the defaults are theme files that I’m pointing to with `get_asset_url`? I’d really prefer to avoid hotlinking default images, if possible.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-09 12:03:24"
      },
      {
        "time_stamp": "2023-03-09 13:05:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2023-03-09 12:03:24",
    "text": "I have ran into the same. If the image isnt super large you could try <https://www.base64-image.de/|https://www.base64-image.de/>"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-03-09 13:05:16",
    "text": "Hmm, they’re definitely too large to base64 encode. I suppose I’ll just have to hotlink and try to make sure I’m doing so from a reliable source. Glad to know it’s not just me overlooking something!"
  },
  {
    "text": "anyone else seeing missing language for English only assets?",
    "time_stamp": "2023-03-09 15:25:27",
    "reply_count": 10,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-03-13 08:08:03"
      },
      {
        "time_stamp": "2023-03-13 08:14:16"
      },
      {
        "time_stamp": "2023-03-13 08:35:17"
      },
      {
        "time_stamp": "2023-03-13 08:41:23"
      },
      {
        "time_stamp": "2023-03-13 13:20:15"
      },
      {
        "time_stamp": "2023-03-13 13:55:08"
      },
      {
        "time_stamp": "2023-03-13 17:36:28"
      },
      {
        "time_stamp": "2023-03-14 08:44:49"
      },
      {
        "time_stamp": "2023-03-14 08:46:25"
      },
      {
        "time_stamp": "2023-03-14 09:20:48"
      }
    ]
  }
]
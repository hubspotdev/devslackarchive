[
  {
    "poster": {
      "poster_name": "Martin Angeletti",
      "poster_handle": "martin041"
    },
    "time_stamp": "2020-11-05 09:36:58",
    "text": "Found the answer!! "
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2020-11-05 14:55:33",
    "text": "Anyone know what the correct HubL would be to get the alt text for the featured image in this context?"
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2020-11-05 14:55:35",
    "text": "```&lt;!-- Begin partial --&gt;\n{% set rec_posts = blog_recent_posts('default', 3)  %}\n{% for rec_post in rec_posts %}\n{% if loop.length\t== 2 &amp;&amp; loop.index == 1 %}\n  &lt;div class=\"span2\"&gt;&lt;/div&gt;\n{% endif %}\n    &lt;div class=\"span4 blog-cards\"&gt;\n      &lt;a href=\"{{ rec_post.url }}\" target=\"_blank\"&gt;&lt;/a&gt;\n        &lt;img src=\"{{ rec_post.post_list_summary_featured_image }}\" width=\"740\" alt=\"{{ rec_post.post_list_summary_featured_image.alt_text }}\"&gt;\n        &lt;div class=\"white-box\"&gt;\n          &lt;h3 class=\"blog-title\"&gt;{{ rec_post.title }}&lt;/h3&gt;\n          &lt;p class=\"blog-readmore\"&gt;Read more &lt;i class=\"fa fa-long-arrow-right\"&gt;&lt;/i&gt;&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n{% endfor %}\n&lt;!-- End partial --&gt;```"
  },
  {
    "poster": {
      "poster_name": "Jonathan Stanis",
      "poster_handle": "jstanis"
    },
    "time_stamp": "2020-11-05 14:55:55",
    "text": "I have tried some combinations related to featured image and they turn up nothing."
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 17:27:04",
    "text": "in the docs there is a `previous_post_featured_image_alt_text`"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 17:27:20",
    "text": "so I’d imagine there had to be `rec_post.post_list_summary_featured_image_alt_text`"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 17:28:04",
    "text": "<@UDPA7JFHA>. the rec_post.post_list_summary_featured_image is def just a string not an object so try ^ this.",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-11-06 09:50:59"
      },
      {
        "time_stamp": "2020-11-06 09:51:18"
      },
      {
        "time_stamp": "2020-11-06 09:51:23"
      },
      {
        "time_stamp": "2020-11-09 12:28:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 20:05:06",
    "text": "Hi guys, I've tested around for quite some time now and there doesn't seem to be a variable to simply state if the current page is live or draft?"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 20:05:33",
    "text": "I can test the publish_date, but then if a page has been published before and unpublished, it'll fail"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 22:57:40",
    "text": "maybe you can test if published date and updated date are the same ? <@U01DQL7AMFH>"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 22:58:10",
    "text": "probably won’t help, but might narrow down the fringe case a bit more."
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 22:58:40",
    "text": "I’m surprised there isn’t a variable for this actually."
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 22:58:56",
    "text": "that wouldn't work as a page could be updated regularly"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 22:59:07",
    "text": "hmm"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 22:59:19",
    "text": "probably because drafts don’t get returned in most queries anyway?"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 22:59:35",
    "text": "yeah i was confused why something like this wasn't available"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 22:59:55",
    "text": "becuase i din't want to use the HubSpot language switcher and ste out to make my own one (so i can change the labels)"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:00:12",
    "text": "but then realised this big flaw in that i dont know if pages are live or not"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:00:22",
    "text": "how are you calling pages?"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:00:37",
    "text": "maybe there is a better way to make the initial call if a variable for live/published doesnt exist?"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:00:52",
    "text": "if content.translated_content['zh'].id, or page_by_id(content.translated_content['zh'].id)"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:01:22",
    "text": "well i'm working with translated content, so the only way to see if a page has a translation here is to check the translated_content variable right?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-11-26 03:18:28"
      },
      {
        "time_stamp": "2020-12-03 04:09:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:01:33",
    "text": "and the only thing inside there is the slug and ID"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:01:50",
    "text": "so i tried calling the actual page itself, but all i can get back is the publish date"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:02:17",
    "text": "ah yeah makes sense, so the translated page may not be published and there is no way to check if calling it directly."
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:02:33",
    "text": "yeah hence my dilemma"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:02:55",
    "text": "i've had to do it under the asusmption that if it's been published once, it has to be live"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:03:33",
    "text": "buy why wouldn’t it be?"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:03:53",
    "text": "because people unpublish things when they find something they don't like"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:03:57",
    "text": "I hate these fringe cases that probably most people will never encounter, but you bring up a valid point that this should definitely be a variable available."
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:03:58",
    "text": "or publish by accident and unpublish it"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:04:38",
    "text": "we have clients who go back on what they wanted and made us unpublish things on pretty much every project, until they provide better content"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:04:55",
    "text": "well if the publish date and updated date are different than you can get the “accidental” use case out of the way right. but it’s def not sturdy."
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:05:04",
    "text": "hrmmmm…."
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:05:14",
    "text": "but then once people edit anything it will break"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:05:28",
    "text": "because updated at will generally always be after published date"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:05:42",
    "text": "and if unpublished, people generally are updating the content"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:05:58",
    "text": "i know this is janky, but can you get a list of translated pages through a normal query and see if the id you’re looking for is available in the array."
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:06:08",
    "text": "but yeah i'm gonna give that a try first to see what comes out"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:06:08",
    "text": "(assuming that the query only returns “live” pages)"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:06:30",
    "text": "Gawwdd, if that works what an annoying solution lmao"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:06:43",
    "text": "well ym current solution is already annoying"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:07:07",
    "text": "• get page id\n• query for page\n• check if publish date exists\n• replace slug"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:07:35",
    "text": "and the annoying thing is that the ublish date comes back as a string"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:07:43",
    "text": "so if it's never been published, it comes as 1970-1-1"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:07:53",
    "text": "It’s probably worth pinging a HubSpot team member about this, I’m sure the live/draft data is already available in the data object, it’s just a matter of making it a hubl variable"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:08:13",
    "text": "i've mentioned it a few times to the sales reps but not sure it ever went futher"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:10:13",
    "text": "I’m new to this community, but it feels like the HB devs in here are very open to dev suggestions especially one like this which are probably low hanging fruit. <@U2H3TT8F2> maybe can help? What would it take to get a hubl variable for checking if page status (live/draft) ?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-11-05 23:58:01"
      },
      {
        "time_stamp": "2020-11-06 12:20:03"
      },
      {
        "time_stamp": "2020-11-07 00:26:01"
      },
      {
        "time_stamp": "2020-11-09 09:33:13"
      }
    ]
  },
  {
    "text": "this is interesting",
    "time_stamp": "2020-11-05 23:10:38"
  },
  {
    "poster": {
      "poster_name": "Adam Munns",
      "poster_handle": "hello509"
    },
    "time_stamp": "2020-11-05 23:11:13",
    "text": "Good luck with this <@U01DQL7AMFH> I’m off to bed. maybe thread off that comment above and explain a little bit more and see if he responds ?"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:11:29",
    "text": ":thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Daniel Wong",
      "poster_handle": "dan.wong"
    },
    "time_stamp": "2020-11-05 23:58:01",
    "text": "<@U2H3TT8F2> so issue i'm having is when making my own custom language switcher, there's no way to tell if the pages I'm getting back are published or in draft. Hence my only option right now is to test if the page has been published once before, and assume it's a live page.\n\nThis is an issue in a lot of places for me where pages have been unpublished and waiting for updated content, but the language option will still appear.\n\nIf a variable somewhere along the lines of \"published\" or \"status\" was available, it would solve this issue."
  }
]
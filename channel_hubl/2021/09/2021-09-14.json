[
  {
    "poster": {
      "poster_name": "Marius Richardsen",
      "poster_handle": "marius729"
    },
    "time_stamp": "2021-09-14 04:17:01",
    "text": "Hello! Ho would one go about URL-decoding a string? I know theres a filter for encoding, but not for decoding?"
  },
  {
    "poster": {
      "poster_name": "Marius Richardsen",
      "poster_handle": "marius729"
    },
    "time_stamp": "2021-09-14 04:17:43",
    "text": "or do i have to use javascript?"
  },
  {
    "poster": {
      "poster_name": "Marius Richardsen",
      "poster_handle": "marius729"
    },
    "time_stamp": "2021-09-14 04:46:56",
    "edited": {
      "time_stamp": "2021-09-14 04:50:13"
    },
    "text": "Hey! Any reason why HubSpot escapes params retrieved from `request.query_dict` ? For example, `\"` becomes `&amp;quote;` instead of `\"` or `%22`.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-09-14 06:04:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Tom Sygut",
      "poster_handle": "t.sygut"
    },
    "time_stamp": "2021-09-14 05:16:53",
    "text": "Hello, Is this possible to add to HubSpot URL params? For example <http://xxxxx.hs-sites.com/reset-password/:id/:token|xxxxx.hs-sites.com/reset-password/:id/:token> . If anyone knows how to do this I really appreciate your help",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-09-14 05:40:39"
      },
      {
        "time_stamp": "2021-09-15 07:17:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rohan Sootarsing",
      "poster_handle": "rohans"
    },
    "time_stamp": "2021-09-14 05:30:06",
    "text": "Can anyone help with this I cannon find any documentation on how to  perform an or query using httpQL\nI want to return objects who's start date or end date is in the future so the following gets me all events that start in the future.\n```'startdate__gte=' ~unixtimestamp(today())```\nBut how do I say or end date gt today?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-09-14 06:36:46"
      },
      {
        "time_stamp": "2021-09-15 05:45:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Marius Richardsen",
      "poster_handle": "marius729"
    },
    "time_stamp": "2021-09-14 05:40:39",
    "text": "Not directly in HubSpot I believe. Can't you just use URL query params? <http://xxxxx.hs-sites.com/reset-password?id=some_id&amp;token=some_token|xxxxx.hs-sites.com/reset-password?id=some_id&amp;token=some_token>\n\nAccess with `{{ request.query_dict.id }}` and `{{ request.query_dict.token }}`"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2021-09-14 06:04:55",
    "edited": {
      "time_stamp": "2021-09-14 06:05:51"
    },
    "text": "We do that to prevent XSS through query parameters (HTML injection)"
  },
  {
    "poster": {
      "poster_name": "Hemant Koolwal",
      "poster_handle": "hemant.koolwal"
    },
    "time_stamp": "2021-09-14 06:36:46",
    "text": "```Hi @Rohan Sootarsing \n'startdate__gte='+local_dt|unixtimestamp\nTry this```\n"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:38:36",
    "text": "I’m trying to get “read time” to work here <https://revops-14544243.hs-sites.com/en/customers> (as seen here - <https://www.revops.io/customers/>)\n\nI know that it works on blog listing pages, but this particular post’s content is broken down by modules and therefore “for content in contents” doesn’t seem to work. I’ve tried variations of “for content in module” but that doesn’t seem to work either."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:39:08",
    "text": "You can do it in js"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:39:34",
    "text": "Here’s my most recent attempt `{% for content in module %} {% if loop.index == 1 %} {{ module.interview.customer_interview|wordcount|divide(300) }}`"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:43:20",
    "text": "Would JS work if it’s relating to a post in a listing, not on the post itself?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:43:36",
    "text": "No."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:44:03",
    "text": "You could always measure the length of all of the individual pieces add them together and then go against that"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:49:05",
    "text": "How would you set that up in code?"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:49:13",
    "text": "Or is that manual."
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:49:30",
    "text": "Essentially, assuming people read 300 wpm, I wanted to calculate it automatically."
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:49:43",
    "text": "The module interview.customer_interview is the main content area"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:49:57",
    "text": "{% set items =  var1 + var2 + var3 %}"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:50:22",
    "text": "I’m still learning Hubl, what would I put in for those variables"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:50:45",
    "text": "`interview.customer_interview|length == a number`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:50:50",
    "text": "correct?"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:51:07",
    "text": "“A number” is the wordcount?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:51:11",
    "text": "no.."
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:51:19",
    "text": "lol, im sorry i’m a real newb"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:51:38",
    "text": "what does thsi produce ? `{{ interview.customer_interview|length }}`"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:51:48",
    "text": "Let’s see, one sec"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:52:35",
    "text": "Do I wrap that in a “for” ?"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-09-14 06:52:54",
    "text": "it produces 0 just like that"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-09-14 06:53:53",
    "text": "one sec"
  }
]
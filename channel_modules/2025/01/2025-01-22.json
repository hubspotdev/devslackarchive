[
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 04:59:48",
    "edited": {
      "time_stamp": "2025-01-22 05:02:35"
    },
    "text": "Is there a way, when using the copy json option in HubSpot to output the file in a readable way? IE the same structure as HS design manager?",
    "reply_count": 45,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2025-01-22 06:41:36"
      },
      {
        "time_stamp": "2025-01-22 06:42:23"
      },
      {
        "time_stamp": "2025-01-22 06:43:23"
      },
      {
        "time_stamp": "2025-01-22 06:44:59"
      },
      {
        "time_stamp": "2025-01-22 06:46:20"
      },
      {
        "time_stamp": "2025-01-22 06:46:35"
      },
      {
        "time_stamp": "2025-01-22 06:51:24"
      },
      {
        "time_stamp": "2025-01-22 07:03:41"
      },
      {
        "time_stamp": "2025-01-22 07:07:16"
      },
      {
        "time_stamp": "2025-01-22 07:08:43"
      },
      {
        "time_stamp": "2025-01-22 07:09:39"
      },
      {
        "time_stamp": "2025-01-22 07:11:20"
      },
      {
        "time_stamp": "2025-01-22 07:13:23"
      },
      {
        "time_stamp": "2025-01-22 07:16:45"
      },
      {
        "time_stamp": "2025-01-22 07:21:20"
      },
      {
        "time_stamp": "2025-01-22 07:24:57"
      },
      {
        "time_stamp": "2025-01-22 07:26:39"
      },
      {
        "time_stamp": "2025-01-22 07:26:41"
      },
      {
        "time_stamp": "2025-01-22 07:27:50"
      },
      {
        "time_stamp": "2025-01-22 07:28:15"
      },
      {
        "time_stamp": "2025-01-22 07:28:24"
      },
      {
        "time_stamp": "2025-01-22 07:28:53"
      },
      {
        "time_stamp": "2025-01-22 07:29:06"
      },
      {
        "time_stamp": "2025-01-22 07:35:17"
      },
      {
        "time_stamp": "2025-01-22 07:35:45"
      },
      {
        "time_stamp": "2025-01-22 07:36:06"
      },
      {
        "time_stamp": "2025-01-22 07:36:38"
      },
      {
        "time_stamp": "2025-01-22 08:45:40"
      },
      {
        "time_stamp": "2025-01-22 08:46:03"
      },
      {
        "time_stamp": "2025-01-22 08:46:18"
      },
      {
        "time_stamp": "2025-01-22 08:47:31"
      },
      {
        "time_stamp": "2025-01-22 08:47:44"
      },
      {
        "time_stamp": "2025-01-22 08:48:06"
      },
      {
        "time_stamp": "2025-01-22 08:48:38"
      },
      {
        "time_stamp": "2025-01-22 08:49:56"
      },
      {
        "time_stamp": "2025-01-22 08:53:09"
      },
      {
        "time_stamp": "2025-01-22 10:09:21"
      },
      {
        "time_stamp": "2025-01-22 10:10:17"
      },
      {
        "time_stamp": "2025-01-22 10:12:05"
      },
      {
        "time_stamp": "2025-01-22 10:19:57"
      },
      {
        "time_stamp": "2025-01-22 10:21:03"
      },
      {
        "time_stamp": "2025-01-22 10:47:25"
      },
      {
        "time_stamp": "2025-01-30 17:11:46"
      },
      {
        "time_stamp": "2025-02-03 07:35:04"
      },
      {
        "time_stamp": "2025-02-03 07:50:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 06:41:36",
    "text": "you could try the <https://developers.HubSpot.com/docs/reference/cms/hubl/filters#fromjson||fromjson> filter"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 06:42:23",
    "text": "Would this work in fields.json?"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 06:43:23",
    "text": "could you please describe, what you're looking for?"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 06:44:59",
    "text": "In design manager you can build out your module fields and then copy the json code to add into the fields.json in your local files.\n\nWhen doing this, the json file isn't in order so it doesn't read like it would if you where to write it yourself."
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 06:46:20",
    "text": "Small example\n\n```[\n    {\n        \"children\": [\n            {\n                \"default\": \"&lt;h2&gt;Featured resources&lt;/h2&gt;\\n&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur ac lobortis tortor, vel sollicitudin augue.&lt;/p&gt;\",\n                \"display_width\": null,\n                \"id\": \"cde934dd-e678-3b56-85a5-13ac9c155664\",\n                \"label\": \"Text\",\n                \"locked\": false,\n                \"name\": \"text\",\n                \"required\": false,\n                \"type\": \"richtext\"\n            },```"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 06:46:35",
    "text": "Really is should export with group first"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 06:51:24",
    "text": "ahh, yes... Thank you.\nThis is well known \"issue\". This was mentioned quite often by fellow devs in chat's with HS folks. It's on their radar. Maybe <@U7SL518D6> has some updates, but to be honest I doubt it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 07:03:41",
    "text": "Can you both help me understand — are you sayign that when you build something in the design manger (example: <https://share.zight.com/z8u9rnN6>) that when you pull down the code and look at the `fields.json` file that it is not in the order that makes sense with the order of that the module was built (like in the screenshot) or am I misunderstanding the issue?"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:07:16",
    "text": "It's about the fact that if you build something in the DM, and copy the JSON, it's not in the same order as if you'd build it via CLI"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 07:08:43",
    "text": "AHHHH"
  },
  {
    "text": "this screenshot results in this JSON:\n```[\n {\n  \"type\": \"text\",\n  \"id\": \"108b1df3-7895-4d4f-f507-99a2eb13fc00\",\n  \"validation_regex\": \"\",\n  \"label\": \"Text\",\n  \"name\": \"text_field\"\n }\n]```\nIf you create the same function via CLI it's this JSON\n```{\n    \"name\": \"text_field\",\n    \"label\": \"Text field\",\n    \"required\": false,\n    \"locked\": false,\n    \"validation_regex\": \"\",\n    \"validation_error_message\": \"\",\n    \"allow_new_line\": false,\n    \"show_emoji_picker\": false,\n    \"type\": \"text\",\n    \"placeholder\": \"\",\n    \"inline_help_text\": \"\",\n    \"help_text\": \"\",\n    \"default\": null \n}```",
    "time_stamp": "2025-01-22 07:09:39"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 07:11:20",
    "text": "oh wow"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:13:23",
    "text": "Got an idea... Gimme a bit of time :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2025-01-22 07:16:45",
    "text": "The reason the order changes is basically because in HubSpot that data isn't actually in a file at least not exactly. Changing this would be very hard. The beautifying of the JSON we show idk, probably doable."
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:21:20",
    "text": "Thank you Jon!\n\nI've started working on a \"Hubl JSON\" beautifier :smile:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 07:24:57",
    "text": "on the output, if there was an order property…\n\nlike `{ \"order\": 1 },` I think that we could make quick work of this with a hubl json beautifier, with children I think we just reset order to 1.\n\nI think if that was implemented in the copy json output that this would go a long way to making this easy to implement"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 07:26:39",
    "text": "it looks like it is implemented to output in a sort by alphabetical order"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:26:41",
    "text": "<https://graphispot.com/hubfs/free-tools/beautify-json.html> feel free to test it"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 07:27:50",
    "text": "Thats what we want!!! :point_up_2:"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 07:28:15",
    "text": "Now make HubSpot do it :joy:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 07:28:24",
    "text": "thats dope anton — if i had better grasp of how the json files should be set up that was exactly what I was thinking"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:28:53",
    "text": "Got to work on the design"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 07:29:06",
    "text": "lol change the button from format to “copy json” and then ship"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown523"
    },
    "time_stamp": "2025-01-22 07:35:17",
    "text": "VS Code extension when?"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:35:45",
    "text": "HA"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:36:06",
    "text": "<@U25PYL3Q8> - have fun with the copy json button"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 07:36:38",
    "text": "gimme a few days for the VSCode extension"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 08:45:40",
    "text": "anton, I’m going to build what you have in my watch scss module I built"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 08:46:03",
    "text": "and I’ll make it work so that when you have new updates to it is easy for me to update and we can maybe figure out a way to make it easy for others to use"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 08:46:18",
    "text": "so when a fields.json file is saved, it reorganizes it"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 08:47:31",
    "text": "Are you talking about auto recognizing fields and putting it into vars files? :flushed: "
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 08:47:44",
    "text": "With values?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 08:48:06",
    "text": "no"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 08:48:38",
    "text": "if someone were to copy json and put it into their module file, wiht the watcher on, it would reoranize the file how you have it set up"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 08:49:56",
    "edited": {
      "time_stamp": "2025-01-22 09:03:28"
    },
    "text": "Ohh… that’s dope. Maybe you should build the vscode extension :)"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-22 08:53:09",
    "edited": {
      "time_stamp": "2025-01-22 08:53:30"
    },
    "text": "I was thinking of something like recognizing something like a number field and if there’s a suffix like „px“ it would create a css var like\n—`-field_name:field_value~“px“\n🤣` "
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2025-01-22 10:09:21",
    "text": "Also slapping this here — Its likely outdated at this point. BUUUUTTTT DND editor for fields while working on local files. <https://devbeej.com/copilot/>"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2025-01-22 10:10:17",
    "text": "(Note that this is NOT official HS maintained — I built it a few years before joining HS and haven’t touched it since)"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2025-01-22 10:12:05",
    "text": "Also note that i didn’t read the full thread…. So this might not even be helpful :shrug:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2025-01-22 10:19:57",
    "text": "That is pretty dope anton and keen observation Nick.\n\nI'll surface this to the relevant team internally."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2025-01-22 10:21:03",
    "text": "Also BJs app is really cool too and useful, just maybe not for this specific copy paste thing"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2025-01-22 10:47:25",
    "text": "yeah, it is awesome!!! But I think it is great to surface this in this specific discussion because there are other ways of doing it!!!! Again great work <@UQWGKUEN7> and thanks for chiming in <@U7SL518D6>"
  }
]
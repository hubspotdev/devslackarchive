[
  {
    "poster": {
      "poster_name": "Muhammad Ammar",
      "poster_handle": "malik.ammar"
    },
    "time_stamp": "2024-09-18 05:38:36",
    "text": "Can you please provide some more detail on that , it would be good for me to understand this"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 08:07:07",
    "text": "<https://developers.HubSpot.com/docs/platform/ui-extensions-overview>"
  },
  {
    "poster": {
      "poster_name": "Edward Orozco",
      "poster_handle": "eorozco"
    },
    "time_stamp": "2024-09-18 10:01:41",
    "text": "Hello, everyone. What happens if the user who created a private app is deactivated? Is the app deactivated too?"
  },
  {
    "poster": {
      "poster_name": "Mehdi Louraoui",
      "poster_handle": "med.louraoui"
    },
    "time_stamp": "2024-09-18 10:03:34",
    "text": "Hello everyone!\n\n I'm currently adding the tracking script to my Next.js application. I've created a hook to handle cookie rejection and acceptance.\nFor rejecting cookies, it's okay. However, I have a doubt about the one for accepting cookies. Is it okay to do it like this?\n\nThank you!\n\n```export const useHubSpot = (): UseHubSpotProps =&gt; {\n  const _hsq = typeof window !== \"undefined\" &amp;&amp; window._hsq ? window._hsq : [];\n\n  [....]\n\n  const declineCookie = () =&gt; {\n    _hsq.push([\"revokeCookieConsent\"]);\n  };\n\n  const acceptCookie = () =&gt; {\n    _hsq.push([\"doNotTrack\", { track: true }]);\n  };\n\n  return {\n    setPathPageView,\n    setTrackPageView,\n    setIdentity,\n    setTrackEvent,\n    declineCookie,\n    acceptCookie,\n  };\n};```\n"
  },
  {
    "poster": {
      "poster_name": "Edgars",
      "poster_handle": "edgars.skore"
    },
    "time_stamp": "2024-09-18 10:12:02",
    "text": "Helloo! I tried to search in the historic messages but couldn't find answers.\nWe are building a dynamic filters in our app and want to run them to the HubSpot's search API.\nThis is an example logic that we want to run as filter in the HubSpot search API:\n\nWe want to retrieve contacts where\n*Either*:\n• `lastmodifieddate &lt;= 2024-08-09T00:00:00Z`, *or*\n• `email` contains `@example.com`.\n*And*:\n• `firstname` is not `NULL`,\n• `lastname` is not `NULL`,\n• `email` is in the list `[\"<mailto:test@email.com|test@email.com>\", \"<mailto:test2@email.com|test2@email.com>\"]`.\n\nHowever, since HubSpot applies *OR* between `filterGroups`, we can't directly express this combination of *OR* and *AND*. Have I understood it correctly? We cannot have filterGroups inside other filterGroups or have root object where filterGroups are next to filters"
  },
  {
    "poster": {
      "poster_name": "Andy",
      "poster_handle": "amartin853"
    },
    "time_stamp": "2024-09-18 11:12:50",
    "text": "Hi Everyone, we use a variety of /v1/ endpoints and in the past weeks have seen an increase in broken functionality and in some cases broken endpoints related to the new features like Business Units and the List Id change.  Is there anywhere to report these issues?  Is there any knowledge we can use to stay ahead of these?  We were not aware these apis were going to stop working so soon.",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-18 12:21:37"
      },
      {
        "time_stamp": "2024-09-18 12:21:58"
      },
      {
        "time_stamp": "2024-09-18 12:22:49"
      },
      {
        "time_stamp": "2024-09-18 12:23:23"
      },
      {
        "time_stamp": "2024-09-18 12:29:53"
      },
      {
        "time_stamp": "2024-09-18 13:02:11"
      },
      {
        "time_stamp": "2024-09-18 13:07:28"
      },
      {
        "time_stamp": "2024-09-18 13:08:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 12:21:37",
    "text": "<https://developers.HubSpot.com/docs/api/deprecated-apis>"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 12:21:58",
    "text": "<https://developers.HubSpot.com/changelog>"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 12:22:49",
    "text": "<https://developers.HubSpot.com/changelog/upcoming-sunset-v1-lists-api>"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 12:23:23",
    "text": "<https://developers.HubSpot.com/changelog/2019-01-30-sunset-the-v1-forms-api-will-be-sunset-on-march-29th>"
  },
  {
    "text": "Thanks Ryan,  really appreciate those links.  None of the apis we use have been deprecated but we are seeing some breaking features.\n\n/marketing-emails/v1/emails/\nWe populate the lists, we of course would be using the old list ids here and I can see 2 of the \"newer\" style fields have appeared but this call no longer updates the lists in the HubSpot ui like is used to. (successful response shown below)\n\nThe /email/public/v1/subscriptions endpoint is now very picky about \"business unit ids\" and throws new errors asking for a matching business unit.  I'm up to date with the v3 direction but it was my impression the v1s would still be working for a bit longer.\n\nAlso, the business unit bit appears to be a big new feature for HS, is there a way we can get this added to our dev sandbox so we can build/test against this?",
    "time_stamp": "2024-09-18 12:29:53"
  },
  {
    "poster": {
      "poster_name": "Brad Tollett",
      "poster_handle": "brad208"
    },
    "time_stamp": "2024-09-18 12:30:53",
    "edited": {
      "time_stamp": "2024-09-18 12:34:35"
    },
    "text": "HubSpot Node Client's batch create line items endpoint is broken, `HubSpotClient.crm.lineItems.batchApi.create` it doesn't create associations and the line item is left in limbo. When I switch to completing the request with axios or HubSpotClient.apiRequest it works just fine. This was also an issue I pointed out a year or so back to support. Fyi <@UDA553DRD>"
  },
  {
    "poster": {
      "poster_name": "Anthony Orta",
      "poster_handle": "anthony.orta"
    },
    "time_stamp": "2024-09-18 12:48:01",
    "text": "Hey everyone, anyone running into any issue with the visitor identification endpoint returning the wrong user when used with the HubSpot chat feature?\nMy company has been testing the feature out internally and we’ve noticed for some users the chat seems to be identifying them as the wrong user. For example, we have a chat bot set up where the user will receive an email at the end of the chat but we noticed that for some users seems to be identifying them as the wrong user/ wrong email.\nI have verified that we are passing in the correct user email to the visitor identification endpoint but I guess the identification token must be wrong since the chat seems to be assigned to the wrong user.\nCould please use some help on this to find out if I am missing anything on my end :pray:"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 12:57:54",
    "text": "Hi I am trying to use the contacts upsert endpoint and am running into errors when passing and ID. It works just fine with an email idProperty but when I pass ID without any idProperty or pass it with a `'hs_object_id'` as the idProperty I see different errors"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 12:58:41",
    "text": "I suppose I could call the updateContact endpoint instead since I'm only trying to update 1 record but I don't understand what I'm doing wrong and would like to have a single upsert function in my application code"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 13:02:11",
    "text": "Lists API was deprecated here --&gt; <https://developers.HubSpot.com/changelog/upcoming-sunset-v1-lists-api>"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 13:07:28",
    "text": "I don't have all the information you need.  Is upgrading to v3 an option for you at this time?"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-09-18 13:08:18",
    "text": "Try reaching out to Support for this bit. Hopefully they can add this for you.\n\nAlso, the business unit bit appears to be a big new feature for HS, is there a way we can get this added to our dev sandbox so we can build/test against this?"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2024-09-18 13:18:30",
    "text": "I'm having issues with this endpoint today. Email works fine but I can't update by an ID as shown in the documentation"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:19:35",
    "text": "Specifically, I've tried passing ID without an idProperty and tried passing `'hs_object_id'` as the idProperty and get different errors. Using `'email'` as the idProperty works fine"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:21:37",
    "text": "Ah! I happen to know the solution to this one too.\n\nhs_object_id is what is considered an \"internal\" ID, all \"hs_\" marker IDs are considered internal IDs and are subject to change or variability in performance, they are not \"guaranteed\" IDs which you can see sometimes when trying to call deprecated APIs that are still in service. HubSpot will thus always recommend that you just use a UniqueRefID that you have established via a property _or_ a HubSpot ID that is considered a \"static\" ID such as \"ID:\" itself or another natural Unique Reference, of which \"email\" is one. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:21:49",
    "text": "Hope this helps <@U07MU4TG5SS>!"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:22:19",
    "text": "I have the HubSpot ID that I'm trying to use. How would I use that?"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:22:49",
    "text": "From the documentation it seems like if I don't pass any `'idProperty'` it assumes a HubSpot ID by default but I'm still seeing errors trying that"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:22:54",
    "text": "appreciate the response!"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:25:25",
    "text": "If you have the HubSpot ID for the individual user, that will be something that is used internally by the CRM Search but is not, in fact, a basis of a _call_ due to their technical stack.\n\n<https://knowledge.HubSpot.com/records/search-your-crm>"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:26:31",
    "text": "This knowledge doc will show you what the search _does_ work on but I've found over the years that the most reliable method of doing this consistently to target a specific individual would be to assign a UniqueRefID to them - if you're squeamish about using the email, it's also quite simple using HubSpot Workflows to give all of your contacts a \"UniqueID\" that has the \"Unique\" property that you can use as a call point."
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:26:33",
    "text": "Hm, OK. The case I'm trying to handle is if a contact _updates_ their email address"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:27:16",
    "text": "So it sounds like I need to create my own ID and write the data returned as the HubSpot contact ID there if I want to use it"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:27:43",
    "text": "Or perhaps HubSpot simply doesn't allow updates to an email address and would prefer to treat it as a new contact"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:29:10",
    "text": "It would also seem then that this documentation is incorrect as an ID can't be used: <https://developers.HubSpot.com/docs/api/crm/contacts#upsert-contacts>"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:29:32",
    "text": "Yeah you would need to have your own unique ID in that case to identify the user and then change their email."
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:29:57",
    "text": "Sadly in the case of unique identifiers, you cannot \"use the stones to destroy the stones\", you must go sideways, a little like administrative management in an M365 stack."
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:31:58",
    "text": "This is one of the use-cases that ensures whenever I set something up for someone, be it in their core database (if they're merely using HubSpot for non-Automation purposes) or on HubSpot via OpsHub and Workflows, I always ensure there is a \"UniqueID\" property using HubSpot's \"unique\" characteristic on said property to ensure that that can be adjusted.\n\nIt's just a fact of life that in 2024, far too many people forget their emails, create new ones, create dump emails/drop emails etc and suddenly decide they want to use their real one - whatever the reason, in that situation, HubSpot sort of leaves you out in the cold. So having your own unique property can help massively."
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:32:57",
    "text": "Hm, alright. If there's anyone from HubSpot who can update the documentation I'm sure that'd help folks out who come across it like I did"
  },
  {
    "poster": {
      "poster_name": "Robert Baldwin",
      "poster_handle": "rob.baldwin"
    },
    "time_stamp": "2024-09-18 13:33:03",
    "text": "Appreciate your help <@U07DPM31V1N>!"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:37:32",
    "text": "No problem <@U07MU4TG5SS>! And just in case you _are_ using OpsHub Workflows, feel free to have my UniqueID generator here:\n\n```// Get the input contact properties\nconst firstName = event.inputFields['firstname'] || \"\";\nconst lastName = event.inputFields['lastname'] || \"\";\n\n// Get the current date in DD/MM/YY format\nconst today = new Date();\nconst dd = String(today.getDate()).padStart(2, '0');\nconst mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!\nconst yy = String(today.getFullYear()).slice(-2);\n\n// Function to generate a random letter (A-Z)\nfunction getRandomLetter() {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    return alphabet[Math.floor(Math.random() * alphabet.length)];\n}\n\n// Function to generate a random number (0-9)\nfunction getRandomNumber() {\n    return Math.floor(Math.random() * 10);\n}\n\n// Generate the string\nconst firstInitial = firstName ? firstName.charAt(0).toUpperCase() : '';\nconst lastInitial = lastName ? lastName.charAt(0).toUpperCase() : '';\nconst randomString = `${firstInitial}${lastInitial}${dd}${mm}${yy}${getRandomLetter()}${getRandomNumber()}${getRandomLetter()}${getRandomNumber()}`;\n\n// Output the result to a custom property\noutputFields = {\n    random_string: randomString\n};```"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:39:15",
    "text": "This will push out a UniqueID with the following structure for you:\n\nFirst Name First Initial, Last Name First Initial, Current Date in DDMMYY, Random Letter, Random Number, Random Letter, Random Number\n\ne.g.\n\nJohn Smith added today could be:\nJS180924R2X1\nor\nJS180924N8L2\n\nThis ensures integrity over time and mathematically protects you against your Unique value (which by-default won't let any other record have the same value) run (theoretically) without hitting errors for many moons."
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:39:38",
    "edited": {
      "time_stamp": "2024-09-18 13:39:56"
    },
    "text": "Source: Have used this format for a few years now and not had a single error across 40+ clients and a couple million records. :wink:"
  },
  {
    "poster": {
      "poster_name": "Michael Shepherd",
      "poster_handle": "michael.shepherd"
    },
    "time_stamp": "2024-09-18 13:40:16",
    "text": "Feel free to use/tweak/redistribute as you need, we're all on this whacky adventure together."
  },
  {
    "poster": {
      "poster_name": "Sourav Kundu",
      "poster_handle": "sourav.kundu"
    },
    "time_stamp": "2024-09-19 00:39:35",
    "text": "Hey everyone,\n\nJust following up on my previous post regarding the issue with tracking Google and Facebook leads after the recent API shift. We haven't received any feedback yet and would really appreciate your insights or suggestions on how to resolve this. Has anyone else faced similar issues or found a workaround?\n\nThanks in advance for your help!"
  }
]
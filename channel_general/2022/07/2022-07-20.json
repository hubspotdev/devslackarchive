[
  {
    "poster": {
      "poster_name": "Anna Zrust",
      "poster_handle": "azrust"
    },
    "time_stamp": "2022-07-20 01:46:26",
    "text": "Hi everyone!\nIs it possible to compress the images via some third party tool for example <https://tinyjpg.com/developers> ? On the client’s page we have hundreds of WebP images which are not properly compressed and affect page load time. Sadly the HubSpot default compression supports only PNG and JPG.",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-07-20 01:47:25"
      },
      {
        "time_stamp": "2022-07-20 01:47:48"
      },
      {
        "time_stamp": "2022-07-20 01:49:26"
      },
      {
        "time_stamp": "2022-07-20 07:57:18"
      },
      {
        "time_stamp": "2022-07-20 08:26:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-07-20 01:47:25",
    "text": "are you resizing the images?"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-07-20 01:47:48",
    "text": "that is usually more effective than compression"
  },
  {
    "poster": {
      "poster_name": "Anna Zrust",
      "poster_handle": "azrust"
    },
    "time_stamp": "2022-07-20 01:49:26",
    "text": "The images are in correct sizes, but they are not compressed."
  },
  {
    "poster": {
      "poster_name": "Deepika Jain",
      "poster_handle": "deepika.jain"
    },
    "time_stamp": "2022-07-20 02:47:48",
    "text": "Hello Team"
  },
  {
    "poster": {
      "poster_name": "Deepika Jain",
      "poster_handle": "deepika.jain"
    },
    "time_stamp": "2022-07-20 02:53:02",
    "text": "M facing a very big issue for a long time regarding Page URL.\nAs we know HubSpot is sending internal notification mail after submission of form with form fields and page title with url. But this default format is not fetching the hidden fields so I sort it with creating the workflow. But Now issue is here in workflow No URL is fetching is email body. I create a contact property as hidden field and add personalize tag to email body but its not reflecting , I also tried with jquery but failed. Can anyone help me to sort this as m facing issue a very very long time but couldn't find any solution."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-07-20 07:57:18",
    "text": "The best practice with HubSpot is actually to upload .jpg or .png for raster images because HubSpot automatically converts images to WebP for you progressively enhancing for browsers that support webp, while showing the original format for browsers that don’t support WebP. In-addition you can then take advantage of HubSpot’s CDN image resizing features through things like `resize_image_url()` .\n\nUploading WebP directly actively prevents us from being able to resize the images for you, and also makes it so any visitors using a browser that doesn’t support webp will not see the images."
  },
  {
    "poster": {
      "poster_name": "Anna Zrust",
      "poster_handle": "azrust"
    },
    "time_stamp": "2022-07-20 08:26:57",
    "text": "<@U7SL518D6> I am fully aware what is the best practice when working with images in HubSpot. But client did it wrong, they have hundreds of images already uploaded in WebP. I am looking for a way to compress them by some third party tool. Or to automatically generate them into jpg or png. Because if the cline would need to edit every single image manually it would take a lot of time."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 09:04:26",
    "text": "Im going to be honest… I’ve never seen or realized that the `|groupby` filter existed before today… Finding it brings me a great joy and sorrow as im sure it’s been around for a long time. I’ve always just grouped stuff on my own… RIP",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-07-20 11:07:36"
      },
      {
        "time_stamp": "2022-07-20 12:18:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stephanie O'Gay Garcia",
      "poster_handle": "stephanie"
    },
    "time_stamp": "2022-07-20 11:07:36",
    "text": "Haha, been there. I've been doing nothing but work in the HubSpot CMS for years and I still discover things all the time!"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 12:18:38",
    "text": "Hahaha same! Spent a bit of time re going over the filter docs today to brush up again hahaha"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2022-07-20 12:48:01",
    "text": "Is there good documentation somewhere that shows best uses and differences between operators \"contains\", \"like\" and \"icontains\" for use with HubDB?",
    "reply_count": 14,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-07-20 12:48:34"
      },
      {
        "time_stamp": "2022-07-20 12:49:51"
      },
      {
        "time_stamp": "2022-07-20 12:51:08"
      },
      {
        "time_stamp": "2022-07-20 12:51:17"
      },
      {
        "time_stamp": "2022-07-20 12:52:36"
      },
      {
        "time_stamp": "2022-07-20 12:52:39"
      },
      {
        "time_stamp": "2022-07-20 12:53:35"
      },
      {
        "time_stamp": "2022-07-20 12:54:04"
      },
      {
        "time_stamp": "2022-07-20 12:55:28"
      },
      {
        "time_stamp": "2022-07-20 12:58:45"
      },
      {
        "time_stamp": "2022-07-20 12:58:53"
      },
      {
        "time_stamp": "2022-07-20 13:00:46"
      },
      {
        "time_stamp": "2022-07-20 13:02:44"
      },
      {
        "time_stamp": "2022-07-20 13:04:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2022-07-20 12:48:34",
    "text": "<@U7SL518D6> Maybe you have some insight here?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 12:49:51",
    "text": "Are you referring to the `hubdb_table_rows()` filter paramerter? Or just operators in general?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 12:51:08",
    "text": "Here is the docs for the filter param <https://legacydocs.HubSpot.com/docs/methods/hubdb/v2/get_table_rows>\n\nThey are the same as the api calls\n\nOther operators and expression tests are documented here\n\n<https://developers.HubSpot.com/docs/cms/hubl/operators-and-expression-tests>"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2022-07-20 12:51:17",
    "text": "mainly for hubdb_table_rows, but beyond that too. Docs are pretty thin on this stuff."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 12:52:36",
    "text": "I also wrote a blog post pseudo related to this topic last week!\n\n<https://devbeej.com/library/filtering-rows-in-hubdb/>"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2022-07-20 12:52:39",
    "text": "Thanks BJ. I've seen those links and they're not super helpful to be honest."
  },
  {
    "text": "All of the hubdb expression tests are right here in that first link",
    "time_stamp": "2022-07-20 12:53:35"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2022-07-20 12:54:04",
    "text": "examples would be good. Like when would you use \"like\" instead of \"contains\"? And is \"icontains\" really case sensitive, cause I'm not sure that it is? :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2022-07-20 12:55:28",
    "text": "From the docs, the only difference between contains and like is that contains support a multi-select. But for regular text column data, is there any difference between like and contains?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 12:58:45",
    "text": "Ahhh yes — It isnt very clear what the difference is. Is contains working for you?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 12:58:53",
    "text": "What are you trying to achieve?"
  },
  {
    "poster": {
      "poster_name": "Nathan Gifford",
      "poster_handle": "ngifford949"
    },
    "time_stamp": "2022-07-20 13:00:46",
    "text": "Usually using contains, but just wondering why there are both if they do the same thing? :slightly_smiling_face: Also, icontains doesn't seem to actually be case sensitive."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 13:02:44",
    "text": "icontains is case insensitive"
  },
  {
    "text": "I do agree, though. These docs in particular could be much more clear",
    "time_stamp": "2022-07-20 13:04:50"
  },
  {
    "poster": {
      "poster_name": "Carlos Claro",
      "poster_handle": "carlos.claro"
    },
    "time_stamp": "2022-07-20 22:04:50",
    "text": ":wave: Hi everyone!",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-07-20 22:57:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-07-20 22:57:47",
    "text": "Hey Carlos! Welcome!"
  }
]
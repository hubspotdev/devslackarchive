[
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-11-11 03:19:36",
    "edited": {
      "time_stamp": "2019-11-11 03:20:08"
    },
    "text": "Condition in CM fields should be a bit more smarter, and let you choose at least 1depth properties to check values:\nFor example, fields such `links` (which can hold external or content/internal links) has a property `type`, which will have `external` value when its an external link, `content`, for internal pages etc. I think we need to be able to set display conditions of other fields based on those properties instead the main field slug.\n\nIn summary:\nThe conditions need to access default properties of other fields instead just the main field value.\n\nMaybe I am missing something such the regex to be able to check property values?"
  },
  {
    "poster": {
      "poster_name": "Guido Porcaro",
      "poster_handle": "guido.porcaro"
    },
    "time_stamp": "2019-11-11 03:57:31",
    "text": "There is a way to tell HubSpot to not minify a JS file?"
  },
  {
    "poster": {
      "poster_name": "Guido Porcaro",
      "poster_handle": "guido.porcaro"
    },
    "time_stamp": "2019-11-11 03:59:29",
    "text": "or at least, not add the .min before the extension?"
  },
  {
    "poster": {
      "poster_name": "Guido Porcaro",
      "poster_handle": "guido.porcaro"
    },
    "time_stamp": "2019-11-11 04:10:35",
    "text": "and, why some files are minified and others not? :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Kelly Cantwell",
      "poster_handle": "kelly.cantwell"
    },
    "time_stamp": "2019-11-11 10:51:41",
    "text": "Does anyone have any resources for building out a nav like the following?",
    "reply_count": 24,
    "reply_users_count": 6,
    "replies": [
      {
        "time_stamp": "2019-11-11 10:54:05"
      },
      {
        "time_stamp": "2019-11-11 11:01:11"
      },
      {
        "time_stamp": "2019-11-11 11:01:25"
      },
      {
        "time_stamp": "2019-11-11 11:01:28"
      },
      {
        "time_stamp": "2019-11-11 11:01:30"
      },
      {
        "time_stamp": "2019-11-11 11:02:10"
      },
      {
        "time_stamp": "2019-11-11 11:11:46"
      },
      {
        "time_stamp": "2019-11-11 11:12:37"
      },
      {
        "time_stamp": "2019-11-11 11:13:14"
      },
      {
        "time_stamp": "2019-11-11 11:14:17"
      },
      {
        "time_stamp": "2019-11-11 11:14:31"
      },
      {
        "time_stamp": "2019-11-11 11:21:21"
      },
      {
        "time_stamp": "2019-11-11 11:22:00"
      },
      {
        "time_stamp": "2019-11-11 11:22:09"
      },
      {
        "time_stamp": "2019-11-11 11:22:33"
      },
      {
        "time_stamp": "2019-11-11 11:22:56"
      },
      {
        "time_stamp": "2019-11-11 11:23:13"
      },
      {
        "time_stamp": "2019-11-11 11:28:14"
      },
      {
        "time_stamp": "2019-11-11 11:28:37"
      },
      {
        "time_stamp": "2019-11-11 11:28:53"
      },
      {
        "time_stamp": "2019-11-11 11:29:05"
      },
      {
        "time_stamp": "2019-11-11 11:39:53"
      },
      {
        "time_stamp": "2019-11-11 11:40:12"
      },
      {
        "time_stamp": "2019-11-12 17:10:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Tejas Panchal",
      "poster_handle": "tejpanchal93"
    },
    "time_stamp": "2019-11-11 10:54:05",
    "text": "Using HubSpot advanced Menu?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:01:11",
    "text": "You can use the `menu()` function in a loop and create any type of menu you want"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-11 11:01:25",
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions>"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-11 11:01:28",
    "text": "chad beat me to it"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:01:30",
    "text": "secondarily you can use a combination of repeaters and simple menus to acomplish the same"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:02:10",
    "text": "<@U54TVT3C1> gotta be faster :slightly_smiling_face:"
  },
  {
    "text": "",
    "time_stamp": "2019-11-11 11:11:46"
  },
  {
    "poster": {
      "poster_name": "Kelly Cantwell",
      "poster_handle": "kelly.cantwell"
    },
    "time_stamp": "2019-11-11 11:12:37",
    "text": "This is the a mock-up of exactly what I'm trying to build."
  },
  {
    "poster": {
      "poster_name": "Kelly Cantwell",
      "poster_handle": "kelly.cantwell"
    },
    "time_stamp": "2019-11-11 11:13:14",
    "text": "Any idea how I would get the descriptions in there? Like under Custom Test Builder?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:14:17",
    "text": "This would be a great use of repeaters /link/text fields"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:14:31",
    "text": "just do a 100% custom menu and make it a global module"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-11 11:21:21",
    "text": "I agree with Chad.  Accomplishing that with advanced menus is a pain.  i.e. the nav menu on this site was built using advanced menus completely: <https://www.visioncritical.com/>"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-11-11 11:22:00",
    "text": "I ended up having to write a whole lot of overly complicated CSS to get it to look and work the way I wanted it to"
  },
  {
    "poster": {
      "poster_name": "Kelly Cantwell",
      "poster_handle": "kelly.cantwell"
    },
    "time_stamp": "2019-11-11 11:22:09",
    "edited": {
      "time_stamp": "2019-11-11 11:22:24"
    },
    "text": "Okay, so just hard code out the whole thing?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:22:33",
    "text": "not exactly."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:22:56",
    "text": "You can make it editable using repeaters, text and link fields"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:23:13",
    "text": "then use booleans for the other stuff like text blocks and blog feeds .. etc"
  },
  {
    "poster": {
      "poster_name": "Kelly Cantwell",
      "poster_handle": "kelly.cantwell"
    },
    "time_stamp": "2019-11-11 11:28:14",
    "text": "Okay, so look through the HUBL docs to get familiar and then see what I can come up with?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:28:37",
    "text": "custom modules"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-11-11 11:28:53",
    "text": "not as hard as that sounds"
  },
  {
    "poster": {
      "poster_name": "Kelly Cantwell",
      "poster_handle": "kelly.cantwell"
    },
    "time_stamp": "2019-11-11 11:29:05",
    "text": "Okay, thanks. I will take a deep dive and see where it gets me. Thanks for your help!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-11-11 11:39:53",
    "text": "hope the mobile version looks exactly the same"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-11-11 11:40:12",
    "text": ":stuck_out_tongue_winking_eye:"
  }
]
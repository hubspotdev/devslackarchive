[
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 01:32:48",
    "text": "Hey guys, does anyone know if the HubSpot api allows us to connect GPT into the HubSpot chat bot?",
    "reply_count": 42,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-03-15 05:04:41"
      },
      {
        "time_stamp": "2023-03-15 14:56:17"
      },
      {
        "time_stamp": "2023-03-15 15:04:41"
      },
      {
        "time_stamp": "2023-03-15 15:05:00"
      },
      {
        "time_stamp": "2023-03-15 15:05:30"
      },
      {
        "time_stamp": "2023-03-15 15:05:31"
      },
      {
        "time_stamp": "2023-03-15 15:05:43"
      },
      {
        "time_stamp": "2023-03-15 15:05:49"
      },
      {
        "time_stamp": "2023-03-15 15:05:50"
      },
      {
        "time_stamp": "2023-03-15 15:05:53"
      },
      {
        "time_stamp": "2023-03-15 15:06:20"
      },
      {
        "time_stamp": "2023-03-15 15:06:44"
      },
      {
        "time_stamp": "2023-03-15 15:07:04"
      },
      {
        "time_stamp": "2023-03-15 15:07:05"
      },
      {
        "time_stamp": "2023-03-15 15:07:21"
      },
      {
        "time_stamp": "2023-03-15 15:07:23"
      },
      {
        "time_stamp": "2023-03-15 15:08:08"
      },
      {
        "time_stamp": "2023-03-15 15:08:18"
      },
      {
        "time_stamp": "2023-03-15 15:08:28"
      },
      {
        "time_stamp": "2023-03-15 15:08:32"
      },
      {
        "time_stamp": "2023-03-15 15:08:35"
      },
      {
        "time_stamp": "2023-03-15 15:08:48"
      },
      {
        "time_stamp": "2023-03-15 15:08:54"
      },
      {
        "time_stamp": "2023-03-15 15:08:58"
      },
      {
        "time_stamp": "2023-03-15 15:09:07"
      },
      {
        "time_stamp": "2023-03-15 22:55:08"
      },
      {
        "time_stamp": "2023-03-16 03:06:15"
      },
      {
        "time_stamp": "2023-03-16 03:06:28"
      },
      {
        "time_stamp": "2023-03-16 03:06:30"
      },
      {
        "time_stamp": "2023-03-16 03:06:51"
      },
      {
        "time_stamp": "2023-03-16 03:07:03"
      },
      {
        "time_stamp": "2023-03-16 03:07:13"
      },
      {
        "time_stamp": "2023-03-16 03:08:40"
      },
      {
        "time_stamp": "2023-03-16 03:33:49"
      },
      {
        "time_stamp": "2023-03-16 03:33:53"
      },
      {
        "time_stamp": "2023-03-16 03:44:08"
      },
      {
        "time_stamp": "2023-03-16 03:51:02"
      },
      {
        "time_stamp": "2023-03-16 04:36:32"
      },
      {
        "time_stamp": "2023-03-16 04:37:01"
      },
      {
        "time_stamp": "2023-03-16 04:37:37"
      },
      {
        "time_stamp": "2023-03-16 06:01:11"
      },
      {
        "time_stamp": "2023-03-16 07:05:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Hans Bulder",
      "poster_handle": "hans"
    },
    "time_stamp": "2023-03-15 02:41:14",
    "text": "done!"
  },
  {
    "poster": {
      "poster_name": "Sami Sundberg",
      "poster_handle": "sami.sundberg"
    },
    "time_stamp": "2023-03-15 04:45:45",
    "text": "Are you able to use <https://developers.HubSpot.com/docs/api/workflows/custom-code-actions|Custom Coded Action>?"
  },
  {
    "poster": {
      "poster_name": "Aditya Naik",
      "poster_handle": "anaik"
    },
    "time_stamp": "2023-03-15 04:48:39",
    "edited": {
      "time_stamp": "2023-03-15 06:35:29"
    },
    "text": "How can I get standard first, previous, and last pagination data and discrete numbered pages using HubSpot API v3? I understand how to get the next page data using GET cms/v3/pages/landing-pages and paging.next.after, But how do i go back to the very first page or any random page in between"
  },
  {
    "poster": {
      "poster_name": "Rob Butler",
      "poster_handle": "rob.butler"
    },
    "time_stamp": "2023-03-15 04:57:50",
    "text": "Hi there, we have integrations with HubSpot whereby the source is always \"Offline sources\". Can anyone direct me to documentation or provide guidance on how we can specify the source so its not lumbered in with the generic \"offline sources\"? - I haven't been able to find anything on the documentation website so far"
  },
  {
    "poster": {
      "poster_name": "Sami Sundberg",
      "poster_handle": "sami.sundberg"
    },
    "time_stamp": "2023-03-15 05:04:41",
    "text": "Yes it is possible with this api <https://developers.HubSpot.com/docs/api/conversations/webhooks-in-bots>\n\nYou just need a micro service that catches webhook and make request to GPT api and then parses GPT anwser to HubSpot's bot format."
  },
  {
    "poster": {
      "poster_name": "Sten-Martin",
      "poster_handle": "sten-martin"
    },
    "time_stamp": "2023-03-15 05:48:24",
    "text": "I've run into the same issue, looks like the response you get has been altered.\n\nold: <http://cdnp1.HubSpotusercontent-na1.net/hubfs/[portalId]/[foldername]/[fileId]|cdnp1.HubSpotusercontent-na1.net/hubfs/[portalId]/[foldername]/[fileId]>\nnew: <http://cdnp1.HubSpotusercontent-na1.net/hub/[portalId]/[fileId]|cdnp1.HubSpotusercontent-na1.net/hub/[portalId]/[fileId]>"
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2023-03-15 06:35:24",
    "text": "I don't think so <@UJLMJNX6G> - I believe I need to go the Custom Workflow Actions route so I can eventually list it as an app in the Marketplace. But I'm relatively new to HubSpot App development, and the documentation around Custom Workflow Actions is pretty basic, so I'm not 100% sure"
  },
  {
    "poster": {
      "poster_name": "Aman thakur",
      "poster_handle": "amanthakur.kbizsoft"
    },
    "time_stamp": "2023-03-15 07:09:54",
    "text": "hey there\nWhen I want to create contact using HubSpot api but I didn't get the api key from HubSpot account ."
  },
  {
    "subtype": "tombstone",
    "text": "This message was deleted.",
    "time_stamp": "2023-03-15 07:10:49",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 08:32:51"
      },
      {
        "time_stamp": "2023-03-15 08:32:58"
      },
      {
        "time_stamp": "2023-03-15 08:34:03"
      },
      {
        "time_stamp": "2023-03-15 08:34:40"
      },
      {
        "time_stamp": "2023-03-15 08:34:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrea Arestigue",
      "poster_handle": "andrea.arestigue121"
    },
    "time_stamp": "2023-03-15 07:14:15",
    "text": "Yea, do you know if they notify about this changes?"
  },
  {
    "poster": {
      "poster_name": "Sten-Martin",
      "poster_handle": "sten-martin"
    },
    "time_stamp": "2023-03-15 07:15:10",
    "text": "I haven't seen any. I also use the signed url api to pass the file along. That one is also broken now"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 08:32:51",
    "text": "You're definitely going to want to delete that image"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 08:32:58",
    "text": "Everyone can see the key"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 08:34:03",
    "text": "To solve your issue though you'll want to use a private apps instead of a hapikey: <https://developers.HubSpot.com/docs/api/private-apps>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 08:34:40",
    "text": "And you'll also want to use the v4 apis instead of the v1 <https://developers.HubSpot.com/docs/api/crm/contacts>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2023-03-15 08:34:47",
    "text": "<@U04TZC2AP6Z> I have gone ahead and removed your comment here as the image you posted contained sensitive information. I highly encourage you to rotate your API Key."
  },
  {
    "poster": {
      "poster_name": "Julian Purser",
      "poster_handle": "juliangd"
    },
    "time_stamp": "2023-03-15 09:55:47",
    "edited": {
      "time_stamp": "2023-03-15 09:58:31"
    },
    "text": "Hi All, I have inherited a system where our marketing site was using php, guzzle and the old HubSpot API to bring forms in. Iâ€™ve set up a new private APP and can connect when using postman but when using the site guzzle keeps throwing an error. This is what I have at the moment :point_down:\n```$headers = [\n                    'Authorization' =&gt; 'Bearer {token goes here}'\n                ];\n                $client = new GuzzleHttp\\Client();\n                $response = $client-&gt;request(\n                    'GET',\n                    \"<https://api.hubapi.com/forms/v2/forms/>\" . $form_id,\n                    $headers\n                );\n                $form = json_decode($response-&gt;getBody(), true);\n                return $form;```\nAnd this is the response I get\n\n```GuzzleHttp\\Exception\\ClientException: Client error: `GET <https://api.hubapi.com/forms/v2/forms/{form_id_here}>` resulted in a `401 Unauthorized` response: {\"status\":\"error\",\"message\":\"Any of the listed authentication credentials are missing\",\"correlationId\":\"{id_here} (truncated...)```\nHas anyone else encountered this problem?",
    "reply_count": 16,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 11:39:16"
      },
      {
        "time_stamp": "2023-03-16 03:18:19"
      },
      {
        "time_stamp": "2023-03-16 07:07:49"
      },
      {
        "time_stamp": "2023-03-16 07:08:13"
      },
      {
        "time_stamp": "2023-03-16 09:04:22"
      },
      {
        "time_stamp": "2023-03-16 09:05:02"
      },
      {
        "time_stamp": "2023-03-16 09:06:09"
      },
      {
        "time_stamp": "2023-03-16 09:07:34"
      },
      {
        "time_stamp": "2023-03-16 09:07:43"
      },
      {
        "time_stamp": "2023-03-16 09:09:57"
      },
      {
        "time_stamp": "2023-03-16 09:10:21"
      },
      {
        "time_stamp": "2023-03-16 09:10:30"
      },
      {
        "time_stamp": "2023-03-16 09:11:06"
      },
      {
        "time_stamp": "2023-03-16 09:11:36"
      },
      {
        "time_stamp": "2023-03-16 09:13:45"
      },
      {
        "time_stamp": "2023-03-16 09:22:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Bryan",
      "poster_handle": "bbpadilha"
    },
    "time_stamp": "2023-03-15 11:28:37",
    "edited": {
      "time_stamp": "2023-03-15 13:03:56"
    },
    "text": "Hello,\n\nI'm trying to link contacts across form submissions using the Forms API. As I understand, I have to pass a `usertoken` for HubSpot to know who that user is. It seems that once a contact is created the `usertoken` is immediately associated with that and cannot be changed.\n\nIs it possible to associate the `usertoken` to the latest created contact created instead of the first?\n\nAlternatively, if I could regenerate that token manually that could work too."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 11:39:16",
    "edited": {
      "time_stamp": "2023-03-15 11:39:26"
    },
    "text": "I just do you want to try this code instead?\n```&lt;?php\n$client = new Client();\n$headers = [\n  'Authorization' =&gt; 'Bearer pat-na1-xxxxxx'\n];\n$request = new Request('GET', '<https://api.hubapi.com/forms/v2/forms/{formID}>', $headers);\n$res = $client-&gt;sendAsync($request)-&gt;wait();\necho $res-&gt;getBody();```"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-03-15 14:56:17",
    "text": "Is it possible to make this an app for the HubSpot marketplace?"
  },
  {
    "poster": {
      "poster_name": "Angus Gibbs",
      "poster_handle": "agibbs"
    },
    "time_stamp": "2023-03-15 15:04:10",
    "text": "No sorry, Carter's suggestion of a proxy is the best that I have. We don't have a way to configure static IPs on our end at this time."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:04:41",
    "text": "Currently no, you can't build apps for chatflows yet, you can just send data to a server from a chatflow and then respond with whatever the server sends back"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:05:00",
    "text": "Damn"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:05:30",
    "text": "We have a client that wants me to build him a custom trained ai and plug it into their HubSpot chat bot"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:05:31",
    "text": "If you could <@UF6U20T3K> at Resonate would be all over it, lol"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:05:43",
    "text": "you can do that"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:05:49",
    "text": "super easy"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:05:50",
    "text": "But I donâ€™t want to just add it to their HubSpot"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:05:53",
    "text": "Oh I know"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:06:20",
    "text": "I want to charge them monthly and was hoping to try and make it look more like a saas that they are purchasing instead of just a web hook I chucked in their HubSpot"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:06:44",
    "text": "Any suggestions?"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:07:04",
    "text": "But I was hoping to try and market this idea to other people"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:07:05",
    "text": "Yeah the aws lambda idea is pretty much the best option at this point in time"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:07:21",
    "text": "Whatâ€™s that idea sorry?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:07:23",
    "text": "<https://www.resonatehq.com/openai-gpt-3-integration-with-HubSpot>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:08:08",
    "text": "Create a lambda to catch the webhooks feed that to openai and send the response back to the chatflow"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:08:18",
    "text": "charge the client based on usage"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:08:28",
    "text": "Thatâ€™s what I was thinking"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:08:32",
    "text": "Is that was resonate does?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:08:35",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:08:48",
    "text": "for all intensive purposes"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:08:54",
    "text": "Yeah"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 15:08:58",
    "text": "Sweet, thanks heaps bro!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 15:09:07",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-03-15 16:00:06",
    "text": "Creating a custom workflow via the API. Iâ€™m able to create the workflow with two steps and creating my custom workflow action.\n```    \"actions\": [\n        {\n            \"type\": \"DELAY\",\n            \"delayMillis\": 1800000\n        },\n        {\n            \"type\": \"EXTENSION\",\n            \"extensionInstanceVersion\": 3,\n            \"extensionDefinitionId\": 31386880,\n            \"extensionDefinitionVersion\": 7,\n            \"metadata\": {}\n        }\n    ]```\nHow can I set defined values for the custom workflow action (type: extension)?",
    "reply_count": 15,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 16:34:43"
      },
      {
        "time_stamp": "2023-03-15 16:34:57"
      },
      {
        "time_stamp": "2023-03-15 16:36:14"
      },
      {
        "time_stamp": "2023-03-15 16:36:14"
      },
      {
        "time_stamp": "2023-03-15 16:36:18"
      },
      {
        "time_stamp": "2023-03-15 16:36:19"
      },
      {
        "time_stamp": "2023-03-15 16:36:32"
      },
      {
        "time_stamp": "2023-03-15 16:36:38"
      },
      {
        "time_stamp": "2023-03-15 16:36:51"
      },
      {
        "time_stamp": "2023-03-15 16:37:23"
      },
      {
        "time_stamp": "2023-03-15 16:38:12"
      },
      {
        "time_stamp": "2023-03-15 16:38:24"
      },
      {
        "time_stamp": "2023-03-15 18:10:57"
      },
      {
        "time_stamp": "2023-03-15 21:00:54"
      },
      {
        "time_stamp": "2023-03-16 07:26:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:34:43",
    "text": "Don't think you can"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:34:57",
    "text": "You also (to my knowledge) can't include CCAs"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:36:14",
    "text": "Where do you see the type extension?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:36:14",
    "text": "<https://legacydocs.HubSpot.com/docs/methods/workflows/v3/create_workflow>"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-03-15 16:36:18",
    "text": "Yeah I was able to add my create custom workflow to a custom workflow"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:36:19",
    "text": "It's not in the list"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-03-15 16:36:32",
    "text": "Right but I got it added !!"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-03-15 16:36:38",
    "text": "With the type of extension"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:36:51",
    "text": "What that's awesome, how did you find that out? OPENAPI?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:37:23",
    "text": "explain this more: <https://HubSpotdev.slack.com/archives/C2YHAHB6K/p1678919778118539?thread_ts=1678917606.057429&amp;cid=C2YHAHB6K>"
  },
  {
    "poster": {
      "poster_name": "Hugo Barrientos",
      "poster_handle": "hugo915"
    },
    "time_stamp": "2023-03-15 16:37:42",
    "text": "Hi guys! it's nice to see you! I want to know, Can I search if a contact has deals? Can I search deals by associated contacts? Thanks in advance",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-15 16:45:35"
      },
      {
        "time_stamp": "2023-03-15 16:45:44"
      },
      {
        "time_stamp": "2023-03-15 16:46:09"
      },
      {
        "time_stamp": "2023-03-15 16:49:13"
      },
      {
        "time_stamp": "2023-03-16 07:08:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-03-15 16:38:12",
    "text": "I'll later. Away from the computer at the moment and I'll send screenshots"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:38:24",
    "text": ":+1::skin-tone-2:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:45:35",
    "text": "Yes this is pretty easy with the search api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 16:45:44",
    "text": "<https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "text": "",
    "time_stamp": "2023-03-15 16:46:09"
  },
  {
    "poster": {
      "poster_name": "Hugo Barrientos",
      "poster_handle": "hugo915"
    },
    "time_stamp": "2023-03-15 16:49:13",
    "text": "thank you! let me check this"
  },
  {
    "text": "This is how I was able to create a new workflow via the API with my custom  workflow action attached.\n```    \"actions\": [\n        {\n            \"type\": \"DELAY\",\n            \"delayMillis\": 1800000\n        },\n        {\n            \"type\": \"EXTENSION\",\n            \"extensionInstanceVersion\": 3,\n            \"extensionDefinitionId\": 31386880,\n            \"extensionDefinitionVersion\": 7,\n            \"metadata\": {}\n        }\n    ]```\n",
    "time_stamp": "2023-03-15 18:10:57"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:36:05",
    "text": "this is doing my head in"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:36:06",
    "text": "Error: HubSpot API request failed (Response Code: 404): &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/&gt; &lt;title&gt;Error 404 Not Found&lt;/title&gt; &lt;/head&gt; &lt;body&gt;&lt;h2&gt;HTTP ERROR 404&lt;/h2&gt; &lt;p&gt;Resource not found&lt;/p&gt; &lt;/body&gt; &lt;/html&gt;"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:36:56",
    "text": "```const ACCESS_TOKEN = 'ACCESS_TOKEN_GOES_HERE';\n\nfunction onOpen() {\n  const ui = SpreadsheetApp.getUi();\n  const menu = ui.createMenu('HubSpot');\n  menu.addItem('Test Merge', 'testMergeContacts');\n  menu.addToUi();\n}\n\nfunction testMergeContacts() {\n  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Sheet1');\n  const log = [];\n\n  const existingContacts = getStoredContacts(sheet);\n  const newContacts = getAllContacts(log);\n  const allContacts = existingContacts.concat(newContacts);\n\n  storeContacts(sheet, allContacts);\n\n  const groupedContacts = groupContacts(allContacts);\n  mergeContacts(groupedContacts, log);\n\n  sheet.getRange('A1').setValue(log.join('\\n'));\n}\n\nfunction callHubSpotApi(url, method = 'get', payload) {\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${ACCESS_TOKEN}`,\n    },\n    muteHttpExceptions: true,\n  };\n\n  if (payload) {\n    options.payload = JSON.stringify(payload);\n  }\n\n  const response = UrlFetchApp.fetch(url, options);\n  if (response.getResponseCode() !== 200) {\n    const responseCode = response.getResponseCode();\n    const responseText = response.getContentText();\n    const errorMessage = `HubSpot API request failed (Response Code: ${responseCode}): ${responseText}`;\n    throw new Error(errorMessage);\n  }\n\n  return JSON.parse(response.getContentText());\n}\n\nfunction getAllContacts(log) {\n  let contacts = [];\n  const batchSize = 100;\n  const checkMergesAt = 1000;\n  let contactsSinceLastMergeCheck = 0;\n  \n  const scriptProperties = PropertiesService.getScriptProperties();\n  let after = scriptProperties.getProperty('after') || '';\n\n  while (contactsSinceLastMergeCheck &lt; checkMergesAt) {\n    const apiUrl = `<https://api.hubapi.com/crm/v3/objects/contacts?limit=${batchSize}&amp;properties=email,firstname,lastname,phone,SPID,createdate,HubSpot_owner_id${after> ? `&amp;after=${after}` : ''}`;\n\n    const response = callHubSpotApi(apiUrl);\n    contacts = contacts.concat(response.results);\n    contactsSinceLastMergeCheck += response.results.length;\n\n    if (!response.paging || !response.paging.next) {\n      break;\n    }\n    after = response.paging.next.after;\n    Utilities.sleep(500); // Adjust the delay in milliseconds according to your API rate limits\n  }\n\n  scriptProperties.setProperty('after', after);\n\n  log.push(`Retrieved contacts up to the limit.`);\n  return contacts;\n}\n\nfunction groupContacts(contacts) {\n  const groups = {};\n\n  contacts.forEach(contact =&gt; {\n    const email = contact.properties.email || '';\n    const firstname = contact.properties.firstname || '';\n    const lastname = contact.properties.lastname || '';\n    const phone = contact.properties.phone || '';\n\n    const key = [email, firstname + ' ' + lastname, phone].join('|');\n\n    if (!groups[key]) {\n      groups[key] = [];\n    }\n\n    groups[key].push(contact);\n  });\n\n  return Object.values(groups).filter(group =&gt; group.length &gt; 1);\n}\n\nfunction mergeContacts(groups, log) {\n  for (const group of groups) {\n    group.sort((a, b) =&gt; {\n      if (a.properties.SPID &amp;&amp; !b.properties.SPID) return -1;\n      if (!a.properties.SPID &amp;&amp; b.properties.SPID) return 1;\n      return new Date(a.properties.createdate) - new Date(b.properties.createdate);\n    });\n    const primaryContact = group.shift();\n    for (const secondaryContact of group) {\n      log.push(`Merging contact ${secondaryContact.id} into ${primaryContact.id}`);\n      callHubSpotApi(`<https://api.hubapi.com/crm/v3/objects/contacts/${primaryContact.id}/merge>`, 'post', { objectId: secondaryContact.id });\n    }\n  }\n}\n\nfunction getStoredContacts(sheet) {\n  const data = sheet.getRange('B1:B').getValues();\n  const contacts = data\n    .filter(row =&gt; row[0] !== '')\n    .map(row =&gt; JSON.parse(row[0]));\n\n  return contacts;\n}\n\nfunction storeContacts(sheet, contacts) {\n  const data = contacts.map(contact =&gt; [JSON.stringify(contact)]);\n  sheet.getRange(1, 2, data.length, 1).setValues(data);\n}```"
  },
  {
    "poster": {
      "poster_name": "Jordan Ryken",
      "poster_handle": "jordan.ryken"
    },
    "time_stamp": "2023-03-15 18:37:13",
    "text": "any advice?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-15 21:00:54",
    "text": "Oh that's very interesting, and you found this by getting a workflow that had a custom action inside of it?"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 22:55:08",
    "text": "Hey, I did everything! But I canâ€™t figure out how to grab responses from the webhook and send it back to the customer through the hubchat"
  },
  {
    "poster": {
      "poster_name": "Kobe Kapoor",
      "poster_handle": "kobe"
    },
    "time_stamp": "2023-03-15 23:00:47",
    "text": "Hey everyone, I am trying to use a webhook in the chat flow. I see in the docs that Advanced users also have the option of including JSON in your webhookâ€™s response. By doing this, you can impact the flow of conversation or send a custom message. How do I get this custom message to send back to the user?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-03-16 07:04:39"
      },
      {
        "time_stamp": "2023-03-16 07:04:47"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "Mike Ward",
      "poster_handle": "mike434"
    },
    "time_stamp": "2020-04-29 05:39:54",
    "text": "<@UJ3G9FH9U> did you try adding `no_wrapper=True` ? That should fix it and prevent the `&lt;span&gt;&lt;/span&gt;` wrapper being added"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2020-04-29 06:19:11",
    "text": "Hey, has anyone got hold of a jinja / hubl package for the likes of Atom? working more with local dev but you know how it is with the colours / dark mode :upside_down_face:",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-04-29 06:37:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2020-04-29 06:37:51",
    "edited": {
      "time_stamp": "2020-04-29 06:38:10"
    },
    "text": "There is a HubL extension for VS Code <https://marketplace.visualstudio.com/items?itemName=WilliamSpiro.hubl>\n\nThats all I used for local dev"
  },
  {
    "poster": {
      "poster_name": "Avi Goldman",
      "poster_handle": "avigoldmankid"
    },
    "time_stamp": "2020-04-29 10:16:17",
    "text": "For some reason when I run this `{{ get_asset_url(\"/opus/images/cta-purple.png\") }}` from my module.html it works perfectly but in my module.css file, it returns the wrong URL. Anyone else experience something like this?"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2020-04-29 23:49:00",
    "text": "Hi guys, anyone know if we can exclude posts when using the `blog_recent_tag_posts` tag? I am using this function to create a relevant posts module, but I do no want to show the current post.",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-04-30 02:12:54"
      },
      {
        "time_stamp": "2020-04-30 02:54:20"
      },
      {
        "time_stamp": "2020-04-30 13:09:49"
      },
      {
        "time_stamp": "2020-04-30 13:11:16"
      },
      {
        "time_stamp": "2020-05-03 23:19:49"
      }
    ]
  }
]
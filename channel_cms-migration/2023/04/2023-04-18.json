[
  {
    "poster": {
      "poster_name": "Brendan Yong",
      "poster_handle": "brendanyong"
    },
    "time_stamp": "2023-04-18 06:50:48",
    "text": "Are there any developers here that has worked extensively on both wordpress and HubSpot to give a independent and fair comparison of both CMS with considerations to :\n(1) security even as more plugins are used \n(2) load speed even as more plugins are used \n(3) customizability of modules\n(4) ease of updating for editors vs developers\n(5) scalability \n(6) HubSpot unique features like HubDB, smartContent , multi-language \n\nWe are re-evaluating HubSpot CMS and May move to wordpress ",
    "reply_count": 6,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-04-18 10:02:32"
      },
      {
        "time_stamp": "2023-04-18 10:35:38"
      },
      {
        "time_stamp": "2023-04-18 10:36:29"
      },
      {
        "time_stamp": "2023-04-18 10:44:13"
      },
      {
        "time_stamp": "2023-04-18 13:56:15"
      },
      {
        "time_stamp": "2023-04-18 14:12:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-04-18 10:02:32",
    "edited": {
      "time_stamp": "2023-04-18 10:11:06"
    },
    "text": "Everyone's gonna have different opinions, but these are mine:\n\n(1) HubSpot does not have plugins, so this is a question isolated to WP. In my opinion, a Wordpress site should have 1 core security plugin (a lot of people use Wordfence, but their plugin made a lot of websites crash this last week), and a WP site should minimize (as much as possible) use of other plugins. Nowadays, even a complicated site design can be built in WP with full-site editing and just one custom plugin for any special gutenberg blocks you need. A smart wordpress developer should use as few plugins as possible. HubSpot on the other hand achieves adequate security requirements (for most companies) on its own.\n\n(2) HubSpot has its own optimization techniques for pagespeed, and those techniques could be different from optimizing pagespeed on WP (depending on hosting solution, etc). So it's about knowing the best techniques for each platform.\n\n(3) HubSpot's module system is much more customizable (if you have access to a developer) than WP. For developing customized \"modules\" in WP, you kind of need a plugin developer to set up custom gutenberg blocks. Or install a theme that gives you full editing and creative capability, like Elementor, but I don't like elementor because it's overpriced.\n\n(4) Ease of editing in HubSpot and Wordpress solely depends on how the developer has set up the theme. In my experience, it is much easier to full customize the editing experience for marketers in HubSpot\n\n(5) My vote is for HubSpot in regards for scalability, but be aware of the different pricing plans in HubSpot that unlock different capabilities for scaling.\n\n(6) I think HubSpot easily takes the cake for any database customization and data-driven content you need."
  },
  {
    "poster": {
      "poster_name": "Brendan Yong",
      "poster_handle": "brendanyong"
    },
    "time_stamp": "2023-04-18 10:35:38",
    "edited": {
      "time_stamp": "2023-04-18 10:36:11"
    },
    "text": "Thanks for that detailed reply. Appreciate it very much. \n\nFor point 3 and 4, do you think the way HubSpot provides the (1) Designer tools , where you concurrently can see the html, css, js layers (with color codes for levels) , (2) HubL way of code dev (3) custom modules blocks , lead to cleaner, more scalable code compared to Wordpress? "
  },
  {
    "poster": {
      "poster_name": "Brendan Yong",
      "poster_handle": "brendanyong"
    },
    "time_stamp": "2023-04-18 10:36:29",
    "text": "(5) cost not a concern for us"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2023-04-18 10:44:13",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-04-18 13:56:15",
    "text": "I’d just like to chime in and second pretty much everything Nich said here:\n1. With regards to security, HubSpot has a much narrower attack surface than Wordpress; especially if you take the security risks of plugins into account. With the way HubSpot renders and serves pages, you can mostly narrow security concerns to areas where you’re explicitly capturing and handling user inputs.\n2. Page speed is largely on your abilities to optimize page size and script weight. There are a few narrow considerations for rendering time (not using render-blocking tags, etc.), but even if you mess ALL of that up, you’re likely still going to wind up rendering faster than 95% of WP implementations.\n3. HubSpot is also _much_ easier to extend. The development effort required to implement something like an Elementor component is positively massive compared to the effort it takes to put together a HubSpot module. However, there are a _few_ restrictions when extending HubSpot: for example, you can’t really touch routing, so running the site as an SPA is out of the question.\n4. In my experience, clients take to the HubSpot page builder much more easily than typical WP page builders. YMMV depending on the editors’ backgrounds, but I’d say that HS wins out on average.\n5. Scalability goes to HubSpot, and it would be a complete blowout if it weren’t for one caveat — sandbox functionality in HubSpot is very limited. You can’t move changes from a HubSpot sandbox back to a production environment, which can be a significant limiter if you’re trying to overhaul existing implementations.\n6. Dynamic content functionality can be very powerful and user-friendly, so long as your CRM is set up in a way that facilitates it. HubDB gets the job done, but is quite a bit more limiting than most typical databases; it’s best-suited as a repository for data that’s already processed and ready for display. Dynamic pages are fantastic, but can only draw from HubDB or CRM objects; you’re kinda hosed if you need to generate dynamic pages from an external API.\nBased on the needs you’ve described here, so long as one of those few caveats I’ve mentioned aren’t dealbreakers for you, HubSpot will very likely be the better choice."
  },
  {
    "time_stamp": "2023-04-18 14:00:01",
    "text": "Reminder: Looking to migrate content into HubSpot? We may have some tools that can help: <https://knowledge.HubSpot.com/blog/import-your-content-into-HubSpot>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-18 14:12:51",
    "text": "Just to piggy back off of <@U04AQA0QM8E>'s 6th point:\nHubSpot has the option to use serverless functions to pull data from external apis and database and then display that information on any cms page (even if that page is already displaying data from the CRM or HubDB), so it definitely can be used for that type of thing in a safe and secure way but you definitely have to keep in mind that it might not be as simple as just installing a WP plugin (which most of the time is definitely not as secure as a serverless function)"
  }
]
[
  {
    "text": "Hello everyone,\n\nI'm currently working on an integration where I want to trigger a workflow from webhook. I have a few concerns that I would love to get input on:\n• After creating a webhook event, can everyone call it? Is there a way of authenticating my requests so that the URL is not enough to trigger the workflow?\n• As there is a limit of 10 webhook events, I would only like to use one, and based on the payload content add some criteria that will continue or stop the workflow. Is it possible to edit the event properties once the webbook event is created? \nThank you!",
    "time_stamp": "2024-05-07 03:09:41"
  },
  {
    "poster": {
      "poster_name": "Jorge Roch",
      "poster_handle": "jorge180"
    },
    "time_stamp": "2024-05-07 03:41:37",
    "text": "Hey Nicholas! Thanks a lot for your response! Super interesting approach. However, I still have doubts about how you set the delay with the exact duration until the meeting takes place. (i.e - let's say i book a meeting today (7th of may) for the 10th. How would you tell the workflow to make a delay until the 10th?"
  },
  {
    "poster": {
      "poster_name": "Jorge Roch",
      "poster_handle": "jorge180"
    },
    "time_stamp": "2024-05-07 03:51:37",
    "text": "Is it with next activity date?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-05-07 06:29:44",
    "text": "<https://share.zight.com/JruEwkYb>\n\nthe workflow has a bunch of custom code and api calls to get datta and verify it. If it has future meetings found,  then IU check to see if the meeting start time is past 30 minutes, and if it isn’t, uncheck a box, delay for 3 minutes, check a box to activate the next workflow. that workflow unsets the property, delays, then sets the “trigger - meeting follow enrollment” to yes to it will get put back into the original workflow"
  },
  {
    "poster": {
      "poster_name": "Ace Hedger",
      "poster_handle": "ace"
    },
    "time_stamp": "2024-05-07 09:50:32",
    "text": "Maybe showing the number completed out of the total, and having it run a certain number at a time rather than just letting all of them bottleneck. The certain number could be the max allowable, but by throttling it like that, maybe the failure rate could drop. There could still be retries on failure, but there would be fewer retries."
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2024-05-07 10:46:19",
    "text": "we’re discussing some of the pain you’re describing right now. The concern with adding an artificial throttle is that it would lead to far longer execution times at times when that’s not needed. Instead, we would hope for better “behind the scenes” automation that could detect potential throttling events and adjust execution accordingly"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2024-05-07 10:46:29",
    "text": "we’re taking in all feedback right now so this is helpful context, thanks Ace"
  },
  {
    "poster": {
      "poster_name": "Ace Hedger",
      "poster_handle": "ace"
    },
    "time_stamp": "2024-05-07 12:15:27",
    "text": "Thank you. Looking forward to seeing how this works out."
  }
]
[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-18 06:36:35",
    "text": "Jamie, you'd have to get your api calls to hold onto 250, then do another. To program this out you have to check to see if you actually received 250 back, if you do, then change the offset of your call to 250, that way you are picking it up automatticaly from where you left off in the query.\n\nI can't really touch on the formatting errors as I can't see the data"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-18 06:37:48",
    "text": "you can look into uptime monitoring. you can do stuff like javascript testing that verifies your pages are live and have it notify you."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-06-18 07:36:32",
    "text": "That would be the Engagements API <https://developers.HubSpot.com/docs/methods/engagements/engagements-overview>"
  },
  {
    "poster": {
      "poster_name": "Jennifer Ma",
      "poster_handle": "jennifer.ma"
    },
    "time_stamp": "2019-06-18 10:47:57",
    "edited": {
      "time_stamp": "2019-06-18 10:48:07"
    },
    "text": "Has anyone migrated one HubSpot account into another one? If yes, how were you able to migrate all the data?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-06-18 11:11:10",
    "text": "we did it through the APIs, <@UBLH6MN2Z> might be able to help answer a little better as he is the one who did it with us"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-06-18 11:13:29",
    "text": "Yeh, I utilized the HubSpot restful apis to pull a complete list of pages and one by one, added them into the other account. If they are 2 sites in the same account (shared authors, etc), then its very simple. If these are completely different accounts, then you'd need to make a decision on exactly what pieces of information on each page you want to send over (for example, the user's id would be different from an authorship perspective)."
  },
  {
    "poster": {
      "poster_name": "Jennifer Ma",
      "poster_handle": "jennifer.ma"
    },
    "time_stamp": "2019-06-18 12:36:02",
    "text": "<@UBLH6MN2Z> Thank you so much for that information. I would like to collect all the notes that were left on the contact, deals, and etc."
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-06-18 12:39:00",
    "text": "You should be able to pull all of that info. For example, if I wanted to pull all the contact information, I could use the Engagements API (<https://developers.HubSpot.com/docs/methods/engagements/engagements-overview>)"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-06-18 12:39:40",
    "text": "Mixed with the contacts API <https://developers.HubSpot.com/docs/methods/contacts/contacts-overview>"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-06-18 12:40:09",
    "text": "between those 2, you should be able to get all the contacts and the associated engagements, etc."
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-06-18 12:40:28",
    "text": "There's also a Deals API if you needed to pull all of that out as well"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-06-18 12:42:45",
    "text": "To be honest, if you haven't played with the APIs much, the first place I would start is a program called Postman. It will let you send JSON requests to a URL and see what the results look like. Then you can compare those results from each API call with your actual HubSpot portal and verify you are pulling what is expected. Only after I have all the right calls broken down do I then dig into programmatically writing my scripts."
  },
  {
    "poster": {
      "poster_name": "Jennifer Ma",
      "poster_handle": "jennifer.ma"
    },
    "time_stamp": "2019-06-18 12:46:03",
    "text": "Thank you so much for all your help! I love that program! It is pretty awesome!"
  },
  {
    "poster": {
      "poster_name": "Takuya",
      "poster_handle": "aimi"
    },
    "time_stamp": "2019-06-18 18:11:02",
    "text": "Thank you!"
  }
]
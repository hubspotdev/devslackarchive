[
  {
    "poster": {
      "poster_name": "shae strachan",
      "poster_handle": "shae"
    },
    "time_stamp": "2021-10-26 07:33:34",
    "text": "Do Custom Object Properties have to be searchableProperties to query the values in programmable email?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-10-26 07:43:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Joe O'Hara",
      "poster_handle": "johara"
    },
    "time_stamp": "2021-10-26 07:43:58",
    "text": "Nope, all properties are queryable. searchableProperties only refers to the in-app search"
  },
  {
    "poster": {
      "poster_name": "Karman Li",
      "poster_handle": "karman.li"
    },
    "time_stamp": "2021-10-26 08:34:03",
    "text": "Hi there, I’ve a a custom language switcher on a blog. Currently it shows me all language options, even the ones which are in draft, not published yet. So this language option should not be displayed. How can I exclude this?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-26 08:54:00",
    "text": "I don’t think that you can do this. This would be a good thing to slap in the “Ideas” channel though"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-10-26 11:23:20",
    "text": "FYI the blog is now live! <http://revops.io/blog|revops.io/blog> thank you to all!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-10-26 12:14:06",
    "text": "<@U0276HSQAE8> nice \"load more posts\" animation"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-10-26 12:21:53",
    "text": "Thanks! I stole it from codepen I think."
  },
  {
    "subtype": "tombstone",
    "text": "This message was deleted.",
    "time_stamp": "2021-10-26 12:48:27",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-10-26 12:51:17"
      },
      {
        "time_stamp": "2021-10-26 12:51:27"
      },
      {
        "time_stamp": "2021-10-26 12:51:53"
      },
      {
        "time_stamp": "2021-10-26 12:52:11"
      },
      {
        "time_stamp": "2021-10-26 12:52:55"
      },
      {
        "time_stamp": "2021-10-26 12:55:22"
      },
      {
        "time_stamp": "2021-10-26 12:55:37"
      },
      {
        "time_stamp": "2021-10-26 12:57:36"
      },
      {
        "time_stamp": "2021-10-26 12:58:41"
      },
      {
        "time_stamp": "2021-10-26 12:58:59"
      },
      {
        "time_stamp": "2021-10-26 12:59:09"
      },
      {
        "time_stamp": "2021-10-26 12:59:12"
      },
      {
        "time_stamp": "2021-10-26 12:59:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-10-26 12:50:46",
    "text": "Looks great! thanks for sharing!"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-10-26 12:51:17",
    "text": "Theme variables are available at {{ theme.* }}"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-10-26 12:51:27",
    "text": "therefore, you’ll want to do something like:"
  },
  {
    "poster": {
      "poster_name": "Mark Lerner",
      "poster_handle": "mark595"
    },
    "time_stamp": "2021-10-26 12:51:40",
    "text": "Hey <@USJLWLC2V> - were you able to get this to be mobile optimized?"
  },
  {
    "text": "",
    "time_stamp": "2021-10-26 12:51:53"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-10-26 12:52:11",
    "text": "Already have the variable created and imported."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-10-26 12:52:55",
    "text": "so you could do it like this:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-10-26 12:55:22",
    "text": "```{% set typography = theme.typography %}\n\n{% macro createTypographyCSS(key) -%}\n   {{ typography[key].font_field }}\n{%- endmacro %}\n{{ createTypographyCSS('h1')}}```"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-10-26 12:55:37",
    "text": "but i’m not 100% sure what it is you’re aiming for"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-10-26 12:57:36",
    "text": "That would be a solution potentially but I incidentally just figured out the answer...."
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-10-26 12:58:41",
    "text": "I'm calling the parameter as a string...  a friend told me I needed to do that to solve a different issue so i didn't even consider trying to actually call the paramter as a vaiable..."
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-10-26 12:58:59",
    "text": "`{{ createTypographyCSS(h1)}}` instead of `{{ createTypographyCSS('h1')}}`"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-10-26 12:59:09",
    "text": ":sweat_smile:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-10-26 12:59:12",
    "text": "indeed"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-10-26 12:59:24",
    "text": "thanks for the help..."
  }
]
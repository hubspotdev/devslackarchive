[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 06:49:26",
    "text": "Gonna miss yall"
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2017-09-29 06:50:50",
    "text": "We'll miss you too <@U25PYL3Q8>! We'll record the sessions though and hopefully you can join us next year."
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "text": "Slides",
    "time_stamp": "2017-09-29 07:41:54"
  },
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2017-09-29 07:42:14",
    "text": "Seems to be an issue with the guest wifi network",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2017-09-29 07:43:07"
      },
      {
        "time_stamp": "2017-09-29 07:44:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2017-09-29 07:43:07",
    "text": "Thanks, Jon. I'll give our team a heads up."
  },
  null,
  {
    "subtype": "pinned_item",
    "text": "<@U22PU4G4A> pinned â€™s File  to this channel.",
    "item": {
      "created": 1506692511,
      "timestamp": 1506692511
    },
    "time_stamp": "2017-09-29 07:43:48"
  },
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2017-09-29 07:44:29",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2017-09-29 07:46:13",
    "text": "Love the Mario theme :nerd_face:"
  },
  {
    "poster": {
      "poster_name": "jessebeginbound",
      "poster_handle": "jessebeginbound"
    },
    "time_stamp": "2017-09-29 07:51:56",
    "text": "Thanks for getting the PDF in the channel, Jon!"
  },
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2017-09-29 07:53:14",
    "text": "No prob!"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2017-09-29 08:15:37",
    "text": "HubSpot Web Dev Day Folks :arrow_right: Who's loving these new Developer Tool announcements? - Which are your favorite so far?",
    "reply_count": 5,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2017-09-29 08:19:31"
      },
      {
        "time_stamp": "2017-09-29 08:24:57"
      },
      {
        "time_stamp": "2017-09-29 08:35:39"
      },
      {
        "time_stamp": "2017-09-29 08:37:37"
      },
      {
        "time_stamp": "2017-09-29 08:42:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-09-29 08:16:42",
    "text": "Whats been announced so far? Is there a page like there was for /new on HS?",
    "reply_count": 4,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2017-09-29 08:18:57"
      },
      {
        "time_stamp": "2017-09-29 08:20:07"
      },
      {
        "time_stamp": "2017-09-29 08:33:56"
      },
      {
        "time_stamp": "2017-09-29 09:13:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2017-09-29 08:18:57",
    "text": "New Design IDE, and Custom Modules. More to come soon as well :wink:"
  },
  {
    "poster": {
      "poster_name": "Jon Eichler",
      "poster_handle": "jeichler"
    },
    "time_stamp": "2017-09-29 08:19:31",
    "text": "You are going to make us pick?!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-09-29 08:20:07",
    "text": "Got any screens of the new design IDE?"
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2017-09-29 08:24:57",
    "text": "Cloning modules AND 16 NEW fields to custom modules whaaaattttt!! :boom:"
  },
  {
    "poster": {
      "poster_name": "Erica Gabel",
      "poster_handle": "egabel"
    },
    "time_stamp": "2017-09-29 08:29:33",
    "text": "<@U22PKFRU5> You know it the custom modules!"
  },
  {
    "poster": {
      "poster_name": "Erica Gabel",
      "poster_handle": "egabel"
    },
    "time_stamp": "2017-09-29 08:29:46",
    "text": ":heart_eyes_cat:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 08:33:56",
    "text": "screens / or presentations"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2017-09-29 08:35:39",
    "text": "files/folders"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-09-29 08:37:37",
    "text": "really... 16 new custom module fields is boss"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2017-09-29 08:41:51",
    "text": "holy crap the new custom module tool is amazing, so excited to use all 21 fields"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2017-09-29 08:42:03",
    "text": "i will never use a global group again"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2017-09-29 08:42:41",
    "text": "of course modules too"
  },
  null,
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-09-29 08:52:57",
    "text": "All I want to do is create amazing custom modules and re-use them everywhere (and/or sell them) - Quick question on sales of modules (for when it comes): Is there any HubSpot ToS regarding some sort of proprietary mechanism for enabling / disabling module functionality?"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-09-29 08:53:25",
    "text": "ex: some way to protect your module code from being purchased, reproduced, and re-sold under someone else's name / templates"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 08:55:03",
    "text": "drm",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2017-09-29 08:59:06"
      },
      {
        "time_stamp": "2017-09-29 09:00:50"
      },
      {
        "time_stamp": "2017-09-29 09:08:50"
      },
      {
        "time_stamp": "2017-09-29 09:14:29"
      },
      {
        "time_stamp": "2017-09-29 09:15:05"
      },
      {
        "time_stamp": "2017-09-29 09:46:26"
      },
      {
        "time_stamp": "2017-09-29 09:47:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-09-29 08:59:06",
    "text": "Fair point - but if it's not hard-wired into the software / application then it's what... EULA on your template download?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:00:50",
    "text": "There will always be ways around it. Would be nice is HubSpot had a server that would handle a callback, similar to the way you can make that work with wordpress plugins... I'm not saying DRM is a bad thing.  Either way there are always ways around it!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-09-29 09:02:11",
    "text": "So has anything been said about the possibility of supporting a user login system on HubSpot? (i know its a longshot but I'm hoping)",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2017-09-29 09:02:44"
      },
      {
        "time_stamp": "2017-09-29 09:14:27"
      },
      {
        "time_stamp": "2017-09-29 09:19:39"
      },
      {
        "time_stamp": "2017-09-29 09:29:06"
      },
      {
        "time_stamp": "2017-09-29 09:46:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2017-09-29 09:02:44",
    "text": "not yet"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-09-29 09:08:50",
    "text": "HubSpot could prevent purchased modules form being migrated like other template peices"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2017-09-29 09:13:31",
    "text": "I'm working on getting some slides posted in here... but much of it was in-app"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2017-09-29 09:14:27",
    "text": "I've seen work arounds using Social Sign-in. But nothing official launched"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:14:29",
    "text": "A few days ago, I wasn't able to clone a custom module. Some of these had 10 items. I ended up having to copypasta the code and add the elements. Didn't take me that long at all. I think to the average person that is enough of a setback, but I don't see it as prevention in the grand scheme of things.  \n\nJust like gun laws, people find a way to get guns. IF they want to do this, then they will.\n\nHubSpot could always do code compares with everything, but it isn't like code is patented."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:15:05",
    "text": "Just devils advocate here. I think it would be nice to have some sort of protection. Just pointing out some items that I thought of...."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:15:24",
    "text": "no problem, I love it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:15:46",
    "text": "is there a specific channel for dev day, or are you guys just using this?"
  },
  {
    "poster": {
      "poster_name": "Robert Calise",
      "poster_handle": "rc"
    },
    "time_stamp": "2017-09-29 09:16:04",
    "text": "<#C7AS10K28|>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:18:18",
    "text": "thanks <@U7AS9142X>"
  },
  {
    "poster": {
      "poster_name": "Robert Calise",
      "poster_handle": "rc"
    },
    "time_stamp": "2017-09-29 09:18:26",
    "text": "no prob!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-09-29 09:19:39",
    "text": "Do you have examples of this Luke? Or is it a service for social sign in they were using?"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:19:50",
    "text": "Hey everyone - I'm having a problem with access tokens and wonder if someone can give me a hand. I'm calling <https://api.hubapi.com/oauth/v1/token> with my OAuth code - it's returning the tokens in the JSON, but It's not going to the success function in AJAX, but the error. It's giving me this error (though nothing seems to be wrong with the json): SyntaxError: JSON.parse: unexpected character at line 1 column 2 of the JSON data"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:20:39",
    "text": "can you paste the json data in here?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:20:56",
    "text": "and your script?"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:21:11",
    "text": "sure, one sec"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:21:48",
    "text": "json data: {\"refresh_token\":\"xxxxx\",\"access_token\":\"xxxx\",\"expires_in\":21600}"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:22:28",
    "text": "script..."
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:22:30",
    "text": "$.ajax({\n            method: \"POST\",\n            url: ajaxURL,\n            dataType: \"json\",\n            beforeSend: function(request) {\n                request.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded;carset=utf-8\");\n            },\n            success: function(data) {\n                var result = $.parseJSON(data);\n                console.log(result);\n                $(\"#spnAccessToken\").html(result.access_token);\n                $(\"#spnRefreshToken\").html(result.refresh_token);\n            },\n            error: function(data) {\n                var err = $.parseJSON(data);\n                console.log(err);\n                $(\"#dvError\").removeClass(\"no-display\");\n                $(\"#dvError\").html(\"&lt;strong&gt;Error:&lt;/strong&gt; \" + err.error + \"&lt;br/&gt;\" + err.error_description);\n            }\n        });"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:26:24",
    "text": "is it because you have carset isntead of charset"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:26:32",
    "text": "pretty sure it defaults to utf-8, so you can remove that"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:26:41",
    "text": "oh boy, good catch"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:26:45",
    "text": "didn't even see that"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:27:01",
    "text": "thanks very much"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:27:07",
    "text": "was the json data the var err"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:27:08",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:27:25",
    "text": "or err..error_des"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 09:28:31",
    "text": "no, actuall - the json data was what I posted above (with actual values, not the xxx, of course)"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:28:49",
    "text": "right"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:28:54",
    "text": "did thathelp you at all?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:29:05",
    "text": "I knowevery time I get into oauth I cringe and hate it"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2017-09-29 09:29:06",
    "text": "My friends at <http://InboundLabs.co|InboundLabs.co> are working on it: <https://w.inboundlabs.co/booya>"
  },
  {
    "subtype": "pinned_item",
    "text": "<@U22PKFRU5> pinned a message to this channel.",
    "time_stamp": "2017-09-29 09:30:10"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-09-29 09:46:25",
    "text": "this is awsome, thanks Luke! <@U38EZFVFE> see above"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-09-29 09:46:26",
    "text": "I agree <@U25PYL3Q8> that the copypasta-ing of someone else's code would deter most people"
  },
  {
    "poster": {
      "poster_name": "Chris Conant",
      "poster_handle": "conant_chris"
    },
    "time_stamp": "2017-09-29 09:46:28",
    "text": "Hereâ€™s a link to my deck if anyone wants to take a look <http://bit.ly/2woUb4h|bit.ly/2woUb4h>"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-09-29 09:47:23",
    "text": "<@U38EZFVFE> this I think is the most sensible, because if they have to copy / paste and re-integrate files, references, libraries (potentially), etc... it becomes a real pain"
  },
  {
    "text": "<@U25PYL3Q8> uploaded a file: <https://HubSpotdev.slack.com/files/U25PYL3Q8/F7AV0LFUK/pasted_image_at_2017_09_29_11_47_am.png|lol>",
    "time_stamp": "2017-09-29 09:47:23"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 09:47:38",
    "text": "thanks for sharing, good stuff in here"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-09-29 10:00:42",
    "text": "Yepâ€¦ the new editor looks amazeballs!"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2017-09-29 10:01:11",
    "text": "chad are you here?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-09-29 10:02:53",
    "text": "Nope I just got done looking at the slide deck. But I was able to see the designs for it 6 months ago as user testing for it."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-09-29 10:03:06",
    "text": "They were just looking for feedback on it."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-09-29 10:03:29",
    "text": "But i am excited. any word on when it will be available?"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:34:21",
    "text": "<@U25PYL3Q8> I just got back from lunch. When I tried it with the corrected charset it still came back with the same error"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-09-29 10:36:10",
    "text": "Oh god yes, I requested the ability to loop in custom modules years ago"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:36:11",
    "text": "are you able to share the actual page?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-09-29 10:36:23",
    "text": "Hooray"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:36:26",
    "text": "it's just local, unfortunately"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:36:45",
    "text": "The rest of the function for calling it though, is like so..."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:37:21",
    "text": "have you ever used postman? I use that sometimes to get that stuff figured out"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:37:39",
    "text": "var ajaxURL = \"<https://api.hubapi.com/oauth/v1/token?>\";\n        var dataObj = {\n            grant_type: \"authorization_code\",\n            client_id: \"xxxxx\",\n            client_secret: \"xxx\",\n            redirect_uri: redirect,\n            code: oacode\n        }\n        ajaxURL += $.param(dataObj);"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:37:47",
    "text": "sorry, missed one line..."
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:37:48",
    "text": "var redirect = \"<https://HubSpot.local.aiag.org/index.html>\";"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:40:25",
    "text": "you try surrouding your json with []"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:40:26",
    "text": "[{\n\t\"refresh_token\": \"xxxxx\",\n\t\"access_token\": \"xxxx\",\n\t\"expires_in\": 21600\n}]"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:40:39",
    "text": "maybe another set of quotes or something?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:40:53",
    "text": "unexpected character at line 1 column 2 of the JSON data"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:41:06",
    "text": "so it has to be first line, 2nd char"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:41:07",
    "text": "it's not json - it's just an object - the call is urlencoded so it just gets appended to the URL"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:41:14",
    "text": "ew"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:41:34",
    "text": "you try hardcoding it?"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:41:40",
    "text": "the json error, I believe is the json coming back, since I am not posting any json"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:41:47",
    "text": "I'm just throwing shit at the wall at this moment"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:41:48",
    "text": "oh"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:41:49",
    "text": "okay"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:43:40",
    "text": "that's the strange thing - when I look at the data payload that comes back, it looks correct - I get the access token and refresh token - the problem is my ajax function is throwing an error, so I'm not able to display the tokens on the page like I want it to"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:46:30",
    "text": "well, hacky, but to move forward can you modify the error to check for some things, then do the success"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:46:43",
    "text": "like.. make sure everythign you get back is right in an inf statement"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:46:54",
    "text": "then finish out what you need to do?"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:47:00",
    "text": "so, the error is happening when it hits the parseJSON function in the error section. So I commented that out and only had console.log(data) in the error section"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:47:15",
    "text": "and this is what it gives me: Retrying. Retry attempt 1 of 1. Reason: Server error"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:47:41",
    "text": "it's so strange, though, because when I look at the network tab in dev tools it shows me a response that is the correct data"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:47:52",
    "text": "hmm"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:50:18",
    "text": "ok, I tried it again, and this is the whole console response..."
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:50:53",
    "text": "Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at <https://api.hubapi.com/oauth/v1/token?grant_type=authorization_code&amp;client_id=xxxx&amp;client_secret=xxxx&amp;redirect_uri=https%3A%2F%2FHubSpot.local.aiag.org%2Findex.html&amp;code=xxxx> (Reason: CORS header â€˜Access-Control-Allow-Originâ€™ missing).\nObject { readyState: 0, getResponseHeader: getResponseHeader(), getAllResponseHeaders: getAllResponseHeaders(), setRequestHeader: setRequestHeader(), overrideMimeType: overrideMimeType(), statusCode: statusCode(), abort: abort(), state: state(), always: always(), catch: catch(), â€¦ }"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:51:20",
    "text": "$.ajaxPrefilter( function( options, originalOptions, jqXHR ) {\n    options.crossDomain = {\n        crossDomain: true\n    };\n    options.xhrFields = {\n        withCredentials: true\n    };\n});"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:51:22",
    "text": "The first line is one error and the second one is the output of the console.log(data) in the error section of the ajax call"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:51:34",
    "text": "thats how I did my prefilter"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:51:40",
    "text": "var login_check = $.ajax(\n    {\n        url: base_url + \"/go/api/user.json\",\n        dataType: 'json',\n    }\n);\n\nlogin_check.success(function(data) {\n    $('.user-name-wrapper').text(data.email)\n    $('#login').hide();\n    $('#start-drawing').removeClass('hidden').show();\n    \n});\n\nlogin_check.fail(function(data, textStatus, errorThrown) {\n    var status_code = JSON.parse(data.status);\n});"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:51:44",
    "text": "my last ajax stuff i wrote"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:52:04",
    "text": "it seems like the page you are posting to is having a CORS problem"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 10:52:12",
    "text": "so you may need to edit that on teh server level"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:56:10",
    "text": "problem is that page is at HubSpot"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:56:19",
    "text": "though, I wonder - maybe it's on the return"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:56:22",
    "text": "I will check that"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 10:57:02",
    "text": "no, I have access-control-allow-origin set to * on my local box"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 11:01:26",
    "text": "something strange though - I am trying to do what this page says here: <https://developers.HubSpot.com/docs/methods/oauth2/get-access-and-refresh-tokens>"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 11:02:01",
    "text": "The odd thing is that it's having me send the data in the URL, but the method is \"POST\" - but there isn't anything to post to it, since it's all in the URL"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 11:07:47",
    "text": "I have an entire setup with oauth somewhere. I'll see what I can find"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 11:11:47",
    "text": "thank you"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 11:15:05",
    "text": "I did my entire project in php"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 11:16:23",
    "text": "I think I tried doing it locally and I was having problems. That caused me to spin up a small server with https on it."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 11:16:35",
    "text": "that wya I didn't have any problem with the https curl issue"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 11:19:27",
    "text": "<@U762JCP8Q> <https://developers.HubSpot.com/docs/faq/do-HubSpot-apis-support-ajax-request>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 11:19:55",
    "text": "Thats the problem I had there"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 11:20:21",
    "text": "I do have https set up on my local box - but I will check out this article"
  },
  {
    "poster": {
      "poster_name": "Carlton Smith",
      "poster_handle": "csmith"
    },
    "time_stamp": "2017-09-29 11:22:01",
    "text": "ok, this is odd. i've never seen an api that doesn't take ajax requests. I will have to look into what curl is. I don't know anything about it."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-09-29 11:25:28",
    "text": "there are some other methods to use than curl for php, but that is the one i'm most familiar with"
  },
  {
    "poster": {
      "poster_name": "Max",
      "poster_handle": "max"
    },
    "time_stamp": "2017-09-29 20:48:50",
    "text": "thanks for dev day today. My brain was fried after inbound, but I'm glad I came"
  }
]
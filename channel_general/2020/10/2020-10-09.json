[
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-10-09 12:24:28",
    "text": "so i know {{ name }} will print the current module's ID in this format... \"widget_1602253489469\""
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-10-09 12:24:43",
    "text": "but is there anyway to print the modules actual name or label?"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-10-09 12:24:55",
    "text": "trying to dynamically set wrapper classes for CSS is my use case"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-09 12:28:06",
    "text": "Module.name",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-09 12:33:41"
      },
      {
        "time_stamp": "2020-10-09 12:33:43"
      },
      {
        "time_stamp": "2020-10-09 12:33:52"
      },
      {
        "time_stamp": "2020-10-09 12:33:59"
      },
      {
        "time_stamp": "2020-10-09 12:35:16"
      },
      {
        "time_stamp": "2020-10-09 12:35:19"
      },
      {
        "time_stamp": "2020-10-09 12:36:20"
      },
      {
        "time_stamp": "2020-10-09 12:36:47"
      },
      {
        "time_stamp": "2020-10-12 07:42:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-10-09 12:33:41",
    "text": "Hmmmm not working for me..."
  },
  {
    "text": "",
    "time_stamp": "2020-10-09 12:33:43"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-10-09 12:33:52",
    "text": "tried it with and without the capital M"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-09 12:33:59",
    "text": "Pprint module"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-10-09 12:35:16",
    "text": "its got all the field values but not the name of the module itself :disappointed:"
  },
  {
    "text": "",
    "time_stamp": "2020-10-09 12:35:19"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-09 12:36:20",
    "text": "Hmm"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2020-10-09 12:36:47",
    "text": "all good it was a nice to have to take one step out of our workflow"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 13:46:37",
    "text": "Can I use \"axios\" (or similar) to make HubSpot API requests? (specifically for a custom event)",
    "reply_count": 33,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-09 14:10:32"
      },
      {
        "time_stamp": "2020-10-09 14:15:36"
      },
      {
        "time_stamp": "2020-10-09 15:14:37"
      },
      {
        "time_stamp": "2020-10-09 15:16:41"
      },
      {
        "time_stamp": "2020-10-09 15:16:54"
      },
      {
        "time_stamp": "2020-10-09 15:17:08"
      },
      {
        "time_stamp": "2020-10-09 15:17:37"
      },
      {
        "time_stamp": "2020-10-09 15:18:33"
      },
      {
        "time_stamp": "2020-10-09 15:21:51"
      },
      {
        "time_stamp": "2020-10-09 15:23:24"
      },
      {
        "time_stamp": "2020-10-09 15:24:01"
      },
      {
        "time_stamp": "2020-10-09 15:24:19"
      },
      {
        "time_stamp": "2020-10-09 15:27:53"
      },
      {
        "time_stamp": "2020-10-09 15:28:32"
      },
      {
        "time_stamp": "2020-10-09 15:28:55"
      },
      {
        "time_stamp": "2020-10-09 15:29:16"
      },
      {
        "time_stamp": "2020-10-09 15:30:52"
      },
      {
        "time_stamp": "2020-10-09 15:33:01"
      },
      {
        "time_stamp": "2020-10-09 15:34:20"
      },
      {
        "time_stamp": "2020-10-09 15:36:26"
      },
      {
        "time_stamp": "2020-10-09 15:36:30"
      },
      {
        "time_stamp": "2020-10-09 15:37:06"
      },
      {
        "time_stamp": "2020-10-09 15:37:12"
      },
      {
        "time_stamp": "2020-10-09 15:58:55"
      },
      {
        "time_stamp": "2020-10-09 16:19:36"
      },
      {
        "time_stamp": "2020-10-09 16:20:26"
      },
      {
        "time_stamp": "2020-10-09 16:20:47"
      },
      {
        "time_stamp": "2020-10-12 06:35:21"
      },
      {
        "time_stamp": "2020-10-12 06:44:43"
      },
      {
        "time_stamp": "2020-10-12 06:46:05"
      },
      {
        "time_stamp": "2020-10-12 06:46:22"
      },
      {
        "time_stamp": "2020-10-12 06:55:59"
      },
      {
        "time_stamp": "2020-10-12 07:01:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 13:46:39",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-09 14:10:32",
    "text": "yes.\n\nDo note which APIs require authentication though and make any calls that require it using serverless functions to keep the account secure"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 14:15:36",
    "text": "<@U7SL518D6> thank you, I'll delete my other messages to avoid clutter."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:14:37",
    "text": "<@U7SL518D6> what do I set as the request URL? is it based off of my domain? is it <http://track>...?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-09 15:16:41",
    "text": "Which API are you trying to use a serverless function or one of our APIs directly?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:16:54",
    "text": "one of the APIS directly, this one (one sec)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:17:08",
    "text": "<http://track.HubSpot.com/v1/event>?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:17:37",
    "text": "`axios.get('<http://track.HubSpot.com/v1/event?_a=my_portal_id&amp;_n=000009432684>')`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:18:33",
    "text": "I'm getting a CORS error"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-09 15:21:51",
    "text": "I’m a little bit confused because it appears you’re trying to use the events tracking code.\nThis is how you’d do that: <https://developers.HubSpot.com/docs/api/events/tracking-code>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:23:24",
    "text": "Can I trigger this part:\n``` _hsq.push([\"trackEvent\", {\n        id: \"Clicked Buy Now button\",\n        value: 20.5\n    }]);```\nwithout adding it to the tracking code itself (like it seems to do if I insert custom JS when making the event)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:24:01",
    "text": "it didn't seem to work when I tried"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:24:19",
    "text": "is what I was trying to do in axios not possible?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-09 15:27:53",
    "edited": {
      "time_stamp": "2020-10-09 15:28:10"
    },
    "text": "Regarding pushing events, yes you can pass events it after the script is already set up.\n\nThe example you copied is part of a script where all it’s doing is when the user clicks a button with the id of buy now it pushes that event. It’s not attached to the tracking code script at all"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:28:32",
    "text": "I want to do this:\n```widget.bind(SC.Widget.Events.READY, function () {\n    widget.bind(SC.Widget.Events.PLAY, function () {\n      // get information about currently playing sound\n      widget.getCurrentSound(function (currentSound) {\n        console.log('began to play');\n        _hsq.push([\"trackEvent\", {\n          id: \"000009432684\",\n          value: 0\n        }]);\n      });\n    });\n  });```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:28:55",
    "text": "that widget is a soundcloud widget, and I need to record when it's played"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:29:16",
    "text": "do I just not use the `id` generated by the behavior event setup?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-09 15:30:52",
    "text": "The id is your event id, the value is the value of that event.\n\nSo in your situation id might look like `\"played soundcloud\"`\nand value might be `true`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:33:01",
    "text": "ok, let me try, I though the id was the one generated while creating the event in behavior events"
  },
  {
    "text": "based on this",
    "time_stamp": "2020-10-09 15:34:20"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:36:26",
    "text": "actually, without pre-creating the event there's no \"activity log\""
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:36:30",
    "text": "so I'm not sure how to test"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:37:06",
    "text": "this is my setup now\n```\n  widget.bind(SC.Widget.Events.READY, function () {\n    widget.bind(SC.Widget.Events.PLAY, function () {\n      // get information about currently playing sound\n      widget.getCurrentSound(function (currentSound) {\n        console.log('began to play');\n        _hsq.push([\"trackEvent\", {\n          id: \"played soundcloud\",\n          value: true\n        }]);\n      });\n    });\n  });```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 15:37:12",
    "text": "wait 24 hours to test?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-09 15:58:55",
    "text": "sorry I wasn’t clear, yes that id should work. The events may not show in the reports right away."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 16:19:36",
    "text": "ok, if that id should work then I might have a problem but I'll wait and see if anything starts showing up by tomorrow"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 16:20:26",
    "text": "and just to recap, axios would not have worked because of cross origin issues"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-10-09 16:20:47",
    "text": "and the endpoint URL would have been <https://track.HubSpot.com/event>?"
  }
]
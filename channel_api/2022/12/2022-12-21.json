[
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 03:49:12",
    "text": "Hi there! Is there anyone that has an example where they call an external API by using the ‘Custom Code’ block in workflows? How do you setup the return for this?"
  },
  {
    "poster": {
      "poster_name": "Arian Juwig",
      "poster_handle": "arian.juwig"
    },
    "time_stamp": "2022-12-21 04:05:30",
    "text": "Hi, we were using this Ecommerce deal property \"ip__ecomm_bridge__source_store_id\" but every time I want to create or update the property on the object, I get a readonly/validaiton error. Any ideas why I cant set it anymore? Thx",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-12-21 04:36:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matías Rebolledo",
      "poster_handle": "matiasrebolledod"
    },
    "time_stamp": "2022-12-21 04:31:49",
    "text": "Hi! how can I get a company id from a deal, using the search endpoint for deal? I'm trying to get some info from deal to created a table, but also y need the company id to link it to my company table. I'm looking in properties and there is none.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-12-21 05:29:37"
      },
      {
        "time_stamp": "2022-12-21 05:36:22"
      },
      {
        "time_stamp": "2022-12-21 05:42:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Arian Juwig",
      "poster_handle": "arian.juwig"
    },
    "time_stamp": "2022-12-21 04:36:38",
    "text": "I got it, its deprecated and I need to create a new property that does the same. Sad for the statistics/boards but I think that I have no choice"
  },
  {
    "text": "Hi there!\nI’m trying to submit a form using the API. I have a date field in it, but for some reason I can’t populate it via my request. The form submission gets created correctly (no errors returned), but I can’t see that specific property populated (other properties, such as firstname and other customs are ok). It is set as `date` and I’m passing an ISO formatted date (see picture).\nThanks in advance :+1:",
    "time_stamp": "2022-12-21 05:08:37",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-12-21 05:14:18"
      },
      {
        "time_stamp": "2022-12-21 05:30:55"
      },
      {
        "time_stamp": "2022-12-21 05:32:13"
      },
      {
        "time_stamp": "2022-12-21 06:06:33"
      },
      {
        "time_stamp": "2022-12-21 06:07:50"
      },
      {
        "time_stamp": "2022-12-21 06:08:19"
      },
      {
        "time_stamp": "2022-12-21 06:17:57"
      },
      {
        "time_stamp": "2022-12-21 06:20:42"
      },
      {
        "time_stamp": "2022-12-21 06:22:18"
      },
      {
        "time_stamp": "2022-12-21 06:37:50"
      },
      {
        "time_stamp": "2022-12-21 06:38:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 05:14:18",
    "text": "Did you try sending a Unix timestamp? This is how HubSpot saves date fields"
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 05:29:37",
    "edited": {
      "time_stamp": "2022-12-21 05:29:49"
    },
    "text": "Use the get associations call from this page\n```<https://developers.HubSpot.com/docs/api/crm/deals>```"
  },
  {
    "poster": {
      "poster_name": "Axel Ruiz",
      "poster_handle": "axel.ruiz"
    },
    "time_stamp": "2022-12-21 05:30:55",
    "text": "I tried: unix timestamp, ISO and dd/MM/yyyy format, all with the same result"
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 05:32:13",
    "text": "OH, that’s a shame. I thought it might have something to do with that. Have you tried if this happen for all date fields?"
  },
  {
    "poster": {
      "poster_name": "Matías Rebolledo",
      "poster_handle": "matiasrebolledod"
    },
    "time_stamp": "2022-12-21 05:36:22",
    "text": "thanks! but in this way I need to make another call from another endpoint, there is no chance yo get it form the same endpoint? as in the older version of the API"
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 05:42:10",
    "text": "Ah, right. I don’t know another way. Apologies"
  },
  {
    "poster": {
      "poster_name": "Axel Ruiz",
      "poster_handle": "axel.ruiz"
    },
    "time_stamp": "2022-12-21 06:06:33",
    "text": "it works with the standard field `date_of_birth`, so it might have something to do with the custom field itself"
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 06:07:50",
    "text": "Okay, that’s a good discovery! Are you sure you are using the correct label and the custom field (property) is a contact property?"
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 06:08:19",
    "edited": {
      "time_stamp": "2022-12-21 06:09:02"
    },
    "text": "Also, is the checkbox ‘Show in forms, pop-up forms, and bots’ checked for the custom property?"
  },
  {
    "poster": {
      "poster_name": "Axel Ruiz",
      "poster_handle": "axel.ruiz"
    },
    "time_stamp": "2022-12-21 06:17:57",
    "text": "I verified the property internal name is correct. The checkbox is already checked"
  },
  {
    "text": "Ah btw, the field in the form is hidden and not required, not sure if that matters",
    "time_stamp": "2022-12-21 06:20:42"
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 06:22:18",
    "edited": {
      "time_stamp": "2022-12-21 06:22:50"
    },
    "text": "I’d say, make it required and see what error you get. Then debug it that way"
  },
  {
    "poster": {
      "poster_name": "Axel Ruiz",
      "poster_handle": "axel.ruiz"
    },
    "time_stamp": "2022-12-21 06:37:50",
    "text": "Good news: it works! Since it is a date picker field, I have to pass a string formatted as `dd/MM/yyyy`. I thought I tried, but apparently something didn’t work as expected last time\nThanks for the help <@U033JRJHUVC> :pray:"
  },
  {
    "poster": {
      "poster_name": "Stan Zeehandelaar",
      "poster_handle": "stan225"
    },
    "time_stamp": "2022-12-21 06:38:31",
    "text": "Great news! Good work <@U0482P34BPX>! Glad I could be of help"
  },
  {
    "poster": {
      "poster_name": "Kelsey Ingram",
      "poster_handle": "kelsey"
    },
    "time_stamp": "2022-12-21 07:07:50",
    "text": "Hello! We're using the HubSpot &lt;&gt; Salesforce integration with Marketing Hub Enterprise. Unfortunately, the custom object sync is only one way from SF &gt; HS, putting a real damper on any business process that needs to update data on the HubSpot side and push to SF. Has anyone built a workaround for this? I'm guessing you could use Operations Hub webhooks, but kind of hate to build a custom solution around that when it really should be natively supported"
  },
  {
    "poster": {
      "poster_name": "Kamran Hussain",
      "poster_handle": "kamran"
    },
    "time_stamp": "2022-12-21 09:15:56",
    "text": "Hi,\n\nI'm currently using the endpoint below\n\n`<https://api.hubapi.com/crm/v3/owners>`\n\nHowever I'm trying to filter through a specific date based on the `createdat` field.\n\nCurrently the payload looks like the following\n\n```payload =  {\"filters\": [{\"propertyName\": \"createdat\",\"operator\": \"BETWEEN\",\"highValue\": calendar.timegm(end_date.timetuple())*1000,\"value\": calendar.timegm(start_date.timetuple())*1000}],\"properties\": [\"id\", \"email\", \"firstName\",\"lastName\",\"userId\",\"createdAt\",\"updatedAt\",\"archived\"],\"limit\": 100}```\nAny guidance would be much appreciated."
  },
  {
    "poster": {
      "poster_name": "Graham McNicoll",
      "poster_handle": "graham583"
    },
    "time_stamp": "2022-12-21 10:07:30",
    "text": "Hi! I feel like I’m going a bit crazy- the v3 search documentation only mention the return values, and don’t mention at all how to actually search - like what parameters can be search on, and how to construct the search object. Plus the docs only mention how to searching using the URL, instead of using the npm modules. Does anyone have examples of using the API for searching (particularly companies) using the NPM module?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-12-21 12:46:00"
      },
      {
        "time_stamp": "2022-12-21 12:48:03"
      },
      {
        "time_stamp": "2022-12-21 22:01:09"
      },
      {
        "time_stamp": "2022-12-21 22:09:12"
      },
      {
        "time_stamp": "2022-12-22 10:41:36"
      },
      {
        "time_stamp": "2022-12-22 10:43:03"
      }
    ]
  },
  {
    "text": "<@U039FTRBQ93> Thanks, I can see it in @.&lt;ourhostname&gt; using my cmd. Is this the right way to keep it in dns records? Or are we making some mistake with @?",
    "time_stamp": "2022-12-21 11:37:14",
    "edited": {
      "time_stamp": "2022-12-21 11:45:20"
    }
  },
  {
    "poster": {
      "poster_name": "Piotr Szulc",
      "poster_handle": "piotr.szulc"
    },
    "time_stamp": "2022-12-21 12:02:40",
    "text": "Hey Alejandro, if you are looking for official support it might be a better option to contact HS Support inside the app.\nIf you like please post your API call and we will try to help you."
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-12-21 12:43:30",
    "text": "Did you solve this or has anybody else run into this?  I'm also having the same issue where every call I make says `Invalid JSON for options input` even when I copy the string used in the docs."
  },
  {
    "poster": {
      "poster_name": "Mike Knowles",
      "poster_handle": "mike.knowles"
    },
    "time_stamp": "2022-12-21 12:46:00",
    "text": "I'm not familiar with the NPM module but you can search on any property that the object you're trying to search has."
  },
  {
    "poster": {
      "poster_name": "Mike Knowles",
      "poster_handle": "mike.knowles"
    },
    "time_stamp": "2022-12-21 12:48:03",
    "text": "Here's the example from the Contacts search <https://developers.HubSpot.com/docs/api/crm/contacts|docu>:\n\n```// Starting November 30, 2022, API keys will be sunset as an authentication method. Learn more about this change: <https://developers.HubSpot.com/changelog/upcoming-api-key-sunset> and how to migrate an API key integration: <https://developers.HubSpot.com/docs/api/migrate-an-api-key-integration-to-a-private-app> to use a private app instead.\nconst HubSpot = require('@HubSpot/api-client');\n\nconst HubSpotClient = new HubSpot.Client({\"accessToken\":\"YOUR_ACCESS_TOKEN\"});\n\nconst PublicObjectSearchRequest = { filterGroups: [{\"filters\":[{\"value\":\"string\",\"values\":[\"string\"],\"propertyName\":\"string\",\"operator\":\"EQ\"}]}], sorts: [\"string\"], query: \"string\", properties: [\"string\"], limit: 0, after: 0 };\n\ntry {\n  const apiResponse = await HubSpotClient.crm.contacts.searchApi.doSearch(PublicObjectSearchRequest);\n  console.log(JSON.stringify(apiResponse.body, null, 2));\n} catch (e) {\n  e.message === 'HTTP request failed'\n    ? console.error(JSON.stringify(e.response, null, 2))\n    : console.error(e)\n}```\nSo `propertyName` is the property to search, `operator` is the condition, and `value` is what you're searching for."
  },
  {
    "poster": {
      "poster_name": "Mike Knowles",
      "poster_handle": "mike.knowles"
    },
    "time_stamp": "2022-12-21 13:47:49",
    "text": "I figured it out; the provided example in the documentation <https://developers.HubSpot.com/docs/api/files/files|here> is wrong. It shows the JSON wrapped in an `options` field and then encloses the rest of it in quotes for some reason. The solution is to remove the `options` and the enclosing quotes.\nBEFORE\n`\"options\": \"{`\n  `\"access\":  \"PRIVATE\",`\n `\"ttl\": \"P2W\",`\n `\"overwrite\": false,`\n `\"duplicateValidationStrategy\": \"NONE\",`\n `\"duplicateValidationScope\": \"EXACT_FOLDER\"`\n`}\"`\n`AFTER`\n`{`\n  `\"access\": \"PRIVATE\",`\n  `\"duplicateValidationStrategy\": \"NONE\"`\n`}`"
  },
  {
    "poster": {
      "poster_name": "Mike Knowles",
      "poster_handle": "mike.knowles"
    },
    "time_stamp": "2022-12-21 14:58:28",
    "edited": {
      "time_stamp": "2022-12-21 16:30:50"
    },
    "text": "Anybody know the recommended way to attach files to a ticket?\nFrom the <https://developers.HubSpot.com/docs/api/files/files|documentation>, it looks like we need to use the Engagements API to attach them?\n```can also be attached to records using the engagements API```\nSeems a bit roundabout as far as I can tell:\n• Create ticket\n• Upload file\n• Create note with the file ID listed in the attachment IDs\n• Associate the note with the ticket\n~One major issue with this is the note seems to require an Owner which doesn't exist for my use case, so I'll have to create some dummy owner to use here.~",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-12-21 15:09:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mike Knowles",
      "poster_handle": "mike.knowles"
    },
    "time_stamp": "2022-12-21 15:09:47",
    "text": "I found a `hs_file_upload` field on the ticket that I was able to write to but doesn't seem like putting a file ID here lets it show as an attachment on the ticket."
  },
  {
    "poster": {
      "poster_name": "Federico Keller",
      "poster_handle": "federico.keller"
    },
    "time_stamp": "2022-12-21 19:41:19",
    "text": "Hello there! Hope you are doing well. Currently I am using this endpoint <https://api.hubapi.com/contacts/v1/lists?offset=${offset}&amp;count=${count}> in order to get the lists from HubSpot, and that works wonderful. However, I need the quantity of available lists so I can paginate them. Is there a way to get this data? Thanks in advance!",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-12-21 19:52:26"
      },
      {
        "time_stamp": "2022-12-21 19:59:25"
      },
      {
        "time_stamp": "2022-12-21 20:06:36"
      },
      {
        "time_stamp": "2022-12-21 20:13:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mike Knowles",
      "poster_handle": "mike.knowles"
    },
    "time_stamp": "2022-12-21 19:52:26",
    "text": "you paginate until the `has-more` bool is `false`"
  },
  {
    "poster": {
      "poster_name": "Federico Keller",
      "poster_handle": "federico.keller"
    },
    "time_stamp": "2022-12-21 19:59:25",
    "text": "yeah, I had it into consideration, but isn't there a way to get the quantity of lists without having to iterate them? You see, i'm currently using this: <https://material.angular.io/components/paginator/overview> and it'd be ideal to get that data so I can show it from the start."
  },
  {
    "poster": {
      "poster_name": "Mike Knowles",
      "poster_handle": "mike.knowles"
    },
    "time_stamp": "2022-12-21 20:06:36",
    "text": "Ah, not that I've seen. You might need to pre-pull and cache it then.  Maybe in v3 they'll have that."
  },
  {
    "poster": {
      "poster_name": "Federico Keller",
      "poster_handle": "federico.keller"
    },
    "time_stamp": "2022-12-21 20:13:10",
    "text": "oh alright, i'll go for what you suggested then. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Graham McNicoll",
      "poster_handle": "graham583"
    },
    "time_stamp": "2022-12-21 22:01:09",
    "text": "okay, thanks - though the docs don’t seem to list what the search name space is, like what the namespace is for the property names.\n\nThere are no documentation saying what is returned from the API, so for future reference for anyone else, its an object that looks like this:\n```{\n  \"total\":10, \n  \"results\":[\n    {\n      \"id\":\"1234567\",\n      \"properties\": { ... },\n      \"createdAt\": \"2022-12-22T04:52:47.151Z\",\n  \"updatedAt\": \"2022-12-22T04:52:47.151Z\",\n  \"archived\": false,\n    }, \n    {...}\n  ]\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Graham McNicoll",
      "poster_handle": "graham583"
    },
    "time_stamp": "2022-12-21 22:09:12",
    "text": "Also, limit seems to be entirely ignored"
  },
  {
    "poster": {
      "poster_name": "Sergio Ponz [Tiralíneas]",
      "poster_handle": "sergio639"
    },
    "time_stamp": "2022-12-21 23:48:33",
    "text": "<@U04FJ79G6AF> we generally don't put the '@' if it's for domain verification, here's how we have it for our main domain"
  },
  {
    "text": "",
    "time_stamp": "2022-12-22 00:35:01"
  }
]
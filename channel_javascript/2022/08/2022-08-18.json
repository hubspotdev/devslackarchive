[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-08-18 03:52:47",
    "text": "You’ll need to run the JS once the form is loaded onto the page\n\nI feel like they need this in a more prominent position in the docs\n\n<https://legacydocs.HubSpot.com/global-form-events>\n\n```window.addEventListener('message', event =&gt; {\n   if(event.data.type === 'hsFormCallback' &amp;&amp; event.data.eventName === 'onFormReady') {\n       console.log(\"Form Loaded into DOM can now interact with it using JS\");\n   }\n});```\n"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-18 05:20:24",
    "text": "You would need to wrap your hubl variable in quotes like\n\nvar tag = “{{ your.variable}}”"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-18 05:25:28",
    "text": "I'm on mobile so I'm not going to get into using var <https://codeburst.io/javascript-var-let-or-const-which-one-should-you-use-2fd521b050fa|https://codeburst.io/javascript-var-let-or-const-which-one-should-you-use-2fd521b050fa>\n\nI'd also suggest that you could use hubl to filter your hubl variable and not need any JavaScript in your module.  <https://developers.HubSpot.com/docs/cms/hubl/filters|https://developers.HubSpot.com/docs/cms/hubl/filters>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-18 05:29:42",
    "text": "What matt says is correct! If you are loading te form inside an iframe, this won't work. I don't remember why it loads in iframes, but I figured I would mention it if the above doesn't work\n\n\nAlso if you are changing the style of the button you might only need css"
  },
  {
    "poster": {
      "poster_name": "Filipe Rosa",
      "poster_handle": "filipe449"
    },
    "time_stamp": "2022-08-18 07:30:41",
    "text": "<@U25PYL3Q8> Thank you so much!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-18 07:54:50",
    "text": "Thank you "
  },
  {
    "poster": {
      "poster_name": "Gunnar Normand",
      "poster_handle": "gunnarnormand"
    },
    "time_stamp": "2022-08-18 09:35:21",
    "edited": {
      "time_stamp": "2022-08-18 09:35:59"
    },
    "text": "Wow yeah I definitely missed this! I really appreciate the help guys, thanks <@UDJV5B73R>!"
  },
  {
    "poster": {
      "poster_name": "Gunnar Normand",
      "poster_handle": "gunnarnormand"
    },
    "time_stamp": "2022-08-18 09:38:14",
    "edited": {
      "time_stamp": "2022-08-18 09:45:34"
    },
    "text": "<@U25PYL3Q8> thanks for the feedback! Yes the styling can be accomplished with hiding the input and styling the label with css but it loses the functionality of showing which files have been uploaded or if no file is selected. For that you need JS."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-18 09:46:08",
    "text": "Oh yup! Perfect then"
  }
]
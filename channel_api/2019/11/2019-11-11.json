[
  {
    "poster": {
      "poster_name": "Maret Reutelingsperger",
      "poster_handle": "maret"
    },
    "time_stamp": "2019-11-11 09:03:52",
    "edited": {
      "time_stamp": "2019-11-11 09:03:58"
    },
    "text": "Hi guys,\n\nI need some help as a proper API/script n00b. Basically, I'm trying to create an \"Age\" property for my client. I've tried calculating Current Year - Birth year, but that doesn't work, because most people's birthday is not on 1 January.\n\nMy next idea is, I've found a script that would calculate Age based on date of birth (in Python), but how would make it work with HubSpot, ie: when date of birth is known, calculate and fill in Age property?\n\nThanks so much for your help,\nMaret"
  },
  {
    "text": "I think that would be the code...",
    "time_stamp": "2019-11-11 09:09:27"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-11-11 09:41:10",
    "text": "<@UN68XCJ92> if you want to run your python code for contacts whose dob is known, use webhook and workflow, so using workflow send the contact details to your webhook and using your python script calculate the age and push that to HubSpot back",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-11-11 09:46:32"
      },
      {
        "time_stamp": "2019-11-11 09:48:56"
      },
      {
        "time_stamp": "2019-11-11 09:49:41"
      },
      {
        "time_stamp": "2019-11-11 09:50:33"
      },
      {
        "time_stamp": "2019-11-11 09:51:38"
      },
      {
        "time_stamp": "2019-11-11 09:53:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Maret Reutelingsperger",
      "poster_handle": "maret"
    },
    "time_stamp": "2019-11-11 09:46:32",
    "text": "Cool! Thanks <@UCH1L597V> - In theory I understand this, however... How do I create a webhook :flushed: ? Like, what do I need to install/create (and where does the code need to go)?"
  },
  {
    "poster": {
      "poster_name": "Maret Reutelingsperger",
      "poster_handle": "maret"
    },
    "time_stamp": "2019-11-11 09:48:56",
    "text": "(funnily enough, I'm working with another client who we will be using the MakeWebBetter woocommerce integration with!)"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-11-11 09:49:41",
    "text": "Wow, yes our integration is best choice I can say to connect woo and HubSpot"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-11-11 09:50:33",
    "text": "For implementing this, Webhook you can trigger with workflow and for handling webhook you can use flask or other open source boilerplate"
  },
  {
    "poster": {
      "poster_name": "Maret Reutelingsperger",
      "poster_handle": "maret"
    },
    "time_stamp": "2019-11-11 09:51:38",
    "text": "Okay cool - I'll be reading up on that this evening :blush:  Thank you! I might be back with more questions, if that's okay?"
  },
  {
    "poster": {
      "poster_name": "Umakant - MakeWebBetter",
      "poster_handle": "umakantsharma"
    },
    "time_stamp": "2019-11-11 09:53:47",
    "text": "Sure things"
  },
  {
    "poster": {
      "poster_name": "Louis Chauss√©",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-11-11 14:05:15",
    "text": "great news <https://developers.HubSpot.com/docs/faq/sample-apps?utm_source=hs_email&amp;utm_medium=email&amp;utm_content=79250844&amp;_hsenc=p2ANqtz-92m-BNNmrkiEv6qbgkOTmHv_yip2w4T84sjqS_L_26JDs2No_V9tIPfTiNqGZeOHGRlR-ySAhPrN1YGmuiIcicKi7voA&amp;_hsmi=79250844>",
    "reply_count": 20,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-11-11 14:43:26"
      },
      {
        "time_stamp": "2019-11-12 06:12:34"
      },
      {
        "time_stamp": "2019-11-12 13:22:32"
      },
      {
        "time_stamp": "2019-11-12 13:23:44"
      },
      {
        "time_stamp": "2019-11-12 13:23:49"
      },
      {
        "time_stamp": "2019-12-11 11:35:32"
      },
      {
        "time_stamp": "2019-12-11 11:40:25"
      },
      {
        "time_stamp": "2019-12-11 11:42:40"
      },
      {
        "time_stamp": "2019-12-11 11:43:03"
      },
      {
        "time_stamp": "2019-12-11 11:44:43"
      },
      {
        "time_stamp": "2019-12-11 11:45:34"
      },
      {
        "time_stamp": "2019-12-11 11:47:51"
      },
      {
        "time_stamp": "2019-12-11 11:48:33"
      },
      {
        "time_stamp": "2019-12-11 11:49:14"
      },
      {
        "time_stamp": "2019-12-11 11:50:37"
      },
      {
        "time_stamp": "2019-12-11 11:52:15"
      },
      {
        "time_stamp": "2019-12-11 11:53:59"
      },
      {
        "time_stamp": "2019-12-11 11:55:11"
      },
      {
        "time_stamp": "2019-12-11 11:57:52"
      },
      {
        "time_stamp": "2019-12-11 11:58:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-11-11 14:43:26",
    "text": "Glad you like it, let us know what you want to see next"
  }
]
[
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 02:31:47",
    "text": "struggling to filter a table by column type ‘ForiegnID’"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 02:31:52",
    "text": "What’s the secret"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 04:28:02",
    "text": "“BadRequestException: error when listing rows for table 1034xxx for portal 4769xxx: Filters are not yet supported for list column type ‘FOREIGN_ID’”",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-03 07:43:36"
      },
      {
        "time_stamp": "2019-04-03 07:48:41"
      },
      {
        "time_stamp": "2019-04-03 07:48:56"
      },
      {
        "time_stamp": "2019-04-03 13:34:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-03 07:43:36",
    "text": "cc <@UG52C29EE>"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-04-03 07:48:41",
    "text": "<@UFC6BLEAV> What filter are you trying to apply to ForeignId column?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-04-03 07:48:56",
    "text": "can u send me the query?"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-04-03 09:58:58",
    "text": "hey channel, i'm creating multilevel dynamic pages with hubdb. i'm applying a limit filter to line 3 of the code below, but it's not working. what am i doing wrong? guessing because i'm doing it on the set statement?\n```{% set rows = hubdb_table_rows(dynamic_page_hubdb_table_id) %}\n{% for row in rows %}\n{% set childRows = hubdb_table_rows(row.hs_child_table_id, 'limit=3') %}\n{% for childRow in childRows %}```",
    "reply_count": 14,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-04-03 10:37:08"
      },
      {
        "time_stamp": "2019-04-03 10:48:43"
      },
      {
        "time_stamp": "2019-04-03 13:23:18"
      },
      {
        "time_stamp": "2019-04-03 13:24:15"
      },
      {
        "time_stamp": "2019-04-03 13:29:35"
      },
      {
        "time_stamp": "2019-04-03 13:36:32"
      },
      {
        "time_stamp": "2019-04-03 14:13:21"
      },
      {
        "time_stamp": "2019-04-03 14:14:07"
      },
      {
        "time_stamp": "2019-04-03 14:20:58"
      },
      {
        "time_stamp": "2019-04-03 14:22:29"
      },
      {
        "time_stamp": "2019-04-03 14:31:11"
      },
      {
        "time_stamp": "2019-04-03 14:31:31"
      },
      {
        "time_stamp": "2019-04-03 14:52:25"
      },
      {
        "time_stamp": "2019-04-15 18:38:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-04-03 10:37:08",
    "text": "line 3 looks correct to me. what output are u getting? Are u getting more than 3 rows?"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-04-03 10:48:43",
    "text": "yep, i'm getting all the rows."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 13:23:18",
    "text": "Following."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 13:24:15",
    "text": "I am a novice but just thinking, is it possible to add your limit to the for statement. Would that work?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-04-03 13:28:16",
    "text": "Is there a way to import a list of options to a select/multiselect column?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-04-03 13:43:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-04-03 13:29:35",
    "text": "you can filter in the for loop, i.e. `{% for row in hubdb_table_rows(XXXXXX, 'limit=3') %}` but i'm not sure it will work in this instance."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-03 13:29:43",
    "text": "not that I’m aware of"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-03 13:29:57",
    "text": "if it were a field in a CM I would say yes via FTP"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-04-03 13:30:52",
    "text": "Beans"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-03 13:33:50",
    "text": "Row values or column?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-03 13:34:23",
    "text": "If you want to update the column information you can use the API"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 13:34:41",
    "text": "Sure thing, I got this working in the end.\n\nHere is the filterQuery that worked:\n\nThis worked for me\n\n{% set attribute = ‘industry__contains=‘~dynamic_page_hubdb_row.industry|replace(’ ‘,’+’) %}\n\nSo the use case was:\n\n1) we have a table with ‘industries’ listed\n2) we have a table with ‘consultants’ listed\n3) in consultant table, there is a foreignID column which has the ‘industries’ they represent \n\nOn the website, we wanted to show all representatives for a particular industry.\n\nOur developer had previously done this work using an ‘if’ statement for each possible industry. This bugged me because not DRY and also not sustainable when new industry being added.\n\nThe challenges we faced in trying to simplify this code was:\n\n1) if a consultant had more than one industry, an “=“ query parameter didn’t work. Hence the change to ‘contains’\n\n2) the dynamic page row had been entered with a space if multiple words; this field is also used to display headings \n\n3) solved that with the character replace.\n\nSo now it’s working for me, the code is dry and if adding a new industry it will get picked up without having to add a new if statement."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 13:36:32",
    "text": "I was thinking to add it to your last line of code % for child rows % loop ?"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-03 13:43:02",
    "text": "If you figure this out can you share back. \n\nHave the same use case"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-04-03 14:13:21",
    "text": "I tried the limit filter in my portal and it works fine"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-04-03 14:14:07",
    "text": "<@UG52C29EE> Using the same markup above?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-04-03 14:20:58",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-04-03 14:21:12",
    "text": "Column"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-04-03 14:22:29",
    "text": "Crazy! I don't get it."
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-04-03 14:31:11",
    "text": "Other option is you can use loop.index inside the for loop and end the loop if loop.index = 3, even though hubdb_table_rows returns all the functions"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2019-04-03 14:31:31",
    "text": "Clear the browser cache and try it once may be"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-04-03 14:52:25",
    "text": "yeah, i even tried `{% if loop.index &lt;= 3 %}` inside the for loop and it *still* returns all the table rows."
  }
]
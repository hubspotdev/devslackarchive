[
  null,
  null,
  null,
  null,
  null,
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2018-10-24 07:56:00",
    "edited": {
      "time_stamp": "2018-10-24 07:57:02"
    },
    "text": "I’ve decided if anyone wants to help fix this through the <#CBBAW6Z3R|community-browser-extension> by simply contributing some css, hopefully ultimately ending with that css or atleast improved css getting implemented on HubSpot’s end for this. I’ve opened an issue\nIf you want to understand better why do this, read the issue.\n<https://github.com/williamspiro/HubSpot-Developer-Extension/issues/166>\n\nAll we need is someone who knows CSS, to spend the 5-15 minutes using css to fix the horizontal scrolling issue, I can handle all of the rest.\n\nThis will count toward hacktoberfest and you would get credit for your contribution in the extension and the readme of the extension."
  },
  {
    "poster": {
      "poster_name": "Ariel Luque",
      "poster_handle": "aluque"
    },
    "time_stamp": "2018-10-24 08:19:57",
    "text": "Hey Jon, just a heads up, it’s not a simple css fix. The real fix is making this work like the design manager where it pops out a window for more space which we’re discussing doing. Fundamentally menus need a certain minimum width to function correctly, and that won’t change until we are able to redesign the entire menus system. Hopefully sometime soon."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-24 08:29:40",
    "text": "<@U8G91EPCL> <https://spin.d.pr/Pt8XDM+>"
  },
  {
    "poster": {
      "poster_name": "Ariel Luque",
      "poster_handle": "aluque"
    },
    "time_stamp": "2018-10-24 08:34:49",
    "text": "Just keep in mind menus can be nested 10 deep + there are different configurations for different types. But if it works then :clap: :clap:"
  },
  null,
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-24 10:40:42",
    "text": "When you check \"prevent editing in content editors\" on a field, whatever value you have in that field will get saved on the page level despite it not showing up in the editor. Here's my scenario:\n1. You make a module with a field for HTML ID, for a CSS selector. Because this field depends more on the structure of the page in the design manager and content editors shouldn't worry about it, you check \"prevent editing in content editors\".\n2. You plop this into a template, set the HTML ID field to match what you've got set, and then make a page based on this.\n3. You do various edits to the page and save it.\n4. At a later time, you decide that the HTML ID needs to change, for whatever reason.\n\nIdeally, you'd just make the update to the field in the template, and that would be reflected in all pages based on that template. Instead, the the old value is still saved on pages, so you have to uncheck \"prevent editing\" in the module, update each page individually (plus the template itself), and then recheck \"prevent editing\". This behavior makes sense for fields that are visible in the page editor, but I don't even really see the point of this toggle if values are still stored on the page level anyway."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-24 10:43:35",
    "text": "Potential solution: prevent the page editor from saving any value if an author hasn't touched it/if it still matches the default set in the template/module (the template editor kinda works this way already with fields in custom modules, I think?). In my experience marketers tend to not understand why updating a value in the template doesn't update all pages anyway, and it is kind of a pain to have go through and update pages individually.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-10-24 11:40:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2018-10-24 11:40:40",
    "text": "I ran into this same issue earlier today, too. Seems like you could offer something akin to “show dependencies” when you edit the templates, just at the module level. That was you could (at least) get a list of all of the places it’s being used."
  },
  {
    "text": "I'm not able to add linked JS or CSS files anymore in my custom modules. Is this a bug?",
    "time_stamp": "2018-10-24 11:49:31",
    "edited": {
      "time_stamp": "2018-10-24 11:49:49"
    },
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-24 11:55:59"
      },
      {
        "time_stamp": "2018-10-24 12:03:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ariel Luque",
      "poster_handle": "aluque"
    },
    "time_stamp": "2018-10-24 11:55:59",
    "text": "Hey Stefan, if you don’t mind dm’ing me a link to the module I can take a look. Might be getting set a read only somehow."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-24 12:03:44",
    "text": "for anyone following: they are disabled until you create a new file in the design manager"
  },
  null,
  null,
  null,
  null
]
[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-08 05:32:31",
    "text": "when you're on a blog listing page, `{{ tag }}` is available. Is it possible to get the id of that slug in HubL?",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-08 07:22:20"
      },
      {
        "time_stamp": "2024-04-08 07:25:56"
      },
      {
        "time_stamp": "2024-04-08 07:31:39"
      },
      {
        "time_stamp": "2024-04-08 07:32:46"
      },
      {
        "time_stamp": "2024-04-08 07:33:15"
      },
      {
        "time_stamp": "2024-04-08 07:33:44"
      },
      {
        "time_stamp": "2024-04-08 07:43:03"
      },
      {
        "time_stamp": "2024-04-08 07:52:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Edmond Deema",
      "poster_handle": "edmond"
    },
    "time_stamp": "2024-04-08 07:22:20",
    "text": "I belive you can use something like this :\n{% for tag in content.tag_list %}\n  &lt;a class=\"blog-post__tag-link\" href=\"{{ blog_tag_url(group.id, tag.slug) }}\"&gt;{{ tag.name }}&lt;/a&gt;{% if not loop.last %},{% endif %}\n{% endfor %}\n\nThe group.id is the ID of the blog group, and tag.slug is the slug of the tag. The blog_tag_url function will return the URL of the tag page, which you can use as the href attribute of an anchor tag.\nThe content.tag_list variable is a list of tags associated with the current blog post. The for loop iterates through each tag and generates a link to the tag page.\nLet me know if this works!"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-08 07:25:56",
    "text": "I'm on a blog listing page so `{{ tag }}` is the slug already. I'm looking for the `id` of that slug."
  },
  {
    "poster": {
      "poster_name": "Edmond Deema",
      "poster_handle": "edmond"
    },
    "time_stamp": "2024-04-08 07:31:39",
    "text": "Maybe you can use blog_topic_content_creator function to get the topic object, and then use the id property of that object?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-08 07:32:46",
    "text": "interesting...thanks, let me try that"
  },
  {
    "poster": {
      "poster_name": "Edmond Deema",
      "poster_handle": "edmond"
    },
    "time_stamp": "2024-04-08 07:33:15",
    "text": "Let me know how that goes"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-08 07:33:44",
    "text": "looking for that function...you sure it exists?"
  },
  {
    "poster": {
      "poster_name": "Edmond Deema",
      "poster_handle": "edmond"
    },
    "time_stamp": "2024-04-08 07:43:03",
    "text": "You are right sorry I mistook it for another CMS :sweat_smile: but the logic is still there , I think for HubSpot is blogs/v3/topics"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-08 07:52:02",
    "text": "in any case, I appreciate the idea"
  },
  {
    "poster": {
      "poster_name": "Danel October",
      "poster_handle": "doctober"
    },
    "time_stamp": "2024-04-09 00:20:02",
    "text": "Hello!\n\nHow do we add a custom class field to a dnd section?...",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-09 06:17:13"
      },
      {
        "time_stamp": "2024-04-09 15:20:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Danel October",
      "poster_handle": "doctober"
    },
    "time_stamp": "2024-04-09 00:20:55",
    "text": "it's frustrating that this simple field has not been implemented :disappointed: can't target anything properly. well, i can do the row numbers but that's very... crude."
  }
]
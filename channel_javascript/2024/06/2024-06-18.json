[
  {
    "poster": {
      "poster_name": "Alex Zappa",
      "poster_handle": "reatlat"
    },
    "time_stamp": "2024-06-18 19:26:53",
    "text": "I would suggest something like that\n```// assuming fileInput is a file input element and file is the File object selected by the user.\nconst fileInput = document.querySelector('#file-input');\nconst file = fileInput.files[0];\n\n// HubSpot File API endpoint\nconst url = '<https://api.hubapi.com/filemanager/api/v3/files/upload>';\n\n// Form data\nlet formData = new FormData();\nformData.append('file', file);\n\n// Options\nlet options = {\n  method: 'POST',\n  body: formData,\n  headers: {\n    \"Authorization\": `Bearer YOUR_ACCESS_TOKEN`\n  }\n};\n\n// Fetch request\nfetch(url, options)\n  .then(response =&gt; {\n    if (!response.ok) {\n        throw new Error('Network response was not ok');\n    }\n    return response.json();\n  })\n  .then(data =&gt; console.log('Success:', data))\n  .catch((error) =&gt; {\n    console.error('Error:', error);\n  });```\nthe main trick in this code\n```const fileInput = document.querySelector('#file-input');\nconst file = fileInput.files[0];\nlet formData = new FormData();\nformData.append('file', file);```\nbut you will expose API key :confused: I would say it will be better to make a wrapper on your backend or serverless function so you will hide your Access Key\n\nHere is <https://developers.HubSpot.com/docs/api/files/files|documentation> where you can find more code examples on many languages"
  }
]
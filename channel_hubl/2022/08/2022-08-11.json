[
  {
    "poster": {
      "poster_name": "Michael Niemeijer",
      "poster_handle": "michael915"
    },
    "time_stamp": "2022-08-11 09:10:37",
    "text": "Okay, so I’ve actually been a little stubborn and went at it myself. For anyone who wants to know or also get this :sweat_smile:.\n• made an hubdb table with: name, source, description. and in the source put the whole svg code in it.\n• then in my custom module I choose from that table and write the *{{ icontable.source }}* directly in to the html. so its not: &lt;img src=“path/to/svg.svg”/&gt;, but it is now: &lt;span class=“icon”&gt;*&lt;svg….&gt;[everything in it] &lt;/svg&gt;*&lt;/span&gt;\nIt’s a great way to manage the icons as well. and in the page editor i can just choose the icon with a dropdown button. I love it :ok_hand:"
  },
  {
    "poster": {
      "poster_name": "Michael Niemeijer",
      "poster_handle": "michael915"
    },
    "time_stamp": "2022-08-11 09:18:20",
    "text": "Hi all. Working with Hubdb and really want to know if adding an drag and drop like order system is in the works/on the roadmap!",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-08-11 09:19:36"
      },
      {
        "time_stamp": "2022-08-11 12:34:21"
      },
      {
        "time_stamp": "2022-08-11 15:09:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2022-08-11 09:19:36",
    "text": "you can do that with HubDB HQ i belief"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-08-11 11:35:53",
    "text": "No solution, I wish this worked better"
  },
  {
    "poster": {
      "poster_name": "Evan Briggs",
      "poster_handle": "ebriggs"
    },
    "time_stamp": "2022-08-11 12:34:21",
    "text": "I've heard legends of this happening."
  },
  {
    "poster": {
      "poster_name": "Evan Briggs",
      "poster_handle": "ebriggs"
    },
    "time_stamp": "2022-08-11 12:34:38",
    "text": "Hey everyone - curious if there's a simple way to hook into a cookie via request.cookie before the page is loaded, similar to how smart content works before page load but without a parameter in the url. I know that query/parameters are offered as a solution for smart content, but is there a way to leverage actual cookies to swap content without using `{{ request.cookies.cookiename }}`  or a `?cookiename=cookievalue` . I have it setup right now to read a cookie, append the parameter based on the cookie value, and reload the page IF the cookie exists which isn't ideal.\n\n```{% if request.cookies.interests &amp;&amp; !request.query is containing request.cookies.interests %}\n{% require_js %}\n&lt;script&gt;\n  history.pushState(null, null, \"?interests={{ request.cookies.interests }}\");\n  location.reload();\n&lt;/script&gt;\n{% end_require_js %}\n{% endif %}```\n*So the goal is to load smart content based on if a cookie exists and pages the smart content query parameter, if possible.* ",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-08-16 06:03:50"
      },
      {
        "time_stamp": "2022-08-16 08:02:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-08-11 15:09:11",
    "text": "Thanks for looking into it!"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2022-08-11 15:09:57",
    "text": "It is 100% on the roadmap!"
  }
]
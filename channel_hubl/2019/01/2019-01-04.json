[
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-01-04 02:00:16",
    "text": "Is there a way to get the language in which the user is browsing the website with HubL?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-04 02:34:15"
      },
      {
        "time_stamp": "2019-01-04 12:38:32"
      },
      {
        "time_stamp": "2019-01-08 01:13:17"
      },
      {
        "time_stamp": "2019-01-08 08:08:11"
      },
      {
        "time_stamp": "2019-01-09 00:59:50"
      },
      {
        "time_stamp": "2019-01-09 09:02:35"
      }
    ]
  },
  {
    "text": "Hi! I am trying to display the tag of a blog post in the \"most popular posts\"-section, like HubSpot did here:",
    "time_stamp": "2019-01-04 02:01:16"
  },
  {
    "poster": {
      "poster_name": "Ingrid Vold",
      "poster_handle": "ingrid.vold"
    },
    "time_stamp": "2019-01-04 02:01:36",
    "text": "Is there any function that returns the tags of a post?"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2019-01-04 02:02:30",
    "text": "course"
  },
  {
    "text": "",
    "time_stamp": "2019-01-04 02:03:09"
  },
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-01-04 02:34:15",
    "text": "This is what I found so far: <https://designers.HubSpot.com/docs/tutorials/how-to-create-a-glossary-of-terms-for-multilingual-templates>"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 09:04:04",
    "text": "is there any way to avoid the validator and save/publish right away? :sweat_smile:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-01-04 10:11:32",
    "text": "#ftp"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 10:18:36",
    "text": "right I missed to tell you its a drag&amp;drop template :face_with_rolling_eyes:",
    "reply_count": 30,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-01-04 13:52:12"
      },
      {
        "time_stamp": "2019-01-04 17:27:21"
      },
      {
        "time_stamp": "2019-01-04 17:28:23"
      },
      {
        "time_stamp": "2019-01-04 17:28:44"
      },
      {
        "time_stamp": "2019-01-04 17:29:09"
      },
      {
        "time_stamp": "2019-01-04 17:29:20"
      },
      {
        "time_stamp": "2019-01-04 17:29:27"
      },
      {
        "time_stamp": "2019-01-04 17:29:38"
      },
      {
        "time_stamp": "2019-01-04 17:29:49"
      },
      {
        "time_stamp": "2019-01-04 17:29:50"
      },
      {
        "time_stamp": "2019-01-04 17:30:01"
      },
      {
        "time_stamp": "2019-01-04 17:30:21"
      },
      {
        "time_stamp": "2019-01-04 17:31:03"
      },
      {
        "time_stamp": "2019-01-04 17:31:27"
      },
      {
        "time_stamp": "2019-01-04 17:32:01"
      },
      {
        "time_stamp": "2019-01-04 17:32:19"
      },
      {
        "time_stamp": "2019-01-04 17:32:26"
      },
      {
        "time_stamp": "2019-01-04 17:32:32"
      },
      {
        "time_stamp": "2019-01-04 17:33:03"
      },
      {
        "time_stamp": "2019-01-04 17:34:49"
      },
      {
        "time_stamp": "2019-01-04 17:35:22"
      },
      {
        "time_stamp": "2019-01-07 14:25:33"
      },
      {
        "time_stamp": "2019-01-07 14:26:17"
      },
      {
        "time_stamp": "2019-01-07 14:26:34"
      },
      {
        "time_stamp": "2019-01-07 14:27:11"
      },
      {
        "time_stamp": "2019-01-07 14:27:38"
      },
      {
        "time_stamp": "2019-01-07 14:27:58"
      },
      {
        "time_stamp": "2019-01-07 14:28:47"
      },
      {
        "time_stamp": "2019-01-07 14:29:01"
      },
      {
        "time_stamp": "2019-01-08 02:21:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-01-04 10:20:29",
    "edited": {
      "time_stamp": "2019-01-04 10:20:40"
    },
    "text": "I wish they highjacked Ctrl/CMD + S to save a file.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-04 13:51:06"
      },
      {
        "time_stamp": "2019-01-04 15:26:53"
      }
    ]
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-01-04 12:38:32",
    "text": "Hey <@UDEBJ5N5C>, the HubL variable `{{ request.headers }}` returns a dictionary of available request headers (<https://designers.HubSpot.com/docs/hubl/hubl-supported-variables#http-request-variables>)\nJust tested it out, and it looks like one of the properties within the dictionary is `accept-language=...` - the languages listed here correspond with the languages I've chosen in my browser settings."
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 13:47:44",
    "text": "HubSpot devs - question, is having a hubl import inside of modules bad(multiple modules with this import might load per page)\n\nit’d be nice if it could work like a require to prevent any extra taxing on the server"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 13:51:06",
    "text": "`cmd` `shift` `P`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 13:52:12",
    "text": "idk what issue you’re facing but usually when i run into issues like that it’s that some variables or something don’t yet have values when the preprocessor runs so I add a `|default(\"default value here\")` and that fixes it"
  },
  null,
  {
    "poster": {
      "poster_name": "Yidan Wang",
      "poster_handle": "yidan"
    },
    "time_stamp": "2019-01-04 14:08:50",
    "text": "Hi HubSpot Gurus! Dummy question - is it possible to set HubL variable to a javascript variable? I want to assign a random number to a HubL variable but don’t see a HubL function for that :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-04 14:15:45",
    "text": "No. Javascript would be running in the browser, while HubL runs on the server. You can send HubL values to JS, but not the other way around"
  },
  {
    "poster": {
      "poster_name": "Yidan Wang",
      "poster_handle": "yidan"
    },
    "time_stamp": "2019-01-04 14:17:04",
    "text": "I see!"
  },
  {
    "poster": {
      "poster_name": "Yidan Wang",
      "poster_handle": "yidan"
    },
    "time_stamp": "2019-01-04 14:17:09",
    "text": "Thanks Ian!"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-04 14:17:10",
    "text": "However, if you need a random number in HubL I think you could do it this way: `range(x)|random`"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-04 14:17:17",
    "text": "Where x is the maximum number you'd want"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-04 14:17:49",
    "text": "`range()` generates an array of integers, and the `|random` filter pulls a random item from an array"
  },
  {
    "poster": {
      "poster_name": "Yidan Wang",
      "poster_handle": "yidan"
    },
    "time_stamp": "2019-01-04 14:17:55",
    "text": "wow"
  },
  {
    "poster": {
      "poster_name": "Yidan Wang",
      "poster_handle": "yidan"
    },
    "time_stamp": "2019-01-04 14:18:05",
    "text": "that’s exactly what I’m looking for!"
  },
  {
    "poster": {
      "poster_name": "Yidan Wang",
      "poster_handle": "yidan"
    },
    "time_stamp": "2019-01-04 14:18:07",
    "text": "Thank you so much!"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-04 14:18:39",
    "text": "No probalo! Here's the documentation for `range()`: <https://designers.HubSpot.com/docs/hubl/hubl-supported-functions#range>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-01-04 15:26:53",
    "text": "herm."
  },
  null,
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:27:21",
    "text": "my issue is getting timeouts within the validator so I am trying to avoid to process the whole template but didn't found any trick for it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:28:23",
    "text": "yeek, maybe if you use includes to segment out parts of the file and then put it back together in the main file?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:28:44",
    "text": "then it might treat them as individual chunks basically is my thought instead of 1 gigantic file it has to process"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:29:09",
    "text": "well, that could work. but its a drag&amp;drop tho"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:29:20",
    "text": "danm lol"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:29:27",
    "text": "the main issue is that its using hubDB"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:29:38",
    "text": "and its processing the call while saving/publishing"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:29:49",
    "text": "and the table its pretty big so it takes a while"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:29:50",
    "text": "separate what you’re doing with hubDB into a custom module that gets loaded into that template?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:30:01",
    "text": "already tried -_-"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:30:21",
    "text": "here’s an idea"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:31:03",
    "text": "have a field in said custom module for hub ID set the default to be null/unset\n\nIn the actual page you’re going to use it in, have it set."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:31:27",
    "text": "and in your module in the code if the hubID is unset, nothing runs."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:32:01",
    "text": "voila the processor will save it as if  there is no hubID thus not executing any of the HubDB code, thus not timing out"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:32:19",
    "text": "the issue is that it has to work on the listing of the blog page"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:32:26",
    "text": ":partyparrot:"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:32:32",
    "text": "worst case scenario"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-04 17:33:03",
    "text": "then do exactly as I said before but on the listing template you set the modules template level defaults to have the hubID you want. It may work around the issue still"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:34:49",
    "text": "that is how its right now, but as it holds the default table ID the whole query is processed"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-04 17:35:22",
    "text": "I think it doesn't have too many solutions more than try over and over until is published... sometimes works :face_with_rolling_eyes:"
  },
  null,
  {
    "text": "some templates I saw module Custom hubl",
    "time_stamp": "2019-01-05 00:50:44"
  },
  {
    "poster": {
      "poster_name": "Hieu Nguyen",
      "poster_handle": "trunghieu.nth"
    },
    "time_stamp": "2019-01-05 00:51:05",
    "text": "How I can create a that one?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-01-05 07:54:11"
      }
    ]
  }
]
[
  {
    "subtype": "file_comment",
    "text": "<@U2H1Q3F8R> commented on <@U43TENW1L>’s file <https://HubSpotdev.slack.com/files/U43TENW1L/F8NQZK8AF/CTA_Fallback.js|https://HubSpotdev.slack.com/files/U43TENW1L/F8NQZK8AF/CTA_Fallback.js>: Awesome! Thanks for sharing this.",
    "comment": {
      "created": 1515418644,
      "timestamp": 1515418644,
      "comment": "Awesome! Thanks for sharing this."
    },
    "time_stamp": "2018-01-08 06:37:24"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 09:14:02",
    "edited": {
      "time_stamp": "2018-01-08 09:14:24"
    },
    "text": "<@U43TENW1L> Thanks… should we be doing a check for whether it is an image cta or text before you output it to the dom?"
  },
  {
    "poster": {
      "poster_name": "ltdesroches",
      "poster_handle": "ltdesroches"
    },
    "time_stamp": "2018-01-08 09:48:52",
    "text": "Couldn't hurt. This particular solution applies to our sites, but you may need to customize based on the types of CTAs you're serving."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 11:03:09",
    "text": "Actually testing it the image is blocked so it doesnt matter."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 11:03:29",
    "edited": {
      "time_stamp": "2018-01-08 11:03:37"
    },
    "text": "It would be better to just create a button or just leave it plain text"
  },
  {
    "poster": {
      "poster_name": "ltdesroches",
      "poster_handle": "ltdesroches"
    },
    "time_stamp": "2018-01-08 11:18:37",
    "text": "Yeah, since AdBlock injects its own CSS to hide .hs-cta-wrapper, had to place the fallback element outside of that. But you could probably grab the src of the fallback image that's included in the embed code, and use that in the new button."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 11:26:23",
    "text": "unfortunately it still serves it from the same domain  and blocks the image from showing all together."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:00:49",
    "text": "We're looking at creating a simple text-based fallback for CTAs at the moment that would basically do exactly what you're outlining here, <@U43TENW1L>, <@U38EZFVFE>, we'd make it so the fallback for every CTA is just `&lt;a href=\"cta-redirect-url\"&gt;img alt or button content&lt;/a&gt;`, meaning if the CTA fails to load it'd always default to a link, rendered just outside the default divs and spans. We have a beta version we'll be testing tomorrow, if you'd like to try it out"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-08 12:01:29",
    "text": "Would custom CSS classes also be retained?",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-01-08 12:02:36"
      },
      {
        "time_stamp": "2018-01-08 12:02:50"
      },
      {
        "time_stamp": "2018-01-08 12:03:28"
      },
      {
        "time_stamp": "2018-01-08 12:03:46"
      },
      {
        "time_stamp": "2018-01-08 12:04:16"
      },
      {
        "time_stamp": "2018-01-08 12:05:56"
      },
      {
        "time_stamp": "2018-01-08 12:06:16"
      },
      {
        "time_stamp": "2018-01-08 12:06:28"
      },
      {
        "time_stamp": "2018-01-08 12:10:18"
      },
      {
        "time_stamp": "2018-01-08 12:11:21"
      },
      {
        "time_stamp": "2018-01-08 12:14:02"
      },
      {
        "time_stamp": "2018-01-08 13:36:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:02:36",
    "text": "Can you confirm what you mean by retained?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:02:50",
    "text": "if we add a custom class to a cta"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:03:28",
    "text": "That would work as normal for the successfully rendered CTA, this is specifically just for the static html fallback state for the CTA"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:03:46",
    "edited": {
      "time_stamp": "2018-01-08 12:04:08"
    },
    "text": "I.e. if the current.js file loads and executes, then the CTA would be a normal CTA, image or button depending on what you built, with all the customisations you did in the editor"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:04:16",
    "text": "Yeah gotcha"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:05:29",
    "text": "I was curious why HubSpot defaults to image when a cta is only text?"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-08 12:05:56",
    "text": "right, what I'm asking is if in the fallback the custom class could also be inlined. something like &lt;a class=\"{{cta.class}}\" href=\"cta-redirect-url\"&gt;img alt or button content&lt;/a&gt;"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-08 12:06:16",
    "text": "I have a number of CTAs that are just text CTAs with a class, then styled in the primary sheet"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:06:27",
    "text": "Every time you update the CTA inside the editor, that fallback image gets updated on our server. It means that even if the fallback renders it'll always show whatever the most up to date version was"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:06:28",
    "text": "Same here."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:06:52",
    "text": "But why wouldnt you output text instead of an image."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:07:11",
    "text": "If we put text, then you'd need to re-embed the CTA every time the text was updated"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:07:27",
    "text": "I see."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:07:36",
    "text": "understand your logic."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:08:08",
    "text": "It's not exactly the best solution, but at the time it was implemented (upwards of 6 years ago) that was the right way to do it. We're re-evaluating a lot of these decisions right now"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 12:08:49",
    "text": "The whole web has changed in the last 6 years it seems like."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:09:26",
    "text": "Many times over :chart_with_upwards_trend:"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:10:18",
    "text": "For the purposes of the fallback, it would be completely generic, the fallback should *only* render if the JS doesn't load. When the JS loads, it would remove the generic fallback and swap it out with markup that contained the custom class set inside the editor"
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-08 12:10:54",
    "text": "Heads up for anyone curious about canonical URLs here:  <https://www.HubSpot.com/product-updates/edit-the-canonical-url-of-a-page>"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:11:21",
    "text": "That's the current standing, but I can definitely see us getting to a place where there's 3 versions of a CTA, a link, a button and an image, and the link based CTA doesn't need any complicated re-writing, the fallback and the final CTA would be the same"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:14:02",
    "text": "Also, related to that, there's very likely a world where rendering of CTAs happens entirely on the backend for COS-hosted pages. I.e. if there's a CTA on any COS page, we don't load the JS embed code, we just execute all that logic before returning the HTML of the page, and it'll just be a normal static part of HTML content then"
  },
  {
    "poster": {
      "poster_name": "ltdesroches",
      "poster_handle": "ltdesroches"
    },
    "time_stamp": "2018-01-08 12:24:53",
    "text": "Sounds good <@U24DCSJBE>, would love to check out that beta."
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 12:25:44",
    "text": ":+1: I'll let you know once we have something usable, thanks!"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-01-08 12:43:36",
    "text": "So does this basically just give access to the canonical meta from the interface? In the same way that you could have written one using a module? (but in this case HubSpot standard_header wouldn't overwrite it)"
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-08 12:44:03",
    "text": "Yeah"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-08 12:47:47",
    "text": "<@U22PU4G4A> not sure if this is related, but I've had a few team members reporting that they're getting some strange URL-related errors, saying that pages are already published at auto-filled addresses. I had them edit the url, remove a character and then re-add it, which removed the error and allowed the page to save. Just letting you know. I told them if it happens again to grab a screenshot"
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-08 12:50:25",
    "text": "Hm, would love to see a screenshot if you or your team encounters it again <@U26BLKGE4>. I haven't heard about this, but if it comes up again would love to see it."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-01-08 13:09:33",
    "text": "<@U26BLKGE4> thank you we are working on a fix right now"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-08 13:09:49",
    "text": "no worries, thank you!"
  },
  {
    "text": "woot woot",
    "time_stamp": "2018-01-08 13:35:14"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-08 13:36:15",
    "text": "Holla"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 13:37:02",
    "text": ":point_up: just got the notification too, finally!"
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2018-01-08 13:37:07",
    "text": ":tada:"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 13:37:57",
    "text": "A big thank you to everyone here for your help and feedback throughout this, it was invaluable. We're still going to go ahead with a lot of the work we've been testing, it helps mitigate any future impact if something like this were to happen in the future"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 13:38:22",
    "edited": {
      "time_stamp": "2018-01-08 13:38:40"
    },
    "text": "But at least we can properly test this and go through a real beta process to get it right, rather than trying to push things out in a time crunch :thumbsup:"
  },
  {
    "poster": {
      "poster_name": "gwahhab",
      "poster_handle": "gwahhab"
    },
    "time_stamp": "2018-01-08 13:38:42",
    "text": "i am still getting ads blocked so may need some time to update to the master list"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-08 13:38:51",
    "text": "same here"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 13:39:03",
    "text": "Yeah, it might take a few hours for the change to propagate out to Adblock and Adblock Plus"
  },
  {
    "poster": {
      "poster_name": "Jeff White",
      "poster_handle": "brightwhite"
    },
    "time_stamp": "2018-01-08 13:39:06",
    "text": "Yeah, was just going to ask how long it would take to see this in action"
  },
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-08 13:39:31",
    "text": "I believe they only poll for updates of EasyList a few times a day"
  },
  {
    "poster": {
      "poster_name": "gwahhab",
      "poster_handle": "gwahhab"
    },
    "time_stamp": "2018-01-08 13:40:20",
    "text": "i manually asked it to update and it did update easylist but may not have been sent over to ABP like Shay said"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-08 14:38:52",
    "text": "is there a way to pull the names from social settings like you can in the company settings with HubL?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-08 14:39:57",
    "text": "something like {{site_settings.facebook}} or the like?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-01-08 14:46:16",
    "text": "i haven’t foudn this yet but I’d like to know also <@U2H3TT8F2>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-08 14:48:18",
    "text": "ideally, it would be awesome to just have an area where we can name some custom values in the settings area so it would be like {{ site_settings.[customName].value}} then have like 5 - 10 fields we can fill in ourselves"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-08 14:48:59",
    "text": "well i guess that wouldnt work though for some stuff but maybe for other things"
  }
]
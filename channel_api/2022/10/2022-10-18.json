[
  {
    "poster": {
      "poster_name": "Naresh Kumar",
      "poster_handle": "naresh"
    },
    "time_stamp": "2022-10-18 01:07:53",
    "text": "Yes <@U01QVR44MEY>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 07:53:39",
    "text": "And which api endpoint again"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 08:09:08",
    "text": "Got it, yeah attachments are associate to engagements not directly associated to the contact"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 08:09:36",
    "text": "\"Hey Lyndon,\nAttachments are exposed via the engagements API. So if you were to use the <https://developers.HubSpot.com/docs/methods/engagements/get_associated_engagements|GET Associated Engagements> endpoint you will see an attachments array in each engagement object, which is populated with file IDs which you can get access to via this <https://developers.HubSpot.com/docs/methods/files/get_files_file_id|endpoint>.\nLet me know if you have any questions about that.\n-Zack\""
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 08:09:42",
    "text": "<https://community.HubSpot.com/t5/APIs-Integrations/Get-attachments-on-a-company-contact-or-deal/td-p/232387>"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-10-18 08:28:18",
    "text": "Whatâ€™s the difference between the v4 and v3 apis?\ne.g.\n<https://developers.HubSpot.com/docs/api/crm/crm-custom-objects>\n*`/crm/v3/objects/{objectType}/{objectId}`*\n\n<https://developers.HubSpot.com/docs/api/crm/associations>\n*`/crm/v4/objects/{objectType}/{objectId}`*",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-10-18 09:12:20"
      },
      {
        "time_stamp": "2022-10-19 03:39:06"
      },
      {
        "time_stamp": "2022-10-19 05:00:17"
      },
      {
        "time_stamp": "2022-10-19 05:01:47"
      },
      {
        "time_stamp": "2022-10-19 05:22:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Arno Van de Weyer",
      "poster_handle": "arno.vandeweyer"
    },
    "time_stamp": "2022-10-18 09:12:20",
    "text": "Something I noticed is in the v4 you can call associations straight in the objects call. So you don't need to request objects, associations, and association data. But get the associations ID's. directly in the first call together with the main object data."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:15:54",
    "text": "Has anyone run into this error when dealing with GraphQL? I can run queries just fine within the dev portal, and the token has all scopes available:\n\nmain.js:2 Uncaught (in promise) Error: Exception while fetching data (/CRM/product_collection) : You do not have permissions to view object type ObjectTypeId{legacyObjectType=PRODUCT} in portal 23111634 (requires one of [inbounddb-product-library-read])\n\nSome googling says its because an account doesn't have access to Service Hub but I'm on a dev account",
    "reply_count": 29,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-10-18 10:17:00"
      },
      {
        "time_stamp": "2022-10-18 10:17:09"
      },
      {
        "time_stamp": "2022-10-18 10:17:27"
      },
      {
        "time_stamp": "2022-10-18 10:17:38"
      },
      {
        "time_stamp": "2022-10-18 10:17:41"
      },
      {
        "time_stamp": "2022-10-18 10:18:00"
      },
      {
        "time_stamp": "2022-10-18 10:18:08"
      },
      {
        "time_stamp": "2022-10-18 10:21:54"
      },
      {
        "time_stamp": "2022-10-18 10:22:02"
      },
      {
        "time_stamp": "2022-10-18 10:22:03"
      },
      {
        "time_stamp": "2022-10-18 10:22:22"
      },
      {
        "time_stamp": "2022-10-18 10:22:37"
      },
      {
        "time_stamp": "2022-10-18 10:22:59"
      },
      {
        "time_stamp": "2022-10-18 10:23:32"
      },
      {
        "time_stamp": "2022-10-18 10:23:44"
      },
      {
        "time_stamp": "2022-10-18 10:23:46"
      },
      {
        "time_stamp": "2022-10-18 10:23:52"
      },
      {
        "time_stamp": "2022-10-18 10:24:37"
      },
      {
        "time_stamp": "2022-10-18 10:26:43"
      },
      {
        "time_stamp": "2022-10-18 10:26:56"
      },
      {
        "time_stamp": "2022-10-18 10:27:11"
      },
      {
        "time_stamp": "2022-10-18 10:27:47"
      },
      {
        "time_stamp": "2022-10-18 10:29:54"
      },
      {
        "time_stamp": "2022-10-18 10:30:12"
      },
      {
        "time_stamp": "2022-10-18 10:30:18"
      },
      {
        "time_stamp": "2022-10-18 10:30:38"
      },
      {
        "time_stamp": "2022-10-18 10:30:44"
      },
      {
        "time_stamp": "2022-10-18 10:30:54"
      },
      {
        "time_stamp": "2022-10-18 12:01:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:17:00",
    "text": "Honestly I haven't"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:17:09",
    "text": "Let me try and run some tests"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:17:27",
    "text": "Can you share a dumbed down version of your GraphQL"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:17:38",
    "text": "Sure"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:17:41",
    "text": "and thank you"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:18:00",
    "text": "Of course"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:18:08",
    "text": "``` query MyQuery {\n  CRM {\n    company_collection {\n      items {\n        hs_object_id\n        name\n      }\n    }\n    product_collection {\n      items{\n        name\n      }\n    }\n  }\n}```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:21:54",
    "text": "And you only get this error when running the query through the api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:22:02",
    "text": "And not graphiql"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:22:03",
    "text": "<https://app.HubSpot.com/graphiql>"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:22:22",
    "text": "Yeah, oddly"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:22:37",
    "text": "Very interesting"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:22:59",
    "text": "the weirdest thing is its referencing some kind of inbound database lol"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:23:32",
    "text": "yeah let me run some more tests"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:23:44",
    "text": "sweet thanks"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:23:46",
    "text": "I just ran through all the portal using the graphiql editor"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:23:52",
    "text": "and it all worked fine"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:24:37",
    "text": "same, it's just when using apollo to query it and _only_ if I ask for proudcts"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:26:43",
    "text": "I'm guessing for some odd reason my dev account wasn't assigned service hub pro"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:26:56",
    "text": "I think that might be it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:27:11",
    "edited": {
      "time_stamp": "2022-10-18 10:27:39"
    },
    "text": "you could always just run a `crm/v4/objects/products` GET call and see"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:27:47",
    "text": "good idea"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:29:54",
    "text": "Let me what it returns"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:30:12",
    "text": "Well i'm a idiot lmao"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:30:18",
    "text": "it needs the e-commerce scope that I somehow _forgot_ to check"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:30:38",
    "text": "Hahaha that will do it"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-10-18 10:30:44",
    "text": "thanks again for the help!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-10-18 10:30:54",
    "text": "For sure"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2022-10-18 12:01:47",
    "text": "What are you building?"
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2022-10-18 17:39:06",
    "edited": {
      "time_stamp": "2022-10-18 17:40:50"
    },
    "text": "hi all. I am trying to import a CSV file into a HubDB table using the <https://developers.HubSpot.com/docs/api/cms/hubdb#import-rows-from-csv|Import rows from CSV> endpoint. I am using the <https://github.com/HubSpot/HubSpot-api-php> in a Laraval application. For now, to test the implementation, I have a simple table with dynamic pages enabled and a `name` column.\n\nthe CSV is a simple comma separated CSV file with 2 rows (1 for headers and 1 row of data). My code (untidy I know) is this:\n\n```$HubSpot = HubSpot::createWithAccessToken(config('services.HubSpot.key'));\n\n$file = new SplFileObject(storage_path('app/export.csv'));\n\n$response = $HubSpot-&gt;cms()-&gt;hubdb()-&gt;tablesApi()-&gt;importDraftTable('5532991', json_encode([\n    \"skipRows\" =&gt; 1,\n    \"separator\" =&gt; \",\",\n    \"idSourceColumn\" =&gt; 1,\n    \"resetTable\" =&gt; false,\n    \"columnMappings\" =&gt; [\n        [ \"target\" =&gt; \"hs_name\", \"source\" =&gt; 2 ],\n        [ \"target\" =&gt; \"hs_path\", \"source\" =&gt; 3 ],\n        [ \"target\" =&gt; \"name\", \"source\" =&gt; 4 ],\n    ],\n    \"primaryKeyColumn\" =&gt; \"hs_path\",\n    \"encoding\" =&gt; \"utf-8\",\n    \"format\" =&gt; \"csv\"\n]), $file);```\nAll I get is `500 Internal Server Error` response: {\"status\":\"error\",\"message\":\"internal error\",\"correlationId\":\"b60ddd3d-1513-41cc-9780-36f260c2cd62\"}` error response code so not sure where to even begin to debug. Can anyone shed any light?",
    "reply_count": 45,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-10-19 09:09:45"
      },
      {
        "time_stamp": "2022-10-19 09:10:52"
      },
      {
        "time_stamp": "2022-10-19 09:10:59"
      },
      {
        "time_stamp": "2022-10-19 09:14:56"
      },
      {
        "time_stamp": "2022-10-19 09:15:31"
      },
      {
        "time_stamp": "2022-10-19 09:16:36"
      },
      {
        "time_stamp": "2022-10-19 22:12:57"
      },
      {
        "time_stamp": "2022-10-20 01:35:50"
      },
      {
        "time_stamp": "2022-10-20 08:28:38"
      },
      {
        "time_stamp": "2022-10-22 16:55:33"
      },
      {
        "time_stamp": "2022-10-22 16:55:42"
      },
      {
        "time_stamp": "2022-10-22 16:56:08"
      },
      {
        "time_stamp": "2022-10-22 16:59:35"
      },
      {
        "time_stamp": "2022-10-22 16:59:41"
      },
      {
        "time_stamp": "2022-10-22 17:00:45"
      },
      {
        "time_stamp": "2022-10-22 17:01:16"
      },
      {
        "time_stamp": "2022-10-22 17:02:19"
      },
      {
        "time_stamp": "2022-10-22 17:05:10"
      },
      {
        "time_stamp": "2022-10-22 17:05:22"
      },
      {
        "time_stamp": "2022-10-22 17:05:25"
      },
      {
        "time_stamp": "2022-10-22 17:05:42"
      },
      {
        "time_stamp": "2022-10-22 17:06:09"
      },
      {
        "time_stamp": "2022-10-22 17:10:04"
      },
      {
        "time_stamp": "2022-10-22 17:10:25"
      },
      {
        "time_stamp": "2022-10-22 17:10:49"
      },
      {
        "time_stamp": "2022-10-22 17:10:51"
      },
      {
        "time_stamp": "2022-10-22 17:10:57"
      },
      {
        "time_stamp": "2022-10-22 17:11:06"
      },
      {
        "time_stamp": "2022-10-22 17:11:18"
      },
      {
        "time_stamp": "2022-10-22 17:12:00"
      },
      {
        "time_stamp": "2022-10-22 17:12:04"
      },
      {
        "time_stamp": "2022-10-22 17:12:08"
      },
      {
        "time_stamp": "2022-10-22 17:12:38"
      },
      {
        "time_stamp": "2022-10-22 17:12:47"
      },
      {
        "time_stamp": "2022-10-22 17:12:53"
      },
      {
        "time_stamp": "2022-10-22 17:12:59"
      },
      {
        "time_stamp": "2022-10-22 17:13:04"
      },
      {
        "time_stamp": "2022-10-22 17:13:08"
      },
      {
        "time_stamp": "2022-10-22 17:13:17"
      },
      {
        "time_stamp": "2022-10-22 17:13:26"
      },
      {
        "time_stamp": "2022-10-22 17:13:50"
      },
      {
        "time_stamp": "2022-10-22 17:14:03"
      },
      {
        "time_stamp": "2022-10-22 17:15:03"
      },
      {
        "time_stamp": "2022-10-22 17:16:12"
      },
      {
        "time_stamp": "2022-10-22 17:16:37"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "erin wiggers",
      "poster_handle": "erin245"
    },
    "time_stamp": "2021-11-10 14:56:45",
    "text": "Hi yall! Here is my overall problem and then I'll get into my specific question:\n\nMy client is using a third party embed for their payment form which renders in an iframe. When they have completed the form, they are redirected to the thank you page within the iframe. I need to redirect the parent window instead.\n\nI have code that should work: append a script tag to the iframe body tag that listens for form submission and redirects the parent window when submitted. But what I'm running into is a cross-origin error. Is it possible to access the contents of an iframe on a HubSpot site?\n\nIf not, could you recommend any workarounds? If so, is there anything specific that needs to happen to allow that?\n\nThanks in advance for your help!",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-11-10 16:51:36"
      },
      {
        "time_stamp": "2021-11-10 17:07:00"
      },
      {
        "time_stamp": "2021-11-10 17:36:13"
      },
      {
        "time_stamp": "2021-11-11 01:35:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-10 16:51:36",
    "text": "Hey <@U022FJKR4CQ> — you cannot access the html and what not from an iframe. Think of it as a window into another site. You can look but you can’t touch. At least in terms of code haha. \n\nThat being said some payment processors or form integrations give you different ways of embedding. Some also have hooks you can latch on to. What platform are you using?"
  },
  {
    "poster": {
      "poster_name": "erin wiggers",
      "poster_handle": "erin245"
    },
    "time_stamp": "2021-11-10 17:07:00",
    "text": "<@UQWGKUEN7> ah that's what I thought! The client uses NMI and they don't provide much support for developers so I am thinking it just can't be done in this case"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-10 17:36:13",
    "text": "It looks like nmi has pretty extensive dev docs though. They seem to have web hooks. Is this client on enterprise? You could def make a server less function that could likely latch on tho those hooks. "
  },
  {
    "poster": {
      "poster_name": "Allen Djal",
      "poster_handle": "allen795"
    },
    "time_stamp": "2021-11-10 18:20:19",
    "edited": {
      "time_stamp": "2021-11-10 18:43:24"
    },
    "text": "Hi all! Have a question regarding using multiple HubSpot forms embedded on a single page…\n1. Is this possible?\n2. Currently we are trying to do this, and the result is for every submission, some of the data gets confused between each of the forms. For example - we added a hidden field in each form and we use the form embed code that HubSpot provides along with a few extra lines of code for it to populate that hidden field. The issue is one form will use the hidden field value of another form. \n<https://vastdata.com/nvidia/|Here is the landing page> in which all the forms live (3 different forms, 1 is shown twice, another is shown once, and another is shown 8 times). All of them have a different value for a single hidden field which is how we are differentiating them.\nHere is a sample of the form code we are using _*in addition*_ to the `hbspt.forms.create({` code:\n\n```window.addEventListener('message', event =&gt; {\n  if(event.data.type === 'hsFormCallback') {\nif(jQuery('#label-lead_source_campaign_latest-584bdad2-02ab-4a8f-b987-dbb2d8b5036b').siblings('.input').children('.hs-input').length &gt; 0) {\n    jQuery('#label-lead_source_campaign_latest-584bdad2-02ab-4a8f-b987-dbb2d8b5036b').siblings('.input').children('.hs-input')[0].value = 'FY22-WW-WebRequest-Demo-Nvidia-TCO-Microsite';\n  }\n}\n });```\n`lead_source_campaign_latest` is the hidden field and `FY22-WW-WebRequest-Demo-Nvidia-TCO-Microsite` is the value…the value is what is getting mixed up across forms in this case - submitting one from uses the value from another form, even though each one of the forms on the page all have their own value. So the end result is we get a form submission with an incorrect value (but it is from a another form on the page).\n\nHelp!",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-11-11 09:26:05"
      },
      {
        "time_stamp": "2021-11-11 10:04:11"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "Indra Pinsel",
      "poster_handle": "indra"
    },
    "time_stamp": "2023-05-09 03:50:19",
    "text": "Hi all, I have a question about HubSpot limits. HubSpot has a limit for 10.000 pages, 10.000 landing pages, 1 million hubDB rows, 10.000 rows per hubDB and 10 dynamic pages using the same HubDB table. So my question is as following:\nWhen using dynamic pages we have a client who will automatically create 9000 dynamic pages. But with 2 more options adding, it will overwrite the 10.000 dynamic pages. What is the limit for dynamic pages? Is a dynamic page just one of the normal page? Or when creating 3 HubDBs with each 10.000 records allow to generate 30.000 dynamic pages acceptable by HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-05-09 06:19:41",
    "edited": {
      "time_stamp": "2023-05-09 06:20:53"
    },
    "text": "Why are query params handled differently in `query` vs. `query_dict`?\n\nI have a HubDB, where editors can add contacts/employees and assign them to a “Department”.\nOne of these departments is “People &amp; Culture”. And this is causing issues. The ampersand specifically.\n\nURL: `<http://domain.com/test?department=People+%26+Culture|domain.com/test?department=People+%26+Culture>` (urlencoded version of “People &amp; Culture”)\n\nDeveloper info for this page, showing correct encoded parameter on `query`, but incorrect on `query_dict`.\n```\"request\": {\n   \"query\": ?department=People+&amp;+Culture...\n   ...\n   `query_dict: {\n      \"department\": \"People \"\n      ...\n   }\n}```\nThis causes my GraphQL to fail, as the request never matches the correct department in HubDB.",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-05-09 06:35:09"
      },
      {
        "time_stamp": "2023-05-09 06:35:35"
      },
      {
        "time_stamp": "2023-05-09 06:58:44"
      },
      {
        "time_stamp": "2023-05-09 07:42:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-05-09 06:35:09",
    "text": "`&amp;` can throw things off"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-05-09 06:35:35",
    "text": "change the value to `People and Culture` and it should work"
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-05-09 06:58:44",
    "text": "That’s also what we’re doing now, but still seems like a thing `query_dict` should parse properly."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-05-09 07:42:08",
    "text": "yes. yes it does"
  }
]
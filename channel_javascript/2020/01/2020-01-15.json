[
  {
    "poster": {
      "poster_name": "Marlene Flickinger",
      "poster_handle": "mflickinger"
    },
    "time_stamp": "2020-01-15 06:46:56",
    "text": "Hi I am new here and I hope someone can help me. Is it possible to store a javascript file somewhere on the HubSpot server, no matter if file manager or design manager, and execute it there without the data being displayed in source code on the web pages and landing pages later? Alternatively, could the data be encrypted so that it does not appear in plain text?\nThe background of my question is that we have to store access data in this javascript file, which of course should not be publicly displayed on our pages.",
    "reply_count": 9,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2020-01-15 06:57:14"
      },
      {
        "time_stamp": "2020-01-15 07:09:03"
      },
      {
        "time_stamp": "2020-01-15 07:10:04"
      },
      {
        "time_stamp": "2020-01-15 07:19:05"
      },
      {
        "time_stamp": "2020-01-15 07:51:32"
      },
      {
        "time_stamp": "2020-01-15 08:33:40"
      },
      {
        "time_stamp": "2020-01-15 08:34:48"
      },
      {
        "time_stamp": "2020-01-15 08:52:43"
      },
      {
        "time_stamp": "2020-01-15 08:54:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "David Duymelinck",
      "poster_handle": "david.duymelinck"
    },
    "time_stamp": "2020-01-15 06:57:14",
    "text": "Even if you encrypt the data, it must be decrypted for javascript to use the access data. The only safe way to keep access data secure is to keep it on the server and create an API that uses the access data."
  },
  {
    "poster": {
      "poster_name": "Marlene Flickinger",
      "poster_handle": "mflickinger"
    },
    "time_stamp": "2020-01-15 07:09:03",
    "text": "Thanks for your quick reply. We are also currently in the process of creating an API between HubSpot and another system. The goal of our forms is to display suggestions from the database of the other system from which the user can choose. But to get these suggestions displayed in the form fields the access data must be retrieved. The requirement is to save the access data on a server as a javascript file and to retrieve them without displaying the access data in the source code. But the question is whether this can be done on our HubSpot server or whether we have to use another server."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-15 07:09:49",
    "text": "how long after the webhook hits are you trying to \"do something\""
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-15 07:09:51",
    "text": "<https://github.com/Automattic/kue>"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2020-01-15 07:10:04",
    "text": "is HubDB an option?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-15 07:10:18",
    "text": "I've used this to timeout requests for a certain amount of time. It places it in a queue."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-15 07:11:49",
    "text": "another way to go about this would be to receive the webhook, append the data to a json file with a timestamp of when it should be run.\n\nHave a cron that runs every x minutes, checks that json file, and if it needs to be run (based upon a time stamp), do that thing.. then remove that line from the json file"
  },
  {
    "poster": {
      "poster_name": "Marlene Flickinger",
      "poster_handle": "mflickinger"
    },
    "time_stamp": "2020-01-15 07:19:05",
    "text": "hm maybe :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-01-15 07:51:32",
    "text": "HubDB is intended to be public so I wouldn’t recommend it here.  The best solution right now is to have this run outside of HubSpot since all the content tools are predicated on being publicly available in some way or another."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-01-15 08:33:40",
    "text": "<@USA7DAYSW> I’ve used AWS Lambada + AWS API Gateway for this in the past, but what <@UKQP9KM8A> mentioned still stands - for javascript on the client side to actually use this data it’ll need to be decrypted at some point. So it will be available to the user to view in memory."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-01-15 08:34:48",
    "edited": {
      "time_stamp": "2020-01-15 08:38:25"
    },
    "text": "When you say “access data” what do you mean? Do you mean username/password combos? In which case i’d recommend you take a different approach. You’ll want to be using a database, one-way hashing for passwords and potentially oauth. It’s possible that using something like Auth0 may be a better, more solution as it supports single-page sign-on (which you can integrate with just JS)"
  },
  {
    "poster": {
      "poster_name": "Marlene Flickinger",
      "poster_handle": "mflickinger"
    },
    "time_stamp": "2020-01-15 08:52:43",
    "text": "By access data I really mean user name and password.\nAnd I thank you very much for your numerous tips. I will check them."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-01-15 08:54:44",
    "edited": {
      "time_stamp": "2020-01-15 08:56:29"
    },
    "text": "Yeah, so don’t store username/passwords in a JS file! Building secure login/credential management is something which requires a fair amount of experience and is a big undertaking (and will absolutely require a server-side solution unless you let a third party handle this, which I would recommend doing!)"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2020-01-15 09:02:33",
    "text": "thanks <@U25PYL3Q8>!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-01-15 09:02:59",
    "text": "the latter is likely easier to implement..if you need some help with it lmk and I can help you figure it out"
  }
]
[
  {
    "poster": {
      "poster_name": "Theodor Dumitriu",
      "poster_handle": "theodor.dumitriu"
    },
    "time_stamp": "2020-07-10 10:05:09",
    "edited": {
      "time_stamp": "2020-07-10 10:11:41"
    },
    "text": "Hi everyone,\nI'm getting this error when I'm using webpack to build the function file that I push in the HubSpot instance :\nTypeError: customerPayload.main is not a function\nNote: the function file runs when it's not the output of webpack. I want to use webpack in order to use other npm modules",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-13 07:35:49"
      },
      {
        "time_stamp": "2020-07-13 08:31:32"
      },
      {
        "time_stamp": "2020-07-13 08:32:12"
      },
      {
        "time_stamp": "2020-07-13 08:33:41"
      }
    ]
  },
  {
    "text": "Here is my webpack config",
    "time_stamp": "2020-07-10 10:05:55"
  },
  {
    "text": "And here is the function file",
    "time_stamp": "2020-07-10 10:06:21"
  },
  {
    "poster": {
      "poster_name": "Theodor Dumitriu",
      "poster_handle": "theodor.dumitriu"
    },
    "time_stamp": "2020-07-10 10:06:40",
    "text": "Any idea anyone ?"
  },
  {
    "poster": {
      "poster_name": "David F Jones",
      "poster_handle": "david568"
    },
    "time_stamp": "2020-07-10 15:37:53",
    "text": "Hey all,\n\nQuick question about authorization. I've currently built a template that uses api keys for authentication for our serverless functions. The key right now is stored inside of secrets. What can I do to make sure that the pages will always have access to run the functions? Lets say a year from now the client resets their api key, then what?\n\nIdeally the way the template could work is that the owner would just grant access the one time and then the backend would handle all connections after that for them",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-07-13 09:03:08"
      }
    ]
  }
]
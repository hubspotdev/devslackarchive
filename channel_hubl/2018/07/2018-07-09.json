[
  {
    "text": "Is somebody know why I don’t have any waiting time (30s) before submission ?",
    "time_stamp": "2018-07-09 07:25:11"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 08:06:11",
    "text": "I usually go the |cut|cut|cut route if I have multiple things to strip"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 08:07:09",
    "text": "if you know you need to remove a substring, you can also use python ranges string[x:n]"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 08:07:40",
    "text": "I’ve used this to pretty neat effect in removing a first character from each string in a for loop but I can imagine a LOT of neat use cases for it"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-07-09 09:19:44",
    "text": "Any ideas ?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-07-09 13:57:44"
      },
      {
        "time_stamp": "2018-07-09 14:13:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-07-09 09:20:41",
    "text": "maybe because you're using the onFormReady callback"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-07-09 09:21:10",
    "edited": {
      "time_stamp": "2018-07-09 09:21:19"
    },
    "text": "did you mean to use the `onFormSubmit` callback?"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-07-09 09:30:38",
    "edited": {
      "time_stamp": "2018-07-09 09:30:49"
    },
    "text": "I just try also with onFormSubmit but I have the same issue\nMy form is submitted without waiting :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-07-09 09:32:10",
    "text": "preventDefault isn’t working maybe?"
  },
  {
    "poster": {
      "poster_name": "Marco",
      "poster_handle": "mbevacqua"
    },
    "time_stamp": "2018-07-09 09:36:17",
    "edited": {
      "time_stamp": "2018-07-09 09:36:22"
    },
    "text": "<https://developers.HubSpot.com/docs/methods/forms/advanced_form_options>\n&gt; onFormSubmit\n&gt; Callback that executes after form is validated, just before the data is actually sent. This is for any logic that needs to execute during the submit. Any changes will not be validated. Takes the jQuery form object as the argument: onFormSubmit($form)\n\nthere's no way to prevent/delay the submissions with the existing events.\nWe're investigating adding support for this."
  },
  {
    "poster": {
      "poster_name": "Laura Mauersberger",
      "poster_handle": "laura.mauersberger"
    },
    "time_stamp": "2018-07-09 09:41:33",
    "text": "Hi, I had a similar problem where I wanted some calculations to be done with the data the lead typed in and shown on the next website.\nIf this is your issue, it can be solved with creating a forward address to create  a fake delay. \nIt would kind of look like: Form submit--&gt; go to website with \"loading image\" --&gt; forward after 10 seconds to results URL"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2018-07-09 12:25:32",
    "text": "Is there any type of cropping or thumbnailing that we can do with hubl? I have a custom image gallery module and I'm using the image field. I'd like to add some sizing to the code so all images are the same size. The images are also very large in file size, so if there was a smaller thumbnail version of the image, that would help with page speed.",
    "reply_count": 11,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-07-09 12:26:50"
      },
      {
        "time_stamp": "2018-07-09 12:29:56"
      },
      {
        "time_stamp": "2018-07-09 12:30:48"
      },
      {
        "time_stamp": "2018-07-09 12:31:07"
      },
      {
        "time_stamp": "2018-07-09 12:31:29"
      },
      {
        "time_stamp": "2018-07-09 12:31:45"
      },
      {
        "time_stamp": "2018-07-09 12:31:46"
      },
      {
        "time_stamp": "2018-07-09 12:31:56"
      },
      {
        "time_stamp": "2018-07-09 12:32:28"
      },
      {
        "time_stamp": "2018-07-09 12:34:05"
      },
      {
        "time_stamp": "2018-07-09 12:41:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2018-07-09 12:26:50",
    "text": "I could use CSS to control the image sizes, using object-fit, but was curious if there was another way. That also doesn't solve the 2nd part of my problem which is the large file size."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-09 12:29:56",
    "edited": {
      "time_stamp": "2018-07-09 12:30:18"
    },
    "text": "there’s the image resize HubL function"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-09 12:30:48",
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#resize-image-url>"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 12:31:07",
    "text": "beat us to it"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-09 12:31:29",
    "text": "Too slow!"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 12:31:45",
    "text": "You’re not getting cropping out of this though :wink: so you’ll have to find another way to handle that"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-09 12:31:46",
    "text": "That function doesn't do any cropping, it just scales"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-09 12:31:56",
    "text": "Damn"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-09 12:32:28",
    "text": "You can kind of \"cheat\" cropping by making it a background image"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 12:34:05",
    "text": "This is what I’ve traditionally done as well"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2018-07-09 12:41:26",
    "text": "That's what I was afraid of. I will have to squeeze out as much image compression as I can and do the crop with CSS. Thanks for the confirmation, guys!"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-07-09 13:57:44",
    "text": "You might try to hide the default button and programaticly trigger the form using your own button."
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2018-07-09 14:13:41",
    "text": "Thanks Chad ç"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-07-09 14:30:20",
    "text": "Is there any way to get a module to print code into the &lt;head&gt;? I am trying to create a custom module where I can enter the Google Tag Manager Id and get it to print the code at the top of the &lt;head&gt;.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-07-09 14:33:52"
      },
      {
        "time_stamp": "2018-07-09 14:34:28"
      },
      {
        "time_stamp": "2018-07-09 14:36:41"
      },
      {
        "time_stamp": "2018-07-09 14:37:04"
      },
      {
        "time_stamp": "2018-07-09 14:42:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 14:33:52",
    "text": "Have you tried putting the module reference in the header of the code?"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-07-09 14:34:28",
    "text": "Yes, it gets wrapped in a &lt;div&gt; and breaks the head."
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-09 14:36:41",
    "text": "try adding a no_wrapper=True to the declaration of the module in the code"
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-07-09 14:37:04",
    "text": "thanks, I'll try that."
  },
  {
    "poster": {
      "poster_name": "Steve Kenley",
      "poster_handle": "skenley"
    },
    "time_stamp": "2018-07-09 14:42:39",
    "text": "That worked. Thank you!"
  },
  {
    "poster": {
      "poster_name": "normschurdell",
      "poster_handle": "normschurdell"
    },
    "time_stamp": "2018-07-09 17:00:36",
    "text": "We have custom rich text module that is in our blog template, but in the simple list view it returns a zero “0”, has anyone seen this before?"
  }
]
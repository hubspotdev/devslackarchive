[
  null,
  null,
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2019-01-07 05:57:46",
    "text": "<@UF718CZ0A> this might help you - <https://aerolab.github.io/readremaining.js/>"
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-07 12:39:50",
    "text": "Has anyone been able to successfully set up custom modules on Hubl Local Server? I’ve followed all the tutorials I’ve been able to find, and I can get the pages and standard modules to load, but my Design Manager-created custom modules aren’t loading.",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-01-07 12:55:08"
      },
      {
        "time_stamp": "2019-01-07 14:43:01"
      },
      {
        "time_stamp": "2019-01-07 14:51:44"
      },
      {
        "time_stamp": "2019-01-07 16:58:59"
      },
      {
        "time_stamp": "2019-01-08 10:10:18"
      },
      {
        "time_stamp": "2019-01-08 11:16:21"
      },
      {
        "time_stamp": "2019-01-08 14:00:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-07 12:40:23",
    "text": "I’ve seen past comments saying they weren’t supported, but also 2018 comments saying it does work now."
  },
  null,
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-01-07 12:55:08",
    "text": "Hi <@UF8D6BJCA> - these might help: <https://designers.HubSpot.com/blog/the-refreshed-local-hubl-server-is-now-available>\n\n<https://community.HubSpot.com/t5/CMS-Development/Can-you-setup-local-development-on-HubSpot-CMS/td-p/199430>\n\nI'd recommend reposting in <#CBZK16L9L|ftp-feedback> to see if they have some ideas."
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-07 14:25:33",
    "text": "You could implement a domain check, so that the hubdb stuff only runs on a specific domain"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-07 14:26:17",
    "text": "so when you are in the editor, it isn't being used, but on a live page it is. I've had to do that with some javascript stuff as well as hubl stuff as it was causing issues with the page editor working properly"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-07 14:26:34",
    "text": "Was going to suggest but I was trying to remember how I’ve done this before but couldn’t remember. I’ve done this to get around something crazy I was doing"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-07 14:27:11",
    "text": "`{% if request.domain == '<http://www.livedomain.com|www.livedomain.com>' %}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-07 14:27:38",
    "text": "I'm not sure how `request.domain` actually works at the moment, so you might be better doing something like this first:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-07 14:27:58",
    "text": "`&lt;h1&gt;{{ request.domain|pprint }}&lt;/h1&gt;` on the page"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-07 14:28:47",
    "text": "And that is literally the best way to figure out what data you are seeing in any variables -- throwing an h1 with the hubl value pprint -- very easy to see the actual data you are working with instead of guessing if the data matches or not"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-07 14:29:01",
    "text": "Let me know if you need any help with it"
  },
  {
    "poster": {
      "poster_name": "Brian Krainer",
      "poster_handle": "bkrainer"
    },
    "time_stamp": "2019-01-07 14:43:01",
    "text": "i'm assuming your custom modules are in the `.module` directory structure that is delivered by FTP. unfortunately, the current version of the local hubl server doesn't support this format (yet)"
  },
  {
    "poster": {
      "poster_name": "Brian Krainer",
      "poster_handle": "bkrainer"
    },
    "time_stamp": "2019-01-07 14:51:44",
    "edited": {
      "time_stamp": "2019-01-08 06:55:43"
    },
    "text": "the current version _does_ support these modules, but they need to be in a JSON format (in a file named `&lt;module_id&gt;.json`) in the `modules` directory"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-07 15:46:04",
    "text": "Anyway when using the CTA module to just grab the URL of the CTA?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-07 15:46:30",
    "text": "like `{{cta.url}}` or something, doesnt appear so but wasnt sure if others may have done this"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-01-07 16:58:59",
    "text": "cc <@UF8D6BJCA>"
  },
  {
    "poster": {
      "poster_name": "Hieu Nguyen",
      "poster_handle": "trunghieu.nth"
    },
    "time_stamp": "2019-01-07 20:31:15",
    "text": "<@U2H3TT8F2> ```{% set splitArray = cta('{{ module.cta_field }}')|split('href=\"', 2) %}\n{% set CTAUrlNameArray = splitArray[1]|split('alt=\"', 2) %}\n{% set CTAUrlArray = CTAUrlNameArray[0]|split('\"', 2) %}\n{% set CTANameArray = CTAUrlNameArray[1]|split('\"', 2) %}\n{% set CTAUrl = CTAUrlArray[0] %}\n{% set CTAName = CTANameArray[0] %}``` here"
  },
  {
    "poster": {
      "poster_name": "Hieu Nguyen",
      "poster_handle": "trunghieu.nth"
    },
    "time_stamp": "2019-01-07 20:33:10",
    "text": "but tracking of button will be not work :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Hieu Nguyen",
      "poster_handle": "trunghieu.nth"
    },
    "time_stamp": "2019-01-07 20:35:29",
    "text": "I don’t like CTA button because it’s so hard to responsive",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-08 07:58:45"
      },
      {
        "time_stamp": "2019-01-11 23:16:56"
      }
    ]
  },
  null,
  null
]
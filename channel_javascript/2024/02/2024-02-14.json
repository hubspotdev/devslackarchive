[
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-02-14 06:22:39",
    "text": "HTML raw allows you to control the css styling yourself instead of the embedded form that forces it's own.  So javascript access to elements makes sense I think because it's sent in  a raw form.  Good luck with your launch!"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2024-02-14 06:37:55",
    "text": "any splidejs fans in here?",
    "reply_count": 7,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2024-02-14 06:38:33"
      },
      {
        "time_stamp": "2024-02-14 06:39:25"
      },
      {
        "time_stamp": "2024-02-14 06:40:14"
      },
      {
        "time_stamp": "2024-02-14 06:41:06"
      },
      {
        "time_stamp": "2024-02-14 06:41:42"
      },
      {
        "time_stamp": "2024-02-14 18:37:04"
      },
      {
        "time_stamp": "2024-02-17 23:46:05"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-02-14 06:38:33",
    "text": ":andreas:"
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2024-02-14 06:39:25",
    "text": ":hand:"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-02-14 06:40:14",
    "text": "ohhh the premium looks fancy: <https://splidejs.com/premium/>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2024-02-14 06:41:06",
    "text": "I started <https://github.com/Splidejs/splide/discussions/1276|a discussion in their repo on converting scss to custom properties>. If y’all think this would be helpful to you then feel free to add to the discussion or upvote my idea"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-02-14 06:41:42",
    "text": "sounds like a great idea"
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2024-02-14 08:18:30",
    "text": "Recommend taking a look through the documentation <https://legacydocs.HubSpot.com/docs/methods/forms/advanced_form_options|here>, if you haven’t already done so. But even then, in order to use the callbacks I’m pretty sure you do indeed need to have the form set as raw HTML."
  },
  {
    "poster": {
      "poster_name": "Evan Hessler",
      "poster_handle": "evan568"
    },
    "time_stamp": "2024-02-14 10:14:51",
    "text": "Hi everyone! I am embedding HubSpot's Meeting on my website. After the person books a meeting I want to redirect them to a dynamic URL (i.e. <http://test.com?name=John|test.com?name=John>) so I can display dynamic content on it. Anyone know if that is possible? I asked GPT the same and it gave me this.\n\n&lt;script type=\"text/javascript\"&gt;\n  window.hsConversationsSettings = {\n    meetingsBooked: [{\n      meetingId: \"YOUR_MEETING_ID\",\n      onMeetingBooked: function(meetingDetails) {\n        // Extract attendee's first name from the meeting details\n        var firstName = meetingDetails.attendees[0].firstName;\n\n        // Construct your dynamic URL\n        var redirectUrl = \"<https://test.com?name=>\" + encodeURIComponent(firstName);\n\n        // Redirect to the dynamic URL\n        window.location.href = redirectUrl;\n      }\n    }]\n  };\n&lt;/script&gt;\n\nObviously this could be completely wrong (tested and it didn't work), but I am now wondering if it might be on to something and there might be an onMeetingBooked callback that I am not aware of."
  },
  {
    "poster": {
      "poster_name": "Richard Owens",
      "poster_handle": "rich151"
    },
    "time_stamp": "2024-02-14 14:54:58",
    "text": "Yeah that was it, raw html and it worked fine"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2024-02-14 18:37:04",
    "text": ":eyes:"
  }
]
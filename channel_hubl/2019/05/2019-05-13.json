[
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-13 07:16:32",
    "text": "Hey <@U22PJPGK0> just missed you last Friday."
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-13 07:16:48",
    "text": "I'll DM you with  more information"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-13 07:33:42",
    "text": "<@U7SL518D6> Yeah, a function like that would be incredible for something like this"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-05-13 08:51:49",
    "text": "It sounds like what you want is to show a \"related\" blog post. There's a tag for that, Blog related posts. <https://designers.HubSpot.com/docs/hubl/hubl-supported-tags>"
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-05-13 09:26:16",
    "text": "`{% related_blog_posts %}` is there someone else who has problem with the tag? It returns 0 posts.",
    "reply_count": 10,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-05-13 09:44:26"
      },
      {
        "time_stamp": "2019-05-13 09:44:50"
      },
      {
        "time_stamp": "2019-05-13 10:04:05"
      },
      {
        "time_stamp": "2019-05-13 10:04:32"
      },
      {
        "time_stamp": "2019-05-13 23:45:07"
      },
      {
        "time_stamp": "2019-05-16 02:42:22"
      },
      {
        "time_stamp": "2019-05-16 02:42:36"
      },
      {
        "time_stamp": "2019-05-16 02:43:06"
      },
      {
        "time_stamp": "2019-05-16 10:08:32"
      },
      {
        "time_stamp": "2019-05-16 10:09:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Archie Makuwa",
      "poster_handle": "archie.makuwa"
    },
    "time_stamp": "2019-05-13 09:44:26",
    "text": "I haven't touched this in ages - just made a come back a few hours ago.\n\nI think you need to parse parameters with the HUBL tag.\n\nE.g. ```{% related_blog_posts blog_ids=\"3241539189,3261083894\", limit=6 %}```"
  },
  {
    "poster": {
      "poster_name": "Archie Makuwa",
      "poster_handle": "archie.makuwa"
    },
    "time_stamp": "2019-05-13 09:44:50",
    "text": "I could be wrong. Try that and comment if it doesn't work."
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-13 10:04:05",
    "text": "if it's not within a standard blog module, that would be correct. You'll need the blog ID. The output will be a standard featured image/contents, but you can use the \"post_formatter\" and a macro to get it to sit within your own format"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2019-05-13 10:04:32",
    "text": "I'm working with it right now with my own issue, so if you need some reference posts... I have a slew of tabs open..."
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-05-13 10:28:54",
    "text": "Hi, anyone know how I can change the language when I use datetimeformat?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 11:19:15",
    "text": "<@UG9BM5VEG>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 11:19:23",
    "text": "Explain what your trying to do ?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-13 11:38:51"
      },
      {
        "time_stamp": "2019-05-13 11:47:44"
      },
      {
        "time_stamp": "2019-05-13 11:47:45"
      },
      {
        "time_stamp": "2019-05-13 11:48:41"
      },
      {
        "time_stamp": "2019-05-13 11:49:18"
      },
      {
        "time_stamp": "2019-05-13 16:23:08"
      },
      {
        "time_stamp": "2019-05-13 16:23:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-05-13 11:38:51",
    "text": "I try to print the month, but I need the month are in spanish"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 11:47:44",
    "text": "'%B'"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 11:47:45",
    "text": "Month as locale’s full name."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 11:48:41",
    "text": "Depends on your locale"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 11:49:18",
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-filters#datetimeformat>"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:22:04",
    "text": "Is it possible to use a dynamic variable in hubl? like settings[clientId].logo?",
    "reply_count": 30,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-13 12:25:40"
      },
      {
        "time_stamp": "2019-05-13 12:32:09"
      },
      {
        "time_stamp": "2019-05-13 12:32:40"
      },
      {
        "time_stamp": "2019-05-13 12:34:37"
      },
      {
        "time_stamp": "2019-05-13 12:37:05"
      },
      {
        "time_stamp": "2019-05-13 12:38:21"
      },
      {
        "time_stamp": "2019-05-13 12:38:37"
      },
      {
        "time_stamp": "2019-05-13 12:40:49"
      },
      {
        "time_stamp": "2019-05-13 12:41:27"
      },
      {
        "time_stamp": "2019-05-13 12:45:13"
      },
      {
        "time_stamp": "2019-05-13 12:47:25"
      },
      {
        "time_stamp": "2019-05-13 12:48:24"
      },
      {
        "time_stamp": "2019-05-13 12:52:12"
      },
      {
        "time_stamp": "2019-05-13 12:54:05"
      },
      {
        "time_stamp": "2019-05-13 12:54:51"
      },
      {
        "time_stamp": "2019-05-13 12:54:52"
      },
      {
        "time_stamp": "2019-05-13 12:55:07"
      },
      {
        "time_stamp": "2019-05-13 13:02:35"
      },
      {
        "time_stamp": "2019-05-13 13:02:39"
      },
      {
        "time_stamp": "2019-05-13 13:03:20"
      },
      {
        "time_stamp": "2019-05-13 13:06:11"
      },
      {
        "time_stamp": "2019-05-13 13:10:17"
      },
      {
        "time_stamp": "2019-05-13 13:10:39"
      },
      {
        "time_stamp": "2019-05-13 13:11:10"
      },
      {
        "time_stamp": "2019-05-13 13:11:20"
      },
      {
        "time_stamp": "2019-05-13 13:11:41"
      },
      {
        "time_stamp": "2019-05-13 13:12:11"
      },
      {
        "time_stamp": "2019-05-13 13:12:30"
      },
      {
        "time_stamp": "2019-05-13 13:13:22"
      },
      {
        "time_stamp": "2019-05-13 13:14:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 12:25:40",
    "edited": {
      "time_stamp": "2019-05-13 12:25:56"
    },
    "text": "not quite in the fashion you’re explaining but you can get the current sites logo. forgot the exact code but you can find it easily by opening developer info on any HS page and searching for Logo\n\nShould be up at the top, something like `{{content.domain_settings.logo_src}}`"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:32:09",
    "text": "This is for an email template... hubl has no way to use a dynamic setting?"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:32:40",
    "text": "I mean dynamic variable, not setting. Like you cant use a variable to access a variable?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 12:34:37",
    "text": "the method above would work in an email.\n\nAre you trying to send an email from 1 HubSpot portal but show other portals logos for some reason?"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:37:05",
    "text": "I have a list of like 50 clients, each with their own colors, logos, mailing address, etc.  I also have a few thousand users per client.\n\nI've imported the users, and each user has a clientId field, which represents the client the user is a part of.\n\nSo I need to access the settings like:\n\n{{settings[clientId].images.logo}}\n{{settings[clientId].colors.primary}}"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 12:38:21",
    "text": "right but my question is are you sending from 1 portal, or are you going into each portal to send from?\n\nIf you’re sending from each portal, then you’d want to get the current portals logo."
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:38:37",
    "text": "1 portal"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 12:40:49",
    "text": "eek. that’s probably bad for can spam but if you want to go that route I would create a few arrays with the data you need (logo src’s, widths, colors etc.) have a master array with all of the portal ids.\n\nThen you would set variables you will use based on the current portal id. so you would be able to output those things like {{currentlogo}}"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 12:41:27",
    "text": "The more technically right way to do it would be to send from the portals themselves."
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:45:13",
    "text": "OK it sounds like I'm doing it wrong/missing something.\n\nSo I have an app, I don't charge per user, but per client. Clients have their own users who can login to the app.\n\nThe app sends out emails to users per client, on behalf of the app, like \"welcome to the app\", \"welcome to week 2\", etc., but it shows custom colors/logos to the user based on which client the user signed up with.\n\nAre you saying I need to create a portal for each client that signs up with my app? Is that an additional HubSpot account? I think all my profit would suddenly go to HubSpot and my app would shutdown if that is the case :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 12:47:25",
    "edited": {
      "time_stamp": "2019-05-13 12:47:46"
    },
    "text": "This info is kinda critical, your initial question didn’t have that.\n\n*First do all of your clients have a HubSpot account/portal?*"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:48:24",
    "text": "No, they know nothing about HubSpot. I'm using HubSpot to send out emails and gather analytics on responses."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 12:52:12",
    "text": "okay then the entire premise of using portal id’s is completely pointless, because your clients don’t have portals to get that data FROM.\n\nYou could create arrays in your email template with all of that data in it. and use vars like I said.\n\nThe footer CAN SPAM text for unsubscribe and whatnot, must include your portal’s info. You might be able to hide it and visually display your client’s instead. (ALL email marketing service providers have this requirement because it is against the law to not include unsubscribe text and an address.)"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:54:05",
    "text": "Oh I am fine with displaying CAN SPAM stuff. These emails don't look like they come from each client... The clients are more like \"teams\", the emails look very clearly like they come from my app, but they have custom colors and images based on which client the user selected."
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:54:51",
    "text": "Are you saying do something like this?"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:54:52",
    "text": "{%\nset data = {\n  team1: {\n    colors: {\n      primary: '#e32726',\n      secondary: '#0072c2',\n      tertiary: '#ffffff'\n    },\n  },\n  team2: {\n    colors: {\n      primary: '#028eda',\n      secondary: '#00609d',\n      tertiary: '#ffffff'\n    }\n  }\n}\n\n%}"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 12:55:07",
    "text": "and then access data.team1.colors.primary?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 13:02:35",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 13:02:39",
    "text": "exactly that sorta thing"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 13:03:20",
    "text": "OK thank you. How do I swap out the team1 part for team2?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 13:06:11",
    "edited": {
      "time_stamp": "2019-05-13 13:06:32"
    },
    "text": "well I would probably do that by having a HubL text field in the email template, and depending on if you’re sending these emails manually or automatically I would populate that text field with the team name/id\n\nThen you have a couple ways you can get the team’s vars\n\nsomething like `data[teamname]`\n\nor using `data|select(teamname)`"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 13:10:17",
    "text": "ok thank you. Is it true you can only have 1 line of code in each {% %} section? If I add 2 lines they don't seem to execute"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 13:10:39",
    "text": "correct, each statement needs to be separate"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 13:11:10",
    "text": "ah. ok thank you sir"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 13:11:20",
    "text": ":+1::heart:"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 13:11:41",
    "text": "You've been a stupendously great help."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 13:12:11",
    "text": "if you’re concerned about whitespace characters between your HubL or something you can do this: `{%-` and `-%}` they strip out whitespace before, after or both if you use both around your HubL"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 13:12:30",
    "text": "ok thank you, another great tip! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-13 13:13:22",
    "text": "and if you plan to do more with HubSpot, this will likely come in handy: <https://chrome.google.com/webstore/detail/gebemkdecnlgbcanplbgdpcffpdnfdfo>"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 13:14:56",
    "text": "Awesome thank you"
  },
  {
    "poster": {
      "poster_name": "Nick Steele",
      "poster_handle": "nick.steele"
    },
    "time_stamp": "2019-05-13 15:06:58",
    "text": "I have a weird issue. if I set a variable in hubl using \"{% set client = 'c' ~ contact.parent_organization_id %}\n\nand then later do a compare using \"{% if client == 'c1' %}\"\n\nIt works in template preview mode if I specifically set client = 'c1', but when I preview a contact in an email to send out, client does appear to be 'c1' (outputting {{client}} shows this), but the compare does not detect the variable as 'c1' when set using the actual contact.parent_organization_id, even if that value is 1.\n\nDoes anyone know what could be causing this? Does hubl allow strings to look identical, but somehow still not be identical if doing a compare?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 15:21:12",
    "text": "can we see the page?"
  },
  {
    "poster": {
      "poster_name": "Diego Valle",
      "poster_handle": "dvalle"
    },
    "time_stamp": "2019-05-13 16:23:08",
    "text": "thankyou"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-13 16:23:29",
    "text": "Yeah no problem"
  },
  {
    "poster": {
      "poster_name": "Simon Lafis",
      "poster_handle": "simon"
    },
    "time_stamp": "2019-05-13 23:45:07",
    "edited": {
      "time_stamp": "2019-05-13 23:46:56"
    },
    "text": "I have tried to add some parmameters but still return 0 posts.\n\n`{% related_blog_posts blog_ids=\"6369544789\",  limit=5 %}`"
  }
]
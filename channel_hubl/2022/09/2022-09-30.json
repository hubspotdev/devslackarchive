[
  {
    "poster": {
      "poster_name": "Ayaz Madhiya",
      "poster_handle": "madhiya.ayaz"
    },
    "time_stamp": "2022-09-30 01:19:28",
    "text": "<@UQWGKUEN7> my filter is not working because Option value has comma separator inside value.\nWhile comma is used as separate value in string."
  },
  {
    "poster": {
      "poster_name": "Neil Junsan",
      "poster_handle": "neiljunsan09"
    },
    "time_stamp": "2022-09-30 03:43:54",
    "text": "Found some codes online here all,\n\n```{% set associated_deals = crm_associations( module.company.id, 'HubSpot_DEFINED', 6, 'limit=100&amp;orderBy=event_date', 'dealname,event_date,hs_object_id,associated_contact_id') %} \n\n// Create list to append contact ID's to\n{% set contactidlist = [] %}\n\n// Append to Contact ID List a list of unique contact ID's\n{% for deal in associated_deals.results %}\n  {% if contactidlist is not containing deal.associated_contact_id %}\n    {% do contactidlist.append(deal.associated_contact_id) %}\n  {% endif %}\n{% endfor %}\n\n// Request all Contacts Associated with Company\n{% set all_contacts = crm_associations( module.company.id, 'HubSpot_DEFINED', 2, 'limit=260&amp;orderBy=firstname', 'firstname, lastname, hs_object_id') %} \n\n// Compare the Contacts results with contactidlist and only action results that match\n{% for contact in all_contacts.results %}\n  {% if contactidlist is containing contact.hs_object_id %}\n    // Do stuff with contact records\n  {% endif %}\n{% endfor %}```\n"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-09-30 06:02:41",
    "text": "Did you try changing the spaces to hyphens?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-30 07:53:31",
    "edited": {
      "time_stamp": "2022-09-30 07:55:05"
    },
    "text": "<@U0427CEV6BD> I don't know your use case but I think it's a little sketch to have this info on a web page. That being said, deals aren't associated to pipelines, the pipeline is a property on a the deal object. So you would need to pull in all the deals using a filter. Using HubL you can pull in 100 of these at a time. This code will pull in and display the deals:\n```{% set objects = crm_objects(\"deal\", \"pipeline=default&amp;limit=3\", \"name\") %}\n{{ objects }}```",
    "reply_count": 26,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-10-03 02:30:53"
      },
      {
        "time_stamp": "2022-10-03 02:49:28"
      },
      {
        "time_stamp": "2022-10-03 07:00:54"
      },
      {
        "time_stamp": "2022-10-03 07:02:13"
      },
      {
        "time_stamp": "2022-10-03 08:03:10"
      },
      {
        "time_stamp": "2022-10-03 08:04:40"
      },
      {
        "time_stamp": "2022-10-03 08:04:44"
      },
      {
        "time_stamp": "2022-10-03 08:05:20"
      },
      {
        "time_stamp": "2022-10-03 08:05:24"
      },
      {
        "time_stamp": "2022-10-03 08:05:30"
      },
      {
        "time_stamp": "2022-10-04 09:17:48"
      },
      {
        "time_stamp": "2022-10-04 09:18:13"
      },
      {
        "time_stamp": "2022-10-04 09:19:27"
      },
      {
        "time_stamp": "2022-10-04 09:19:54"
      },
      {
        "time_stamp": "2022-10-04 09:20:06"
      },
      {
        "time_stamp": "2022-10-04 09:20:14"
      },
      {
        "time_stamp": "2022-10-04 09:30:32"
      },
      {
        "time_stamp": "2022-10-04 09:32:14"
      },
      {
        "time_stamp": "2022-10-04 09:32:59"
      },
      {
        "time_stamp": "2022-10-04 09:33:14"
      },
      {
        "time_stamp": "2022-10-05 01:26:48"
      },
      {
        "time_stamp": "2022-10-05 01:41:38"
      },
      {
        "time_stamp": "2022-10-05 07:48:38"
      },
      {
        "time_stamp": "2022-10-05 07:49:48"
      },
      {
        "time_stamp": "2022-10-05 07:49:55"
      },
      {
        "time_stamp": "2022-10-05 08:09:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-30 07:54:38",
    "text": "Obviously set the change \"default\" to the pipeline you want to filter by."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-09-30 08:09:10",
    "text": "<@U01D4JTE8R4> I see, yes commas are trying to get the filter to show multiple results. In this case you should use the id’s of the options instead."
  },
  {
    "poster": {
      "poster_name": "Ayaz Madhiya",
      "poster_handle": "madhiya.ayaz"
    },
    "time_stamp": "2022-09-30 08:36:39",
    "text": "how to use id inside filter instead of label?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-09-30 08:40:31",
    "text": "You will have to grab the Column info for that column `{{hubdb_table_column( talbeId, columnName)}}`, Then you will be able to see the id’s of the options, I am pretty sure they are just numerically indexed by position in the column.  You can just use those numbers then `{{hubdb_table_rows(tableID, 'column=1')}}`"
  },
  {
    "poster": {
      "poster_name": "Ayaz Madhiya",
      "poster_handle": "madhiya.ayaz"
    },
    "time_stamp": "2022-09-30 08:50:25",
    "text": "ok, I will try this."
  },
  {
    "poster": {
      "poster_name": "Christian Gubaton",
      "poster_handle": "christian310"
    },
    "time_stamp": "2022-09-30 23:31:57",
    "text": "thanks for responding , I already solve it . Actually it is to show only the future events or upcoming events filterly for the specific page"
  }
]
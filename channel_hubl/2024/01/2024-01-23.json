[
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2024-01-23 03:07:49",
    "text": "<@UDHT6N5SM> Why do you need specific Button tag? If css incase then you can copy the the existing css with button tag and make it useful for input[type=\"submit\"]"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-23 06:14:02",
    "text": "<@U25PYL3Q8> <@U022YD6LGAU> I need to use :before and :after pseudo selectors which aren't supported with input"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2024-01-23 06:24:28",
    "text": "<@UDHT6N5SM> On form load you can wrap input into div and use psuedo in that div"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-23 06:49:56",
    "text": "yea, that's an interesting idea. There's already a `.actions` div that wraps the input. I wonder if that's safe to use. In any case. It feels slightly wrong for my purposes but I appreciate the feedback/ideas"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2024-01-23 06:51:02",
    "text": "Yes you can use that and make sure to remove block property from that div"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-01-23 06:56:33",
    "text": "great stuff here!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Zmudzinski",
      "poster_handle": "nzmudzinski"
    },
    "time_stamp": "2024-01-23 07:55:47",
    "text": "<@U039PUBV59N> That seems to have done the trick for getting the properties to query in, but surprisingly I'm still getting the same result in testing. For example contact.recommended_project_id_2 corresponds to a Project record that has in its project.project_status__checkbox_ property a value of \"Unsearchable\" yet the logic I wrote doesn't appear to be working to pull it out of the email content. Any ideas?"
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2024-01-23 09:23:04",
    "text": "strange - I’m assuming they’re both the same field types, right? e.g. the Project and corresponding Contact property are both single line text. And is the part of the code responsible for the piece you’re talking about isn’t in the code snippet you shared earlier? The fact the Project has “checkbox” in its name suggests they may differ, which could lead to comparison issues."
  }
]
[
  {
    "poster": {
      "poster_name": "James Kupczak",
      "poster_handle": "jimmykup"
    },
    "time_stamp": "2024-11-10 10:17:26",
    "text": "What I’ve come to learn so far (using `&amp;hsDebugOnly=true&amp;` on a published email) is that the following stats don’t directly contribute to this issue. At least not in a way that is significant.\n\n• `Total Request Time`\n• `Build Render Context`\n• `Render View`\nAll of these calculate how long it took an email to be built/rendered (measured in `ms`). Using my custom template I added repeatable blocks until the HubSpot UI told me that the email was too large. For my custom template this came to a total of 28 blocks.\n\nIn my first test each and every block consisted of a very simple rich text field. After publishing the email and viewing the debug stats, I saw that it took at it’s highest, around `678ms` to render.\n\nThen, using the same email template, I removed all 28 blocks and added back 28 more that generated different code. This other block was much more complex with a lot more HTML and HubSpot fields. Despite the large difference in the blocks, my template also capped out at 28 blocks before HubSpot told me it couldn’t save the file anymore.\n\nDebugging this version of my email showed me a render view time of `4,518ms` at it’s highest. Wayyyy more than my much simple email. And yet both versions of the email maxed out at 28 repeatable blocks.\n\nSo while it’s great to know the complexity of my code doesn’t directly contribute to the total email size, this does leave me questioning what I _can_ do to keep my email size low.\n\n_(and to be clear, the email size issue I am facing right now is not at all related to the final HTML email code size that is often highlighted as an issue with the Gmail inbox)_"
  }
]
[
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:39:30",
    "text": "Hey all, seems I too am getting the 429 rate limit on my automated workflow. I’ve combed through docs and forums and have seen a few things, but nothing that is concrete on answering how I might be able to solve my workflow.\n\nCan someone from the HubSpot dev team help understand why enrollments would all trigger simultaneously? If rate limits are in place from both the number of concurrent requests + a time restriction on 20s / 128mb per custom code action, how does one ever not reach rate limits when enrollments are more than just a handful? I would have thought that enrollments logically go sequential, not async.\n\nAny input here on solutions would be greatly appreciated! :slightly_smiling_face:",
    "reply_count": 30,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-10-01 11:41:56"
      },
      {
        "time_stamp": "2024-10-01 11:42:34"
      },
      {
        "time_stamp": "2024-10-01 11:43:14"
      },
      {
        "time_stamp": "2024-10-01 11:44:09"
      },
      {
        "time_stamp": "2024-10-01 11:44:37"
      },
      {
        "time_stamp": "2024-10-01 11:45:15"
      },
      {
        "time_stamp": "2024-10-01 11:45:25"
      },
      {
        "time_stamp": "2024-10-01 11:45:41"
      },
      {
        "time_stamp": "2024-10-01 11:45:42"
      },
      {
        "time_stamp": "2024-10-01 11:45:51"
      },
      {
        "time_stamp": "2024-10-01 11:46:17"
      },
      {
        "time_stamp": "2024-10-01 11:46:54"
      },
      {
        "time_stamp": "2024-10-01 11:47:40"
      },
      {
        "time_stamp": "2024-10-01 11:48:02"
      },
      {
        "time_stamp": "2024-10-01 11:48:05"
      },
      {
        "time_stamp": "2024-10-01 11:48:25"
      },
      {
        "time_stamp": "2024-10-01 11:49:56"
      },
      {
        "time_stamp": "2024-10-01 11:50:57"
      },
      {
        "time_stamp": "2024-10-01 11:51:18"
      },
      {
        "time_stamp": "2024-10-01 11:51:22"
      },
      {
        "time_stamp": "2024-10-01 11:51:28"
      },
      {
        "time_stamp": "2024-10-01 11:52:05"
      },
      {
        "time_stamp": "2024-10-01 11:52:15"
      },
      {
        "time_stamp": "2024-10-01 11:52:20"
      },
      {
        "time_stamp": "2024-10-01 11:52:23"
      },
      {
        "time_stamp": "2024-10-01 11:52:33"
      },
      {
        "time_stamp": "2024-10-01 11:52:37"
      },
      {
        "time_stamp": "2024-10-01 11:53:04"
      },
      {
        "time_stamp": "2024-10-01 11:53:07"
      },
      {
        "time_stamp": "2024-10-01 11:53:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:41:56",
    "text": "So I think this might be a slightly different problem, I believe you're hitting the API limits while running custom coded actions in workflows not using the workflows api"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:42:34",
    "text": "Correct, sorry, just realized this is the wrong channel"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:43:14",
    "text": "You're totally good, I do have a solution to your problem though. I created a workflow action to throttle the enrollments for workflows and slowly release them on a specified rate."
  },
  {
    "text": "Allows you to specify the number of objects you want to run through the workflow for any given interval",
    "time_stamp": "2024-10-01 11:44:09"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:44:37",
    "text": "EX: 10 objects every 1 second. 5 objects every 2 mins. etc etc"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:45:15",
    "text": "Woah, how did i miss throttling as an option!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:45:25",
    "text": "it's a custom tool I built"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:45:41",
    "text": "lol.. got it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:45:42",
    "text": "I'll DM you a link to the install"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:45:51",
    "text": "dope! Thank you!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:46:17",
    "edited": {
      "time_stamp": "2024-10-01 11:46:24"
    },
    "text": "currently have ~30 accounts using it while it's in beta, going to release publicly in just a bit. It's entirely free and open source"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:46:54",
    "text": "Definitely happy to beta test it!"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:47:40",
    "text": "I honestly don’t understand why there isn’t a native process for this that simply allows you to enroll at once or throttle enrollments into batches."
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:48:02",
    "text": "<@UQNEXHW14> Thoughts on this :point_up:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:48:05",
    "text": "yeah we've been asking for it for 2 years now... the other week I just decided to build it myself"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:48:25",
    "text": "currently handling a couple million enrollments"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:49:56",
    "text": "another cool aspect is you can have multiple throttlers on the same workflow. So you if need to slow down the enrollments and then slow them down even further you can."
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:50:57",
    "text": "This great, but again, I’m kinda scratching my head why HubSpot would allow custom code calls but not be able to throttle to begin with"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:51:18",
    "text": "I went as fart as breaking up my code into 3 actions thinking it was a time out from the calls"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:51:22",
    "text": "the custom code will retry if you throw a 429 error"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:51:28",
    "text": "but it was that they were all just running at the same time"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:52:05",
    "text": "but the retries don't really help when you're enrolling 100k+"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:52:15",
    "text": "Yeah but retries will retry again at the same time smh"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:52:20",
    "text": "they'll still just fail and retry and fail and retry"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:52:23",
    "text": "exactly"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:52:33",
    "text": "Throttler fixes this"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:52:37",
    "text": "But why would HS even do this?"
  },
  {
    "poster": {
      "poster_name": "David Panzarella",
      "poster_handle": "david818"
    },
    "time_stamp": "2024-10-01 11:53:04",
    "text": "It makes no sense from an engineering perspective to even allow this."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:53:07",
    "text": "yeah I mean again we've collectively been asking for this functionality for 2 + years now"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-10-01 11:53:36",
    "text": "such a basic functionality. That's why I've made Throttler completely free and open source"
  }
]
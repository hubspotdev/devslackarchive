[
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:07:32",
    "text": "Hi! I'm experimenting with the chat widget and looking at this documentation: <https://developers.HubSpot.com/docs/api/conversation/chat-widget-sdk>. Am I missing the instructions to download the sdk? I assume it's just some JS. Apologies if I'm missing something obvious."
  },
  {
    "poster": {
      "poster_name": "Quentin Lamamy",
      "poster_handle": "quentin.lamamy"
    },
    "time_stamp": "2020-10-21 09:23:06",
    "text": "<@U01DE59U0M7> Which sdk do you want to use ?"
  },
  {
    "poster": {
      "poster_name": "Quentin Lamamy",
      "poster_handle": "quentin.lamamy"
    },
    "time_stamp": "2020-10-21 09:23:21",
    "text": "Different langage are available"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:24:27",
    "text": "I want to run it in the browser, so just the JS sdk is fine."
  },
  {
    "poster": {
      "poster_name": "Quentin Lamamy",
      "poster_handle": "quentin.lamamy"
    },
    "time_stamp": "2020-10-21 09:25:55",
    "text": "well, i dont know how this specific SDK work, let me check that"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:26:29",
    "text": "based on the docs, I kinda assume it's just a script tag, but cant find exact instructions."
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:26:38",
    "text": "thanks for your help"
  },
  {
    "text": "It’s loaded as part of the HubSpot tracking code snippet",
    "time_stamp": "2020-10-21 09:29:48",
    "edited": {
      "time_stamp": "2020-10-21 09:30:37"
    },
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-21 09:30:55"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2020-10-21 09:30:41"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2020-10-21 09:30:55",
    "text": "Sorry, bad cut-off point for the original screenshot"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:31:42",
    "text": "ah, i see. where are the instructions to download the script loader? (I'm new to HubSpot)"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2020-10-21 09:32:08",
    "text": "<https://knowledge.HubSpot.com/reports/install-the-HubSpot-tracking-code>"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:36:46",
    "text": "ah, i see. that makes sense."
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:37:15",
    "text": "i guess a small improvement to the docs would be linking to that page from the chat widget docs. (imo)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-10-22 12:05:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Quentin Lamamy",
      "poster_handle": "quentin.lamamy"
    },
    "time_stamp": "2020-10-21 09:37:30",
    "text": "i just found the same kind of link, you are faster than me, seems that you need the tracker on your page"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:39:15",
    "text": "i have another question regarding how best to cache the visitor identification token in the browser. is this still the right channel or should i go somewhere else?"
  },
  {
    "poster": {
      "poster_name": "Quentin Lamamy",
      "poster_handle": "quentin.lamamy"
    },
    "time_stamp": "2020-10-21 09:40:16",
    "edited": {
      "time_stamp": "2020-10-21 09:41:20"
    },
    "text": "Well i’m much more a backend developper working with php and nodeJs maybe <@UMCBG6QK0> is more on the frontend part"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2020-10-21 09:42:37",
    "text": "Requesting and caching the visitor identification token is a backend process. You don’t want to expose your API credentials in the browser"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:43:12",
    "text": "yeah, that all happens backend. however, the api will return what looks like a JWT to the browser"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:44:17",
    "text": "i'm following <https://developers.HubSpot.com/docs/api/conversation/visitor-identification>"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:45:02",
    "text": "and reading this:\n&gt;  The token and email must be set on the `hsConversationsSettings` object on the window every time the page loads for an authenticated visitor. This context will not be carried across page loads automatically if these parameters are no longer set. Tokens are temporary and will expire after 12 hours. Tokens can be cached to avoid re-fetching the token on every page load, as long as they are refreshed at least every 12 hours."
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:45:37",
    "text": "i assume the docs are referring to client side caching of the token. but i was wondering if there is a preferred method"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2020-10-21 09:46:11",
    "text": "No, it’s referring to server-side caching, so you don’t have to keep making backend calls to the visitor identification API"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2020-10-21 09:46:51",
    "text": "Or, at least, that’s how we’ve implemented it"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:53:09",
    "text": "i see. since the token is per user, it seems like a lot of work to maintain a server side cache. if there are a lot of users, we would probably have to have some external cache like redis?"
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2020-10-21 09:54:46",
    "text": "No cache layer already in your app?"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 09:58:08",
    "edited": {
      "time_stamp": "2020-10-21 09:58:17"
    },
    "text": "not any that would support this use case, imo."
  },
  {
    "poster": {
      "poster_name": "Adam Wright",
      "poster_handle": "adam377"
    },
    "time_stamp": "2020-10-21 10:01:21",
    "text": "I personally don’t like the idea of caching it in the browser and exposing an intermediate API endpoint to fetch the token, but I suppose you could use localStorage and keep track of the timestamp"
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 10:03:11",
    "text": "yeah, I agree. storing tokens in localStorage is also an issue, which is why I was curious if there was a preferred way."
  },
  {
    "poster": {
      "poster_name": "Brad Fitzwater",
      "poster_handle": "brad.fitzwater"
    },
    "time_stamp": "2020-10-21 10:04:01",
    "text": "anyway, this helped a lot. thanks for you help <@UMCBG6QK0> and <@U01DF3PNCKA>"
  }
]
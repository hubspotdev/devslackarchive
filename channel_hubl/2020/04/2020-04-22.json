[
  {
    "poster": {
      "poster_name": "Martin Warg",
      "poster_handle": "martin.warg"
    },
    "time_stamp": "2020-04-22 03:55:40",
    "text": "Has any body been able to style select fields in a HubSpot form?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-22 05:36:00"
      },
      {
        "time_stamp": "2020-04-22 14:01:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2020-04-22 05:36:00",
    "text": "Yes, in multiple ways.\nYou can:\n1. Target the classes directly and override the styling (a bit of a hassle!)\n2. Build your own HTML structure and submit the form through the Forms API (total freedom!)"
  },
  {
    "poster": {
      "poster_name": "Stephanie O'Gay Garcia",
      "poster_handle": "stephanie"
    },
    "time_stamp": "2020-04-22 08:46:19",
    "text": "Is there something in HubL I can use to show content in the editor only? For example, hints on how to update a module in the sidebar or where to find a HubDB table. I usually just place it into a div with \"display: none;\" and then use the \"hs-inline-edit\" class to display it in the editor, but the HTML still appears on the published page. I'd like to avoid that.",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-04-22 09:00:32"
      },
      {
        "time_stamp": "2020-04-22 09:03:43"
      },
      {
        "time_stamp": "2020-04-22 09:07:38"
      },
      {
        "time_stamp": "2020-04-22 09:44:49"
      },
      {
        "time_stamp": "2020-09-17 10:49:34"
      },
      {
        "time_stamp": "2020-09-22 11:28:53"
      },
      {
        "time_stamp": "2020-09-22 15:15:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2020-04-22 09:00:32",
    "text": ":thinking_face: I don’t think we have a class you can key off of in the editor (but good idea, we should do that). We _do_ inject a global variable (`window.hsInEditor = true`). So until we have a better way, you could still display none that content, and use JS to unhide if the above var is set to true (and it should be a no-op in the published page)"
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2020-04-22 09:03:43",
    "text": "Ah, just reread it. You want to avoid having the html show up _even if_ it’s display’d none, got it."
  },
  {
    "poster": {
      "poster_name": "Stephanie O'Gay Garcia",
      "poster_handle": "stephanie"
    },
    "time_stamp": "2020-04-22 09:07:38",
    "text": "Thanks! Yeah, I have that working, but it's still there hidden on the published post which is fine but I'd prefer if that weren't the case. I'll probably try to use JS to hide it if that \"hs-inline-edit\" body class isn't there or something."
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2020-04-22 09:44:49",
    "text": "Not ideal, but you could also use that JS approach to _remove_ the DOM nodes on the live page if they are effecting styling / you want to hide it from prying eyes with the web inspector. (Though those same prying eyes could still see it if they looked at the page source)"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-22 14:01:25",
    "text": "^^^^^"
  }
]
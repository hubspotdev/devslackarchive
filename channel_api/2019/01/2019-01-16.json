[
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:26:11",
    "text": "Having a hard time converting date from blog post api -- from docs it says unix epoch(<https://developers.HubSpot.com/docs/methods/blogv2/get_blog_posts>)"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:26:42",
    "text": "I'm trying to do it two separate ways, but the year ends up being messed up"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:26:50",
    "text": "```$dt = new DateTime(\"@$date\");\n        $new_date = $dt-&gt;format('Y-M-d H:i:s');```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:26:58",
    "text": "`$new_date = gmdate('r', $date);`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:27:31",
    "text": "```&lt;pubDate&gt;Mon, 19 Mar 49956 04:00:00 +0000&lt;/pubDate&gt;\n&lt;wp:post_date&gt;&lt;![CDATA[49956-Mar-19 04:00:00]]&gt;&lt;/wp:post_date&gt;&lt;wp:post_id&gt;465&lt;/wp:post_id&gt;```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:31:26",
    "text": "example: 1544619600000"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:31:38",
    "text": "```&lt;pubDate&gt;Sun, 17 Jan 50917 16:00:00 +0000&lt;/pubDate&gt;\n&lt;wp:post_date&gt;&lt;![CDATA[50917-Jan-17 16:00:00]]&gt;&lt;/wp:post_date&gt;```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:31:48",
    "text": "How am I messing this up so badly?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:32:05",
    "text": "Guessing I'm doing somethign wrong here with the php",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-16 10:34:46"
      },
      {
        "time_stamp": "2019-01-16 10:35:01"
      },
      {
        "time_stamp": "2019-01-16 10:35:09"
      },
      {
        "time_stamp": "2019-01-16 10:35:10"
      },
      {
        "time_stamp": "2019-01-16 10:35:38"
      },
      {
        "time_stamp": "2019-01-16 10:35:48"
      },
      {
        "time_stamp": "2019-01-16 10:37:10"
      },
      {
        "time_stamp": "2019-01-16 10:37:22"
      },
      {
        "time_stamp": "2019-01-16 10:37:31"
      },
      {
        "time_stamp": "2019-01-16 10:37:36"
      },
      {
        "time_stamp": "2019-01-16 10:38:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-01-16 10:34:46",
    "text": "Not a PHP guy, but it looks like it’s expecting seconds but the hubuspot api sends milliseconds"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-01-16 10:35:01",
    "text": "a quick fix would be to dived it by 1000"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:35:09",
    "text": "the original number?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-01-16 10:35:10",
    "text": "not sure if you can tell PHP to expect milliseconds"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:35:38",
    "text": "okay, there is a microtime method"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-01-16 10:35:48",
    "edited": {
      "time_stamp": "2019-01-16 10:35:54"
    },
    "text": "right, your `$date` variable I believe"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:37:10",
    "text": "beautiful"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:37:22",
    "text": "thanks <@UFBNA9K9A> that was the ticket"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:37:31",
    "text": "\"Wed, 16 Jan 2019 17:36:58 +0000\""
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-01-16 10:37:36",
    "text": "shapow!"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-01-16 10:38:22",
    "text": ":thumbsup:"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-01-16 14:38:34",
    "edited": {
      "time_stamp": "2019-01-16 14:39:13"
    },
    "text": "having a bit of trouble trying to get details of a supposedly published table:\nI can see that it's `status` says published on the HubDB tables page, however my api calls are saying the table doesn't even exist.\nremoved my table_id/portal_id/hapikey for obvious reasons\nusing a get request to `<https://api.hubapi.com/hubdb/api/v2/tables/${table_id}?portalId=${portal_id}>` I get:\n```\n{\n    \"status\": \"error\",\n    \"message\": \"table {table_id} does not exist in portal {portal_id}\",\n    \"correlationId\": \"***\",\n    \"requestId\": \"***\"\n}\n```\ntrying to `<https://api.hubapi.com/hubdb/api/v2/tables/${table_id}/rows?portalId=${portal_id}>` returns the same error message.\n\nhowever, using the `get all tables` request `<https://api.hubapi.com/hubdb/api/v2/tables?hapikey=${hapikey}>` I see the table available and that it's published... confused why one api call would show the table as published, but trying to access it wont"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-16 14:40:07",
    "text": "This is a little bit of a confusion with the API"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-16 14:40:42",
    "text": "What happens if you do <https://api.hubapi.com/hubdb/api/v2/tables/${table_id}/draft?portalId=${portal_id}>"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-16 14:41:02",
    "text": "That will get you details of the draft version of the table"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-16 14:43:00",
    "text": "If there is a draft version but no published version that either means the table isn’t published yet or something went wrong while publishing the table and I would be interested to see what"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-01-16 14:45:36",
    "text": "had to setup a new call to that one, but yes, it's returning a draft",
    "reply_count": 21,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-16 14:49:48"
      },
      {
        "time_stamp": "2019-01-16 14:51:29"
      },
      {
        "time_stamp": "2019-01-16 15:09:50"
      },
      {
        "time_stamp": "2019-01-16 16:52:55"
      },
      {
        "time_stamp": "2019-01-16 16:53:05"
      },
      {
        "time_stamp": "2019-01-17 07:02:18"
      },
      {
        "time_stamp": "2019-01-17 08:19:52"
      },
      {
        "time_stamp": "2019-01-17 08:20:11"
      },
      {
        "time_stamp": "2019-01-17 08:20:22"
      },
      {
        "time_stamp": "2019-01-17 08:20:34"
      },
      {
        "time_stamp": "2019-01-17 08:38:35"
      },
      {
        "time_stamp": "2019-01-17 08:45:38"
      },
      {
        "time_stamp": "2019-01-17 08:48:37"
      },
      {
        "time_stamp": "2019-01-17 08:50:02"
      },
      {
        "time_stamp": "2019-01-17 08:58:53"
      },
      {
        "time_stamp": "2019-01-17 09:01:08"
      },
      {
        "time_stamp": "2019-01-17 09:03:28"
      },
      {
        "time_stamp": "2019-01-17 09:09:51"
      },
      {
        "time_stamp": "2019-01-17 09:10:57"
      },
      {
        "time_stamp": "2019-01-17 09:20:05"
      },
      {
        "time_stamp": "2019-01-17 09:21:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-01-16 14:49:48",
    "text": "I put this response to a thread so things don't bloat up the slack channel\n```\nServer started on port 5000\n{ id: ${table_id},\n  name: 'BigCommerce Products',\n  portalId: ${portal_id},\n  createdAt: 1547671251620,\n  publishedAt: 1547672301,\n  updatedAt: 1547672302035,\n  columns:\n   [ ... ],\n  cosObjectType: 'HUBDB_TABLE',\n  deleted: false,\n  label: 'label',\n  updated: 1547672302035,\n  cdnPurgeEmbargoTime: null,\n  rowCount: 2,\n  useForPages: true,\n  allowChildTables: false,\n  enableChildTablePages: false,\n  columnCount: 6,\n  allowPublicApiAccess: true }\n```"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-01-16 14:51:29",
    "text": "<@U6GNQ7JBU>\nbasically, my api steps were as follows:\n1. create a table using a json object mapping out the columns/info i needed\n2. make a publish put request as follows:\n```\naxios({\n      method: 'put',\n      url: `<https://api.hubapi.com/hubdb/api/v2/tables/${table_id}?hapikey=${api_key}>`,\n      data: { \n        \"publishedAt\": Date.now(),\n        \"useForPages\": true\n      }\n    })\n      .then((res) =&gt; {\n        console.log('Table published: '+res.data.id);\n      })\n      .catch((err) =&gt; console.log(err));\n```\n3. create some rows, looping through some data sets (rows populated fine).\n4. trying to verify the rows were created successfully, resulted in saying table doesn't exist"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-01-16 15:09:50",
    "text": "and now getting a response error when trying to publish a fresh table made through the api using\n`<https://api.hubapi.com/hubdb/api/v2/tables/${table_id}/publish?hapikey=${api_key}>`:\n```\n  response:\n   { status: 415,\n     statusText: 'Unsupported Media Type',\n...}\n```\n\ntrying ``<https://api.hubapi.com/hubdb/api/v2/tables/${table_id}/draft?hapikey=${api_key}>` instead results in a 405, method not allowed error instead..."
  },
  null,
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-16 16:52:55",
    "text": "In order to publish, you have to `PUT` `<https://api.hubapi.com/hubdb/api/v2/tables/${table_id}/publish?hapikey=${api_key}>``"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-16 16:53:05",
    "text": "It is slightly different from the v1 endpoint"
  },
  null
]
[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 06:19:01",
    "text": "if I have an import that seems to depend on `document`, shouldn't wrapping the component in `useAfterIslandHydration()` prevent it from using `document` on the server? I'm still getting this error:\n```8:16:43 AM [vite] Error when evaluating SSR module /Users/xxx/code/xxx/src-react/theme-assets-project/app/components/modules/DoubleFeaturedWithGrid/_components/Partners/index.jsx: failed to import \"/components/modules/DoubleFeaturedWithGrid/_components/Partners/Masonry.jsx\"\n|- ReferenceError: document is not defined```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 06:23:21",
    "text": "even if I wrap the entire component from its parent I get that error"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 06:25:28",
    "text": "do I need to prevent the import itself? Maybe the reference to document happens before the component is even rendered during the import? (is that a thing?)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 06:32:33",
    "text": "yea, can confirm that just importing the component without trying to render it throws the error"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 06:45:55",
    "text": "when setting the island to clientOnly that doesn't throw an error in the client but does still throw an error \"on the server\" (terminal)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 06:46:06",
    "text": "is that the expected behavior?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 10:19:32",
    "text": "should I start using the \"inside projects\" serverless functions yet? Are those able to console log yet?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-09-06 10:20:13"
      },
      {
        "time_stamp": "2024-09-06 10:20:46"
      },
      {
        "time_stamp": "2024-09-06 10:50:22"
      },
      {
        "time_stamp": "2024-09-06 10:52:20"
      },
      {
        "time_stamp": "2024-09-06 10:58:16"
      },
      {
        "time_stamp": "2024-09-06 11:40:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-09-06 10:20:13",
    "text": "Yes, I can ungate you to logging for those functions"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 10:20:46",
    "text": "great, thank you. need me to dm the portal?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 10:50:22",
    "text": "is this example up to date? <https://github.com/HubSpot/cms-react/blob/main/examples/serverless/cms-with-serverless-project/cms-react/components/modules/MakeServerlessRequest/MakeServerlessRequestIsland.jsx|https://github.com/HubSpot/cms-react/blob/main/examples/serverless/cms-with-server[…]s/modules/MakeServerlessRequest/MakeServerlessRequestIsland.jsx>\n\nI'm getting an invalid url error locally.  Not sure if I need to modify or if I need to deploy first maybe"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 10:52:20",
    "text": "I'm also trying to use this with `getServerSideProps` so that could be related.."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 10:58:16",
    "text": "yea, no luck after deploying either, I think I'll have to go back to regular serverless until more of the documentation is worked out"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 11:40:44",
    "text": "for future me / other me's:\n• you need a private app (<https://developers.HubSpot.com/docs/platform/create-private-apps-with-projects|docs>)\n    ◦ this is different than the other kind of private apps that you have to create in settings. You create this one through an `app.json` file\n• app.functions needs to contain a package.json (<https://github.com/HubSpot/cms-react/tree/main/examples/serverless/cms-with-serverless-project/app/app.functions|example>)\n• you need an absolute url if you are using this with `getServerSideProps`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 13:03:49",
    "text": "is it possible to only upload app.functions and not the entire project?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-09-06 13:29:51",
    "text": "`getServerSideProps` is pretty awesome and seems to work great. Now that I have all of this cache control power I don't know what to do with it!"
  }
]
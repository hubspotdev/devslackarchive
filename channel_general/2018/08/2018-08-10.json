[
  null,
  {
    "poster": {
      "poster_name": "Tiina Kirahvimetsä",
      "poster_handle": "tiina"
    },
    "time_stamp": "2018-08-10 02:41:59",
    "text": "I know that you can't build custom modules in the  Local HubL Server, but how you can move custom modules to the Local HubL Server? I can't figure out how to get the same kind of custom module json files as there is in the Vast example"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2018-08-10 04:30:10",
    "text": "Howdy folks! Anyone can please tell me how to build a rgba() value from the new color input?"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2018-08-10 04:30:53",
    "text": "What I can see so far is a composite field:\n```\n\"col_overlay_color\": {\n         \"color\": \"#000000\",\n         \"opacity\": 100\n }\n```"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2018-08-10 04:31:23",
    "text": "How can I build an rgba() value with hubl out of that?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-10 06:32:13",
    "text": "`rgba({{ blackColor | convert_rgb }}, .7)`",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-08-10 07:20:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 07:20:27",
    "edited": {
      "time_stamp": "2018-08-10 07:20:49"
    },
    "text": ":point_up_2: but more like `rgba({{col_overlay_color.color| convert_rgb }}, col_overlay_color.opacity)`"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2018-08-10 08:05:24",
    "text": "I got it working for what I need with this formula\n```\nbackground-color: rgba({{ item.col_overlay_color.color|convert_rgb }}, {{item.col_overlay_color.opacity}}%);\n```"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2018-08-10 08:05:27",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 08:27:25",
    "text": "This toggle didn’t work <https://spin.d.pr/a9RPNu+> I can still pull up this module (note the page I’m editing is staged) in case that matters"
  },
  {
    "time_stamp": "2018-08-10 11:53:14",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-08-10 11:53:33",
    "text": "Happy Friday ... luckily not the 13th..."
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2018-08-10 11:54:21",
    "text": "I'm trying to source a really, really good example of dynamic personalization on a website. We will link directly to the page for people to check out. Anyone here have a well done example? - Comment/DM me please"
  },
  {
    "time_stamp": "2018-08-10 11:54:27",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "jim mikecz",
      "poster_handle": "jim.m"
    },
    "time_stamp": "2018-08-10 12:31:08",
    "text": "Does anyone else have problems dragging and dropping modules on the page editor for certain sites? I can add them in the edit modules panel but can’t dragon-drop :dragon:."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:12:30",
    "text": "Is there a way to send a single email out such that different people get different contact info in the footer, based on their location. For example, a gym with 25 locations and we want to show whatever a contact's \"home\" location is."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:12:39",
    "text": "A way to do it without creating 25 copies of every email, I mean"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:13:23",
    "text": "The only thing I can think of is saving each contact's location as a property and printing that, but a \"real\" set of contact info still needs to be in the template somewhere"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 14:15:57",
    "text": "I did something similar once, it was a pain in the butt.\n\nin our case we DID save the location as a property, then we somehow conditionally displayed the location, but because the CANSPAM required tags have to be there we had to use some trickery to hide the location in there."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-10 14:17:47",
    "text": "I haven’t used one for this but there are also tools that can generate an image with whatever text you want onload of the email and it can be based on things like user’s general location(IP based) and weather in the area"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:23:53",
    "text": "That's an interesting idea"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:24:34",
    "text": "But the location we want to show isn't necessarily the closest one when the user opens the email. They might go somewhere else, or be away from home when they look at it."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:25:00",
    "text": "Also IP geolocation is probably not precise enough, though I don't know how close together these locations are"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:30:55",
    "text": "<@U3A4KEWK1> are you using the multiple locations in HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:32:17",
    "text": "I'm looking to see where it is in HS"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:33:06",
    "text": "Like the footer locations under email? That's what I would normally do, but I don't think you can pick multiple locations and have them swap in conditionally on the same email"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:33:34",
    "text": "Unless I'm just wrong about that."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:34:25",
    "text": "hold on i'm not suing that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:34:27",
    "text": "using"
  },
  {
    "text": "",
    "time_stamp": "2018-08-10 14:35:33"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:36:09",
    "text": "`{% choice \"location\" value=\"location1\", choices=\"[[\\\"\\\", \\\"Select Location\\\"], [\\\"zieglerville-perkiomenville\\\", \\\"Zieglerville / Perkiomenville\\\"], [\\\"hatboro\\\", \\\"Hatboro\\\"], [\\\"pottstown\\\", \\\"Pottstown\\\"], [\\\"downingtown\\\", \\\"Downingtown\\\"],[\\\"silverdale\\\", \\\"Silverdale\\\"]]\" export_to_template_context=True %}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:36:24",
    "text": "So, this was made like 2 1/2 years ago, but this is how I accomplish it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:36:35",
    "text": "I think you could use a contact property instead"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:37:06",
    "text": "I don't think you can use {% if contact.property == 'whatever' %} in emails that way"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:37:11",
    "text": "eh"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:37:34",
    "text": "Maybe that's changed, but a couple years ago at least that didn't work"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:38:12",
    "text": "I think I determined that the emails were generated in two passes, one to render the template and one to just replace all the contact properties"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:38:17",
    "text": "We have an email for each sales person that has their territory selected this way"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:38:47",
    "text": "So if you try to compare against a contact property, it's just the literal string 'CONTACT.PROPERTY' when it's rendering the template"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:39:00",
    "text": "yeah I think you are right on that"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:39:25",
    "text": "It was a while ago that I last tested this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:39:46",
    "text": "I'm asking our email expert rn"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:42:14",
    "text": "we can do contact first name"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:42:30",
    "text": "right, that gets inserted, but that happens on the second pass, you believe"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:43:12",
    "text": "Can each \"sales person\" have address properties that goes to that specific locaiton"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:43:18",
    "text": "and you do contact owner address?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:43:58",
    "text": "There would be no if statements, just the actual properties -- that would prevent the issue with the two pass"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:44:20",
    "text": "Yeah, I think my recommendation is just going to be to save a contact property for each user that contains their home location."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:44:26",
    "text": "Thanks!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-10 14:45:07",
    "text": "can probably do that on workflow"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:48:50",
    "text": "Yeah"
  }
]
[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-03-08 06:46:24",
    "text": "when dragging a module into a blog post, it adds this tag around it:\n```&lt;div id=\"hs_cos_wrapper_widget_3af791ac-de87-4932-a807-47d9079a2d11\" class=\"hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module\" style=\"\" data-hs-cos-general-type=\"widget\" data-hs-cos-type=\"module\"&gt;```\nis there any chance I can remove that?",
    "reply_count": 12,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-08 06:49:57"
      },
      {
        "time_stamp": "2024-03-08 06:50:35"
      },
      {
        "time_stamp": "2024-03-08 06:51:02"
      },
      {
        "time_stamp": "2024-03-08 06:51:08"
      },
      {
        "time_stamp": "2024-03-08 06:51:19"
      },
      {
        "time_stamp": "2024-03-08 06:51:45"
      },
      {
        "time_stamp": "2024-03-08 06:52:03"
      },
      {
        "time_stamp": "2024-03-08 06:52:09"
      },
      {
        "time_stamp": "2024-03-08 06:52:23"
      },
      {
        "time_stamp": "2024-03-08 06:54:31"
      },
      {
        "time_stamp": "2024-03-08 06:57:17"
      },
      {
        "time_stamp": "2024-03-08 07:05:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 06:49:57",
    "text": "Yes, it is possible to remove the HTML tags surrounding the module when dragging it into a blog post, but it would require modifying the platform's source code or using custom JavaScript to manipulate the DOM (Document Object Model) and remove the unwanted tags.\n\nHowever, it's important to note that modifying the source code or adding custom JavaScript may have unintended consequences, and it may not be allowed by the platform's terms of service. Additionally, removing the tags might affect how the module is displayed or functions within the blog post."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-03-08 06:50:35",
    "text": "damn"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 06:51:02",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-03-08 06:51:08",
    "text": "but also, thank you for the thorough response"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-03-08 06:51:19",
    "text": "ha, sorry, I was just disappointed"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 06:51:45",
    "text": "Why was you disappointed?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-03-08 06:52:03",
    "text": "I was hoping there was an easier/approved way of removing it"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-03-08 06:52:09",
    "text": "but I'm going to try to do it with javascript"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 06:52:23",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 06:54:31",
    "text": "```window.onload = function() {\n  // Find all elements with the class \"hs_cos_wrapper\"\n  var modules = document.getElementsByClassName(\"hs_cos_wrapper\");\n  \n  // Loop through each element and remove the parent \"div\"\n  for (var i = 0; i &lt; modules.length; i++) {\n    var module = modules[i];\n    var parentDiv = module.parentElement;\n    if (parentDiv &amp;&amp; parentDiv.tagName === \"DIV\" &amp;&amp; parentDiv.classList.contains(\"hs_cos_wrapper_widget\")) {\n      parentDiv.parentNode.replaceChild(module, parentDiv);\n    }\n  }\n};```"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-03-08 06:57:17",
    "text": "<@U06NE4F7E9Y> thank you!"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 07:05:14",
    "text": "welcome."
  },
  {
    "poster": {
      "poster_name": "Bálint Sipos",
      "poster_handle": "sbi85g"
    },
    "time_stamp": "2024-03-08 07:26:10",
    "text": "HubSpot CTAs -\nHow do you view the contacts that clicked on a particular CTA?\n\nI thought the CTA performance will show that but it only shows the number of clicks.\n\nDo I need to create a custom field to record that?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-03-15 07:27:27"
      }
    ]
  },
  {
    "subtype": "bot_message",
    "text": ":sparkles:Slack Tips and Best Practices:sparkles:\n\nTo get the most out the HubSpot Developer Slack, follow these best practices:\n\n• Will your post/question potentially help more than one person? Ask in a public channel instead of 1:1 DMs to help as many folks as possible. \n• Thread all replies to keep topics organized and searchable\n• Thread followup questions/comments to your original post\n• Don't post the same question in multiple channels. If you must, link to your original question in new channels.\nMore <https://slack.com/blog/collaboration/etiquette-tips-in-slack|great tips here>. Thanks for making the HubSpot Developer Slack easier to use for everyone!",
    "username": "Slack Best Practices",
    "time_stamp": "2024-03-08 12:05:02",
    "edited": {
      "time_stamp": "2024-03-08 12:05:06"
    }
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2024-03-08 13:08:56",
    "text": "SEO scan, check for 404 errors, bounce rate review (looking for outliers, opp to improve conversion paths), lighthouse performance scan.\n\nFor larger websites and only every 6 months, scrub URL redirects to ensure there aren't redirects mapped to other redirects, etc."
  },
  {
    "poster": {
      "poster_name": "Jonathan Esteves",
      "poster_handle": "jonathan.dev_93"
    },
    "time_stamp": "2024-03-08 13:56:55",
    "text": "Thanks for indicating. :smiley:"
  }
]
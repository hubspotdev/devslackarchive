[
  {
    "poster": {
      "poster_name": "Andrew Smeallie",
      "poster_handle": "andrew431"
    },
    "time_stamp": "2024-01-31 04:30:10",
    "text": "Try using a deal-based workflow instead of the current workflow type you are using. That will allow you to target exactly the deal you want, and now with better options to copy property values from associated objects, you should be able to bring over the value you are looking for.\n\nSee video here:\n\n<https://www.loom.com/share/60d5dc25fb194a09b609133c12bb5622?sid=c6582d1c-d4d4-4f99-8388-15a72d0aa2cd>\n\nLet me know if this works!"
  },
  {
    "poster": {
      "poster_name": "Maximilian Holzer",
      "poster_handle": "maximilian.holzer"
    },
    "time_stamp": "2024-01-31 07:39:53",
    "text": "what are the triggers of the individual workflows are they secured so that nothing can change inbetween workflows/other workflows dont interfere with the triggers etc?"
  },
  {
    "poster": {
      "poster_name": "Loriauna Mora",
      "poster_handle": "loriauna"
    },
    "time_stamp": "2024-01-31 07:53:28",
    "text": "Hello all - I am trying to build a custom coded workflow using Node.js that will use the record ID of the contact enrolled in the workflow, find associated calls to the record ID of the contact, and log the count of calls/voicemails/connected calls etc to a custom property on the contact record. This is for the BDR team to be able to filter contacts they've already connected with, or by # of calls they've made, etc... I keep getting this error when using the search API - I've always had issues with the search API. Any suggestions? I'm using the access token from a private app and have the following scopes (see below)\n\n*Error -* \n`Authentication credentials not found. This API supports OAuth 2.0 authentication and you can find more details at <https://developers.HubSpot.com/docs/methods/auth/oauth-overview>`\n\n*Private App Scopes:* `crm.objects.quotes.readcrm.objects.quotes.writecrm.schemas.contacts.readcrm.schemas.custom.writecrm.objects.companies.writecrm.objects.custom.readcrm.objects.custom.writecrm.schemas.custom.readcrm.exportintegration-syncaccount-info.security.readoauthtimelineautomationmedia_bridge.readmedia_bridge.writecrm.schemas.contacts.writecrm.schemas.deals.readcrm.objects.contacts.readcrm.schemas.companies.readcrm.schemas.companies.writecrm.lists.readcrm.objects.deals.readcrm.objects.deals.writecrm.lists.writecrm.objects.goals.readcrm.objects.companies.readcrm.objects.feedback_submissions.readsales-email-readcrm.objects.contacts.writecrm.objects.owners.readcrm.importcrm.schemas.deals.writecontentconversations.visitor_identification.tokens.createconversations.writesettings.users.readsettings.users.writeconversations.readcommunication_preferences.read_writecommunication_preferences.writecommunication_preferences.readcollector.graphql_schema.readcollector.graphql_query.executeexternal_integrations.forms.access`",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-31 09:15:06"
      },
      {
        "time_stamp": "2024-01-31 09:15:24"
      },
      {
        "time_stamp": "2024-02-02 03:58:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Felipe Vogel",
      "poster_handle": "felipe908"
    },
    "time_stamp": "2024-01-31 07:54:34",
    "text": "<@U064QG589CY>, I appreciate this so much! I had been scrambling the internet for solutions. This makes a lot of sense! I am testing right now, thank you again!"
  },
  {
    "poster": {
      "poster_name": "Andrew Smeallie",
      "poster_handle": "andrew431"
    },
    "time_stamp": "2024-01-31 07:55:23",
    "text": "My pleasure! Let me know how the testing goes. Fingers-crossed it's the solution you need :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Felipe Vogel",
      "poster_handle": "felipe908"
    },
    "time_stamp": "2024-01-31 08:16:45",
    "text": "Hey, so I tried this <@U064QG589CY>. Here is the ideal functionality: A contact can have multiple deals, but only looking to trigger a workflow when a new deal has been created. Usually reps will fill out a form, which will update this property X. When a new deal is created this workflow should trigger and map that property Value X to a deal property but just the new deal. Built it but for some reason it did not enroll my new deal. Check it out"
  },
  {
    "poster": {
      "poster_name": "Felipe Vogel",
      "poster_handle": "felipe908"
    },
    "time_stamp": "2024-01-31 08:17:25",
    "edited": {
      "time_stamp": "2024-01-31 08:17:53"
    },
    "text": "My steps: I updated the property I want to map on the contact side to see if it would map only to the new deal. Then created a new deal. Meaning my workflow should have triggered but nothing happened."
  },
  {
    "text": "The full logic here",
    "time_stamp": "2024-01-31 08:18:15"
  },
  {
    "poster": {
      "poster_name": "Felipe Vogel",
      "poster_handle": "felipe908"
    },
    "time_stamp": "2024-01-31 08:18:50",
    "text": "so issue on the enrollment side."
  },
  {
    "poster": {
      "poster_name": "Thomas Niederberger",
      "poster_handle": "thomas.niederberger"
    },
    "time_stamp": "2024-01-31 09:15:06",
    "text": "I just tried it and it works for me with that:\nPOST to: <https://api.hubapi.com/crm/v3/objects/calls/search>\nwith that body\n{\n  “properties”: [ “hs_call_title,hs_call_status,hs_call_body,hs_call_callee_object_id” ],\n  “filterGroups”: [\n    {\n      “filters”: [\n        {\n          “propertyName”: “hs_call_callee_object_id”,\n          “operator”: “EQ”,\n          “value”: “xxx”\n        }\n      ]\n    }\n  ]\n}"
  },
  {
    "poster": {
      "poster_name": "Thomas Niederberger",
      "poster_handle": "thomas.niederberger"
    },
    "time_stamp": "2024-01-31 09:15:24",
    "edited": {
      "time_stamp": "2024-01-31 09:15:43"
    },
    "text": "not sure if that helps… did it in Postman"
  },
  {
    "poster": {
      "poster_name": "Andrew Smeallie",
      "poster_handle": "andrew431"
    },
    "time_stamp": "2024-01-31 11:04:32",
    "text": "When you activated the workflow did you elect to enroll existing records?\n\nIf yes, is it a workflow you had already been running tests with before, and if that same record had already enrolled did you enable re-enrollment?"
  },
  {
    "poster": {
      "poster_name": "Andrew Smeallie",
      "poster_handle": "andrew431"
    },
    "time_stamp": "2024-01-31 11:05:55",
    "text": "HubSpot Support could help troubleshoot the enrollment issue with you - to me, what you built looks logical for the purposes of your test. So at this point, I'd try troubleshooting with tech support to see if you can get a test record to enroll."
  },
  {
    "poster": {
      "poster_name": "Andrew Smeallie",
      "poster_handle": "andrew431"
    },
    "time_stamp": "2024-01-31 11:06:06",
    "text": "Keep me posted once it runs if it accomplishes your goal!"
  },
  {
    "poster": {
      "poster_name": "Felipe Vogel",
      "poster_handle": "felipe908"
    },
    "time_stamp": "2024-01-31 12:23:29",
    "text": "It worked, took a minute to grab the new record but it is successful"
  },
  {
    "poster": {
      "poster_name": "Felipe Vogel",
      "poster_handle": "felipe908"
    },
    "time_stamp": "2024-01-31 12:23:33",
    "text": "I appreciate your help!"
  },
  {
    "poster": {
      "poster_name": "Andrew Smeallie",
      "poster_handle": "andrew431"
    },
    "time_stamp": "2024-01-31 12:23:47",
    "text": "Woo! Thanks for closing the loop. Happy to help."
  },
  {
    "poster": {
      "poster_name": "Peter Roed",
      "poster_handle": "peter.roed"
    },
    "time_stamp": "2024-02-01 00:21:50",
    "text": "<@U065R73V8SY> They're the only active ones. The functionality has been tested thoroughly"
  },
  {
    "poster": {
      "poster_name": "Maximilian Holzer",
      "poster_handle": "maximilian.holzer"
    },
    "time_stamp": "2024-02-01 00:24:22",
    "text": "you dont have any delay until events actions in it do you? <@U0687RD4LJW>"
  },
  {
    "poster": {
      "poster_name": "Peter Roed",
      "poster_handle": "peter.roed"
    },
    "time_stamp": "2024-02-01 00:31:08",
    "text": "We do, but they're at max 10 minutes, and we can monitor it and control it."
  },
  {
    "poster": {
      "poster_name": "Maximilian Holzer",
      "poster_handle": "maximilian.holzer"
    },
    "time_stamp": "2024-02-01 00:34:24",
    "text": "this could be your leaking point:\ndepends on how many of those delays you have in total etc do these delays add up to the delay you mentioned etc etc.\n\ndelay until event is very tricky since there is a timeframe where the trigger of the event happens at the same time the object goes into the delay so it stays in the delay even tho it shouldn't\n\nYou can check if that maybe happens in your case?"
  },
  {
    "poster": {
      "poster_name": "Maximilian Holzer",
      "poster_handle": "maximilian.holzer"
    },
    "time_stamp": "2024-02-01 00:35:33",
    "text": "if you need more help then you would need to share more about the workflow etc bc right now there is not enough to go off from"
  },
  {
    "poster": {
      "poster_name": "Peter Roed",
      "poster_handle": "peter.roed"
    },
    "time_stamp": "2024-02-01 00:35:37",
    "text": "That isn't the case.\nWe've been told our account is being throttled, but HubSpot can't provide any real insight into why, besides the 100k maximum object enrollment on a rolling 24 hour basis"
  }
]
[
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2021-11-16 10:05:08",
    "text": "Do all blog tags have a slug? I’m using `{{ blog_tag_url(group.id, (content.tag_list|first).slug) }}` and it’s working for some tags, but not others."
  },
  {
    "poster": {
      "poster_name": "Wes Corman",
      "poster_handle": "wes.corman"
    },
    "time_stamp": "2021-11-16 11:57:20",
    "edited": {
      "time_stamp": "2021-11-16 11:59:23"
    },
    "text": "Hello :wave: In a `for` loop, I’m wondering what the simplest way is to keep a counter that increases with each loop.\n\n_For example, would something like this be best?_\n\n`{% set count = 0 %}`\n\n`{% for item in module.items %}`\n   &lt;div id=“`{{count}}`” &gt;\n          Item\n   &lt;/div&gt;\n  `{% set count = count + 1 %}`\n\n`{% endfor %}`",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-11-16 12:01:46"
      },
      {
        "time_stamp": "2021-11-16 12:03:33"
      },
      {
        "time_stamp": "2021-11-16 12:05:21"
      },
      {
        "time_stamp": "2021-11-16 12:06:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2021-11-16 12:01:46",
    "text": "you can simply use `{{ loop.index }}` or `{{ loop.index0 }}`\n\nfor ex.\n``` {% for item in module.items %}\n   &lt;div id=\"{{ loop.index }}\" &gt;\n          Item\n   &lt;/div&gt;\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Wes Corman",
      "poster_handle": "wes.corman"
    },
    "time_stamp": "2021-11-16 12:03:33",
    "text": "Amazing, thanks so much <@UNWHHSWHJ>! :pray:"
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2021-11-16 12:05:21",
    "text": "welcome :thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2021-11-16 12:06:01",
    "text": "you can learn more about loops here <https://developers.HubSpot.com/docs/cms/hubl/for-loops>"
  },
  {
    "text": "Hello there. I'm trying to use the below to dynamically populate a private content page with a phone number *only* when the property exists - but even if the property is empty it still runs the first part of the if loop and prints the property information. I'm sure I'm doing something very daft here. Any help very much appreciated.\n\n``` &lt;p&gt;Agency phone&lt;/p&gt;\n      &lt;div id=\"agencyphone\"&gt;\n         {% if company.document_centre__agency_phone_number %}                     {{ company.document_centre__agency_phone_number }}  \n    {% else %} None \n{% endif %}\n&lt;/div&gt;```",
    "time_stamp": "2021-11-16 12:15:27",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-11-16 12:17:39"
      },
      {
        "time_stamp": "2021-11-16 12:19:01"
      },
      {
        "time_stamp": "2021-11-16 12:32:31"
      },
      {
        "time_stamp": "2021-11-16 12:34:22"
      },
      {
        "time_stamp": "2021-11-16 12:34:46"
      },
      {
        "time_stamp": "2021-11-16 12:39:21"
      },
      {
        "time_stamp": "2021-11-16 12:40:31"
      },
      {
        "time_stamp": "2021-11-16 12:41:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 12:17:39",
    "text": "Is there a default value or anything for agency_phone_number field?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 12:19:01",
    "text": "With a company you would expect this to not print on what happens if you pprint your condition: `{{ company.document_centre__agency_phone_number|pprint }}`"
  },
  {
    "poster": {
      "poster_name": "Tom Mitchell",
      "poster_handle": "tom.mitchell"
    },
    "time_stamp": "2021-11-16 12:32:31",
    "text": "Hey <@UQWGKUEN7>! Thanks for replying. When I PPRINT It gives me `(String: COMPANY.DOCUMENT_CENTRE__AGENCY_PHONE_NUMBER)`"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 12:34:22",
    "text": "Got it so - this is a field in a module I imagine? It looks like there is a default likely being set across all fo the modules so it will always come back with that condition as being true. Get rid of the default and it should be fine."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 12:34:46",
    "edited": {
      "time_stamp": "2021-11-16 12:34:57"
    },
    "text": "Or change the condition to only print if that field isnt blank, null or has that default value"
  },
  {
    "poster": {
      "poster_name": "Tom Mitchell",
      "poster_handle": "tom.mitchell"
    },
    "time_stamp": "2021-11-16 12:39:21",
    "text": "Thanks <@UQWGKUEN7>! I've gone with:\n\n```&lt;div id=\"agencyphone\"&gt;{% if company.document_centre__agency_phone_number == \"COMPANY.DOCUMENT_CENTRE__AGENCY_PHONE_NUMBER\" %} None {% else %} {{company.document_centre__agency_phone_number}} {% endif %}&lt;/div&gt;\n      ```\nand that is doing the trick"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 12:40:31",
    "text": "I would also throw those fail safes being blank/null as well. Just in case someone adds one and then deletes it. Or someone deletes it thinking that it will show up. <@USJLWLC2V>"
  },
  {
    "poster": {
      "poster_name": "Tom Mitchell",
      "poster_handle": "tom.mitchell"
    },
    "time_stamp": "2021-11-16 12:41:31",
    "text": "good shout - will do, thanks again!"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-11-16 13:07:09",
    "edited": {
      "time_stamp": "2021-11-16 13:07:58"
    },
    "text": "Would be great if hubl included some functions/filters to manipulate/parse URLS.\n\nCrude implementation using a macro - will return parts of a URL.\n\n```{%- macro parse_uri(uri) -%}\n  {# <https://www.rfc-editor.org/rfc/rfc3986#appendix-B> #}\n  {% set pattern = \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\" %}\n  {# highly likely we'll need to escape stuff inside quotes #}\n  {% set output_json = '{\"protocol\": \"$2\", \"host\": \"$4\", \"path\": \"$5\", \"query\": \"$7\", \"fragment\": \"$9\"}' %}\n  {{ uri|regex_replace(pattern, output_json) }}\n{%- endmacro -%}```\nyou can feed it a URL like: https:///google.com?test=2&amp;test2=dhhdd and you'll get something like:\n``` {\"protocol\": \"https\", \"host\": \"<http://google.com|google.com>\", \"path\": \"\", \"query\": \"test=1\", \"fragment\": \"\"}```\nwhich you can then run through fromjson.",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-11-16 13:08:27"
      },
      {
        "time_stamp": "2021-11-16 13:08:57"
      },
      {
        "time_stamp": "2021-11-16 13:09:21"
      },
      {
        "time_stamp": "2021-11-16 13:10:22"
      },
      {
        "time_stamp": "2021-11-16 13:14:43"
      },
      {
        "time_stamp": "2021-11-16 13:17:14"
      },
      {
        "time_stamp": "2021-11-19 02:12:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 13:08:27",
    "text": "You can get most of the URL data from the `request`  variable"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 13:08:57",
    "text": "Doesnt that do what youre looking for?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-11-16 13:09:21",
    "edited": {
      "time_stamp": "2021-11-16 13:09:30"
    },
    "text": "This is for processing urls from a dynamic source - not based on the current page"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-11-16 13:10:22",
    "edited": {
      "time_stamp": "2021-11-16 13:10:56"
    },
    "text": "Have a client who needs params added to lots of dynamic URLs from a hubdb table"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-11-16 13:14:43",
    "text": "as much as i dislike using regex :smile:"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-11-16 13:17:14",
    "text": "AHhh I see — so they have a table with a bunch of URL’s and you want to be able to disect the URL’s so you can just add queries and manipulate them."
  },
  {
    "poster": {
      "poster_name": "Jay Forbes",
      "poster_handle": "jay458"
    },
    "time_stamp": "2021-11-16 14:22:01",
    "text": "We’re seeing a weird issue if we include two forms (`{% form \"form\" %}` ) on a page. The CTA on the first form doesn’t show up and the CTAs on the second form are repeated.\n\nIs this a known issue? Is it possible to have two forms on a CMS page?"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2021-11-16 14:24:31",
    "text": "You likely need to change the name of the tag on the second instance. For example:\n\n```{% form \"form1\" %}\n...\n{% form \"form2\" %}```",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-11-16 14:54:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jay Forbes",
      "poster_handle": "jay458"
    },
    "time_stamp": "2021-11-16 14:54:16",
    "text": "We were missing the `name` attributes but that doesn’t seem to fix the issue. Still seeing mix and match form CTAs"
  }
]
[
  {
    "poster": {
      "poster_name": "Masibonge Masinga",
      "poster_handle": "masingamasibonge"
    },
    "time_stamp": "2022-09-15 06:49:25",
    "text": "Does any one have documentation on how to make a OAuth access token call within ReactJS project without the need of using the HubSpot Client NPM package?\nI want to use it to Get a List of Blog posts.",
    "reply_count": 14,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-09-15 07:07:06"
      },
      {
        "time_stamp": "2022-09-15 07:07:22"
      },
      {
        "time_stamp": "2022-09-15 07:07:41"
      },
      {
        "time_stamp": "2022-09-15 07:08:06"
      },
      {
        "time_stamp": "2022-09-15 07:59:16"
      },
      {
        "time_stamp": "2022-09-15 08:01:05"
      },
      {
        "time_stamp": "2022-09-15 08:01:41"
      },
      {
        "time_stamp": "2022-09-15 08:02:23"
      },
      {
        "time_stamp": "2022-09-15 08:04:28"
      },
      {
        "time_stamp": "2022-09-15 08:04:29"
      },
      {
        "time_stamp": "2022-09-15 08:05:44"
      },
      {
        "time_stamp": "2022-09-15 08:05:53"
      },
      {
        "time_stamp": "2022-09-15 08:06:32"
      },
      {
        "time_stamp": "2022-09-15 08:06:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 07:07:06",
    "text": "<https://developers.HubSpot.com/docs/api/cms/blog-post>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 07:07:22",
    "text": "<https://share.getcloudapp.com/d5unEn8w>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 07:07:41",
    "text": "On these pages they have endpoints like /cms/v3/blogs/posts (get)"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 07:08:06",
    "text": "<https://developers.HubSpot.com/docs/api/developer-guides-resources>\nall sorts of stuff here on how to connect etc"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 07:15:52",
    "text": "Anyone want to upvote this to get HubSpot video to have better developer controls? Please comment and upvote if you have a moment <https://community.HubSpot.com/t5/HubSpot-Ideas/Extract-video-tracking-analytics-functionality-from-HubSpot/idc-p/693741>",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-09-15 07:20:56"
      },
      {
        "time_stamp": "2022-09-16 03:49:58"
      },
      {
        "time_stamp": "2022-09-16 05:49:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2022-09-15 07:20:56",
    "text": "Do you happen to have an example URL where one of these videos are implemented?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-15 07:59:16",
    "text": "You can also use HubL to return the blog url/details <https://developers.HubSpot.com/docs/cms/hubl/functions#blog-all-posts-url>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 08:01:05",
    "text": "You could even ping the rss feed! <https://knowledge.HubSpot.com/cos-blog/where-can-i-find-my-HubSpot-blog-rss-feed-url>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 08:01:41",
    "text": "Iâ€™m like is there another way? Scrap the blog page lol?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-15 08:02:23",
    "text": "I was thinking GraphQL but that functionality hasn't been released yet"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 08:04:28",
    "text": "I just found out I could access beta stuff in the app now"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 08:04:29",
    "text": "<https://share.getcloudapp.com/nOubk1rW>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-15 08:05:44",
    "text": "YES!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-15 08:05:53",
    "text": "The super secret beta's tab"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-15 08:06:32",
    "text": "I've been using it for like a month now. I might not need HubSpot TC services anymore if I can self enroll"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-15 08:06:33",
    "text": "I found that out at inbound"
  },
  {
    "poster": {
      "poster_name": "Christopher Chiha",
      "poster_handle": "christopher051"
    },
    "time_stamp": "2022-09-15 12:02:29",
    "edited": {
      "time_stamp": "2022-09-15 12:07:45"
    },
    "text": "Hello,\n\nAnybody has a sample code / documentation for creating association between a deal enrolled in a workflow and a custom object based on a certain property field?\n\n Scenario: If a certain property field in \"Apartment\" object = X, associate this Apartment to the deal that has a property field = x\n\nThank you!"
  },
  {
    "poster": {
      "poster_name": "Stuart Grant",
      "poster_handle": "stuart-g"
    },
    "time_stamp": "2022-09-15 14:54:01",
    "text": "I wanted to share some `hsVideo` -related code, it could be helpful to anyone looking to manage video player status via the new API.\n\nI needed to allow videos to automatically play only when in view, so if the containing video element intersects the center of the window on scroll, it will send a message to the `hsVideo` class instance and that updates the video status to `play`.  When the video no longer intersects, it will update the status to `pause`.\n\n```const SET_PLAYER_STATUS = 'SET_PLAYER_STATUS';\nconst hsVideos = window.hsVideoApi?.getPlayers();\nconst videoEls = document.querySelectorAll('.video-container');\n\nfunction manageVideoStatus() {\n  videoEls.forEach((videoEl) =&gt; {\n    const iframe = videoEl.querySelector('iframe');\n\n    if (iframe) {\n      const videoId = iframe.getAttribute('id')?.replace('hs_player_', '');\n      const hsVideo = hsVideos.find(({ id }) =&gt; id === videoId);\n\n      if (hsVideo) {\n        if (isElInView(iframe)) {\n          if (hsVideo.status !== statuses.playing) {\n            hsVideo.postMessageToPlayer(SET_PLAYER_STATUS, { status: statuses.playing });\n          }\n        } else if (hsVideo.status !== statuses.paused) {\n          hsVideo.postMessageToPlayer(SET_PLAYER_STATUS, { status: statuses.paused });\n        }\n      }\n    }\n  });\n}\n\nwindow.addEventListener('scroll', manageVideoStatus);\nmanageVideoStatus();```",
    "reply_count": 14,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2022-09-16 05:07:05"
      },
      {
        "time_stamp": "2022-09-16 08:35:01"
      },
      {
        "time_stamp": "2022-09-16 08:39:53"
      },
      {
        "time_stamp": "2022-09-16 09:35:25"
      },
      {
        "time_stamp": "2022-09-16 09:36:52"
      },
      {
        "time_stamp": "2022-09-16 09:37:01"
      },
      {
        "time_stamp": "2022-09-16 09:39:19"
      },
      {
        "time_stamp": "2022-09-16 09:40:26"
      },
      {
        "time_stamp": "2022-09-16 09:40:31"
      },
      {
        "time_stamp": "2022-10-02 12:20:10"
      },
      {
        "time_stamp": "2022-10-04 09:55:29"
      },
      {
        "time_stamp": "2022-10-04 09:56:40"
      },
      {
        "time_stamp": "2022-10-04 09:59:49"
      },
      {
        "time_stamp": "2022-10-04 10:00:35"
      }
    ]
  }
]
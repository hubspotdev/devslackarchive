[
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-10-29 01:43:57",
    "text": "Hey genius friends on slack,\n\nWe can send API calls in Workflows but struggling to understand how to customize pet contact?\n\nGoal is to enroll people based on form submission, generate custom discount code and pass into shopify.\n\nHas anyone solved a similar goal before?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-10-29 08:46:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-10-29 01:44:25",
    "text": "<@UCH1L597V> you might have some ideas here ^^^^",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-10-31 23:25:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Isaac Takushi",
      "poster_handle": "itakushi"
    },
    "time_stamp": "2019-10-29 08:46:33",
    "edited": {
      "time_stamp": "2019-10-29 08:46:42"
    },
    "text": "Hey, <@UFC6BLEAV>. Did you mean to type _“per”_ contact?\n\nBased on your description, I think you’ll need a few components:\n1) If you want the custom discount code to be passed in the HubSpot workflow’s `POST` request, you must generate the custom discount code yourself and write it to a custom contact property with the Contacts API (for example, with this endpoint: <https://developers.HubSpot.com/docs/methods/contacts/create_or_update>) _before_ the contact is enrolled in the workflow.\n2) The JSON data HubSpot sends through workflow webhooks likely won’t be in a format compatible with Shopify’s APIs, so you’ll need to send it to your own middleware first. Your middleware can then reformat the data and sent to its final destination.\n\nYou have two options when it comes to `POST`ing data from HubSpot workflows:\n1) The first is the one you’ve already mentioned: Workflow webhooks (<https://knowledge.HubSpot.com/workflows/how-do-i-use-webhooks-with-HubSpot-workflows>, <https://developers.HubSpot.com/docs/methods/workflows/webhook_information>) will `POST` _all_ of a contact record’s JSON data to the webhook URL you define, so if you send the requests to your own server/middleware, you can have your own code pick out whatever property values you need before sending them to a platform like Shopify.\n2) Workflow extensions (<https://developers.HubSpot.com/docs/methods/workflow-extensions/workflow-extensions-overview>) are similar, but they are more configurable. They allow you to send only the contact property values you want to a given webhook URL."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-10-29 14:55:31",
    "text": "Is there any way with the API to get an image served up at a specific size similarly to how the resize_image_url function works?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-10-29 15:27:13",
    "text": "you just need to request the file with the appropriate queries attached"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-10-29 15:27:19",
    "text": "<@U26DA9CQ0>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-10-29 15:27:40",
    "edited": {
      "time_stamp": "2019-10-29 15:27:45"
    },
    "text": "`<https://URL.jpeg?width=500>`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-10-29 15:28:01",
    "text": "the system does the rest"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-10-29 15:44:49",
    "text": "Hasn’t been working for some reason. It just serves up the original sized image. Maybe a caching issue?\n<@UPBL5U7EW> maybe you can add to this.",
    "reply_count": 14,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-10-29 15:55:34"
      },
      {
        "time_stamp": "2019-10-29 15:58:28"
      },
      {
        "time_stamp": "2019-10-29 15:58:36"
      },
      {
        "time_stamp": "2019-10-29 15:59:22"
      },
      {
        "time_stamp": "2019-10-29 16:00:12"
      },
      {
        "time_stamp": "2019-10-29 16:01:56"
      },
      {
        "time_stamp": "2019-10-29 16:03:36"
      },
      {
        "time_stamp": "2019-10-29 16:03:41"
      },
      {
        "time_stamp": "2019-10-29 16:04:52"
      },
      {
        "time_stamp": "2019-10-29 16:10:58"
      },
      {
        "time_stamp": "2019-10-29 16:16:11"
      },
      {
        "time_stamp": "2019-10-29 16:17:58"
      },
      {
        "time_stamp": "2019-10-29 16:27:10"
      },
      {
        "time_stamp": "2019-10-29 16:27:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 15:49:38",
    "text": "Hi there.   We are trying to use the resize_image_url feature (<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#resize-image-url>), and consume it through the api <https://api.hubapi.com/content/api/v2/blog-posts>"
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 15:51:17",
    "text": "Is there a way to have the API deliver a url similar to \"featured_image\" but which is the output of applying resize_image_url to the featured image?"
  },
  {
    "poster": {
      "poster_name": "Chris Shaw",
      "poster_handle": "cshaw"
    },
    "time_stamp": "2019-10-29 15:55:34",
    "text": "Hi <@U26DA9CQ0> Could you provide the link you are trying to resize?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-10-29 15:58:28",
    "text": "Hey Chris! You might want to talk to Calder below me. He is the one running the show."
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-10-29 15:58:36",
    "text": "<@UPBL5U7EW>"
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 15:59:22",
    "text": "<https://cdn2.HubSpot.net/hubfs/5088599/shutterstock_384205462.jpg>"
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 16:00:12",
    "text": "<https://cdn2.HubSpot.net/hubfs/5088599/shutterstock_384205462.jpg?width=200> ... this is not width 200"
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 16:01:56",
    "text": "Hi <@UL469K7LH>.  I'm new to HubSpot but an experienced developer.  We've been looking at using resize_image_url (<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#resize-image-url>) to generate resizable image urls"
  },
  {
    "poster": {
      "poster_name": "Chris Shaw",
      "poster_handle": "cshaw"
    },
    "time_stamp": "2019-10-29 16:03:36",
    "text": "Thanks for reporting this <@U26DA9CQ0> and <@UPBL5U7EW> It looks like this was an issue with a change we made late last week, I’ll have a fix out for it soon."
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 16:03:41",
    "text": "Ideally I would like to send the result of resize_image_url in a key alongside \"featured_image\""
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-10-29 16:04:52",
    "text": "Can you just add the parameter like featured_image + “?width=660”?"
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 16:10:58",
    "text": "Okay wait, I missed that <@UL469K7LH> said this will be fixed.  Does that mean that when it is fixed I will be able to directly add the width param without first using resize_image_url?  Thanks!"
  },
  {
    "poster": {
      "poster_name": "Chris Shaw",
      "poster_handle": "cshaw"
    },
    "time_stamp": "2019-10-29 16:16:11",
    "text": "You will still need to use the `resize_image_url` function, the change that I was referring to was a change that was only allowing one set of resize dimensions per original image"
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 16:17:58",
    "text": "Ah, okay.  So is there a way to add the result of `resize_image_url` to the api response that sends featured_image, post_body, etc...?   I am consuming the blog directly through the API so I don't have access to that function."
  },
  {
    "poster": {
      "poster_name": "Chris Shaw",
      "poster_handle": "cshaw"
    },
    "time_stamp": "2019-10-29 16:27:10",
    "text": "As far as I know, it is not possible, but I’ll do some digging tomorrow to see if I can find anything"
  },
  {
    "poster": {
      "poster_name": "Calder Daenzer",
      "poster_handle": "calder.daenzer"
    },
    "time_stamp": "2019-10-29 16:27:23",
    "text": "Thanks!"
  }
]
[
  {
    "poster": {
      "poster_name": "Jatin Sandilya",
      "poster_handle": "sandilya.jatin"
    },
    "time_stamp": "2024-04-16 01:46:41",
    "text": "Facing the same issue <@U04P1HJH8M8> were you able to find a solution?\n\nUnable to OAuth into an account I had previously access to."
  },
  {
    "poster": {
      "poster_name": "Parul Sen",
      "poster_handle": "devteam403"
    },
    "time_stamp": "2024-04-16 01:50:55",
    "text": "Hi <@U06UQBW2YSV>\nYes, my issue is resolved"
  },
  {
    "poster": {
      "poster_name": "Parul Sen",
      "poster_handle": "devteam403"
    },
    "time_stamp": "2024-04-16 01:51:03",
    "text": "you are working on the same API?"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2024-04-16 04:14:27",
    "text": "Cheers Matt - the annoying thing is that it shows as successful when you restore - would be great if it showed an error, and even better if it prompted and said would you like to merge this deleted contact into the new one that has been created since!"
  },
  {
    "poster": {
      "poster_name": "Wojciech Sokolowski",
      "poster_handle": "wojtek142"
    },
    "time_stamp": "2024-04-16 04:49:12",
    "edited": {
      "time_stamp": "2024-04-16 05:27:44"
    },
    "text": "Hey all! Do you know if these limits - <https://developers.HubSpot.com/docs/api/webhooks#limits|ref>\n```You can create a maximum of 1000 subscriptions per application. If you attempt to create more you will receive a 400 bad request in return with the following body:```\nare per application and user OR these are limits per all users of the application?\nEDIT:\nNvm :facepalm: registration is for application, not individual account"
  },
  {
    "poster": {
      "poster_name": "Sergi Capellera",
      "poster_handle": "scapellera"
    },
    "time_stamp": "2024-04-16 05:27:50",
    "text": "Hii! have the same problem. Did u find the solution?"
  },
  {
    "poster": {
      "poster_name": "Sergi Capellera",
      "poster_handle": "scapellera"
    },
    "time_stamp": "2024-04-16 05:28:23",
    "text": "Hii! I have the same problem. Did u find the solution?"
  },
  {
    "poster": {
      "poster_name": "Aaron M Thomas",
      "poster_handle": "athomas"
    },
    "time_stamp": "2024-04-16 06:40:31",
    "text": "Unfortunately, no. Sorry"
  },
  {
    "poster": {
      "poster_name": "Sergi Capellera",
      "poster_handle": "scapellera"
    },
    "time_stamp": "2024-04-16 06:53:24",
    "text": "I've been looking and haven't found anything regarding the NodeJS SDK but I've made the call through axios and the filters work fine. It's quite similar, if you want send me a DM and I'll send you the code :)"
  },
  {
    "poster": {
      "poster_name": "Aaron M Thomas",
      "poster_handle": "athomas"
    },
    "time_stamp": "2024-04-16 06:53:45",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 07:04:55",
    "text": "Totally agree. Pro tip: they do a pretty solid job of having better error messages in the console and network data. Sometimes you'll do something like what you're describing and everything looks hunkydory on the page but if you check the console it'll give you a pretty clear message like \"Cannot create contact with email address [blah] because there is an existing contact with that record\""
  },
  {
    "poster": {
      "poster_name": "Norman Khine",
      "poster_handle": "nkhine"
    },
    "time_stamp": "2024-04-16 09:39:42",
    "text": "Hello, has the api endpoint changed as I keep getting\n```That page is nowhere to be found```\nwhen I run\n```curl --request GET \\\n  --url <https://api.hubapi.com/cms/v3/performance/> \\\n  --header 'authorization: Bearer YOUR_ACCESS_TOKEN'```",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-04-17 06:32:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Johnson",
      "poster_handle": "ryan569"
    },
    "time_stamp": "2024-04-16 10:12:26",
    "text": "Bummer - same restriction with the AI chatbot - information needs to be publicly accessible. The client did agree to go the route of making their KB public since the links are only accessible through password-protected domains.\nAppreciate your help!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 10:12:51",
    "text": "of course, yeah that's really good to know"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 10:13:02",
    "text": "kinda makes sense, but still annoying"
  },
  {
    "poster": {
      "poster_name": "Nisan Ruvinov",
      "poster_handle": "nisanr"
    },
    "time_stamp": "2024-04-16 11:15:21",
    "text": "Hey all!\nis there an api that i can get the user info from? providing the token in the headers ofc",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-16 12:49:18"
      },
      {
        "time_stamp": "2024-04-17 03:07:57"
      },
      {
        "time_stamp": "2024-04-17 06:22:19"
      },
      {
        "time_stamp": "2024-04-17 07:09:41"
      },
      {
        "time_stamp": "2024-04-17 07:12:23"
      },
      {
        "time_stamp": "2024-04-17 07:16:09"
      },
      {
        "time_stamp": "2024-04-17 07:22:27"
      },
      {
        "time_stamp": "2024-04-17 07:34:29"
      },
      {
        "time_stamp": "2024-04-17 07:50:17"
      },
      {
        "time_stamp": "2024-04-17 08:04:14"
      },
      {
        "time_stamp": "2024-04-18 01:21:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 12:49:18",
    "text": "<https://developers.HubSpot.com/docs/api/crm/owners|I think this is what you want>"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 12:51:01",
    "text": "whats your search look like, what scores are you speaking of?"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 12:53:57",
    "text": "almost definitely, depending on how quickly you're searching, it shouldn't be too long though. HubSpot 'does a bunch of stuff immediately after you create it. That said, I would be surprised if you created an object, and then did a GET on the same ID, and that returned an error. Because the search is a little different, I could see there being a delay between creation and it being able to be surfaced from that specific endpoint"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 12:56:08",
    "text": "gotta set it to `\"\"` (empty string) then you can update it"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 13:05:13",
    "text": "You have a few options, these may change in the future:\n1. Setup resubscriptions through forms:\n    a. <https://knowledge.HubSpot.com/marketing-email/resubscribe-contacts-to-your-marketing-emails>\n2. Setup a custom page and use the (newer) subscriptions api \n    a. <https://developers.HubSpot.com/docs/api/marketing-api/subscriptions-preferences>\n3. A mix of 1 and a bit of elbow grease:\n    a. Setup a page with a resubscription form. Rep gets call from customer/contact. Rep goes to that page, puts in contact's email address. This generates the 'send resubscription email' link. When the rep clicks that, the contact gets and email, opts themselves back in\n"
  },
  {
    "poster": {
      "poster_name": "Victor Barros",
      "poster_handle": "victor387"
    },
    "time_stamp": "2024-04-16 13:17:28",
    "text": "&gt; The docs say that this property can only be moved forward unless it is cleared first\nWhere did you found this in the docs?"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 13:19:37",
    "text": "that's just always been the case, I have a post from Dadams from 2016. But as someone who worked there for 6 years will you accept a trust-me-bro?"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 13:20:03",
    "text": "<https://community.HubSpot.com/t5/APIs-Integrations/Update-Lifecycle-Stage-Using-API/m-p/231740>"
  },
  {
    "poster": {
      "poster_name": "Parker Allen",
      "poster_handle": "parker.allen"
    },
    "time_stamp": "2024-04-16 13:23:13",
    "text": "thanks <@U06B6J5BCRY> !\n\n<@U06LU432THN>\nfound it here: <https://knowledge.HubSpot.com/records/use-lifecycle-stages>\n&gt; â€¢ Imports, forms, the <https://knowledge.HubSpot.com/salesforce/install-the-HubSpot-salesforce-integration|Salesforce integration>, and the _Set a property value_ action in a chatflow or workflow can only set a record's default _Lifecycle stage_ property forward. To set the lifecycle stage backward via these tools, you will first need to clear the record's existing lifecycle stage value. The value can be <https://knowledge.HubSpot.com/records/update-a-property-value-for-a-record|cleared manually>, or may be automatically cleared via a<https://knowledge.HubSpot.com/records/change-record-lifecycle-stages-in-bulk| workflow> or an integration that syncs contact data.\n&gt; "
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 13:53:42",
    "text": "from <https://community.HubSpot.com/t5/APIs-Integrations/BAD-REFRESH-TOKEN-error-when-attempting-to-refresh-access-token/m-p/248823#:~:text=If%20you're%20seeing%20a,then%20refresh%20tokens%20are%20invalidated.|this post> and <https://community.HubSpot.com/t5/APIs-Integrations/What-to-do-when-you-suddenly-get-BAD-REFRESH-TOKEN-when-trying/m-p/241622|this post> it sounds like it tends to come from the account itself rather than anything youre doing (especially considering you're successfully connecting the first time, and no one else has this issue).\nHave you confirmed with the client they aren't uninstalling and that their portal is still active?"
  },
  {
    "text": "you might be overthinking it doggie, I got your back\nyou can do this right int he UI, use the COUNT option, and exactly as your surmised, count the recordIDs of the associated objects",
    "time_stamp": "2024-04-16 14:25:35"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 14:26:04",
    "edited": {
      "time_stamp": "2024-04-16 14:26:12"
    },
    "text": "this screenshot technically would do the opposite, counting the companies assocaited to the contact, but you hopefully get the gist"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 14:28:55",
    "text": "<@U01K82KG38C> he's doing this for a custom app that he wants to avoid having the client use workflows\n\n<@U05F0T2AJKA> use those IDs to make an additional API call (graphql might be your friend here) to get the engagements for the contact by that ID, and you can have it include more information about that engagement like its type etc. if you use graphql, you can simplify any unecessary looping and tierating"
  },
  {
    "poster": {
      "poster_name": "Silvio Fernandes",
      "poster_handle": "silvio.fernandes"
    },
    "time_stamp": "2024-04-16 14:39:44",
    "text": "Guys, I discovered the cause of this behavior, it was a usability error. When an error occurred when using our integration, we suggested that users completely uninstall the integration in HubSpot, and as we did not pay attention to the fact that OAuth integration is per account, that is, all users share the same installation, when any user uninstalled, caused interruption to others. We have already aligned the correct flow here and I believe this problem has been resolved."
  },
  {
    "poster": {
      "poster_name": "Dan Robinson",
      "poster_handle": "dan94.robinson"
    },
    "time_stamp": "2024-04-16 15:03:38",
    "text": "<@U01K82KG38C> Appreciate the thought, brother!\n<@U06B6J5BCRY> that sounds like an excellent approach! Apologies if the answer to this should be obvious, but is there a generic engagements api I can search? Or would this be a search against the contacts api? very helpful as always, Matt"
  },
  {
    "poster": {
      "poster_name": "Joshua de Leon",
      "poster_handle": "joshua475"
    },
    "time_stamp": "2024-04-16 15:33:03",
    "text": "Hey everyone. I'm making use of the node sdk and I'm calling the getAllContacts function and it seems to be take a extremely long time or is hung up somewhere. I've reduced down to a limit of 10 and to retrieve only two additional properties. Even with that I've only ever gotten a return from the api once.",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-17 06:37:41"
      },
      {
        "time_stamp": "2024-04-17 07:32:32"
      },
      {
        "time_stamp": "2024-04-17 07:32:58"
      },
      {
        "time_stamp": "2024-04-17 07:42:57"
      },
      {
        "time_stamp": "2024-04-17 07:45:40"
      },
      {
        "time_stamp": "2024-04-17 07:49:00"
      },
      {
        "time_stamp": "2024-04-17 07:53:12"
      },
      {
        "time_stamp": "2024-04-17 08:05:10"
      },
      {
        "time_stamp": "2024-04-17 08:08:55"
      },
      {
        "time_stamp": "2024-04-17 08:09:39"
      },
      {
        "time_stamp": "2024-04-17 08:13:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Kelly",
      "poster_handle": "mark742"
    },
    "time_stamp": "2024-04-16 15:41:25",
    "text": "Thanks <@U06B6J5BCRY> - This is the idea I had as well, and the suggestion I'm going to make to the client - I appreciate your response and confirming I was on the right path!"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 16:46:56",
    "text": "happy to hear it! Best of luck!"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 16:48:28",
    "text": "happy to hear heck yea!"
  },
  {
    "poster": {
      "poster_name": "Matt Cruz",
      "poster_handle": "matt.cruz"
    },
    "time_stamp": "2024-04-16 16:54:39",
    "text": "no need to apologize. so you have two options currently with HubSpot, and I am leaning more and more into the GraphQL option. I am after hours and sweepy now so I can get you more detail tomorrow but basically:\noption 1: native rest endpoints\nGET the contact <https://developers.HubSpot.com/docs/api/crm/contacts> (endpoints tab &gt; Basic Get)\nuse associations <https://developers.HubSpot.com/docs/api/crm/associations>\nto retrieve the associated engagements, which have these funky numbers associated with them (peep the table)\n loop through those and their created_at's to look for a match\n\noption 2:\nget on the GraphQL train (ChatGPT helped me a ton in learning the formatting which is a lil weird, at least to me, but worth it)\nmake 1 well-formatted call that returns back all the associated things you need, then check those created_at dates.\nagain gql IMO is a little funny, I am used to standard REST apis, but it's very useful and saves so much time on looping and shtuff"
  },
  {
    "poster": {
      "poster_name": "Dan Robinson",
      "poster_handle": "dan94.robinson"
    },
    "time_stamp": "2024-04-16 17:02:04",
    "text": "Super helpful! appreciate it. hadnâ€™t thought of using the created_at dates to compare, I like that. Yeah looking like graphql is the way to go for this! I think we already have a few of our calls using it, i.e. for searching contacts by email, shouldnâ€™t be too bad"
  }
]
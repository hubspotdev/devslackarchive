[
  {
    "poster": {
      "poster_name": "Stacey Thomas",
      "poster_handle": "stacey.thomas"
    },
    "time_stamp": "2025-02-07 02:21:15",
    "text": "I am actively using this endpoint with no issues, so perhaps something is wrong with the request.\n\nThere is a difference between the workflow ID you need for V2 and the more recent version of the automations endpoint, what is the exact error you were having? Any debugging on it?\n\nThis is the most recent 'enrol in workflow' endpoint i've found, not sure if there is any scope to develop it further into the v4 automations."
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2025-02-07 03:33:55",
    "text": "do I really have to loop trough each note and email in a ticket to get all attachments associated with a ticket? isn't there a cleaner way to do that?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2025-02-07 04:26:44"
      },
      {
        "time_stamp": "2025-02-07 04:27:31"
      },
      {
        "time_stamp": "2025-02-07 04:29:43"
      },
      {
        "time_stamp": "2025-02-07 04:30:12"
      },
      {
        "time_stamp": "2025-02-07 04:32:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2025-02-07 03:37:36",
    "text": "Quotes: <https://developers.HubSpot.com/docs/reference/api/crm/commerce/quotes>"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2025-02-07 03:38:24",
    "text": "Meetings: <https://developers.HubSpot.com/docs/reference/api/crm/engagements/meetings>"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2025-02-07 04:26:44",
    "text": "I’ve did something like that for a client"
  },
  {
    "text": "",
    "time_stamp": "2025-02-07 04:27:31"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2025-02-07 04:29:43",
    "text": "Result is giving me this :\n```{\n    \"total\": 5,\n    \"results\": [\n        {\n            \"id\": \"XXX\",\n            \"properties\": {\n                \"hs_attachment_ids\": null,\n                \"hs_createdate\": \"2025-02-03T13:08:23.971Z\",\n                \"hs_engagement_type\": \"NOTE\",\n                \"hs_lastmodifieddate\": \"2025-02-03T13:08:23.971Z\",\n                \"hs_object_id\": \"XXX\"\n            },\n            \"createdAt\": \"2025-02-03T13:08:23.971Z\",\n            \"updatedAt\": \"2025-02-03T13:08:23.971Z\",\n            \"archived\": false\n        },\n        {\n            \"id\": \"YYY\",\n            \"properties\": {\n                \"hs_attachment_ids\": null,\n                \"hs_createdate\": \"2025-02-03T13:10:53.533Z\",\n                \"hs_email_direction\": \"EMAIL\",\n                \"hs_engagement_type\": \"EMAIL\",\n                \"hs_lastmodifieddate\": \"2025-02-03T13:13:13.983Z\",\n                \"hs_object_id\": \"YYY\"\n            },\n            \"createdAt\": \"2025-02-03T13:10:53.533Z\",\n            \"updatedAt\": \"2025-02-03T13:13:13.983Z\",\n            \"archived\": false\n        },\n        {\n            \"id\": \"ZZZ\",\n            \"properties\": {\n                \"hs_attachment_ids\": \"1234567\",\n                \"hs_createdate\": \"2025-02-03T13:13:13.398Z\",\n                \"hs_email_direction\": \"INCOMING_EMAIL\",\n                \"hs_engagement_type\": \"INCOMING_EMAIL\",\n                \"hs_lastmodifieddate\": \"2025-02-03T13:13:15.302Z\",\n                \"hs_object_id\": \"ZZZ\"\n            },\n            \"createdAt\": \"2025-02-03T13:13:13.398Z\",\n            \"updatedAt\": \"2025-02-03T13:13:15.302Z\",\n            \"archived\": false\n        },\n        {\n            \"id\": \"AAA\",\n            \"properties\": {\n                \"hs_attachment_ids\": null,\n                \"hs_createdate\": \"2025-02-03T13:23:40.482Z\",\n                \"hs_engagement_type\": \"NOTE\",\n                \"hs_lastmodifieddate\": \"2025-02-03T13:23:40.910Z\",\n                \"hs_object_id\": \"AAA\"\n            },\n            \"createdAt\": \"2025-02-03T13:23:40.482Z\",\n            \"updatedAt\": \"2025-02-03T13:23:40.910Z\",\n            \"archived\": false\n        },\n        {\n            \"id\": \"BBB\",\n            \"properties\": {\n                \"hs_attachment_ids\": null,\n                \"hs_createdate\": \"2025-02-03T17:12:42.217Z\",\n                \"hs_engagement_type\": \"NOTE\",\n                \"hs_lastmodifieddate\": \"2025-02-03T17:12:42.846Z\",\n                \"hs_object_id\": \"BBB\"\n            },\n            \"createdAt\": \"2025-02-03T17:12:42.217Z\",\n            \"updatedAt\": \"2025-02-03T17:12:42.846Z\",\n            \"archived\": false\n        }\n    ]\n}```"
  },
  {
    "poster": {
      "poster_name": "Camille Markentive",
      "poster_handle": "camille.saute"
    },
    "time_stamp": "2025-02-07 04:30:12",
    "text": "You can quite easily collect all attachment IDs based on that"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2025-02-07 04:32:10",
    "text": "Thanks Camille! that's cleaner than what I was doing for sure"
  },
  {
    "poster": {
      "poster_name": "András Boros",
      "poster_handle": "andras.boros"
    },
    "time_stamp": "2025-02-07 05:37:35",
    "edited": {
      "time_stamp": "2025-02-07 05:38:41"
    },
    "text": "It looks like even if it's not included in the call the UI send it to the HS cta service when I call the `window.HubSpotCallsToActions.refresh();` the only way I can target a specific user on our page with an email address or even with the \"visitor is contact\" or \"logged in visitor true\" criteria, is when I've sent the id too like this:\n\n```_hsq.push([\n  'identify',\n  {\n    email: 'target@email.com',\n  }]);\n_hsq.push(['setPath', '/dashboard']);\n_hsq.push(['trackPageView']);\nwindow.HubSpotCallsToActions.refresh();```\nand the CTA pops up :magic_wand:"
  },
  {
    "poster": {
      "poster_name": "Bianca",
      "poster_handle": "bianca"
    },
    "time_stamp": "2025-02-07 06:27:00",
    "text": "Anyone actually had success with <https://developers.HubSpot.com/docs/reference/api/cms/pages#post-%2Fcms%2Fv3%2Fpages%2Fsite-pages%2Fbatch%2Fupdate|Updating a batch of site pages> ? I'm trying to change the module_id of module \"Hero\" on all pages using a specific template. We're getting a 200 but seeing no updates, and we're unsure what we're doing wrong. With <@U083K7L9HTJ>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2025-02-07 07:14:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Silva",
      "poster_handle": "silvapruebasbay"
    },
    "time_stamp": "2025-02-07 06:42:42",
    "text": "Hello, Shar. Thanks for your response. However, we did connect to HubSpot from PowerBi, but we did not find the feedback sending data. We access contacts, businesses and tickets, but we cannot do so with feedback"
  },
  {
    "poster": {
      "poster_name": "Taylor Del Giudice",
      "poster_handle": "taylor464"
    },
    "time_stamp": "2025-02-07 07:07:13",
    "text": "anyone here have had issues with scopes and users not able to log in due to this? Would love to chat about it"
  },
  {
    "poster": {
      "poster_name": "Bianca",
      "poster_handle": "bianca"
    },
    "time_stamp": "2025-02-07 07:14:56",
    "text": "module_id is read-only, so this is a dead end. Any other suggestions on how to create a cloned page that uses a different theme and thus the same module but this theme's variant of it? From staging to live environment, to be able to content stage in staging theme and then flip theme to live and the modules to live modules variants."
  },
  {
    "poster": {
      "poster_name": "Josh Abrams",
      "poster_handle": "jabrams"
    },
    "time_stamp": "2025-02-07 08:11:22",
    "text": "Is it possible, to anyone's knowledge, to export (via UI or API) the audit log for an individual field?\n\nSpecifically, we have several thousand companies that we cleared the company owner. We want to return the value to what it was before clearing.",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2025-02-07 09:39:06"
      },
      {
        "time_stamp": "2025-02-07 09:40:05"
      },
      {
        "time_stamp": "2025-02-07 09:42:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2025-02-07 09:39:06",
    "text": "Yeah this is totally doable"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2025-02-07 09:40:05",
    "text": "You would use the API and include property history as a parameter and add in the fields you need history for"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2025-02-07 09:42:29",
    "text": "```import requests\nimport json\n\ndef get_company_property_history(company_id, access_token):\n    \"\"\"\n    Retrieve a HubSpot company's properties and their history.\n    \n    :param company_id: ID of the company in HubSpot.\n    :param access_token: Private app or OAuth access token with CRM object read permissions.\n    :return: JSON response containing the company and its property histories.\n    \"\"\"\n    url = f\"<https://api.hubapi.com/crm/v3/objects/companies/{company_id}|https://api.hubapi.com/crm/v3/objects/companies/{company_id}>\"\n    \n    # These query parameters:\n    #   - properties: request the current values for these properties\n    #   - propertiesWithHistory: request historical versions for these properties\n    params = {\n        \"properties\": \"name,domain\",\n        \"propertiesWithHistory\": \"name,domain\"\n    }\n    \n    headers = {\n        \"Authorization\": f\"Bearer {access_token}\"\n    }\n    \n    response = requests.get(url, headers=headers, params=params)\n    if response.status_code == 200:\n        return response.json()\n    else:\n        raise Exception(f\"Request failed with status code {response.status_code}: {response.text}\")\n\nif __name__ == \"__main__\":\n    # Replace these values with your actual company ID and access token\n    COMPANY_ID = \"123456789\"\n    ACCESS_TOKEN = \"YOUR_ACCESS_TOKEN\"\n\n    try:\n        company_data = get_company_property_history(COMPANY_ID, ACCESS_TOKEN)\n        \n        # Print the raw JSON for clarity\n        print(json.dumps(company_data, indent=2))\n        \n        # Example on how to traverse the 'properties' data to show history\n        properties = company_data.get(\"properties\", {})\n        \n        for prop_name, prop_info in properties.items():\n            print(f\"\\nProperty: {prop_name}\")\n            \n            # Current value\n            current_value = prop_info.get(\"value\")\n            print(f\"  Current Value: {current_value}\")\n            \n            # Historical versions\n            versions = prop_info.get(\"versions\", [])\n            if versions:\n                print(\"  History:\")\n                for version in versions:\n                    # Each version has a timestamp and possibly a source, sourceId, etc.\n                    timestamp = version.get(\"timestamp\")\n                    value = version.get(\"value\")\n                    print(f\"    - Changed at {timestamp}, value: {value}\")\n            else:\n                print(\"  No historical versions found.\")\n\n    except Exception as e:\n        print(f\"Error occurred: {e}\")```"
  },
  {
    "poster": {
      "poster_name": "Isabelle OMahony",
      "poster_handle": "isabelle.omahony"
    },
    "time_stamp": "2025-02-07 16:55:45",
    "text": "Hi there, I'm currently stuck trying to switch from existing v2 API code to v3, this isn't my forte and I can't find out how to get the company IDs associated with the deal. I could list the deal properties but the associations listing isn't working for me. I'm using node.js, can someone help advise?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2025-02-07 18:48:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2025-02-07 18:48:02",
    "text": "Send me a DM - happy to support but need to see your code"
  }
]
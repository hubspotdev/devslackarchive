[
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2022-11-21 10:45:15",
    "text": "Ah — that’s added via the `{{ standard_footer_includes }}` tag that you should find towards the end of your `base.html` (or equivalent) template.\n\nI don’t believe we have much control over its output as developers, though I suppose there’s nothing to stop you from outputting it into a script tag and managing its output with JS."
  },
  {
    "text": "Our blog search results page h1 displays apostrophes as html code. The input also changes the character into html code after page load. Our blog search results page module uses `{{ request.query_dict.term|escape }}` to get the search term and display it on the page. What can I do to render those characters correctly?",
    "time_stamp": "2022-11-21 11:42:14",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-11-21 12:46:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2022-11-21 12:46:46",
    "text": "I can’t say specifically without a little bit more context, but it looks like you’re using the `escape` filter in a context where your output is already being escaped.\n\nRemoving the `escape` filter will almost certainly make them being displaying correctly, or you can wrap this particular section of markup with the `{% raw %}` tag."
  }
]
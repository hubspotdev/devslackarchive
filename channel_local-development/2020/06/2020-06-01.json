[
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2020-06-01 06:22:57",
    "text": "<@UATE4ATHP> <@U6GNQ7JBU> having the same problem for my dev. account.\nAny idea how to overcome this for the dev portal?\n`[ERROR] Folder name cannot end with .functions`"
  },
  {
    "poster": {
      "poster_name": "Walt Irby",
      "poster_handle": "wirby"
    },
    "time_stamp": "2020-06-01 07:52:45",
    "edited": {
      "time_stamp": "2020-06-01 08:01:31"
    },
    "text": "Hi, sorry if this has already been discussed/resolved above; i just joined. I’m experiencing an incredibly frustrating issue with HubSpot local dev.  i make a drag and drop template in browser in HubSpot design tools, but when i run hs watch locally it overwrites/erases the template…  any ideas?",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-06-01 08:15:46"
      },
      {
        "time_stamp": "2020-06-01 08:18:59"
      },
      {
        "time_stamp": "2020-06-01 15:05:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-06-01 08:15:46",
    "text": "sounds like you need to either `hs fetch` before you run `hs watch`, or disable the initial upload option with a flag"
  },
  {
    "poster": {
      "poster_name": "Walt Irby",
      "poster_handle": "wirby"
    },
    "time_stamp": "2020-06-01 08:18:59",
    "text": "maryland devs unite!  that was it, thanks Mark.  as usual, the docs are great and i just lazily overlooked ’em <https://designers.HubSpot.com/docs/developer-reference/local-development-cms-cli#watch>"
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 08:52:27",
    "edited": {
      "time_stamp": "2020-06-01 08:53:38"
    },
    "text": "I'm at the very early stage of exploring the new HubSpot themes boilerplate code locally in VScode. Does anyone hav a VSCode extension that will prettify / beautify the code - particularly the Hubl tags? The method I'm using isn't giving the Hubl tags any attention when it organises the code hierarchy and indentation",
    "reply_count": 12,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-06-01 08:55:15"
      },
      {
        "time_stamp": "2020-06-01 09:23:20"
      },
      {
        "time_stamp": "2020-06-01 09:24:21"
      },
      {
        "time_stamp": "2020-06-01 09:30:54"
      },
      {
        "time_stamp": "2020-06-01 09:33:02"
      },
      {
        "time_stamp": "2020-06-01 09:34:29"
      },
      {
        "time_stamp": "2020-06-01 09:34:32"
      },
      {
        "time_stamp": "2020-06-01 09:36:08"
      },
      {
        "time_stamp": "2020-06-01 09:37:40"
      },
      {
        "time_stamp": "2020-06-01 09:39:45"
      },
      {
        "time_stamp": "2020-06-10 05:03:58"
      },
      {
        "time_stamp": "2020-06-10 05:05:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2020-06-01 08:55:15",
    "text": "Hey Jon - I use the Better Jinja extension which makes the HubL easier on the eyes when viewing it with HTML/CSS in VSCode."
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 09:23:20",
    "text": "Thanks. I've installed"
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 09:24:21",
    "text": "How do you use the extension to format your code? I have in successfully installed"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2020-06-01 09:30:54",
    "text": "In the bottom right hand corner of VS code you should be able to choose the language used. If you're viewing HTML with HubL you'd want to use Jinja HTML and if you're using CSS with HubL you'd want to use Jinja CSS."
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 09:33:02",
    "text": "Thanks - so now all my jinja tags are purple - great. But thy still don't look right - they are not indented at all. And if I add my own indentation, it gets removed when I save."
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 09:34:29",
    "text": "Oh hang on - no it's working a bit better now with that extensiom"
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 09:34:32",
    "text": "n"
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 09:36:08",
    "text": "I'd still love to see all my jinja tags indent themselves and  line itself up with tabs with a key press though"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2020-06-01 09:37:40",
    "text": "Yeah agreed - I think that would be a nice feature/extension. I'm not sure if anyone else has extensions they use for this if they use VSCode. Better Jinja was the main one I found that helped out."
  },
  {
    "poster": {
      "poster_name": "Jon Burdon",
      "poster_handle": "jb"
    },
    "time_stamp": "2020-06-01 09:39:45",
    "text": "I think I have something that does it in my other setup - will check"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-06-01 15:05:16",
    "text": "Hi Walt, very happy to hear that the usual is that “the docs are great”.\n\nTo help prevent future devs from running into that same issue I’ve updated the word “upload” to be bold on the watch command.\n\nIn-case you need to revert changes that were overwritten, know that the design manager has a revisions function you can use to revert back to a version from before you overwrote with the local dev tools."
  },
  {
    "poster": {
      "poster_name": "Ian Hoyte",
      "poster_handle": "ian135"
    },
    "time_stamp": "2020-06-01 17:07:22",
    "text": "I'm working on a new build using the local development boiler plate--awesome! I'm not a huge fan of the HUBL CSS syntax, so I've setup a workflow to use scss compiling and some somewhat greasy replace tactics to insert hubl variables.  From there I've chained an NPM script to run the taskrunner alongside the `hs watch` command which works OK, however it seems that sometimes the file is uploaded _before_ the task runner completes. Is there any way to hook into the `hs watch` method in order to chain this better? Thanks in advanced for your input.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-06-01 22:55:49"
      },
      {
        "time_stamp": "2020-06-02 09:47:43"
      },
      {
        "time_stamp": "2020-06-02 09:49:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2020-06-01 22:55:49",
    "text": "Hi Ian, this doesn't really answer your question but might be an option. We use a `dist` folder where all our compiled code is stored and run `hs watch` on that folder only. That way, the compiled code is only synced when our gulp processes are done."
  }
]
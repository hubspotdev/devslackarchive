[
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2019-04-04 08:13:07",
    "edited": {
      "time_stamp": "2019-04-04 08:13:21"
    },
    "text": "```\n{% if content.tag_list %}\n\t\t\t\t\t\t\t\t\t{% for tag in content.tag_list %}\n\t\t\t\t\t\t\t\t\t\t&lt;li class=\"o-list-inline-item\"&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;a href=\"{{ blog_tag_url(group.id, tag.slug) }}\"&gt;{{ tag.name }}&lt;/a&gt;{% if not loop.last %},{% endif %}\n\t\t\t\t\t\t\t\t\t\t&lt;/li&gt;\n\t\t\t\t\t\t\t\t\t{% endfor %}\n\t\t\t\t\t\t\t{% endif %}\n```\nIs there a way to limit the amount of tags displayed? ie. just display one?",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-04 08:14:00"
      },
      {
        "time_stamp": "2019-04-04 08:14:01"
      },
      {
        "time_stamp": "2019-04-04 08:17:18"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-04 08:14:00",
    "text": "`content.tag_list|first`?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-04 08:14:01",
    "edited": {
      "time_stamp": "2019-04-04 08:15:31"
    },
    "text": "If its going to be only one you don't need the loop.\nOtherwise you can limit with `loop.index`\n```\n{% if content.tag_list %}\n  {% for tag in content.tag_list %}\n    {% if loop.index &lt;= 3 %}\n     ...\n    {% endif %}\n  {% endfor %}\n{% endif %}\n```"
  },
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2019-04-04 08:17:18",
    "text": "Perfect! Cheers guys :thumbsup:"
  },
  {
    "text": "*Sanity Check: logo field in custom module*\n\nI am only getting the Else  content:\n“no logo specified” the HS account has a logo specified, and I can see it in the field. I am *not* using the override toggle.\n\nany idea what I’m doing wrong?",
    "time_stamp": "2019-04-04 09:51:18",
    "edited": {
      "time_stamp": "2019-04-04 09:51:57"
    }
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 10:02:18",
    "text": "inspected the HubSpot logo module for clues :faceplam:  everything is obfuscated behind the Logo HubL tag. So I can’t see it anyways…"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 10:09:18",
    "text": "anyone know if there is a straight up HubL supported variable for logo?\n\nI’m thinking I need to display that if not overridden, I just can’t find that variable in the docs"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-04 10:10:36",
    "text": "`{{linked_logo}}`?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-04 10:10:51",
    "edited": {
      "time_stamp": "2019-04-04 10:10:58"
    },
    "text": "also `{{logo}}` looks to be one"
  },
  {
    "text": "found em:\n`{{domain_settings._____}}`",
    "time_stamp": "2019-04-04 10:12:27",
    "edited": {
      "time_stamp": "2019-04-04 10:12:38"
    }
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 10:18:54",
    "edited": {
      "time_stamp": "2019-04-04 10:19:11"
    },
    "text": "I figured it out `{{domain_settings.site_settings.logo_src}}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 10:19:00",
    "text": "took me a bit"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 10:21:56",
    "text": "when in doubt developer-info-it-out"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-04 12:04:17",
    "text": "I am trying to implement a Bootstrap carousel module using a Repeater but the Carousel has the “carousel-indicators” that also need to output the number of items in the for-loop along with indicating the “data-slide-to=“n”“, does anyone have code example of how to develop that:\n\n&lt;ol class=“carousel-indicators”  data-target=“#carousel”&gt;\n          &lt;li data-target=“#carousel” data-slide-to=“0\" class=“active”&gt;&lt;/li&gt;\n           &lt;li data-target=“#carousel” data-slide-to=“1”&gt;&lt;/li&gt;\n          &lt;li data-target=“#carousel” data-slide-to=“2”&gt;&lt;/li&gt;\n          &lt;li data-target=“#carousel” data-slide-to=“3”&gt;&lt;/li&gt; -\n      &lt;/ol&gt;"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-04 12:08:34",
    "edited": {
      "time_stamp": "2019-04-04 12:08:46"
    },
    "text": "you can try `{{ loop.index }}` though i dont remember if it start with zero with that",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-04 12:13:43"
      },
      {
        "time_stamp": "2019-04-04 12:14:27"
      },
      {
        "time_stamp": "2019-04-04 12:15:22"
      },
      {
        "time_stamp": "2019-04-04 14:56:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 12:13:43",
    "edited": {
      "time_stamp": "2019-04-04 12:14:53"
    },
    "text": "starts at 1. if you need to start at 0 `{{loop.index0}}`"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-04 12:14:27",
    "text": ":point_up_2: this guy HubL's"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 12:15:22",
    "text": "They see me HubLin, they hatin’…"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:28:08",
    "text": "maybe a silly question, but can you sort by popular post in a blog template?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:28:30",
    "text": "i have something like this ```{% if request.path_and_query is string_containing \"popular\" %}\n                      {% set content = blog_popular_posts('default', 3) %}                      \n\n                      {% for content in contents %}  blah blah blah```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:29:07",
    "text": "i know the if statement is wokring, but the sort does not seem to be"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:29:20",
    "text": "how am i a fool today?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:30:12",
    "text": "so you’re saying it’s not returning them in order of popularity?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:30:16",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:30:23",
    "text": "oh wait"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:30:48",
    "text": "i need an s?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-04-04 13:32:07"
      },
      {
        "time_stamp": "2019-04-04 13:32:10"
      },
      {
        "time_stamp": "2019-04-04 13:32:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:30:56",
    "text": "in 'set content'"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:31:18",
    "text": "lol  what did you try `blog_popular_post`?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-04 13:31:35",
    "text": "i see what he did lol"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:31:48",
    "text": "ohhhh"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:31:51",
    "text": "derp hahahaa"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-04 13:31:54",
    "edited": {
      "time_stamp": "2019-04-04 13:32:02"
    },
    "text": "way to go Dennis, mucking up things per usual (side note, its nice its not me this time)"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:32:04",
    "text": "ha"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2019-04-04 13:32:07",
    "text": "<https://HubSpotdev.slack.com/archives/C2YH119N2/p1554406160076000>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-04 13:32:08",
    "text": "ugh i cant spell"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:32:10",
    "text": "found it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:32:23",
    "text": ":slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:32:44",
    "text": "been there done that"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:33:06",
    "text": "HU FREAKIN ZAH!"
  },
  {
    "time_stamp": "2019-04-04 13:35:45",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:42:10",
    "text": "nows your chance for redemption, it’s my turn to show my stupid.\n<https://spin.d.pr/LsSGpa+>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:42:46",
    "text": "yes i realize the |reverse in the first condition is pointless because i can change 1 param to true and do the same thing."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:43:07",
    "text": "but why in the world is the second instance of it erroring but the first isn’t ?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:43:38",
    "text": "Error says `java.lang.NullPointerException` been seeing those a lot lately"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:43:49",
    "text": "not very helpful of messages"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-04-04 13:47:15",
    "text": "changed to dictsort and it’s happy now… <https://spin.d.pr/VkCXu5> but doesn’t actually sort…"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-04 13:49:25",
    "text": "i would never call you stupid"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-04 14:56:09",
    "text": "<@U2H3TT8F2> and <@U7SL518D6> thank you I will try that in my hubL"
  }
]
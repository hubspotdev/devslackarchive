[
  {
    "poster": {
      "poster_name": "Gabe Sousa",
      "poster_handle": "gsousa09"
    },
    "time_stamp": "2019-05-10 08:56:32",
    "text": "Hi everyone, I am looking to find out if it’s possible to disable the HubSpot tracking code by default, then have it manually triggered once a user consents. I found that we can place a ‘doNotTrack’ cookie, but I’m assuming this method still triggers the tracking code first, then adds the do not track cookie. Our team is using ONE TRUST to consent to the cookies. My ultimate goal would be to not have the tracking code trigger at all, unless a user consents.",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-05-10 09:42:02"
      },
      {
        "time_stamp": "2019-05-10 09:54:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon Bishop",
      "poster_handle": "jbishop"
    },
    "time_stamp": "2019-05-10 09:42:02",
    "text": "It looks like the solution is to add some js that will prevent tracking. My question would be is this a viable solution? Ideally no scripts would run to start and then would be triggered once the user gives consent via onetrust. <https://developers.HubSpot.com/docs/methods/tracking_code_api/place_do_not_track_cookie>"
  },
  {
    "poster": {
      "poster_name": "Jon Bishop",
      "poster_handle": "jbishop"
    },
    "time_stamp": "2019-05-10 09:54:13",
    "text": "Is there a better solution to control HubSpot core script load without using HubSpot's cookie consent?"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-05-10 13:11:58",
    "text": "Hello!\n\nHow to use the values of a JSON response from an external software as options for a HubSpot property using node.js?\n\n<https://community.HubSpot.com/t5/APIs-Integrations/How-to-use-the-values-of-a-JSON-response-from-an-external/m-p/269623#M24346>",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-05-10 13:26:49"
      },
      {
        "time_stamp": "2019-05-10 13:36:47"
      },
      {
        "time_stamp": "2019-05-13 11:43:57"
      },
      {
        "time_stamp": "2019-05-13 11:46:21"
      },
      {
        "time_stamp": "2019-05-13 11:47:18"
      },
      {
        "time_stamp": "2019-05-13 12:16:53"
      },
      {
        "time_stamp": "2019-05-15 08:13:11"
      },
      {
        "time_stamp": "2019-05-15 08:17:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-05-10 13:26:49",
    "text": "Hey <@UDU6KEBFB> There are two ways you could solve something like this. One is to use a Timeline Event <https://developers.HubSpot.com/docs/methods/timeline/timeline-overview> that supports the 1:many data model that you are looking for as it relates to a contact.  Two is to concatenate all the ids into a single value and send that to be the options for the program property.  Something like\n```\nconst programObj = JSON.parse(parsedBody);\n\nconst programIds = programObj.map(program =&gt; {\n    return program.id\n})\n```"
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2019-05-10 13:36:47",
    "text": "Thanks! i'll try this out!"
  }
]
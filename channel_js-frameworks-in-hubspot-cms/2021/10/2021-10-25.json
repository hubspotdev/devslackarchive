[
  {
    "text": "Hello, talents.\nI am trying to use HubDB in the React.js project and tried this way.\n\nin module.html",
    "time_stamp": "2021-10-25 06:14:30"
  },
  {
    "poster": {
      "poster_name": "Cheng He",
      "poster_handle": "freelance1331"
    },
    "time_stamp": "2021-10-25 06:15:15",
    "text": "But in `index.js` of React.js, `rows` returned empty array."
  },
  {
    "poster": {
      "poster_name": "Cheng He",
      "poster_handle": "freelance1331"
    },
    "time_stamp": "2021-10-25 06:15:29",
    "text": "Any ideas for rendering HubDB data to React.js?",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-10-25 07:56:07"
      },
      {
        "time_stamp": "2021-10-25 07:59:36"
      },
      {
        "time_stamp": "2021-10-25 08:32:56"
      },
      {
        "time_stamp": "2021-10-25 10:23:15"
      },
      {
        "time_stamp": "2021-10-25 10:23:20"
      },
      {
        "time_stamp": "2021-10-25 10:25:23"
      },
      {
        "time_stamp": "2021-10-25 10:25:27"
      },
      {
        "time_stamp": "2021-10-25 10:25:46"
      },
      {
        "time_stamp": "2021-10-25 11:12:41"
      },
      {
        "time_stamp": "2021-10-25 11:48:53"
      },
      {
        "time_stamp": "2021-10-25 11:49:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-10-25 07:56:07",
    "edited": {
      "time_stamp": "2021-10-25 08:00:35"
    },
    "text": "You have two issues, invalid HubL and invalid HTML happening. (quotes in HTML and trying to nest two HubL statements)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-10-25 07:59:36",
    "text": "like you wouldn’t do &lt;?php &lt;?php  in PHP or &lt;div &lt;div&gt;&gt; in HTML"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-10-25 08:32:56",
    "text": "You have a few options you can implement. The most similar to what you’re doing now though is:\n\nSet rows to an empty array\n\nLoop through hubdb_table_rows (or a variable set to that value)\nthen use a DO statement to effectively do exactly what you’re trying to do now. <https://developers.HubSpot.com/docs/cms/hubl#do-tag>"
  },
  {
    "poster": {
      "poster_name": "Cheng He",
      "poster_handle": "freelance1331"
    },
    "time_stamp": "2021-10-25 10:23:15",
    "text": "Hey, <@U7SL518D6>\nThank you for your kind message.\nSo I tried this way."
  },
  {
    "text": "",
    "time_stamp": "2021-10-25 10:23:20"
  },
  {
    "poster": {
      "poster_name": "Cheng He",
      "poster_handle": "freelance1331"
    },
    "time_stamp": "2021-10-25 10:25:23",
    "text": "But I could get this results as a string type."
  },
  {
    "text": "",
    "time_stamp": "2021-10-25 10:25:27"
  },
  {
    "poster": {
      "poster_name": "Cheng He",
      "poster_handle": "freelance1331"
    },
    "time_stamp": "2021-10-25 10:25:46",
    "text": "Any ideas for getting as array of object?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-10-25 11:12:41",
    "text": "That’s just JavaScript,\n```JSON.parse(yourString)```\n"
  },
  {
    "poster": {
      "poster_name": "Cheng He",
      "poster_handle": "freelance1331"
    },
    "time_stamp": "2021-10-25 11:48:53",
    "text": "That is not working so I am asking this issue on the channel. :slightly_smiling_face:\nPlease focus on the string again.\nActually that is not available string for JSON.parse."
  },
  {
    "poster": {
      "poster_name": "Cheng He",
      "poster_handle": "freelance1331"
    },
    "time_stamp": "2021-10-25 11:49:21",
    "text": "string has `=` symbol between key and value.\nThis is what I can not really understand."
  }
]
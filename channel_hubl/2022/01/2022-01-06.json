[
  {
    "poster": {
      "poster_name": "Chul Christian Aamodt",
      "poster_handle": "chul.aamodt"
    },
    "time_stamp": "2022-01-06 07:35:29",
    "edited": {
      "time_stamp": "2022-01-06 07:35:57"
    },
    "text": "How to hide enddate if enddate is empty in database?\n\n{{ row.startdate|datetimeformat('%e %B %Y') }} - {{ row.enddate|datetimeformat('%e %B %Y')  }}, {{ row.region }}",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-01-06 08:55:06"
      },
      {
        "time_stamp": "2022-01-07 00:31:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michele Herzog",
      "poster_handle": "michele.herzog24"
    },
    "time_stamp": "2022-01-06 08:55:06",
    "text": "Hey <@U02S5Q1Q6N8>, seems like you could use:\n```{{ row.startdate|datetimeformat('%e %B %Y') }}\n{% if row.enddate %}\n- {{ row.enddate|datetimeformat('%e %B %Y')  }},\n{% endif %} \n{{ row.region }}```"
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-01-06 11:15:55",
    "edited": {
      "time_stamp": "2022-01-10 10:33:43"
    },
    "text": "I made a simple macro imitating classnames/clsx functionality if youâ€™re into that sort of thing.\n```{# A simple way of joining classes based on boolean conditions to prevent\nyou from having to clutter your markup with if statements.\n\nExample:\n&lt;div {{ class_names([ 'pie', { 'cake': false, 'pizza': true } ]) }}&gt;\n\nOutput:\n&lt;div class='pie pizza'&gt;\n\n#}\n{% macro class_names (array) %}\n  {% set classes = [] %}\n  {% for item in array %}\n    {% if item is string and item not in classes %}\n      {% do classes.append(item) %}\n    {% elif item.items()|length %}\n      {% for key, value in item.items() %}\n        {% if value is boolean and value is true %}\n          {% do classes.append(key) %}\n        {% endif %}\n      {% endfor %}\n    {% endif %}\n  {% endfor %}\n  {% if classes|length %}\n    class='{{ classes|join(' ') }}'\n  {% endif %}\n{% endmacro %}```",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-01-06 21:15:04"
      },
      {
        "time_stamp": "2022-01-06 21:26:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-01-06 20:38:04",
    "edited": {
      "time_stamp": "2022-01-06 20:47:16"
    },
    "text": "Not sure if it's a bug or not, but it seems a little weird to me. When looping through a dictionary, removing the current iterating item from the dictionary abruptly ends the loop. I would kind of expect it to continue on to the next item at least. EDIT: Wait, now it's giving me a concurrent modification exception, which makes sense. I wonder why I wasn't getting it before though..."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-01-06 21:15:04",
    "text": "Might consider sharing or reposting to the <#CJ50DGZEG|code-gallery>  channel! Likely where folks will look for this sort of stuff. "
  },
  {
    "poster": {
      "poster_name": "Dustin Perolio",
      "poster_handle": "dustin305"
    },
    "time_stamp": "2022-01-06 21:26:25",
    "text": "Ah, okay, thanks, will do."
  },
  {
    "poster": {
      "poster_name": "Chul Christian Aamodt",
      "poster_handle": "chul.aamodt"
    },
    "time_stamp": "2022-01-07 00:31:58",
    "text": "Thanks!!!"
  }
]
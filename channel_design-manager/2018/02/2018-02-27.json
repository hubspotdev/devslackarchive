[
  {
    "poster": {
      "poster_name": "Patrick O'Neal",
      "poster_handle": "poneal"
    },
    "time_stamp": "2018-02-27 09:02:50",
    "text": "When I clone a custom module with a form, I am required to kill the form field and put a new one in its place in order to allow the form to display. I assume this is due to the unique ID each form field gets when placed into the module. I’m not able to put a custom module with a form it into the same template twice (and I don’t actually have a use case for why we’d need it, but I wanted to test with it), and this makes me wonder if the same custom module can be used in different templates without issue. Is there a way that this wouldn’t be the case?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-02-27 09:48:20"
      },
      {
        "time_stamp": "2018-02-27 13:41:43"
      },
      {
        "time_stamp": "2018-02-27 13:43:31"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chris Conant",
      "poster_handle": "conant_chris"
    },
    "time_stamp": "2018-02-27 09:48:20",
    "text": "We’re working on generating a dynamic `form_key` that will resolve the issue. However, you can simply update the `form_key` field to anything unique for each instance of the form."
  },
  {
    "poster": {
      "poster_name": "Patrick O'Neal",
      "poster_handle": "poneal"
    },
    "time_stamp": "2018-02-27 13:41:43",
    "text": "Perfect! Thanks Chris!"
  },
  {
    "poster": {
      "poster_name": "Chris Conant",
      "poster_handle": "conant_chris"
    },
    "time_stamp": "2018-02-27 13:43:31",
    "text": "No problem! If you end up using a form in a repeater you can set a variable to generate a unique number for each instance. you can set it with `{% set form_key = range(1, 99999999) | random %}` and then simply use `form_key=\"{{ form_key }}\"` in the field"
  },
  null
]
[
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-01-08 01:13:17",
    "text": "Thanks <@UE24LMGSZ>, this might be of use in the future. I already solved it with the approach in the article I mentioned."
  },
  null,
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-01-08 02:21:19",
    "text": "thank you nicholas! I didn't thought on that posibility.\nMy concern although is that now it won't cache anymore because of the request, but I guess we can't have everything :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-01-08 07:58:45",
    "text": "Agreed, I wish they would improve on this."
  },
  null,
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-01-08 08:08:11",
    "text": "Nice! Just took a look at the article. Did you end up basing your language-specific content on the URL the visitor is on, or based on their chosen browser language?"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives"
    },
    "time_stamp": "2019-01-08 08:16:06",
    "text": "I want to use blog featured image as a background image for a hero div in the post. Anyone successfully do this? My markup isn't functioning. Current markup:\n\n  &lt;div class=\"c-hero  c-hero-blue\" &gt;\n    &lt;img src=\"{{ content.featured_image.src }}\" alt=\"\" data-object-fit=\"cover\" class=\"media  u-object-fit\"&gt;\n    &lt;!-- /.c-page-header --&gt;"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2019-01-08 09:04:31",
    "text": "Try removing “.src” <@U795QFHDE>"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-01-08 10:10:18",
    "text": "Thanks for the answers! So, looking at the Vast example, I’d need to convert all my modules to fit that format?"
  },
  {
    "poster": {
      "poster_name": "Brian Krainer",
      "poster_handle": "bkrainer"
    },
    "time_stamp": "2019-01-08 11:16:21",
    "text": "correct. and then move them to the directory the local server expects"
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-08 13:14:31",
    "text": "i am building a repeater module with the icon field.  i want to be able to change icon colors individually.  the field doesnt expose the svg tag so i cannot inline css to it.  the best i can think of is getting the loop index and using it to add a unique class per row.  is there a better way?",
    "reply_count": 3,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-01-08 22:43:19"
      },
      {
        "time_stamp": "2019-01-08 22:55:48"
      },
      {
        "time_stamp": "2019-01-08 22:56:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-08 13:19:45",
    "text": "that’ll do"
  },
  {
    "poster": {
      "poster_name": "Brian Krainer",
      "poster_handle": "bkrainer"
    },
    "time_stamp": "2019-01-08 14:00:34",
    "text": "<@UF8D6BJCA> it may just be easier to get the JSON for your module via `<http://api.hubapi.com/designmanager/v1/custom-widgets/{id}?hapikey=12345|api.hubapi.com/designmanager/v1/custom-widgets/{id}?hapikey=12345>`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-08 14:27:54",
    "text": "just tried using ternary in a module doesn’t appear to work, does it only work under specific circumstances or something?\n\nExample: `{%- set element = \"a\" if item.learn_more_page_link else \"div\" -%}` this works but\n`{%- set element = \"a\" ? item.learn_more_page_link : \"div\" -%}`\nDoesn’t"
  },
  {
    "poster": {
      "poster_name": "Chandresh",
      "poster_handle": "chandreshkumar"
    },
    "time_stamp": "2019-01-08 22:43:19",
    "edited": {
      "time_stamp": "2019-01-08 22:43:41"
    },
    "text": "You should add color field with icon field in repeater module and use fill css property (i.e fill: {{ item2.icon_color.color }}) on *wrapper tag* (Inline CSS) of icon."
  },
  {
    "poster": {
      "poster_name": "Chandresh",
      "poster_handle": "chandreshkumar"
    },
    "time_stamp": "2019-01-08 22:55:48",
    "text": "<https://preview.hs-sites.com/_hcms/preview/template/multi?is_buffered_template_layout=true&amp;portalId=4946708&amp;tc_deviceCategory=undefined&amp;template_layout_id=6806383097&amp;updated=1547012911383>"
  },
  {
    "poster": {
      "poster_name": "Chandresh",
      "poster_handle": "chandreshkumar"
    },
    "time_stamp": "2019-01-08 22:56:01",
    "text": "Here is the example for this"
  },
  null,
  {
    "poster": {
      "poster_name": "Eddy Vinck",
      "poster_handle": "eddy"
    },
    "time_stamp": "2019-01-09 00:59:50",
    "text": "It's based on the URL. Since the client's website will be multilingual and has a language switch this is the desired behavior. I used it to select a row in HubDB."
  }
]
[
  {
    "poster": {
      "poster_name": "Chuck Taylor",
      "poster_handle": "chuck"
    },
    "time_stamp": "2021-04-30 09:11:46",
    "text": "When fetching a single blog post by id, what is the difference between the `name` and the `htmlTitle` properties on the response? In virtually every case for me these are the same. Is the `name` what the content editor assigned when creating the page, while `htmlTitle` is the title used in the `&lt;title&gt;` tag in the head?"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2021-04-30 10:03:22",
    "text": "I have to use deals search API for ~24K records but seems like it has a limit of 10K per query. Any thoughts on how to bypass it?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-04-30 14:05:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:05:35",
    "text": "date range, or *<https://api.hubapi.com/crm/v3/objects/%s/batch/read>*"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:08:41",
    "text": "need to see if somebody out there offers it already, or PieSync / Zapier / IFTTT / Integromat does, if not, then have to roll your own"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:10:34",
    "edited": {
      "time_stamp": "2021-04-30 14:30:43"
    },
    "text": "What are people using, via API, to find Deals which have had activity on them in the last 1 week? It seems like my options are:\n\n```createdate\nhs_lastmodifieddate\nnotes_last_updated\nclosedate\nhs_createdate```\nHow does <https://api.hubapi.com/deals/v1/deal/recent/modified> sort the deals for example?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-04-30 14:30:50"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:12:28",
    "text": "I do it all the time, just need `{ *'propertyName'*: *'associations.contact'*, *'operator'*: *'EQ'*, *'value'*: contact_id }`"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:14:56",
    "text": "C has support for it, and PHP has almost all the C functions available, just need something like this\n\n<https://stackoverflow.com/questions/3656713/how-to-get-current-time-in-milliseconds-in-php>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:16:11",
    "edited": {
      "time_stamp": "2021-04-30 14:16:35"
    },
    "text": "I have to turn it on when I make new obj's in the CRM and I use the `hs_legal_basis` field in V3 API Properties"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:18:00",
    "text": "Yeah, I do it all the time and it works fine, you need to include a lot more information about the issue"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:19:08",
    "text": "it does paging differently in V3, but it does work"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:19:32",
    "text": "does not exist in one endpoint, need to code up a utility function for that"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:20:41",
    "text": "test it on a free developer instance and see how it works, this will require research and experimentation to answer fully"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:21:20",
    "text": "that response does not kick back everything in the obj"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:21:24",
    "text": "only default list of props"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:21:43",
    "edited": {
      "time_stamp": "2021-04-30 14:21:49"
    },
    "text": "to get full obj after POST you need to do fresh GET w/ list of desired props as a comma-sep GET param"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:24:26",
    "text": "what do you mean by \"pull in\" / \"pull over\"? maybe you need is the Run In Postman button on upper right of every API doc page"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:25:16",
    "edited": {
      "time_stamp": "2021-04-30 14:25:26"
    },
    "text": "In Java, just convert your ISO 8601 to UTC millis value, and it will work right off the bat, as HS is Java/JVM based itself"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:27:07",
    "text": "If \"Deal\" is not an option, there is always HubSpot Custom Object"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2021-04-30 14:30:50",
    "text": "<@UD53A9UUR>"
  }
]
[
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-10-20 07:14:34",
    "text": "I think it’s under cookies.  something like `{{ content.cookies.__hs_opt_out }}`"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-20 07:29:08",
    "text": "hmmmm I reckon that breaks caching if we access that?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-20 07:37:20",
    "text": "does `regex_replace` not always follow the rules for everyone else?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-20 07:39:50"
      },
      {
        "time_stamp": "2020-10-20 07:51:04"
      },
      {
        "time_stamp": "2021-01-26 08:38:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-20 07:39:50",
    "text": "```lexical error at position 26, encountered invalid escape sequence \\., expected \\\" or \\\\```\nIt is not letting me escape a `.`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-20 07:41:44",
    "text": "It's not a reg_ex it's a rebel_ex"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-20 07:51:04",
    "edited": {
      "time_stamp": "2020-10-20 07:51:19"
    },
    "text": "apparently to escape in this filter you need `\\\\.` instead of `/.`"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-10-20 09:05:51",
    "text": "oh yeah?  what’s your use case here if you don’t mind me asking?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-10-20 09:10:10",
    "text": "changing an iframe `src` address from <http://youtube.com|youtube.com> to <http://youtube-nocookie.com|youtube-nocookie.com> if gdpr is required"
  },
  {
    "poster": {
      "poster_name": "Clement Udensi",
      "poster_handle": "clementudensi"
    },
    "time_stamp": "2020-10-20 11:45:48",
    "text": "Hi guys, how can I get the index of a string or return a string at a given index using hubl ?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2020-10-20 12:06:55",
    "text": "ah cool.  Could you do it on the front end with JS and avoid the caching issue?\n<https://legacydocs.HubSpot.com/docs/methods/tracking_code_api/get_consent_status>"
  }
]
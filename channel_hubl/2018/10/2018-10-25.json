[
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-25 04:08:10",
    "text": "Morning guys! Need a quick help. Any idea on how to reference an image file on the files in a template CSS with the absolute path?"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-25 04:08:37",
    "text": "Is there something similar to {{ 'image.png' | asset_url }} that we do on Shopify liquid"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-25 04:09:15",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-25 05:49:24",
    "text": "the nly way to do this is if you had your css in the file manager."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-25 05:49:36",
    "text": "ah.. wait.. let me redact that."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-25 05:52:59",
    "text": "It isnt possible in HubSpot."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-25 05:53:27",
    "text": "They dont have  this type of system."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-25 05:54:12",
    "text": "BUT if the css lived in the same folder as the css you might be able to do this `{{ 'image.png' }}`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-25 05:54:41",
    "text": "`{{ resize_image_url(\"image.png\") }}`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-10-25 05:54:47",
    "text": "Not tested"
  },
  {
    "poster": {
      "poster_name": "Sanjay Maharjan",
      "poster_handle": "sanjay.maharjan"
    },
    "time_stamp": "2018-10-25 06:57:40",
    "text": "Thanks Chad, I think I came across this document where it said the only variables/expressions you can use in a css file in HubSpot was like {{ variable }}  and {{ file_url }} or something, but I can't seem to find that page."
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "cbarley"
    },
    "time_stamp": "2018-10-25 08:47:40",
    "text": ":+1:"
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-25 09:31:10",
    "text": "That's true in custom modules, but in standalone CSS files I think you can use HubL"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-25 09:32:21",
    "text": "I don't think there's a HubL function or filter for adding an asset from the file manager, but you could always write your own macro for it"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-25 09:34:41",
    "text": "I have a mixin in SCSS for it:\n```@function file($path) {\n  @return \"//cdn2.HubSpot.net/hubfs/\" + $portal-id + \"/\" + $path;\n}```\n(where $portal-id is defined elsewhere)"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2018-10-25 09:38:10",
    "text": "you can just use {{ hub_id }} for the portal id"
  },
  {
    "text": "here’s an example of how i guess you’d write it",
    "time_stamp": "2018-10-25 09:43:10"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-10-25 09:55:12",
    "text": "Yeah something like that"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-25 10:05:27",
    "text": "When we are making multi-lingual sites, I usually end up creating a different navigation/footer for each language to make sure that the links all go to their language-specific variants. Does HubSpot change any of those links automatically?"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-25 10:07:41",
    "text": "I’d like to keep the same header and footer when switching between English variants then swap it out when we go to German. Also wondering how well it keeps the user in the variant section of the site. If they go to a page that doesn’t have a variant for their language then go to a page that does, will they have to re-select their language?"
  },
  null,
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-10-25 10:31:56",
    "edited": {
      "time_stamp": "2018-10-25 10:33:31"
    },
    "text": "<@U26DA9CQ0> we rewrite all links on a page except those within elements with the class `hs-skip-lang-url-rewrite` or within menu modules (class `hs-menu-item`).\n\nRegarding your second question, we have a secret beta for a language switcher cookie, which drops a cookie with a visitors language preference, so if they return to a site, or generally land on a incorrect language page, if an in-preferred-language version of a page exists, we will redirect them there. With this functionality, the only way tyo \"change\" languages is through the language switcher module globe (which updates the cookie with a new preferred language). Let me know if you have a good fit for this cookie",
    "reply_count": 5,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-10-25 10:33:18"
      },
      {
        "time_stamp": "2018-10-25 10:42:30"
      },
      {
        "time_stamp": "2018-10-25 10:44:11"
      },
      {
        "time_stamp": "2018-10-29 10:15:30"
      },
      {
        "time_stamp": "2018-10-29 13:08:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-25 10:33:18",
    "text": "had a “secret” beta :joy:"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-10-25 10:42:30",
    "text": ":see_no_evil:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-25 10:44:11",
    "text": "GIMME THAT COOKIE"
  },
  {
    "text": "",
    "time_stamp": "2018-10-25 10:44:53"
  },
  null,
  null,
  null,
  null
]
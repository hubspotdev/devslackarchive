[
  {
    "poster": {
      "poster_name": "Casper Kraken (HubDo)",
      "poster_handle": "casper928"
    },
    "time_stamp": "2024-01-03 05:25:06",
    "text": "Hi Ricky,\n\nWe are seeing some of the same issues when doing this for taxes on quotes.\n\nDon’t have a solution yet, it seems to be a HubSpot related issue, as this is also happening when creating and associating a newly created object each time. Sometimes, it just disappears."
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-01-03 06:25:00",
    "text": "Stupid question....I believe custom code defaults to Nodejs - did you select Python?"
  },
  {
    "poster": {
      "poster_name": "Jennifer Boyle",
      "poster_handle": "jennifer_boyle"
    },
    "time_stamp": "2024-01-03 09:05:45",
    "text": "Hi team, I'm attempting to create an MS Azure Synapse linked service to connect to my HubSpot instance private app. A linked service is basically a connection string, but with a WYSIWYG interface depending on what source you're trying to connect to. MS Azure Synapse (or ADF) has a linked service template specifically for HubSpot. I'm attaching the documentation for how to set it up. It's fairly straightforward except I don't know how to generate the refresh token. I have the private app set up so I have the client id, client secret and access token, but not the refresh token.\n\nI am currently doing this through a python script and it hasn't required a refresh token, so I'm a bit at a loss. Any assistance would be greatly appreciated. Thanks.\n\n<https://learn.microsoft.com/en-us/azure/data-factory/connector-HubSpot?tabs=data-factory#create-a-linked-service-to-HubSpot-using-ui>",
    "reply_count": 15,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-01-08 10:45:51"
      },
      {
        "time_stamp": "2024-01-09 12:40:20"
      },
      {
        "time_stamp": "2024-01-10 05:06:00"
      },
      {
        "time_stamp": "2024-01-10 11:41:29"
      },
      {
        "time_stamp": "2024-01-11 13:20:54"
      },
      {
        "time_stamp": "2024-01-12 10:19:40"
      },
      {
        "time_stamp": "2024-01-12 14:28:02"
      },
      {
        "time_stamp": "2024-01-16 12:38:55"
      },
      {
        "time_stamp": "2024-01-16 13:46:51"
      },
      {
        "time_stamp": "2024-01-16 13:48:24"
      },
      {
        "time_stamp": "2024-01-16 13:53:59"
      },
      {
        "time_stamp": "2024-01-16 14:07:20"
      },
      {
        "time_stamp": "2024-01-16 14:08:19"
      },
      {
        "time_stamp": "2024-01-16 14:53:16"
      },
      {
        "time_stamp": "2024-01-17 05:33:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Dave",
      "poster_handle": "hello479"
    },
    "time_stamp": "2024-01-03 09:11:39",
    "edited": {
      "time_stamp": "2024-01-03 09:13:39"
    },
    "text": "Hi all, I’m trying to batch fetch contacts with their deal associations, but the return payload doesn’t include the deal associations.. anyone have any idea where I’m going wrong? According to the docs <https://developers.HubSpot.com/docs/api/crm/contacts#retrieve-contacts|here> it appears that batch read supports associations, but perhaps it doesn’t after all?\n\n<https://api.hubapi.com/crm/v3/objects/contacts/batch/read>\nrequest payload:\n```{\n  \"properties\": [\n    \"email\",\n    \"lifecyclestage\",\n    \"jobtitle\"\n  ],\n  \"associations\": [\"deals\"],\n  \"idProperty\": \"email\",\n  \"inputs\": [\n    {\n      \"id\": \"at1@at1.com\"\n    }\n  ]\n}```\nresponse\n```{\n    \"status\": \"COMPLETE\",\n    \"results\": [\n        {\n            \"id\": \"6751\",\n            \"properties\": {\n                \"createdate\": \"2023-10-31T09:32:13.951Z\",\n                \"email\": \"at1@at1.com\",\n                \"hs_object_id\": \"6751\",\n                \"jobtitle\": null,\n                \"lastmodifieddate\": \"2023-11-28T16:32:48.682Z\",\n                \"lifecyclestage\": \"opportunity\"\n            },\n            \"createdAt\": \"2023-10-31T09:32:13.951Z\",\n            \"updatedAt\": \"2023-11-28T16:32:48.682Z\",\n            \"archived\": false\n        }\n    ],\n    \"startedAt\": \"2024-01-03T16:07:58.743Z\",\n    \"completedAt\": \"2024-01-03T16:07:58.781Z\"\n}```\nI’ve checked in the UI and <mailto:at1@at1.com|at1@at1.com> definitely has deals",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-01-03 12:10:45"
      },
      {
        "time_stamp": "2024-01-03 12:10:59"
      },
      {
        "time_stamp": "2024-01-03 12:11:23"
      },
      {
        "time_stamp": "2024-01-03 12:11:47"
      },
      {
        "time_stamp": "2024-01-03 12:12:56"
      },
      {
        "time_stamp": "2024-01-03 12:19:34"
      },
      {
        "time_stamp": "2024-01-03 12:20:23"
      },
      {
        "time_stamp": "2024-01-04 03:11:22"
      },
      {
        "time_stamp": "2024-01-04 06:47:51"
      },
      {
        "time_stamp": "2024-01-08 10:52:01"
      },
      {
        "time_stamp": "2024-01-08 11:00:48"
      },
      {
        "time_stamp": "2024-01-08 11:01:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 09:25:14",
    "text": "I have a form and the moment a lead registers on the form, depending on what they send me, I need to create a deal within the sales pipeline with this new lead at the correct stage.\n\nI do it via api, which endpoint and what parameters do I have to send?",
    "reply_count": 19,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-03 11:57:15"
      },
      {
        "time_stamp": "2024-01-03 12:05:10"
      },
      {
        "time_stamp": "2024-01-03 12:17:58"
      },
      {
        "time_stamp": "2024-01-03 12:21:10"
      },
      {
        "time_stamp": "2024-01-03 12:21:25"
      },
      {
        "time_stamp": "2024-01-03 12:22:24"
      },
      {
        "time_stamp": "2024-01-03 12:23:26"
      },
      {
        "time_stamp": "2024-01-03 12:24:20"
      },
      {
        "time_stamp": "2024-01-03 12:28:50"
      },
      {
        "time_stamp": "2024-01-03 12:29:02"
      },
      {
        "time_stamp": "2024-01-03 12:29:09"
      },
      {
        "time_stamp": "2024-01-03 12:29:36"
      },
      {
        "time_stamp": "2024-01-03 12:30:01"
      },
      {
        "time_stamp": "2024-01-03 12:30:01"
      },
      {
        "time_stamp": "2024-01-03 12:30:10"
      },
      {
        "time_stamp": "2024-01-03 12:34:06"
      },
      {
        "time_stamp": "2024-01-03 12:34:15"
      },
      {
        "time_stamp": "2024-01-03 17:21:10"
      },
      {
        "time_stamp": "2024-01-03 17:36:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 11:57:15",
    "text": "The endpoint you'll want to use is part of the HubSpot CRM API.\n```POST /crm/v3/objects/deals```\nHere's a general example of the payload you would send to create a deal:\n\n```{\n  \"properties\": {\n    \"dealname\": \"New Deal from Form Submission\",\n    \"dealstage\": \"stage_identifier\",\n    \"amount\": \"deal_amount\",\n    \"pipeline\": \"pipeline_identifier\",\n    // And any other properties you want to set\n  }\n}```\nThe `stage_identifier` and `pipeline_identifier` are specific IDs that correspond to the stage and pipeline in your HubSpot account.\nHere's what the request would look like in curl:\n\n```curl -X POST \\\n  '<https://api.hubapi.com/crm/v3/objects/deals>' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n  -d '{\n    \"properties\": {\n      \"dealname\": \"New Deal from Form Submission\",\n      \"dealstage\": \"stage_identifier\",\n      \"amount\": \"deal_amount\",\n      \"pipeline\": \"pipeline_identifier\"\n      // Add other properties as needed\n    }\n  }'```\nReplace `YOUR_ACCESS_TOKEN` with the OAuth or API token you are using for authentication, and fill in the property values with the actual data from the form submission.\n*Note*: You will need a proper authentication system in place to use the API, which typically involves an OAuth workflow. If you're using an API key, you would include that in the request header instead of the bearer token.\nTo get the `dealstage` and `pipeline` identifiers, you might need to use the pipeline API:\n\n```GET /crm/v3/pipelines/deals```\n"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:05:10",
    "text": "Good, i'll try now."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:10:45",
    "text": "These docs are wrong"
  },
  {
    "text": "",
    "time_stamp": "2024-01-03 12:10:59"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:11:23",
    "text": "Well not wrong exactly but maybe a bad choice of words that make it sounds like it can do something that it can't"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:11:47",
    "text": "You really have the check the endpoints tab for the actual specs of the endpoint"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:12:56",
    "text": "<@U03MLCLS5BN> do you think you can bring this up with the technical writing team?"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:17:58",
    "text": "The endpoints worked, but other questions arose.\n\nMy flow is, from registering on the form, I create this pipeline.\n\nI have to put in this business that I registered the *type of business*, *priority*, *associated contacts*, and *associated company*.\n\nThe contact and company information is what the lead filled in my form.\n\nExample:\n\nForm has the fields:\n\nname, document, company, email and telephone number.\n\nI have to open the ticket in the pipeline and add link to this new lead."
  },
  {
    "text": "<@U063K756X46> you can do this by either using the batch get associations api (using the contact ids that you got back in the first call) <https://developers.HubSpot.com/docs/api/crm/associations>",
    "time_stamp": "2024-01-03 12:19:34"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:20:23",
    "text": "or by just writing the query with graphql: <https://developers.HubSpot.com/docs/cms/data/query-HubSpot-data-using-graphql>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:21:10",
    "text": "You want to create a new pipeline for each new form submission?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:21:25",
    "text": "and is this for tickets or deals?"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:22:24",
    "text": "for deals.\n\ni wnat create a new deal in any stages of my pipeline."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:23:26",
    "text": "will the contact and company already exist in HubSpot before the form is submitted?"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:24:20",
    "text": "Not."
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:28:50",
    "text": "No, these are new leads.\n\nThey registered on my form. They will be created in HubSpot now, after registering on the form.\n\nAfter registering on the form, I will create them in one of the stages in the pipeline.\n\nHere, for example:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:29:02",
    "text": "so you'll use that deal endpoint above to create the deal and pass in the properties from the form fields (I assume these are contact properties), then you can use the associations apis to associate the contact and company to it"
  },
  {
    "text": "",
    "time_stamp": "2024-01-03 12:29:09"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:29:36",
    "text": "Hmmm"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:30:01",
    "text": "Do you have documentation of the association endpoints?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:30:01",
    "edited": {
      "time_stamp": "2024-01-03 12:30:15"
    },
    "text": "you'll use a workflow and custom coded actions"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:30:10",
    "text": "<https://developers.HubSpot.com/docs/api/crm/associations>"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 12:34:06",
    "text": "Thsnks"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 12:34:15",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Ivan Rivas",
      "poster_handle": "ivan795"
    },
    "time_stamp": "2024-01-03 12:50:06",
    "text": " Hi guys, it’s my first time here! I need to do an integration of HubSpot with our ERP, I’m using <http://tray.io|tray.io>\n\n I need a HubSpot connector or some http request that can see when an email was sent in HubSpot, I don't know if anyone has ever done this. \n\nThanks for your help! ",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-03 14:27:09"
      },
      {
        "time_stamp": "2024-01-03 14:27:35"
      },
      {
        "time_stamp": "2024-01-03 14:27:44"
      },
      {
        "time_stamp": "2024-01-03 15:02:21"
      },
      {
        "time_stamp": "2024-01-03 15:04:10"
      },
      {
        "time_stamp": "2024-01-03 15:04:18"
      },
      {
        "time_stamp": "2024-01-03 15:04:23"
      },
      {
        "time_stamp": "2024-01-03 15:04:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Alan Villalobos",
      "poster_handle": "alan037"
    },
    "time_stamp": "2024-01-03 14:21:14",
    "text": "Hi, after looking through the docs, I’m unsure if I can do what I need to.\n\nThe conversations product allows for multiple channels, but I want to add a 3rd party (SMS and iMessage provider) as a channel.\n\nI’m happy to code the integration, but I’m not sure if there are APIs on your end for incoming messages (SMS that I receive) to add them to the conversation as if they come from the customer.\n\nDoes this make sense?",
    "reply_count": 17,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-01-03 14:28:15"
      },
      {
        "time_stamp": "2024-01-03 14:28:39"
      },
      {
        "time_stamp": "2024-01-03 14:29:57"
      },
      {
        "time_stamp": "2024-01-03 14:40:45"
      },
      {
        "time_stamp": "2024-01-03 14:40:48"
      },
      {
        "time_stamp": "2024-01-03 14:41:02"
      },
      {
        "time_stamp": "2024-01-03 14:41:31"
      },
      {
        "time_stamp": "2024-01-03 14:41:49"
      },
      {
        "time_stamp": "2024-01-03 14:44:05"
      },
      {
        "time_stamp": "2024-01-03 14:46:19"
      },
      {
        "time_stamp": "2024-01-03 14:46:52"
      },
      {
        "time_stamp": "2024-01-03 14:48:25"
      },
      {
        "time_stamp": "2024-01-04 08:31:14"
      },
      {
        "time_stamp": "2024-01-04 08:31:29"
      },
      {
        "time_stamp": "2024-01-04 08:32:37"
      },
      {
        "time_stamp": "2024-01-04 08:33:14"
      },
      {
        "time_stamp": "2024-02-05 08:13:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:27:09",
    "text": "so you want to trigger any time an email is sent to a contact in HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:27:35",
    "text": "or you want to see how many emails have been sent to a particular contact?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:27:44",
    "text": "or you want to see which emails have been sent?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:28:15",
    "text": "Currently you can't create your own channels in the conversations tool"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:28:39",
    "text": "<@U04B32JHTUZ> would probably love to hear your use case though, this is something the team is actively working towards"
  },
  {
    "poster": {
      "poster_name": "Alan Villalobos",
      "poster_handle": "alan037"
    },
    "time_stamp": "2024-01-03 14:29:57",
    "text": "ok, so currently, what would be my work around? Can I add messages through the API impersonating the customer?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:40:45",
    "text": "you can only send outbound messages through the api"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:40:48",
    "text": "<https://developers.HubSpot.com/docs/api/conversations/conversations>"
  },
  {
    "text": "",
    "time_stamp": "2024-01-03 14:41:02"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:41:31",
    "text": "not really any good workarounds"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:41:49",
    "text": "best option would probably be an email server that relays messages"
  },
  {
    "poster": {
      "poster_name": "Alan Villalobos",
      "poster_handle": "alan037"
    },
    "time_stamp": "2024-01-03 14:44:05",
    "text": "that's interesting, but I'm afraid for email HubSpot will add a bunch of extra stuff to each email to track? and then I'd have to remove it and add it back no?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:46:19",
    "text": "I'm more thinking you use the email server as a proxy, when you get an imessage, you can send an email to the HubSpot conversations inbox, when someone replies your email server will see the reply and can pass the content to imessage"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 14:46:52",
    "text": "super simple to do if your using something like <http://Make.com|Make.com> or Zapier, building it custom also isn't too terrible"
  },
  {
    "poster": {
      "poster_name": "Alan Villalobos",
      "poster_handle": "alan037"
    },
    "time_stamp": "2024-01-03 14:48:25",
    "text": "yeah I get it, just wondering if by nature, the emails will have a ton of crap on them (including tracking codes) that I'll need to remove and add back in."
  },
  {
    "poster": {
      "poster_name": "Peeyush Tuli",
      "poster_handle": "ptuli"
    },
    "time_stamp": "2024-01-03 14:55:42",
    "text": "<@U06B6J5BCRY> that would not allow for dynamic search on the fly"
  },
  {
    "poster": {
      "poster_name": "Ivan Rivas",
      "poster_handle": "ivan795"
    },
    "time_stamp": "2024-01-03 15:02:21",
    "edited": {
      "time_stamp": "2024-01-03 15:03:46"
    },
    "text": "I really wanna trigger every time a contact in HubSpot sends a new email and I also want to see when they open it, this with the intention of creating insight in my erp."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 15:04:10",
    "text": "so you could trigger using number of emails sent changes"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 15:04:18",
    "text": "and number of emails opens changes"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 15:04:23",
    "text": "on that contact level"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 15:04:26",
    "text": "<https://tray.io/documentation/connectors/service/HubSpot/HubSpot-trigger/>"
  },
  {
    "poster": {
      "poster_name": "Mark Kelly",
      "poster_handle": "mark742"
    },
    "time_stamp": "2024-01-03 15:54:11",
    "text": "OK - To all of my very smart colleagues here: I have a situation where a visitor comes to a membership page and creates a new ticket. They will likely upload a file that is necessary for the creation of the ticket. As the ticket progresses through its stages, there may be a need to replace that file with a new one. Is there any way to do this on the membership page or via the API? Let's assume the file is a PDF or a JPG file for the sake of illustrative purposes.\n\nI appreciate any/all ideas!!!",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-03 18:16:25"
      },
      {
        "time_stamp": "2024-01-03 18:17:42"
      },
      {
        "time_stamp": "2024-01-03 18:17:55"
      },
      {
        "time_stamp": "2024-01-03 20:58:05"
      },
      {
        "time_stamp": "2024-01-03 21:13:52"
      },
      {
        "time_stamp": "2024-01-03 21:14:33"
      },
      {
        "time_stamp": "2024-01-03 21:15:39"
      },
      {
        "time_stamp": "2024-01-04 17:42:36"
      },
      {
        "time_stamp": "2024-01-04 18:45:08"
      }
    ]
  },
  {
    "text": "Continue with the issue:\n\nSupport of HubSpot tell me: There currently isnt a way to use API to get when an email was sent. There is a property called \"*Recent sales email open date:\"* which is \"the date of the last time that the contact opened a sales email. This property does not update for emails that were sent to more than one contact.\"\n\nthey sent me the following link: <https://developers.HubSpot.com/docs/api/crm/properties>\n\nwhen I copy this url into my connector it gives me error 400, there is something I am not doing right, do you have any idea?\n\nI made sure to meet the requirements of the header",
    "time_stamp": "2024-01-03 16:37:14",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-03 18:15:10"
      },
      {
        "time_stamp": "2024-01-03 18:15:27"
      },
      {
        "time_stamp": "2024-01-03 18:38:07"
      },
      {
        "time_stamp": "2024-01-03 18:39:05"
      },
      {
        "time_stamp": "2024-01-03 20:48:44"
      },
      {
        "time_stamp": "2024-01-03 20:54:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 17:21:10",
    "text": "Hi, iam in forms, but i dont find the post subscription form.\n\ndo you wanna help me?"
  },
  {
    "poster": {
      "poster_name": "Gustavo Granato Silva",
      "poster_handle": "contato561"
    },
    "time_stamp": "2024-01-03 17:36:36",
    "text": "<https://api.hsforms.com/submissions/v3/integration/submit/portalId/formID>\n\niam using this. work for me."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 18:15:10",
    "text": "The internal property name is: hs_sales_email_last_opened"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 18:15:27",
    "text": "for marketing emails it's: hs_email_last_open_date"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 18:16:25",
    "text": "So you can create a new form, call it ticket updater (or whatever), has the file property as a property and have the record id property as a hidden property"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 18:17:42",
    "text": "Then on your membership portal you just need to pull in the form with the ticket that you want to update as a query parameter, here's how that would look, <https://linkoftheformhere.com?hs_object_id=TICKETIDHERE>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 18:17:55",
    "text": "This will update the existing ticket instead of creating a new one"
  },
  {
    "poster": {
      "poster_name": "Ivan Rivas",
      "poster_handle": "ivan795"
    },
    "time_stamp": "2024-01-03 18:38:07",
    "edited": {
      "time_stamp": "2024-01-03 18:38:22"
    },
    "text": "what would be the property in this case? \"for marketing emails it's: hs_email_last_open_date\"\n\nobjectType is \"hs_email_last_open_date\", right?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 18:39:05",
    "text": "object type is contacts"
  },
  {
    "poster": {
      "poster_name": "Ivan Rivas",
      "poster_handle": "ivan795"
    },
    "time_stamp": "2024-01-03 20:48:44",
    "text": "Thanks Carter :+1:  I did it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 20:54:10",
    "text": "good work!"
  },
  {
    "poster": {
      "poster_name": "Mark Kelly",
      "poster_handle": "mark742"
    },
    "time_stamp": "2024-01-03 20:58:05",
    "text": "Thanks <@U01QVR44MEY>! - We've been able to do that. What we need to do is delete an old attachment and replace it with a new one...\n\nIs that possible?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 21:13:52",
    "text": "Ah sorry thought you meant a file field not an attachment. Really there's not any great way to delete attachments. This is because attachments aren't actually directly associated to anything, attachments are files (with file ids), these files then get associated to an engagement (notes, emails, tasks, etc etc) and then these engagements get associated to the object (tickets in your case). So unless you know the old attachment id it's really tough to delete it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 21:14:33",
    "text": "You can add new attachments really easily using the files api to upload the files, and get a file id, which you can then use with the engagements api to create a note (blank or otherwise)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-03 21:15:39",
    "text": "<https://developers.HubSpot.com/docs/api/crm/engagements>\n<https://developers.HubSpot.com/docs/api/files/files>"
  },
  {
    "poster": {
      "poster_name": "Juan Felipe Rozo",
      "poster_handle": "juanfe120306"
    },
    "time_stamp": "2024-01-03 21:39:54",
    "text": "actually is not possible as we need to create date/time properties that cannot be manually created in HS"
  },
  {
    "poster": {
      "poster_name": "Juan Felipe Rozo",
      "poster_handle": "juanfe120306"
    },
    "time_stamp": "2024-01-03 21:41:11",
    "text": "actually is pretty simple you can create the property then in the workflow stamp the date when event occurs"
  },
  {
    "poster": {
      "poster_name": "Juan Felipe Rozo",
      "poster_handle": "juanfe120306"
    },
    "time_stamp": "2024-01-03 21:42:41",
    "text": "<https://www.youtube.com/watch?v=2R2fRYXmXUI> This is the video, you can make a POST request to the private app inside HS, maybe a GET if you need to have any specific info. That is it!"
  }
]
[
  {
    "poster": {
      "poster_name": "Kari Skjold",
      "poster_handle": "kari.skjold"
    },
    "time_stamp": "2020-03-26 03:29:22",
    "text": "1. Filling out this forn\n2. Gets email that I already have a (HubSpot) account, with login link\n3. Log in\n4. Continue with my user\n5. «Looks like you don’t have a devloper account»\n6. Create account\n7. Blank page (403 in console) - tried in inkognito mode as well"
  },
  {
    "poster": {
      "poster_name": "Joachim Strand",
      "poster_handle": "joachim"
    },
    "time_stamp": "2020-03-26 03:39:19",
    "text": "Thank you for your reply! I will give that a try"
  },
  {
    "poster": {
      "poster_name": "Rahmona Henry",
      "poster_handle": "rhenry"
    },
    "time_stamp": "2020-03-26 03:45:13",
    "text": "Hi Kari, apologies this is strange system behavior . Can you direct message me with the email address you are using to login and the Hub ID of your HubSpot account so I investigate this further for you. Thank you"
  },
  {
    "poster": {
      "poster_name": "Kari Skjold",
      "poster_handle": "kari.skjold"
    },
    "time_stamp": "2020-03-26 03:46:21",
    "text": "Yes, thank you"
  },
  {
    "poster": {
      "poster_name": "David",
      "poster_handle": "david419"
    },
    "time_stamp": "2020-03-26 06:12:44",
    "text": "Hi! I'm wondering if anyone knows how to add customisable buttons to the sidebar of the CRM? I have saw the HubSpot Extensions API but I can't find how to actually add a button instead of pulling data in?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-03-26 07:04:33"
      },
      {
        "time_stamp": "2020-03-26 10:12:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:04:33",
    "text": "Hey <@UKU1Z4X63> you can add a button using the `actions` section of the response.   What kind of customization are you looking to do for the button?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:07:44",
    "text": "hey <@UKB419NHE>\n1. No, but I have noted that this isn’t ideal in our internal idea tracker so we can work to improve this in the future\n2. Yes, there will always be a single contentId per campaignId. Where an email is used more than once, in multiple workflows for example, that create creates a campaignId per usage"
  },
  {
    "poster": {
      "poster_name": "Tino Merl",
      "poster_handle": "tino.merl"
    },
    "time_stamp": "2020-03-26 07:10:17",
    "text": "Hey <@UFBNA9K9A>,\n\nThanks for your answers and the clarification. Just to make sure i got it right. The relation between contentId and campaignId will never be the following:\ncontentId * : 1 campaignId\n\nInstead it can be like that:\ncontentId 1 : * campaignId"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:10:26",
    "text": "Hey <@USW076LLT> What API call are you making to get this result?  I would expect them to show up in both the `/crm/v3/objects/{objectType}/{objectId}/associations/{associatedObjectType}` and the `/crm/v3/associations/` APIs"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:11:12",
    "text": "\"<https://api.hubapi.com/crm/v3/objects/tickets?limit=100&amp;archived=false&amp;associations=companies,contacts&amp;properties=>\","
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:11:24",
    "text": "\"<https://api.hubapi.com/crm/v3/objects/tickets?limit=100&amp;archived=false&amp;associations=companies,contacts&amp;properties=>\",\n    tickets_properties_parameter,\n    \"&amp;hapikey=\",\n    HubSpot_api_key"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:12:03",
    "text": "I'm happy to open a formal support ticket if someone wants to log into the account and dig around"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:13:19",
    "text": "There should be an associations object, that has a contacts object that has an array of associated contacts. I wouldn’t expect anything in an `associated_contacts` property"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:13:59",
    "text": "Exactly"
  },
  {
    "poster": {
      "poster_name": "Tino Merl",
      "poster_handle": "tino.merl"
    },
    "time_stamp": "2020-03-26 07:18:58",
    "text": "Thanks a bunch!"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:22:05",
    "text": "I thought that the associated contacts property would do that - I'm taking the IDs from associated contacts and doing a join on a contacts table"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:22:18",
    "text": "I took a look given what you shared from your screenshot and I do see the associated contact. The data is structured like\n```associations:{\ncompanies:{\nresults:[ ]},\ncontacts:{\nresults:[\n{id:\"12758\"}]}},```"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:22:26",
    "text": "\"<https://api.hubapi.com/crm/v3/objects/contacts?limit=100&amp;archived=false&amp;properties=>\",\n    contacts_properties_parameter,\n    \"&amp;hapikey=\",\n    HubSpot_api_key"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:22:48",
    "text": "so in my code, I take the tickets object and left join associated contacts ID to the contacts ID from the contacts object"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:23:30",
    "text": "that’s generally the right flow, you just need to get the contact IDs from the associations object, not from properties."
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:24:15",
    "text": "huh. okay - so the associations object would functionally be the table I'd join on for everything?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:25:59",
    "text": "Yeah, it allows us ot better structure when there are multiple objects of a certain type associated to the object your requests vs storing it in a propety"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:26:22",
    "text": "gotcha, okay. thanks - I'll give it a go"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 07:26:31",
    "text": "FWIW that was not clear in the documentation :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 07:27:55",
    "text": "That’s a good call out, I think we can probably put a warning some where not to rely on any association properties but instead to rely on the association object when it’s requested"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 08:43:39",
    "text": "Dumb question - is associations available as a global lookup, similar to contacts, or do I need to pass an object ID like tickets for each call?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-03-26 08:46:48",
    "text": "Not a dumb question at all.  Associations exist to tie two objects together, so are always starting with a particular instance of an object. When using the Associations API, you need to specify the ID. You can also get associations through the objects API by adding the associations parameter we were working with earlier"
  },
  {
    "poster": {
      "poster_name": "Christopher S. Penn",
      "poster_handle": "cspenn"
    },
    "time_stamp": "2020-03-26 09:07:06",
    "text": "gotcha - thanks"
  },
  {
    "poster": {
      "poster_name": "David",
      "poster_handle": "david419"
    },
    "time_stamp": "2020-03-26 10:12:48",
    "text": "Hey Zack! Thanks for your help, I got it working there. I am using the API in an APP to create an iFrame that pulls in come custom functionality."
  },
  {
    "poster": {
      "poster_name": "Dan Taylor",
      "poster_handle": "dantaylor801"
    },
    "time_stamp": "2020-03-26 16:51:03",
    "text": "Any updates <@UFBNA9K9A>?  Here’s another example\n```{ status: 'error',\n message: 'Exception while calling underlying service. This is not peano\\'s fault.',\n correlationId: 'cfca8f7f-f513-4be4-b1f1-84237e121b5e',\n category: 'VALIDATION_ERROR',\n requestId: 'f934125d-0410-4980-9842-3239a599ca3e' }```"
  }
]
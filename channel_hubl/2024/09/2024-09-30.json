[
  {
    "poster": {
      "poster_name": "Abdalla Ibrahim (Abdo Samy)",
      "poster_handle": "abdalla.samy795"
    },
    "time_stamp": "2024-09-30 01:09:01",
    "text": "hey Team,\nI have an issue using operator after using map filter\n\n{% set *contact_id* = 57592932776 %}\n{% set *contactIDList* = deal.associations.contact_collection__deal_to_contact.items|map('hs_object_id') %}\n\n{% if contact_id in contactIDList %}\n*YES*\n{% else %}\n*NO*\n{% endif %}\n\n\nThis *deal.associations.contact_collection__deal_to_contact.items|map('hs_object_id')* returns *[4896759, 39206412985, 57592932776]*\n\nThe funny fact if I put the *4896759 as contact_id* it returns *YES* but if I put it *39206412985 or 57592932776*, it returns *NO*\nDoes anyone what is the issue here? or faced a similar issue before?\n\n*Note: deal.associations.contact_collection__deal_to_contact.items|map('hs_object_id') &gt; I'm getting the associated contacts to a deal using GraphQL*"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-09-30 05:49:44",
    "text": "Hi\n\nIs there a way to carry a signup email to a thank-you page, which Google ads will use for enhanced tracking?\n\nWe’ve tried using the email token, which carries over but not immediately, and only appears when page is re-reloaded. Is there a way to carry the email to the thank-you page as the page loads the first time?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-09-30 06:03:40"
      },
      {
        "time_stamp": "2024-09-30 08:33:15"
      },
      {
        "time_stamp": "2024-09-30 08:35:00"
      },
      {
        "time_stamp": "2024-09-30 08:38:19"
      },
      {
        "time_stamp": "2024-10-01 01:20:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2024-09-30 06:03:40",
    "text": "You can use queryparams to append email before redirect so you can have it on next page immediately "
  },
  {
    "poster": {
      "poster_name": "James Kupczak",
      "poster_handle": "jimmykup"
    },
    "time_stamp": "2024-09-30 08:33:15",
    "text": "Putting PII in the url is a violation of Google Analytics terms of service."
  },
  {
    "poster": {
      "poster_name": "James Kupczak",
      "poster_handle": "jimmykup"
    },
    "time_stamp": "2024-09-30 08:35:00",
    "text": "Including Personally Identifiable Information (PII) in URLs is generally considered bad practice for several reasons (even if you exclude the Google Analytics terms concern):\n\n1. Logging: URLs are often logged by web servers, proxies, and other intermediaries. <https://danielmiessler.com/p/sensitive-information-sent-in-the-url-over-https|This means that any PII in the URL could be stored in logs, which might be accessible to unauthorized parties>.\n2. Referer Headers: When a user clicks on a link, the URL of the current page is often sent as a referer header to the new page. <https://danielmiessler.com/p/sensitive-information-sent-in-the-url-over-https|This can inadvertently expose PII to third-party sites>.\n3. Caching: URLs can be cached by browsers and intermediary servers. <https://danielmiessler.com/p/sensitive-information-sent-in-the-url-over-https|If PII is included in the URL, it might be stored in caches, making it accessible to others who have access to those caches>.\n4. <https://danielmiessler.com/p/sensitive-information-sent-in-the-url-over-https|Security: Even if the URL is encrypted during transmission (e.g., via HTTPS), it can still be exposed in browser history, bookmarks, and other places where URLs are stored>.\n"
  },
  {
    "poster": {
      "poster_name": "James Kupczak",
      "poster_handle": "jimmykup"
    },
    "time_stamp": "2024-09-30 08:38:19",
    "text": "Instead you should submit the URL to Google before the user is navigated to a separate page. If that’s not an option for you, you should pass a unique ID to your thank you page that you can then use to find the users email."
  },
  {
    "poster": {
      "poster_name": "Ben Brophy",
      "poster_handle": "ben952"
    },
    "time_stamp": "2024-09-30 15:30:28",
    "text": "This also worked for me! But I'm trying to do a word count and because it strips out a bunch of content, the word count isn't correct.\n\nHas anyone found a way around this? For reference, the HubL is:\n\n`{% set total_words = post.post_body | regex_replace('{%\\\\s*module_block.*?end_module_block\\\\s*%}', '', 'si') | striptags | wordcount %}`"
  }
]
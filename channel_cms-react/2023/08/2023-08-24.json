[
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-08-24 06:19:56",
    "text": "Hi <@UAYBXDG4U>, how do I make this `FieldGroup` repeatable and have some default child elements?\n```    &lt;FieldGroup name=\"buttons\" label=\"buttons\" expanded={false}&gt;\n      &lt;TextField name=\"title\" label=\"Title\" default=\"Button\" /&gt;```",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-24 06:31:21"
      },
      {
        "time_stamp": "2023-08-24 06:32:03"
      },
      {
        "time_stamp": "2023-08-24 06:33:46"
      },
      {
        "time_stamp": "2023-08-24 06:35:24"
      },
      {
        "time_stamp": "2023-08-24 06:35:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-24 06:31:21",
    "text": "I’m only from my phone so I don’t remember the exact name, but there are separate repeater field components. You should be able to reach the examples repo for repeater to find it"
  },
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-08-24 06:32:03",
    "text": "Can you send the link to that specific repo or documentation?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-24 06:33:46",
    "text": "<https://github.com/HubSpot/cms-js-building-block-examples|https://github.com/HubSpot/cms-js-building-block-examples> …"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-24 06:35:24",
    "text": "<https://github.com/HubSpot/cms-js-building-block-examples/blob/c42f2d1800fe3175880df9da485161308eade835/docs/reference.md#repeatedfieldgroup|https://github.com/HubSpot/cms-js-building-block-examples/blob/c42f2d1800fe3175880df9da485161308eade835/docs/reference.md#repeatedfieldgroup>"
  },
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-08-24 06:35:56",
    "text": "Thank you :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-08-24 08:30:23",
    "text": "I have `RepeatedFieldGroup`  field named as buttons. But when calling inside the loop in component return it gives this error. Does anyone know how to get rid?\n```fieldValues.buttons.map is not a function```\ncomponent looks like,\n```export const Component = ({ fieldValues }) =&gt; {\n  return (\n    &lt;div className={`HeroBanner--component bg-${fieldValues.bgcolor}`}&gt;\n      &lt;div className=\"container\"&gt;\n        {fieldValues.buttons}\n        &lt;div className=\"row\"&gt;\n          &lt;div className=\"col-2\"&gt;\n            &lt;div className=\"p-4\"&gt;\n              &lt;span&gt;{fieldValues.label_text}&lt;/span&gt;\n              &lt;h1&gt;{fieldValues.heading}&lt;/h1&gt;\n              {fieldValues.buttons.map((button) =&gt; (\n                &lt;Button\n                  type={button.style}\n                  label={button.title}\n                  link=\"www.example.com\"\n                /&gt;\n              ))}\n            &lt;/div&gt;\n          &lt;/div&gt;\n          &lt;div className=\"col-2\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};```",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-08-24 08:35:40"
      },
      {
        "time_stamp": "2023-08-24 08:37:27"
      },
      {
        "time_stamp": "2023-08-24 08:38:18"
      },
      {
        "time_stamp": "2023-08-24 08:39:17"
      },
      {
        "time_stamp": "2023-08-24 08:42:55"
      },
      {
        "time_stamp": "2023-08-24 08:51:35"
      },
      {
        "time_stamp": "2023-08-24 08:52:14"
      },
      {
        "time_stamp": "2023-08-24 08:53:40"
      },
      {
        "time_stamp": "2023-08-25 00:53:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-24 08:35:40",
    "edited": {
      "time_stamp": "2023-08-24 08:35:59"
    },
    "text": "First thing, try detecting if `fieldValues.buttons` is null. Like\n```{!fieldValues.buttons &amp;&amp; (&lt;div&gt;...&lt;/div&gt;)}\n\n{fieldValues.buttons &amp;&amp; (&lt;div&gt;...&lt;/div&gt;)}```"
  },
  {
    "text": "",
    "time_stamp": "2023-08-24 08:37:27"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-24 08:38:18",
    "text": "For the `…` I was implying for you to put the code you wanted in there (for the null and non-null cases)"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-24 08:39:17",
    "text": "<https://react.dev/learn/conditional-rendering> could help if you are unfamiliar with the JSX syntax and options for component conditionals"
  },
  {
    "text": "so, only this `{fieldValues.buttons &amp;&amp; (&lt;div&gt;...&lt;/div&gt;)}` condition is working.",
    "time_stamp": "2023-08-24 08:42:55"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2023-08-24 08:51:35",
    "text": "What happens if you output `typeof fieldValues.buttons` ?"
  },
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-08-24 08:52:14",
    "text": "It is `Object`."
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-08-24 08:53:40",
    "edited": {
      "time_stamp": "2023-08-24 08:53:51"
    },
    "text": "You can also use `logInfo('Logging fieldValues.buttons', fieldValues.buttons);`  if you import like `import { logInfo } from '@HubSpot/cms-components'` . That will output to the server log during a server render and “save” that log and output it in the browser as well (to make it easier to debug things)"
  },
  {
    "poster": {
      "poster_name": "Will Brueske",
      "poster_handle": "will.brueske"
    },
    "time_stamp": "2023-08-24 10:41:48",
    "text": "No, that's basically it.  I want to be able to work on a page that I'm logged in to without having to make changes live.  Private membership apps seem like the perfect use case for this JS rendering feature.  Coupling it with the CMS dev server to make updates/add features to a developer project without affecting a live environment would be amazing."
  },
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2023-08-25 00:53:09",
    "text": "When I deploy this project on HubSpot projects it works fine but when I view this in Storybook I see error."
  }
]
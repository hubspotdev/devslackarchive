[
  {
    "poster": {
      "poster_name": "Pieter",
      "poster_handle": "pieter.detroyer"
    },
    "time_stamp": "2024-08-22 03:28:21",
    "text": "Hi, when creating a Page through the API I get an error that the value for the 'archivedAt' property cannot be converted. The value is '1970-01-01T00:00:00+00:00'. This value is the value that HS itself provides when you GET a page. Based on the docs, this value should also be valid. Any ideas how this can be resolved? Should I report a bug somewhere?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-08-22 03:29:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Pieter",
      "poster_handle": "pieter.detroyer"
    },
    "time_stamp": "2024-08-22 03:29:21",
    "text": "i could leave the property out of my POST request body, then it works. But the SDKs that I use always put this value in when archivedAt is not provided."
  },
  {
    "poster": {
      "poster_name": "Stacey Thomas",
      "poster_handle": "stacey.thomas"
    },
    "time_stamp": "2024-08-22 03:43:56",
    "text": "Does anyone know if there is likely to be any updates to the workflows API, such as being able to enrol other objects into a workflow?\n\nI'm using it now for enrolling contacts which seems like the only object currently available, but I would love to be able to enrol deals as well.\n(currently working around this by setting a property value on the deal via API which is the trigger for a deal-based workflow)",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-08-22 10:30:32"
      },
      {
        "time_stamp": "2024-08-23 02:44:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Raghav Aggarwal",
      "poster_handle": "raghav.aggarwal"
    },
    "time_stamp": "2024-08-22 06:02:58",
    "text": "Is there any API which I can use to get the email Id that was used to connect to a particular account?"
  },
  {
    "poster": {
      "poster_name": "Pieter",
      "poster_handle": "pieter.detroyer"
    },
    "time_stamp": "2024-08-22 06:03:48",
    "text": "I bumped into the same issue. My problem is that by using SDK's the value is set by the SDK while serializing... not sure how to get around it."
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2024-08-22 06:52:02",
    "text": "Hello, I have a workflow that uses a custom code action to search if there are any contacts by email address. It mostly works, but when someone does have the email address but it isn't their primary, the api doesn't find it. Is there a way to search for all email addresses on a contact, not just the primary?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-08-22 07:20:35"
      },
      {
        "time_stamp": "2024-08-22 07:59:16"
      }
    ]
  },
  {
    "text": "Hello everyone :wave:\n\nI am looking for a way to get the schema definition (like with the properties API) for a webhook that is sent inside a workflow.\n\nWhile using the new Automation v4 API, I get only the url of the webhook as such:\n```    {\n      \"actionId\": \"4\",\n      \"type\": \"WEBHOOK\",\n      \"method\": \"POST\",\n      \"webhookUrl\": \"...\",\n      \"queryParams\": [],\n      \"connection\": {\n        \"edgeType\": \"STANDARD\",\n        \"nextActionId\": \"5\"\n      }\n    },```\nBut I want the fields names and type (like in the screenshot).\n\nThe web application uses an endpoint that does what I want:\n-> https://app-eu1.HubSpot.com/api/automationplatform/v1/hybrid/WORKFLOW_ID?hs_static_app=automation-ui-canvas&hs_static_app_version=1.46674&portalId=PORTAL_ID&clienttimeout=14000\n\nWith output:\n```[...]\n        \"4\": {\n            \"actionId\": 4,\n            \"metadata\": {\n                \"method\": \"POST\",\n                \"url\": \"<https://webhook.site/52f71e69-6cbb-44dd-ad8c-99637dc0a0b0>\",\n                \"appId\": null,\n                \"actionTypeId\": \"3-132816887\",\n                \"outputFields\": null,\n                \"actionType\": \"WEBHOOK\",\n                \"queryParams\": null,\n                \"jsonSchema\": {\n                    \"schemaType\": \"OBJECT\",\n                    \"children\": {\n                        \"zip\": {\n                            \"schemaType\": \"LEAF\",\n                            \"variable\": {\n                                \"name\": \"zip\",\n                                \"value\": {\n                                    \"type\": \"OBJECT_PROPERTY\",\n                                    \"propertyName\": \"zip\"\n                                }\n                            }\n                        },\n                        \"city\": {\n                            \"schemaType\": \"LEAF\",\n                            \"variable\": {\n                                \"name\": \"city\",\n                                \"value\": {\n                                    \"type\": \"OBJECT_PROPERTY\",\n                                    \"propertyName\": \"city\"\n                                }\n                            }\n                        },\n[...]```\nAre you aware of anything that would allow me to get this information ?",
    "time_stamp": "2024-08-22 07:15:38",
    "edited": {
      "time_stamp": "2024-08-22 07:17:48"
    }
  },
  {
    "poster": {
      "poster_name": "Maxime Bures",
      "poster_handle": "maxime.bures"
    },
    "time_stamp": "2024-08-22 07:20:35",
    "text": "Hello :wave:\nYou can try to search also with the property `hs_additional_email`\nIt contains all the secondary emails separated with `;` , use this in the filters with operator `CONTAINS_TOKEN`"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2024-08-22 07:59:16",
    "text": "I just got it to work by using the batch read contacts api. using the `email` as the `idProperty`"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-08-22 10:30:32",
    "text": "Hey Stacey, check out the <#C076YMWHZQS|automation-workflows-api-beta> channel. There’s a new v4 beta that can create workflows for all the other objects."
  },
  {
    "poster": {
      "poster_name": "Dean Frazier",
      "poster_handle": "dean.frazier"
    },
    "time_stamp": "2024-08-22 10:36:26",
    "text": "Associating a contact to an existing meeting will add them as an attendee. So you will want to look at the “<https://developers.HubSpot.com/docs/api/crm/meetings#associate-existing-meetings-with-records|Associate existing meetings with records>” section."
  },
  {
    "poster": {
      "poster_name": "Yiz Segall",
      "poster_handle": "yiz.segall"
    },
    "time_stamp": "2024-08-22 11:06:37",
    "text": "Hey folks, with the new optional scopes for apps, is there a way to know if they allowed the optional scope or rejected it?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-08-23 04:39:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Crystal Bohacek",
      "poster_handle": "crystal560"
    },
    "time_stamp": "2024-08-22 11:07:21",
    "edited": {
      "time_stamp": "2024-08-22 11:19:38"
    },
    "text": "Hi! I'm trying to update a row in our HubDB database. I had a PHP script that works fine but when I try to do the same thing in Javascript, it doesn't update. It goes through without an error, but the data doesn't change.\n\nInterestingly, I am able to change one thing, which is the name (hs_name column), the other columns don't change even though they match the column name.\n\n\n```async function sendToHubDB(event) {\n  const sheet = event.source.getActiveSheet();\n  const range = event.range;\n  const rowData = sheet.getRange(range.getRow(), 1, 1, sheet.getLastColumn()).getValues()[0];\n\n  const data = {\n    sheetName: sheet.getName(),\n    row: range.getRow(),\n    rowName: sheet.getRange(range.getRow(), 1).getValue(),\n    column: range.getColumn(),\n    // value: range.getValue(),\n    rowData: rowData\n  };\n\n  try {\n    const state = data.rowName;\n    const hubdbToken = \"{token}\";\n    const hubdbTableId = \"{id}\";\n    const hubdbRowsURL = `<https://api.hubapi.com/cms/v3/hubdb/tables/${hubdbTableId}/rows>`;\n    let hubdbRowId = false;\n\n    const hubdbResponse = UrlFetchApp.fetch(hubdbRowsURL, {\n      \"method\": \"get\",\n      \"headers\": {\n        \"authorization\": `Bearer ${hubdbToken}`\n      }\n    });\n\n    const hubdbResponseData = JSON.parse(hubdbResponse.getContentText());\n\n    let hubdbRowData;\n\n    hubdbResponseData.results.forEach(row => {\n      if (row.values.state === state) {\n        console.log(\"original row data\", row.values);\n        hubdbRowId = row.id;\n        row.values[\"firm_registration_fee\"] = \"1,000,000\"; // <- hardcoded value for testing\n        //row.values[\"required_delivery_of_client_invoices\"] = data.rowData[1];\n        // row.values[\"registration_of_solicitors_required\"] = data.rowData[2];\n        // row.values[\"fingerprints_required_during_registration\"] = data.rowData[3];\n        hubdbRowData = row.values;\n      }\n    });\n\n    var hubDBTableURL = `<https://api.hubapi.com/cms/v3/hubdb/tables/${hubdbTableId}/rows/${hubdbRowId}/draft>`;\n\n    var options = {\n      \"method\": \"PATCH\",\n      \"headers\": {\n        \"authorization\": `Bearer ${hubdbToken}`\n      },\n      \"contentType\": \"application/json\",\n      \"payload\": JSON.stringify(hubdbRowData)\n    };\n\n    const response = UrlFetchApp.fetch(hubDBTableURL, options);\n  } catch (err) {\n    console.log(\"Error:\", err);\n  }\n}```",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-08-22 12:32:34"
      },
      {
        "time_stamp": "2024-08-22 12:33:28"
      },
      {
        "time_stamp": "2024-08-22 12:34:20"
      },
      {
        "time_stamp": "2024-08-22 14:41:47"
      },
      {
        "time_stamp": "2024-08-22 14:42:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Whoo",
      "poster_handle": "dominique796"
    },
    "time_stamp": "2024-08-22 11:09:00",
    "text": ":wave: Bonjour à tous ! / Hi everyone :wink:"
  },
  {
    "text": "This is a screenshot of the log showing the data being sent, and the response from HubDB. Notice the matching column names, but the data doesn't get updated.",
    "time_stamp": "2024-08-22 11:14:11",
    "edited": {
      "time_stamp": "2024-08-22 11:14:47"
    }
  },
  {
    "poster": {
      "poster_name": "Whoo",
      "poster_handle": "dominique796"
    },
    "time_stamp": "2024-08-22 11:16:09",
    "text": "Hi Guys,\nIs \"setuptools\" could be a requirement on HubSpot package for python ?\n(I solve this issue by myself ;))"
  },
  {
    "poster": {
      "poster_name": "Whoo",
      "poster_handle": "dominique796"
    },
    "time_stamp": "2024-08-22 11:21:14",
    "text": "Hi again,\nI try to generate 1x1 pixel ... for tracking via API ( <http://hs-sales-engage.com|hs-sales-engage.com> .... )\n(old documentation was removed, do you know where I need to start with ?)",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-08-23 11:43:48"
      },
      {
        "time_stamp": "2024-08-26 08:04:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Bolt",
      "poster_handle": "bolt.shiny220"
    },
    "time_stamp": "2024-08-22 11:21:40",
    "text": "Hello, Everyone.\nCurrently, I am going to set up a webhook when the new note is added, then how can i do this?\nI saw there is no webhook options for notes, I would appreciate it if anyone can help you.\nThanks",
    "reply_count": 11,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-08-22 13:12:30"
      },
      {
        "time_stamp": "2024-08-22 13:13:29"
      },
      {
        "time_stamp": "2024-08-22 13:14:29"
      },
      {
        "time_stamp": "2024-08-22 13:15:32"
      },
      {
        "time_stamp": "2024-08-22 13:15:51"
      },
      {
        "time_stamp": "2024-08-22 13:18:03"
      },
      {
        "time_stamp": "2024-08-22 13:18:20"
      },
      {
        "time_stamp": "2024-08-22 13:18:55"
      },
      {
        "time_stamp": "2024-08-22 13:19:50"
      },
      {
        "time_stamp": "2024-08-23 08:39:14"
      },
      {
        "time_stamp": "2024-08-23 08:41:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Yiz Segall",
      "poster_handle": "yiz.segall"
    },
    "time_stamp": "2024-08-22 12:32:34",
    "text": "<@U04R4ULJW04> I'm not so familiar with the HubDB api, but you are pushing the data to a draft table. While I can't be certain it shows that the table was update an hour after it was published. You can look at the published values and then it gives you the values. I imagine it is giving you the published values until you push the data live"
  },
  {
    "poster": {
      "poster_name": "Yiz Segall",
      "poster_handle": "yiz.segall"
    },
    "time_stamp": "2024-08-22 12:33:28",
    "text": "use the `/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft`to see if the draft indeed was updated"
  },
  {
    "poster": {
      "poster_name": "Yiz Segall",
      "poster_handle": "yiz.segall"
    },
    "time_stamp": "2024-08-22 12:34:20",
    "text": "use postman to test rather than having to write whole new code for the test"
  },
  {
    "poster": {
      "poster_name": "Whoo",
      "poster_handle": "dominique796"
    },
    "time_stamp": "2024-08-22 13:12:30",
    "edited": {
      "time_stamp": "2024-08-22 13:12:53"
    },
    "text": "Did you have a look on <https://developers.HubSpot.com/beta-docs/guides/api/crm/engagements/notes> ?\nIt's seems to fit to your needs."
  },
  {
    "poster": {
      "poster_name": "Bolt",
      "poster_handle": "bolt.shiny220"
    },
    "time_stamp": "2024-08-22 13:13:29",
    "text": "Hi, <@U07J11CD1HT>\nThanks for your reply.\nI know I can get the notes using API, but I want to implement it through webhook and I cant see any options for it."
  },
  {
    "poster": {
      "poster_name": "Whoo",
      "poster_handle": "dominique796"
    },
    "time_stamp": "2024-08-22 13:14:29",
    "text": "ohh I see... sorry to young with this api to help you :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Bolt",
      "poster_handle": "bolt.shiny220"
    },
    "time_stamp": "2024-08-22 13:15:32",
    "text": "What do you mean?\nAs I said before, I want to get the note when new note is created.\nAnd it is implemented by using webhook"
  },
  {
    "poster": {
      "poster_name": "Bolt",
      "poster_handle": "bolt.shiny220"
    },
    "time_stamp": "2024-08-22 13:15:51",
    "text": "But there is no option regrading the any engagements on webhook"
  },
  {
    "poster": {
      "poster_name": "Bolt",
      "poster_handle": "bolt.shiny220"
    },
    "time_stamp": "2024-08-22 13:18:03",
    "text": "So, can you help me?"
  },
  {
    "poster": {
      "poster_name": "Whoo",
      "poster_handle": "dominique796"
    },
    "time_stamp": "2024-08-22 13:18:20",
    "text": "sorry I'm not able for that."
  },
  {
    "text": "Hey Everyone!\n\nQuestion around `searchableProperties`.  I have a custom object set up, and I want to return the object with all properties via API. When calling `<https://api.hubapi.com/crm/v3/schemas>`, I see a few arrays:\n\n`requiredProperties`\n`searchableProperties`\n`properties`\n\nMy understanding of searchableProperties is that this set of fields can be returned via API. Is that accurate? Or can all properties be returned?\n<https://developers.HubSpot.com/docs/api/crm/crm-custom-objects>",
    "time_stamp": "2024-08-22 13:18:27",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-08-23 04:44:26"
      },
      {
        "time_stamp": "2024-08-23 04:45:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Bolt",
      "poster_handle": "bolt.shiny220"
    },
    "time_stamp": "2024-08-22 13:18:55",
    "text": "Okay, I see, thanks for your support"
  },
  {
    "poster": {
      "poster_name": "Whoo",
      "poster_handle": "dominique796"
    },
    "time_stamp": "2024-08-22 13:19:50",
    "text": "I need more experience with this API to be helpful."
  },
  {
    "poster": {
      "poster_name": "Crystal Bohacek",
      "poster_handle": "crystal560"
    },
    "time_stamp": "2024-08-22 14:41:47",
    "text": "Thanks for looking into it <@U03JDEHCX17>! I actually thought it could be that and I looked into it, but everything checked out."
  },
  {
    "poster": {
      "poster_name": "Crystal Bohacek",
      "poster_handle": "crystal560"
    },
    "time_stamp": "2024-08-22 14:42:33",
    "text": "I figured out the error. I forgot to nest the rows inside an object with the values key. So I was overriding the whole row with just the values\n\nIn case anyone else runs into this issue, this is what the final payload looks like now:\n\n\"payload\": JSON.stringify({\"values\": hubdbRowData})"
  },
  {
    "poster": {
      "poster_name": "Byron Piedrahita",
      "poster_handle": "byron.piedrahita"
    },
    "time_stamp": "2024-08-22 16:20:28",
    "edited": {
      "time_stamp": "2024-08-22 16:20:59"
    },
    "text": "Hi!! The task to Deal association is not working.   {\n          \"to\": {\n            \"id\": dealID\n          },\n          \"types\": [\n            {\n              \"associationCategory\": \"HubSpot_DEFINED\",\n              \"associationTypeId\": 216\n            }\n          ]\n        }",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-08-23 04:51:04"
      },
      {
        "time_stamp": "2024-08-23 08:20:54"
      },
      {
        "time_stamp": "2024-08-23 08:24:32"
      },
      {
        "time_stamp": "2024-08-23 08:31:27"
      },
      {
        "time_stamp": "2024-08-23 08:51:56"
      },
      {
        "time_stamp": "2024-08-23 17:25:37"
      },
      {
        "time_stamp": "2024-08-23 17:29:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Neal Lambert",
      "poster_handle": "neal803"
    },
    "time_stamp": "2024-08-22 20:39:11",
    "text": "HubSpot support reached back out and were able to help me determine the issue. For anyone else who might runs into this in the future:\n\nI had registered the following url:\n`<https://example.com/apps/HubSpot/recordings?externalId=%s>`\nwhich is setting the externalId is a query param\n\nthey want it to be a path param like this:\n`<https://example.com/apps/HubSpot/recordings/%s>`\n\nSo I just had to update my application to look for `externalId` in the path params and `externalAccountId` and `appId` in the JSON body of the GET request.\n\nOnce I fixed that all the recording started playing properly in both parts of the UI. I guess there is some inconsistency with how each screen validates the URL."
  }
]
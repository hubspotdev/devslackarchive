[
  {
    "poster": {
      "poster_name": "Toni Lagorio",
      "poster_handle": "t.lagorio"
    },
    "time_stamp": "2024-05-13 01:52:13",
    "text": "Hi <@U04FNHJ0U2J>,\n\nThanks a lot for your help ! I tried to do so but I don't see how I can do as you suggested.\n\nIs there a need to have a special field that would be the concatenation of all values known by one field ?"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2024-05-13 04:06:32",
    "text": "Hello Everyone,\n\nHow can I optimize my workflow to efficiently manage deal creation? I have two workflows where deals are created, sometimes with the same name but different criteria. In the first workflow, I want to check if a deal with the same name exists. If it does, I need to update its stage; otherwise, I create a new deal.\n\nCan this be achieved without custom code, or is custom code necessary?\n\nThank you very much!",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-06-11 05:12:48"
      }
    ]
  },
  {
    "text": "I’m not sure what you’re asking. Let’s say you have `Referred Email` as the form property.. You’ll have an `All Referred Emails` property and whenever `Referred Email` is filled out in the form, you’d update `All Referred Emails` as seen in the workflow image. So in the example, for the workflow, replace `email` with `Referred Email` and `test email concat` with `All Referred Emails` . To concatenate, you’ll just use both properties to form the value.. with a comma or another delimiter. It’s similar to making a template email with placeholder values.",
    "time_stamp": "2024-05-13 05:26:02"
  },
  {
    "poster": {
      "poster_name": "Toni Lagorio",
      "poster_handle": "t.lagorio"
    },
    "time_stamp": "2024-05-13 05:35:35",
    "text": "Ok got it, thanks for your help Amalia, I will try :slightly_smiling_face: Have a nice day!"
  },
  {
    "text": "FYI we’ve just launched new “operators” for the Value equals branch. The Number values will get the new operators seen in the screenshot while all other values will get a new “is not equal to” operator. Let us know what you think.",
    "time_stamp": "2024-05-13 08:33:57"
  }
]
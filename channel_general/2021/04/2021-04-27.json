[
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2021-04-27 04:53:34",
    "text": "try using single quotes"
  },
  {
    "poster": {
      "poster_name": "Stephen Bowman",
      "poster_handle": "bowman"
    },
    "time_stamp": "2021-04-27 05:48:07",
    "text": "Hi <@UQWGKUEN7> - did you manage to resolve this in the end? Having the same issue here with one (customer) portal that had been working fine up until today. Likewise, only the root folder is affected. Likewise, other portals are working fine. :shrug:"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-27 07:48:45",
    "text": "You know I never really went back and checked it out. I ended up just logging into the portal and checking out the file paths myself. But likely the culprit was as Jon mentioned above where I likely just swapped the flags with the commands. "
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-27 07:49:52",
    "text": "Oh you better believe I tried everything in the books. Haha however this is to export a lot of blogs so swapping all of them to be single quotes wouldn’t be scalable. "
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-27 07:51:26",
    "text": "It seems like the escapejson and tojson try to “fix” html instead of escape it. The only way that I was able to get this behavior to stop was to actually comment it out / put it in a script template tag. "
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2021-04-27 11:50:09",
    "text": "I realize I'm dropping a big one here but has anybody ever actually seen a HubSpot CMS website pass Google's Core Web Vitals? I don't think I have and the upcoming Google Algorithm update has me nervous...",
    "reply_count": 36,
    "reply_users_count": 8,
    "replies": [
      {
        "time_stamp": "2021-04-27 12:03:40"
      },
      {
        "time_stamp": "2021-04-27 13:10:46"
      },
      {
        "time_stamp": "2021-04-27 13:31:38"
      },
      {
        "time_stamp": "2021-04-27 13:51:04"
      },
      {
        "time_stamp": "2021-04-27 13:53:26"
      },
      {
        "time_stamp": "2021-04-27 13:54:32"
      },
      {
        "time_stamp": "2021-04-27 14:45:48"
      },
      {
        "time_stamp": "2021-04-28 06:10:50"
      },
      {
        "time_stamp": "2021-04-28 06:22:55"
      },
      {
        "time_stamp": "2021-04-28 06:54:35"
      },
      {
        "time_stamp": "2021-04-28 06:55:21"
      },
      {
        "time_stamp": "2021-04-28 06:57:50"
      },
      {
        "time_stamp": "2021-04-28 07:05:17"
      },
      {
        "time_stamp": "2021-04-28 07:48:17"
      },
      {
        "time_stamp": "2021-04-28 07:51:56"
      },
      {
        "time_stamp": "2021-04-28 07:55:46"
      },
      {
        "time_stamp": "2021-04-28 07:57:37"
      },
      {
        "time_stamp": "2021-04-28 07:59:19"
      },
      {
        "time_stamp": "2021-04-28 08:14:34"
      },
      {
        "time_stamp": "2021-04-28 09:44:43"
      },
      {
        "time_stamp": "2021-04-28 10:30:00"
      },
      {
        "time_stamp": "2021-04-28 10:35:41"
      },
      {
        "time_stamp": "2021-04-28 10:38:02"
      },
      {
        "time_stamp": "2021-04-28 10:39:56"
      },
      {
        "time_stamp": "2021-04-29 12:47:03"
      },
      {
        "time_stamp": "2021-04-29 13:09:45"
      },
      {
        "time_stamp": "2021-04-29 13:12:35"
      },
      {
        "time_stamp": "2021-04-29 14:14:55"
      },
      {
        "time_stamp": "2021-04-29 15:36:44"
      },
      {
        "time_stamp": "2021-04-29 16:54:33"
      },
      {
        "time_stamp": "2021-04-29 16:57:04"
      },
      {
        "time_stamp": "2021-04-29 16:57:14"
      },
      {
        "time_stamp": "2021-04-29 16:58:04"
      },
      {
        "time_stamp": "2021-04-29 17:07:19"
      },
      {
        "time_stamp": "2021-04-29 17:18:18"
      },
      {
        "time_stamp": "2024-04-03 02:25:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2021-04-27 12:03:40",
    "edited": {
      "time_stamp": "2021-04-27 12:03:50"
    },
    "text": "yes, here’s one\n<https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fwww.reliascent.com>"
  },
  {
    "poster": {
      "poster_name": "Christopher Mathieu",
      "poster_handle": "christopher.mathieu"
    },
    "time_stamp": "2021-04-27 13:10:46",
    "text": "no doubt this is indeed the fastest HubSpot site i've ever seen!"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2021-04-27 13:31:38",
    "text": "they hired my company to work on page speed, unfortunately they didn’t hire us for design too :laughing:"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2021-04-27 13:51:04",
    "text": "Nice.  With jQuery too"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2021-04-27 13:53:26",
    "text": "vectorized their logo just to get the file size smaller. was a fun project"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-04-27 13:54:32",
    "text": "A random side note - Last few portals I’ve worked on just for optimisations have both been using request.headers or another variable which disables page caching. Always worth a check to make sure none of the sites are using this, otherwise it’ll fully disable full-page caching. This seems to be quite prominent because a lot of people have google tag manager, or a dataLayers which depend on these - Change them to use Javascript."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-04-27 14:45:48",
    "edited": {
      "time_stamp": "2021-04-27 14:59:35"
    },
    "text": "Just to piggy-back what Kieran said on the HubL variables page we specifically denote variables that have this effect so you can safely avoid them. A lot of the time you can avoid using the HubL vars and just use javascript to get the data.\n\nThe jist though of identifying those variables is “will this variable change or be different every time someone loads this page?” if the answer is yes, then you should probably use JavaScript to get the data since that would prevent us serving a cached page."
  },
  {
    "poster": {
      "poster_name": "Stephen Bowman",
      "poster_handle": "bowman"
    },
    "time_stamp": "2021-04-27 18:33:39",
    "text": "Okay, weird. In this case it is the default portal and so I am accessing it without any flags. Just straight up `hs ls`  with no additional parameters returns `[INFO] No files found in /`. A colleague's access to this particular portal is affected in exactly the same way. I guess it is just a bug we will have to live with."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-27 18:37:34",
    "text": "Ahhh sure sure I have a bagillion portals connected so I always flag a portal just for my own peace of mind. That way I know I don’t accidentally overwrite a bunch of files in the wrong place :p"
  },
  {
    "poster": {
      "poster_name": "Gray Rhino",
      "poster_handle": "saeed"
    },
    "time_stamp": "2021-04-27 22:04:31",
    "text": "I have a question about `Mixed Content` error. The iFrame is not loading and the following error is shown: `Mixed Content: The page at '<https://app.HubSpot.com/contacts/####/contact/###/>' was loaded over HTTPS, but requested an insecure frame '<http://mydomain/#https://app.HubSpot.com>'. This request has been blocked; the content must be served over HTTPS.`  I am using NGINX to redirect all http requests to https. Why in this case it is still requesting http? Any suggestions/help would be appreciated",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-04-28 02:44:17"
      }
    ]
  }
]
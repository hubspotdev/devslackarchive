[
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-14 02:48:02",
    "text": "Does anyone use webpack to load their SVGs in a sprite to reduce http requests? I’m using <https://github.com/JetBrains/svg-sprite-loader#why-its-cool> and it works great but SVGs don’t render inside of the HubSpot website editor so it might be confusing for the rest of the team. Any idea which configuration would be required for it to work inside the editor?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-07-14 05:48:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter",
      "poster_handle": "pgustafson"
    },
    "time_stamp": "2020-07-14 05:28:43",
    "text": "Hey if you still need help with this let me know.."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-14 05:48:22",
    "text": "btw, I’m currently getting 90+ scores in Google Pagespeed for a pretty huge (with background video) homepage I am working on. Adding in the rest of the big images and long content to get a more realistic representation but I have high hopes. I’ll share the setup when done!"
  },
  {
    "text": "Hey guys,\n\nI'm trying to change some js to pull in a multi-select column from HubDB instead of a text column (in order to build a map). Could anyone help me understand what to change so the console prints for each value within the cell?\n\nCurrent\n```&lt;!--\n  templateType: \"page\"\n  isAvailableForNewContent: false\n--&gt;\n&lt;!-- Begin partial --&gt;\n{%- set table = hubdb_table_rows(111111) -%}\n{%- set jsvar = table|tojson -%}    \n&lt;script&gt;\n  var jsonData = {{ jsvar }};\n  var office_info_map = {};\n  for (var item of jsonData.objects) {\n    office_info_map[item.market_text] = item;\n  }\n  console.log(JSON.stringify(office_info_map))\n&lt;/script&gt;\n&lt;!-- End partial --&gt;```\nSimply changing `office_info_map[item.market_single_line_text] = item;` to `office_info_map[item.market_multi_select] = item;` prints `[object Object]` instead of any value",
    "time_stamp": "2020-07-14 06:05:52",
    "edited": {
      "time_stamp": "2020-07-14 06:06:22"
    },
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-07-14 06:08:29"
      },
      {
        "time_stamp": "2020-07-14 06:10:35"
      },
      {
        "time_stamp": "2020-07-14 06:12:38"
      },
      {
        "time_stamp": "2020-07-14 06:13:15"
      },
      {
        "time_stamp": "2020-07-14 06:14:17"
      },
      {
        "time_stamp": "2020-07-14 09:29:11"
      },
      {
        "time_stamp": "2020-07-16 05:50:03"
      },
      {
        "time_stamp": "2020-07-16 05:51:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-14 06:08:29",
    "text": "what happens if you don’t |tojson the data?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-14 06:10:35",
    "text": "and loop like this:\n```{% for item of jsvar %} \n{{ item }} \n{% endfor %}```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-14 06:12:38",
    "edited": {
      "time_stamp": "2020-07-14 06:12:50"
    },
    "text": "or better yet:\n```{% for row in hubdb_table_rows(111111) %}\n{{ row }}\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-14 06:13:15",
    "text": "maybe ending up with something nested"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2020-07-14 06:14:17",
    "text": "I have a vague memory of JSON not being JSON when working with HUBDB data. It’s a text representation that is weird to convert unless you use HUBL directly."
  },
  {
    "poster": {
      "poster_name": "Edoardo Dusi",
      "poster_handle": "edoardo.dusi"
    },
    "time_stamp": "2020-07-14 07:45:35",
    "edited": {
      "time_stamp": "2020-07-14 07:46:40"
    },
    "text": "hi guys! I'm a web developer and I'm new to HubSpot, I'm trying to figure out what are the real possibilities with the development of HubSpot apps (the marketplace), I mean is it possible to actually extend the CRM? Can I add functions like form fields, widgets, something you don't have with the plain HubSpot account and add it through an app?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-19 10:32:02"
      },
      {
        "time_stamp": "2020-07-24 09:23:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-07-14 09:29:11",
    "text": "if you’re doing hubdb… try *<https://docs.google.com/document/u/1/d/e/2PACX-1vTuu12oFF4bQY1zVD2-WKFuM2dEDN81-fZRV1tGaCL5Z_OcjC-B6O3mHXR6chaq25BU1D2FuvKIjc49/pub|this “unofficially documented” client library>*"
  },
  {
    "poster": {
      "poster_name": "David F Jones",
      "poster_handle": "david568"
    },
    "time_stamp": "2020-07-14 10:59:14",
    "text": "Hey all,\nI have a video / cors issue here. I'm trying to access the video player for a HubSpot video on my domain. I'm currently using the following to try and access the video\n`video = $(\".vidyard-player-container\").find('iframe')[0].contentWindow.document.querySelector('video');`\nThis is however giving me a CORS error. I may be misunderstanding something, but shouldn't a CORS error only occur if the iframe is from a different domain? The video I'm trying to access was uploaded to the same HubSpot domain that I am serving it on. In the error we can even see the domain of the vid vs the domain I'm trying to get it from -\n\n`Uncaught DOMException: Blocked a frame with origin \"<https://www.thesuccessfulbookkeeper.com>\" from accessing a cross-origin frame.`\n    `at <https://www.thesuccessfulbookkeeper.com/_hcms/raw-resource?path=TSBK-LMS/js/htmlVideoProgress.js&amp;portalId=6670407&amp;t=1594745545301:18:79>`\n\nUltimately what I'm am trying to do is get access to the video player to manipulate things like the start time of the video and check what time a user is pausing the video at"
  }
]
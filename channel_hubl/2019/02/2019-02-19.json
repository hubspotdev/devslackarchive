[
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-02-19 05:32:29",
    "text": "You can change the field title, but definitely not the Hubl variable name"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-19 06:34:57",
    "text": "That's what I thought :confused: would be a great feature. Was working with an inherited template that was migrated from DM1 and the field name was a protected HubL variable (image_width). Was causing some errors, but was also used multiple times on their live site. Would be nice if there was a way to otherwise update or \"merge\" fields for this use-case"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:06:53",
    "text": "theoretically"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:07:18",
    "text": "you might actually be able to do what you want if you change the field variable name via ftp"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:07:24",
    "text": "there’s an ID attached to all of the fields"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:07:38",
    "text": "theoretically all the values should be mapped to that ID"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 07:09:00",
    "text": "_theoretically_  famous last word"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:09:08",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:09:12",
    "text": "I’d definitely do a test"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:09:17",
    "text": "before doing it with a live module"
  },
  {
    "time_stamp": "2019-02-19 07:09:34",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 07:10:14",
    "text": "also famous first words.\n\nNo great scientific discovery was made by someone going, I already know this is safe and going to work just fine"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 07:11:04",
    "text": "ha"
  },
  {
    "text": "does this only work on true strings?",
    "time_stamp": "2019-02-19 08:58:29"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 09:01:39",
    "edited": {
      "time_stamp": "2019-02-19 09:01:53"
    },
    "text": "why not do `{%set zip = request.query_dict.zipcode %} `instead? might solve your issue",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-19 09:02:37"
      },
      {
        "time_stamp": "2019-02-19 09:05:24"
      },
      {
        "time_stamp": "2019-02-19 09:06:51"
      },
      {
        "time_stamp": "2019-02-19 09:08:46"
      },
      {
        "time_stamp": "2019-02-19 09:13:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-19 09:02:37",
    "text": "no... tried that :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-19 09:05:24",
    "text": "i think truncate is broken"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-19 09:06:51",
    "edited": {
      "time_stamp": "2019-02-19 09:06:59"
    },
    "text": "might want to check the variable type first by using `|pprint` if you're not sure if it's already a string?"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-19 09:08:46",
    "text": "it outputs (String: 33442)"
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-19 09:13:19",
    "text": "that's strange indeed. have you tried not adding in the `|string` filter and truncate it right away?"
  },
  {
    "text": "",
    "time_stamp": "2019-02-19 09:25:42"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2019-02-19 09:26:08",
    "text": "anything less than 5 only returns 1 character"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 09:26:21",
    "text": "bizzare"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:45:18",
    "text": "does one have to use the custom module fields pane to add fields or can one add tags into  the html using the <@U6W3H6YN8> code extension and uploading via ftp?",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-19 09:50:19"
      },
      {
        "time_stamp": "2019-02-19 09:51:13"
      },
      {
        "time_stamp": "2019-02-19 09:52:39"
      },
      {
        "time_stamp": "2019-02-19 09:53:00"
      },
      {
        "time_stamp": "2019-02-19 09:53:03"
      },
      {
        "time_stamp": "2019-02-19 09:53:14"
      },
      {
        "time_stamp": "2019-02-19 09:53:22"
      },
      {
        "time_stamp": "2019-02-19 09:53:35"
      },
      {
        "time_stamp": "2019-02-19 09:53:37"
      },
      {
        "time_stamp": "2019-02-19 09:54:39"
      },
      {
        "time_stamp": "2019-02-19 09:55:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:46:15",
    "text": "trying to use vs code more for custom module creation. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 09:50:19",
    "text": "you can use ftp to edit the fields.json"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:51:13",
    "text": "how is the id generated?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 09:52:39",
    "text": "<https://media.giphy.com/media/12NUbkX6p4xOO4/giphy.gif>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 09:53:00",
    "text": "just leave `id:\"\",`\nWhen creating the field"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:53:03",
    "text": "and where do i get that extension :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 09:53:14",
    "text": "the vs code extension?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:53:22",
    "text": "the magic extension"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:53:35",
    "text": "for vs code"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:53:37",
    "text": "i want it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 09:54:39",
    "text": "<https://marketplace.visualstudio.com/items?itemName=WilliamSpiro.hubl>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-19 09:55:52",
    "text": "sorry.  bad joke. need to take it to the #justdennis channel and work on it"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2019-02-19 09:57:50",
    "text": "Hello! I have a question please. IS it possible to tie the visibility of a field in the editor to two different tests? Like I need some fields to be displayed when a boolean option is toggled AND a specific choice value is selected",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-19 10:52:45"
      },
      {
        "time_stamp": "2019-02-19 11:13:47"
      },
      {
        "time_stamp": "2019-02-19 11:14:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-19 10:52:45",
    "text": "not directly but there’s still a way to do it, it’s just not ideal for many scenarios.\ngroup the field, apply 1 condition to the group, apply the other condition to the field"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2019-02-19 11:13:47",
    "text": "<@U7SL518D6> I am trying that right now. I just have troubles getting the settings in the JSON file right so that we can deploy the module via the API. Thanks for the help."
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2019-02-19 11:14:21",
    "text": "I managed to do that in the editor... now I need to get in in code :smile:"
  },
  {
    "poster": {
      "poster_name": "Adrian Sandu",
      "poster_handle": "adrian"
    },
    "time_stamp": "2019-02-19 11:57:00",
    "text": "Me again... Does anyone know if there is a documentation for the V4 of the API? More exactly, I need info on this endpoint `<https://api.hubapi.com/content/api/v4/custom-widgets>`"
  },
  {
    "text": "Currently using this markup to generate a dropdown list of blog topics, this code only generates topics that appear on that specific page, is there a way to get it to query ALL topics from a specific blog ? Thanks!",
    "time_stamp": "2019-02-19 12:42:45",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-19 12:46:38"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Louie Gerodiaz",
      "poster_handle": "louiegerodiaz"
    },
    "time_stamp": "2019-02-19 12:46:38",
    "text": "This might be what you're looking for\n<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#blog-topics>"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-02-19 20:38:24",
    "text": "Awwww, I have a huge smile hearing this you guys and gals! :hugging_face: Honestly, I didn't do much... Just setup a slack and pushed all ya'll to it.  You all are the ones in here helping each other, teaching, answering questions, and having fun! You all make the magic happen :unicorn_face::star2: I love seeing everyone working together. :slightly_smiling_face: Together, we'll create the world's most lovable and collaborative CMS development experiences. :raised_hands: cc. <@U54TVT3C1> <@U26BLKGE4> <@U6W3H6YN8> <@U7SL518D6> <@UD53A9UUR>"
  }
]
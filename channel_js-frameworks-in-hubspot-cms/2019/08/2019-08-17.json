[
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-08-17 08:09:44",
    "edited": {
      "time_stamp": "2019-08-17 08:14:01"
    },
    "text": "Who has transformed a HS Form, (hs react code), into their own React Components (for styling purposes mostly)? Got a couple ideas on this, but just hashing them out now.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-08-17 10:30:24"
      },
      {
        "time_stamp": "2019-08-17 11:01:29"
      },
      {
        "time_stamp": "2019-08-17 11:02:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-08-17 10:30:24",
    "text": "Think I got it actually "
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-08-17 11:01:29",
    "text": "I built a pretty crazy vue setup a while ago to ping the HS API to get form data then use field names, options, etc... to build my own vue component that used state on the page, but then used the form submit API at the end. had to build a proxy middleware though, wouldn't necessarily reccomend"
  },
  {
    "poster": {
      "poster_name": "Jon K. Wheeler",
      "poster_handle": "jon.k.wheeler"
    },
    "time_stamp": "2019-08-17 11:02:56",
    "edited": {
      "time_stamp": "2019-08-18 05:46:40"
    },
    "text": "Yeah, pinging the api would be the easier way, but we can’t do that due to losing features like rate limits if you don’t let HS init the form."
  }
]
[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2023-07-14 03:17:23",
    "text": "Yeah I use the global form event to detect when the form is ready\n<https://legacydocs.HubSpot.com/global-form-events>\n\nThen I find my signature file field in the form, hide it, and append the signature code from that codepen, (the github code from Cater looks slightly nicer but up to you)\n\nThen on the click of the input type submit you have to prevent default (this works even if the user presses enter (weird HubSpot behaviour must use js to trigger the click or something?))\n\nI then check for errors as I now have to manually validate\n\nthen I get the FormData and append the signature blobfile\nThen I ajax it to the form submission api endpoint.\n\nThen I have to show the thankyou message / redirect\n\nItâ€™s definitely not the cleanest solution but it works\n\n```if(event.data.type === 'hsFormCallback' &amp;&amp; event.data.eventName === 'onFormReady') {\n\t    // the form is ready to manipulate!\n\t\t\n\t\t//Add signature to form\n\t\tvar $form = $('.hs_signature').closest('form');\n\t\tif ($form.length &gt; 0) {\n\t\t\tvar $signItem = $('.hs_signature',$form);\n\t\t\tvar file;\n\t\t\tvar blobFile;\n\t\t\tvar $canvas = $('&lt;canvas class=\"signature__canvas\"&gt;&lt;/canvas&gt;');\n\t\t\t$signItem.append($canvas);\n\t\t\t$signItem.append('&lt;img id=\"sig-image\" class=\"signature__img\" src=\"\" alt=\"Your signature will go here!\"/&gt;');\n// \t\t\t$signItem.append('&lt;div id=\"sig-dataUrl\" style=\"display:none;\"&gt;&lt;/div&gt;');\n\t\t\t$signItem.append('&lt;div class=\"btn signature__submit\" id=\"sig-submitBtn\"&gt;Sign&lt;/div&gt;');\n\t\t\t$signItem.append('&lt;div class=\"btn signature__clear\" id=\"sig-clearBtn\"&gt;Clear&lt;/div&gt;');\n\t\t\twindow.requestAnimFrame = (function(callback) {\n\t\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimaitonFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t\t})();\n\t\t\t\n\t\t\tvar canvas = $canvas[0];\n\t\t\tvar ctx = canvas.getContext(\"2d\");\n\t\t\t\n\t\t\tctx.strokeStyle = \"#222222\";\n\t\t\tctx.lineWidth = 4;\n\t\t\tctx.canvas.width = $signItem.width();\n\t\t\tctx.canvas.height = $signItem.width() / 3.5;\n\t\t\tctx.fillStyle = \"#ffffff\";\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\t\t\tvar drawing = false;\n\t\t\tvar mousePos = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t};\n\t\t\tvar lastPos = mousePos;\n\n\t\t\tcanvas.addEventListener(\"mousedown\", function(e) {\n\t\t\t\tdrawing = true;\n\t\t\t\tlastPos = getMousePos(canvas, e);\n\t\t\t}, false);\n\n\t\t\tcanvas.addEventListener(\"mouseup\", function(e) {\n\t\t\t\tdrawing = false;\n\t\t\t}, false);\n\n\t\t\tcanvas.addEventListener(\"mousemove\", function(e) {\n\t\t\t\tmousePos = getMousePos(canvas, e);\n\t\t\t}, false);\n\n\t\t\t// Add touch event support for mobile\n\t\t\tcanvas.addEventListener(\"touchstart\", function(e) {\n\n\t\t\t}, false);\n\n\t\t\tcanvas.addEventListener(\"touchmove\", function(e) {\n\t\t\t\tvar touch = e.touches[0];\n\t\t\t\tvar me = new MouseEvent(\"mousemove\", {\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t});\n\t\t\t\tcanvas.dispatchEvent(me);\n\t\t\t}, false);\n\n\t\t\tcanvas.addEventListener(\"touchstart\", function(e) {\n\t\t\t\tmousePos = getTouchPos(canvas, e);\n\t\t\t\tvar touch = e.touches[0];\n\t\t\t\tvar me = new MouseEvent(\"mousedown\", {\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t});\n\t\t\t\tcanvas.dispatchEvent(me);\n\t\t\t}, false);\n\n\t\t\tcanvas.addEventListener(\"touchend\", function(e) {\n\t\t\t\tvar me = new MouseEvent(\"mouseup\", {});\n\t\t\t\tcanvas.dispatchEvent(me);\n\t\t\t}, false);\n\n\t\t\tfunction getMousePos(canvasDom, mouseEvent) {\n\t\t\t\tvar rect = canvasDom.getBoundingClientRect();\n\t\t\t\treturn {\n\t\t\t\t\tx: mouseEvent.clientX - rect.left,\n\t\t\t\t\ty: mouseEvent.clientY - <http://rect.top|rect.top>\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getTouchPos(canvasDom, touchEvent) {\n\t\t\t\tvar rect = canvasDom.getBoundingClientRect();\n\t\t\t\treturn {\n\t\t\t\t\tx: touchEvent.touches[0].clientX - rect.left,\n\t\t\t\t\ty: touchEvent.touches[0].clientY - <http://rect.top|rect.top>\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction renderCanvas() {\n\t\t\t\tif (drawing) {\n\t\t\t\t\tctx.moveTo(lastPos.x, lastPos.y);\n\t\t\t\t\tctx.lineTo(mousePos.x, mousePos.y);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tlastPos = mousePos;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prevent scrolling when touching the canvas\n\t\t\tdocument.body.addEventListener(\"touchstart\", function(e) {\n\t\t\t\tif (e.target == canvas) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t\tdocument.body.addEventListener(\"touchend\", function(e) {\n\t\t\t\tif (e.target == canvas) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t\tdocument.body.addEventListener(\"touchmove\", function(e) {\n\t\t\t\tif (e.target == canvas) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}, false);\n\n\t\t\t(function drawLoop() {\n\t\t\t\trequestAnimFrame(drawLoop);\n\t\t\t\trenderCanvas();\n\t\t\t})();\n\n\t\t\tfunction clearCanvas() {\n\t\t\t\tcanvas.width = canvas.width;\n\t\t\t\tctx.fillStyle = \"#ffffff\";\n\t\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\t}\n\n\t\t\t// Set up the UI\n\t\t\tvar sigText = document.getElementById(\"sig-dataUrl\");\n\t\t\tvar sigImage = document.getElementById(\"sig-image\");\n\t\t\tvar clearBtn = document.getElementById(\"sig-clearBtn\");\n\t\t\tvar submitBtn = document.getElementById(\"sig-submitBtn\");\n\t\t\tclearBtn.addEventListener(\"click\", function(e) {\n\t\t\t\t$('.signature__submit').show();\n\t\t\t\t$canvas.show().addClass('invalid');\n\t\t\t\tclearCanvas();\n\t\t\t\tsigImage.setAttribute(\"src\", \"\");\n\t\t\t\t$(sigImage).hide();\n\t\t\t}, false);\n\t\t\tsubmitBtn.addEventListener(\"click\", function(e) {\n\t\t\t\t$('.signature__submit').hide();\n\t\t\t\tcanvas.toBlob(function(blob){\n\t\t\t\t\tvar newImg = document.createElement('img'),\n\t\t\t\t\turl = URL.createObjectURL(blob);\n\t\t\t\t\tsigImage.setAttribute(\"src\", url);\n// \t\t\t\t\tfile = new File([blob],'signature',{type: 'image/png' } );\n\t\t\t\t\tblobFile = blob;\n\t\t\t\t}, 'image/png');\n\t\t\t\t$(sigImage).show();\n\t\t\t\t$canvas.hide().removeClass('invalid');\n\t\t\t}, false);\n\t\t\t\n\t\t\tvar hsContext = JSON.parse($('input[name=\"hs_context\"]',$form).val());\n\t\t\tvar redirectURL = hsContext['redirectUrl'];\n\t\t\tvar thankyouMessage = hsContext['rawInlineMessage'];\n\t\t\t\n\t\t\tvar portalID = $form.data('portal-id');\n\t\t\tvar formID = $form.data('form-id');\n\t\t\t\n\t\t\t$('input[type=\"submit\"]',$form).on('click',function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tvar $form = $(this).closest('form');\n\t\t\t\t//Validate\n\t\t\t\t//Force HubSpot errors to appear:\n\t\t\t\t$('input[required]',$form).change();\n                $('ul[required] input', $form).each( function() { if( !this.checked ) { $(this).change().change(); } } );\n        \n        \n                if (!$('.hs_email input[required]',$form).val()) {\n\t\t\t\t\t//if the email field is empty populate it then empty it to trigger HubSpot error\n\t\t\t\t\t$('.hs_email input[required]',$form).val('a').change().val('').change();\n\t\t\t\t}\n\t\t\t\t$('.hs_address input,.hs_city input,.hs_zip input,.hs_state input',$form).change();\n\t\t\t\t$('.hs_delivery_street_address input,.hs_delivery_city input,.hs_delivery_postal_code input,.hs_delivery_state_region input',$form).change();\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tvar $errorMessages = $('.hs-error-msgs',$form);\n\t\t\t\t\tconsole.log($errorMessages);\n\t\t\t\t\tif ($errorMessages.length &gt; 0) {\n\t\t\t\t\t\t//Not Valid\n\t\t\t\t\t\t$errorMessages[0].scrollIntoView();\n\t\t\t\t\t\tconsole.log('not valid');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Valid\n\t\t\t\t\t\tconsole.log('valid');\n\t\t\t\t\t\tif (blobFile) {\n\t\t\t\t\t\t\tvar formData = new FormData($form[0]);\n\t\t\t\t\t\t\tformData.append('signature', blobFile, 'signature');\n// \t\t\t\t\t\t\tformData.set('signature', blobFile, 'signature');\n\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\tfor (var value of formData.values()) {\n// \t\t\t\t\t\t\t   console.log(value); \n// \t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//Submit data manually\n\t\t\t\t\t\t\tvar portalID = $form.data('portal-id');\n\t\t\t\t\t\t\tvar formID = $form.data('form-id');\n\t\t\t\t\t\t\tvar url = '<https://forms.HubSpot.com/uploads/form/v2/>' + portalID + '/' + formID;\n\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t\t\tdata: formData,\n\t\t\t\t\t\t\t\tprocessData: false,\n\t\t\t\t\t\t\t\tcontentType: false,\n\t\t\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\t\t\tmode: 'no-cors'\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (thankyouMessage) {\n\t\t\t\t\t\t\t\t$form.hide();\n\t\t\t\t\t\t\t\t$form.after(thankyouMessage);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (redirectURL) {\n\t\t\t\t\t\t\t\twindow.location.href = redirectURL;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$signItem[0].scrollIntoView();\n\t\t\t\t\t\t\t$('.signature__canvas',$signItem).addClass('invalid');\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t},300);\t\t\t\n\t\t\t});\n\t\t}```\n"
  },
  {
    "poster": {
      "poster_name": "Wojciech Gwardjak",
      "poster_handle": "wojciechgwardjak"
    },
    "time_stamp": "2023-07-14 04:54:27",
    "text": "thank you <@UV23JHEJY>! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Wojciech Gwardjak",
      "poster_handle": "wojciechgwardjak"
    },
    "time_stamp": "2023-07-14 04:55:56",
    "text": "Why to use library for modals at all? What's the advantage? This is a little provocative question :slightly_smiling_face:\nIf I think of a modal is just an overlay that you can fire away with a button click"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2023-07-14 06:18:35",
    "text": "It handles aria parameters/accessibility automatically, it's a small library btw so not a big impact on js bundle size"
  },
  {
    "poster": {
      "poster_name": "Pedro Caseiro",
      "poster_handle": "pedroc"
    },
    "time_stamp": "2023-07-14 10:11:19",
    "text": "Hey everyone! I'm working on an integration with the HubSpot Webhooks API where I wanna know whenever a Contact unsubscribes from emails. The issue I'm facing is that when creating a new subscription in my Webhooks App I can't find any property that will allow me to receive this information in my endpoint. Tried both `contact.propertyChanged` and `contact.associationChanged` and none worked. Is this just not implemented yet? Any tips?"
  },
  {
    "subtype": "bot_message",
    "text": ":sparkles:Slack Tips and Best Practices:sparkles:\n\nTo get the most out the HubSpot Developer Slack, follow these best practices:\n\nâ€¢ Will your post/question potentially help more than one person? Ask in a public channel instead of 1:1 DMs to help as many folks as possible. \nâ€¢ Thread all replies to keep topics organized and searchable\nâ€¢ Thread followup questions/comments to your original post\nâ€¢ Don't post the same question in multiple channels. If you must, link to your original question in new channels.\nMore <https://slack.com/blog/collaboration/etiquette-tips-in-slack|great tips here>. Thanks for making the HubSpot Developer Slack easier to use for everyone!",
    "username": "Slack Best Practices",
    "time_stamp": "2023-07-14 11:05:49",
    "edited": {
      "time_stamp": "2023-07-14 11:05:53"
    }
  }
]
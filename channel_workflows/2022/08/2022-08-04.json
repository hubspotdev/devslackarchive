[
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2022-08-04 08:51:41",
    "text": "Sounds like a bug in our app. Could you open a Jira so we can take a look?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-08-04 09:06:36",
    "text": "<@UHVJJUWFN> I've also gotten that error on a couple of occasions. I'll see if I can recreate it"
  },
  {
    "poster": {
      "poster_name": "Zeke Schmois",
      "poster_handle": "zschmois"
    },
    "time_stamp": "2022-08-04 09:07:38",
    "text": "yeah a link to a portal or a way to reproduce it reliably would be awesome"
  },
  {
    "text": "<@U0336QCR2FQ> was it this error?",
    "time_stamp": "2022-08-04 09:14:14"
  },
  {
    "poster": {
      "poster_name": "Brandon Tuttle",
      "poster_handle": "brandon139"
    },
    "time_stamp": "2022-08-04 09:59:38",
    "text": "<@U01QVR44MEY> I got it to work!! Thank you so much. One thing that would be the cherry on top, is being able to update the custom object by the ID property (property whose values are unique for this object type) instead of object ID.  The reason is, our product uses “product_campaign_ID”, which is the ID Property on our object as their unique identifier, and they dont let us push HubSpots unique value (object ID in this case) to them to use as identification.\n\nSo I would almost need to do find “product_campaign_ID”, if there update. If not, create."
  },
  {
    "poster": {
      "poster_name": "Brandon Tuttle",
      "poster_handle": "brandon139"
    },
    "time_stamp": "2022-08-04 10:01:52",
    "text": "<@U03REFNRMB3> - thank you for yours as well. That is going to save us the biggest portion of our used zaps, now I can use zapier for other stuff that I needed, instead of just wasting our zaps on the action your code accomplishes. Anyway I can compensate you guys for your help!?"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2022-08-04 10:12:17",
    "text": "<@U03P9FNGY13> love it! No need to compensate."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-08-04 11:33:34",
    "text": "Yeah that was it"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-08-04 11:33:37",
    "text": "Seems to have been fixed"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-08-04 12:28:55",
    "text": "Sick"
  }
]
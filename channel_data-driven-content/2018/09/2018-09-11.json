[
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2018-09-11 10:06:22",
    "text": "Thank you Matt I'm going to test that option. :slightly_smiling_face:"
  },
  {
    "text": "Hi I am building a resource page and would like help/guidance on how to implement a filter that will update the listing when something is selected.\n\n The preview site is:\n<https://preview.hs-sites.com/_hcms/preview/template/multi?is_buffered_template_layout=true&amp;portalId=>...\n\nI have got the dropdown to call the options from the hubDB but I am unsure how to make the selection update the table below.\n\nI have two versions of the table displaying on the page. One is just showing the Featured Resource and the second table is showing the other resources.\n\nThank you in advance for any assistance.",
    "time_stamp": "2018-09-11 10:36:35",
    "edited": {
      "time_stamp": "2018-09-11 10:37:11"
    }
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-11 10:48:54",
    "text": "lotta different ways to do it, if you wanna go fancy and fun, Vue JS can kinda handle this for you, youâ€™d just handle manipulating an array.\n\nOr you can go old school Jquery  and have data attributes for all of the filterable things on all of the items and use jquery to show/hide them based on the dropdown selection."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-11 10:52:32",
    "text": "You can also use the hubdb API client: <https://docs.google.com/document/u/1/d/e/2PACX-1vTuu12oFF4bQY1zVD2-WKFuM2dEDN81-fZRV1tGaCL5Z_OcjC-B6O3mHXR6chaq25BU1D2FuvKIjc49/pub>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-09-11 10:56:28",
    "text": "you could actually combine the Vue JS method and HubDB API client - for ultimate aweomeness"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-11 10:57:10",
    "text": "from your code, it looks like all you need to is add a param that grabs the query params and add it line 68"
  },
  {
    "poster": {
      "poster_name": "Woodsy",
      "poster_handle": "james.woods"
    },
    "time_stamp": "2018-09-11 10:59:00",
    "text": "I'm a relative novice using jquery/JS but wanted to try and implement a couple of filter dropdowns and learn in the process."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-11 11:01:54",
    "edited": {
      "time_stamp": "2018-09-11 11:02:35"
    },
    "text": "so look like you dropdown is showing the `?type=1` param so your line 68 would look like this:\n```\n{% set table = hubdb_table_rows(848813, \"&amp;orderBy=resource-order\"~\"&amp;type=\"~request.query_dict.type) %}\n```",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-09-11 13:49:40"
      },
      {
        "time_stamp": "2018-09-11 13:49:57"
      },
      {
        "time_stamp": "2018-09-11 19:22:59"
      },
      {
        "time_stamp": "2018-09-12 10:41:37"
      },
      {
        "time_stamp": "2018-09-13 07:58:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-11 11:03:13",
    "text": "This is the simple way to do it. If you don't want to reload the page every time a filter is selected you will have to use JS"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-11 11:03:21",
    "text": "a more streamlined way would be to do an if and check to see if it exists then assign to a var and add that var"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-11 11:04:39",
    "text": "also yes to what <@U6GNQ7JBU> said. When we originally discussed this (i think we did in the forums before) they didnt have the JS HubDB call. Now that they do, it would be better to use that but either way works"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-11 11:04:54",
    "text": "Side note: <@UCSKU31SA> see above :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Jenny Sowyrda",
      "poster_handle": "jsowyrda"
    },
    "time_stamp": "2018-09-11 11:06:31",
    "text": "Thanks <@U2H3TT8F2>!"
  },
  null,
  {
    "poster": {
      "poster_name": "Woodsy",
      "poster_handle": "james.woods"
    },
    "time_stamp": "2018-09-11 13:49:40",
    "text": "Hi, I've tried changing the code but it's showing 2 errors and I can't publish."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-09-11 13:49:57",
    "text": "what are the errors?"
  },
  {
    "poster": {
      "poster_name": "Michael Giaimo",
      "poster_handle": "mgiaimo"
    },
    "time_stamp": "2018-09-11 13:56:26",
    "text": "i swear i had this working at one point - trying to reference a value set in a custom module from another custom module inside the same email template.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-09-11 13:57:22"
      },
      {
        "time_stamp": "2018-09-11 13:58:40"
      },
      {
        "time_stamp": "2018-09-11 14:00:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-11 13:57:22",
    "text": "This is <#C22PDRW72|data-driven-content>, shouldn't this be in <#C2YH119N2|hubl> ?"
  },
  {
    "poster": {
      "poster_name": "Michael Giaimo",
      "poster_handle": "mgiaimo"
    },
    "time_stamp": "2018-09-11 13:58:40",
    "text": "so sorry"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-09-11 14:00:14",
    "text": "Np :+1:"
  },
  null,
  {
    "poster": {
      "poster_name": "Woodsy",
      "poster_handle": "james.woods"
    },
    "time_stamp": "2018-09-11 19:22:59",
    "text": "1. Error: Cannot resolve property \"[missing {{token}} value]\"\n2. Error: 1:0 BadRequestException: error when listing rows for datatable 848813 for portal 2610197: Invalid filter column 'type' for table 'Resources' (848813)"
  }
]
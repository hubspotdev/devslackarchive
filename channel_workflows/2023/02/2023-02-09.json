[
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2023-02-09 01:14:08",
    "text": "Morning all,\n\nHas anyone created a workflow that takes long URL and shortens it so it can be used in an SMS action if the output is stored in a property e.g. short_url?\n\nThanks",
    "reply_count": 20,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-02-09 07:14:39"
      },
      {
        "time_stamp": "2023-02-09 07:15:38"
      },
      {
        "time_stamp": "2023-02-09 07:17:31"
      },
      {
        "time_stamp": "2023-02-09 07:18:02"
      },
      {
        "time_stamp": "2023-02-09 07:18:11"
      },
      {
        "time_stamp": "2023-02-09 07:18:55"
      },
      {
        "time_stamp": "2023-02-09 07:19:48"
      },
      {
        "time_stamp": "2023-02-09 07:20:21"
      },
      {
        "time_stamp": "2023-02-09 07:20:38"
      },
      {
        "time_stamp": "2023-02-09 07:21:15"
      },
      {
        "time_stamp": "2023-02-09 07:21:34"
      },
      {
        "time_stamp": "2023-02-09 07:22:03"
      },
      {
        "time_stamp": "2023-02-09 07:22:19"
      },
      {
        "time_stamp": "2023-02-09 07:22:26"
      },
      {
        "time_stamp": "2023-02-09 07:22:45"
      },
      {
        "time_stamp": "2023-02-09 07:22:55"
      },
      {
        "time_stamp": "2023-02-09 07:23:19"
      },
      {
        "time_stamp": "2023-02-09 07:44:59"
      },
      {
        "time_stamp": "2023-02-09 08:28:39"
      },
      {
        "time_stamp": "2023-02-09 08:29:16"
      }
    ]
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-02-09 04:25:04",
    "text": "This function I've made will do the trick if you have the property datetime problem when setting it up:\n\ndef changeDate(fecha):\n    # Conver date ISO 8601 to datetime as this example 2021-08-17T00:00:00+02:00\n    dt = datetime.fromisoformat(fecha)\n \t# Get last 6 chars from date-&gt; +02:00\n    tz_offset = fecha[-6:]\n \t# Transform it to seconds\n    tz_offset_min = int(tz_offset[1:3]) * 60 + int(tz_offset[-2:])\n    # Adjust local time\n    dt = dt + timedelta(minutes=tz_offset_min)\n\n    # Return timestamp UNIX miliseconds\n    return int(dt.timestamp() * 1000)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:11:25",
    "text": "Yes I don't have a portal using FechaAlta, have you tested this on a normal timestamp like closeddate"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:14:35",
    "text": "<@U0194QHH0B1> double check the HS portal's default settings: <https://knowledge.HubSpot.com/account/change-your-language-and-region-settings|https://knowledge.HubSpot.com/account/change-your-language-and-region-settings>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:14:39",
    "text": "Yeah I have, I used the bitly api for it <https://dev.bitly.com/>"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:15:38",
    "text": "Are you thinking of the tracking urls short urls?"
  },
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2023-02-09 07:17:31",
    "text": "We have a URL already e.g.\n`<https://www.website.com/instant/job-type/link-price-options/ca86da9773387eeb4404dbb80c601842>`"
  },
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2023-02-09 07:18:02",
    "text": "But I was hoping to shorten it so it can go into an SMS"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:18:11",
    "text": "Is it always the same url?"
  },
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2023-02-09 07:18:55",
    "edited": {
      "time_stamp": "2023-02-09 07:19:04"
    },
    "text": "Before the UID it is always the same"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:19:48",
    "text": "so the url won't change contact to contact?"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:20:21",
    "text": "Okay, is the last part in the contact property"
  },
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2023-02-09 07:20:38",
    "text": "This will alway remain the same: `<https://www.website.com/instant/job-type/link-price-options/>`"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:21:15",
    "text": "you could just setup the last part as a parameter instead, and have the first part shortened"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:21:34",
    "text": "That was my thinking."
  },
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2023-02-09 07:22:03",
    "text": "We can have the UID in a separate field"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:22:19",
    "text": "Do you have a short domain name?"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:22:26",
    "text": "Like <http://web.co|web.co>?"
  },
  {
    "poster": {
      "poster_name": "Alex Woodbridge",
      "poster_handle": "alex.woodbridge"
    },
    "time_stamp": "2023-02-09 07:22:45",
    "text": "That could work"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:22:55",
    "text": "So what Carter and I are saying is you can shorten the first part is <http://likeweb.co/sms/|likeweb.co/sms/> and then insert your dynamic parameter for the last part"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-02-09 07:23:19",
    "text": "No need to overcomplicate it with an API or anything like that"
  },
  {
    "poster": {
      "poster_name": "Logan Armstrong",
      "poster_handle": "logan565"
    },
    "time_stamp": "2023-02-09 07:38:19",
    "text": "sure thing"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:44:59",
    "text": "so `<http://likeweb.co/sms?ca86da9773387eeb4404dbb80c601842|likeweb.co/sms?ca86da9773387eeb4404dbb80c601842>` would direct to `<https://www.website.com/instant/job-type/link-price-options/?ca86da9773387eeb4404dbb80c601842>`"
  },
  {
    "text": "you can use URL redirects and if you have a domain thatâ€™s connected to your HubSpot portal for redirection, you could create redirect as dynamic. See the screenshot.\n\nSo going to <https://iiab.co/sms/myawesome-unique-id>\n\nWould redirect to: <https://www.imageinabox.com/instant/job-type/link-price-options/myawesome-unique-id?utm_medium=sms>",
    "time_stamp": "2023-02-09 08:28:39"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 08:29:16",
    "text": "Yep exactly :arrow_up:"
  }
]
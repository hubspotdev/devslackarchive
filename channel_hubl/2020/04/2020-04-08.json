[
  {
    "poster": {
      "poster_name": "Aitor",
      "poster_handle": "aitor.tomas"
    },
    "time_stamp": "2020-04-08 04:34:37",
    "text": "have you managed to find out this? I am facing the same issue :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Sylvain Tirreau",
      "poster_handle": "sylvain"
    },
    "time_stamp": "2020-04-08 09:02:53",
    "text": "Maybe a bug: {{ content.publish_date_localized ~ \" - \" ~ content.publish_date }} is rendered by: \"1 avril 2020 - 2020-04-08 14:50:51\". Or by: \"*7 JANVIER 2020 - 2020-01-28 15:55:18\". Two dates should be the same (it's correct?), but they aren't...*",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-08 09:49:15"
      },
      {
        "time_stamp": "2020-04-08 10:11:13"
      },
      {
        "time_stamp": "2020-04-08 10:19:04"
      },
      {
        "time_stamp": "2020-04-08 10:22:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 09:24:49",
    "text": "one is localized...so it might have a different time zone"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 09:24:58",
    "text": "oh, wow"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 09:25:04",
    "text": "that is publish date and the date is way off"
  },
  {
    "poster": {
      "poster_name": "Emily Persing",
      "poster_handle": "epersing"
    },
    "time_stamp": "2020-04-08 09:49:15",
    "text": "What is the syntax of your date in Blog Settings?"
  },
  {
    "poster": {
      "poster_name": "Sylvain Tirreau",
      "poster_handle": "sylvain"
    },
    "time_stamp": "2020-04-08 10:11:13",
    "text": "F MMMM yyyy (it shows for today: \"1 avril 2020\", not \"8 avril 2020\")."
  },
  {
    "poster": {
      "poster_name": "Emily Persing",
      "poster_handle": "epersing"
    },
    "time_stamp": "2020-04-08 10:19:04",
    "text": "\"F\" is the Day of Week in month.  Sunday = 1, Monday = 2, Tuesday = 3, etc.\nI believe \"d MMMM yyyy\" will generate the output you are looking for."
  },
  {
    "poster": {
      "poster_name": "Sylvain Tirreau",
      "poster_handle": "sylvain"
    },
    "time_stamp": "2020-04-08 10:22:26",
    "edited": {
      "time_stamp": "2020-04-08 10:23:31"
    },
    "text": "I think so (It was a bad setup). But today is wednesday, and it should be 4. Anyway. I'm gonna change the date format. Thank you Emily."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2020-04-08 13:42:23",
    "text": "Submitted a fix for this. I will let you know when it is out. You will be able to use the `url` property when using simple menu fields"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 14:13:13",
    "edited": {
      "time_stamp": "2020-04-08 14:13:44"
    },
    "text": "Ok, struggling with the groupby filter. Here's my code:\n```{% for tool in rows|groupby('category') %}\n        &lt;h3&gt;{{ tool.grouper}}  &lt;/h3&gt;\n        &lt;ul&gt;\n      {% for item in tool.list  %}\n            &lt;li&gt; {{item.feature}} &lt;/li&gt;\n      {% endfor %}\n        &lt;/ul&gt;\n{% endfor %}\n    ```",
    "reply_count": 30,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-08 16:19:42"
      },
      {
        "time_stamp": "2020-04-08 16:19:52"
      },
      {
        "time_stamp": "2020-04-08 16:20:14"
      },
      {
        "time_stamp": "2020-04-08 16:20:31"
      },
      {
        "time_stamp": "2020-04-08 16:28:32"
      },
      {
        "time_stamp": "2020-04-08 16:29:57"
      },
      {
        "time_stamp": "2020-04-08 16:30:19"
      },
      {
        "time_stamp": "2020-04-08 16:30:26"
      },
      {
        "time_stamp": "2020-04-08 16:31:00"
      },
      {
        "time_stamp": "2020-04-08 16:31:38"
      },
      {
        "time_stamp": "2020-04-08 16:33:26"
      },
      {
        "time_stamp": "2020-04-08 16:51:23"
      },
      {
        "time_stamp": "2020-04-08 16:51:26"
      },
      {
        "time_stamp": "2020-04-08 16:51:33"
      },
      {
        "time_stamp": "2020-04-08 16:51:34"
      },
      {
        "time_stamp": "2020-04-08 16:51:58"
      },
      {
        "time_stamp": "2020-04-08 16:52:03"
      },
      {
        "time_stamp": "2020-04-08 16:52:11"
      },
      {
        "time_stamp": "2020-04-08 16:52:13"
      },
      {
        "time_stamp": "2020-04-08 16:52:28"
      },
      {
        "time_stamp": "2020-04-08 16:52:33"
      },
      {
        "time_stamp": "2020-04-08 16:52:37"
      },
      {
        "time_stamp": "2020-04-08 16:53:19"
      },
      {
        "time_stamp": "2020-04-08 16:53:21"
      },
      {
        "time_stamp": "2020-04-08 16:53:28"
      },
      {
        "time_stamp": "2020-04-08 16:53:51"
      },
      {
        "time_stamp": "2020-04-08 17:08:01"
      },
      {
        "time_stamp": "2020-04-08 17:08:09"
      },
      {
        "time_stamp": "2020-04-08 17:08:19"
      },
      {
        "time_stamp": "2020-04-08 17:11:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jay Proulx",
      "poster_handle": "jproulx"
    },
    "time_stamp": "2020-04-08 14:18:05",
    "text": "Is there a way to make a custom container module?  example being a carousel container that you can add carousel items to",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-08 14:26:01"
      },
      {
        "time_stamp": "2020-04-08 14:34:02"
      },
      {
        "time_stamp": "2020-04-09 07:26:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jay Proulx",
      "poster_handle": "jproulx"
    },
    "time_stamp": "2020-04-08 14:18:35",
    "text": "I see widget_container, seems to be disabled for modules, searched for group and container, but no luck."
  },
  {
    "poster": {
      "poster_name": "Jay Proulx",
      "poster_handle": "jproulx"
    },
    "time_stamp": "2020-04-08 14:20:28",
    "text": "I can hand-code the Carousel container using a module group, there must be a way to extend / create a custom module group"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-04-08 14:26:01",
    "text": "Hi there Jay, while flexible columns and dnd_area cannot be used inside of a module, there’s actually a better way to do what you’re asking.\n\nYou can actually make fields and field groups in modules repeatable. Making it so you can loop through their values to create say each carousel slide.\n<https://designers.HubSpot.com/docs/building-blocks/module-theme-fields#repeaters>"
  },
  {
    "poster": {
      "poster_name": "Jay Proulx",
      "poster_handle": "jproulx"
    },
    "time_stamp": "2020-04-08 14:34:02",
    "text": "Thanks!  I’ll check this out"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:19:42",
    "text": "Everything works like I expect, but for the `{{ tool.grouper }}` it prints `{ID=1, NAME='LABELING TOOLS', ORDER=0}`"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:19:52",
    "text": "how can I get it to print the name only? I've tried `tool.grouper.name` with no success"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2020-04-08 16:20:14",
    "text": "bumping this up in case it got missed"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:20:31",
    "text": "thanks in advance"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:28:32",
    "text": "what happens when you do `{{ tool.grouper|pprint }}`"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:29:57",
    "text": "i get `(STRING: {ID=2, NAME='QUALITY AND PERFORMANCE', ORDER=1})`"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:30:19",
    "text": "we're getting somewhere here..."
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:30:26",
    "text": "lemme try with the dot"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:31:00",
    "text": "yeah `{{ tool.grouper.name|pprint }}` get me nbothing"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:31:38",
    "text": "so how do i manipulate to pull out `NAME`?"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:33:26",
    "text": "I guess if it returns a string, I need to filter that string?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:51:23",
    "text": "No, shouldn't need to"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:51:26",
    "text": "should just be .name"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:51:33",
    "text": "maybe `.NAME`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:51:34",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:51:58",
    "text": "oh it is a string yuck"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:52:03",
    "text": "sorry, was on a call"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:52:11",
    "text": "yeah, its yucky...."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:52:13",
    "text": "You would need to do some regex replace or split the string"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:52:28",
    "text": "le sigh"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:52:33",
    "text": "fun fun"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:52:37",
    "edited": {
      "time_stamp": "2020-04-08 16:52:52"
    },
    "text": "`{% set name = tool.grouper|split(\"'\") %}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:53:19",
    "text": "`{{ name[1] }}`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:53:21",
    "text": "possibly?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 16:53:28",
    "text": "I have to run, I'll check back later"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 16:53:51",
    "text": "thanks man for your help. I think I can get it from here. I'll post an update when I get it working!"
  },
  {
    "time_stamp": "2020-04-08 17:08:01",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2020-04-08 17:08:09",
    "text": "worked like a charm. Thanks man!"
  },
  {
    "time_stamp": "2020-04-08 17:08:19",
    "text": ""
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2020-04-08 17:11:46",
    "text": "Awesome!"
  }
]
[
  null,
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 09:51:52",
    "text": "Anyone has ever found a sane workaround to use the template builder for hubdb page templates?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 09:53:40",
    "edited": {
      "time_stamp": "2019-01-09 09:54:49"
    },
    "text": "I’m thinking you mean use the page editor(not the drag n drop template editor inside the design manager)\n\nThere is no way to use the page editor for this. you can however use the API if the HubDB is not the ideal editing interface.\n\nIn some situations I’ve personally used the blog instead of HubDB when the client needed a better visual editing experience. Understand though going this route comes with some pros and cons, some cons being that it’s more tedious to edit pages in bulk, and that you’re limited to looping through the last 200 when displaying in a non blog page, unless you resort to some hacky work arounds"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:14:45",
    "text": "Hi Jon! No, I mean the drag n drop inside the DM",
    "reply_count": 20,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-01-09 10:17:04"
      },
      {
        "time_stamp": "2019-01-09 10:19:02"
      },
      {
        "time_stamp": "2019-01-09 10:20:54"
      },
      {
        "time_stamp": "2019-01-09 10:21:22"
      },
      {
        "time_stamp": "2019-01-09 10:30:45"
      },
      {
        "time_stamp": "2019-01-09 10:31:27"
      },
      {
        "time_stamp": "2019-01-09 10:36:08"
      },
      {
        "time_stamp": "2019-01-09 10:38:10"
      },
      {
        "time_stamp": "2019-01-09 10:44:32"
      },
      {
        "time_stamp": "2019-01-09 10:44:59"
      },
      {
        "time_stamp": "2019-01-09 10:45:07"
      },
      {
        "time_stamp": "2019-01-09 10:45:08"
      },
      {
        "time_stamp": "2019-01-09 10:45:13"
      },
      {
        "time_stamp": "2019-01-09 10:45:38"
      },
      {
        "time_stamp": "2019-01-09 10:46:23"
      },
      {
        "time_stamp": "2019-01-09 10:46:25"
      },
      {
        "time_stamp": "2019-01-09 10:47:17"
      },
      {
        "time_stamp": "2019-01-09 10:47:20"
      },
      {
        "time_stamp": "2019-01-09 10:49:31"
      },
      {
        "time_stamp": "2019-01-09 10:51:52"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:16:18",
    "text": "then, also the page edit is an issue, as you pointed out"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:17:04",
    "text": "Then yes you can use the template editor, because all dynamic pages are are normal pages with the dynamic option enabled in the page.\n\nSo you just edit the template the page is using."
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:19:02",
    "text": "but, how you manage the double view? (Row and list)\nThink to the blog template: you have two buttons, one for the listing and another one for single page, and you edit the two parts inside the same template"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:20:54",
    "text": "I usually use just coded templates for hubdb, so I don't know if there are ways of giving a good experience with the DnD editor to our clients"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:21:22",
    "text": "<https://designers.HubSpot.com/docs/tutorials/how-to-build-dynamic-pages-with-hubdb>\n\n```{% if dynamic_page_hubdb_row %}{%else%} page is listing page{%endif%}```"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-09 10:30:45",
    "text": "I typically make a custom module that just has the entire page (minus headers and footers) in it"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-01-09 10:31:27",
    "text": "Then for the index you can have fields for anything they need to have control over, and the dynamic pages are hubdb-driven so they probably aren't controlling much there anyway"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:36:08",
    "text": "Yes, this is the way we usually do"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:38:10",
    "text": "BTW, the new layout section/row hubl is awesome and could help to manage everything like the template builder (but inside the page)"
  },
  {
    "text": "<@U7SL518D6> this thing",
    "time_stamp": "2019-01-09 10:44:32"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:44:59",
    "text": "that’s only for blog templates"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:45:07",
    "text": "exactly"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:45:08",
    "text": "and really it does the same thing"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:45:13",
    "text": "as the hubl i showed you"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:45:38",
    "text": "but you need to export everything to the template context"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:46:23",
    "text": "that or just use a custom module"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:46:25",
    "text": "and you can't see previews for detail pages in the page live editor (because you only see the listing)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:47:17",
    "text": "you can preview the end result page though, which youd have to do with a dynamic page anyways because you need to link the db to the page anyhow"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:47:20",
    "text": "yes, sure... i was just wondering if there are any other methods to enhance the UX"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 10:49:31",
    "text": "they could build the preview to be able to pick a HubDB then pick whether its a detail or list view but eh, that’s extra work just to do something you’re going to want to do on the real page anyways so I don’t think they’ll see it as super valuable"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-01-09 10:51:52",
    "text": "of course, this is why I asked. Because there are more chances that one of us found a good UX than HubSpot to put effort on this thing"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-01-09 11:39:13",
    "edited": {
      "time_stamp": "2019-01-09 11:42:59"
    },
    "text": ":bam:  <@U22PJPGK0> <@UD53A9UUR>"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-01-09 11:41:52",
    "text": ":boom:"
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-01-09 11:42:46",
    "text": ":bam:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 12:05:35",
    "text": "<@U6GNQ7JBU> Anyway the javascript HubDB client api for rows can be updated to return also the sort position of choices in select field columns?\n\n<https://spin.d.pr/u5jQXx>\n\n<https://spin.d.pr/TaKFlK>",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-01-09 12:07:43"
      },
      {
        "time_stamp": "2019-01-09 12:09:33"
      },
      {
        "time_stamp": "2019-01-09 12:12:29"
      },
      {
        "time_stamp": "2019-01-09 12:13:11"
      },
      {
        "time_stamp": "2019-01-09 12:47:48"
      },
      {
        "time_stamp": "2019-01-09 17:48:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 12:06:44",
    "edited": {
      "time_stamp": "2019-01-09 12:11:41"
    },
    "text": "I think it might be possible using the get table info api, but then I’m making an extra db call on a page with 3 already just to pull off what I need to"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-09 12:07:43",
    "text": ":eyes:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 12:09:33",
    "text": "every solution to my current problem that I can think of requires making another HubDB call unless the sort is also returned"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-09 12:12:29",
    "text": "Yea should be possible one moment"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-09 12:13:11",
    "text": ":coley: + Cape = hero"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-01-09 12:47:48",
    "text": "There should be an `order` value now"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-09 17:41:09",
    "text": "Yes!!!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-09 17:41:18",
    "text": ":bam: "
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-09 17:48:34",
    "text": ":bam: "
  }
]
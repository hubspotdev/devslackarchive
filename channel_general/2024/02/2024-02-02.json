[
  {
    "poster": {
      "poster_name": "John Kelleher",
      "poster_handle": "john785"
    },
    "time_stamp": "2024-02-02 02:36:46",
    "text": "*Private Apps: unexpected 403 errors*\nYesterday, we had two different private apps start returning 403 errors. There was no change to the code or scopes for either of them. We have not rotated the keys.\nOut of the blue, they just stopped accepting the calls sent to them. All our other Private Apps seem fine.\nThe weird part is that the two apps that stopped working had exactly the same scopes: `crm.objects.custom.write`  `crm.objects.custom.read`\n We got it working again by creating new apps with the same scopes and sending the calls there instead.\nI'm just wondering if anyone else experienced the same thing yesterday?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-04 08:57:42"
      },
      {
        "time_stamp": "2024-02-09 06:17:50"
      },
      {
        "time_stamp": "2024-02-23 00:28:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Khushbu patel",
      "poster_handle": "khushbu.patel"
    },
    "time_stamp": "2024-02-02 02:54:06",
    "text": "Hi All. How Can we track call from google ads in HubSpot  ? We would like to start tracking calls from Google Ads."
  },
  {
    "poster": {
      "poster_name": "Afia Ahmed",
      "poster_handle": "aahmed"
    },
    "time_stamp": "2024-02-02 03:24:12",
    "text": "Hi, we have decided to upsert users using our own unique identifier to update contact information. This is because we allow our contacts to change their email. However if a contact comes into HubSpot as a lead and then they create an account with us, when we try to send an api call to upsert, we get an error saying the unique identifier is a duplicate key (even when there is no record with that key in HubSpot) because there already exists a Contact with that email in HubSpot. Is there any way around this? We essentially want to merge the Lead contact with the contact that is coming from our database without using the email as a key. Thank you!"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2024-02-02 09:56:26",
    "text": ":fridayfriday: :friday: :fridayfriday: :friday: :fridayfriday: :friday:\n\n:developers-developers-developers:*Happy Friday, y'all!* :developers-developers-developers: \n\n:woohoo: Just for fun - I just added about 300 brand new custom emojis to our lovely Dev Slack - ready to share just about any sentiment you can imagine! Scroll past the usuals in the Emoji section of the message formatting, and see what we've got! :woohoo:\n\n:7161-joe-cool: :HubSpot: :pizza_love: :woman_in_tuxedo: :github-octogirl: :lolcry: :cowboy-eyes: :parrot-fieri:",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-02-23 19:40:41"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-02-02 09:57:20",
    "text": ":developers-developers-developers:"
  },
  {
    "subtype": "bot_message",
    "text": ":sparkles:Slack Tips and Best Practices:sparkles:\n\nTo get the most out the HubSpot Developer Slack, follow these best practices:\n\n• Will your post/question potentially help more than one person? Ask in a public channel instead of 1:1 DMs to help as many folks as possible. \n• Thread all replies to keep topics organized and searchable\n• Thread followup questions/comments to your original post\n• Don't post the same question in multiple channels. If you must, link to your original question in new channels.\nMore <https://slack.com/blog/collaboration/etiquette-tips-in-slack|great tips here>. Thanks for making the HubSpot Developer Slack easier to use for everyone!",
    "username": "Slack Best Practices",
    "time_stamp": "2024-02-02 12:05:03",
    "edited": {
      "time_stamp": "2024-02-02 12:05:07"
    }
  },
  {
    "text": "Not sure the best place for this so I'm hoping general is ok.\n\nOur company is putting together a contest giveaway and we have hired a freelance game developer to build a word scramble game for us and it is hosted on a Digital Ocean droplet using the LAMP stack (we do not have the enterprise level subscription to HS and are unable to use serverless functions).  I have created a HubSpot form that is embedded on the site where the game is hosted, and it gets displayed once a puzzle is completed.  The form populates a list and all is well.\n\nThe issue I am facing is that of security and doing some due diligence to ensure people can't cheat or at least not very easily (if people want to cheat they might always find a way).  The freelancer is telling me that in order to validate a game entry, we must be able to validate a CAPTCHA and a token that is generated when the game is completed.  The token is basically a list of moves that can be used to validate if a player completed the game in a valid manner.  I'm looking for advice on the best way to proceed with preventing cheating as best we can while not adding more complexity than is necessary.  I'm not certain if we can do something like a hidden form field in the HS form and somehow scrub through the list of submissions for valid entries, which might take some doing depending on how many entries we end up with.  Would something like a non-HubSpot form be useful here?\n\nI've attached an image of how I imagine the \"flow\" might work but I am being told that it cannot be made secure with this method.  My thinking is that if there is already a backend on the Digital Ocean site, why not have another endpoint there that acts as the middle-man validating service, and once it gives the green light, display the form and allow submission to HS?  Could this work?  Any input or advice is most welcome.",
    "time_stamp": "2024-02-02 15:33:34",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-02-02 18:09:08"
      },
      {
        "time_stamp": "2024-02-05 15:42:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2024-02-02 18:09:08",
    "edited": {
      "time_stamp": "2024-02-02 18:10:18"
    },
    "text": "Hmm, that’s a tough one — you’re pretty much out of luck on validating and securing the form input, so you’re going to have to do some sort of post-submission processing to validate entries.\n\nI think you’re on the right track using hidden fields. Perhaps you could have the server generate an obfuscated version _(maybe hashed and XORed with some secret token? timestamp could be included in some way to prevent duplicate use of tokens?)_ of the completion token, then pass that into the hidden form field. Then, within HubSpot, you could use a custom code action within a contact workflow to validate that hash and set a “Valid Contest Entrant” contact property based on the outcome.\n\nIt’s not 100% bulletproof and would require you to have Ops Hub, but I imagine it would clear out opportunistic and low-skill cheaters.\n\nAlternatively, you could skip using a HubSpot form at all. Just make your own form and create contacts via the Contacts API — that’d let you do all of the server-side checking and validation you want, without the need for any workflows."
  },
  {
    "poster": {
      "poster_name": "Kunal Rwt",
      "poster_handle": "jagmohanrwt1210"
    },
    "time_stamp": "2024-02-02 21:01:39",
    "text": "hi i need help with some hubDB project  can some one give me some combination filter examples on git links?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-02-03 00:33:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jass Negi",
      "poster_handle": "jeetunegi04"
    },
    "time_stamp": "2024-02-03 00:33:15",
    "text": "yes"
  }
]
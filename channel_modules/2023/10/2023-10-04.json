[
  {
    "poster": {
      "poster_name": "Matthew Isbrecht",
      "poster_handle": "matt520"
    },
    "time_stamp": "2023-10-04 08:40:57",
    "text": "Hey everyone, hopefully this is something small I'm overlooking. I have a blog template that contains a sidebar module, the module is set to global, so I cloned the module to a child theme, edited it to be a local module. I then updated the template to include the local version. But when I try to use it I get this message \"The creator of this template prevented editing this module in the content editors.\"",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-10-04 08:43:53"
      },
      {
        "time_stamp": "2023-10-04 10:53:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Isbrecht",
      "poster_handle": "matt520"
    },
    "time_stamp": "2023-10-04 08:43:53",
    "text": "The original module was editable, but this one is not. I added 'overridable=true' to the module import line on the template, and the module and template are available for new content. Not seeing any other spots that would trigger that message. Any help would be greatly appreciated!"
  },
  {
    "poster": {
      "poster_name": "Marcelo Candil",
      "poster_handle": "marcelo.candil"
    },
    "time_stamp": "2023-10-04 10:01:40",
    "text": "Thanks Taylor, I tried it but it doesn’t seem to work with `hs project upload ProjectFolder --clean` which is the recommended command to upload a React project :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Taylor O'Reilly",
      "poster_handle": "taylor699"
    },
    "time_stamp": "2023-10-04 10:06:27",
    "text": "I'm still diving into the react deployment features myself but I think the command should be `hs upload project ProjectFolder --clean`\n\n`hs -&gt; command -&gt; src -&gt; dest -&gt; flags`"
  },
  {
    "poster": {
      "poster_name": "Taylor O'Reilly",
      "poster_handle": "taylor699"
    },
    "time_stamp": "2023-10-04 10:07:36",
    "edited": {
      "time_stamp": "2023-10-04 10:07:45"
    },
    "text": "I haven't tested this myself but this is what it would be if it was a \"normal\" HubSpot theme"
  },
  {
    "poster": {
      "poster_name": "Matthew Isbrecht",
      "poster_handle": "matt520"
    },
    "time_stamp": "2023-10-04 10:53:28",
    "text": "For anyone interested, I found the toggle responsible in Design Manager, in the individual field settings. Not sure why they were toggled on, the original module didn't have them applied. Hope this helps someone."
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2023-10-04 11:25:10",
    "text": "Ah, you’re right — that looks to be the case. Unfortunate that achieving that effect requires poor accessibility practices, because it’s a nice experience that I’d otherwise like to employ. Thanks for the investigation! :)"
  },
  {
    "poster": {
      "poster_name": "Taylor O'Reilly",
      "poster_handle": "taylor699"
    },
    "time_stamp": "2023-10-04 12:07:24",
    "text": "I did come across this the other day <https://community.HubSpot.com/t5/CMS-Development/Dynamically-populate-choices-in-custom-module-choice-field/m-p/252054>. Maybe the label could be updated dynamically as well? Haven't tried it myself"
  },
  {
    "poster": {
      "poster_name": "Libby Noffsinger",
      "poster_handle": "libbyn"
    },
    "time_stamp": "2023-10-04 12:50:11",
    "text": "Can someone help me figure out what's wrong...\n\nI'm trying to create a custom image slider module in HubSpot. Here's my code for the module:\n```&lt;div class=\"imgcarousel-wrapper\" style=\"background: {{ module.background_color.color }}\"&gt;\n    &lt;div class=\"heading\"&gt;\n        &lt;h2&gt;{% inline_text field=\"carousel_heading\" value=\"{{ module.carousel_heading }}\" %}&lt;/h2&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"image-container\"&gt;\n    {% for item in module.image_field %}\n        {% if item.src %}\n            {% set sizeAttrs = 'width=\"{{ item.width }}\" height=\"{{ item.height }}\"' %}\n            {% if item.size_type == 'auto' %}\n                {% set sizeAttrs = 'width=\"{{ item.width }}\" height=\"{{ item.height }}\" style=\"max-width: 100%; height: auto;\"' %}\n            {% elif item.size_type == 'auto_custom_max' %}\n                {% set sizeAttrs = 'width=\"{{ item.max_width }}\" height=\"{{ item.max_height }}\" style=\"max-width: 100%; height: auto;\"' %}\n            {% endif %}\n            {% set loadingAttr = item.loading != 'disabled' ? 'loading=\"{{ item.loading }}\"' : '' %}\n            &lt;div class=\"mySlides fade\"&gt;\n                &lt;img src=\"{{ item.src }}\" alt=\"{{ item.alt }}\" {{ loadingAttr }} {{ sizeAttrs }}&gt;\n            &lt;/div&gt;\n        {% endif %}\n    {% endfor %}\n&lt;/div&gt;  \n&lt;/div&gt;```\nI want users from the front end to be able to add as many images as they would like. depending on how many images are added, the slider will automatically pick up on how many times the user can switch the image.\n\nHow can I accomplish this? Does anyone else have a live example I could replicate?"
  }
]
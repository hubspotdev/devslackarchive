[
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 02:09:00",
    "text": "Need some advice on email template with HUBL for Ecommerce:\n\nIf I want to pull line items for a deal, This is my snippet:\n\n{% email_each list=“deal.line_items” item=“line_item” %}\n\nHow might I add:\n\n1) Sorting to the results (i.e. sort by value descending)\n2) Different styling for First item, compared to other items"
  },
  {
    "poster": {
      "poster_name": "Toni Bergholm",
      "poster_handle": "toni"
    },
    "time_stamp": "2019-04-02 02:14:15",
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-filters#sort>",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-02 02:21:51"
      },
      {
        "time_stamp": "2019-04-02 02:23:19"
      },
      {
        "time_stamp": "2019-04-02 02:25:09"
      },
      {
        "time_stamp": "2021-10-12 19:45:08"
      },
      {
        "time_stamp": "2021-10-12 20:48:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Toni Bergholm",
      "poster_handle": "toni"
    },
    "time_stamp": "2019-04-02 02:14:38",
    "text": "<https://www.w3schools.com/csSref/sel_first-of-type.asp>"
  },
  {
    "poster": {
      "poster_name": "Alexander Hjelmqwist",
      "poster_handle": "alexander.hjelmqwist"
    },
    "time_stamp": "2019-04-02 02:15:53",
    "text": "Nope, just in modules. The post-listing in modules probably differs from the email-listning that's stricly RSS."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 02:19:48",
    "text": "Thanks so much <@UH8TS9BC5>"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 02:21:51",
    "text": "Does this look right?\n\n{% email_each list=“deal.line_items” item=“line_item” limit=1 %}\n   {% for item in email_each|sort(True, False, line_item.amount) %}\n      &lt;img src=“{{line_item.ip__ecomm_bridge__product_image}}” width=“348px” height=“348px”&gt;\n  {% endfor %}\n  {% endemail_each %}"
  },
  {
    "poster": {
      "poster_name": "Toni Bergholm",
      "poster_handle": "toni"
    },
    "time_stamp": "2019-04-02 02:23:19",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 02:25:09",
    "text": "sending you :beers:"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-04-02 04:03:14",
    "text": "Hi!\n\"Simple question\", Why I can do:\n\n{% if module.copertina.src %}\n        &lt;img src=\"{{ module.copertina.src }}\" alt=\"\" style=\"width: 100%; max-width: {{ module.copertina.width/2 }};\" /&gt;\n{% endif %}\n\nBut I get an error from the editor with this:\n\n{% for item in module.immagine %}\n       {% if item.src %}\n            &lt;div class=\"col-sm-4 d-flex justify-content-center text-center\"&gt;\n              &lt;img src=\"{{ item.src }}\" class=\"align-self-center\" alt=\"\" style=\"width: 100%; max-width: {{ item.width/2 }};\" /&gt;\n            &lt;/div&gt;\n    {% endif %}\n{% endfor %}\n\nThe error tells that\n\nError:Cannot resolve property \"item.width/2\"",
    "reply_count": 11,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-02 04:05:21"
      },
      {
        "time_stamp": "2019-04-02 04:06:09"
      },
      {
        "time_stamp": "2019-04-02 04:07:13"
      },
      {
        "time_stamp": "2019-04-02 04:07:46"
      },
      {
        "time_stamp": "2019-04-02 04:12:00"
      },
      {
        "time_stamp": "2019-04-02 04:12:08"
      },
      {
        "time_stamp": "2019-04-02 04:12:20"
      },
      {
        "time_stamp": "2019-04-02 04:12:43"
      },
      {
        "time_stamp": "2019-04-02 04:13:58"
      },
      {
        "time_stamp": "2019-04-02 04:30:52"
      },
      {
        "time_stamp": "2019-04-02 04:31:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Robert Pupaza",
      "poster_handle": "robert.pupaza"
    },
    "time_stamp": "2019-04-02 04:05:21",
    "text": "if you are trying to divide the width try this: ` {{ item.width|divide(2) }} `"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-04-02 04:06:09",
    "text": "<@U7VHQMEV7>\n1.\nError:Invalid input for 'divide': input with value '{{item.width}}' must be a number\n\nSeems that item.width isn't a number.."
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-04-02 04:07:13",
    "text": "I will try with:\n{{ item.width|float|divide(2) }}"
  },
  {
    "poster": {
      "poster_name": "Robert Pupaza",
      "poster_handle": "robert.pupaza"
    },
    "time_stamp": "2019-04-02 04:07:46",
    "text": "if you display it separately what is showing ?"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-04-02 04:12:00",
    "text": "only item.width return the width of the image, without text"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-04-02 04:12:08",
    "text": "but With |float it works"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-04-02 04:12:20",
    "text": "&lt;img src=\"{{ item.src }}\" class=\"align-self-center\" alt=\"\" style=\"width: 100%; max-width: {{ item.width|float|divide(2) }}px;\" /&gt;"
  },
  {
    "poster": {
      "poster_name": "Robert Pupaza",
      "poster_handle": "robert.pupaza"
    },
    "time_stamp": "2019-04-02 04:12:43",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Claudio Cappelletti",
      "poster_handle": "cca"
    },
    "time_stamp": "2019-04-02 04:13:58",
    "text": "It is considered a \"bug\" the fact that item.width return a string instead of a number? There is a way to report this to HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-02 04:30:52",
    "text": "you can parse as number with `|number`"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-04-02 04:31:28",
    "edited": {
      "time_stamp": "2019-04-02 04:32:12"
    },
    "text": "unless it includes `px` :thinking_face: in that case you will need to remove that first `|replace(\"px\",\"\")|number`"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-02 15:47:58",
    "text": "so I'm using the following IF and it doesnt seem to populate even though the logic is correct:\n\nURL: `<http://example.com/case-studies/name|example.com/case-studies/name>`\n```\n{% if request.path is containing \"/case-studies/\" %}\ncontent\n{% endif %}\n```"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-04-02 15:53:16",
    "text": "is string_containing"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-04-02 15:53:22",
    "text": "I believe or something similar"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 15:53:46",
    "text": "let us know when you have figured it out :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-04-02 15:54:09",
    "text": "<https://designers.HubSpot.com/docs/hubl/operators-and-expression-tests>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-02 15:55:34",
    "text": "string_containing seemed to do it. was odd as when i used the normal `is containing` it was working, then again might of just been cached from before I added the IF"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-02 15:55:40",
    "text": "Thanks <@UDARG2NKZ>"
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2019-04-02 15:55:56",
    "text": ":thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 17:37:33",
    "text": "Any of you able to spot the error here"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 17:37:36",
    "text": "{% email_each list=“deal.line_items” item=“line_item” limit=1%}\n   {% for item in email_each|sort(True, False, line_item.amount) %}\n      &lt;img src=“{{line_item.ip__ecomm_bridge__product_image}}” width=“348px” height=“348px”&gt;\n  {% endfor %}\n  {% endemail_each %}"
  },
  {
    "poster": {
      "poster_name": "Bryan Walden",
      "poster_handle": "imbwaldo"
    },
    "time_stamp": "2019-04-02 18:12:36",
    "text": "would dropping the \"px\" from width and height work?"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 18:15:03",
    "text": "Thanks <@UHH1BTL9E> the issue (from isolating) seems to be coming from these lines:\n\n{% email_each list=“deal.line_items” item=“line_item” limit=1 %}\n  {% for item in email_each|sort(True, False, line_item.amount) %}"
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-04-02 18:24:00",
    "text": "It looks like the inner `{% for %}` loop isn't necessary? The `{% email_each %` tag is an alternative to the `for` loop, so _I think_ you should be able to just execute the following: ```{% email_each list=“deal.line_items” item=“line_item” limit=1%}\n     &lt;img src=“{{line_item.ip__ecomm_bridge__product_image}}” width=“348px” height=“348px”&gt;\n {% endemail_each %}```"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 18:29:49",
    "text": "okay let me test that"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 18:30:22",
    "text": "though this doesn’t help me achieve the line_item sort"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 18:31:02",
    "text": "So the ‘story’ I am trying to achieve is this: In an Ecommerce automated email, send the contact an email with the most valuable item from their cart",
    "reply_count": 11,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-02 18:37:10"
      },
      {
        "time_stamp": "2019-04-02 18:38:55"
      },
      {
        "time_stamp": "2019-04-02 18:39:07"
      },
      {
        "time_stamp": "2019-04-02 19:02:21"
      },
      {
        "time_stamp": "2019-04-02 19:05:40"
      },
      {
        "time_stamp": "2019-04-03 00:48:56"
      },
      {
        "time_stamp": "2019-04-03 01:12:02"
      },
      {
        "time_stamp": "2019-04-03 01:58:56"
      },
      {
        "time_stamp": "2019-04-03 03:40:16"
      },
      {
        "time_stamp": "2019-04-03 04:40:15"
      },
      {
        "time_stamp": "2019-04-03 04:50:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-04-02 18:37:10",
    "text": "Hmm, that's a tricky one. Have you confirmed that removing the `for` loop clears the error? Thinking we'll first need to know if that is necessary with the `email_each` tag."
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 18:38:55",
    "text": "If I remove the for loop it also doesn’t work"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 18:39:07",
    "text": "seems that limit=1 is also a problem"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-04-02 18:59:36",
    "text": "I’d love to solve this issue though but it’s beyond my ability at this point :cry:"
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-04-02 19:02:21",
    "text": "Does removing the limit resolve the error?"
  },
  {
    "poster": {
      "poster_name": "James Cutler",
      "poster_handle": "jcutler"
    },
    "time_stamp": "2019-04-02 19:05:40",
    "text": "If it does, you could go back to your inner `for` loop, where you sort them by price, print the image of the first line item, and do nothing if `loop.index != 0`"
  },
  {
    "poster": {
      "poster_name": "Rehana khatoon",
      "poster_handle": "rehanakhatoon"
    },
    "time_stamp": "2019-04-03 00:48:56",
    "text": "how we can use those deal line items details as token in my email  for new native shopify integration. please let me know."
  }
]
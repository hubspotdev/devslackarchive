[
  {
    "poster": {
      "poster_name": "Rudolf Zundel",
      "poster_handle": "rudolf.zundel"
    },
    "time_stamp": "2021-07-22 01:16:42",
    "text": "Hey Robert! I forgot to mention that we also have to make a lot of searches in the background, but the CSV import seems to have did the trick :thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Rudolf Zundel",
      "poster_handle": "rudolf.zundel"
    },
    "time_stamp": "2021-07-22 01:19:22",
    "text": "Also I’ll leave this here if someone finds this thread in the future: you can update by email by specifying an email column like this:\n```{\n    \"ignored\": false,\n    \"columnName\": \"email\",\n    \"idColumnType\": \"HubSpot_ALTERNATE_ID\",\n    \"propertyName\": \"email\",\n    \"foreignKeyType\": null,\n    \"columnObjectTypeId\":\"0-1\",\n    \"associationIdentifierColumn\": false\n}```"
  },
  {
    "poster": {
      "poster_name": "Tom Sygut",
      "poster_handle": "t.sygut"
    },
    "time_stamp": "2021-07-22 03:38:26",
    "text": "Hello everyone - it is possible to make a connector that would send data to both HubSpot db and another database, e.g. mongodb? In addition, when someone creates a user in CRM, he should also be created in the second database. If someone has ever created such an application, please contact me.",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-07-23 17:21:16"
      },
      {
        "time_stamp": "2021-07-23 17:21:30"
      },
      {
        "time_stamp": "2021-07-23 17:22:00"
      },
      {
        "time_stamp": "2023-01-13 08:11:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Lucas Dantas Gama Ayres",
      "poster_handle": "lucas187"
    },
    "time_stamp": "2021-07-22 06:21:01",
    "text": "I even tried to do it that way. But this webhook can’t select a specific deal, it returns any deal."
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2021-07-22 07:18:04",
    "text": "Are you working on an app for just your organization / single account or for the marketplace?"
  },
  {
    "poster": {
      "poster_name": "Justin Song",
      "poster_handle": "justin816"
    },
    "time_stamp": "2021-07-22 07:55:05",
    "text": "Thank you <@UMCBG6QK0> for the info share- I appreciate it! Yup, this is definitely a quirky use case as we would usually just use/place a HS form on a page such that a submission leads to a direct update on a contact's record after a user fills it out. I'll review the CRM API link-\n\nHave a great rest of day :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Lucas Dantas Gama Ayres",
      "poster_handle": "lucas187"
    },
    "time_stamp": "2021-07-22 08:14:51",
    "text": "Just for my organization"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2021-07-22 08:36:07",
    "text": "Easiest thing to do is use a Deal based Workflow that fires on certain criteria. Depending on your account tier, you either already have access to the 'Webhook' action in workflows, or if not, you can upgrade to Operations Hub Pro (which also gives you node.js custom coded actions in workflows).\n• <https://knowledge.HubSpot.com/workflows/how-do-i-use-webhooks-with-HubSpot-workflows>\n• <https://developers.HubSpot.com/blog/implementing-webhooks-in-HubSpot>"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2021-07-22 08:37:20",
    "text": "Otherwise your options are: webhooks in apps like we talked about, and just filter the ones that don't match your criteria, or use the Deal Search endpoint to poll occassionally for deals that match your search criteria"
  },
  {
    "poster": {
      "poster_name": "Lucas Dantas Gama Ayres",
      "poster_handle": "lucas187"
    },
    "time_stamp": "2021-07-22 09:40:30",
    "text": "got it, thanks for the help. I’ll test these possibilities to see what makes the most sense."
  }
]
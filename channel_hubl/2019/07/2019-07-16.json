[
  {
    "poster": {
      "poster_name": "Robert Pupaza",
      "poster_handle": "robert.pupaza"
    },
    "time_stamp": "2019-07-16 02:04:54",
    "text": "hi <@UG52C29EE>, I understand that blog_ids can pull more than one id but when I want to pull only one ID is not working."
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-07-16 02:39:02",
    "edited": {
      "time_stamp": "2019-07-16 02:39:35"
    },
    "text": "<@U7VHQMEV7>, just checked a working example on my side and this is how I handled:\n`{% related_blog_posts blog_ids=\"{{group.id}}\" ... %}` (this will only work inside the blog env.)\nAlso, I remember have some issues with the robots, so take in mind that if all your posts are noindex you will probably have an empty list of related posts"
  },
  {
    "poster": {
      "poster_name": "Robert Pupaza",
      "poster_handle": "robert.pupaza"
    },
    "time_stamp": "2019-07-16 02:40:58",
    "text": "<@U7ADCU3BM> I have literally the same syntax except the fact that I have the ID number instead of a variable. It might be the noindex thing then, thanks a lot. Is there a way to fix this?"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-07-16 02:45:55",
    "edited": {
      "time_stamp": "2019-07-16 02:53:27"
    },
    "text": "I had several issues with this tag. I believe related also with the format of the var you are parsing in blog_ids. I am not sure how is handled inside HS but give a try to the `group.id` or `content.parent_blog.id`. As far I remember, parsing the single blog ID as string it doesn't work on its own (thats why I parsed as `blog_ids=\"{{ var }}\"` instead `blog_ids=var`).\nThe group.id or the previous mentioned are default vars from HS so you won't need to declare.\n\nRegarding the noindex I belive there is no workaround... (but could be that I am confusing another issue I had with the search and cached pages with the noindex :thinking_face:). I am almost on holidays already and my brain doesn't want to work that much :joy:"
  },
  {
    "poster": {
      "poster_name": "Robert Pupaza",
      "poster_handle": "robert.pupaza"
    },
    "time_stamp": "2019-07-16 02:47:53",
    "text": "<@U7ADCU3BM> Thanks for you help :slightly_smiling_face: enjoy your holidays and I will sort that out somehow :smile: have fun for me as well :joy:"
  },
  {
    "poster": {
      "poster_name": "Gonzalo Torreras",
      "poster_handle": "gonzalo"
    },
    "time_stamp": "2019-07-16 02:51:55",
    "text": "Thanks! will do :slightly_smiling_face:\ncome back with your tests (specially if that works), so HS can double check whats going on there"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-16 13:14:02",
    "edited": {
      "time_stamp": "2019-07-16 13:14:24"
    },
    "text": "it uses slick slider js it’s loaded from a custom HS library. I haven’t done it personally but others have read through their library, found the instance name they used and use that to kill the slider, then re-initiate it using the settings they want from slick slider.(lazyloading is a feature)\n\nI usually just roll my own slick slider based custom module myself. I worry that one day HubSpot could update their slick library and it could break the method those people use."
  }
]
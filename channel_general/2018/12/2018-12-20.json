[
  {
    "poster": {
      "poster_name": "Kairit",
      "poster_handle": "kairit.tahvola"
    },
    "time_stamp": "2018-12-20 03:38:43",
    "edited": {
      "time_stamp": "2018-12-20 03:39:09"
    },
    "text": "Hey, is there what way to modify the *email footer* area? We have multiple locations for our offices and the present footer only shows one company. :face_with_monocle:",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-20 07:37:55"
      },
      {
        "time_stamp": "2018-12-22 03:20:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jason Wang",
      "poster_handle": "alhappyma"
    },
    "time_stamp": "2018-12-20 03:45:25",
    "text": "Aren't able to customize the email templates <@UB7E8TXFY>?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-20 03:47:21"
      },
      {
        "time_stamp": "2018-12-20 03:49:02"
      },
      {
        "time_stamp": "2018-12-22 03:20:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kairit",
      "poster_handle": "kairit.tahvola"
    },
    "time_stamp": "2018-12-20 03:47:21",
    "text": "Hmm, will go and look at the template itself. Might be I have missed something."
  },
  {
    "poster": {
      "poster_name": "Jason Wang",
      "poster_handle": "alhappyma"
    },
    "time_stamp": "2018-12-20 03:49:02",
    "text": "You can copy hubl code for duplicate locations."
  },
  null,
  {
    "poster": {
      "poster_name": "Victoria Gumaer",
      "poster_handle": "vgumaer"
    },
    "time_stamp": "2018-12-20 06:24:58",
    "text": ":thinking_face: Process question for the group - is checking the HubSpot editors for code bleeds something you're doing as part of your development process or before delivery to the client?  Yes?  No?  Matt Coley for president? Let's meet at Emmets? :beer:",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-20 07:09:39"
      },
      {
        "time_stamp": "2018-12-20 07:26:55"
      },
      {
        "time_stamp": "2018-12-20 07:33:27"
      },
      {
        "time_stamp": "2018-12-20 07:34:48"
      },
      {
        "time_stamp": "2018-12-20 07:35:48"
      },
      {
        "time_stamp": "2018-12-20 07:39:26"
      },
      {
        "time_stamp": "2018-12-20 07:43:04"
      },
      {
        "time_stamp": "2018-12-20 08:16:44"
      }
    ]
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Tim Joyce",
      "poster_handle": "tim"
    },
    "time_stamp": "2018-12-20 06:57:12",
    "text": "what's code bleed?"
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 07:09:39",
    "text": "define what you mean by code bleeds?"
  },
  {
    "poster": {
      "poster_name": "Victoria Gumaer",
      "poster_handle": "vgumaer"
    },
    "time_stamp": "2018-12-20 07:26:55",
    "text": "<@U7SL518D6> I'm thinking of instances where css or js included in a template inadvertently impacts the editor in some way, like turning all of the links in a toolbar picklist white."
  },
  {
    "text": "Here's an example of CSS code bleed in the editor's toolbar.",
    "time_stamp": "2018-12-20 07:31:30"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 07:33:27",
    "text": "yikes, yes I personally do test the editing experience every time I make a custom module to prevent interference with the editor. and on occasions where it makes sense I detect if the user is editing in the page editor and display a slightly alternate look of the module to increase compatibility(have had to do this a lot less with the new design manager)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 07:34:48",
    "text": "I should say though, I don’t specifically look for adverse effects in the edit modules pane, as I don’t ever have issues with that. my only thought is someone in that case usedan important and overrode the editor :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Victoria Gumaer",
      "poster_handle": "vgumaer"
    },
    "time_stamp": "2018-12-20 07:35:48",
    "text": "Oh, that's interesting re:tweaking the look for comparability."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-20 07:37:55",
    "text": "build it in your template and hide the default"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 07:39:26",
    "text": "Yea one specific situation I have done that a lot for in the past was, before custom modules had repeatable fields and groups, I would create flex column that displayed modules horizontally a and they’d stack in a grid.\n\nWhen you’d open the page editor, the editor wasn’t designed to work that way, so in order to make it easier to re-order those items when you clicked on the re-order button, it would make all of those modules full width, so that they all stacked vertically making it easy to re-order them."
  },
  {
    "poster": {
      "poster_name": "Victoria Gumaer",
      "poster_handle": "vgumaer"
    },
    "time_stamp": "2018-12-20 07:43:04",
    "text": "Clever. :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-20 07:50:20",
    "text": "i am bringing a bag of emmet’s bar t-shirts to next year’s inbound"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 07:51:49",
    "text": "“so where is Emmet’s I keep seeing shirts for it?” “on the corner of input and output”"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-20 07:52:01",
    "text": "heh"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 07:52:02",
    "text": "<https://emmet.io/>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-20 08:16:44",
    "text": "I have seen where people style button elements where the styles would bleed to the editor. Super annoying. But the site was already built so switching all of the buttons would have abeen a no go for my project scope anyway."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-20 08:29:50",
    "text": "lol."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-20 08:30:37",
    "text": "I wouldn't waste the paper. The dude swore that he didnt use email. The owner of a medium sized company said this."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-12-20 08:30:55",
    "text": "So he had a secretary print is out."
  },
  {
    "poster": {
      "poster_name": "eileenk",
      "poster_handle": "eileenk"
    },
    "time_stamp": "2018-12-20 08:48:08",
    "text": "Hey all. I have a roadblock with a complex integration that I'm working on between HubSpot and Veracross that is begging for a fresh pair of eyes.\n\nVeracross in the internal system used by the admissions team, HubSpot would be used to collect leads and do marketing tasks. Ideally the integration would be bi-directional. So the Veracross to HubSpot integration is built and works great. The kicker is that Veracross doesn't allow POSTs :expressionless:.\n\nOur 'creative' (ie hacky) solution to send data from HubSpot to Veracross is to send a CSV to the admissions team when a new contact is created or updated in HubSpot so that they can do a simple import of those contacts into Veracross. That's also all built and functioning.\n\nWhere we've reached our creative limit is that we would like to associate the three entity types we're sending to Veracross, (Students, Parents, and Households/Companies) together so that in Veracross the Student and Parent entities fall under the Household umbrella and that assocation doesn't have to be manually created by the admissions team.\n\nHowever, to do that, we would need to know the fk that Veracross would assign to each entity, which we obvs won't know until the contacts are created in Veracross.\n\nAnybody have any thoughts on how we could achieve this? Just need help catching a break on what has been a very frustrating project, tbh."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-20 08:52:31",
    "text": "yikes",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-20 10:21:22"
      },
      {
        "time_stamp": "2018-12-20 11:27:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "eileenk",
      "poster_handle": "eileenk"
    },
    "time_stamp": "2018-12-20 10:21:22",
    "text": "Yep. At this point it looks like it needs to be a come-to-jesus convo with the stakeholders on whether the HS to Veracross aspect is really viable. But before I have that convo, I just wanted to make sure we had explored as many options as possible."
  },
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-20 11:27:51",
    "text": "yell at veracross for not allowing POST"
  },
  {
    "text": "How come these aren't combined?",
    "time_stamp": "2018-12-20 11:44:33",
    "reply_count": 24,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2018-12-20 11:46:33"
      },
      {
        "time_stamp": "2018-12-20 11:53:21"
      },
      {
        "time_stamp": "2018-12-20 11:53:31"
      },
      {
        "time_stamp": "2018-12-20 11:53:46"
      },
      {
        "time_stamp": "2018-12-20 11:54:59"
      },
      {
        "time_stamp": "2018-12-20 11:55:26"
      },
      {
        "time_stamp": "2018-12-20 11:57:00"
      },
      {
        "time_stamp": "2018-12-20 11:57:21"
      },
      {
        "time_stamp": "2018-12-20 11:58:14"
      },
      {
        "time_stamp": "2018-12-20 11:59:37"
      },
      {
        "time_stamp": "2018-12-20 11:59:48"
      },
      {
        "time_stamp": "2018-12-20 12:04:57"
      },
      {
        "time_stamp": "2018-12-20 12:05:41"
      },
      {
        "time_stamp": "2018-12-20 12:22:55"
      },
      {
        "time_stamp": "2018-12-20 12:27:51"
      },
      {
        "time_stamp": "2018-12-20 12:28:21"
      },
      {
        "time_stamp": "2018-12-20 12:30:23"
      },
      {
        "time_stamp": "2018-12-20 12:30:55"
      },
      {
        "time_stamp": "2018-12-20 12:31:22"
      },
      {
        "time_stamp": "2018-12-20 12:31:39"
      },
      {
        "time_stamp": "2018-12-20 12:32:13"
      },
      {
        "time_stamp": "2018-12-20 12:44:43"
      },
      {
        "time_stamp": "2018-12-20 12:45:26"
      },
      {
        "time_stamp": "2018-12-20 12:45:59"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 11:46:33",
    "text": "IT would appear that a new request is made for each module"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 11:53:21",
    "text": "and you do not have hsDebug on?\\"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 11:53:31",
    "text": "nope"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 11:53:46",
    "text": "and it’s not the first load of that page"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 11:54:59",
    "edited": {
      "time_stamp": "2018-12-20 11:55:02"
    },
    "text": "consecutive reloads all show the same"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 11:55:26",
    "text": "I'm wondering if this is temporary -- and that they undid something because of an issue"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 11:57:00",
    "text": "well I know from <@U6TBZ66FN> that they have some kind of tool that tries to check for visual differences before and after combining using some special query params they have.\n\nand if it detects a change it wont combine"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 11:57:21",
    "text": "(to prevent things from breaking)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 11:58:14",
    "text": "check your console for JS errors maybe if it combined them most of the code wouldn’t get run or something due to a syntax error"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 11:59:37",
    "text": "Can you check one of your sites that you know has a few modules with JS it it to verify it is working someplace else?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 11:59:48",
    "text": "yep will do 1 sec"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 12:04:57",
    "text": "checked a couple sites, I’m actually not seeing the “combined” files either"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 12:05:41",
    "text": "<@U6GNQ7JBU> it appears the css/js combining feature is broken"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Patrick Eng",
      "poster_handle": "patrick404"
    },
    "time_stamp": "2018-12-20 12:22:55",
    "text": "Maybe I'm misunderstanding the issue, but could it be that feature where if you have anything in the head HTML of the page HubSpot won't combine?"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 12:27:51",
    "text": "We are not combining JSes yet. It is more error-prone than combining CSS."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-20 12:28:21",
    "text": "noticed this the other day as well"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 12:30:23",
    "edited": {
      "time_stamp": "2018-12-20 12:30:29"
    },
    "text": "This is difficult now. Small lines of JS are creating separate requests."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 12:30:55",
    "text": "If I put my JS inside my html section, I run the risk of a client placing two modules on a page and having issues with conflicts"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 12:31:22",
    "text": "Do I decouple all of that and revert back to a single JS file?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 12:31:39",
    "text": "I'm really at a crossroads, and I have a client asking me to inline 8 requests"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 12:32:13",
    "text": "Is there a timeline on JS being combined and minified <@U6TBZ66FN>?"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 12:44:43",
    "text": "There is no timeline yet. We continue evaluate the tradeoffs. Given that all the JS files are served from the same domain, and using HTTPS, there is not much performance gain for combining them together as we are now having HTTP/2."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 12:45:26",
    "text": "Cool, I appreciate the information."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 12:45:59",
    "text": "I think you are right about the tradeoff, I don't see it as an issue now that I think about it --"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 12:55:51",
    "edited": {
      "time_stamp": "2018-12-20 12:56:07"
    },
    "text": "bringing this back because the issue is still here and it likely didn’t get noticed. can confirm the issue is still there.",
    "reply_count": 17,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-20 16:03:10"
      },
      {
        "time_stamp": "2018-12-20 16:05:10"
      },
      {
        "time_stamp": "2018-12-20 16:06:58"
      },
      {
        "time_stamp": "2018-12-20 16:09:01"
      },
      {
        "time_stamp": "2018-12-20 16:10:03"
      },
      {
        "time_stamp": "2018-12-20 16:12:44"
      },
      {
        "time_stamp": "2018-12-20 16:13:21"
      },
      {
        "time_stamp": "2018-12-20 16:13:52"
      },
      {
        "time_stamp": "2018-12-20 16:14:00"
      },
      {
        "time_stamp": "2018-12-20 16:15:02"
      },
      {
        "time_stamp": "2018-12-20 16:16:41"
      },
      {
        "time_stamp": "2018-12-20 16:16:48"
      },
      {
        "time_stamp": "2018-12-20 16:18:07"
      },
      {
        "time_stamp": "2018-12-20 16:20:50"
      },
      {
        "time_stamp": "2018-12-20 16:28:10"
      },
      {
        "time_stamp": "2018-12-21 13:18:54"
      },
      {
        "time_stamp": "2018-12-21 13:20:27"
      }
    ]
  },
  {
    "text": "Not sure where to post this...Very weird issue in Workflows using date picker ticket properties. They all show a \"days from ticket creation\" field and not a date picker?",
    "time_stamp": "2018-12-20 12:58:00",
    "edited": {
      "time_stamp": "2018-12-20 12:58:31"
    }
  },
  {
    "poster": {
      "poster_name": "jessebeginbound",
      "poster_handle": "jessebeginbound"
    },
    "time_stamp": "2018-12-20 14:35:15",
    "text": "LOL <@U25PYL3Q8> I’ve literally been paid extra to include “custom designed” print stylesheets in a collection of new templates. Guess their target audience loved them?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 14:35:31",
    "text": "LOOLOLOL"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-12-20 14:35:33",
    "text": "That is hilarious"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 14:36:27",
    "text": "I’ve had to do print stylesheets but that’s on one of my biggest clients and they only really cared about that being on product pages"
  },
  null,
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:03:10",
    "text": "Which file, you can DM if you want. We do not minify if `@supports` is found."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 16:05:10",
    "edited": {
      "time_stamp": "2018-12-20 16:05:48"
    },
    "text": "I’ve been using a work-around whenever I run into this issue. so I don’t currently have any files with the problem(sorry tight deadlines didn’t have time to wait for someone to loook at it)\n\nIt’s easily reproduceable, in a custom module in the css pane add ```@supports((display: -ms-grid) or (display: grid)){\n//some styles here\n}```\n you’ll see that the space after “or” is stripped out, causing display issues in several browsers"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:06:58",
    "text": "Thanks. Looking it."
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:09:01",
    "text": "Found it. It is bug we introduced for custom module. Will fix it."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 16:10:03",
    "text": "You’re a hero"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:12:44",
    "text": "The fix may be slower, because we are in holiday freeze zone."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 16:13:21",
    "text": "that’s okay, as I said I have a work-around that is getting me by for now, it’ll just be nice to not have to do that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 16:13:52",
    "text": "(my workaround is litterally separating them into separate supports queries) so not a great work-around but it works"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:14:00",
    "text": "Should be an easy fix. Just need a bit time. Thanks for bringing this issue up."
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:15:02",
    "text": "BTW, as i said earlier, we will not minify your CSS if you have `@supports`."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 16:16:41",
    "text": "will it just skip the line or block with @supports or the whole file?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 16:16:48",
    "text": "preferably just the line or block"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:18:07",
    "text": "For now the whole file. It has been like than before I joined. Maybe there is some technical issue for us to minify CSS if it contains `@supports`."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-20 16:20:50",
    "text": "think I first reported and someone at HS addressed it like a year and a half ago or so,  they had said at the time that the problem was caused by the tool that was being used to minify, and that it hadn’t been update in awhile or something and they were looking into alternatives.\n\nThe not minifying the file must have been their bandaid solution"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-12-20 16:28:10",
    "text": "Sounds like that. We will see if we can fix that."
  },
  null,
  null
]
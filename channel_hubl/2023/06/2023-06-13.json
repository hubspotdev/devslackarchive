[
  {
    "poster": {
      "poster_name": "Linda Lee",
      "poster_handle": "hsiang"
    },
    "time_stamp": "2023-06-13 03:38:36",
    "text": "Hi folks, we recently encounter an issue where we have the following code in template:\n```{% if contents.total_count &gt; 0 %}\n\n\t&lt;div id=\"debug\" style=\"display:none\"&gt;\n\t\tcontents total count = {{contents.total_count}} \n\t&lt;/div&gt;\n\n\t{% module \"module_16647610840\" path=\"/post_filter_section\", label=\"Post Filter section\" %}\n\t\n{% else %}\n    {% module \"module_164750372185\" path='/no_posts_listing', label=\"No Posts Found\" %}\n{% endif %}```\nIt used to work, right now it will only render \"No Posts Found\" module instead of \"Post Filter section\" given that the `contents.total_count` is greater than 0.\n\nHas any encounter the same issue lately?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-06-13 03:41:15"
      },
      {
        "time_stamp": "2023-06-13 10:27:41"
      },
      {
        "time_stamp": "2023-06-13 19:32:07"
      },
      {
        "time_stamp": "2023-06-13 22:34:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2023-06-13 03:41:15",
    "text": "have you tried loading the module without the if condition?"
  },
  {
    "poster": {
      "poster_name": "Zayne Upton",
      "poster_handle": "zayne"
    },
    "time_stamp": "2023-06-13 06:58:27",
    "text": "yeah, that's why I'm also confused."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2023-06-13 09:22:25",
    "text": "Does anyone know how to use the selectattr filter with a multi select column from hubdb?\n\nI’ve tried the below but I guess because hubdb returns an array with the id, name, label and order containing doesn’t work\n```{% set results = hubdb_table_rows(tableId, query) %}\n{% set filtered_results = results|selectattr('multi_select_col','containing','option 1') %}```",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-06-13 10:18:52"
      },
      {
        "time_stamp": "2023-06-13 10:27:25"
      },
      {
        "time_stamp": "2023-06-13 10:30:40"
      },
      {
        "time_stamp": "2023-06-13 10:30:58"
      },
      {
        "time_stamp": "2023-06-13 10:31:48"
      },
      {
        "time_stamp": "2023-06-13 10:37:01"
      },
      {
        "time_stamp": "2023-06-13 10:37:41"
      },
      {
        "time_stamp": "2023-06-13 10:37:46"
      },
      {
        "time_stamp": "2023-06-13 10:40:35"
      },
      {
        "time_stamp": "2023-06-13 10:43:54"
      },
      {
        "time_stamp": "2023-06-14 05:53:54"
      },
      {
        "time_stamp": "2023-06-14 09:47:40"
      },
      {
        "time_stamp": "2023-06-14 09:55:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-13 10:18:52",
    "text": "<@UDJV5B73R> Create a filtering query and use it directly in hubdb_table_rows function, If you intend to use it for multiple things, you can make another variable and insert a filer query there."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2023-06-13 10:27:25",
    "text": "Thanks, but I need all the results from hubdb as well as the filtered list. I guess I can use multiple hubdb_table_rows functions but there is a limit of 10 calls and I’m already making a few"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-13 10:27:41",
    "text": "Try this\n\n{% set counts = contents|count %}\n\n {% if counts  &gt; 0 %}"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-13 10:30:40",
    "text": "Understood, Let me recreate the same and find the solution"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2023-06-13 10:30:58",
    "text": "Thanks so much"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2023-06-13 10:31:48",
    "text": "I’m looking at looping through my results and then ’pop’ing when ever one doesn’t match but seems a bit clunky"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-13 10:37:01",
    "text": "Yes correct , Because results is an array of objects"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2023-06-13 10:37:41",
    "edited": {
      "time_stamp": "2023-06-14 04:26:05"
    },
    "text": "This feels a little over the top when I was hoping to use 1 line…\n```\t\t{% set loopy = {'index':[]} %}\n\t\t{% for result in results %}\n\t\t\t{% set found = {'value': false} %}\n\t\t\t{% for label in result.multi_select_col|map('label') %}\n\t\t\t\t{% do found.update({'value':true}) if label == 'option 1' %}\n\t\t\t{% endfor %}\n\t\t\t{% do loopy.index.append(loop.index0) if found.value == false %}\n\t\t{% endfor %}\n\t\t{% do loopy.index.reverse() %}\n\t\t{% for index in loopy.index %}\n\t\t\t{% do filtered_results.pop(index) %} //Sometimes this works??\n\t\t\t{% do filtered_results.objects.pop(index) %} //Sometimes this works??\n\t\t{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-13 10:37:46",
    "text": "I just tried its not working either , Maybe something wrong with the filter let me try another one"
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-13 10:40:35",
    "text": "It should be a final solution but I am 100% sure that there should be any hubl filter to solve this"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2023-06-13 10:43:54",
    "text": "I was experimenting with this sort of thing, but as soon as you get the actual hubdb table the options are formated in different kind of objects\n```{% set multiCols = [\n\t{'multiCol':[\n        {\n          \"id\": 1,\n          \"name\": \"option 1\",\n          \"label\": \"option 1\",\n          \"labelTranslations\": null,\n          \"type\": \"option\",\n          \"order\": 0\n        },\n        {\n          \"id\": 2,\n          \"name\": \"option 2\",\n          \"label\": \"option 2\",\n          \"labelTranslations\": null,\n          \"type\": \"option\",\n          \"order\": 1\n        }\n    ]},\n\t{'multiCol':[\n        {\n          \"id\": 2,\n          \"name\": \"option 2\",\n          \"label\": \"option 2\",\n          \"labelTranslations\": null,\n          \"type\": \"option\",\n          \"order\": 1\n        }\n    ]}\n\t] %}\n{{ multiCols|map('multiCol')|pprint }}&lt;br&gt;&lt;br&gt;\n{% set lookup = {\n          \"id\":1,\n          \"name\": \"option 1\",\n          \"label\": \"option 1\",\n          \"labelTranslations\": null,\n          \"type\": \"option\",\n          \"order\": 0\n        } %}\n{{ multiCols|selectattr('multiCol','containing',lookup)|map('multiCol')|pprint }}&lt;br&gt;```"
  },
  {
    "poster": {
      "poster_name": "Noel Williams",
      "poster_handle": "noel.williams"
    },
    "time_stamp": "2023-06-13 13:34:19",
    "text": "I think this should work\n\n```{% for department_name, department_value in departments.items() %}\n  {% if contact.job_alert_functie is string_containing department_name %}\n    &lt;div style=\"padding: 10px 20px\"&gt;\n    &lt;h4&gt;\n      Department: {{ department_name }}. Value: {{ contact.job_alert_functie[department_name] }}\n    &lt;/h4&gt;\n    &lt;/div&gt;\n  {% endif %}\n{% endfor %}```\n"
  },
  {
    "poster": {
      "poster_name": "Linda Lee",
      "poster_handle": "hsiang"
    },
    "time_stamp": "2023-06-13 19:32:07",
    "text": "<@U022YD6LGAU> thanks for sharing this, it helps and it worked, no sure why `count` is not listed in <https://developers.HubSpot.com/docs/cms/hubl/filters>, have to look over to jinjava's documentation.\n\n<@UBT0AHWLD> yes, the module will work if without the `if` condition.\n\nOne thing we find out is that in the \"preview\" or \"editor\" mode, `contents.total_count` will return `null` or `0`, however, when it's published, it will show accurate number such as `10`, not sure if this is the reason why... but our code used to work like few months ago."
  },
  {
    "poster": {
      "poster_name": "Rushik vaghasia",
      "poster_handle": "rushikvaghasiya21"
    },
    "time_stamp": "2023-06-13 22:34:30",
    "text": "<@U017UEU4E3W> Yes, jinjava's documentation is useful for such cases."
  }
]
[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-05 04:04:24",
    "text": "I’m having an issue with the login page I think caching too aggressively\nBasically I have 2 log in pages for 2 different types of private content one for employers and one for applicants looking for jobs\nI use the standard login page for both: `/_hcms/mem/login`\nBut I use a query string ?type=employer for the employer login\nand the hubl:\n`{% if request.query_dict.type == 'employer' %}`\nto show different content\nHowever it won’t always load unless I do a hard refresh\nHas anyone got a solution to this?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-04-05 04:16:33"
      },
      {
        "time_stamp": "2022-04-05 04:18:40"
      },
      {
        "time_stamp": "2022-04-05 04:23:03"
      },
      {
        "time_stamp": "2022-04-05 04:25:22"
      },
      {
        "time_stamp": "2022-04-05 04:39:51"
      },
      {
        "time_stamp": "2022-04-05 07:18:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-05 04:16:33",
    "text": "sort of solved it, just adding `&amp;hsCacheBuster` to everything seems to fix it, don’t need to add a random number just adding that to the url does something apparently"
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2022-04-05 04:18:40",
    "text": "or add on the template an hidden variable like `{{ local_dt }}`  that disable HubSpot caching"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-05 04:23:03",
    "text": "`{{ request.query_dict }}` is also supposed to disable caching"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-05 04:25:22",
    "text": "Sorry my bad some of the other request variables do but that one doesn’t,\n\ni’ll give the local_dt a go"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-05 04:39:51",
    "text": "unfortunately local_dt doesn’t help either, I think the page must be fairly aggressively cached"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-04-05 07:18:13",
    "text": "I’ve ended up adding js to the page too, which checks if the page has hsCacheBuster and if not reloads it with the query in the url…"
  },
  {
    "poster": {
      "poster_name": "Jon Carico",
      "poster_handle": "jon549"
    },
    "time_stamp": "2022-04-05 11:06:01",
    "text": "Hey HubSpot Devs!\nI'm trying to figure out my options for this scenario. The goal is to use /page-1 as the pillar page, and all the subpages and blog posts are supporting it's SEO value.\n\nScenario:\n\nPages\n<http://domain.com/page-1|domain.com/page-1>\n<http://domain.com/page-1/page-2|domain.com/page-1/page-2>\n<http://domain.com/page-1/page-3|domain.com/page-1/page-3>\n\nBlog\n<http://domain.com/page-1/blog-listing|domain.com/page-1/blog-listing>\n<http://domain.com/page-1/blog-post-1|domain.com/page-1/blog-post-1>\n<http://domain.com/page-1/blog-post-2|domain.com/page-1/blog-post-2>\n<http://domain.com/page-1/blog-post-3|domain.com/page-1/blog-post-3>\n\n\nQuestion(s)\n- How can I create a blog without a blog listing page?\n- If a blog listing is required, can I set blog posts on the same URL level?\n- Is it possible to clone the page template for /page-1 and use it as a blog listing template?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-04-06 08:23:49"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-05 11:47:25",
    "text": "I am currently having issues with the  `escapejs` filter…"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-05 11:48:56",
    "edited": {
      "time_stamp": "2020-02-05 11:49:23"
    },
    "text": "the quote string: `Hey, don't do this` is breaking things. Full code:\n```{% set string = \"Hey, don't do this\" %}\nvar foo = '{{ string|escapejs }}';```",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-02-05 13:29:45"
      },
      {
        "time_stamp": "2020-02-05 14:21:25"
      },
      {
        "time_stamp": "2020-02-05 14:21:30"
      },
      {
        "time_stamp": "2020-02-10 04:34:08"
      },
      {
        "time_stamp": "2020-02-10 06:59:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Cory Dymond",
      "poster_handle": "cory218"
    },
    "time_stamp": "2020-02-05 12:26:14",
    "text": "actually, you're right, that's not working"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2020-02-05 13:29:45",
    "text": "Unfortunately there is a bug in our HTML parser that writes the escaped `'` back out so we lose the escaping for that character. I am still trying to track down why this happens"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-05 14:21:25",
    "text": ":+1::skin-tone-2:"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-05 14:21:30",
    "text": "thanks for the heads up"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2020-02-05 14:59:33",
    "text": "Does the quote below from the doc page for *`export_to_template_context`* mean that it is now obsolete? Or does it mean you _can_ use it in a template, but _not_ in a custom module?\n&gt; Usage within custom modules\n&gt; *export_to_template_context=True* is no longer supported in custom modules as the new module framework supports all HubL fields applicable.",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-02-05 15:00:58"
      },
      {
        "time_stamp": "2020-02-05 15:23:16"
      },
      {
        "time_stamp": "2020-02-06 06:33:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2020-02-05 15:00:58",
    "text": "You can use it in templates just not in modules"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-02-05 15:23:16",
    "text": "you can use it in a template ON a module just not IN the Module."
  },
  {
    "poster": {
      "poster_name": "Joel Warren",
      "poster_handle": "joel"
    },
    "time_stamp": "2020-02-05 16:25:54",
    "text": "I'm stuck with the hubdb filterquery not supporting OR queries, has anyone done a workaround?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-02-06 06:38:09"
      },
      {
        "time_stamp": "2020-02-06 14:30:34"
      }
    ]
  }
]
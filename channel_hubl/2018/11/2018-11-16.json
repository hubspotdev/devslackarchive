[
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 09:10:15",
    "text": "is it possible to get an array of email webversion links?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 09:11:02",
    "text": "to later be printed on a webpage"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 09:11:33",
    "text": "or printed and faxed :slightly_smiling_face: "
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 10:11:57",
    "text": "Can you use HubDB variables in the CSS section on custom modules? Following this tutorial: <https://community.HubSpot.com/t5/Share-Your-Work/Custom-Background-Image-Module-Update/td-p/183752> and it seems like we should be using the CSS not the HUBL&amp;HTML part of the custom module but I don’t get why…",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-11-16 10:13:27"
      },
      {
        "time_stamp": "2018-11-16 10:15:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:13:27",
    "edited": {
      "time_stamp": "2018-11-16 10:14:30"
    },
    "text": "hubl is not allowed in the CSS pane other than the asset url hubl.\n\nThe reason for this is because the css file  for the module is minified and combined with all the other files. If you had hubl logic in there then it would cause problems if you had multiple instances of the same module on the page with different options. also could cause a rendering problem.\n\nSimply use inline styles or a style tag in the hubl+html area to work around"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:14:09",
    "text": "<@UDZ9QUU4T> When I build these I always use an inline style for the background image. After that it is all css and nothing needs to be dynamic."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:14:34",
    "text": "the background image has the hubl/custom module code/"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:15:22",
    "text": "As <@U38EZFVFE> stated - anything that will always be consistent - put that in the css pane, things that users can change  put in the hubl+html pane"
  },
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 10:15:26",
    "text": "The layout I’m working in needs the element that’s getting the background to inside a global module that the user can’t edit…"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:15:41",
    "text": "hmm. yeah."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:15:57",
    "text": "why global module?"
  },
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 10:16:44",
    "text": "Its setting a custom background image on the site masthead. Its not a global module technically but it is something that I don’t want the user to edit other than to set the image URL.",
    "reply_count": 20,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-11-16 10:18:19"
      },
      {
        "time_stamp": "2018-11-16 10:18:58"
      },
      {
        "time_stamp": "2018-11-16 10:19:08"
      },
      {
        "time_stamp": "2018-11-16 10:19:19"
      },
      {
        "time_stamp": "2018-11-16 10:19:31"
      },
      {
        "time_stamp": "2018-11-16 10:19:56"
      },
      {
        "time_stamp": "2018-11-16 10:19:58"
      },
      {
        "time_stamp": "2018-11-16 10:20:16"
      },
      {
        "time_stamp": "2018-11-16 10:20:42"
      },
      {
        "time_stamp": "2018-11-16 10:20:45"
      },
      {
        "time_stamp": "2018-11-16 10:20:46"
      },
      {
        "time_stamp": "2018-11-16 10:21:09"
      },
      {
        "time_stamp": "2018-11-16 10:21:11"
      },
      {
        "time_stamp": "2018-11-16 10:22:08"
      },
      {
        "time_stamp": "2018-11-16 10:23:04"
      },
      {
        "time_stamp": "2018-11-16 10:25:54"
      },
      {
        "time_stamp": "2018-11-16 10:30:15"
      },
      {
        "time_stamp": "2018-11-16 10:52:19"
      },
      {
        "time_stamp": "2018-11-16 10:58:21"
      },
      {
        "time_stamp": "2018-11-16 11:03:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:18:19",
    "edited": {
      "time_stamp": "2018-11-16 10:18:24"
    },
    "text": "well. if it is just coming from hubdb I would listen to <@U7SL518D6> said and add the css into the html pane. BUT make sure and wrap it in a `{% require_css %} //CSS{% end_require_css %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:18:58",
    "text": "<@U38EZFVFE> what is that wizardry?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:19:08",
    "text": "haha.."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:19:19",
    "edited": {
      "time_stamp": "2018-11-16 10:19:45"
    },
    "text": "you mean `{% require_css(URL) %}`?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 10:19:22",
    "text": "i gather no one knows anything about my above question?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-16 10:21:21"
      },
      {
        "time_stamp": "2018-11-16 10:21:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:19:31",
    "text": "{% require_js %} == {% require_css %}"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:19:56",
    "edited": {
      "time_stamp": "2018-11-16 10:20:00"
    },
    "text": "they add the afore mentioned code to the correct spot in the DOM."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:19:58",
    "text": "right I get that but you have an open and close tag for it instead of hte function"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:20:16",
    "edited": {
      "time_stamp": "2018-11-16 10:20:21"
    },
    "text": "yeah you can use it like a block"
  },
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 10:20:42",
    "text": "So that will drop it into the CSS section rather than put it inline?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:20:45",
    "text": "you still have to put the style and script tags but it works well"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:20:46",
    "text": "so does it do anything more technical than just putting in a &lt;style&gt; or &lt;script&gt; in the html?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:21:09",
    "text": "no.. you still need to place it into the hubl area"
  },
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 10:21:11",
    "text": "Errr… head not “css section”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:21:21",
    "text": "sorry I don’t but would love to know the answer"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 10:21:55",
    "text": "me, too :)"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:22:08",
    "text": "it minifies and positions it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:23:04",
    "text": "thank you for clarifying that bit chad. - by “positions” it do you mean it plops it into the head or something instead of in the same place you put it in the hubl+html pane?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 10:25:54",
    "edited": {
      "time_stamp": "2018-11-16 10:25:59"
    },
    "text": "actually it doesn't minify it.. sorry. but yeas it does place it by default into the footer if scripts and the header if css"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:30:15",
    "text": "interesting. very interesting.\nI now want a modified version of this with an inliner param so I can use this when making custom modules for emails"
  },
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 10:52:19",
    "text": "This may be a newb-y question, but is there a way to easily reference files in the CMS within variables (ie. for custom background images can users upload a file rather than pasting a URL from another source)?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 10:58:21",
    "edited": {
      "time_stamp": "2018-11-16 10:58:35"
    },
    "text": "yes using the file and image field in the custom module"
  },
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 11:03:17",
    "text": "Awesome, thanks so much!"
  },
  {
    "poster": {
      "poster_name": "Mark Hurlburt",
      "poster_handle": "mark396"
    },
    "time_stamp": "2018-11-16 11:05:19",
    "text": "How do people handle mobile-friendly menus in HubSpot? I’ve used boostrap in the past but don’t seem to have full control over the menu markup - is there something obvious I’m missing?",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-11-16 11:19:53"
      },
      {
        "time_stamp": "2018-11-16 11:23:07"
      },
      {
        "time_stamp": "2018-11-16 11:23:49"
      },
      {
        "time_stamp": "2018-11-16 11:52:04"
      },
      {
        "time_stamp": "2018-11-16 11:52:24"
      },
      {
        "time_stamp": "2018-11-16 13:00:19"
      },
      {
        "time_stamp": "2018-11-16 13:02:55"
      },
      {
        "time_stamp": "2018-11-16 13:11:56"
      },
      {
        "time_stamp": "2018-11-21 10:41:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 11:19:53",
    "edited": {
      "time_stamp": "2018-11-16 11:21:33"
    },
    "text": "css and javascript.\n\nmostly custom css and JS.\n\nit’s not the best but if you’re committed to using bootstrap for your menu you could us javascript to restructure the links into the bootstrap nav on page load.\n\nMy clients usually want different kinds of hamburgers, with off canvas, and full screen, and drop downs and all that jazz, so rolling my own works the best for me"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 11:23:07",
    "text": "If you have a megamenu the general consesus is the best way to do it is with HubDB instead of a normal menu"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 11:23:49",
    "text": "HubDB you sacrifice convenience and UX/UI of menu manager but get unlimited control."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 11:52:04",
    "text": "why did i never think about the hubdb approach?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 11:52:24",
    "text": "i will hopefully, be part of that general consensus bandwagon soon"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-11-16 13:00:19",
    "text": "I have a base mobile menu that I have used for the past year. I rolled it myself."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 13:02:55",
    "text": "Yea kinda the same thing here, though I’ve rolled new ones for some fairly unique menus lately"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-11-16 13:11:56",
    "text": "gonna take a swing at this!"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-11-16 13:23:07",
    "text": "is there a way to get an object’s length outside of a forloop?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 13:30:32",
    "text": "`outerobject[0].innerobject[1]`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 13:30:44",
    "text": "oh and |length",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-16 13:32:41"
      },
      {
        "time_stamp": "2018-11-16 13:33:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-11-16 13:32:41",
    "text": "Sweet! I tried `obj.length` to no avail. THANK YOU!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-11-16 13:33:11",
    "text": "<https://designers.HubSpot.com/docs/hubl/hubl-supported-filters#length>"
  },
  null,
  null
]
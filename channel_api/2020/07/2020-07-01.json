[
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-01 01:47:46",
    "edited": {
      "time_stamp": "2020-07-01 01:52:14"
    },
    "text": "Ah - I see! From API implementations i’ve worked on in the past, it’s common to see an explicit sort step on query params for this very reason. Hopefully someone from HS will be able to jump in on this and clarify"
  },
  {
    "poster": {
      "poster_name": "yh_jp",
      "poster_handle": "yht0n648594"
    },
    "time_stamp": "2020-07-01 03:05:30",
    "text": "Hello,I want to get Web Tracking cookie value(__hstc and HubSpotutk), but I can't find API endpoint.please teach me."
  },
  {
    "poster": {
      "poster_name": "Johan Vantomme",
      "poster_handle": "johanvt"
    },
    "time_stamp": "2020-07-01 03:55:46",
    "text": "I have a 1006 response error,\nany idea?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-07-01 08:03:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Shani",
      "poster_handle": "hsdeveloper6"
    },
    "time_stamp": "2020-07-01 04:57:41",
    "text": "I am using action_hook in CRM Extension API but it not working as intended. Attached is a screenshot what I am getting after hitting the action link. Could you please advice?"
  },
  {
    "text": "",
    "time_stamp": "2020-07-01 04:57:54"
  },
  {
    "poster": {
      "poster_name": "Shani",
      "poster_handle": "hsdeveloper6"
    },
    "time_stamp": "2020-07-01 04:58:12",
    "text": "<@U2H3TT8F2> please help here.",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-01 08:28:14"
      },
      {
        "time_stamp": "2020-07-01 08:30:13"
      },
      {
        "time_stamp": "2020-07-02 03:15:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Meir Hadassi Turner",
      "poster_handle": "meir"
    },
    "time_stamp": "2020-07-01 06:25:58",
    "text": "Hi, why when I'm using a standard API key (not a developer account) with my super admin, I still get \"Current hapikey does not have proper permissions! (requires all of [content-access])\" for accessing tasks?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-07-01 09:52:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 08:02:56",
    "text": "Virtually every 400-series error I have gotten in HubSpot sends a detailed error response, but you might need to disable or catch throwing a JS exception and print out the error JSON or find the error JSON in the browser dev tools to debug it. If you just send blind and don't capture the error it will be pretty impossible to debug it."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 08:03:30",
    "text": "Need way more detail to help."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 08:04:38",
    "text": "Yeah... if their spec does not include sorting the params first, then the spec is axiomatically buggy as it violates HTTP's RFCs."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 08:05:42",
    "text": "However, the HubSpot Spec Doc only discusses the request body, which no intermediate tool should ever be modifying."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 08:05:53",
    "text": "It does not discuss the GET params which definitely could be modified."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 08:06:58",
    "text": "So, it depends exactly what kind of structure you are dealing with here"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-07-01 08:28:14",
    "text": "Hey <@U011UH5NZM4>, when you setup the CRM cards in your developer account, there should be a custom actions section to fill out. You’ll need to add the url shown in your error into that area."
  },
  {
    "text": "Below is a screenshot of this area",
    "time_stamp": "2020-07-01 08:30:13"
  },
  {
    "poster": {
      "poster_name": "Lauren Boland",
      "poster_handle": "lboland"
    },
    "time_stamp": "2020-07-01 08:36:15",
    "text": "Thanks <@U012W4YEUTX>.  I did find the previous conversation, but it wasn’t 100% clear if this was impossible.\n\nUnfortunately, our use case involves PII.  We’re trying to strip email attachments from our client emails, (then uploading them to an outside system, and having a link to them in HubSpot) to ensure that PII data isn’t ever stored on HubSpot.\n\nSo, for our use-case, if a file from an email gets INTO HubSpot from the conversations inbox (which is set up to handle our support email address), then we need to get that file out of there.   I know there are API endpoints to delete files, but we still need to capture those documents as they’d be pertinent to our business."
  },
  {
    "poster": {
      "poster_name": "Tanisha Rose",
      "poster_handle": "tanisha"
    },
    "time_stamp": "2020-07-01 09:05:56",
    "text": "Ah I see thanks."
  },
  {
    "poster": {
      "poster_name": "Tanisha Rose",
      "poster_handle": "tanisha"
    },
    "time_stamp": "2020-07-01 09:46:01",
    "text": "Figured it out. I wasn't sending the JSON data to the function. This is all working. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Rahmona Henry",
      "poster_handle": "rhenry"
    },
    "time_stamp": "2020-07-01 09:49:45",
    "text": "Hi <@U012W4YEUTX> this is all fixed up now and linking to the correct page. Thank you for letting us know. We really appreciate it"
  },
  {
    "poster": {
      "poster_name": "Rahmona Henry",
      "poster_handle": "rhenry"
    },
    "time_stamp": "2020-07-01 09:52:06",
    "text": "Hi <@U016B8F0S2H> would it be possible to direct message me the Hub ID so I can take a look for you? Also what API endpoint are you trying to access?"
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2020-07-01 10:20:46",
    "text": "Ha - yeah - i realized that. Also realized I wasn't returning the response body for the error either"
  },
  {
    "poster": {
      "poster_name": "Cooper Elias",
      "poster_handle": "cooper.elias"
    },
    "time_stamp": "2020-07-01 14:18:45",
    "edited": {
      "time_stamp": "2020-07-01 14:23:32"
    },
    "text": "Hi all - I have some questions about searching for contacts by phone numbers using the new v3 Filter, sort, and search CRM objects endpoint...\n1. Is there any way to search without worrying about formatting of the number? So searching 1234567890 would work for a contact with <tel:1234567890|123-456-7890> in the phone property.\n2. Is it possible to search the same property for multiple values? I tried using two filterGroups so that they should be combined by an OR operator, but when the filterGroups are searching the same property, it's only returning results that match the second filterGroup. *Edit: nevermind, I found my error in how I had this formatted and it's working properly.*",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-07-01 16:17:44"
      },
      {
        "time_stamp": "2020-07-01 16:18:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-07-01 15:40:41",
    "text": "They say to include the query string… I found a few other community posts where someone was running into an issue and it was suggested by a HubSpot support person that the query params need to keep the same sort order"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-07-01 15:41:46",
    "text": "<@U2H3TT8F2> pulling you in for a moment since I see you’re active… anyone on the HubSpot side know about this and any workarounds that have worked?"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-07-01 15:43:00",
    "text": "(Summary statement: “This” = for validating the signature, we need to keep query params in the same sort order as they’re sent; however, AWS API Gateway (which we’re using to serve our functions/API for CRM Extensions) automatically sorts the query params. We haven’t found a workaround yet, not sure there _are_ any but figured we should ask)"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2020-07-01 15:45:30",
    "text": "Hey Sean, I am not sure off the top of my head but I can ask around internally and see if anyone knows of anything\n (its after hours at HS so i can’t promise i’ll get a response for you today and with the extended weekend coming up [July 4th holiday in the US] I am not sure who is in tomorrow). Ill let you know if I hear anything."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-01 15:54:55",
    "edited": {
      "time_stamp": "2020-07-01 15:55:53"
    },
    "text": "<@U014UPFSTNK> an interim workaround be to trigger an API request to another endpoint / test URL outside of API gateway (and try to trigger one which will include all request params) and from that note down the order and construct the query string signature manually based on that that? It obviously could be quite fragile"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-07-01 16:08:02",
    "text": "Yeah we’ve thought of that <@UQERM7BLY> and debated putting it in place. We may well do that, but it’s brittle and means that any time someone goes to add/tweak the variables we have the CRM Extension pass through, they have to remember to change the validation logic, and the validation logic will have to be configured on a per-request basis. Lots of fail points :confused:"
  },
  {
    "poster": {
      "poster_name": "Sean Matthews (Left Hook)",
      "poster_handle": "sean.matthews"
    },
    "time_stamp": "2020-07-01 16:08:13",
    "text": "Thanks <@U2H3TT8F2> :thumbsup:"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 16:14:20",
    "text": "Depending on exactly what you have going on, it might be possible to approach it using an epic kludge, if you can get the attachments in there as non-hidden, pick them up for your secure system, then GDPR delete them from HubSpot, it would minimize exposure. But, speaking as a career-long cybersecurity engineer looking to sell cyberinsurance now, I promise I feel your pain on this one!"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-01 16:16:31",
    "text": "jumped into my aws console - how about an mapping template?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-01 16:17:20",
    "text": "ah, i just googled it - turns out that doesnt give you access to the raw body"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 16:17:44",
    "text": "The kludge-tacular approach to #1 would be searching using an OR of every common format used in your system. Another one would be using webhooks, workflows, or some other validation to clean them up with some hard-code data processing code, so you know what you will get when you dig into the field a priori:\n\n<https://github.com/daviddrysdale/python-phonenumbers>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 16:18:09",
    "text": "I can confirm searching for &gt;1 value in a property works in my env."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-07-01 16:24:16",
    "edited": {
      "time_stamp": "2020-07-01 16:26:23"
    },
    "text": "just note: i believe the hidden flag is what defines if they’re public - they’ll be dumped on a public CDN without any signature certification and i imagine will cached fairly heavily. So the deletion wont be instant - and could take a very long time!"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-07-01 19:09:48",
    "text": "Great point"
  },
  {
    "poster": {
      "poster_name": "mmcdaris",
      "poster_handle": "morgan"
    },
    "time_stamp": "2020-07-01 21:10:51",
    "edited": {
      "time_stamp": "2020-07-01 21:11:28"
    },
    "text": "Please update the v3 API to allow the creation of timeline event tokens of type `DateTime` . It seems like a huge bug that you can't create `DateTime` properties anywhere in the UI either. Pretty big burden to have to grab a developer every time you want a `DateTime` property."
  }
]
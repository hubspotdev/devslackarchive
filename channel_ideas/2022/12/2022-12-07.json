[
  {
    "poster": {
      "poster_name": "Abhishek Sharma",
      "poster_handle": "abhishek853"
    },
    "time_stamp": "2022-12-07 02:32:17",
    "text": "How HubSpot can be used for HR services? Can anyone help me out"
  },
  {
    "poster": {
      "poster_name": "Ville Pekkarinen",
      "poster_handle": "ville"
    },
    "time_stamp": "2022-12-07 04:49:01",
    "text": "possibility to update and NOT return to page editor for global assets thank you",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-12-07 06:10:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Federico Mozzo",
      "poster_handle": "federico.mozzo"
    },
    "time_stamp": "2022-12-07 06:10:58",
    "text": "+1, it's really annoying going back and forth to update every global module translation, I usually have to edit them from the design manager and not the page editor"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2022-12-07 14:27:30",
    "text": "Been working on module controls lately, and I’ve continually been running into a couple of things I’d really love to see added:\n1. Conditional locking or disabling of module fields, similar to the existing conditional visibility functionality. There are times where I might want to prevent an editor from updating a field because of other field states, but don’t necessarily want the field to disappear entirely. There are plenty of situations in which a field disappearing could be disorienting to a user.\n2. It’d be great to be able to add toggle switches, like you find in the Design Tools module editor. You can currently approximate them using radio selectors or dropdowns, but I find the UX of both of those options to be sub-par. I think it’d make a lot of sense as a display mode for the Choice field! _(bonus points for the groups with toggle switches, also found in the module editor)_",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-12-07 15:47:26"
      },
      {
        "time_stamp": "2022-12-07 15:47:43"
      },
      {
        "time_stamp": "2022-12-07 15:50:46"
      },
      {
        "time_stamp": "2022-12-07 15:51:36"
      },
      {
        "time_stamp": "2022-12-07 15:58:13"
      },
      {
        "time_stamp": "2022-12-07 16:10:00"
      },
      {
        "time_stamp": "2022-12-07 16:10:28"
      },
      {
        "time_stamp": "2022-12-07 16:10:41"
      },
      {
        "time_stamp": "2022-12-07 16:12:57"
      },
      {
        "time_stamp": "2022-12-12 13:59:37"
      },
      {
        "time_stamp": "2022-12-12 14:03:31"
      },
      {
        "time_stamp": "2022-12-12 14:56:37"
      },
      {
        "time_stamp": "2022-12-12 14:59:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-12-07 15:47:26",
    "text": "1. can be done with the js defined fields beta"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-12-07 15:47:43",
    "text": "2. currently is definitely a feature I would also like so see added"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2022-12-07 15:50:46",
    "text": "Oh, that’s super neat to hear — I’d assumed that the js-defined fields would work like iGoMoon’s (excellent) fields.js tool, which is just a JSON transformer.\n\nI didn’t realize I’d actually be able to implement logic — sweet!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-12-07 15:51:36",
    "text": "here's a link <https://developers.HubSpot.com/docs/cms/building-blocks/modules/write-fields-using-javascript>"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2022-12-07 15:58:13",
    "text": "Hm, I’m not seeing which of the added functionality would would allow for that kind of additional control — it seems like all of this is JSON-ified by the time that it gets into user space."
  },
  {
    "text": "I believe that you can accomplish it with this section",
    "time_stamp": "2022-12-07 16:10:00"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-12-07 16:10:28",
    "text": "To be fully transparent I haven't tested this myself just reiterating the docs"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-12-07 16:10:41",
    "text": "I can run some tests tomorrow and let you know what I find"
  },
  {
    "poster": {
      "poster_name": "Evelynn Ulsh",
      "poster_handle": "evelynn"
    },
    "time_stamp": "2022-12-07 16:12:57",
    "text": "I’m fairly confident that’s demonstrating a function that generates an alternate set of fields if you pass it a flag, like “qa.” However, I _also_ haven’t had the opportunity to test this yet, so I’ll very happily eat my hat if you prove me wrong. :)"
  },
  {
    "poster": {
      "poster_name": "Ronald Mannak",
      "poster_handle": "ronald"
    },
    "time_stamp": "2022-12-07 17:12:19",
    "text": "We have a solution to digitally sign bulk/marketing email. It's a plug-in for existing marketing mail providers and we got a request to explore the possibility of bringing our digital signatures to HubSpot bulk email.\n\nI can think of two possible ways to do this (there may be more):\n1. Read the raw email after the mail-merge/personalization/tracking, and the ability to add a MIME header to the email before it is sent\n2. Access to the templates and user-database and have our plug-in handle mail-merge/personalization/tracking and send the email out using the HubSpot SMTP server.\nHow can I make this work on HubSpot?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-01-04 03:16:37"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "trung ngo",
      "poster_handle": "trung"
    },
    "time_stamp": "2022-02-09 13:22:50",
    "text": "Has anyone used React to build smaller modules that can be composed to create a page in CMS Hub? For example, a React card or a React button, as opposed to just mounting an entire single page app with a React module. I’m testing this out and one of the issues I ran into quickly is with layout shifting as the JS scripts are loaded — this gets worse as you add more modules that rely on different dependencies. I’m curious if anyone has tried to do this and how you approached solving this problem.",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-02-09 14:28:22"
      },
      {
        "time_stamp": "2022-02-09 15:41:25"
      },
      {
        "time_stamp": "2022-02-09 16:00:25"
      },
      {
        "time_stamp": "2022-02-09 16:01:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-02-09 14:28:22",
    "text": "It’s theoretically possible, but IMO Vue is a better use-case for this type of implementation. Simply adding vue.min.js as a dependency essentially allows you to compose Vue syntax in the JS window of your module with no build steps necessary"
  },
  {
    "poster": {
      "poster_name": "trung ngo",
      "poster_handle": "trung"
    },
    "time_stamp": "2022-02-09 15:41:25",
    "text": "Thanks <@U26BLKGE4>! Do you run into the same issues with layout shifting though if some modules have other dependencies?"
  },
  {
    "poster": {
      "poster_name": "Scott Grunerud",
      "poster_handle": "scott570"
    },
    "time_stamp": "2022-02-09 15:48:02",
    "text": "Hey Folks,\n\nI am using Next.js and trying to use the embed code generated by the form builder to populate in a modal I want to manually trigger is this possible / has anyone had difficulty integrating HubSpot Forms with Next.js",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-02-09 16:03:34"
      },
      {
        "time_stamp": "2022-02-09 16:03:55"
      },
      {
        "time_stamp": "2022-02-10 08:14:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-02-09 16:00:25",
    "text": "Yes, that’s always going to be the case if you’re using JS to add or manipulate markup, with or without a framework. Best practice would be to add your default markup to the HTML if possible and only add off-screen elements with the JS"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-02-09 16:01:25",
    "text": "If you look at Gatsby.JS for example, they compile the react code into static HTML and then “rehydrate” the rest of the content with the JS once the page loads to minimize shifts or unavailable content"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-02-09 16:03:34",
    "text": "Hey Scott, I haven’t done it with Next specifically, but in general when using a framework like that you will need to modify the embed code to work with your site based on hooks or other lifecycle events to bring in the form JS dependency and then render the form at the correct phase "
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2022-02-09 16:03:55",
    "text": "Just takes some trial and error"
  }
]
[
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 11:28:34",
    "text": "Quick question, since I've authenticated using my personal access key through the HubSpot cli do i still need to use my private app access key to update a contact crm property from within my serverless function?",
    "reply_count": 27,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-03-31 11:29:23"
      },
      {
        "time_stamp": "2023-03-31 11:29:59"
      },
      {
        "time_stamp": "2023-03-31 11:30:13"
      },
      {
        "time_stamp": "2023-03-31 11:30:17"
      },
      {
        "time_stamp": "2023-03-31 11:30:39"
      },
      {
        "time_stamp": "2023-03-31 11:33:05"
      },
      {
        "time_stamp": "2023-03-31 11:33:41"
      },
      {
        "time_stamp": "2023-03-31 11:35:49"
      },
      {
        "time_stamp": "2023-03-31 11:36:00"
      },
      {
        "time_stamp": "2023-03-31 11:36:14"
      },
      {
        "time_stamp": "2023-03-31 11:36:35"
      },
      {
        "time_stamp": "2023-03-31 11:41:08"
      },
      {
        "time_stamp": "2023-03-31 11:42:37"
      },
      {
        "time_stamp": "2023-03-31 11:43:22"
      },
      {
        "time_stamp": "2023-03-31 12:00:47"
      },
      {
        "time_stamp": "2023-03-31 12:01:44"
      },
      {
        "time_stamp": "2023-03-31 12:02:16"
      },
      {
        "time_stamp": "2023-03-31 12:02:25"
      },
      {
        "time_stamp": "2023-03-31 12:02:35"
      },
      {
        "time_stamp": "2023-03-31 12:11:02"
      },
      {
        "time_stamp": "2023-03-31 12:13:15"
      },
      {
        "time_stamp": "2023-03-31 12:14:03"
      },
      {
        "time_stamp": "2023-03-31 12:28:38"
      },
      {
        "time_stamp": "2023-03-31 12:28:41"
      },
      {
        "time_stamp": "2023-03-31 12:29:05"
      },
      {
        "time_stamp": "2023-03-31 12:29:11"
      },
      {
        "time_stamp": "2023-03-31 12:29:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 11:29:23",
    "text": "yes, they requests still need to use private app tokens to do the authenication"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 11:29:59",
    "text": "Just authenticating through the cli allows you to pull assets down and push them back to HubSpot"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 11:30:13",
    "text": "gotcha, that makes sense"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 11:30:17",
    "text": "thx man"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 11:30:39",
    "text": "yes of course"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 11:33:05",
    "text": "follow up question, I'm attempting to update a property on a contact after receiving their id back from a third party once a job has completed on their end.\n\nonce I get the id back, i store it in a variable and pass it as the contactId in my request to update the property, however its not picking up the variable.\n\nany thoughts on what might be off here? will share code, one sec."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 11:33:41",
    "text": "It's possible you're trying to update before the variable has a value"
  },
  {
    "text": "",
    "time_stamp": "2023-03-31 11:35:36"
  },
  {
    "text": "<https://HubSpotdev.slack.com/files/T22MX8Z8B/F050VHBM0B1>",
    "time_stamp": "2023-03-31 11:35:49"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 11:36:00",
    "text": "there's nothing sensitive in there"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 11:36:14",
    "text": "cool, checking it now"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 11:36:35",
    "text": "thanks man i appreciate it"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 11:41:08",
    "text": "Ok so a couple of things do you want to try this code instead: and also is the function logging the contact id?\n```const axios = require('axios');\n\nexports.main = async ({\n    body\n}, sendResponse) =&gt; {\n    console.log(`Received POST request with body: ${JSON.stringify(body)}`);\n\n    // This is a post request from HFA to update the loan_status property\n    var contactId = body.record_id;\n    console.log(`Updating contact with record ID ${recordId} and properties { loan_status: 'Paid' }`);\n\n    let data = JSON.stringify({\n        \"properties\": {\n            \"loan_status\": \"Paid\"\n        }\n    });\n\n    let config = {\n        method: 'patch',\n        url: '<https://api.hubapi.com/crm/v3/objects/contacts/>' + contactId,\n        headers: {\n            'Authorization': 'Bearer ' + secrets.HubSpot_ACCESS_KEY,\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    axios.request(config)\n        .then((response) =&gt; {\n            console.log(JSON.stringify(response.data));\n            sendResponse({\n                statusCode: 200,\n                body: JSON.stringify({\n                    message: `Contact ${recordId} updated with loan status: Paid`\n                })\n            });\n        })\n        .catch((error) =&gt; {\n            console.log(error);\n            sendResponse({\n                statusCode: 500,\n                body: JSON.stringify({\n                    message: 'An error occurred while updating contact with loan status: Paid'\n                })\n            });\n        });\n\n};```\n"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 11:42:37",
    "edited": {
      "time_stamp": "2023-03-31 11:43:00"
    },
    "text": "yep, but its logging as `undefined` here's my test curl request:\n\ncurl -X POST -H \"Content-Type: application/json\" -d '{\"record_id\":\"*****\"}' <https://foresite360-com.sandbox.hs-sites.com/****>"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-03-31 11:43:22",
    "text": "let me give your code a shot"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 12:00:47",
    "text": "looks like i might have an issue with secrets, two questions: 1. do i need to enter my private app key in quotes when i add it as a secret? 2. how can i be sure the secret has synced with my account from my local env?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 12:01:44",
    "text": "Yeah you can do it that way"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 12:02:16",
    "text": "do i enter the secret with or without quotes?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 12:02:25",
    "text": "with quotes"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 12:02:35",
    "text": "ahh got it, thanks!"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 12:11:02",
    "text": "UNHANDLED_ERROR - Execution Time: 660msRuntime.UnhandledPromiseRejection: ReferenceError: secrets is not defined"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 12:13:15",
    "text": "```const axios = require('axios');\n\nexports.main = async ({\n    body\n}, sendResponse) =&gt; {\n    console.log(`Received POST request with body: ${JSON.stringify(body)}`);\n\n    // This is a post request from HFA to update the loan_status property\n    var contactId = body.record_id;\n    console.log(`Updating contact with record ID ${recordId} and properties { loan_status: 'Paid' }`);\n\n    let data = JSON.stringify({\n        \"properties\": {\n            \"loan_status\": \"Paid\"\n        }\n    });\n\n    let config = {\n        method: 'patch',\n        url: '<https://api.hubapi.com/crm/v3/objects/contacts/>' + contactId,\n        headers: {\n            'Authorization': 'Bearer pat-na1-xxxxxx',\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    axios.request(config)\n        .then((response) =&gt; {\n            console.log(JSON.stringify(response.data));\n            sendResponse({\n                statusCode: 200,\n                body: JSON.stringify({\n                    message: `Contact ${recordId} updated with loan status: Paid`\n                })\n            });\n        })\n        .catch((error) =&gt; {\n            console.log(error);\n            sendResponse({\n                statusCode: 500,\n                body: JSON.stringify({\n                    message: 'An error occurred while updating contact with loan status: Paid'\n                })\n            });\n        });\n\n};```\nReplace `pat-na1-xxxxxx` with your private app token"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 12:14:03",
    "text": "won't that be exposed? that's why i was hiding it as a secret"
  },
  {
    "poster": {
      "poster_name": "Hollyce Brammer",
      "poster_handle": "hollyce"
    },
    "time_stamp": "2023-03-31 12:17:54",
    "text": "<@U046C9LKJP8> I came here to look for this very thing. Have you gotten the Custom Object Search to work?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 12:28:38",
    "text": "Nope this runs on the backend"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 12:28:41",
    "text": "completely safe"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 12:29:05",
    "text": "it worked!"
  },
  {
    "poster": {
      "poster_name": "Garrett Glick",
      "poster_handle": "gglick"
    },
    "time_stamp": "2023-03-31 12:29:11",
    "text": "thank you, thank you!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-03-31 12:29:24",
    "text": "of course"
  }
]
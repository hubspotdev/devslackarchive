[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 05:34:17",
    "text": "Does anyone know of some better documentation for the fields.js stuff\n<https://developers.HubSpot.com/docs/cms/building-blocks/modules/write-fields-using-javascript>\n\nIt’s unclear how I import my global fields / field groups into other modules,\nAlso when setting visibility fields, if I add a global field inside a field group in a different module how can I set the paths correctly",
    "reply_count": 26,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-08-20 05:36:51"
      },
      {
        "time_stamp": "2024-08-20 06:09:26"
      },
      {
        "time_stamp": "2024-08-20 06:19:28"
      },
      {
        "time_stamp": "2024-08-20 06:19:55"
      },
      {
        "time_stamp": "2024-08-20 06:25:37"
      },
      {
        "time_stamp": "2024-08-20 06:25:44"
      },
      {
        "time_stamp": "2024-08-20 06:26:47"
      },
      {
        "time_stamp": "2024-08-20 06:27:05"
      },
      {
        "time_stamp": "2024-08-20 06:27:06"
      },
      {
        "time_stamp": "2024-08-20 06:27:29"
      },
      {
        "time_stamp": "2024-08-20 06:27:48"
      },
      {
        "time_stamp": "2024-08-20 06:28:13"
      },
      {
        "time_stamp": "2024-08-20 06:29:22"
      },
      {
        "time_stamp": "2024-08-20 06:33:38"
      },
      {
        "time_stamp": "2024-08-20 06:40:08"
      },
      {
        "time_stamp": "2024-08-20 06:42:04"
      },
      {
        "time_stamp": "2024-08-20 06:44:28"
      },
      {
        "time_stamp": "2024-08-20 06:51:20"
      },
      {
        "time_stamp": "2024-08-20 06:52:06"
      },
      {
        "time_stamp": "2024-08-20 06:55:49"
      },
      {
        "time_stamp": "2024-08-20 06:56:58"
      },
      {
        "time_stamp": "2024-08-20 06:57:07"
      },
      {
        "time_stamp": "2024-08-20 06:57:15"
      },
      {
        "time_stamp": "2024-08-20 06:57:35"
      },
      {
        "time_stamp": "2024-08-20 07:41:09"
      },
      {
        "time_stamp": "2024-08-20 09:52:35"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 05:36:51",
    "text": "Someones literally pasted some code and said This is code for common fields. Doesn’t say anything about how to use it in other modules, or what the code does, some comments or something would be nice"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:09:26",
    "text": "Someone pointed me in this direction some weeks ago. However, I don’t think that there are that many that use this feature due to the apparent complexity of it all and thus it’s hard to get any help or suggestions on how to go about it.\n\nAlso, generally, the documentation for everything CMS related lacks common examples of usage instead of barebones json outputs.\n\nI hope someone is able to help you on your way!"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 06:19:28",
    "text": "Thanks, was it your comment about using components with macros?\n\nI jumped in on that agreeing with you I think. I thought I’m gonna have to go the JS route since nothings gonna change anytime soon"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 06:19:55",
    "text": "I’m slowly working it out"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:25:37",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:25:44",
    "text": "I believe so :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:26:47",
    "text": "I know it sounds dumb, but maybe chatgpt can be of assistance actually? I’ve solved Hubl/json stuff with it before"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 06:27:05",
    "text": "I’ve used it a bit already!"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:27:06",
    "text": "You can reference the url above and ask it how to achieve certain outputs"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-08-20 06:27:29",
    "text": "<https://aistudio.google.com/app/prompts/new_chat>"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-08-20 06:27:48",
    "text": "i had luck with the Model \"Gemini 1.5 Pro\""
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-08-20 06:28:13",
    "text": "you can choose it on the right hand side"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 06:29:22",
    "text": "I’ve simplified it down to exporting some functions in my components file and then requiring them in my module fields.js file."
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:33:38",
    "text": "The most confusing part for me is how to set some global fields and import them into any module. Although i must admit i quickly gave up on wrapping my head around it.\n\nDid you manage to do that <@UDJV5B73R> ?"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 06:40:08",
    "edited": {
      "time_stamp": "2024-08-20 06:40:24"
    },
    "text": "Yeah but you have to do it all in js files\n\nso i have a components.js file\n\n```const componentText = (path) => {\n  let fields = {\n\t\t    required: true,\n\t\t    locked: false,\n\t\t    help_text: \"\",\n\t\t    inline_help_text: \"\",\n\t\t    name: \"button_text\",\n\t\t    label: \"Button text\",\n\t\t    type: \"text\",\n\t\t    default: \"Add a button link here\"\n\t\t}\n  return fields;\n}\nconst componentSomethingElse = (path) => {\n  let fields = {\n\t\t    required: true,\n\t\t    locked: false,\n\t\t    help_text: \"\",\n\t\t    inline_help_text: \"\",\n\t\t    name: \"button_text\",\n\t\t    label: \"Button text\",\n\t\t    type: \"text\",\n\t\t    default: \"Add a button link here\"\n\t\t}\n  return fields;\n}\nmodule.exports = {\n  componentText,\n  componentSomethingElse\n};```\nThen inside the folder mymodule.module\nI add a fields.js file (removing the fields.json (The file that HubSpot creates when you add your fields in the design manager)\n\nThen in your fields.js\n```const { componentText,componentSomethingElse } = require('../global-fields/components.js');//this is the relative path to your components.js\n\nmodule.exports = (fieldOptions) => {\n    let fields = [\n\t    componentText(),\n        componentSomethingElse()\n    ]\n    \n    return fields\n}```"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 06:42:04",
    "text": "I’m going to use the path to help with controlling fields\n\nAnd then i’m copying the json from my json files i’ve already created.\nIt is however going to be a pain the butt to actually update all my modules to use this method"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 06:44:28",
    "text": "The fields var will end up containing multiple nested deep fields and groups"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:51:20",
    "text": "Yeah it’s a hassle when it’s not done from the start of the project.\n\nI’d typically need this approach for repeatable blocks of content in a section. For example an Intro group with header-text | header-size | header-color | subheader-text | subheader-color I center-text"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:52:06",
    "text": "Would save me a lot of time not having to recreate the fields in each section as today - even with a macro"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-08-20 06:55:49",
    "text": "<@U03MU3H35R6>, <@UDJV5B73R>,  not sure but is this maybe of any help in this discussion? <https://github.com/iGoMoon/HubSpot-fields-js>"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-08-20 06:56:58",
    "text": "newer versions are linked at the top on Github"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-08-20 06:57:07",
    "text": "<https://github.com/iGoMoon/HubSpot-tools/tree/main/packages/HubSpot-fields-js>"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2024-08-20 06:57:15",
    "text": "<https://github.com/iGoMoon/HubSpot-tools>"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2024-08-20 06:57:35",
    "text": "<@UBT0AHWLD> Yeah i was looking at it earlier. Nice that someone made it. I would probably prefer my own little setup, but I might try and play around with it at some point"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-08-20 07:41:09",
    "edited": {
      "time_stamp": "2024-08-20 07:42:05"
    },
    "text": "Thanks, yeah I saw it too, might be handy, problem is i’ve already got all my fields so i’m just copying the field groups out of the existing fields.json\nBut I guess would be handy to update it.\nI’m just too attached to the gui…"
  },
  {
    "text": "Getting there…\nThe componentStyles and componentText are the only ones i’ve actually built out but should be fairly easy to carry on\n(I add the “columns.elements” to add to the path for visibility fields, when I add the component to a different module I will just put the path to the containing group there, or if it’s at the root I can leave it blank)\nThe true is to do with other conditional stuff",
    "time_stamp": "2024-08-20 09:52:35"
  },
  {
    "poster": {
      "poster_name": "Libby Noffsinger",
      "poster_handle": "libbyn"
    },
    "time_stamp": "2024-08-20 12:42:21",
    "edited": {
      "time_stamp": "2024-08-20 12:42:48"
    },
    "text": "Anyone know what variable I use to create a if/then statement for my custom module where I can filter what shows based on what contact membership list the contact is apart of?"
  },
  {
    "poster": {
      "poster_name": "Libby Noffsinger",
      "poster_handle": "libbyn"
    },
    "time_stamp": "2024-08-20 14:25:15",
    "edited": {
      "time_stamp": "2024-08-20 14:25:22"
    },
    "text": "There has to be a way to call/show the default view on smart content with a custom module.. so it's not showing the same on the front end if it's the default view or the smart content view."
  },
  {
    "poster": {
      "poster_name": "Walter",
      "poster_handle": "art.wado"
    },
    "time_stamp": "2024-08-20 16:44:47",
    "edited": {
      "time_stamp": "2024-08-20 17:10:58"
    },
    "text": "Hello, I am creating a hero-image module, and I need to capture the opacity value. any ideas?\n```.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  background-color:{{ module.color_overlay.color }}; /* Color de overlay configurable */\n  opacity:{{ module.color_overlay.opacity }};\n \n}```",
    "reply_count": 8,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-08-21 00:01:36"
      },
      {
        "time_stamp": "2024-08-21 03:06:13"
      },
      {
        "time_stamp": "2024-08-21 07:26:41"
      },
      {
        "time_stamp": "2024-08-21 07:35:47"
      },
      {
        "time_stamp": "2024-08-21 07:51:51"
      },
      {
        "time_stamp": "2024-08-21 08:22:50"
      },
      {
        "time_stamp": "2024-08-21 09:03:00"
      },
      {
        "time_stamp": "2024-08-22 07:33:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jass Negi",
      "poster_handle": "jeetunegi04"
    },
    "time_stamp": "2024-08-21 00:01:36",
    "text": "background-color: rgba({{ module.color_overlay.color|convert_rgb }}, {{ module.color_overlay.opacity * 0.01 }});"
  }
]
[
  {
    "poster": {
      "poster_name": "Terry Greenlaw",
      "poster_handle": "terry220"
    },
    "time_stamp": "2023-02-13 01:06:12",
    "text": "Very interesting. Thanks, Carter! I almost switched to just using the endpoints a couple of weeks ago when I discovered my client's original code was using an abandoned 3rd party library with some serious bugs. I'm going to take your advice and shift the library calls I currently have over to use the endpoints during the next phase of this project."
  },
  {
    "poster": {
      "poster_name": "Ali Afzal",
      "poster_handle": "ali.afzal"
    },
    "time_stamp": "2023-02-13 02:21:49",
    "text": "its happening when i set the labels and internal values different."
  },
  {
    "poster": {
      "poster_name": "JeroenBuelens",
      "poster_handle": "jeroen.buelens"
    },
    "time_stamp": "2023-02-13 03:59:54",
    "text": "if you have a public app you have the capability to create Webhook subscriptions within HubSpot. (all of those are send to one endpoint so you need to make sure you sort them out and handle each of them accordingly)\ndoing this HubSpot would notify you if deal status changed, on this you could check if said deal was 'closed won' (the webhook subscription would give you the deal id and the new value of the property that was changed). with this info you could use the rest of the api to gather all the necessary data and create your booking entity in GastroPlanner"
  },
  {
    "poster": {
      "poster_name": "JeroenBuelens",
      "poster_handle": "jeroen.buelens"
    },
    "time_stamp": "2023-02-13 04:05:34",
    "text": "<@U04HBSQ6R9S> could think of keeping track of differentials (hashes do wonders here) and only do calls if you actually need to do any updates on your contacts. if it's for keeping things up to date from another system you could eliminate a lot of calls that way.\ni don't think you need to update 5000 contacts multiple times a day?"
  },
  {
    "poster": {
      "poster_name": "Neil Junsan",
      "poster_handle": "neiljunsan09"
    },
    "time_stamp": "2023-02-13 04:28:06",
    "text": "<@U01QVR44MEY> hello sir , I did run local HubSpot and uploaded a theme on my account . Tried to install axios, node, express via local but when uploaded on the HubSpot design tools the packages is gone see image below is it normal ?\n<https://files.slack.com/files-pri/T22MX8Z8B-F04PP8SM8GZ/image.png>"
  },
  {
    "text": "",
    "time_stamp": "2023-02-13 04:29:25"
  },
  {
    "poster": {
      "poster_name": "JeroenBuelens",
      "poster_handle": "jeroen.buelens"
    },
    "time_stamp": "2023-02-13 05:27:08",
    "text": "Hey,\nI was personally involved with custom integrations between Microsoft Dynamics and HubSpot for several of our clients.\nI could refer you to my workplace Elixir Solutions (<https://www.elixir-solutions.net/>)?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:46:08",
    "text": "I would see if you notice the same thing happening with the v3 schemas endpoint"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:46:25",
    "edited": {
      "time_stamp": "2023-02-13 06:46:29"
    },
    "text": "`<https://api.hubapi.com/crm/v3/schemas/contacts>`"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:46:55",
    "text": "Also just double check that you are using the correct private app token for that account"
  },
  {
    "poster": {
      "poster_name": "Ali Afzal",
      "poster_handle": "ali.afzal"
    },
    "time_stamp": "2023-02-13 06:47:51",
    "text": "Sure! I will check these things and will update here. thanks for your response. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:48:27",
    "text": "<@U01UP68CR8W> if you use the import endpoint it would only ever be one call a day, but you are definitely right you shouldn't need to update 5000 contacts every day"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:48:32",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:48:36",
    "text": "let me know how it goes"
  },
  {
    "poster": {
      "poster_name": "JeroenBuelens",
      "poster_handle": "jeroen.buelens"
    },
    "time_stamp": "2023-02-13 06:49:59",
    "text": "was mostly saying that's its perfectly gdpr safe to keep ahold of a hash of the HubSpot contact you want to sync to, and use that to take a differential and then like 99% of your calls dissapear as \"nothing changed\""
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:50:28",
    "text": "<@U0458DFHFT9> Of course, so those properties are internal properties, you can find them using the schemas endpoints (the endpoints that allow you to configure properties) `<https://api.hubapi.com/crm/v3/schemas/meetings>`"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:51:04",
    "text": "2. these properties are supposed to be recorded on creation of the meeting, although you will need to double check that this is the case"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:51:19",
    "text": "just set up a couple of postman requests to figure it out"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 06:51:42",
    "text": "oh I like that idea a lot"
  },
  {
    "poster": {
      "poster_name": "Lorenz Cleymans",
      "poster_handle": "lorenz"
    },
    "time_stamp": "2023-02-13 06:55:00",
    "text": "We do that right now, every time we fetch data we hash it to check whether or not it has new data! :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2023-02-13 07:13:46",
    "text": "not sure what the status is on it, but we do know it is a pain point.  people clearly are wanting horizontal scroll bars in addition to vertical scrollbars :stuck_out_tongue_winking_eye:"
  },
  {
    "time_stamp": "2023-02-13 07:13:57",
    "text": "more cowbell"
  },
  {
    "time_stamp": "2023-02-13 08:00:08",
    "text": "less cowbell"
  },
  {
    "poster": {
      "poster_name": "Terry Greenlaw",
      "poster_handle": "terry220"
    },
    "time_stamp": "2023-02-13 09:19:46",
    "text": "if you scroll completely to the right and bottom on each endpoint, there should be a blurry recaptcha that is required to see the code. The kind where you have to decipher the obscured letters and numbers, and it only uses the following letters and numbers: g,q,n,m,l,1,o,0,j, and y"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2023-02-13 09:22:08",
    "text": "oh that is a great idea.  should also mess with the z-index and make it so you cannot click on that input field."
  },
  {
    "poster": {
      "poster_name": "Brandon Tuttle",
      "poster_handle": "brandon139"
    },
    "time_stamp": "2023-02-13 09:22:37",
    "text": "Does any one have any ideas for list drip request?\n\nIssue, sales vp wants his reps to be “dripped” 25 leads a day, from a reactivation list that has thousands of contacts on it.  Currently. I’m having to go every in every morning to the list, and then selecting 100 (25 x the 4 reps) and adding them to a round robin workflow.\n\nMy initial thought was to use a list api, and limit results to 100, and then enroll the results into a workflow. However, it doesnt look like the list api is updated to access tokens.  I have tried using the search contacts api, but keep getting errors when trying to do filters.\n\n(checked with HubSpot support, and they dont have any ideas)",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-02-13 12:31:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2023-02-13 09:22:52",
    "text": "terry, i think you have a future here. :grin:"
  },
  {
    "poster": {
      "poster_name": "Terry Greenlaw",
      "poster_handle": "terry220"
    },
    "time_stamp": "2023-02-13 10:33:57",
    "text": "Well, they do say the insane tend to congregate..."
  },
  {
    "poster": {
      "poster_name": "Terry Greenlaw",
      "poster_handle": "terry220"
    },
    "time_stamp": "2023-02-13 10:36:17",
    "text": "Slap on a script to toggle the visibility of the recaptcha every 5-8 seconds along with the z-index, and we're in business!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2023-02-13 12:31:58",
    "text": "Does the reactivation list exist in HubSpot? I could see something like creating a scheduled workflow that executes daily, collects contacts from that list (Custom action, GET contacts with [reactivation list id] in list_membership; limit 100), and then enroll those contacts in the round-robin. I’d also create a date field for “last sort date” or whatever as a marker for when the contact has last been processed, and then 1) update that property for those 100 contacts as a second step in the custom coded action and 2) use it as a suppression filter in the original GET call"
  },
  {
    "poster": {
      "poster_name": "Sejal Parikh (HubSpot PM)",
      "poster_handle": "sparikh"
    },
    "time_stamp": "2023-02-13 13:53:10",
    "edited": {
      "time_stamp": "2023-02-14 11:10:58"
    },
    "text": ":question: :question: *Tell us about your iframes!* :question: :question: \nHello! We want to understand how you use and build iFrames that are added to CRM pages. It’ll help us a bunch if you take 5 minutes of your time to fill out this short survey: <https://forms.gle/G3enCX3TXNFaKLJTA>\n&gt; All survey results are going to be private and will be kept confidential.\n"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 14:37:43",
    "text": "Hello!\nI successfully created a private app and was able to extract deals, but the issue is i am getting only 10 records. So looks like i have to read by pages but not able to find how in the docs. How do i proceed next? please help!"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 14:58:56",
    "text": "hey!\nI successfully created a private app and was able to extract deals, but the issue is i am getting only 10 records. So looks like i have to read by pages but not able to find how in the docs. How do i proceed next?",
    "reply_count": 48,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-02-13 15:04:14"
      },
      {
        "time_stamp": "2023-02-13 15:04:28"
      },
      {
        "time_stamp": "2023-02-13 15:09:47"
      },
      {
        "time_stamp": "2023-02-13 15:09:56"
      },
      {
        "time_stamp": "2023-02-13 15:16:41"
      },
      {
        "time_stamp": "2023-02-13 15:16:55"
      },
      {
        "time_stamp": "2023-02-13 15:17:08"
      },
      {
        "time_stamp": "2023-02-13 15:19:51"
      },
      {
        "time_stamp": "2023-02-13 15:20:16"
      },
      {
        "time_stamp": "2023-02-13 15:21:15"
      },
      {
        "time_stamp": "2023-02-13 15:21:40"
      },
      {
        "time_stamp": "2023-02-13 15:22:26"
      },
      {
        "time_stamp": "2023-02-13 15:22:39"
      },
      {
        "time_stamp": "2023-02-13 15:23:44"
      },
      {
        "time_stamp": "2023-02-13 15:24:00"
      },
      {
        "time_stamp": "2023-02-13 15:24:29"
      },
      {
        "time_stamp": "2023-02-13 15:29:06"
      },
      {
        "time_stamp": "2023-02-13 15:29:19"
      },
      {
        "time_stamp": "2023-02-13 15:29:28"
      },
      {
        "time_stamp": "2023-02-13 15:30:07"
      },
      {
        "time_stamp": "2023-02-13 15:30:21"
      },
      {
        "time_stamp": "2023-02-13 15:30:28"
      },
      {
        "time_stamp": "2023-02-13 15:30:43"
      },
      {
        "time_stamp": "2023-02-13 15:30:49"
      },
      {
        "time_stamp": "2023-02-13 15:32:57"
      },
      {
        "time_stamp": "2023-02-13 15:33:09"
      },
      {
        "time_stamp": "2023-02-13 15:33:59"
      },
      {
        "time_stamp": "2023-02-13 15:34:38"
      },
      {
        "time_stamp": "2023-02-13 15:35:08"
      },
      {
        "time_stamp": "2023-02-13 15:35:41"
      },
      {
        "time_stamp": "2023-02-13 15:36:14"
      },
      {
        "time_stamp": "2023-02-13 15:36:19"
      },
      {
        "time_stamp": "2023-02-13 15:36:27"
      },
      {
        "time_stamp": "2023-02-13 15:36:31"
      },
      {
        "time_stamp": "2023-02-13 15:36:40"
      },
      {
        "time_stamp": "2023-02-13 15:37:51"
      },
      {
        "time_stamp": "2023-02-13 15:38:15"
      },
      {
        "time_stamp": "2023-02-13 15:38:21"
      },
      {
        "time_stamp": "2023-03-31 12:02:40"
      },
      {
        "time_stamp": "2023-03-31 12:30:10"
      },
      {
        "time_stamp": "2023-03-31 12:30:21"
      },
      {
        "time_stamp": "2023-03-31 12:31:11"
      },
      {
        "time_stamp": "2023-03-31 12:31:13"
      },
      {
        "time_stamp": "2023-03-31 12:39:41"
      },
      {
        "time_stamp": "2023-03-31 13:16:45"
      },
      {
        "time_stamp": "2023-03-31 14:01:45"
      },
      {
        "time_stamp": "2023-03-31 14:03:50"
      },
      {
        "time_stamp": "2023-03-31 14:05:14"
      }
    ]
  },
  {
    "text": "You're going to want to use the `after` parameter to get the next page",
    "time_stamp": "2023-02-13 15:04:14"
  },
  {
    "text": "",
    "time_stamp": "2023-02-13 15:04:28"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:09:47",
    "text": "You should also be able to set the limit parameter to 100 instead of 10"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:09:56",
    "text": "that will help cut your apis calls by a lot"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-02-13 15:16:41",
    "text": "but how do i know after which dealid?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:16:55",
    "text": "it comes back in the response from the first call"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:17:08",
    "edited": {
      "time_stamp": "2023-02-13 15:17:25"
    },
    "text": "`response.paging.next.after`"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:19:51",
    "text": "so will it be extracting from 0 to 100 and so on then?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:20:16",
    "text": "Yep so the first call would be 0-100 and the next would be 101-200 etc etc"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:21:15",
    "text": "What exactly are you trying to do? Exporting might be a better option"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:21:40",
    "text": "i want to extract all the deals using Alteryx"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:22:26",
    "text": "dont want to manually export data to excel everyday"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:22:39",
    "text": "yeah that would definitely be tiring"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:23:44",
    "text": "so creating a loop in alteryx, so if i know how many deals i have overall like 1000 or so then i can loop it for 10 times with paging.next.after respose and extract"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:24:00",
    "text": "is there anyway i can find total number of deals?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:24:29",
    "text": "yep you could use the search endpoint to figure out how many deals you have"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:29:06",
    "text": "its throwing error"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:29:19",
    "text": "saying method not allowed"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:29:28",
    "text": "are you using GET"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:30:07",
    "text": "no POST"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:30:21",
    "text": "you want to use GET"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:30:28",
    "text": "just tried get to, its saying the same"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:30:43",
    "text": "are you using postman?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:30:49",
    "text": "can I see the request?"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:32:57",
    "text": "yes postman"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:33:09",
    "text": "can you send a screenshot"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:33:59",
    "text": "GET /crm/v3/objects/deals/search HTTP/1.1\nHost: <http://api.hubapi.com|api.hubapi.com>\nContent-Type: application/json\nAuthorization: Bearer pat-xxx-xxxxxxx-xxxxx-xxx-xx-xx"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:34:38",
    "text": "oh for the search endpoint you want to use POST and you also have to provide the body of the request to filter (but in your case you just want all of them)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:35:08",
    "text": "I thought you were still on the non search endpoint"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:35:41",
    "text": "i want all of them and i used POST too"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:36:14",
    "text": "POST /crm/v3/objects/deals/search HTTP/1.1\nHost: <http://api.hubapi.com|api.hubapi.com>\nContent-Type: application/json\nAuthorization: Bearer"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:36:19",
    "text": "```{\n    \"filterGroups\":[\n      {\n        \"filters\":[\n          {\n            \"propertyName\": \"hs_object_id\",\n            \"operator\": \"HAS_PROPERTY\"\n          }\n        ]\n      }\n    ]\n  }```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:36:27",
    "text": "You can use this as the body of the request"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:36:31",
    "text": "type JSON"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:36:40",
    "text": "Search endpoint docs: <https://developers.HubSpot.com/docs/api/crm/search>"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:37:51",
    "text": "it worked with this body"
  },
  {
    "poster": {
      "poster_name": "Shalini Polimetla",
      "poster_handle": "spolimetla"
    },
    "time_stamp": "2023-02-13 15:38:15",
    "text": "thank you so much Carter!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-13 15:38:21",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Terry Greenlaw",
      "poster_handle": "terry220"
    },
    "time_stamp": "2023-02-13 20:19:02",
    "text": "What is the endpoint to create a calculated property that is a count() or max() of an associated object, and what are the variable names/values that need to be passed?\nUsing the GUI, I created a calculated property for company that counts associated custom objects.\nWhen I query for that property through the API, it returns a fieldType of \"calculation_rollup\", and no information regarding it being a count(), or of the associated object, or of the property being counted on the associated object.\nI then tried to create a similar calculated property through the \"<https://api.hubapi.com/crm/v3/properties/#{type}>\" endpoint with a fieldType of \"calculation_rollup\", but it throws an error saying \"Enum type must be one of: [calculation_equation, checkbox, number, textarea, booleancheckbox, file, text, date, radio, select]\".\nWhich API endpoint will accept the \"calculation_rollup\" fieldType, and what other key/values do I need to pass?"
  }
]
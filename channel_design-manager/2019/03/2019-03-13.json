[
  {
    "poster": {
      "poster_name": "Muhammad Attique",
      "poster_handle": "attique"
    },
    "time_stamp": "2019-03-13 06:20:51",
    "text": "Hi All,\nHow I can update the contact city of all contacts by API (Bulk Update)?"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 09:39:43",
    "text": "Is there a way to get the actual query string values in the template preview?"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 09:40:15",
    "text": "It doesn’t seem like it, I’m not seeing my query string showing up in the request.query_dict or query."
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 09:55:46",
    "text": "Sorry, I should say I’m not seeing the value I’m putting into the query string. It just seems to be reading other variables being passed in by the template previewer."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 13:10:38",
    "text": "If you do not specify what name you are looking for it will use all of them all the time."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 13:11:11",
    "edited": {
      "time_stamp": "2019-03-13 13:11:34"
    },
    "text": "so this `?name=value` is not the same as this `?name=value&amp;name2=value2`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 13:12:33",
    "text": "you can use `{{ request.quest_dict.name }}`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 13:12:45",
    "text": "<@UF8D6BJCA>"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2019-03-13 13:17:02",
    "text": "Worth noting that this ^ will work in the static / `preview without display options` , but not in `/design-previewer` / `preview with display options`, since the live previewer is iframing in the `<http://preview.hs-sites.com/|preview.hs-sites.com/>` content, query params passed to the `<http://app.HubSpot.com|app.HubSpot.com>` address won’t be reachable by the hubl inside the iframe."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 13:17:35",
    "text": "true"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 13:17:47",
    "edited": {
      "time_stamp": "2019-03-13 13:17:52"
    },
    "text": "you can fake it using variables"
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 13:49:39",
    "text": "I figured out I can pass in the query string by just altering the iframe src directly."
  },
  {
    "poster": {
      "poster_name": "Josh Anthony",
      "poster_handle": "janthony"
    },
    "time_stamp": "2019-03-13 13:51:05",
    "text": "Which works for just testing that I can pull the vars out of the string."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-13 16:19:27",
    "text": ":slightly_smiling_face:"
  }
]
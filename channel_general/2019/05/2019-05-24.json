[
  {
    "poster": {
      "poster_name": "Jenna Schultz",
      "poster_handle": "jenna"
    },
    "time_stamp": "2019-05-24 07:52:48",
    "text": "Hi all - has anyone successfully changed a blog post filter of authors so that it’s a dropdown instead of the standard list? Any direction/tips are appreciated. Thanks!",
    "reply_count": 9,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-05-24 08:08:14"
      },
      {
        "time_stamp": "2019-05-24 08:13:04"
      },
      {
        "time_stamp": "2019-05-24 08:25:54"
      },
      {
        "time_stamp": "2019-05-24 08:25:57"
      },
      {
        "time_stamp": "2019-05-24 08:26:13"
      },
      {
        "time_stamp": "2019-05-24 08:26:27"
      },
      {
        "time_stamp": "2019-05-24 08:26:30"
      },
      {
        "time_stamp": "2019-05-27 08:49:39"
      },
      {
        "time_stamp": "2019-05-27 08:50:13"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 08:08:14",
    "edited": {
      "time_stamp": "2019-05-24 08:08:45"
    },
    "text": "2 ways to do it. since there isn’t as far as I can remember a blog_authors() function, you can loop through the last 200 posts, grabbing the authors throwing into an array and using |unique on it. or use javascript on the HS blog post filter to convert the html for that area to be a select field.\n\nor ask <@U22PJPGK0> really really nicely, and they might make a blog_authors function because  they’re not gonna like my HubL method above."
  },
  {
    "poster": {
      "poster_name": "Jenna Schultz",
      "poster_handle": "jenna"
    },
    "time_stamp": "2019-05-24 08:13:04",
    "text": "<@U22PJPGK0> My team and I would be so super grateful (as I’m sure others would be as well), if you could make a blog_authors function. We’re dealing with a client that is on their 1000th round of changes, so the easier we can make this, the better :wink:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-05-24 08:25:54",
    "text": "There is a filter: <https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#blog-authors>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-05-24 08:25:57",
    "text": "used it many of times"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 08:26:13",
    "text": "roflmao"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-05-24 08:26:27",
    "text": "I turned that around pretty quickly, didn't I?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 08:26:30",
    "text": "blog_authors exists haha"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 10:17:17",
    "edited": {
      "time_stamp": "2019-05-24 10:21:53"
    },
    "text": "*is there any way to clone an entire portals pages and design manager files to a developer portal?*\nGot a unique situation where we’re modifying files for another developer, that developer is very active in the files, and we don’t want to conflict.\n\nOver-all we need the pages that are on that portal to test against.\nIf it were possible to duplicate the portals pages and files to a dev portal we could safely work on that and manually use FTP to sync batches of files as needed."
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-05-24 12:06:30",
    "text": "We had issues getting the JavaScript version of the import/export tool to work (especially on windows, and definately when it came to html content, etc). So I wrote a .NET application which interacts with the HubSpot Rest APIs. It currently only scans through a defined blog, gets them all, then creates a cloned version in a different profile. I didn't do pages, but the APIs really shouldn't be that different. One of the tricks is making sure you remember that the APIs only show 900 items at a time, so you have to loop through the batches until there are no more to migrate."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-05-24 12:09:24",
    "text": "and the .net app can be all yours <@U7SL518D6> with a one time payment of $999.99 just make check payable to `AJ LaPorte and Rob Schall` (in all seriousness, his app helped our migration for our rebrand and saved us ALOT of hours)",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-05-24 12:10:27"
      },
      {
        "time_stamp": "2019-05-24 12:10:49"
      },
      {
        "time_stamp": "2019-05-24 12:11:05"
      },
      {
        "time_stamp": "2019-05-24 12:11:05"
      },
      {
        "time_stamp": "2019-05-24 12:11:38"
      },
      {
        "time_stamp": "2019-05-24 12:12:07"
      },
      {
        "time_stamp": "2019-05-24 12:12:26"
      },
      {
        "time_stamp": "2019-05-24 12:12:28"
      },
      {
        "time_stamp": "2019-05-24 12:14:07"
      },
      {
        "time_stamp": "2019-05-24 12:17:13"
      },
      {
        "time_stamp": "2019-05-24 12:57:21"
      },
      {
        "time_stamp": "2019-05-24 12:57:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 12:10:27",
    "text": "? who’s app?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-05-24 12:10:49",
    "text": "<@UBLH6MN2Z>'s .net app he made"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-05-24 12:11:05",
    "text": "i guess app is a bad word but his .net application"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 12:11:05",
    "text": "O_O"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-05-24 12:11:38",
    "text": "Yep. There aren't really any \"apps\" out there to migrate or do any large scale changes like this. But the HubSpot APIs make it really easy when you get used to using them."
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-05-24 12:12:07",
    "text": "That's all my stuff really does. Pulls the data out, makes a few changes (looks for domain names, etc and swaps them out with .Replace calls) and then puts everything back in."
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-05-24 12:12:26",
    "text": "If it was a new profile, you'd need to account for the different authors (or reset them to a generic account, etc)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 12:12:28",
    "text": "so do you have that open sourced or?"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-05-24 12:14:07",
    "text": "Are you able to compile and run a .NET app? I can strip out our keys from it and let you have the core components of it. We haven't really finished building it out to be end user friendly yet (that's coming down the road)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 12:17:13",
    "edited": {
      "time_stamp": "2019-05-24 12:17:34"
    },
    "text": "well .NET isn’t our cup of tea over here, but  thought I’d ask. I’d say no need to sending it over. We’re investigating going another route for now.\n\nI do think though that tool would be hugely valuable to the dev community if you either open sourced it or sold it"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-05-24 12:57:21",
    "text": "AJ and I thought so as well. Its on the future docket I think. Just busy busy. :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2019-05-24 12:57:29",
    "text": "Let me know if you get stuck and need any help though."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-05-24 13:31:43",
    "text": "I am happy to check in on this, but I am actually not positive what is wrong with it. What's going on with it?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 13:32:44",
    "text": "back when it was introduced, it was half baked, the UI side of it worked but the output code side was mostly if not completely broken"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 13:33:01",
    "text": "so most of us never used the field even though we like the idea of it"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-05-24 13:33:56",
    "text": "Hhhmmmm weird, could you send me an example?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 13:34:26",
    "text": "I would have to create one. like I said haven’t used it since the first few weeks after it was announced."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 13:34:32",
    "text": "tried to use it for a follow me widget"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-05-24 13:34:39",
    "text": "Seems to be working for me at the moment <https://2359872.hs-sites.com/-temporary-slug-2088f151-3749-44a8-9171-c78c27dff2f6?hs_preview=PiikqUZM-9927618644>"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-05-24 13:34:55",
    "text": "Feel free to send along an example of the issue if you come across it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 13:35:38",
    "text": "will do. I’ll give the field another try."
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-05-24 13:35:50",
    "text": ":thumbsup: :snowman_without_snow:"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-05-24 13:35:55",
    "text": "Happy Friday btw!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 13:36:17",
    "text": "Also Cool that you guys are embedding via inline svg always love it when embedding inline svgs is easier (love em for animations)\n\nHappy Friday!"
  },
  {
    "poster": {
      "poster_name": "Sam Gerber",
      "poster_handle": "sgerber"
    },
    "time_stamp": "2019-05-24 14:11:25",
    "text": "Hey is it possible to have an if statement check to see if a variable is not equal to multiple values? e.g.\n`{% if topic.name != \"Article\" OR \"Offer\" OR \"Video\" OR \"Podcast\" OR \"Webinar\" %}`"
  },
  {
    "poster": {
      "poster_name": "Sam Gerber",
      "poster_handle": "sgerber"
    },
    "time_stamp": "2019-05-24 14:11:36",
    "edited": {
      "time_stamp": "2019-05-24 14:11:45"
    },
    "text": "How do I do that correctly, if possible?"
  },
  {
    "poster": {
      "poster_name": "Sam Gerber",
      "poster_handle": "sgerber"
    },
    "time_stamp": "2019-05-24 14:11:56",
    "text": "I'd like to avoid multiple elifs"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 14:14:16",
    "text": "I believe I’ve done that before"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 14:14:32",
    "text": "I’ll be honest though you’re gonna have to test  it"
  },
  {
    "poster": {
      "poster_name": "Sam Gerber",
      "poster_handle": "sgerber"
    },
    "time_stamp": "2019-05-24 14:14:45",
    "text": "I'll take anything I can get! You're the best <@U7SL518D6>"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 14:14:53",
    "text": "you could test by doing something like\n`{% if 0 or 1 %}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-05-24 14:15:01",
    "text": "if whatever you put after it gets printed you know it works"
  },
  {
    "poster": {
      "poster_name": "Sam Gerber",
      "poster_handle": "sgerber"
    },
    "time_stamp": "2019-05-24 14:17:11",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "Sam Gerber",
      "poster_handle": "sgerber"
    },
    "time_stamp": "2019-05-24 14:28:33",
    "text": "Couldn't get it to work. But found a work around. Thanks <@U7SL518D6>"
  },
  {
    "text": "",
    "time_stamp": "2019-05-24 14:29:12"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-24 14:29:58",
    "text": "that would do it :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-24 14:30:53",
    "text": "ps, i think you were looking for  the ticks next to the 1 key for preformatted"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-24 14:31:05",
    "text": "``` {% set post_types = ['Article', 'Offer', 'Video', 'Podcast', 'Webinar'] %}\n\t    {% if topic.name is not within post_types %}```"
  },
  {
    "poster": {
      "poster_name": "Sam Gerber",
      "poster_handle": "sgerber"
    },
    "time_stamp": "2019-05-24 14:31:29",
    "text": "Oh right! Thanks"
  }
]
[
  {
    "poster": {
      "poster_name": "Jeff W",
      "poster_handle": "jwaterfall"
    },
    "time_stamp": "2024-01-23 01:06:01",
    "text": "Too bad there’s nothing w/ CMS. Currently I’m looking at just running a job to sync page and hubdb data. Thanks for the info!"
  },
  {
    "poster": {
      "poster_name": "Aqsa Qayyum",
      "poster_handle": "aqsa"
    },
    "time_stamp": "2024-01-23 01:16:31",
    "text": "Hey Everyone!\n\nCompletely new beginner in HubSpot integration.\nI have created an *public application* and *done with it's authentication*.\nNow, I am trying to create a *custom code action* in my application. I hit the following api with dummy inputs, I got *success* response from the API but How can I See/visualize this newly created action on my HubSpot account or app ? and after submission of the actions inputs How can I call my platform API ?  (its Client v8 and Node)\n\n```<http://app.post|app.post>('/action', async (req, res) =&gt; {\n    try {\n        const requestData = \n        {\n            \"actionUrl\": \"<https://webhook.site/ad466dc7-b126-4ce1-bc7d-3f672e50d277>\",\n            \"objectTypes\": [\n                \"CONTACT\"\n            ],\n            \"inputFields\": [\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"staticInput\",\n                        \"type\": \"string\",\n                        \"fieldType\": \"text\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"STATIC_VALUE\"\n                    ],\n                    \"isRequired\": true\n                },\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"objectInput\",\n                        \"type\": \"string\",\n                        \"fieldType\": \"text\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"OBJECT_PROPERTY\"\n                    ],\n                    \"isRequired\": true\n                },\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"optionsInput\",\n                        \"type\": \"enumeration\",\n                        \"fieldType\": \"select\",\n                        \"optionsUrl\": \"<https://webhook.site/94d09471-6f4c-4a7f-bae2-c9a585dd41e0>\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"STATIC_VALUE\"\n                    ]\n                }\n            ],\n            \"inputFieldDependencies\": [\n                {\n                    \"dependencyType\": \"SINGLE_FIELD\",\n                    \"dependentFieldNames\": [\n                        \"objectInput\"\n                    ],\n                    \"controllingFieldName\": \"staticInput\"\n                }\n            ],\n            \"outputFields\": [\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"myOutput\",\n                        \"type\": \"string\",\n                        \"fieldType\": \"text\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"STATIC_VALUE\"\n                    ]\n                }\n            ],\n            \"objectRequestOptions\": {\n                \"properties\": [\n                    \"email\"\n                ]\n            },\n            \"labels\": {\n                \"en\": {\n                    \"inputFieldLabels\": {\n                        \"staticInput\": \"Static Input\",\n                        \"objectInput\": \"Object Property Input\",\n                        \"optionsInput\": \"External Options Input\"\n                    },\n                    \"actionName\": \"My Extension\",\n                    \"actionDescription\": \"My Extension Description\",\n                    \"appDisplayName\": \"My App Display Name\",\n                    \"actionCardContent\": \"My Action Card Content\"\n                }\n            },\n            \"functions\": [\n                {\n                    \"functionType\": \"POST_ACTION_EXECUTION\",\n                    \"functionSource\": \"exports.main = (event, callback) =&gt; {\\r\\n  callback({\\r\\n    outputFields: {\\r\\n      myOutput: \\\"example output value\\\"\\r\\n    }\\r\\n  });\\r\\n}\"\n                },\n                {\n                    \"functionType\": \"POST_FETCH_OPTIONS\",\n                    \"functionSource\": \"exports.main = (event, callback) =&gt; {\\r\\n  callback({\\r\\n    \\\"options\\\": [{\\r\\n        \\\"label\\\": \\\"Big Widget\\\",\\r\\n        \\\"description\\\": \\\"Big Widget\\\",\\r\\n        \\\"value\\\": \\\"10\\\"\\r\\n      },\\r\\n      {\\r\\n        \\\"label\\\": \\\"Small Widget\\\",\\r\\n        \\\"description\\\": \\\"Small Widget\\\",\\r\\n        \\\"value\\\": \\\"1\\\"\\r\\n      }\\r\\n    ]\\r\\n  });\\r\\n}\"\n                }\n            ]\n        };\n\n        const response = await <http://axios.post|axios.post>(`<https://api.HubSpot.com/automation/v4/actions/{appId}?hapikey={developer_API_key}>`, requestData, {\n            headers: {\n                // 'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        });\n        console.log(\"this is response ====\", response);\n     \n\n    } catch (error) {\n        console.error('Error during creating action:', error.response ? error.response.data : error.message);\n        res.status(500).send('Error during action');\n    }\n});```",
    "reply_count": 37,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-23 08:23:01"
      },
      {
        "time_stamp": "2024-01-23 08:23:57"
      },
      {
        "time_stamp": "2024-01-23 08:34:28"
      },
      {
        "time_stamp": "2024-01-23 08:36:37"
      },
      {
        "time_stamp": "2024-01-23 08:41:25"
      },
      {
        "time_stamp": "2024-01-23 08:48:44"
      },
      {
        "time_stamp": "2024-01-23 08:48:58"
      },
      {
        "time_stamp": "2024-01-23 08:49:45"
      },
      {
        "time_stamp": "2024-01-23 08:50:07"
      },
      {
        "time_stamp": "2024-01-23 08:58:37"
      },
      {
        "time_stamp": "2024-01-23 08:58:43"
      },
      {
        "time_stamp": "2024-01-23 08:58:58"
      },
      {
        "time_stamp": "2024-01-23 08:59:17"
      },
      {
        "time_stamp": "2024-01-23 09:00:11"
      },
      {
        "time_stamp": "2024-01-23 09:09:50"
      },
      {
        "time_stamp": "2024-01-23 09:14:14"
      },
      {
        "time_stamp": "2024-01-23 09:44:17"
      },
      {
        "time_stamp": "2024-01-23 09:44:50"
      },
      {
        "time_stamp": "2024-01-23 09:47:53"
      },
      {
        "time_stamp": "2024-01-23 09:50:45"
      },
      {
        "time_stamp": "2024-01-23 09:51:30"
      },
      {
        "time_stamp": "2024-01-24 09:49:01"
      },
      {
        "time_stamp": "2024-01-24 09:51:06"
      },
      {
        "time_stamp": "2024-01-24 09:51:11"
      },
      {
        "time_stamp": "2024-01-24 09:51:54"
      },
      {
        "time_stamp": "2024-01-24 09:55:54"
      },
      {
        "time_stamp": "2024-01-24 09:56:40"
      },
      {
        "time_stamp": "2024-01-24 10:13:59"
      },
      {
        "time_stamp": "2024-01-24 10:16:45"
      },
      {
        "time_stamp": "2024-01-24 10:20:54"
      },
      {
        "time_stamp": "2024-01-24 10:21:09"
      },
      {
        "time_stamp": "2024-01-24 10:21:31"
      },
      {
        "time_stamp": "2024-01-24 10:22:00"
      },
      {
        "time_stamp": "2024-01-24 10:23:59"
      },
      {
        "time_stamp": "2024-01-24 10:27:59"
      },
      {
        "time_stamp": "2024-01-24 10:49:23"
      },
      {
        "time_stamp": "2024-01-24 13:25:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Clayton Sardella",
      "poster_handle": "clayton.sardella"
    },
    "time_stamp": "2024-01-23 06:59:54",
    "text": "Python supported libraries\nIf you're using Python, you can load the following libraries with an import statement at the top of your code. The import statement should be formatted as `from [libraryname] import [item]`, such as  `from redis.client import redis`.\n    ◦ requests 2.28.2\n• @HubSpot/api-client ^8\n    ◦ google-api-python-client 2.74.0\n    ◦ mysql-connector-python 8.0.32\n    ◦ redis 4.4.2\n    ◦ nltk 3.8.1\nIf you're using anything from the standard library, you can use `import`, such as  `import os`."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:23:01",
    "text": "pass in the published: true parameter"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:23:57",
    "text": "```Publishing custom actions \nBy default, custom actions are created in an unpublished state. Unpublished custom actions are only visible in the developer portal associated with the corresponding HubSpot application. To make a custom action visible to users, update the published flag on your action definition to true. If an action is unpublished, portals that have already added the action to their workflow will still be able to edit and execute already added actions. But, they won't be able to add the action again. ```\n"
  },
  {
    "poster": {
      "poster_name": "Aqsa Qayyum",
      "poster_handle": "aqsa"
    },
    "time_stamp": "2024-01-23 08:34:28",
    "text": "<@U01QVR44MEY> I am not able to see created actions on my application, if \"Unpublished custom actions are only visible in the developer portal associated with the corresponding HubSpot application\", How can I view them on my created app ?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:36:37",
    "text": "yep yep, for all portals that aren't your dev test portal the action won't show up"
  },
  {
    "text": "ok. But I am not able to see created actions on my developer account too.\nI have attached following screenshoot. This is my developer account and my application. Now where I can view actions in my application ?",
    "time_stamp": "2024-01-23 08:41:25"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:48:44",
    "text": "So that's your developer app account, not a developer test account"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:48:58",
    "text": "Let me pull up the docs for setting up a test account"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:49:45",
    "text": "<https://legacydocs.HubSpot.com/docs/faq/how-do-i-create-a-test-account>"
  },
  {
    "text": "I think I have developer test account too.",
    "time_stamp": "2024-01-23 08:50:07"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:58:37",
    "text": "So if you pull up that account, does it show in the workflows?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:58:43",
    "text": "Did you install the app on that account?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:58:58",
    "text": "Does the app show in the Installed Apps section of settings?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 08:59:17",
    "text": "Did you complete OAuth?"
  },
  {
    "poster": {
      "poster_name": "Aqsa Qayyum",
      "poster_handle": "aqsa"
    },
    "time_stamp": "2024-01-23 09:00:11",
    "text": "Yeah OAuth is completed for my app. Let me check if I have installed my app on developer test account or not."
  },
  {
    "text": "I installed the app in my developer test account. it is listed in \"connected applications\" but When I checked the workflows it is not visible there as attached in the screenshot. Am I missing something ?",
    "time_stamp": "2024-01-23 09:09:50"
  },
  {
    "poster": {
      "poster_name": "Zak Jacobson",
      "poster_handle": "zak682"
    },
    "time_stamp": "2024-01-23 09:12:24",
    "text": "There would be one task created per update. When the task is created, the values of these properties would be added to the task."
  },
  {
    "poster": {
      "poster_name": "Zak Jacobson",
      "poster_handle": "zak682"
    },
    "time_stamp": "2024-01-23 09:14:06",
    "text": "&gt;  would it make more sense to just create the task via the api and then associate it with the company?\nyes… but the business users (who live &amp; breathe HubSpot) wanted to have the flexibility that would come with maintaining the event creation. I see the benefit there, but this race condition makes it too risky."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 09:14:14",
    "text": "Interesting, I would try to set the published true parameter and see if that changes anything"
  },
  {
    "poster": {
      "poster_name": "Zak Jacobson",
      "poster_handle": "zak682"
    },
    "time_stamp": "2024-01-23 09:16:42",
    "text": "with that being said, we’re going with this approach unless there’s another option.  I’m not familiar with the workflow API yet — I only looked for an API to trigger a workflow - I’ll look at the subscription API.\n\n&gt;  also use queue type function\nI assume you mean that the Company property modifications could go through a queue that can throttle the changes giving the workflow enough time to finish?"
  },
  {
    "text": "Yeah it is visible with publish. : true.\nThis is my action data:\n\nHow can I give name to my action as \"Post Card\"\n```<http://app.post|app.post>('/action', async (req, res) =&gt; {\n    try {\n        const requestData = \n        {\n            \"actionUrl\": \"<https://webhook.site/ad466dc7-b126-4ce1-bc7d-3f672e50d277>\",\n            \"objectTypes\": [\n                \"CONTACT\"\n            ],\n            \"inputFields\": [\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"staticInput\",\n                        \"type\": \"string\",\n                        \"fieldType\": \"text\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"STATIC_VALUE\"\n                    ],\n                    \"isRequired\": true\n                },\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"objectInput\",\n                        \"type\": \"string\",\n                        \"fieldType\": \"text\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"OBJECT_PROPERTY\"\n                    ],\n                    \"isRequired\": true\n                },\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"optionsInput\",\n                        \"type\": \"enumeration\",\n                        \"fieldType\": \"select\",\n                        \"optionsUrl\": \"<https://webhook.site/94d09471-6f4c-4a7f-bae2-c9a585dd41e0>\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"STATIC_VALUE\"\n                    ]\n                }\n            ],\n            \"inputFieldDependencies\": [\n                {\n                    \"dependencyType\": \"SINGLE_FIELD\",\n                    \"dependentFieldNames\": [\n                        \"objectInput\"\n                    ],\n                    \"controllingFieldName\": \"staticInput\"\n                }\n            ],\n            \"outputFields\": [\n                {\n                    \"typeDefinition\": {\n                        \"name\": \"myOutput\",\n                        \"type\": \"string\",\n                        \"fieldType\": \"text\"\n                    },\n                    \"supportedValueTypes\": [\n                        \"STATIC_VALUE\"\n                    ]\n                }\n            ],\n            \"objectRequestOptions\": {\n                \"properties\": [\n                    \"email\"\n                ]\n            },\n            \"labels\": {\n                \"en\": {\n                    \"inputFieldLabels\": {\n                        \"staticInput\": \"Static Input\",\n                        \"objectInput\": \"Object Property Input\",\n                        \"optionsInput\": \"External Options Input\"\n                    },\n                    \"actionName\": \"My Extension\",\n                    \"actionDescription\": \"My Extension Description\",\n                    \"appDisplayName\": \"My App Display Name\",\n                    \"actionCardContent\": \"My Action Card Content\"\n                }\n            },\n            \"functions\": [\n                {\n                    \"functionType\": \"POST_ACTION_EXECUTION\",\n                    \"functionSource\": \"exports.main = (event, callback) =&gt; {\\r\\n  callback({\\r\\n    outputFields: {\\r\\n      myOutput: \\\"example output value\\\"\\r\\n    }\\r\\n  });\\r\\n}\"\n                },\n                {\n                    \"functionType\": \"POST_FETCH_OPTIONS\",\n                    \"functionSource\": \"exports.main = (event, callback) =&gt; {\\r\\n  callback({\\r\\n    \\\"options\\\": [{\\r\\n        \\\"label\\\": \\\"Big Widget\\\",\\r\\n        \\\"description\\\": \\\"Big Widget\\\",\\r\\n        \\\"value\\\": \\\"10\\\"\\r\\n      },\\r\\n      {\\r\\n        \\\"label\\\": \\\"Small Widget\\\",\\r\\n        \\\"description\\\": \\\"Small Widget\\\",\\r\\n        \\\"value\\\": \\\"1\\\"\\r\\n      }\\r\\n    ]\\r\\n  });\\r\\n}\"\n                }\n            ]\n        };\n\n        const response = await <http://axios.post|axios.post>(`<https://api.HubSpot.com/automation/v4/actions/{appId}?hapikey={developer_API_key}>`, requestData, {\n            headers: {\n                // 'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        });\n        console.log(\"this is response ====\", response);\n     \n\n    } catch (error) {\n        console.error('Error during creating action:', error.response ? error.response.data : error.message);\n        res.status(500).send('Error during action');\n    }\n});```",
    "time_stamp": "2024-01-23 09:44:17"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 09:44:50",
    "text": "nice!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 09:47:53",
    "text": "The name will pop up shortly, currently running through the translation service"
  },
  {
    "poster": {
      "poster_name": "Aqsa Qayyum",
      "poster_handle": "aqsa"
    },
    "time_stamp": "2024-01-23 09:50:45",
    "text": "yeah it is showing up now :partyparrot:  Thank you so much for your support. I truly appreciate."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-01-23 09:51:30",
    "text": "of course"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-01-23 11:38:55",
    "text": "yes — combine the workflow api with a queue, if updated in a few minutes, back off until certain amount of time, etc. store in DB until another update happens… that type of stuff"
  },
  {
    "poster": {
      "poster_name": "Daniel Klein",
      "poster_handle": "klein"
    },
    "time_stamp": "2024-01-23 12:59:02",
    "text": "Hey all, is there a way to make workflows queue more executions? For example I have a deal and a property changed I want to execute a workflow and if I change another property I want to queue another execution instead of it just saying it is already enrolled."
  },
  {
    "poster": {
      "poster_name": "Delali Dzirasa",
      "poster_handle": "ddzirasa"
    },
    "time_stamp": "2024-01-23 14:28:57",
    "text": "Not sure if I am asking this in the right channel.  I’m trying to understand if it is possible to create a custom object based on a form submission? We have a existing custom object and some manual work going on that we need to create the custom object then send a form to collect additional information.  Any better way to do this? If not is this possible natively or via some third party app?\n\n<https://community.HubSpot.com/t5/Releases-and-Updates/Now-Live-Custom-Objects-Properties-available-in-Forms/ba-p/540359>",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-25 12:47:15"
      },
      {
        "time_stamp": "2024-01-26 10:19:14"
      },
      {
        "time_stamp": "2024-01-26 10:21:37"
      },
      {
        "time_stamp": "2024-01-26 13:28:07"
      },
      {
        "time_stamp": "2024-01-26 13:29:01"
      },
      {
        "time_stamp": "2024-01-26 13:29:52"
      },
      {
        "time_stamp": "2024-02-17 13:15:29"
      }
    ]
  },
  {
    "text": "Hi Everyone, I am just new to this whole HubSpot custom coding thing, but improving everyday. Can anyone please tell me how can I utilize these integration filters in HubSpot Workflow Custom Code actions? Like I want to check in my custom code if a contact attended a specific webinar or not. etc.",
    "time_stamp": "2024-01-23 15:31:43"
  }
]
[
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2021-01-27 10:09:46",
    "text": "We’ve been using the new `enabled_features` option for rich text fields (which has been a great add!), but we’ve come across a problem… our content editors have been pasting in content from Word, which pastes in surrounding html elements as well as the text they’re trying to paste in. After that happens, there is no way to remove that extraneous html, as the enabled_features settings remove the buttons for removing formatting or editing the source code. Obvious fix is “don’t do that,” but our content editors aren’t always that savvy.\n\nIs there a way to strip html from pasted content for disabled features so it only pastes plain text, or html elements that are allowed per the enabled_features settings?",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-01-27 11:24:18"
      },
      {
        "time_stamp": "2021-01-27 11:56:13"
      },
      {
        "time_stamp": "2021-01-27 12:32:42"
      },
      {
        "time_stamp": "2021-01-27 14:22:12"
      },
      {
        "time_stamp": "2021-01-27 14:22:57"
      },
      {
        "time_stamp": "2021-01-28 15:29:17"
      },
      {
        "time_stamp": "2021-01-28 15:43:31"
      },
      {
        "time_stamp": "2021-01-28 15:48:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-01-27 11:24:18",
    "text": "You could use the <https://developers.HubSpot.com/docs/cms/hubl/filters#striptags|striptags> filter if no HTML is allowed. If only some tags are allowed, you should probably use <https://developers.HubSpot.com/docs/cms/hubl/filters#regex-replace|regex_replace>."
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-01-27 11:56:13",
    "text": "So if you need regex you could do something like this:\n```|regex_replace(\"/(&lt;\\/?(?:a|p|img)[^&gt;]*&gt;)|&lt;[^&gt;]+&gt;/ig\", \"\")```\nThis would replace everything except the p, a and img tag."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2021-01-27 12:32:42",
    "text": "Hey Doug, do you have a link the module where you have this in? The remove formatting button shouldnt be a button that is hidden as we always have that persist for issues like this."
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2021-01-27 14:22:12",
    "text": "<@U2H3TT8F2> Apologies, I’m being told now that the button is there and working. Must have been temporary glitch or temporary insanity."
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2021-01-27 14:22:57",
    "text": "<@UGDF9EBPW> Thank you for the regex idea… I think we’ll still implement that to safeguard against crap pasted in from Word."
  }
]
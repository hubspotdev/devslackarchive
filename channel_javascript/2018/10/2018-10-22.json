[
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:02:34",
    "text": "has anyone had issues with onFormReady callback and IE?  If i use it, form does not render.  just to make sure it was not my code, i replaced with a simple alert and nada"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:02:56",
    "text": "(testing ie11 in browserstack)"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:04:34",
    "text": "Is your code using any ES6 features?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:05:55",
    "text": "alert(“hello”); should work, no?"
  },
  null,
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:06:38",
    "text": "Yes! Oh I didn’t see that onFormReady was a built-in thing"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:07:14",
    "text": "everything renders properly everywhere except ie"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:07:18",
    "text": "because why not"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:07:34",
    "text": "You have jQuery on the page you’re running the script on?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:07:43",
    "text": "it is in HubSpot"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:07:48",
    "text": "hmmm"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:07:51",
    "text": "<https://community.HubSpot.com/t5/Content-Design-Questions/HubSpot-form-not-rendering-properly-in-IE-11/m-p/212518#M9064>",
    "reply_count": 8,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-10-22 16:08:51"
      },
      {
        "time_stamp": "2018-10-22 16:13:10"
      },
      {
        "time_stamp": "2018-10-22 16:43:57"
      },
      {
        "time_stamp": "2018-10-22 16:44:08"
      },
      {
        "time_stamp": "2018-10-22 18:17:32"
      },
      {
        "time_stamp": "2018-10-22 19:56:16"
      },
      {
        "time_stamp": "2018-10-23 07:04:24"
      },
      {
        "time_stamp": "2018-10-23 07:06:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:07:59",
    "text": "this link has my question and code"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:19:56",
    "text": "Not sure, it looks like your code is perfectly sound. The only thing I can think of is something is hanging up the form embed keeping that event from firing."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:20:18",
    "text": "have you had success with ie in the past"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:20:19",
    "text": "well"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:20:23",
    "text": "let me rephrase"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:20:44",
    "text": "have you had a HubSpot form with a callback load properly"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:20:54",
    "text": "success is the wrong word for ie"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:23:31",
    "text": "Yeah there are no winners in the IE game. I haven’t personally used that callback."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:23:43",
    "text": "thanks for looking!"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:24:28",
    "text": "Sorry I couldn’t be more helpful. I have used this function before to see if an element has loaded:"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:24:28",
    "text": "<https://hackernoon.com/promise-based-detection-of-element-injection-94bc12e33966>"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-22 10:24:41",
    "text": "Maybe that will work!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 10:24:47",
    "text": "will check it out"
  },
  null,
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:00:30",
    "text": "<@UD53A9UUR> if you're using arrow functions from the global callback example, that'd be your reason: <https://caniuse.com/#feat=arrow-functions>"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:00:56",
    "text": "you'll need to run it through babel if you plan to use arrow functions"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:01:06",
    "text": "why would an alert break it?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:01:28",
    "text": "i replaced that code with an alert()"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:01:32",
    "text": "and it also failed"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:01:44",
    "text": "are you putting the alert in an arrow function?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:01:48",
    "text": "like"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:01:50",
    "text": "no"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:01:53",
    "text": "removing all"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:01:55",
    "edited": {
      "time_stamp": "2018-10-22 12:02:01"
    },
    "text": "```window.addEventListener('message', event =&gt; {\n   if(event.data.type === 'hsFormCallback' &amp;&amp; event.data.eventName === 'onFormReady') {\n       alert()\n   }\n});```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:02:30",
    "text": "i was putting the alert in the form callback"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:02:46",
    "edited": {
      "time_stamp": "2018-10-22 12:03:04"
    },
    "text": "sounds like it might be a bug with HubSpot's scripts if that's the case"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:03:13",
    "text": "kind of what i am gathering."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:03:21",
    "text": "what is the best place to submit a bug?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:03:48",
    "text": "good question.. <https://github.com/HubSpot>"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-10-22 12:03:55",
    "text": "not sure if they have any of their form stuff on there"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 12:04:11",
    "text": "thanks!"
  },
  null,
  null,
  {
    "poster": {
      "poster_name": "Patrick Eng",
      "poster_handle": "patrick404"
    },
    "time_stamp": "2018-10-22 13:28:30",
    "text": "Hi all, so long story short, one of our clients uses id's in their urls (which also all use index.php). So it would be something like www...com/index.php?id=8374923874 or something like that. What I've learned is that the HubSpot tracking code, by default, filters out all pages with index. So I've been told that I need to feed the URL into the tracking code before the tracking code actually loads using the setPath function and a pathName variable. So basically, right before the HubSpot tracking code loads, this will run:\n\n`var pathName = window.location.pathname + window.location.search;`\n` var _hsq = window._hsq = window._hsq || [];`\n` _hsq.push(['setPath', pathName]);`\n\nWhile I've tried to test this in the account, I haven't seen my page appear yet in the Pages report. Is anyone able to verify that these 3 lines of code would work to force tracking of their site? Thanks for any and all help!"
  },
  null,
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "cbarley"
    },
    "time_stamp": "2018-10-22 16:08:51",
    "edited": {
      "time_stamp": "2018-10-22 16:09:01"
    },
    "text": "just wanted to chime in quickly if you’re still seeing the issue. I noticed you had your code like this: `onFormReady($form, ctx)`. Do things clear up if you use:\n\n`onFormReady: function($form, ctx) `?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 16:13:10",
    "text": "Will give that a go when I am back in front of a computer"
  },
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "cbarley"
    },
    "time_stamp": "2018-10-22 16:43:57",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "cbarley"
    },
    "time_stamp": "2018-10-22 16:44:08",
    "text": "let me know what you find"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-10-22 18:17:32",
    "text": "hot damn, that did it!"
  },
  {
    "poster": {
      "poster_name": "Connor Barley",
      "poster_handle": "cbarley"
    },
    "time_stamp": "2018-10-22 19:56:16",
    "text": "awesome !"
  },
  null,
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2018-10-23 00:48:57",
    "text": "<@UD53A9UUR> About a year ago I did some things with onFormSubmit and back then we had a rough go with IE and Edge. Both acted differently on the form submit compared to other browsers and would not work. If I remember correctly IE and Edge refreshed the page where the other browsers did not. I was told back then that they are working on new version of the form embed code that would eliminate the page refresh on that callback function but no idea what is the status of that today."
  }
]
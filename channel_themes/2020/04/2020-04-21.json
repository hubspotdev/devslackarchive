[
  {
    "poster": {
      "poster_name": "Avi Goldman",
      "poster_handle": "avigoldmankid"
    },
    "time_stamp": "2020-04-21 12:23:44",
    "text": "Hey folks :wave:  Is there a recommended way to add icons to an advanced menu in a custom theme?",
    "reply_count": 7,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-04-21 12:37:45"
      },
      {
        "time_stamp": "2020-04-21 12:50:39"
      },
      {
        "time_stamp": "2020-04-21 12:55:44"
      },
      {
        "time_stamp": "2020-04-21 12:56:26"
      },
      {
        "time_stamp": "2020-04-21 12:56:40"
      },
      {
        "time_stamp": "2020-04-21 12:59:09"
      },
      {
        "time_stamp": "2020-04-21 13:00:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2020-04-21 12:37:45",
    "text": "Are you developing a theme? You could build your own menu module using the `menu()` function similar to <https://designers.HubSpot.com/code-gallery/entry/founders/TheWebTech-Basic-Menu-using-Menu-Function>"
  },
  {
    "poster": {
      "poster_name": "Avi Goldman",
      "poster_handle": "avigoldmankid"
    },
    "time_stamp": "2020-04-21 12:50:39",
    "text": "yup, I’m developing a theme :slightly_smiling_face: I’m not quite sure how the end user will specify which icon to use in that example you shared"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-04-21 12:55:44",
    "edited": {
      "time_stamp": "2020-04-21 12:57:12"
    },
    "text": "<@U01226478B0> the exact implementation is up to you but some ideas:\n• use a repeater group specifically for adding a field to choose an icon, based on the page id(can link field). Then in your menu rendering code test if the menu link’s page id == any of the items in your module. Display the appropriate icon.\n• use a “shortcode” `[new]` in the link text for the menu item, and use `|replace` to convert it to the icon on render\nThe advantage of both of these methods - if you re-arrange the menu items or add new items later, your icons will stay showing for the correct item."
  },
  {
    "poster": {
      "poster_name": "Avi Goldman",
      "poster_handle": "avigoldmankid"
    },
    "time_stamp": "2020-04-21 12:56:26",
    "text": "Sweet thanks <@U7SL518D6> and <@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "Avi Goldman",
      "poster_handle": "avigoldmankid"
    },
    "time_stamp": "2020-04-21 12:56:40",
    "text": "Is there karma in this slack?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-04-21 12:59:09",
    "text": "heh no but we do have <#CQ8KX8WRZ|gratitude> for future reference if you want to publicly thank anyone on this slack for anything, Fellow community member or HubSpotter doesn’t matter. (not asking you to do that as that’d defeat the point, just highlighting it for future reference)"
  },
  {
    "poster": {
      "poster_name": "Avi Goldman",
      "poster_handle": "avigoldmankid"
    },
    "time_stamp": "2020-04-21 13:00:54",
    "text": "That is exactly what I was looking for, thanks :pray:"
  },
  {
    "text": "Is there a way to make a custom dnd_section or add a custom option to a dnd_section? I’m trying to allow users to add sections that overlap like this",
    "time_stamp": "2020-04-21 13:19:46",
    "reply_count": 18,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-22 09:50:23"
      },
      {
        "time_stamp": "2020-04-22 10:27:03"
      },
      {
        "time_stamp": "2020-04-23 07:53:48"
      },
      {
        "time_stamp": "2020-04-23 07:54:28"
      },
      {
        "time_stamp": "2020-04-23 07:56:28"
      },
      {
        "time_stamp": "2020-04-23 08:06:07"
      },
      {
        "time_stamp": "2020-04-23 08:07:08"
      },
      {
        "time_stamp": "2020-04-23 08:09:02"
      },
      {
        "time_stamp": "2020-04-23 08:09:43"
      },
      {
        "time_stamp": "2020-04-23 08:10:25"
      },
      {
        "time_stamp": "2020-04-23 08:10:37"
      },
      {
        "time_stamp": "2020-04-23 08:10:42"
      },
      {
        "time_stamp": "2020-04-23 08:11:04"
      },
      {
        "time_stamp": "2020-04-23 08:11:31"
      },
      {
        "time_stamp": "2020-04-23 08:13:12"
      },
      {
        "time_stamp": "2020-04-23 08:15:05"
      },
      {
        "time_stamp": "2020-04-23 08:15:54"
      },
      {
        "time_stamp": "2020-04-23 08:17:04"
      }
    ]
  }
]
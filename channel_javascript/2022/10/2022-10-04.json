[
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2022-10-04 09:55:29",
    "text": "<@UKJSMBW6A> I have a use case where I need to display video duration–\n\nSo with the HubSpot video player there is no way to get video duration using JS?\n\nI got this far, but I am running into a CORB error...\n\n```window.addEventListener('message', function(message){  \n  if( message.data.type == 'PLAYER_READY') {\n    var videoPlayer = document.getElementById('hs_player_' + message.data.embedId),\n      videoUrl = videoPlayer.src.split('?')[0];\n    \n    getDuration(videoUrl);\n    \n  }  \n});\n\n\nwindow.URL = window.URL || window.webkitURL;\n\nfunction getDuration(url) {\n  var video = document.createElement('video');\n  video.preload = 'metadata';\n  video.onloadedmetadata = function () {\n    window.URL.revokeObjectURL(video.src);\n    console.log(\"Duration : \" + video.duration + \" seconds\");\n  }\n  video.src = url;\n}```"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2022-10-04 09:56:40",
    "text": "I have videos loading on the page via HubDB, so I guess my plan B is to have content manager entering video durations into the HubDB, which is not ideal"
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2022-10-04 09:59:49",
    "text": "I assume you meant a CORS error?"
  },
  {
    "poster": {
      "poster_name": "Derek Cavaliero",
      "poster_handle": "derek168"
    },
    "time_stamp": "2022-10-04 10:00:35",
    "text": "Nvm forgot there was a CORB error too haven’t run into that in a long time."
  }
]
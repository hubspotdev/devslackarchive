[
  {
    "poster": {
      "poster_name": "Daniel Mahadi",
      "poster_handle": "daniel.mahadi"
    },
    "time_stamp": "2024-04-17 02:29:14",
    "text": "hey <@UAYBXDG4U>\n\nbackground :\nthe content team is looking to have a page that they can:\n• automatically pull out general information of product (like image, name, pricing)\n• ability highlight certain attributes of each product \nExample travel insurance products,\nlet get `Great Eastern TravelSmart Premier Classic` and `Direct Asia Travel Insurance - DA200` each have their own selling point.\n\nand in the page, the content team will like to be able to select which coverages to highlight and this can be like 10 - 30 items and they are different for each product.\n\nI hope i explanation make sense"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 05:46:43",
    "text": "I think I'm a little confused on how the page is more customizable based on the query param `productuid` - how is the content team able to select which coverages show based on the `productuid` currently?"
  },
  {
    "poster": {
      "poster_name": "Daniel Mahadi",
      "poster_handle": "daniel.mahadi"
    },
    "time_stamp": "2024-04-17 05:53:15",
    "text": "Using HubSpot module Fields "
  },
  {
    "poster": {
      "poster_name": "Daniel Mahadi",
      "poster_handle": "daniel.mahadi"
    },
    "time_stamp": "2024-04-17 05:53:30",
    "text": "We can have a short call later and I can show you "
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 05:54:08",
    "text": "is the module and fields looking for the query param value?"
  },
  {
    "poster": {
      "poster_name": "Daniel Mahadi",
      "poster_handle": "daniel.mahadi"
    },
    "time_stamp": "2024-04-17 05:54:58",
    "text": "Yes correct and load the right configuration (from what the content team enter in the module field)"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 05:56:08",
    "text": "would you mind DMing me a link to the module code and your portal id"
  },
  {
    "poster": {
      "poster_name": "Daniel Mahadi",
      "poster_handle": "daniel.mahadi"
    },
    "time_stamp": "2024-04-17 05:57:17",
    "text": "Sure will do "
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:07:54",
    "text": "I think serverless for the developer platform is only on Sales, Service, or Content Hub enterprise."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:10:20",
    "text": "It is not currently possible to do this."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:10:56",
    "edited": {
      "time_stamp": "2024-04-17 06:10:59"
    },
    "text": "May I ask what the use case for this would be? Simply wanting to ship specific change while other code is in a \"dirty\" state? Performance?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:23:17",
    "text": "is this:\n```Currently there is no access to logs for Developer Platform Endpoint functions.```\nreferencing `hs logs --follow` or the logs in HubSpot settings?",
    "reply_count": 36,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-17 06:25:37"
      },
      {
        "time_stamp": "2024-04-17 06:26:25"
      },
      {
        "time_stamp": "2024-04-17 06:28:09"
      },
      {
        "time_stamp": "2024-04-17 06:28:46"
      },
      {
        "time_stamp": "2024-04-17 06:29:43"
      },
      {
        "time_stamp": "2024-04-17 06:30:35"
      },
      {
        "time_stamp": "2024-04-17 06:31:11"
      },
      {
        "time_stamp": "2024-04-17 06:31:41"
      },
      {
        "time_stamp": "2024-04-17 06:32:22"
      },
      {
        "time_stamp": "2024-04-17 06:33:38"
      },
      {
        "time_stamp": "2024-04-17 06:34:41"
      },
      {
        "time_stamp": "2024-04-17 06:36:24"
      },
      {
        "time_stamp": "2024-04-17 06:39:33"
      },
      {
        "time_stamp": "2024-04-17 06:40:07"
      },
      {
        "time_stamp": "2024-04-17 06:40:29"
      },
      {
        "time_stamp": "2024-04-17 06:40:54"
      },
      {
        "time_stamp": "2024-04-17 06:41:06"
      },
      {
        "time_stamp": "2024-04-17 06:42:23"
      },
      {
        "time_stamp": "2024-04-17 06:43:40"
      },
      {
        "time_stamp": "2024-04-17 06:43:49"
      },
      {
        "time_stamp": "2024-04-17 06:43:58"
      },
      {
        "time_stamp": "2024-04-17 06:44:48"
      },
      {
        "time_stamp": "2024-04-17 06:47:40"
      },
      {
        "time_stamp": "2024-04-17 06:49:10"
      },
      {
        "time_stamp": "2024-04-17 06:51:20"
      },
      {
        "time_stamp": "2024-04-17 06:51:44"
      },
      {
        "time_stamp": "2024-04-17 06:53:08"
      },
      {
        "time_stamp": "2024-04-17 06:54:01"
      },
      {
        "time_stamp": "2024-04-17 06:54:52"
      },
      {
        "time_stamp": "2024-04-17 06:55:48"
      },
      {
        "time_stamp": "2024-04-17 06:58:14"
      },
      {
        "time_stamp": "2024-04-17 06:59:17"
      },
      {
        "time_stamp": "2024-04-17 06:59:17"
      },
      {
        "time_stamp": "2024-04-17 07:00:13"
      },
      {
        "time_stamp": "2024-04-17 07:01:29"
      },
      {
        "time_stamp": "2024-04-17 07:01:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:25:37",
    "text": "We just added this bit of documentation <https://github.HubSpot.com/cms-react/reference/serverless.html> - it _should_ help clarify a bit what is going on with serverless functions on HubSpot.\n\nTo answer your question directly - Endpoint Serverless Functions on Developer Platform do not have logging."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:26:25",
    "edited": {
      "time_stamp": "2024-04-17 06:28:45"
    },
    "text": "Your command `hs logs` is _not_ relevant to \"Developer Platform Endpoint Functions\" ... it is relative to \"CMS Serverless Functions\"."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:28:09",
    "text": "Is that helping to clear any confusion here?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:28:46",
    "text": "yea, I think so, no logs of any kind on the \"Developer Platform Serverless Functions\" (yet)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:29:43",
    "text": "it's not clear if after I've built out my functionality it is worth it to copy/paste everything over to the \"Developer Platform\" version for performance benefits"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:30:35",
    "text": "I would not say Developer Platform Endpoint functions are more performant that CMS Serverless Functions"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:31:11",
    "edited": {
      "time_stamp": "2024-04-17 06:31:20"
    },
    "text": "ok, some of the docs give the impression that they will be more performant at some point (maybe misreading)"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:31:41",
    "edited": {
      "time_stamp": "2024-04-17 06:31:50"
    },
    "text": "interesting, send me along any passages you see that suggest that."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:32:22",
    "text": "```Looking forward the Developer Platform will offer one system to learn across CRM, CMS, and other parts of HubSpot. Serverless function capabilities can be more easily upgraded overtime by HubSpot due to being tied into the Projects versioning system. Unlocking a better developer experience, performance, security, etc.```\n"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:33:38",
    "text": "Good catch, thank you"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:34:41",
    "text": "also, in the limitations section, unless I'm double confused (100% possible), it sounds like you mean CMS serverless functions instead of Developer serverless here:\n```Because Developer Platform Serverless functions are defined within a \"Private App\" they inherit the scopes assigned to that Private App. ```\nin the \"Limitations to CMS Serverless functions\" section"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:36:24",
    "text": "mmm - the entire passage points to CMS Serverless functions _not_ being in a private app and thus not having that cnotrol"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:39:33",
    "text": "hmm...maybe it's too early in the morning for me, I think I am using CMS serverless functions now with a private app. If it's obvious you can ignore this"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:40:07",
    "text": "How are you deploying your serverless function?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:40:29",
    "text": "with a `hs watch`/save"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:40:54",
    "text": "and how is it coupled to a private app?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:41:06",
    "text": "the access token"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:42:23",
    "edited": {
      "time_stamp": "2024-04-17 06:43:14"
    },
    "text": "got it - if it were on the Developer Platform, the serverless function would be _inside_ a private app, and the private app access token would be automatically available in the serverless context and you would never need to update a secret for that token"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:43:40",
    "text": "<https://developers.HubSpot.com/docs/platform/serverless-functions#authenticate-calls>"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:43:49",
    "text": "so is my `cms-react` project considered a private app?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:43:58",
    "text": "it is not."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:44:48",
    "text": "It is it's own \"Project Component\" known as a CMS React Project Component - please forgive us on this naming :sad-panda:"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:47:40",
    "text": "to be honest, I'm still confused but you must be right and I'm missing some obvious thing or it's different on the CRM side"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:49:10",
    "text": "I think I am using CMS Serverless Functions, my `access code` is defined in a private app and so is the scope, it's connected through \"secrets\" in `serverless.json`"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:51:20",
    "text": "Correct - your CMS Serverless function is using a private app defined token and it's scopes - through a configuration."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:51:44",
    "text": "_if_ you were you using the Developer Platform Function _inside_ a private app, that association would be implicit."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:53:08",
    "text": "so in this example: <https://github.com/HubSpot/cms-react/tree/main/examples/serverless>\n\nthere's a private app somewhere? created in HubSpot settings?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:54:01",
    "text": "yes, <https://github.com/HubSpot/cms-react/tree/main/examples/serverless/cms-with-serverless-project/app> is a private app with a serverless function inside of it."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:54:52",
    "text": "So that project has TWO components, a Private App, and a CMS React Project Component"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:55:48",
    "text": "ok, I think I get it now...thanks for taking the time"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:58:14",
    "text": "to confirm one last thing, the \"private app\" there is created by being deployed to a project — not in HubSpot settings"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 06:59:17",
    "text": "and to hopefully not make this a total waste for you...typo in `That level of granular control is no available with CMS Serverless Functions` (should be not available)"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 06:59:17",
    "text": "You can create a private app in the UI - however in this case it's coming from the code that is deployed."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2024-04-17 07:00:13",
    "edited": {
      "time_stamp": "2024-04-17 07:00:19"
    },
    "text": "No waste of time at all - the developer experience around serverless function needs help - we are actively trying to do a better job describing the world as it is and working to make it more intuitive and seamless."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 07:01:29",
    "text": "I think without \"logs\" anyone that was initially as confused as I was would not be a candidate for the new way anyway"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 07:01:43",
    "text": "I don't think I could have built anything without logs"
  },
  {
    "poster": {
      "poster_name": "Mary Brown",
      "poster_handle": "mbrown848"
    },
    "time_stamp": "2024-04-17 07:15:04",
    "text": "<@UDHT6N5SM> I was told the CTA helper was only for HubSpot CMS. Is that true? Or can it be used with React?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 07:16:48",
    "text": "the CTA is created in the HubSpot CMS and then used in react. I don't think there's a react-only way to use it if that's what you mean"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-04-17 07:17:05",
    "edited": {
      "time_stamp": "2024-04-17 07:43:21"
    },
    "text": "Hey Tricia\n\n> Is this meant to inject the HTML/CSS of the custom CTA into React components?\nCorrect\n\n\n> Where do you get the `fieldPath`?\nfieldPath is where the corresponding field you are referencing in your field definitions\n\nFor example if your module's fields are defined like so:\n```export const fields = (\n  <ModuleFields>\n    <FieldGroup name=\"field_group\">\n      <CtaField name=\"cta_field_within_group\" default=\"59330897849\" />\n    </FieldGroup>\n    <CtaField name=\"top_level_cta_field\" default=\"59330897849\" />\n  </ModuleFields>\n);```\n\n\nThe `fieldPath` to `cta_field_within_group` would be `field_group.cta_field_within_group` since it's in a field group\n\n\n\nThe `fieldPath` for the other, top level, cta field, would just be `top_level_cta_field`\n\nDoes that make sense"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 07:18:07",
    "text": "or if your project is a completely separate react project that uses HubSpot forms I assume that this wouldn't work (but I don't know)"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-04-17 07:18:48",
    "edited": {
      "time_stamp": "2024-04-17 07:19:01"
    },
    "text": "> Is there anything you can do with this ID to get the link or tracking details?\nNot currently, but\n\nI'd be very interested in learning more about what sort of data youre looking for for CTAs so you can build your own React components for CTAs\n\nCan you tell me a little more about what sort of data you are looking for and how you would like to access it in your React components?"
  },
  {
    "poster": {
      "poster_name": "Mary Brown",
      "poster_handle": "mbrown848"
    },
    "time_stamp": "2024-04-17 07:19:18",
    "text": "This is what I was told: \"Unfortunately the tool's JavaScript doesn't work very well with \"modern\" sites that are powered with technologies like React. We've found this quite a bit with HubSpot's tooling, but usually have a few ways to get around it. In this instance we're even more limited. These interact with the main HubSpot tracking script but it appears we are having React hydration issues. The React HubSpot form library that we are using gets around these hydration errors by reloading the HubSpot forms script on each mount, but unfortunately it looks like the HubSpot CTA only uses the tracking script. We could try re-evaulating the way this is loaded (e.g. unmount and remount it each time the button is used) but we're unsure whether or not this would have impact on other areas of the site where HubSpot is used and how this would work with multiple CTAs used on a single page.\""
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 07:21:59",
    "text": "yea, it sounds like you are taking a standalone react approach vs. the newish `cms-react` project approach. I can't really help with the former unfortunately"
  },
  {
    "poster": {
      "poster_name": "Mary Brown",
      "poster_handle": "mbrown848"
    },
    "time_stamp": "2024-04-17 07:22:13",
    "text": "Got it. Thank you"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 07:25:45",
    "text": "is it crazy to add a random number to a key? I have a situation where I am getting results where the `id` is not reliable (HubSpot search results)",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-04-17 07:26:43"
      },
      {
        "time_stamp": "2024-04-17 07:54:20"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2024-04-17 07:26:43"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 07:54:20",
    "text": "I ended up deduplicating when I process the request. I'd be curious to know if this is an API bug or if my logic is off but moving on..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 09:10:41",
    "edited": {
      "time_stamp": "2024-04-17 09:10:50"
    },
    "text": "what's a good strategy to create a new search results page? Are project modules available in the sandbox? can I simulate this request on another \"regular\" page? `{{ request.query_dict.term|escape }}`"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 10:29:58",
    "text": "Thanks, <@U04DLJH3W94>. Appreciate the responses!\n\nFor context, our client has an internal React component library, so we're trying to utilize that exclusively for design elements to ensure consistency across their products.\n\nFor CTAs, our analytics people have told us that they get better reports when they create CTAs from Lead Capture --&gt; CTAs\n\nWhat we want is for them to still have access to those analytics, but not give them any control over the aesthetics of the CTA."
  },
  {
    "text": "I see there is this embed option:",
    "time_stamp": "2024-04-17 10:30:42"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 10:31:33",
    "text": "I'm not sure if this is going to work, but today I will try to create our custom button, ignore any of the styles in that embed code, and only copy the href, and ID."
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 10:33:31",
    "text": "I was kind of expecting when I used `&lt;CtaField label=\"Cta\" name=\"cta\" /&gt;` that I'd be able to retrieve the href or any other information needed for those analytics, to create a CTA in React only."
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-04-17 10:35:08",
    "text": "&gt; I was kind of expecting when I used `&lt;CtaField label=\"Cta\" name=\"cta\" /&gt;` that I'd be able to retrieve the href or any other information needed for those analytics, to create a CTA in React only.\nThat's a fair expectation"
  },
  {
    "poster": {
      "poster_name": "Taylor O'Reilly",
      "poster_handle": "taylor699"
    },
    "time_stamp": "2024-04-17 10:35:19",
    "text": "I did see that however the account im working in does have sales enterprise"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-04-17 10:35:58",
    "text": "&gt;  I'm not sure if this is going to work, but today I will try to create our custom button, ignore any of the styles in that embed code, and only copy the href, and ID.\nIf you do try, please let me know what information you end up using here (and any information related to the CTA that you wish you had)"
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-04-17 10:36:47",
    "text": "This is good feedback, and something we are working towards, i.e. Data Representations of HubSpot entities like CTAs, rather than pre-formed HTML"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 10:37:00",
    "text": "Will do, thank you so much!"
  },
  {
    "poster": {
      "poster_name": "Josh GH",
      "poster_handle": "joshgh"
    },
    "time_stamp": "2024-04-17 10:51:59",
    "text": "Actually to help when having multiple devs working on a project. Currently, we have devs working on separate modules in separate branches of our project’s repo. Which is great for local development. But when we need to upload a branch to work on HubSpot, it overwrites the changes other branches have uploaded.\n\nIe: when I upload my new CTA, it erases another person’s new Testimonial and visa-versa. Or at the minimum, undoes any changes not in my branch.\n\nInteresting minor side effect: We also learned that if the Testimonial is re-uploaded after being erased, it’s treated as an entirely new module and doesn’t repopulate the empty Testimonial section that remains on the HubSpot page. Which means any field editing done on <http://HubSpot.com|HubSpot.com> is effectively wiped."
  },
  {
    "poster": {
      "poster_name": "Josh GH",
      "poster_handle": "joshgh"
    },
    "time_stamp": "2024-04-17 11:12:52",
    "edited": {
      "time_stamp": "2024-04-17 11:15:00"
    },
    "text": "We recently deployed a build from one branch that unexpectedly deleted another branch’s module. Retroactively, it’s great that cms-react manages removing any deleted project modules so well, we just weren’t expecting it.\n• I do wish there was a way to upload a specific module so multiple branches could work on multiple modules without any conflicts. \n• Very unexpected behavior: the HubSpot page kept a “section” with the deleted module, so we thought that re-uploading the module would repopulate that section in the page, but it did not. It seems like the re-upload was set as an entirely unique module. Is there a way to get around this, perhaps by setting an `id` in the meta file?"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 11:32:31",
    "text": "<@U05CAJG8D98> There are some good docs on this page in case you hadn't seen it yet: <https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields-overview#field-visibility>"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 11:33:30",
    "text": ":heavy_plus_sign: to this request! :smile:"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 11:35:00",
    "text": "<@U06SQQ75P7W> I don't think it's possible out of the box, but we've been using our Sandbox account as a \"staging\" environment. We set up our CI/CD to push changes to the Sandbox account on merge of PR to `develop` branch, and CI/CD will push to production account on merge to `main`."
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-17 11:36:39",
    "text": "nice idea! :slightly_smiling_face: hopefully HubSpot will provide a staging env in the future"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-17 11:39:37",
    "text": "<@U066BM0FLH0> just to confirm, uploaded modules on the sandbox account do not impact the main account and pages?"
  },
  {
    "poster": {
      "poster_name": "yony gomez",
      "poster_handle": "yony.gomezdelossantos"
    },
    "time_stamp": "2024-04-17 12:14:48",
    "text": "hi guys, any idea why HubSpot is so slow this  days?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-04-17 12:25:10",
    "text": "does everyone agree that if I have a url with `?term=something` in my url, I can test a regular website page using\n```const url = usePageUrl();\nconst searchParams = new URLSearchParams(url.search);\nconst term = searchParams.get(\"term\");```\nand then later when I set my system template to use the same module everything will work fine?"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 12:25:33",
    "text": "<@U06SQQ75P7W> Correct, it's totally separate from production, so we've been able to do a ton of testing that way. You will have to transfer all of your content over to production when you're ready to launch, but I think that's a small inconvenience compared to worried about overriding production."
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 12:25:52",
    "text": "There's also the concept of Content Staging if you haven't seen it yet. <https://developers.HubSpot.com/docs/cms/features/content-staging>"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-17 13:37:21",
    "text": "thanks a lot! We've seen the content staging, but our need is a staging environment for the modules. I think your suggestion (sandbox accounts) will work great for us! :grin:"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-17 13:41:21",
    "text": "is there a public changelog for the `@HubSpot/cms-components`? :grin:",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-17 13:45:19"
      },
      {
        "time_stamp": "2024-04-17 13:47:12"
      },
      {
        "time_stamp": "2024-04-17 13:48:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Marcus Shannon",
      "poster_handle": "mshannon"
    },
    "time_stamp": "2024-04-17 13:45:19",
    "text": "Yes,\n\n<https://github.HubSpot.com/cms-react/release-log.html>"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-17 13:47:12",
    "text": "thanks!"
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-17 13:48:29",
    "text": "<@U04DLJH3W94> is the version wrong in the last release?"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 15:48:45",
    "edited": {
      "time_stamp": "2024-04-17 15:49:20"
    },
    "text": "Hi <@U04DLJH3W94> I tested this out today and came to the conclusion that it won't work for now. I tried copying the href from the embed code, and passing it into our React button, but the way these HubSpot CTAs work isn't compatible with that method.\n\nEssentially anything that is inside this div with this classname, and the data-id will be replaced with the HubSpot `<a>`\ntag, and a new href that contains all of the tracking details.\n\n```          <div\n            className=\"hs-web-interactive-inline\"\n            data-HubSpot-wrapper-cta-id=\"263636712736\"\n          >\n              {{ LINK GOES HERE }}\n          </div>```\nSo even if we put our own React component inside the same div, it will be deleted and replaced with the HubSpot link and styling defined in Link Capture --> CTAs\n\ncc: <@U066H2TPZSR>"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 15:50:34",
    "text": "Interestingly, you can embed just this `div` with nothing inside of it, and HubSpot is still able to inject all of the styles and link inside the `div`.\n\n```&lt;div className=\"hs-web-interactive-inline\" data-HubSpot-wrapper-cta-id=\"263636712736\" /&gt;```"
  },
  {
    "poster": {
      "poster_name": "Tricia Leach",
      "poster_handle": "tleach"
    },
    "time_stamp": "2024-04-17 15:54:53",
    "text": "<@U04DLJH3W94> What we'd love to see is the ability to use something like this field:\n\n```&lt;CtaField label=\"Cta\" name=\"cta\" /&gt;```\nAnd be able to get the `href` and/or `id` back in the data to be able to pass it to our custom React buttons, and bypass any CTA styling set in Lead Capture --&gt; CTAs.\n\nAny chance y'all have been discussing this and see it's possibility in the future?\n\nWe're talking with our design/marketing teams, and may need to move away from using HubSpot analytics and use GTM instead so that we can control those styles from within our React components."
  },
  {
    "poster": {
      "poster_name": "Fábio Englert Moutinho",
      "poster_handle": "fabio379"
    },
    "time_stamp": "2024-04-17 19:21:14",
    "edited": {
      "time_stamp": "2024-04-17 19:22:00"
    },
    "text": "hey there, I am experiencing a weird issue, I'm doing an upload of a project but there is a module that does not update for some reason (still with an older version running).\nWhat could be the cause of this and how can I debug?\n\nbuild finishes with no errors.",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-04-18 07:52:39"
      },
      {
        "time_stamp": "2024-04-18 09:25:24"
      }
    ]
  }
]
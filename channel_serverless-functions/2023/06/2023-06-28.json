[
  {
    "poster": {
      "poster_name": "Robin Charlet",
      "poster_handle": "robin021"
    },
    "time_stamp": "2023-06-28 01:08:44",
    "text": "Thanks <@UCBDLK6SU>. How do you handle the right to access this url ? Its done in the HubSpot App ?"
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-06-28 01:36:12",
    "text": "It’s public. You can’t control who can access it or not."
  },
  {
    "poster": {
      "poster_name": "Robin Charlet",
      "poster_handle": "robin021"
    },
    "time_stamp": "2023-06-28 02:14:15",
    "text": "Thanks it was a nodejs version issue :+1:"
  },
  {
    "poster": {
      "poster_name": "Robin Charlet",
      "poster_handle": "robin021"
    },
    "time_stamp": "2023-06-28 02:14:49",
    "text": "Is it possible to restrict the access ?"
  },
  {
    "poster": {
      "poster_name": "Robin Charlet",
      "poster_handle": "robin021"
    },
    "time_stamp": "2023-06-28 04:09:50",
    "edited": {
      "time_stamp": "2023-06-28 04:10:39"
    },
    "text": "How handle authentication to restrict the access of a serverless function (which is currently public) ?",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-07-03 02:47:37"
      },
      {
        "time_stamp": "2023-07-03 08:39:45"
      },
      {
        "time_stamp": "2023-07-03 08:40:17"
      },
      {
        "time_stamp": "2023-07-03 08:41:22"
      },
      {
        "time_stamp": "2023-07-06 02:39:24"
      },
      {
        "time_stamp": "2023-07-06 08:04:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "John Kelleher",
      "poster_handle": "john785"
    },
    "time_stamp": "2023-06-28 05:24:21",
    "text": "I may not have followed your point here but I'm pretty sure that this is built into the buyer_contacts module and you can just use a for loop on the `quote.associated_objects.contacts` . Here's the default module code from the cms-quotes theme\n\n```{# associated contact data: first name, last name, email, phone #}\n{% from '../../imports/mock_data.html' import SAMPLE_TEMPLATE_DATA as mock_data %}\n{% set QUOTE = template_data.quote or mock_data.quote %}\n{% set BUYER_CONTACTS = QUOTE.associated_objects.contacts %}\n\n{% for recipient in BUYER_CONTACTS %}\n  {% if module.show_contact_name  %}\n    &lt;span&gt;\n      &lt;b&gt;{{ format_name(recipient.firstname, recipient.lastname, true) }}&lt;/b&gt;\n    &lt;/span&gt;\n    &lt;br&gt;\n  {% endif %}\n\n  {% if module.show_contact_job_title and recipient.jobtitle %}\n    &lt;span&gt;\n      {{ recipient.jobtitle }}\n    &lt;/span&gt;\n    &lt;br&gt;\n  {% endif %}\n\n  {% if module.show_contact_email and recipient.email %}\n    &lt;span&gt;\n      {{ recipient.email }}\n    &lt;/span&gt;\n    &lt;br&gt;\n  {% endif %}\n\n  {% if module.show_contact_phone and recipient.phone %}\n    &lt;span&gt;\n      {{ recipient.phone }}\n    &lt;/span&gt;\n    &lt;br&gt;\n  {% endif %}\n  &lt;br&gt;\n{% endfor %}```"
  }
]
[
  {
    "poster": {
      "poster_name": "devarajan",
      "poster_handle": "devarajan19495"
    },
    "time_stamp": "2020-09-03 08:42:51",
    "text": "Hi all,\n\nI'm trying to get a particular contact's deals list using the following API\nGET /deals/v1/deal/associated/:objectType/:objectId/paged\nThis seems to provide the list of unsorted data and also the docs page posted it as depricated.\nIs there any other option to get \"a contact's associated deals\" by any means ?\nplease provide some solution.\n\nThanks in advance.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-09-03 15:44:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:30:37",
    "text": "Have you tried type number with fieldType number vs fieldType text ?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:32:21",
    "text": "Need more specifics with your question.\n\ndata = {\n           *'filterGroups'*: [\n               {\n                   *'filters'*: [\n                       { *'propertyName'*: *'domain'*, *'operator'*: *'EQ'*, *'value'*: company.domain }\n                   ]\n               }\n           ],\n           *'properties'*: CONFIGURATION[*'company_read_properties'*],\n           *'limit'*: 100,\n           *'after'*: 0,\n       }\n\n*<https://api.hubapi.com/crm/v3/objects/companies/search>*\n\n*This is a company example, but contact, deal, etc all work the same general way. The doc is usually pretty clear for this endpoint. What is the issue?*"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:33:40",
    "text": "ownerId is portal independent, as one HS user can have &gt;1 HS account they are in, so portalId and ownerId is required to get the queue, can you be more specific what else you are trying to do?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:33:59",
    "text": "Yes, see reply to prev question where I tagged you."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:34:21",
    "text": "<@UH6BLCNJV> arbitrary search example"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:35:38",
    "text": "Read doc closely\n\nPOST*`/crm/v3/objects/deals/batch/create`*\n\n`<https://developers.HubSpot.com/docs/api/crm/deals>`"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:36:20",
    "text": "Enterprise listed in here\n\n<https://developers.HubSpot.com/changelog/heads-up-new-and-improved-HubSpot-api-limits>"
  },
  {
    "poster": {
      "poster_name": "Carlos Sánchez",
      "poster_handle": "csanchez"
    },
    "time_stamp": "2020-09-03 15:37:27",
    "text": "Thank you very much <@U012W4YEUTX>!"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:37:52",
    "text": "There are import features, and import features you can access by code, and you can make / access the objects by code too, but to do it with no code, the classics would be Zapier, and IFTTT"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:38:15",
    "text": "Realistically though I'd expect the answer is likely \"hire a contractor\" depending on specifics"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:39:44",
    "text": "If this endpoint did not work, it would cause an unimaginably massive outage, and it does work for me, suspect local issue to blame."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:42:02",
    "text": "if you search the history, there are a million questions about batch APIs returning funny HTTP codes and handling errors pretty differently from their non batch equivalents, so this is a common thing being reported a few times a week, that said it might not be that easy to get a reply on this very detailed question about one specific kind of object"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:43:09",
    "text": "you might have better luck using *`/crm/v3/objects/deals/search`* because it has lots more configuration"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:44:44",
    "text": "<https://developers.HubSpot.com/docs/api/crm/associations>\n\nPOST*`/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/read`*\n\nfrom contact\nto deal"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:45:15",
    "text": "note, I used domain, but just change that to whatever other property, and should work"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:45:32",
    "text": "name is another classic one I use obviously"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-09-03 15:45:57",
    "text": "but it does others too, you might have to check in the CRM admin that the property has search turned on, depending what you look to do"
  },
  {
    "poster": {
      "poster_name": "Carlos Sánchez",
      "poster_handle": "csanchez"
    },
    "time_stamp": "2020-09-03 16:00:20",
    "text": "Great, thanks for the explanation :ok_hand:"
  },
  {
    "poster": {
      "poster_name": "Luka Perica",
      "poster_handle": "luka930"
    },
    "time_stamp": "2020-09-04 00:38:09",
    "text": "Np Matthew, thanks"
  }
]
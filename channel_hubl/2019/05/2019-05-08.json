[
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 06:45:15",
    "text": "Hey everyone, quick query"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 06:46:02",
    "edited": {
      "time_stamp": "2019-05-08 07:09:49"
    },
    "text": "So I'm using isotype to filter my posts, is it possible to split a tab so I can show the most popular posts"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 06:46:32",
    "text": "<https://gyazo.com/a055f794941098beb069ea7c1efe7b1f>"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 06:47:00",
    "text": "I'm trying to show the most popular posts here and the rest of the tabs to show there relevant articles"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 06:48:53",
    "text": "I was thinking of an `if` statement targeting the `all` data-filter but not sure if that would be the best route"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 06:48:54",
    "text": "<https://i.gyazo.com/a7f55efeeb078d7a909f68621f62e7ee.png>"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 06:49:44",
    "text": "Or even if that's possible"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-05-08 07:55:28",
    "text": "No, I know that you can change the date format, I was talking about the format of the format. For example, the publish dates have formats like \"EEEE, MMMM d, yyyy\". The same format for the filter would be \"%A, %b %e, %Y\"."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2019-05-08 07:56:39",
    "text": "I'm looking to format an arbitrary date by the format set in the settings."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 08:56:55",
    "text": "the data filter if statement wont work"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 08:58:45",
    "text": "Yeah I was just trying it out"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 08:58:47",
    "text": "how are you trying tio use this"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 08:58:57",
    "edited": {
      "time_stamp": "2019-05-08 08:59:05"
    },
    "text": "if all it shows the popular?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 08:59:36",
    "text": "are you using isotope?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 08:59:41",
    "text": "or page refreshes?"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:00:06",
    "text": "I'm just doing what the client has told me to do haha show the most popular posts on the `all` tab",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-08 09:00:52"
      },
      {
        "time_stamp": "2019-05-08 09:01:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:00:13",
    "text": "sorry didt seer the past post"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:00:25",
    "text": "I can paste in the JS if that helps?"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:00:37",
    "text": "But it's pretty standard"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:00:43",
    "edited": {
      "time_stamp": "2019-05-08 09:00:51"
    },
    "text": "Only add the `all` class to the popular posts"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-05-08 09:00:52",
    "text": "that sounds like some classic client logic"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:01:09",
    "text": "I know :joy:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:01:19",
    "text": "then you will only get pop posts on all"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-05-08 09:02:57",
    "text": "does anyone know/is it even possible to alter the `contents` of a blog listing template to have the objects ordered by \"most popular\" instead of the default \"most recent\"?\nreason: Client wants a dropdown to switch the returned list of blog posts between most recent/most popular, something like:\n```\n{% if request.query_dict.sortby == 'popular' %}\n  {# contents should have posts ordered by popularity #}\n  {% for content in contents %}\n  ... blog post markup ...\n  {% endfor %}\n{% else %}\n  {# default contents list of posts #}\n  {% for content in contents %}\n  ... blog post markup ...\n  {% endfor %}\n{% endif %}\n```\nUsing some javascript, I know I can append a query-string parameter to the URL when the dropdown option is selected, and have it persist through pagination, but...\nmy assumption, there isn't a way to override the default `contents` list of objects, and the HubSpot `{% post_listing %}` module doesn't appear to work with pagination"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:03:32",
    "text": "there is a query for most popular"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:05:23",
    "text": "So would it be something like this <@U38EZFVFE>\n\n```\n&lt;div class=\"blog-filters\"&gt;\n            &lt;button data-filter=\"*\" class=\"active\"&gt;All&lt;/button&gt;\n            {% set tags = blog_tags(\"default\") %}\n            {% for tag in tags %}\n              &lt;button data-filter=\".{{ tag.slug }}\"&gt;{{ tag.name }}&lt;/button&gt;\n            {% endfor %}\n          &lt;/div&gt;\n          \n          &lt;section class=\"posts-grid\"&gt;\n            &lt;div id=\"most-popular\"&gt;\n              {% set pop_posts = blog_popular_posts('default', 9) %}\n              {% for pop_post in pop_posts %}\n               &lt;article class=\"post all\" data-category=\"{% for topic in rec_post.topic_list %}{{ topic.slug }} {% endfor %}\"&gt;\n                  &lt;div class=\"post-title\"&gt;{{ pop_post.name }}&lt;/div&gt;\n              &lt;/article&gt;\n              {% endfor %}\n            &lt;/div&gt;\n```"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:05:55",
    "text": "are you using data category for sorting?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:06:02",
    "edited": {
      "time_stamp": "2019-05-08 09:06:11"
    },
    "text": "if so `all` would go there"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:06:02",
    "text": "Yes"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:07:27",
    "text": "keep ion mind.. the most popular is only going to show most popular. all of those posts will be available in the categories as well so they dont need the cat slug"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:07:50",
    "text": "so replace `{{ topic.slug}}` with `all`",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-08 09:11:28"
      },
      {
        "time_stamp": "2019-05-08 09:12:55"
      },
      {
        "time_stamp": "2019-05-08 09:13:17"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:08:16",
    "text": "should be able to get rid of the if statement as well."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:08:28",
    "text": "also remove all from the standard posts below"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:11:28",
    "text": "In the data-category for popular posts or the normal articles as well?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:12:55",
    "text": "only the popular posts"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:13:17",
    "text": "all should be removed from the other posts below"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:15:30",
    "text": "OK this is what I have now <@U38EZFVFE>"
  },
  {
    "text": "",
    "time_stamp": "2019-05-08 09:15:52"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:17:16",
    "text": "In the other tags it's still showing the most popular (the blue ones) when it shouldn't <https://gyazo.com/7bb1fb67529d4bcbb16cf6ee300bb686>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:17:30",
    "text": "looks good"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:17:59",
    "text": "The blue ones are popular?"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:18:15",
    "text": "Yep"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:18:27",
    "text": "you need to figure out what all does"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:18:40",
    "text": "is it even in your js?"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:18:50",
    "text": "Is what in my JS"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:19:02",
    "text": "the all class"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:19:25",
    "edited": {
      "time_stamp": "2019-05-08 09:19:36"
    },
    "text": "how does isotope figure out what posts to show?"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:19:33",
    "text": "For the JS I have this"
  },
  {
    "text": "",
    "time_stamp": "2019-05-08 09:19:40"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:22:33",
    "text": "Hope that helps <@U38EZFVFE>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:23:07",
    "edited": {
      "time_stamp": "2019-05-08 09:23:10"
    },
    "text": "`data-filter=\"*\"` should be `data-filter=\"all\"`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:23:18",
    "text": "in your hubl"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:24:40",
    "text": "Still showing"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:24:53",
    "edited": {
      "time_stamp": "2019-05-08 09:24:59"
    },
    "text": "can you send me a link?"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:25:02",
    "text": "Might be due to the article tags that there getting picked up"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:25:17",
    "text": "It's only on preview at the moment, not live"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:25:39",
    "text": "try removing that from them like so:"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:25:48",
    "text": "`&lt;article class=\"post\" data-category=\"all\"&gt;`"
  },
  {
    "poster": {
      "poster_name": "Stephanie O'Gay Garcia",
      "poster_handle": "stephanie"
    },
    "time_stamp": "2019-05-08 09:25:59",
    "text": "I have a couple of blog questions I'm hoping someone can help me with :slightly_smiling_face:\n\n1. How do blogs that load the next piece of content do it (switching URLs and all) - check out the way <https://blog.withings.com/> loads a new post at the bottom - e.g. <https://blog.withings.com/2019/03/21/infographic-the-great-american-sleep-study/> - seemingly forever\n\n2. Would it be possible to do something like that on HubSpot? I feel like a HuBL solution here would be inefficient as it would have to load everything upfront, from the first question, is there a way to redirect to the new page easily?"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:26:22",
    "text": "On the most popular listing <@U38EZFVFE>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-05-08 09:27:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:26:31",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:26:51",
    "text": "most popular should only show when all is selected"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 09:27:47",
    "text": "lets finish this here"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:28:18",
    "text": "OK one sec"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:31:59",
    "text": "OK that kind of worked"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:32:20",
    "text": "It's hiding all of the `all` articles on different tabs"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:32:51",
    "text": "But it's also now hiding a lot of articles relevant to that tab"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:32:52",
    "text": "<https://gyazo.com/add3c517cd5d346f48e36173406e516d>"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:34:30",
    "text": "<https://gyazo.com/c8bc33db00cbe5d733caf2945e214f43>"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:35:04",
    "text": "See all the white space on inbound there all hidden articles"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:38:08",
    "text": "Strange right :confused: <@U38EZFVFE>"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:41:29",
    "text": "So it's hiding all, but not removing them from the div"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 09:50:27",
    "text": "So it seems I need to remove all articles with `data-category=\"all\"` if I'm not on that tab"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 10:16:01",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-05-08 10:17:03",
    "edited": {
      "time_stamp": "2019-05-08 10:17:12"
    },
    "text": "Looks like you are well on your way now ."
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 10:51:14",
    "text": "OK one last thing <@U38EZFVFE>"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 10:57:57",
    "text": "How would I go about hiding the `data-category` all articles"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 11:33:17",
    "text": "Nevermind isotype was adding some inline styling"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 11:59:15",
    "text": "OK display: none is getting set on the most popular posts when I click back onto the `all` tab"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 12:00:20",
    "text": "I've tried to overwrite it\n\n```\n$(function(){\n  var mostPopular = $('.blog-filters button').filter(\"[data-filter='all']\");\n  var postsGrid = $('.posts-grid article');\n              \n   if (mostPopular).hasClass('active') {\n     $(postsGrid).filter(\"[data-category='all']\").css('display','block');\n   };\n});```"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 12:00:45",
    "text": "But the overwrite doesn't take affect"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 12:00:57",
    "text": "I've also tried `.show()`"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 12:05:04",
    "text": "<http://flyingsaucer-4856132.hs-sites.com/-temporary-slug-9e615f67-20d2-45cd-912d-1cb79dec8a37?hs_preview=bBXyckvp-9499920171>"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 12:05:32",
    "text": "So everything is working as expected, and the correct posts are being hidden on the other tabs"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 12:06:25",
    "edited": {
      "time_stamp": "2019-05-08 12:06:38"
    },
    "text": "But see how if you click onto another tab then back onto the `all` tab the posts aren't shown because `display: none` is being set inline"
  },
  {
    "poster": {
      "poster_name": "Ben John Bagley",
      "poster_handle": "ben371"
    },
    "time_stamp": "2019-05-08 12:06:40",
    "text": "<@U38EZFVFE>"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-05-08 14:41:54",
    "text": "Anyone know how to get multiple query strings that share the same field to return both values? e.g. when I use `{{ request.query_dict.field }}` with the following query `<http://example.com/?field=value_1&amp;field=value_2|example.com/?field=value_1&amp;field=value_2>` I only get the first value to return...",
    "reply_count": 8,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-05-08 14:44:34"
      },
      {
        "time_stamp": "2019-05-09 10:31:43"
      },
      {
        "time_stamp": "2019-05-09 10:31:57"
      },
      {
        "time_stamp": "2019-05-09 10:52:31"
      },
      {
        "time_stamp": "2019-05-09 10:52:52"
      },
      {
        "time_stamp": "2019-05-09 10:53:09"
      },
      {
        "time_stamp": "2019-05-09 10:53:18"
      },
      {
        "time_stamp": "2019-05-09 10:53:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-05-08 14:44:34",
    "text": "nvm, i think i'll just use {{ request.query }} and parse the string myself"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-05-08 14:53:37",
    "text": "do hubl for loops not work in css files?"
  },
  {
    "poster": {
      "poster_name": "Ross",
      "poster_handle": "rkpc.ing"
    },
    "time_stamp": "2019-05-08 14:58:28",
    "text": "hello !!!, if anyone could help me, i want to set a number of post in the listing view of my blog, so i found this function {{ contents.total_page_count }} or {{ contents.total_count }} but i am not sure if this will solve it (i am not sure how to use them) or am i wrong?, has anyone know ? or have done it before ?  thanks ! :smile:"
  },
  {
    "text": "There is already an option for this in the system options:",
    "time_stamp": "2019-05-08 14:59:58"
  },
  {
    "poster": {
      "poster_name": "Ross",
      "poster_handle": "rkpc.ing"
    },
    "time_stamp": "2019-05-08 15:03:03",
    "text": "omg !, ready !!, thank you very much !! :smile:"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-05-08 15:16:41",
    "text": "I was trying to convert a sass grid into a hubl grid. Currently, `{% for %}` loops are not outputting anything… Has this always been this way?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-05-08 15:19:38",
    "text": "I believe so, i dont think you can use `{% for %}` loops in CSS but you can use macros"
  }
]
[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-15 07:28:02",
    "text": "This content can't be displayed."
  },
  {
    "poster": {
      "poster_name": "Ilich Padilla",
      "poster_handle": "ilich.padilla"
    },
    "time_stamp": "2021-06-15 09:39:42",
    "text": "That is so niceeeee"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-06-15 10:18:51",
    "text": "Are you able to categorize entries?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-06-15 10:34:05"
      },
      {
        "time_stamp": "2021-06-15 10:35:07"
      },
      {
        "time_stamp": "2021-06-15 10:49:11"
      },
      {
        "time_stamp": "2021-06-15 10:49:54"
      },
      {
        "time_stamp": "2021-06-15 10:57:14"
      },
      {
        "time_stamp": "2021-06-15 11:07:40"
      },
      {
        "time_stamp": "2021-06-15 11:08:05"
      }
    ]
  },
  {
    "text": "Depends kind of what you mean.\n\nYou can associate custom objects with other objects. The object could be your category.\n\nOr you can store a category as a property on the product object.\n\nYou’d want to pick a path based on what makes sense for the businesses needs. Property is likely simplest for most situations.",
    "time_stamp": "2021-06-15 10:34:05"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-15 10:35:07",
    "text": "[alt = screenshot of editing a product that has a custom property called “category” added, involves :taco:]"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-06-15 10:49:11",
    "text": "so can you do multi-level based on associations?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-06-15 10:49:54",
    "text": "(or can the URL be based on multiple props)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2021-06-15 10:57:14",
    "text": "You could have a “category” object that is associated to the products.\n\nYou could create a listing page of the categories, and a listing page of the actual products.\n\nI will ask internally but I’m not 100% confident you could have this URL structure right now:\nListing of categories:\n`/menu`\nListing of items in category:\n`/menu/food/`\nDetail page for individual crm object record.\n`/menu/food/taco`\n\nI’m not confident just purely because of the way dynamic pages function but with the CRM object HubL functions you can actually do quite a lot so this may be possible.\n\nYou could certainly have this structure by not having `/menu` actually be a dynamic page. Though ideally you’d want it to be one.\n\nWill get back to you when I have a solid answer."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-06-15 11:07:40",
    "text": "Great - thanks. I imagine if you can attach a CRM object to a page much like selecting a root HubDB table, then naturally you can create “categories” in the page editor by simply nesting the URLs."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-06-15 11:08:05",
    "text": "but this very quickly gets hard to maintain :smile:"
  }
]
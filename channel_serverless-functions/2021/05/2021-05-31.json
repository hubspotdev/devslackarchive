[
  {
    "poster": {
      "poster_name": "pChausseC",
      "poster_handle": "pccossio"
    },
    "time_stamp": "2021-05-31 07:15:27",
    "text": "Hey <@U22VBL87M> bringing this back up as I can't find any other resource on this. Is there a way to restrict access to serverless functions? You mentionned 'function can be tied to memberships', how would you go about doing that. My use case is I want hs private pages to display hs data (deals/companies/contacts). I thought those could be retrieved through a serverless function to hide hapikey, but that means anyone could get that info with the endpoint! Would there be a way to restrict access, to validate that the request comes from a logged in user or to have any type of auth on the function."
  },
  {
    "poster": {
      "poster_name": "Louis Chaussé",
      "poster_handle": "louis.chausse"
    },
    "time_stamp": "2021-05-31 08:42:22",
    "edited": {
      "time_stamp": "2021-05-31 08:42:34"
    },
    "text": ":eyes:\n\nany update on this <@U0149PQC0HK>?"
  },
  {
    "poster": {
      "poster_name": "pChausseC",
      "poster_handle": "pccossio"
    },
    "time_stamp": "2021-05-31 09:34:17",
    "text": "I thought of using the HubSpotutk cookie and validating it with GET /contacts/v1/contact/utk/:contact_utk/profile endpoint. If no user is found with that cookie, that user is not authenticated. I'm wondering how safe that is/if there is an expiry on that cookie. <@U22VBL87M>"
  },
  {
    "poster": {
      "poster_name": "Vesa Poikajärvi",
      "poster_handle": "vesa.poikajarvi"
    },
    "time_stamp": "2021-05-31 11:32:30",
    "text": "No, we didn't eventually implement this as I did not find/get an answer. Guessing that this is not possible, but since the serverless function requests are proxied through HubSpot platform (via the `/_hcms/api` URL) it should be possible to offer a mechanism based on eg. sessions or csrf tokens for this"
  }
]
[
  {
    "poster": {
      "poster_name": "Chris Conant",
      "poster_handle": "conant_chris"
    },
    "time_stamp": "2019-04-24 07:00:32",
    "text": "Unfortunately you can’t set a variable at the page level and apply it within the stylesheet. However, you can set values in the template’s head using HubL tags (<https://designers.HubSpot.com/docs/hubl/hubl-supported-tags>) and use `export_to_template_context` to make the parameters available in the template. For example, you can create a Color selector and use it within style tags in the head like:\n{% color “color_value” label=‘Choose a color’, color=‘#000000’, no_wrapper=True, export_to_template_context=True %}\n&lt;style&gt;\nbody {\n  background-color: {{ widget_data.color_value.color }};\n}\n&lt;/style&gt;"
  },
  {
    "poster": {
      "poster_name": "Maria Filipe",
      "poster_handle": "maria.filipe"
    },
    "time_stamp": "2019-04-24 07:30:06",
    "text": "That's what I feared... I'm changing my approach, so will keep the theme colors centrally in the css main file and content editors will be able to set colors at section and module level from a dropdown of the 5 presets + a custom. For anyone wanting to change the theme color presets, I'll link a cloned stylesheet with those values upon request, but this way they will still be able to have the look &amp; feel they need for each event page with some autonomy and we can still keep things organised and manageable on the dev side. It's a fine balance to give the right amount of flexibility and autonomy while keeping things easy to deploy to content editors with very different levels of expertise."
  },
  {
    "poster": {
      "poster_name": "Chris Conant",
      "poster_handle": "conant_chris"
    },
    "time_stamp": "2019-04-24 07:57:39",
    "text": "That seems like a great idea - you can easily make default edits in the stylesheet, but offer customers the ability to update specific elements on a per-page basis."
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-24 09:14:47",
    "text": "<@U2H3TT8F2> I was wondering for the Link field in a Custom Module, is there a way to determine if it is empty, what would be the syntax to that, or if there is a way to make the Link Field, default to empty",
    "reply_count": 17,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-04-24 09:24:02"
      },
      {
        "time_stamp": "2019-04-24 09:49:53"
      },
      {
        "time_stamp": "2019-04-24 09:50:09"
      },
      {
        "time_stamp": "2019-04-24 09:51:05"
      },
      {
        "time_stamp": "2019-04-24 09:51:21"
      },
      {
        "time_stamp": "2019-04-24 09:51:28"
      },
      {
        "time_stamp": "2019-04-24 09:52:50"
      },
      {
        "time_stamp": "2019-04-24 09:53:01"
      },
      {
        "time_stamp": "2019-04-24 09:53:35"
      },
      {
        "time_stamp": "2019-04-24 09:55:06"
      },
      {
        "time_stamp": "2019-04-24 09:55:16"
      },
      {
        "time_stamp": "2019-04-24 09:56:26"
      },
      {
        "time_stamp": "2019-04-24 09:56:48"
      },
      {
        "time_stamp": "2019-04-24 09:57:15"
      },
      {
        "time_stamp": "2019-04-24 09:59:29"
      },
      {
        "time_stamp": "2019-04-24 10:00:29"
      },
      {
        "time_stamp": "2019-04-24 10:02:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:24:02",
    "text": "test if the url.ref is empty"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-24 09:49:53",
    "text": "<@UD53A9UUR>, I tried to use this other other syntax but no HTML prints:\n\n{% if item.button_link.url.href != 0 %}\n        &lt;div class=“button” style=“”&gt;\n          {% set href = item.button_link.url.href %}\n          {% if item.button_link.url.type is equalto “EMAIL_ADDRESS” %}\n          {% set href = “mailto:” + href %}\n          {% endif %}\n            &lt;a href=“{{ href }}” class=“btn secondary-btn”\n             {% if item.button_link.open_in_new_tab %}target=“_blank”{% endif %}\n             {% if item.button_link.no_follow %}rel=“nofollow”{% endif %}\n             &gt;\n            {{ item.button_label }}\n          &lt;/a&gt;\n        &lt;/div&gt;\n        {% else %}\n        {% endif %}"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-24 09:50:09",
    "text": "I dont know the shortcut to make code snippet in this side view, sorry"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:51:05",
    "text": "remove the `!= 0 `"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:51:21",
    "text": "that will just say if the url exists, do the following"
  },
  {
    "text": "Also it seems like the Link field has to have some kind of Default field, so how do I force that, I using the Link Field:",
    "time_stamp": "2019-04-24 09:51:28"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-24 09:52:50",
    "text": "yeah I tried that originally it does not print the button still"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:53:01",
    "text": "hold on"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-24 09:53:35",
    "text": "oh wait maybe it did"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:55:06",
    "text": "```{% if module.link_field.url.href %}\n{% set href = module.link_field.url.href %}\n{% if module.link_field.url.type is equalto \"EMAIL_ADDRESS\" %}\n\t{% set href = \"mailto:\" + href %}\n{% endif %}\n&lt;a href=\"{{ href }}\"\n\t{% if module.link_field.open_in_new_tab %}target=\"_blank\"{% endif %}\n\t{% if module.link_field.no_follow %}rel=\"nofollow\"{% endif %}\n\t&gt;\n  {{ module.button_label }}\n\n&lt;/a&gt;\n{% endif %}```"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:55:16",
    "text": "tested this and it works for me"
  },
  {
    "text": "",
    "time_stamp": "2019-04-24 09:56:26"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-04-24 09:56:48",
    "text": "Looks like <@UD53A9UUR> has this, sry, been swamped with client work lol"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:57:15",
    "text": "i am here for you, dude."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 09:59:29",
    "text": "<@UF6M5BW4C>, my example was not in a repeater and it looks like yours is.  make sure to update `module` to `item`"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-04-24 10:00:29",
    "text": "<@UD53A9UUR> its does look likes it working, thank you, strange I thought I tried that syntax, maybe I had something else, THANK YOU!!!"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-04-24 10:02:09",
    "text": "no worries.  good luck out there :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-04-24 12:57:54",
    "text": "<@U7SL518D6> Can I just say, you're amazing. You just showed me something I didn't know existed for custom modules.\nPredefining the custom module's fields from the module declaration = :partyparrot:"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-04-24 14:04:15",
    "text": "<@U7SL518D6> Actually, related to this, but do you know the correct markup to use for coded defaults of a repeater / nested fields in a custom module?\nI feel like the `image={\"src\": \"...\"}` you have is probably close to it, but trying that didn't get anything to render for me."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-04-24 14:22:51",
    "text": "<@UBDMV6Y9Y> Has the most experience looking at the module block functionality"
  },
  {
    "poster": {
      "poster_name": "Liam Harwood",
      "poster_handle": "lharwood"
    },
    "time_stamp": "2019-04-24 14:27:46",
    "text": "<@U7SL518D6> I can take a look at this, mind DMing a link to the template?"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2019-04-24 14:53:28",
    "edited": {
      "time_stamp": "2019-04-24 14:54:13"
    },
    "text": "`{% content_attribute 'field_name' %}` to the rescue!\n\nIf it's a single value (say a `boolean`, `text`, `rich_text` field), writing the value out works.\n```\n{% content_attribute \"show_bg_color\" %}true{% end_content_attribute %}\n```\n\nAnd for repeater / field groups:\n```\n{% module_block module \"prod_features\" path=\"###\", label=\"Product-Features\" %}\n{% content_attribute \"features\" is_json=True %}\n    [{\n      \"type\": \"list\",\n      \"section_header\": \"Features-at-a-glance\",\n      \"details\": [{\n          \"image\": { \"src\": \"\", \"alt\": null },\n          \"header\": \"Sample feature header\",\n          \"content\": \"&lt;ul&gt;\\n&lt;li&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsum velit, consequatur aliquid.&lt;/li&gt;\\n&lt;li&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Porro quaerat neque eaque doloremque fugiat.&lt;/li&gt;\\n&lt;/ul&gt;\"\n        },{\n          \"image\": { \"src\": \"\", \"alt\": null },\n          \"header\": \"Sample feature header\",\n          \"content\": \"&lt;ul&gt;\\n&lt;li&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsum velit, consequatur aliquid.&lt;/li&gt;\\n&lt;li&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Porro quaerat neque eaque doloremque fugiat.&lt;/li&gt;\\n&lt;/ul&gt;\"\n        },{\n          \"image\": { \"src\": \"\", \"alt\": null },\n          \"header\": \"Sample feature header\",\n          \"content\": \"&lt;ul&gt;\\n&lt;li&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsum velit, consequatur aliquid.&lt;/li&gt;\\n&lt;li&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Porro quaerat neque eaque doloremque fugiat.&lt;/li&gt;\\n&lt;/ul&gt;\"\n        }]\n    }]\n    {% end_content_attribute %}\n{% end_module_block %}\n```\n\nHope that helps!"
  },
  {
    "poster": {
      "poster_name": "Jack McDermott",
      "poster_handle": "jmcdermott"
    },
    "time_stamp": "2019-04-24 17:46:16",
    "text": "Curious if anyone's used HubL to develop Smart Modules based on IP address state/region? Or any development partners that may know solutions here (ex. if state/region == California, show California logo module)"
  }
]
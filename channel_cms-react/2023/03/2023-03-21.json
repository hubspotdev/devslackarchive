[
  {
    "text": "Hi everyone - I wanted to share a quick update with breaking changes for new project builds. In an effort to keep naming consistent with how developers reference JavaScript modules and partials from HubL (and to match ES module resolution), single-file CMS modules will now need to include their file extension in the `path` param in HubL. This brings single-file modules inline with the recommended usage of partials. For example:\n```// go from this\n{% js_module \"my_module\"\n    path=\"@projects/hello-world-project/cms-assets/components/modules/MySingleFileModule\" %}\n\n// to this\n{% js_module \"my_module\"\n    path=\"@projects/hello-world-project/cms-assets/components/modules/MySingleFileModule.jsx\" %}\n\n// or this, if you're using typescript to define your module\n{% js_module \"my_module\"\n    path=\"@projects/hello-world-project/cms-assets/components/modules/MySingleFileModule.tsx\" %}```\nIf you define your module with a folder and an `index` file, then you can continue to omit the `/index` and don’t need to include an extension (similar to regular JavaScript modules)\nIf you’re having trouble resolving your module, our error output should include available entry points your page’s JavaScript console if your `path` can’t be found when rendering the page (see below). Thank you!",
    "time_stamp": "2023-03-21 13:34:46"
  }
]
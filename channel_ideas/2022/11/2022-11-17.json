[
  {
    "poster": {
      "poster_name": "Anup Sharma",
      "poster_handle": "anup626"
    },
    "time_stamp": "2022-11-17 09:07:10",
    "text": ":wave: Hello, team!"
  },
  {
    "poster": {
      "poster_name": "Anup Sharma",
      "poster_handle": "anup626"
    },
    "time_stamp": "2022-11-17 09:07:56",
    "text": "Is there a way for me to add a promo code field to a form?\nso like they can only complete the form if they enter the correct code?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2022-11-28 02:53:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Anup Sharma",
      "poster_handle": "anup626"
    },
    "time_stamp": "2022-11-17 09:09:15",
    "text": "Is this possible?"
  },
  {
    "text": "Is this working in your portal <@U01QVR44MEY>? I tried your approach and can't get it to print correctly. :thinking_face:",
    "time_stamp": "2022-11-17 09:40:33"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 09:43:08",
    "text": "It does work for on mine, and I could hop on a quick huddle to walk you through it, does {{col_testing_stack }} have a value?"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 09:46:40",
    "text": "<@U01QVR44MEY> let me play with this some more and make sure I'm not missing something dumb. If I can't crack it I may take you up on the huddle. I appreciate it."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 09:59:43",
    "text": "<@U01QVR44MEY> I think I may have figured something out. Gonna see if I can get this working with a macro. Thanks for your help!"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 10:41:42",
    "text": "Of course, would love to see the finished product. This is the first time I've ever seen anyone do an inception thing"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-11-17 12:14:16",
    "text": "I too am curious. I tried something like this once, but I gave up"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 12:16:59",
    "text": "<@UATE4ATHP> Inceptions in macros? or just inceptions?"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 12:18:29",
    "text": "<@U01QVR44MEY> I actually couldn't get it working.  I found a different solution for what I was trying to do with the macros."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 12:22:11",
    "text": "Oh nice, what was the solution?"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-11-17 12:23:23",
    "edited": {
      "time_stamp": "2022-11-17 12:24:54"
    },
    "text": "inceptions anywhere"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 12:28:07",
    "text": "Darn it. Spoke too soon."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 12:34:56",
    "text": "Here is what I'm trying to just get the general INCEPTION concept to work but it's not printing correctly.\n<https://www.loom.com/share/c43e38df4fb5445fa780fd0665924d0a>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 12:38:01",
    "text": "But you don't have a hubl variable called 'please-testing123-work' so it's trying to call that but pulling nothing"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 12:42:26",
    "text": "Let me build out this example real quick"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 12:42:52",
    "text": "Awesome! Gotta hop on Zoom. Feel free to do a loom video if you have that app."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 12:51:24",
    "text": "<https://www.loom.com/share/ffece038f2f54dc2887d656f23ca9e65>"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 13:10:28",
    "text": "<@U01QVR44MEY> Rad. Ok, let me repeat exactly what you have here."
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-11-17 13:30:52",
    "edited": {
      "time_stamp": "2022-11-17 13:30:59"
    },
    "text": "\"It works allegedly\""
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 13:31:14",
    "text": "Code lies :laughing:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 13:31:37",
    "text": "You can never trust it one moment it works and the next it doesn't"
  },
  {
    "text": "",
    "time_stamp": "2022-11-17 13:52:05"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-17 13:53:49",
    "text": "Very nice :clapping:"
  },
  {
    "text": "even better",
    "time_stamp": "2022-11-17 13:55:44"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-11-17 13:56:27",
    "text": "```{%- macro show_col(col_num)  -%}\n\n{% set col = module[\"col_\"~col_num] %}\n{{col.txt}}\n\n{%- endmacro -%}\n\n{{ show_col(1) }}```"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 14:04:25",
    "text": "Rad <@UATE4ATHP>! I'm going to give this a go."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 14:48:09",
    "edited": {
      "time_stamp": "2022-11-17 14:49:48"
    },
    "text": "<@UATE4ATHP> quick question. What value do you have in the `txt` Text field? I think that may be what I'm missing. Meaning do you have some text in the actual Text field type?"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2022-11-17 14:53:28",
    "text": "Yeah. The text in the module field was 'col 1'"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-17 14:54:00",
    "text": "Gotcha!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2022-11-17 15:28:35",
    "text": "Just wanted to circle up on this that I wrote a post based on this and it was published today: <https://developers.HubSpot.com/blog/using-postman-with-HubSpots-batch-cms-pages-api-to-quickly-create-a-structure-or-skeleton-of-your-website>"
  }
]
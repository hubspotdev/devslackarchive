[
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-03-03 01:41:43",
    "text": "Hey Matt - how about macros"
  },
  {
    "poster": {
      "poster_name": "Jhon Michael Bolima",
      "poster_handle": "jmbolima12"
    },
    "time_stamp": "2021-03-03 11:23:09",
    "text": "Thank you <@U7SL518D6> !"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-03-03 13:28:27",
    "text": "How can I make a repeater work endless times but only display a specific number?",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-03-03 13:36:34"
      },
      {
        "time_stamp": "2021-03-03 13:37:13"
      },
      {
        "time_stamp": "2021-03-03 13:37:30"
      },
      {
        "time_stamp": "2021-03-03 13:37:35"
      },
      {
        "time_stamp": "2021-03-03 13:38:52"
      },
      {
        "time_stamp": "2021-03-03 13:38:59"
      },
      {
        "time_stamp": "2021-03-03 13:39:54"
      },
      {
        "time_stamp": "2021-03-03 13:40:32"
      },
      {
        "time_stamp": "2021-03-03 13:41:13"
      },
      {
        "time_stamp": "2021-03-03 13:41:38"
      },
      {
        "time_stamp": "2021-03-03 13:41:48"
      },
      {
        "time_stamp": "2021-03-03 13:41:54"
      },
      {
        "time_stamp": "2021-03-03 13:42:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-03-03 13:36:34",
    "text": "Not sure if this is what you need:\n```{% for item in module.repeater %}\n  {% if loop.index &lt; amount %}\n     // Do something\n  {% endif %}\n{% endfor %}```\n"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-03-03 13:37:13",
    "text": "im dumb. x("
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-03-03 13:37:30",
    "text": "Thanks you. Mind if i ask you one more question?"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-03-03 13:37:35",
    "text": "Shoot!"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-03-03 13:38:52",
    "text": "Actually, I think I just figured it out"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-03-03 13:38:59",
    "text": "Haha cool"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-03-03 13:39:54",
    "text": "Trying to display loop.length outside the loop itself. I would just set a blank variable and in the loop , ill set it to set var = loop.length."
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-03-03 13:40:32",
    "text": "There is a better solution for that! Use `{{module.repeater|length}}`"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-03-03 13:41:13",
    "edited": {
      "time_stamp": "2021-03-03 13:41:37"
    },
    "text": "The `|length` filter will return the length of the array"
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-03-03 13:41:38",
    "text": "ohhhh. Wasnt thinking about the loop like an array."
  },
  {
    "poster": {
      "poster_name": "Kevin Ordener",
      "poster_handle": "k.ordener.dev"
    },
    "time_stamp": "2021-03-03 13:41:48",
    "text": "smart! Thanks again!"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-03-03 13:41:54",
    "text": "No problem!"
  },
  {
    "poster": {
      "poster_name": "Teun Rutten",
      "poster_handle": "teun"
    },
    "time_stamp": "2021-03-03 13:42:12",
    "text": "<https://developers.HubSpot.com/docs/cms/hubl/filters#length>"
  },
  {
    "poster": {
      "poster_name": "Jhon Michael Bolima",
      "poster_handle": "jmbolima12"
    },
    "time_stamp": "2021-03-03 14:56:15",
    "text": "Hi, guys!! I need to be enlightened, and I think you can help me. I am using react in our project. The problem is cross-filtering in two objects is not yet available in serverless function. Now, someone suggested that I should use the HubL function(crm_association) and saying that it will be the solution in cross-filtering. The problem is that JavaScript can’t pass variables to HubL. What we need is a dynamic function wherein it will accept inputs from the user. Do you think it is possible or feasible?"
  },
  {
    "poster": {
      "poster_name": "Matt Atlas",
      "poster_handle": "matt616"
    },
    "time_stamp": "2021-03-03 15:44:20",
    "text": "Good one!"
  },
  {
    "poster": {
      "poster_name": "Martin Angeletti",
      "poster_handle": "martin041"
    },
    "time_stamp": "2021-03-03 16:27:36",
    "text": "*Quick question*: is there a way to get the values available to a property? Say Contact.Country for example. Maybe something like `hubdb_table_column` but with `crm_objects`?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-03-05 13:19:43"
      }
    ]
  },
  {
    "text": "hi I am trying to display the property from Ecommerce Bridge integration in this format but am struggling to get it to work",
    "time_stamp": "2021-03-03 20:41:18"
  },
  {
    "text": "if I pprint deal.closedate this is output",
    "time_stamp": "2021-03-03 20:43:48"
  },
  {
    "text": "here is value saved in HubSpot property",
    "time_stamp": "2021-03-03 20:46:26"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tom449"
    },
    "time_stamp": "2021-03-03 20:46:48",
    "text": "have tried strtotime datetimeformat etc but no luck any ideas?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-03-03 22:05:50",
    "text": "`{{ datetimeformat(deal.closedate, ‘%d %B %Y, %I:%M%p’) }} `"
  },
  {
    "text": "unfortunately that doesn't work, datetimeformat expects arg 1 to be a datetime however deal.closedate is a string as you can see in screenshot <https://HubSpotdev.slack.com/files/U01Q0TQELJ1/F01Q472309H/image.png>",
    "time_stamp": "2021-03-03 23:28:33"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-03-03 23:29:11",
    "text": "That's the issue"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-03-03 23:29:24",
    "text": "It needs to be a time stamp"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tom449"
    },
    "time_stamp": "2021-03-03 23:33:37",
    "text": "yes HubSpot is storing this property as a timestamp value, however when interpreted by hubL it is outputted as a string which is odd (im guessing its some sort of scalar type). Perhaps there is a way to cast this value as a timestamp? I have not found a way in the docs though"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-03-03 23:39:11",
    "text": "Pprint deal"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-03-03 23:39:26",
    "text": "See if you can find where it's stored"
  },
  {
    "text": "thats a good idea however unfortunately when I try and publish email with `{{ deal | pprint }}` it doesnt like it so I cant check the value",
    "time_stamp": "2021-03-03 23:53:14",
    "edited": {
      "time_stamp": "2021-03-03 23:53:39"
    }
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2021-03-03 23:53:50",
    "text": "Just preview it in the template?"
  },
  {
    "text": "the template preview is getting some sort of test data injected which doesnt have a orderdate property",
    "time_stamp": "2021-03-03 23:54:43"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tom449"
    },
    "time_stamp": "2021-03-03 23:58:29",
    "text": "id imagine when pprinting the proper deal data the debug output would be very large with all sorts of values and cause problems causing error validation to fail"
  },
  {
    "poster": {
      "poster_name": "Tom",
      "poster_handle": "tom449"
    },
    "time_stamp": "2021-03-04 00:00:12",
    "text": "Id imagine closedate part of the pprint would just say the same as the `{{ deal.closedate | pprint }}` does anyway which is (string: 2/28/21)"
  },
  {
    "text": "closedate property is HubSpot created value with field type as date picker",
    "time_stamp": "2021-03-04 00:02:01"
  }
]
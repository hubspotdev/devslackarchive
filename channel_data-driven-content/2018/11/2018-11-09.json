[
  null,
  null,
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-11-09 07:23:09",
    "edited": {
      "time_stamp": "2018-11-09 07:23:31"
    },
    "text": "Is there a native way in hs to import items to HubDB without erasing the old ones. When I choose the replace option, it just deletes the entire database and imports whatever is in the file and gives the rows new ids",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-11-09 07:31:41"
      },
      {
        "time_stamp": "2018-11-09 10:47:29"
      },
      {
        "time_stamp": "2018-11-09 12:35:41"
      },
      {
        "time_stamp": "2018-11-09 12:38:37"
      },
      {
        "time_stamp": "2018-11-09 12:51:44"
      },
      {
        "time_stamp": "2018-11-09 14:04:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-09 07:31:41",
    "text": "You can add more rows or you can clone the table and import into that"
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Victoria Gumaer",
      "poster_handle": "vgumaer"
    },
    "time_stamp": "2018-11-09 10:47:29",
    "text": "<@U3T21PDBK> can you give me a little bit of context into this?  Are you thinking that if you import data from a file that has a row ID matching an existing row in your table that the fields that are different in that row are the only things updated?"
  },
  null,
  null,
  {
    "text": "I expect the hs row ids to match after importing",
    "time_stamp": "2018-11-09 12:35:41"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-11-09 12:38:37",
    "text": "And yes, <@U5SGFUU80>, your example was also in my line of thinking. But most importantly, the changing `hs_id`s are breaking some things after import"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-09 12:51:44",
    "text": ":eyes:"
  },
  {
    "poster": {
      "poster_name": "Victoria Gumaer",
      "poster_handle": "vgumaer"
    },
    "time_stamp": "2018-11-09 14:04:21",
    "text": ":thumbsup:  Thank you for clarifying."
  },
  null,
  null
]
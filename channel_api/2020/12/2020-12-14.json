[
  {
    "poster": {
      "poster_name": "Quentin Lamamy",
      "poster_handle": "quentin.lamamy"
    },
    "time_stamp": "2020-12-14 09:00:16",
    "text": "The v3 is public "
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2020-12-14 12:30:19",
    "text": "Oauth/App installation question. Are we expected to store refresh tokens for instances where our App is installed indefinitely somewhere? This seems slightly strange to me... I might ordinarily just send a user through an auth flow again when things expire but reinstalling the App in this case seems like what would be needed.",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-12-14 12:39:38"
      },
      {
        "time_stamp": "2020-12-14 12:42:19"
      },
      {
        "time_stamp": "2020-12-14 12:45:32"
      },
      {
        "time_stamp": "2020-12-14 12:49:54"
      },
      {
        "time_stamp": "2020-12-14 12:50:21"
      },
      {
        "time_stamp": "2020-12-14 13:04:47"
      },
      {
        "time_stamp": "2020-12-14 14:09:41"
      },
      {
        "time_stamp": "2020-12-14 14:10:31"
      },
      {
        "time_stamp": "2020-12-14 14:15:59"
      },
      {
        "time_stamp": "2020-12-14 14:31:45"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-12-14 12:37:44",
    "text": "Not sure if this is just in how it translated to slack or not but you need to use the backtick charchter rather than single quote when using string interpolation like you are with the PORT variable.\n\n```tl;dr -Change your ' to ` ```"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-12-14 12:38:41",
    "text": "No, Webhook API calls will have the x-HubSpot-signature header you can use to verify that the webhook is coming from HubSpot, however they do not support OAuth"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-12-14 12:39:38",
    "text": "If you’d like to avoid having to make the user re-authorize every 6 hours (the lifetime of an access_token) then yes, you would need to store the refresh token.\n\nHow would you expect this to work out of curiousity?"
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2020-12-14 12:42:19",
    "text": "Does re-authorize in this case mean reinstalling the app?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-12-14 12:45:32",
    "text": "Not exactly. It’s the same flow for the user, but the app remains installed. For example if you had webhooks configured for you app, those would still continue to fire after the 6 hours. You just wouldn’t have any valid access tokens to make a call back to HubSpot if you wanted to. The app is still installed but would need to be re-authorized to make any API calls to HubSpot"
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2020-12-14 12:49:54",
    "text": "So I would just redirect them to the install link?"
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2020-12-14 12:50:21",
    "text": "Not every user is going to be able to install the App, I'd imagine... there must be something I am missing."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-12-14 13:04:47",
    "text": "I think the difference is for most HubSpot apps, it’s just installed by a Super Admin and the integration just runs in the background, refreshing the tokens as needed. It sounds like you are thinking about a user level integration?"
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2020-12-14 14:09:41",
    "text": "How does one invalidate a refresh token?"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-12-14 14:10:31",
    "text": "When the user uninstalls the app from inside HubSpot, that invalidates the refresh token"
  },
  {
    "poster": {
      "poster_name": "Lance Erickson",
      "poster_handle": "lance.erickson"
    },
    "time_stamp": "2020-12-14 14:15:59",
    "text": "Thanks for your patience, Zack."
  },
  {
    "text": "Heyyy I'm getting a 401 Unauthorized error when I try to change the value an object property through the API. I'm using oauth2 and successfully generating an access token. However, I'm doing this through an integration platform (Boomi) that doesn't give you particularly verbose error output. To better troubleshoot, I'm also trying to recreate the request in Postman in the hopes that i'll get more descriptive output, but i then get the very helpful message:",
    "time_stamp": "2020-12-14 14:24:34",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-12-17 15:59:57"
      },
      {
        "time_stamp": "2020-12-17 16:00:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2020-12-14 14:31:45",
    "text": "No problem"
  },
  {
    "subtype": "tombstone",
    "text": "This message was deleted.",
    "time_stamp": "2020-12-14 15:04:08",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-12-14 15:23:15"
      },
      {
        "time_stamp": "2020-12-14 15:29:49"
      },
      {
        "time_stamp": "2020-12-16 14:31:41"
      },
      {
        "time_stamp": "2020-12-16 16:41:31"
      },
      {
        "time_stamp": "2020-12-16 16:42:33"
      },
      {
        "time_stamp": "2020-12-16 16:44:08"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gary Wong",
      "poster_handle": "gary"
    },
    "time_stamp": "2020-12-14 15:23:15",
    "text": "I don’t mean to hijack, but Source Code API?  How do we get beta access to *that*? :grin:"
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2020-12-14 15:29:49",
    "text": "i would be interested as well!"
  },
  {
    "poster": {
      "poster_name": "Gary Wong",
      "poster_handle": "gary"
    },
    "time_stamp": "2020-12-14 16:58:38",
    "text": "Some of the APIs are not available for public beta yet, like Layouts, Modules, etc.  Would be interested in private beta for testing."
  }
]
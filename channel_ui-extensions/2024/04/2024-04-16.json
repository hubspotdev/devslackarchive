[
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 10:18:02",
    "text": "Hi! I'm building a ui extension card and I want to know if it is possible to have some sort of popup show after clicking some button that displays another component (in my instance, I want to show a table of relevant records).\n\nI know an Iframe can be used to show a popup, but I'm under the impression that you can only display external web content. If that is true, is there another way to have a pop up with custom content via clicking some button in a UI extension card?\n\nThanks for the help!",
    "reply_count": 66,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-04-16 11:57:22"
      },
      {
        "time_stamp": "2024-04-16 12:01:21"
      },
      {
        "time_stamp": "2024-04-16 12:49:33"
      },
      {
        "time_stamp": "2024-04-16 12:49:41"
      },
      {
        "time_stamp": "2024-04-16 12:49:47"
      },
      {
        "time_stamp": "2024-04-16 13:39:46"
      },
      {
        "time_stamp": "2024-04-16 14:17:02"
      },
      {
        "time_stamp": "2024-04-16 14:17:43"
      },
      {
        "time_stamp": "2024-04-16 14:18:09"
      },
      {
        "time_stamp": "2024-04-16 14:18:15"
      },
      {
        "time_stamp": "2024-04-16 14:18:30"
      },
      {
        "time_stamp": "2024-04-16 14:18:56"
      },
      {
        "time_stamp": "2024-04-16 14:19:50"
      },
      {
        "time_stamp": "2024-04-16 14:20:03"
      },
      {
        "time_stamp": "2024-04-16 14:20:11"
      },
      {
        "time_stamp": "2024-04-16 14:49:11"
      },
      {
        "time_stamp": "2024-04-16 14:50:33"
      },
      {
        "time_stamp": "2024-04-16 14:51:10"
      },
      {
        "time_stamp": "2024-04-16 14:51:58"
      },
      {
        "time_stamp": "2024-04-16 14:52:02"
      },
      {
        "time_stamp": "2024-04-16 14:52:06"
      },
      {
        "time_stamp": "2024-04-16 14:52:29"
      },
      {
        "time_stamp": "2024-04-16 14:53:37"
      },
      {
        "time_stamp": "2024-04-16 15:05:54"
      },
      {
        "time_stamp": "2024-04-16 15:06:24"
      },
      {
        "time_stamp": "2024-04-16 15:08:08"
      },
      {
        "time_stamp": "2024-04-16 15:15:30"
      },
      {
        "time_stamp": "2024-04-16 15:23:06"
      },
      {
        "time_stamp": "2024-04-16 15:23:29"
      },
      {
        "time_stamp": "2024-04-16 15:23:33"
      },
      {
        "time_stamp": "2024-04-16 15:24:06"
      },
      {
        "time_stamp": "2024-04-16 15:24:15"
      },
      {
        "time_stamp": "2024-04-16 15:24:37"
      },
      {
        "time_stamp": "2024-04-16 15:36:40"
      },
      {
        "time_stamp": "2024-04-16 15:37:47"
      },
      {
        "time_stamp": "2024-04-16 15:37:55"
      },
      {
        "time_stamp": "2024-04-16 15:40:11"
      },
      {
        "time_stamp": "2024-04-16 15:40:46"
      },
      {
        "time_stamp": "2024-04-16 15:46:21"
      },
      {
        "time_stamp": "2024-04-16 15:47:09"
      },
      {
        "time_stamp": "2024-04-16 15:47:27"
      },
      {
        "time_stamp": "2024-04-16 15:47:36"
      },
      {
        "time_stamp": "2024-04-16 15:48:24"
      },
      {
        "time_stamp": "2024-04-16 15:49:01"
      },
      {
        "time_stamp": "2024-04-16 15:49:10"
      },
      {
        "time_stamp": "2024-04-16 15:49:18"
      },
      {
        "time_stamp": "2024-04-16 15:49:41"
      },
      {
        "time_stamp": "2024-04-16 15:51:11"
      },
      {
        "time_stamp": "2024-04-16 15:52:26"
      },
      {
        "time_stamp": "2024-04-16 15:52:32"
      },
      {
        "time_stamp": "2024-04-16 15:56:23"
      },
      {
        "time_stamp": "2024-04-16 15:57:06"
      },
      {
        "time_stamp": "2024-04-16 15:57:50"
      },
      {
        "time_stamp": "2024-04-16 15:59:59"
      },
      {
        "time_stamp": "2024-04-16 16:01:44"
      },
      {
        "time_stamp": "2024-04-16 16:02:02"
      },
      {
        "time_stamp": "2024-04-16 16:02:04"
      },
      {
        "time_stamp": "2024-04-16 16:02:12"
      },
      {
        "time_stamp": "2024-04-16 16:03:07"
      },
      {
        "time_stamp": "2024-04-16 16:03:38"
      },
      {
        "time_stamp": "2024-04-16 16:03:52"
      },
      {
        "time_stamp": "2024-04-16 16:03:56"
      },
      {
        "time_stamp": "2024-04-16 16:05:28"
      },
      {
        "time_stamp": "2024-04-16 16:06:30"
      },
      {
        "time_stamp": "2024-04-16 16:09:43"
      },
      {
        "time_stamp": "2024-04-16 16:10:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Aanchal Sheth (HubSpot PM)",
      "poster_handle": "asheth"
    },
    "time_stamp": "2024-04-16 11:57:22",
    "text": "Hi Robert! So you can use our <https://developers.HubSpot.com/docs/platform/ui-extension-components#panel|Panel component> right now which will show up as slideout on top of the page. If you want the background to be out of focus you can use the `variant = \"modal\"` . Does that help?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 12:01:21",
    "text": "Yes, also if I have multiple extension cards in one app, can they talk to each other? Like if something happens in one card, can I update the other card?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 12:49:33",
    "text": "Cross card communication isn't currently possible unless you create an object property and use the\n```onCrmPropertiesUpdate```\nfunction"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 12:49:41",
    "text": "<https://developers.HubSpot.com/docs/platform/ui-extensions-sdk#listen-for-property-updates>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 12:49:47",
    "text": "Bit of a hack"
  },
  {
    "text": "This will play, love seeing this:",
    "time_stamp": "2024-04-16 13:15:41",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-16 13:16:53"
      },
      {
        "time_stamp": "2024-04-17 10:32:36"
      },
      {
        "time_stamp": "2024-04-17 10:33:39"
      }
    ]
  },
  {
    "text": "<https://developers.HubSpot.com/docs/platform/create-ui-extensions#extension-location>",
    "time_stamp": "2024-04-16 13:16:53"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 13:39:46",
    "text": "hmmm ok thanks Iâ€™ll look into to this"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:17:02",
    "text": "<@U01QVR44MEY> can you add custom objects to objectTypes in the card's config file?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:17:43",
    "text": "yes of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:18:09",
    "text": "<https://arc.net/l/quote/sdhisizd>"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:18:15",
    "text": "what is the identifier? fullyQualifiedName?, or something else"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:18:30",
    "text": "what's your object name?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:18:56",
    "text": "fully qualified is p45686163_cstoolkit__Sentiment"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:19:50",
    "edited": {
      "time_stamp": "2024-04-16 14:19:53"
    },
    "text": "so the correct name would be: p_cstoolkit__Sentiment that's my understanding"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:20:03",
    "text": "cool, that 's what I'm seeing"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:20:11",
    "text": "it is possible that the label of the object has any special characters in it?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:49:11",
    "text": "<@U01QVR44MEY> I'm a bit confused on how to use this onCrmPropertiesUpdate function. Let's say I submit a form on my card that changes a prop on the CRM record, how can I properly set up this function to listen for those changes?\n\nShouldn't it simply be `onCrmPropertiesUpdate('*', (properties) =&gt; console.log(properties))`?\n\nDo I need it in a useEffect?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:50:33",
    "text": "This is within the same card btw"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:51:10",
    "text": "I personally wouldn't use the asterisk, I would just define the single property in an array (this will make sure you don't spam your card)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:51:58",
    "text": "You shouldn't need to use a useEffect for this"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:52:02",
    "text": "yeah I'm just not able to see any console logs when I change a prop on the CRM record"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:52:06",
    "text": "Here's an example: <https://github.com/HubSpot/ui-extensions-examples/blob/main/bi-directional-property-refresh/src/app/extensions/PropertyRefreshExtension.tsx>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 14:52:29",
    "text": "is the property change and crm card on the same record?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 14:53:37",
    "text": "yes it is"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:05:54",
    "text": "right now I have it set so when I submit some form from the card on a company record, a workflow is triggered to update a custom company property (have to do it this way for a couple reasons), but I'm not seeing the property update with that line I mentioned before"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:06:24",
    "text": "I have\n```// Define the extension to be run within the HubSpot CRM\nHubSpot.extend(({ actions, context, runServerlessFunction, }) =&gt; (\n  &lt;Extension\n    context={context}\n    runServerless={runServerlessFunction}\n    fetchProperties={actions.fetchCrmObjectProperties}\n    onCrmPropertiesUpdate={actions.onCrmPropertiesUpdate}\n  /&gt;\n));```\nthen\n```  onCrmPropertiesUpdate('*', (properties) =&gt; {\n    debugger\n    console.log(properties)\n  })```\nin the component, not sure what is wrong"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:08:08",
    "text": "<@U03FJQPSC0Y> if you update a property via a workflow that would still hit the event bus right?"
  },
  {
    "text": "For context, I added a custom prop to company called \"Latest Sentiment\". When I add a record to my custom obj, \"cstoolkit__Setiment\", the `sentiment` field is copied to the `Latest Sentiment` field of the company record",
    "time_stamp": "2024-04-16 15:15:30"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:23:06",
    "text": "yea it works if I change a property via UI, but I guess not via workflow?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:23:29",
    "text": "via UI meaning on the company record"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:23:33",
    "text": "page"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:24:06",
    "text": "interesting, did you wait long enough?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:24:15",
    "text": "possible that the workflow enrollment just takes a minute"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:24:37",
    "text": "yeah I should be waiting long enough"
  },
  {
    "text": "hmm noticing that when I update the custom prop on the company field via my CRM card, it does not update properly on the company record page.\n\nFirst image is showing what is displayed for \"Latest Sentiment\", and the second image is the details of that prop and you can see that the latest property value is \"Very Satisfied\", not \"Some Risk\", but it does not properly update until I refresh the page",
    "time_stamp": "2024-04-16 15:36:40",
    "edited": {
      "time_stamp": "2024-04-16 15:37:02"
    }
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:37:47",
    "text": "and since it doesn't properly update, I don't ever catch the change via `onCrmPropertiesUpdate`"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:37:55",
    "text": "ah yeah that would do it"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:40:11",
    "text": "so I guess it's a bug that's out of my control? Or can I make my workflow better or something. Not very familiar with workflows unfortunately"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:40:46",
    "text": "Why not update the property through a serverless function?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:46:21",
    "text": "So the original reason for that was that users can create these custom object records in two ways:\n1. Via the CRM card. \n2. Via the custom object page that shows up in the \"Contacts\" dropdown\nIf users could just create custom obj records via the CRM record, I would use a serverless function no problem. But since they can also create them via #2, I have no way to update the custom prop on the corresponding company record unless I use a workflow."
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:47:09",
    "text": "But I could try having both the workflow and the serverless function but that sounds like trouble haha"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:47:27",
    "text": "Personally that's what I would do"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:47:36",
    "text": "have both?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:48:24",
    "text": "Yeah I would have a function that creates the object from the CRM card and then I would have a workflow for any objects that get created elsewhere"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:49:01",
    "text": "oh can I control the triggers of a workflow to listen to where records get created from?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:49:10",
    "text": "Although quick honestly don't really know what you're building so if I had a little more context I might be able to better point you in the right direction"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:49:18",
    "text": "yeah of course"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:49:41",
    "edited": {
      "time_stamp": "2024-04-16 15:49:52"
    },
    "text": "I would just filter out anything where the source isn't the API"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:51:11",
    "text": "ohhh that's super helpful, how would i filter for the source? Do I filter the trigger, or the action?"
  },
  {
    "text": "",
    "time_stamp": "2024-04-16 15:52:26"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:52:32",
    "text": "In the trigger"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:56:23",
    "text": "so I'm guessing in the workflow I would filter the trigger to only listen \"Record Source\" is from \"CRM UI\""
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 15:57:06",
    "text": "You could do that but if a record go created through an import or a form this wouldn't catch it"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:57:50",
    "text": "Exactly so if it got created via form, that's where I would use the serverless function"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 15:59:59",
    "text": "so the workflow would properly not catch any custom object via a form submission on my CRM card, but then I could implement a serverless function to do what I need"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 16:01:44",
    "text": "I meant form as in HubSpot Forms, not a form on a react card"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 16:02:02",
    "text": "sorry it gets confusing"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 16:02:04",
    "text": "ah I see"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 16:02:12",
    "text": "yeah I see the \"Forms\" source as well"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 16:03:07",
    "text": "Last quick thing, is there a source that means \"via API\" essentially?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 16:03:38",
    "text": "like is that \"Custom Events\""
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 16:03:52",
    "text": "yeah that's Integration"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 16:03:56",
    "text": "like in my example"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 16:05:28",
    "text": "The example card you sent?"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 16:06:30",
    "text": "Yeah I'm assuming so.\n\nThanks a lot man, you've been a great help"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2024-04-16 16:09:43",
    "text": "Of course bro, let me know if you run into any issues"
  },
  {
    "poster": {
      "poster_name": "Robert Mirandola",
      "poster_handle": "rmirandola"
    },
    "time_stamp": "2024-04-16 16:10:43",
    "text": "Will do!"
  }
]
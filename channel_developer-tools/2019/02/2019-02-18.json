[
  {
    "poster": {
      "poster_name": "KJ",
      "poster_handle": "karlon"
    },
    "time_stamp": "2019-02-18 03:55:22",
    "text": "Hi Community,\n\nWhat tools are some of you using to sync deal properties from HS to external apps?Testing syncing back and forth between VTiger and HubSpot and hoping to learn more about integrations others are using to sync this type of data....",
    "reply_count": 22,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-18 07:44:20"
      },
      {
        "time_stamp": "2019-02-20 08:14:08"
      },
      {
        "time_stamp": "2019-02-20 09:07:32"
      },
      {
        "time_stamp": "2019-02-20 09:14:56"
      },
      {
        "time_stamp": "2019-02-20 09:15:48"
      },
      {
        "time_stamp": "2019-02-20 09:16:14"
      },
      {
        "time_stamp": "2019-02-20 09:16:42"
      },
      {
        "time_stamp": "2019-02-20 09:17:12"
      },
      {
        "time_stamp": "2019-02-25 03:37:51"
      },
      {
        "time_stamp": "2019-02-25 07:21:23"
      },
      {
        "time_stamp": "2019-02-26 01:53:50"
      },
      {
        "time_stamp": "2019-02-26 04:54:13"
      },
      {
        "time_stamp": "2019-02-26 07:16:12"
      },
      {
        "time_stamp": "2019-02-26 07:16:37"
      },
      {
        "time_stamp": "2019-02-26 07:23:34"
      },
      {
        "time_stamp": "2019-02-26 07:25:05"
      },
      {
        "time_stamp": "2019-02-26 07:31:30"
      },
      {
        "time_stamp": "2019-02-26 07:33:04"
      },
      {
        "time_stamp": "2019-03-01 06:02:18"
      },
      {
        "time_stamp": "2019-03-01 07:39:34"
      },
      {
        "time_stamp": "2019-03-01 07:44:12"
      },
      {
        "time_stamp": "2019-03-01 07:45:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-02-18 07:44:20",
    "text": "Hey <@UEZJ74UN8> I’d say the first place to start is the deals API documentation <https://developers.HubSpot.com/docs/methods/deals/deals_overview>  There are a couple of unofficial API wrappers out there in various languages so depending on your dev language that might help.  But at a very basic level, you will need to store the HubSpot Deal ID on your side so you can refer to it through the API or you will have to get all deals and filter through them in order to find the one you need to update/delete/read"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-02-18 09:26:53",
    "text": "Does anyone know if it is possible to set a character limit to a Rich Text editor module in HS using the min-max fields or somewhere else to restrict even the toolbar options and characters"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-18 09:57:44",
    "text": "I dont believe so, I usually add help text in or put text in the label of (max 200 chars) and then truncate the output in the module."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 09:59:32",
    "edited": {
      "time_stamp": "2019-02-18 09:59:39"
    },
    "text": "idk if it’s possible or not, you might be able to have a regex condition that only allows x number of characters."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-18 10:17:02",
    "text": "I dont think the regex is available for a rich text module though"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-02-18 10:17:25",
    "text": "yea i just looked, not available :disappointed:"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:43:42",
    "text": "is there a good autoprefixer for vs code?  something that adds on save automatically maybe?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:47:18",
    "text": "I haven’t used em but there’s\n<https://marketplace.visualstudio.com/items?itemName=mrmlnc.vscode-autoprefixer>\nand\n<https://marketplace.visualstudio.com/items?itemName=sporiley.css-auto-prefix>",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-02-18 10:50:12"
      },
      {
        "time_stamp": "2019-02-21 08:17:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:47:35",
    "text": "first one sounds like it does more what you’re exepcting second one just looks awesome"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:47:39",
    "text": "but sounds incomplete"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:47:48",
    "text": "what is your practice?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:48:00",
    "text": "i usually use codekit"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:48:54",
    "text": "well because I haven’t been doing HS dev locally up until now, I have just been going to autoprefixer github page"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:49:04",
    "text": "pasting it in and copying it back out"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:49:05",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:49:12",
    "text": "codekit looks interesting"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:49:13",
    "text": "same"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:49:21",
    "text": "i love codekit"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:50:12",
    "text": "option 2 is what i want.  automatic.  will keep my eye on it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:50:51",
    "text": "They sold me at Picard <https://spin.d.pr/9VL1yf+>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:51:26",
    "text": "yeah"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 10:51:39",
    "text": "i love the project avatars"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:52:52",
    "text": "honestly I still don’t fully feel I grasp what CodeKit is yet. the whole thing sounds like someone went “let’s use every buzzword in front end dev tell people all of this stuff is baked in, and it ‘just-works’”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:53:12",
    "text": "seems like it’s an IDE like vsCode"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-18 10:53:36",
    "text": "I usually autoprefix in gulp :confused:"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-18 10:56:57",
    "text": "also <@U7SL518D6> CodeKit is basically a GUI build process"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:57:27",
    "text": "I’m loving that idea"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-18 10:57:27",
    "text": "Like an alternative for gulp / grunt"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:58:36",
    "edited": {
      "time_stamp": "2019-02-18 10:59:05"
    },
    "text": "I like the idea of setting up a great build process - but I hate the actual work of doing it because some things are more complicated or require more steps than they should be. and I like the idea of it taking away some of that"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-18 10:59:09",
    "text": "for sure; then once you get a good one configured, you don't want to touch it for months lol"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 10:59:35",
    "text": "yea, you start to treat it like it’s a jenga tower"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-18 10:59:55",
    "edited": {
      "time_stamp": "2019-02-18 11:00:17"
    },
    "text": "CodeKit is definitely a great place to start messing with code automation though. not as flexible, but more optimized to \"just work\" out of the box",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-02-18 12:27:49"
      },
      {
        "time_stamp": "2019-02-18 12:32:10"
      },
      {
        "time_stamp": "2019-02-18 12:32:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 11:00:51",
    "text": "yea, not expecting it to be like “you can do anything you want, even rediculous stuff” for the majority of what I do I don’t need that insane of a build process, I just want certain things to just work"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 11:01:24",
    "text": "and because I’m involved in so many projects the last thing I wanna do is spend an hour setting up a build process each time I switch projects"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 11:05:56",
    "text": "It’s kinda like that joke about hackathons\n\nBack like 8 years ago - meet with charity/whatever “cool we get what you want we’ll get started” end of event “here you go. Enjoy!” (simple html css js site, maybe on WP)\n\nnow - Meet with Charity/whatever “cool we’ll get rollin’” hour 5 “great, now that we’ve all got the build process working, let’s get some stuff done.\n\nend of event “Here’s your site. If you need to make any changes just know whoever is going to maintain it needs to know npm, sass, babel, webpack and have these settings.”"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-18 11:08:42",
    "text": "lol, I'm very conscious when I use my system to compile it in a way that is easy to maintain in it's final form. If it's going into HS, I don't minify (except JS, but I also include an unminified version). Using a system like BEM really helps to keep down the spaghetti nesting that comes with SCSS, and is still logical enough to use with straight HTML and CSS"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-02-18 11:09:31",
    "text": "yea I do the same, though I don’t minify JS either since HS does it."
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 12:27:49",
    "text": "i am lazy.  a lot of my projects dont need setting up a gulpfile.  anything that i will be working on long term, i add a gulp file.. more and more a webpack setup"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-02-18 12:32:10",
    "text": "haven't gotten around to figuring out webpack for HS stuff, love using it for React project though"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-02-18 12:32:57",
    "text": "ah.  with HubSpot, i am just starting to climb the mountain."
  }
]
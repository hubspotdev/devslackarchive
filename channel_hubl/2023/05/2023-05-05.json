[
  {
    "poster": {
      "poster_name": "Anthony Mastoris",
      "poster_handle": "anthony.mastoris"
    },
    "time_stamp": "2023-05-05 09:23:59",
    "text": "If it's a variable just use the filter |urlencode"
  },
  {
    "poster": {
      "poster_name": "Anthony Mastoris",
      "poster_handle": "anthony.mastoris"
    },
    "time_stamp": "2023-05-05 09:28:42",
    "text": "You could try Not like not_like TEXT, RICHTEXT\n<https://legacydocs.HubSpot.com/docs/methods/hubdb/v2/get_table_rows>"
  },
  {
    "poster": {
      "poster_name": "Anthony Mastoris",
      "poster_handle": "anthony.mastoris"
    },
    "time_stamp": "2023-05-05 09:32:25",
    "text": "Hello all, I have a module that calls a table with a query and outputs data. The issue I am currently facing is that the table only returns data in preview or cache busting mode.\n`{% set queryParam = \"content_hub__contains=\"+module.choice_field|urlencode+\"&amp;orderBy=published_date&amp;limit=150\" %}`\n`{% set table = hubdb_table_rows(5334616, queryParam) %}`\nFrom my testing, if I remove the 'content_hub__contains\"+module.choice__field|urlencode+\"' then it works fine in production. But why would this code work in preview and cache busting but not in production."
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-05-05 14:49:45",
    "text": "Thanks <@U02CZD31TM0> appreciate the input. My work around was to loop over the IDs and do multiple \"not equal to\" filters"
  },
  {
    "poster": {
      "poster_name": "Mat Baxter",
      "poster_handle": "mat917"
    },
    "time_stamp": "2023-05-05 14:50:18",
    "text": "I was just surprised not to see a \"not\" version of the \"in\" filter and wanted to make sure I hadn't missed anything"
  }
]
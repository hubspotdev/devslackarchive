[
  {
    "poster": {
      "poster_name": "Goran Ilievski",
      "poster_handle": "goran308"
    },
    "time_stamp": "2025-02-18 01:16:41",
    "text": "I will move the app when I get a chance to a proper place so it does not break. Any day now :grin:"
  },
  {
    "text": "Hi everyone! Im trying to get this information using the api, what endpoint can i use to do so?",
    "time_stamp": "2025-02-18 08:52:29",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2025-02-18 12:59:31"
      },
      {
        "time_stamp": "2025-02-18 13:01:47"
      },
      {
        "time_stamp": "2025-02-18 14:58:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Collin Schindler",
      "poster_handle": "collin_schindler"
    },
    "time_stamp": "2025-02-18 09:20:51",
    "text": "Ahh! Good to know. I found a similar delay when updating Goal targets. The UI updates immediately, but it takes 5-7 minutes for the API endpoints to show the same changes. Thanks for the update!"
  },
  {
    "text": "This looks like a marketing email from your image. Marketing emails are run through this API endpoint `/marketing/v3/emails` and here is the documentation for those various endpoints:\n<https://developers.HubSpot.com/docs/reference/api/marketing/emails/marketing-emails>\n\nAs for getting those stats, there is a query parameter you can append to your request called `includeStats`. Setting this equal to `true`, the endpoint will return those statistics for a specific email. That request will look something like this:\n```/marketing/v3/emails/{emailId}?includeStats=true```\nAnd add an additional response object in your JSON that looks like the attached image.\n\nHope this helps!",
    "time_stamp": "2025-02-18 12:59:31"
  },
  {
    "poster": {
      "poster_name": "Rene Freiburghaus",
      "poster_handle": "rene.freiburghaus"
    },
    "time_stamp": "2025-02-18 13:01:47",
    "text": "Oh! I appreciate the help! is there a way to get the marketing email id based on the contact it was sent to?"
  },
  {
    "poster": {
      "poster_name": "Aki Drakontaeidis-Dellaportas",
      "poster_handle": "aki"
    },
    "time_stamp": "2025-02-18 14:26:28",
    "text": "Hi everyone, I am trying to connect a channel to an inbox using a public app with the correct scope.\nI am getting this error:  `\"message\": \"Invalid input JSON on line 4, column 25: Cannot construct instance of `com.HubSpot.conversations.publicapi.core.messages.components.PublicDeliveryIdentifier$Json` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value (\"<mailto:xxx@xxx.com|xxx@xxx.com>')\"` when sending this body:\n```{\n  \"inboxId\": \"1042473752\",\n  \"name\": \"aki-n8n\",\n  \"deliveryIdentifier\": \"<mailto:xxx@xxx.com|xxx@xxx.com>\",\n  \"authorized\": true\n} ```\non this url: `<https://api.hubapi.com/conversations/v3/custom-channels/769349/channel-accounts>`\nas far as I gather, there shouldn't be something wrong with my request. Any ideas? Thanks!"
  },
  {
    "text": "I dug around for a little bit, but wasn't able to find anything linking the two. There is a `/crm/v3/objects/emails` endpoint, but these only track 1-on-1 transactional type emails - not marketing emails.\n\nIf you are looking for the marketing email ID, you can click into the email in HubSpot to 'See details' and it shows the `{emailId}` in the details of the email (see attached). You can also query the GET `/marketing/v3/emails` endpoint with various parameters to filter down the full list of emails to find the one you are looking for that way, but it's certainly more tedious.",
    "time_stamp": "2025-02-18 14:58:48"
  },
  {
    "poster": {
      "poster_name": "Christie Breen",
      "poster_handle": "christie434"
    },
    "time_stamp": "2025-02-18 16:23:42",
    "text": "Is anyone else all of the sudden getting no contacts returned when calling `/contacts/v1/search/query?&lt;email&gt;` or `/contacts/v1/search/query?&lt;phone&gt;`  with an email or phone we know we have in HubSpot. Like this literally worked this morning.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2025-02-18 19:01:30"
      },
      {
        "time_stamp": "2025-02-18 19:10:09"
      },
      {
        "time_stamp": "2025-02-18 19:10:15"
      },
      {
        "time_stamp": "2025-02-18 19:10:37"
      },
      {
        "time_stamp": "2025-02-18 19:11:34"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Eric Engoron",
      "poster_handle": "eric871"
    },
    "time_stamp": "2025-02-18 19:01:30",
    "text": "Same here"
  },
  {
    "poster": {
      "poster_name": "Eric Engoron",
      "poster_handle": "eric871"
    },
    "time_stamp": "2025-02-18 19:10:09",
    "text": "This is pretty bad for our legacy customers — as i confirmed the new API works, but there was no deprecation notice or anything and their docs still list this endpoint as a stable API"
  },
  {
    "poster": {
      "poster_name": "Christie Breen",
      "poster_handle": "christie434"
    },
    "time_stamp": "2025-02-18 19:10:15",
    "text": "My workaround was I switched to calling the graphql endpoint. But was really annoying that code that worked for 3 years all of the sudden stopped working."
  },
  {
    "poster": {
      "poster_name": "Eric Engoron",
      "poster_handle": "eric871"
    },
    "time_stamp": "2025-02-18 19:10:37",
    "edited": {
      "time_stamp": "2025-02-18 19:11:00"
    },
    "text": "Unfortunately the system I built can’t switch like that because the response format changed"
  },
  {
    "poster": {
      "poster_name": "Christie Breen",
      "poster_handle": "christie434"
    },
    "time_stamp": "2025-02-18 19:11:34",
    "text": "I looked at all their release notes...thought maybe I missed something. No mention there either."
  },
  {
    "poster": {
      "poster_name": "Shravan Das",
      "poster_handle": "shravan.das"
    },
    "time_stamp": "2025-02-18 21:44:14",
    "text": "Ok thanks for the help\ni think i should do more research on it :)"
  },
  {
    "poster": {
      "poster_name": "Nikhil Agrawal",
      "poster_handle": "nikhil.agrawal"
    },
    "time_stamp": "2025-02-18 22:19:29",
    "text": "Thanks <@U05R380MLMC>"
  },
  {
    "poster": {
      "poster_name": "Małgorzata Peska",
      "poster_handle": "gosia201"
    },
    "time_stamp": "2025-02-19 00:52:49",
    "text": "That was it <@U06H94JKK1P>. Thank you so much!"
  }
]
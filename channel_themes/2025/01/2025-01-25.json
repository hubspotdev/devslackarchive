[
  {
    "poster": {
      "poster_name": "Anton Bujanowski - Level 36",
      "poster_handle": "info748"
    },
    "time_stamp": "2025-01-25 03:18:05",
    "text": "Thanks for the insights Jon!\nVery helpful, but I got more doubts&amp;thoughts now.\nDon't want to be an old grumpy man as well, but after I've started the 3rd page of my thoughts to this I've decided to simply say\n\n*I don't think that theme projects are the right way of evolution(at least at this moment) and against almost everything that HS is about -&gt; Putting non-dev people in the driving seat.* \n\nhere and put the rest to a private chat if you (and others) want to chat about this :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2025-01-25 03:27:07",
    "edited": {
      "time_stamp": "2025-01-25 03:27:51"
    },
    "text": "I would disagree - yes there is a slight barrier to entry, but with all of the tooling and the access to a significant number of devs who already understand react/js I think it’s the right move. Even just the local development experience is much better.\n\nI’m not sure I understand the argument about non-devs, because the general page editing experience doesn’t change with this, only the ability to no longer edit in design manager? I find myself able to write more maintainable code with typescript and tailwind for example.\n\nI assume projects will eventually be supported for marketplace themes."
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2025-01-25 08:25:40",
    "text": "Thanks for explaining that Jon. I guess I am advocating for the designers who do some code. Or solo marketers with no developers who do some googling to find ways to create or modify a module. These people would never take a react course or consider themselves a developer. Non techy folk."
  },
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2025-01-25 08:26:42",
    "text": "What does react do that hubl currently doesn't when it comes to basic websites?"
  },
  {
    "poster": {
      "poster_name": "Jennifer Nixon",
      "poster_handle": "jnixon"
    },
    "time_stamp": "2025-01-25 08:31:30",
    "text": "Just my two cents, I think both can coexist - as long as react projects don't fully replace current marketplace themes then customers will have a choice. An easy way to distinguish the two will be important, flagging local dev requirements when choosing to purchase/install will make it clear to the end user what to expect.\n\nI'm one of the end users who learned to code hubL by modifying themes and eventually learned to code one from scratch, yet I still didn't use the CLI until I started learning non-web things.\n\nWhile I have some hesitation about project based themes, I also haven't had a chance to work on one yet, I've mostly heard really good things and believe there is a place for both."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2025-01-25 08:51:28",
    "edited": {
      "time_stamp": "2025-01-25 08:52:51"
    },
    "text": "In my opinion it's not about what it does/doesn't do - I feel it's more about adopting what is seen as standards and moving towards something which is more widely used. One of the things I've implemented in my workflow is lightweight tests for modules, which automatically run upon pushing my code up to git - I didn't need to do anything special, as these libraries already exist and it's plug and play.\n\nThe local testing piece is fantastic, and this did used to exist for HubL - but the Vite version is so much better and the direct integration into GitHub repositories is a huge win.\n\nFor solo developers, yes this may be an initial hurdle to setup - but I guess this comes down to HubSpot's target audience - the current process for modifying modules in design manager is pretty risky, and yes you can do it in sandbox, but I find it very awkward and fairly risky, I try to avoid it because there have been scenarios in the past where a multi file change has broken a site. This doesn't go away fully, but just the ability to have better linting and testing helps.\n\nI love configuration as code as an approach though, so I'm fairly biased - the ability to push changes with a bunch of automated tests makes me feel way more confident about my changes, especially multi-file changes.\n\nThe piece that Jon raises I think is really interesting too (about external editors). I think moving to having the code stored in Git by default is a fantastic idea, as it means that lots of third party tooling and editors can be used without having to setup a custom CI flow. This is what i find exciting!\n\nOne concern I do have though is a mixture of themes and modules doing things in different ways, it may get a little confusing for a while!"
  }
]
[
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-31 04:03:34",
    "text": "Can you provide some examples from your site, Roberto? We're actually working on more advanced targeting options for lead flows right now so any feedback you have is great."
  },
  {
    "poster": {
      "poster_name": "Josh Ames",
      "poster_handle": "josh.ames"
    },
    "time_stamp": "2018-01-31 07:46:42",
    "text": "I just noticed this morning that the HubL supported module link/page is missing from the left hand sidebar on this page: <http://designers.HubSpot.com/docs/hubl/hubl-supported-variables> Did it get removed for a reason or where can I find a list of all the modules available?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-31 07:48:58",
    "text": "change variables to modules and it is there.. the link did get removed tho"
  },
  {
    "poster": {
      "poster_name": "Josh Ames",
      "poster_handle": "josh.ames"
    },
    "time_stamp": "2018-01-31 07:49:08",
    "text": "Thanks <@U38EZFVFE>"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2018-01-31 07:55:34",
    "text": "FYI, they’ve been changed to “Tags” to avoid confusion with modules"
  },
  {
    "poster": {
      "poster_name": "Josh Ames",
      "poster_handle": "josh.ames"
    },
    "time_stamp": "2018-01-31 08:01:45",
    "text": "Ahhhhh ok."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 09:08:39",
    "text": "Has anyone used react with HS before? I know HS uses react but i wasnt sure if you could just piggyback off the react there (note, i know nothing of react, just trying to evaluate if I should use it)"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-31 09:13:11",
    "text": "Not sure what your use case is, but I've used Vue a few times and it's awesome, especially with the beta module system. Especially if you haven't used React before I think it would probably be overkill for use within a COS site. If I was to use React with HS I would probably host it on its own, similar to how some people use WordPress and HS together."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-01-31 09:18:25",
    "text": "Also, if you're interested in learning about React in a front-end friendly way, I'd take a look at GatsbyJS. It's a static-site generator (similar to Jekyll) but uses React and GraphQL. Has a lot of really cool functionalities and made more sense for me coming from a \"website\" background rather than a \"web app\" mindset.\n\n<https://www.gatsbyjs.org/>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 09:22:56",
    "text": "thanks <@U26BLKGE4> ill take a look at these"
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2018-01-31 09:43:26",
    "text": "more like the the “smart CTA” setup for the lead flow tool"
  },
  null,
  {
    "poster": {
      "poster_name": "Shay Redmond",
      "poster_handle": "shay"
    },
    "time_stamp": "2018-01-31 10:48:29",
    "text": "Gotcha, so it'd be based on attributes of the visitor to the page, rather than the page itself (like URLs, etc)"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 12:07:52",
    "text": "has anyone done something on their blog with an \"Updated on\" date? I built something using a custom module thats basically a toggle and when the article is an older artile thats been updated, we simply change the publish date and toggle the option on and enter the original date in a date field."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 12:08:02",
    "text": "I am trying to see if there is a better way to do this"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 12:08:52",
    "text": "dev info doesnt have an \"Original publish date\" so when you change the publish date, theres no way to grab the original date anymore"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-01-31 12:27:09",
    "text": "<@U2H3TT8F2> have you tried `{{ content.created }}` ? according to the docs  \"created is a datetime object for when the content was originally created, in UTC time. This variable can be formatted with the datetime filter.\""
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-01-31 12:28:27",
    "text": "That could be older than the original publish date, which isn't what you want I assume"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 12:28:32",
    "edited": {
      "time_stamp": "2018-01-31 12:28:38"
    },
    "text": "True, but the content/post could be create a few days prior to the post actually being published."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 12:28:42",
    "text": "correct"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-01-31 12:29:27",
    "text": "could you keep the publish date the same and use the updated variable instead?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 12:30:14",
    "text": "then we would have to change the blog loops sorting to be updated date and not by published date"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-01-31 12:31:05",
    "text": "which might cause issues because say we find an article with a typo and simply want to update that, we would be putting that article first unintentionally"
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-31 12:31:33",
    "text": "Just a heads up that we just rolled out the Content Settings update, and combining CSS to everyone."
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-31 12:31:44",
    "edited": {
      "time_stamp": "2018-01-31 12:31:50"
    },
    "text": "Combining CSS blog post: <https://www.HubSpot.com/product-updates/css-speed-improvements-to-the-HubSpot-cms>",
    "reply_count": 19,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-01-31 14:09:09"
      },
      {
        "time_stamp": "2018-01-31 14:10:27"
      },
      {
        "time_stamp": "2018-01-31 14:19:02"
      },
      {
        "time_stamp": "2018-01-31 14:21:50"
      },
      {
        "time_stamp": "2018-01-31 14:24:01"
      },
      {
        "time_stamp": "2018-01-31 14:25:48"
      },
      {
        "time_stamp": "2018-01-31 14:27:11"
      },
      {
        "time_stamp": "2018-01-31 14:28:30"
      },
      {
        "time_stamp": "2018-01-31 14:28:54"
      },
      {
        "time_stamp": "2018-01-31 14:29:04"
      },
      {
        "time_stamp": "2018-01-31 14:29:47"
      },
      {
        "time_stamp": "2018-01-31 14:31:20"
      },
      {
        "time_stamp": "2018-01-31 14:49:50"
      },
      {
        "time_stamp": "2018-01-31 14:53:47"
      },
      {
        "time_stamp": "2018-01-31 14:54:28"
      },
      {
        "time_stamp": "2018-01-31 15:00:10"
      },
      {
        "time_stamp": "2018-01-31 15:13:51"
      },
      {
        "time_stamp": "2018-01-31 15:16:16"
      },
      {
        "time_stamp": "2018-01-31 15:18:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-31 12:32:06",
    "edited": {
      "time_stamp": "2018-01-31 12:32:11"
    },
    "text": "Content Settings blog post: <http://designers.HubSpot.com/blog/new-content-settings>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-31 12:50:03",
    "text": "Can you explain the \"No combined css for pages that have inline css\"?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-01-31 12:50:22",
    "edited": {
      "time_stamp": "2018-01-31 12:50:47"
    },
    "text": "Is it that we can't have it at all or are you not combining the inline css"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-01-31 12:51:21",
    "text": "also, what about 3rd party hosted files that are using the `require_css` function, do those get combined as well? I assume the combine CSS is combining everything using that function",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-01-31 12:51:53"
      },
      {
        "time_stamp": "2018-01-31 13:16:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-01-31 12:51:53",
    "text": "<@U6TBZ66FN>"
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-31 12:51:59",
    "text": "I think <@U6GNQ7JBU> or <@U6TBZ66FN> could likely explain those and help out."
  },
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2018-01-31 13:03:29",
    "text": "Looks like the new content settings has a place for a search results template. Is that for the google search widget or the upcoming search?"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 13:16:56",
    "text": "Yes, every css in the head. However, we are not combining css if  there are inline css blocks."
  },
  {
    "poster": {
      "poster_name": "Shawn Bristow",
      "poster_handle": "captshawn"
    },
    "time_stamp": "2018-01-31 13:23:51",
    "text": "Hey Parker, that was a little sneak peak as to what is coming in the next month. Unfortunately we have to remove the search template option today but we will be putting our own search in BETA in the coming month. Sorry, but your going to have to wait just a little longer..."
  },
  {
    "poster": {
      "poster_name": "Colleen Cooney",
      "poster_handle": "ccooney"
    },
    "time_stamp": "2018-01-31 14:03:29",
    "text": "We’re having some issues with custom modules. 1) When we copy a module over from another portal and rename it, it shows up in the page under the old name. 2) Yesterday I copied over a testimonial module from another portal. I cloned the module so I now have a module named “Testimonial (clone)” and I deleted the original “Testimonial” module. If I try adding the module to the page, it shows up as “Testimonial” instead of  “Testimonial (clone).” 3) If I drag the existing “Testimonial (clone)” module to another section of the page, it renames itself on the page to “Testimonial.” 4) When I refresh the page, it goes back to the previous layout as if I hadn’t tried to move the module.",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-01-31 14:07:00"
      },
      {
        "time_stamp": "2018-02-01 07:36:14"
      },
      {
        "time_stamp": "2018-02-01 09:35:59"
      },
      {
        "time_stamp": "2018-02-01 14:07:54"
      },
      {
        "time_stamp": "2018-02-01 14:08:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-01-31 14:07:00",
    "text": "Anyone had any similar issues with this?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 14:09:09",
    "text": "I'm currently running into some pretty major issues with combining css.  I've spent about half my afternoon refreshing a page I'm working on hoping for the new CSS i've written has made it into combined-css.  Are these delays to be expected in the future?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 14:10:27",
    "text": "Just now it took more than 10 minutes of refreshing until the page decided to just load the css file I'm editing instead of combined-css..."
  },
  {
    "poster": {
      "poster_name": "Jeffrey Vocell",
      "poster_handle": "jvocell"
    },
    "time_stamp": "2018-01-31 14:19:02",
    "text": "cc: <@U6TBZ66FN>"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:21:50",
    "text": "I can take a look. There might be cache issues. We always make sure the combined css does not change the rendering. Let me know you specific issue."
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:24:01",
    "text": "Whenever you make change to your CSS, after you publish you will have a new URL to the updated CSS. The combined css engine checks for the CSS urls. It should update once it detects. Otherwise, it is a bug we will fix."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 14:25:48",
    "text": "I think this has to be a bug.  The combined CSS is continuing to display changes I made more than an hour ago without loading anything I've done since then"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:27:11",
    "text": "Can I take a look which page, and which CSS?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 14:28:30",
    "text": "page: <http://www.seventhheaven.ca/dbvenues>\ncss: <http://www.seventhheaven.ca/custom/system/css/hubtheme-style-new.css>"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:28:54",
    "text": "Thanks. Looking."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 14:29:04",
    "text": "Thank you!"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:29:47",
    "text": "Oh, your css is hosted out of HubSpot, and it is not version. That is the issue."
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:31:20",
    "text": "Ah, it is hosted at HubSpot. I was just looking at the above url."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 14:49:50",
    "text": "seems to be working now"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:53:47",
    "text": "I have not got to testing it. But there was some cache purge delays this morning. It is up to 1 min to purge the cache."
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 14:54:28",
    "text": "BTW, if you want to disable combined css while developing, you can append hsDebug=true to your url."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 15:00:10",
    "text": "yeah, issue returned.  i'll stick with hsDebug for now"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 15:13:51",
    "text": "Do you have no issue with hsDebug? If they are cached, they are the same."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-01-31 15:16:16",
    "text": "no issue with hsDebug.  When it was loading combined CSS there was a massive lag between updating the CSS in my file and it showing up in the combined CSS"
  },
  {
    "poster": {
      "poster_name": "Libo Song",
      "poster_handle": "lsong"
    },
    "time_stamp": "2018-01-31 15:18:06",
    "text": "That is expected. But when you update your css, the page should not serve you combined-css before it can verify it still works. Is that the case for you? Or it always serves you the combined css."
  },
  {
    "poster": {
      "poster_name": "Roberto pacheco",
      "poster_handle": "roberto"
    },
    "time_stamp": "2018-01-31 17:56:09",
    "text": "exactly!"
  }
]
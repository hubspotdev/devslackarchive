[
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2021-03-25 08:04:10",
    "text": "ya learn somethin’ new er’day! CSS tip\nyou can have duplicate transform properties and the browser will perform both!\n```.foo {\n  transform: translateX(-50%) translateX(200px);\n}```",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-03-25 11:30:04"
      },
      {
        "time_stamp": "2021-03-26 00:24:32"
      },
      {
        "time_stamp": "2021-03-26 00:29:53"
      },
      {
        "time_stamp": "2021-03-30 02:47:10"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2021-03-25 11:30:04",
    "edited": {
      "time_stamp": "2021-03-25 11:30:52"
    },
    "text": "My favorite recent find has been the `:is()` selector. Basically the opposite of `:not()`, but  is really convenient to keep styles DRY. For example:\n\n```.example-div h1, .example-div h2, .example-div h3 {\n    font-weight: 700;\n}\n\n---\n\n.example-div *:is(h1, h2, h3) {\n    font-weight: 700\n}```"
  },
  {
    "poster": {
      "poster_name": "Olia Gozha",
      "poster_handle": "olia"
    },
    "time_stamp": "2021-03-26 00:24:32",
    "text": "<@U3T21PDBK> kudos on your finding! CSS is awesome. There are so many tiny things to explore as <@U26BLKGE4> mentioned.\nI’m currently reading “CSS in Depth” by Keith J. Grant. It’s perfectly covers both general concepts and peculiar edge cases.\nHighly recommend!"
  },
  {
    "poster": {
      "poster_name": "Olia Gozha",
      "poster_handle": "olia"
    },
    "time_stamp": "2021-03-26 00:29:53",
    "text": "<@U26BLKGE4> thanks for mentioning about :is(). Didn’t know about it till now. Funny thing I was just reading about :not() and :has() yesterday here :grinning: <https://meyerweb.com/eric/thoughts/2018/06/05/specificity-in-not-has-and-matches/>"
  }
]
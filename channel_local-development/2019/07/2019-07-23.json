[
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-07-23 01:57:32",
    "edited": {
      "time_stamp": "2019-07-23 01:57:41"
    },
    "text": "Jon, you’re a smart man. Whats the easiest way you can think of to use sass and browser sync with this? Somebody mentioned a sass file for each module but I’d rather have 1 global sass file…"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 04:32:24",
    "edited": {
      "time_stamp": "2019-07-23 04:40:19"
    },
    "text": "Good question, right now i cant answer regarding browser sync haven't personally used that enough.\n\nSCSS I'm going to play around with. There are a few ways i can see doing it. My HubSpot experience though tells me - treat each module as it's own entity. I would lean towards scss for each module then having a module-customizations file that is loaded at the template level or included into your theme css.\n\nIf you go globalizing your scss for modules, you will likely have to rebuild those modules for future sites or fake the modularization in your global scss file.\n\nIf what i said sounds foreign to you, watch the first video on here and watch Jeff Ausuras talk then mine on \"site agnostic custom modules\". That should explain my reasoning here. The videos don't go into scss but explain why i would have that separation.\n\nSomething I'm really interested in with this new tool: how can i use both SCSS and HubL and do i actually want to or do i only think i want to because it hasn't really been possible\n\nHubl can do ~90% of what scss can do and it can do some incredibly powerful things scss can't do."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 04:49:48",
    "text": "Looks like youre trying to create a file locally and upload it. The &lt;dest&gt; needs to include the .CSS file itself\n\nWhat you are currently telling it is to upload your css file as a folder. Its replying \"I'm sorry I can't do that captain\". What you want to do is enter the file path including a filename.css"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 06:51:52",
    "edited": {
      "time_stamp": "2019-07-23 06:52:21"
    },
    "text": "curious, has anyone tried this beta with a DND template  that is using the new drag n drop regions beta? Just wondering if the JSON it looks any different",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-07-23 06:53:51"
      },
      {
        "time_stamp": "2019-07-23 06:54:16"
      },
      {
        "time_stamp": "2019-07-23 06:59:30"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Luke Summerfield",
      "poster_handle": "lukesummerfield"
    },
    "time_stamp": "2019-07-23 06:53:51",
    "text": "Cc <@U6W3H6YN8> <@U8THBCFC4> "
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 06:54:16",
    "text": "I’m gonna give it a whirl on a template I have and see what it does"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 06:59:30",
    "text": "I can confirm it appears to work it looks virtually identical to a flex column from what I can tell  I think it shows a different type (the 2 templates I’m comparing aren’t a great comparison to truly 1:1 check)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 07:02:45",
    "edited": {
      "time_stamp": "2019-07-23 07:03:41"
    },
    "text": "<@U6W3H6YN8> minor feedback - `\"updatedBy\" : \"<mailto:email@gmail.com|email@gmail.com>\",` and `\"author\" : \"<mailto:email@gmail.com|email@gmail.com>\",`\n\nI understand WHY this is here - but it might actually be good to leave out of the data accessible in the JSON.\n\nI forsee people working in git, and accidentally publishing their email addresses online.\n\nThe portal id part I suppose you can’t really hide it probably serves some purpose to be exposed.\n\n-edit - proof about people accidentally exposing their email address being a real thing, for this message I accidentally exposed my own email address :faceplam:",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-07-23 07:04:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-23 07:04:44",
    "edited": {
      "time_stamp": "2019-07-23 07:05:03"
    },
    "text": "Yep, thanks. We are already working on removing some of the portal/user identifying properties from DnD template JSON similar to what we did for modules (locally).\n\nI will note the portability of DnD templates between portals is not working perfectly right now - we are also working on this."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-23 08:15:02",
    "text": "how are people structuring their folders/files with this local dev beta?",
    "reply_count": 14,
    "reply_users_count": 7,
    "replies": [
      {
        "time_stamp": "2019-07-23 08:16:00"
      },
      {
        "time_stamp": "2019-07-23 08:24:19"
      },
      {
        "time_stamp": "2019-07-23 08:24:23"
      },
      {
        "time_stamp": "2019-07-23 08:24:59"
      },
      {
        "time_stamp": "2019-07-23 08:27:03"
      },
      {
        "time_stamp": "2019-07-23 08:27:11"
      },
      {
        "time_stamp": "2019-07-23 08:42:37"
      },
      {
        "time_stamp": "2019-07-23 08:57:11"
      },
      {
        "time_stamp": "2019-07-23 09:31:07"
      },
      {
        "time_stamp": "2019-07-23 09:58:14"
      },
      {
        "time_stamp": "2019-07-23 10:08:25"
      },
      {
        "time_stamp": "2019-07-23 12:11:53"
      },
      {
        "time_stamp": "2019-07-23 12:12:54"
      },
      {
        "time_stamp": "2019-07-29 08:33:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 08:16:00",
    "text": "I think it’s too soon to say there’s a best practice figured out yet."
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-23 08:24:19",
    "text": "right now i have a `src` folder for pre-compiled assets and then the design manager folder acts as the `dist` folder. But not sure if this really makes sense"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-23 08:24:23",
    "text": "i just use the structure i created in HubSpot then same my scss and all outside that"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-07-23 08:24:59",
    "text": "you can keep the scss in the same design manager folder and it will work fine it just won't upload it, correct?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 08:27:03",
    "text": "I think so, I’ve done similar with .md files"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 08:27:11",
    "text": "haven’t tried with the new tool just FTP"
  },
  {
    "poster": {
      "poster_name": "Anthony Pizzurro",
      "poster_handle": "anthonypizzurro"
    },
    "time_stamp": "2019-07-23 08:42:37",
    "text": "<@U7V9DQ31P> Internally we’re experimenting with a similar setup: `src` and `build` dirs and gulp to build the project where the `build` dir only contains files that we want synced with the design manager"
  },
  {
    "poster": {
      "poster_name": "Kevin Leonard",
      "poster_handle": "kleonard"
    },
    "time_stamp": "2019-07-23 08:57:11",
    "edited": {
      "time_stamp": "2019-07-23 08:57:46"
    },
    "text": "^ This also allows us to use build system X (here, gulp) to pull shared assets from a single source of truth and include them in multiple projects (stuff like styles, js, and even module fields), so `some_project/src` could pull from `../_global-stuff_/src` on build"
  },
  {
    "poster": {
      "poster_name": "Julie Costales",
      "poster_handle": "julie609"
    },
    "time_stamp": "2019-07-23 09:00:09",
    "text": "Hi <@U7SL518D6>, got what you mean. Do you know how can I upload the css file to an existing folder in my account? How can I replace the existing css file inside a subfolder?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 09:01:40",
    "text": "so if you are updating an existing file, you need to include that file in your path name.\n\nIf you are uploading a new file, include a new file name in the path. (Haven’t directly tried that but I would guess that will work fine)"
  },
  {
    "poster": {
      "poster_name": "Julie Costales",
      "poster_handle": "julie609"
    },
    "time_stamp": "2019-07-23 09:08:25",
    "text": "tried adding this for the &lt;dest&gt;,\n/coded_files/custom/page/1dev-assets/pricing.css but instead of replacing, it creates a new folder  and subfolders with the path I have given. It is named Coded Files &gt; custom &gt; Page &gt; 1dev-assets &gt; pricing.css :disappointed:\n\nDo you have a sample path name that can replace an existing file within subfolders?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 09:11:53",
    "text": "might help to see a screenshot of the folder tree to be sure we’re on the same page.\n\nUltimately though I think based on the fact you have one listed with capital letters and the other without I would guess it created new folders  because you didn’t match the case of the existing files in the design manager"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-07-23 09:12:56",
    "text": "keeping your folders and filenames lower-case while not visually pretty, helps prevent situations like this"
  },
  {
    "poster": {
      "poster_name": "Julie Costales",
      "poster_handle": "julie609"
    },
    "time_stamp": "2019-07-23 09:20:59",
    "text": "ah, got it! Thank you! this helps a lot!"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-07-23 09:31:07",
    "text": "Yeah, I'm setting up gulp in the same way, with a version controlled src folder, which outputs to 2 separate brand folders within a dist folder... then i created a task that simultaneously runs gulp watch on the src folder and hscms watch on the dist folder"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2019-07-23 09:58:14",
    "text": "With this folder structure, are you planning on using a dev portal for staging?"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-07-23 10:08:25",
    "text": "yes... shooting to get to the point where everyone on our team has their own dev portal (or local preview:crossed_fingers:), then that gets merged into a repo which would deploy to a staging portal"
  },
  {
    "poster": {
      "poster_name": "Doug Osborne",
      "poster_handle": "doug.osborne"
    },
    "time_stamp": "2019-07-23 12:11:53",
    "edited": {
      "time_stamp": "2019-07-23 16:14:20"
    },
    "text": "Does anyone have any insight on keeping dev portals in sync with a production portal? This local dev build is great for editing 1 portal, but the wall that we're running into is not being able to clone/sync the necessary dev/staging portals."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-07-23 12:12:54",
    "text": "There needs to be a local by flywheel built for HubSpot"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-23 12:34:05",
    "edited": {
      "time_stamp": "2019-07-23 12:34:09"
    },
    "text": "Hey dev community! We are thrilled with your reception to this beta, and look forward to continuing to improve upon the local development workflow and developer capabilities with your feedback and input.\n\nWith that said, we have just published a version v0.0.18 of the tools. To upgrade, run `npm install -g @HubSpot/cms-cli@latest`. Notably, in this version, we are adding usage tracking of the various commands. This data will be used to inform how we iterate and expand upon the tooling.  We greatly value your feedback, as well as privacy, so if you would like to opt-out of usage tracking, you can add a new top-level option, `allowUsageTracking: false` to your `HubSpot.config.yml` file (This is documented here: <https://designers.HubSpot.com/docs/tools/local-development-reference#top-level-parameters>).",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2019-07-23 12:34:29"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-07-23 12:34:29",
    "text": "Generally speaking, when we push updates, we will post announcements like:\n\n*Version Update | v0.0.18*\nWhat's changed?\n- Various improvements to the oauth2 authentication flow\n- Usage tracking\n- Error message/handling improvements\nRun `npm install -g @HubSpot/cms-cli@latest` to update"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-07-23 12:41:48",
    "text": "<@UATE4ATHP> when you have a chance, can you see if the new version 0.0.18 has fewer issues with timeouts?"
  },
  {
    "poster": {
      "poster_name": "Bradley",
      "poster_handle": "bradley554"
    },
    "time_stamp": "2019-07-23 12:44:42",
    "text": "<@U22VBL87M> Ran it a couple times. No timeouts :raised_hands::skin-tone-2:"
  }
]
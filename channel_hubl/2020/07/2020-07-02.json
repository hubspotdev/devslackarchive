[
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-02 06:21:13",
    "text": "Will `truncate` work for u? <https://developers.HubSpot.com/docs/cms/hubl/filters>"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-07-02 08:58:21",
    "text": "Is there a hubl filter to get the first word in a string? I'm hoping to get someone's first name. For example, the string might be *Michael Jordan* and I'd like to return *Michael*.",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-02 09:00:57"
      },
      {
        "time_stamp": "2020-07-02 09:04:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-02 09:00:57",
    "text": "I guess no direct filter, you can use `split` and get first"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2020-07-02 09:04:04",
    "text": "Perfect. That worked great. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2020-07-02 10:47:24",
    "edited": {
      "time_stamp": "2020-07-02 10:47:53"
    },
    "text": "Happy Friday HubSpot Devs - I am having trouble with  `{{ geo_distance(postal_location(request.query_dict.zipcode, \"us\") , row.geo_coordinates.lat, row.geo_coordinates.lon, \"mi\") }}`  Why doesnâ€™t this work?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-07-02 10:50:31"
      },
      {
        "time_stamp": "2020-07-02 11:49:52"
      },
      {
        "time_stamp": "2020-07-02 12:30:06"
      },
      {
        "time_stamp": "2020-07-02 12:31:18"
      },
      {
        "time_stamp": "2020-07-02 12:58:19"
      },
      {
        "time_stamp": "2020-07-03 09:37:26"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2020-07-02 10:50:31",
    "text": "note: I compared the result from hubdb location field and what postal_location returns and they are not the same result. So i tried also creating my own object with { lat:,lon: } and that didnt work either"
  },
  {
    "poster": {
      "poster_name": "Russell Benzing",
      "poster_handle": "rbenzing"
    },
    "time_stamp": "2020-07-02 11:49:52",
    "text": "final note: I got it working by using the HubDB location field as the first parameter and basically swapping the data. There must be something special about those location fields."
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-02 12:30:06",
    "text": "Let me take a look now."
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-02 12:31:18",
    "text": "So it worked when u used `postal_location(request.query_dict.zipcode, \"us\")`  as the second param?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-07-02 12:58:19",
    "text": "I checked the code and it requires the first param to be a hubdb based location.. So its failing when you send the output of `postal_location` I will open an issue to amend the logic to accept the output of `postal_location`  as well"
  }
]
[
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-18 15:03:56",
    "edited": {
      "time_stamp": "2021-04-18 15:04:14"
    },
    "text": "Hey <@U01FALE1PD1>, This is a little verbose but I wrote it in vanilla JS so that you can use it even if youre not using jquery. It’s a good starting place. There are a few things you need to do.\n\n1. replace the data-form-id with your target form id — this can be found in the url of whatever hs form youre looking to target in the hs form editor. \n2. I am grabbing all of the inpu values and labels. and storing them in an array called values. You will still need to do something with those values. And them inject them into the DOM. I didnt know how you were going to handle that so I left it blank\n3. Place the code in the footer\n```//place in footer of document\n  (function() {\n      //Grab the correct form simply replace form id with hsID of target form\n      var form = document.querySelector('form[data-form-id=\"c6c7797b-7c91-4c47-bbc7-8a6d5cee2b0a\"]');\n      var values = [];\n\n      var displayFormInputs = function(targetID) {\n         //Grabs all of the groups of label/inputs\n         var inputGroups = form.querySelectorAll('.hs-form-field');\n         \n         for( let i = 0; i &lt; inputGroups.length; i++) {\n            //Target InputGroups\n            var group = inputGroups[i];\n            var input = group.querySelector('input');\n            //Ignore submit button\n            if (input) {\n               //data from target input\n               var data = {\n                  \"label\": group.querySelector('label').textContent.replace('*',''),\n                  \"name\": input.name,\n                  \"value\": input.value,\n                  }\n               // append data to values array\n                  values.push(data);\n             }        \n         };\n\n         for( let i = 0; i &lt; values.length; i++) {\n            // Do stuff with the form data\n            // This is likely where you want to create some elements \n            // Paste form data into it \n            // And then inject that into the correct place on the DOM.\n         }\n\n         //This can be removed. But it will show you if its all working.\n         console.log(values);\n      }\n\n      //Listens for the submit of the target form\n      form.addEventListener('submit', function(e) {\n         //Prevents the actual submission\n         e.preventDefault();\n         // Captures and displays inputs\n         displayFormInputs();\n         //submits form\n         return true;\n      });\n      \n\n   })();```"
  },
  {
    "poster": {
      "poster_name": "Ron Kagan",
      "poster_handle": "ron923"
    },
    "time_stamp": "2021-04-18 15:04:45",
    "text": "Awesome! Thank you!"
  },
  {
    "poster": {
      "poster_name": "Ron Kagan",
      "poster_handle": "ron923"
    },
    "time_stamp": "2021-04-18 15:08:15",
    "text": "Not sure I know how to do #2 -- the goal would be to capture data that had been put into the fields before the submit button was pressed so as to assist with cart abandonment conversion–personalizing the follow up email with the data that was given to us by the visitor although they did not complete the form fill."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2021-04-18 19:55:48",
    "text": "Oh man - ok that’s a pretty different use case than it seemed like jarno wanted. This code won’t really help w that. Where is the cart data being stored?"
  },
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-04-18 20:01:19",
    "text": "Thank you for the ideas! i will start implementing it with hubDB. but i cant understand how the url and the slugs will be changed based on the row in the db"
  },
  {
    "poster": {
      "poster_name": "Stefan Dzalev",
      "poster_handle": "stefan632"
    },
    "time_stamp": "2021-04-18 20:01:32",
    "text": "i cant find anything in the documentation...."
  },
  {
    "poster": {
      "poster_name": "Gray Rhino",
      "poster_handle": "saeed"
    },
    "time_stamp": "2021-04-18 20:34:11",
    "text": "Hello,\nI would like to know if anyone has hosted their HS app in GCP?\nMy issue is: when I run the app either in Compute Engine or Kubernetes Engine, GCP provides a external IP (public IP) for the page. I am using this public IP as URI for CRM Card's Primary Action. However, HS does not load the page in webview. What cloud be the issue here? Any suggestions/help would be appreciated."
  },
  {
    "poster": {
      "poster_name": "Dominik Untersteiner",
      "poster_handle": "dominik.untersteiner"
    },
    "time_stamp": "2021-04-19 00:09:07",
    "text": "Hello, i would like to implement something into my Template in the Design Manager to format the Timestamp. Does someone know what would be the best way to do that?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-04-19 09:59:41"
      },
      {
        "time_stamp": "2021-04-19 10:04:24"
      },
      {
        "time_stamp": "2021-04-20 00:16:20"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-09-23 11:26:41",
    "text": "Do you mean using the content membership feature? If so, you can get this by looking at the current user’s lists. `{{ request_contact.list_memberships }}`"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 14:47:28",
    "text": "is there a way to pass in a nested parameter to a custom module?",
    "reply_count": 19,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-09-23 14:49:46"
      },
      {
        "time_stamp": "2019-09-23 14:50:11"
      },
      {
        "time_stamp": "2019-09-23 14:50:42"
      },
      {
        "time_stamp": "2019-09-23 14:51:04"
      },
      {
        "time_stamp": "2019-09-23 15:00:35"
      },
      {
        "time_stamp": "2019-09-23 15:10:57"
      },
      {
        "time_stamp": "2019-09-23 15:20:17"
      },
      {
        "time_stamp": "2019-09-23 15:21:26"
      },
      {
        "time_stamp": "2019-09-23 15:23:31"
      },
      {
        "time_stamp": "2019-09-23 15:24:34"
      },
      {
        "time_stamp": "2019-09-23 15:25:34"
      },
      {
        "time_stamp": "2019-09-23 15:26:23"
      },
      {
        "time_stamp": "2019-09-23 15:27:10"
      },
      {
        "time_stamp": "2019-09-23 15:28:51"
      },
      {
        "time_stamp": "2019-09-23 15:29:05"
      },
      {
        "time_stamp": "2019-09-23 15:29:54"
      },
      {
        "time_stamp": "2019-09-23 15:31:04"
      },
      {
        "time_stamp": "2019-09-23 15:32:16"
      },
      {
        "time_stamp": "2019-09-23 15:32:16"
      }
    ]
  },
  {
    "text": "",
    "time_stamp": "2019-09-23 14:47:34"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 14:47:48",
    "text": "{% widget_block module \"module_custom_module\" path=\"/custom/custom module\", label=\"custom module\", simple_param=\"simple parameter\" %}\n      {% content_attribute \"nested_param\" is_json=true %}\n\n          [{\n            text: \"It Worked\"\n          }]\n\n    {% end_content_attribute %}\n    {% end_widget_block %}"
  },
  {
    "text": "",
    "time_stamp": "2019-09-23 14:49:33"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 14:49:46",
    "text": "Easiest way is to set up the attribute seperately"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 14:50:11",
    "text": "`{% set value = [{ ... }] %}`"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 14:50:11",
    "text": "i've configured the parameter as a repeater = true"
  },
  {
    "text": "",
    "time_stamp": "2019-09-23 14:50:18"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 14:50:36",
    "text": "so i was trying to pass the content as a json array"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 14:50:42",
    "text": "Then in the tag: `nested_param=\"{{ value }} \"`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 14:51:04",
    "text": "We are making this much easier to do but we haven’t rolled out the feature yet"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 14:51:24",
    "text": "it will set my simple_param but not the nested_param  (i can set the simple_param through the content_attribute way and it works... its just the nested_param that i don't know how to configure )"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:00:35",
    "text": "that worked thank you so much!"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 15:10:57",
    "text": "Soon you will be able to just do `nested_param=[{...}]` but we are still testing it"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:20:17",
    "edited": {
      "time_stamp": "2019-09-23 15:21:23"
    },
    "text": "great.  so <@U6GNQ7JBU> if i have complex nesting, do i have to build the full json for the nested structure, or can i use something like `{% set widget_data.module_id.nested.nested.nested.property = value %}`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 15:21:26",
    "text": "I think you would want to use a `do` and update, let me whip up an example"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 15:23:31",
    "text": "```\n{% set dict = {'test': 10 } %}\n{{ dict.test }}\n{% do dict.update({'test': 20}) %}\n{{ dict.test }}\n```"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:24:34",
    "text": "i'm referring to if i have a custom module with nested fields"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:25:34",
    "text": "i want to be able to set the default values of some of these nested fields just like i can easily do for all of the root properties/parameters"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:26:23",
    "text": "i would need to build the full json structure to initialize these nested values?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 15:27:10",
    "edited": {
      "time_stamp": "2019-09-23 15:27:16"
    },
    "text": "You should be able to set a default value for a nested field in a group"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-09-23 15:28:51",
    "text": ":eyes: I think I know what you mean"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:29:05",
    "text": "so if that grouped field contained another group, (which could contain others), i have to set it all in 1 set statement off of the first group \"root\" property?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:29:54",
    "text": "or after i declare the module, can i use code to get a reference to it and set some of the other properties in an easier to understand way?"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:31:04",
    "edited": {
      "time_stamp": "2019-09-23 15:32:49"
    },
    "text": "i'm confused over when to use `{% set widget_data.module_id.property ... ` vs. `{% set content.widgets.module_id.property ...`"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:32:16",
    "text": "i found documentation here but it's unclear to me (its towards the end)"
  },
  {
    "poster": {
      "poster_name": "Trey",
      "poster_handle": "trey185"
    },
    "time_stamp": "2019-09-23 15:32:16",
    "text": "<https://designers.HubSpot.com/docs/hubl/export-to-template-context>"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2019-09-23 16:08:18",
    "text": "That’s a good point. We can get rid of a bunch of stuff in public_common and only include the vex css when it’s needed for the legacy modules. Workin on it."
  },
  {
    "poster": {
      "poster_name": "Steven Hambleton",
      "poster_handle": "steven994"
    },
    "time_stamp": "2019-09-23 23:31:16",
    "text": "I mean retrieving a list of memberships - being able to choose one in the email creation process, then conditionally displaying code depending on whether the member belongs to it or not."
  }
]
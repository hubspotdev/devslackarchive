[
  {
    "poster": {
      "poster_name": "Amit Rai",
      "poster_handle": "amit"
    },
    "time_stamp": "2019-03-04 02:21:30",
    "edited": {
      "time_stamp": "2019-03-04 02:21:44"
    },
    "text": "Is it possible to remove `hs_lang` from the URL for translated pages?\n\n*My goal is to achieve the following:*\n\n*Global Page*: /en/pro-test\n*French Page*:  /fr/pro-test\n\n*I have tried to achieve this with the following:*\n\n`{{ request.path|split('/', 2)|last }}`\n\n*Which spits out:*\n\n`/fr/pro-test?hsLang=en` (For the french page)\n\nWhen clicking the link it redirects me to the `en` page, which is the global page, which is what I don't want. I believe this is because of the `hsLang` appended to the end. How can I remove this?\n\nI have seen the HubSpot forum which states this is because of the language setting enabled in Settings (*Settings* &gt; *Domains &amp; URLs* &gt;  *Language Setting* &gt; *Enable Language specific redirects*)\n\nBut I need this feature enabled so that all links have the region code appended to the URL when a language change has occurred, so that I don't have to manually update all the links on a page translation.\n\nAny way around this?"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-03-04 06:55:13",
    "edited": {
      "time_stamp": "2019-03-04 06:55:27"
    },
    "text": "Morning, all. Curious what you use for prefixing your CSS? I've been a long time user of <https://autoprefixer.github.io/>, however our team has recently started using custom HubL variables for base styles and that throws an error on the auto prefixer tool."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-04 07:24:20",
    "text": "I do use autoprefixer, and I just manually correct the hublvars.\n\nBeen considering trying out a VSCode autoprefixer extension which may make it easier, but haven’t invested the time to figure it out yet. <@UD53A9UUR> uses it"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-04 07:25:37",
    "text": "can't beat SASS"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-04 07:26:01",
    "edited": {
      "time_stamp": "2019-03-04 07:26:43"
    },
    "text": "i avoid writing CSS in the design manager as much as possible because of issues like that :grimacing:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-04 07:32:08",
    "text": "eh, I mean you can just use a macro to get your prefixes too"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-04 07:33:00",
    "text": "I use HubL in my css files all the time and locally you don’t get useful syntax or error messages related to HubL so majority of the time I’m in the design manager"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-04 07:38:41",
    "text": "yeah, it's just a hassle managing all your own prefixes and remembering your macros compared to just checking a box in codekit."
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-03-04 07:50:27",
    "text": "thanks for the feedback, guys!"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2019-03-04 08:58:13",
    "edited": {
      "time_stamp": "2019-03-04 08:58:17"
    },
    "text": "FWIW, I bit the bullet and bought CodeKit this weekend, and I'm not dissatisfied. I like staying in VSCode and keeping things local as opposed to using CodePen like I used to. Still love codepen, but just a bit nicer to keep things local if I have no intension of sharing them"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-04 09:04:46",
    "edited": {
      "time_stamp": "2019-03-04 09:07:41"
    },
    "text": "agreed, very much loving the concept of codekit, haven’t bought it yet, installed it though. just haven’t gotten it set up. If any of you pick up some good workflows or find certain setups work well for doing HubSpot dev with CodeKit, I would be very interested in hearing what you have to say.",
    "reply_count": 5,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-03-04 09:44:30"
      },
      {
        "time_stamp": "2019-03-04 10:09:04"
      },
      {
        "time_stamp": "2019-03-04 10:43:46"
      },
      {
        "time_stamp": "2019-03-04 11:01:03"
      },
      {
        "time_stamp": "2019-03-04 11:13:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-04 09:11:12",
    "text": "i installed an autoprefixer extension for vscode and it ignores hubl"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-04 09:11:15",
    "text": "<https://marketplace.visualstudio.com/items?itemName=mrmlnc.vscode-autoprefixer>",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-06 09:46:41"
      },
      {
        "time_stamp": "2019-03-06 09:48:55"
      },
      {
        "time_stamp": "2019-03-06 09:49:20"
      },
      {
        "time_stamp": "2019-03-06 09:49:31"
      },
      {
        "time_stamp": "2019-03-06 09:57:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-03-04 09:44:30",
    "text": "i use prepros becasue it has built in ftp"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-04 10:09:04",
    "text": "oh... that is cool"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-03-04 10:43:46",
    "text": "I plan to write up a post soon with my current workflow"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-04 11:01:03",
    "text": "<@U7V9DQ31P> if you don’t mine pinging me when you do that, like I said would love to see it"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-03-04 11:13:21",
    "text": "i'll take a ping, too, por favor"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-04 13:31:11",
    "text": "is there a square root function or filter?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-03-04 13:33:38",
    "edited": {
      "time_stamp": "2019-03-04 13:34:23"
    },
    "text": "<@U3T21PDBK> try `|root` and let me know if it works"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-04 13:35:54",
    "text": "already tried, doesn’t work"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-04 13:36:49",
    "text": "also tried `num|sqrt`",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-04 13:40:14"
      },
      {
        "time_stamp": "2019-03-04 13:47:15"
      },
      {
        "time_stamp": "2019-03-04 13:59:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-03-04 13:40:14",
    "text": "Put up an issue <https://github.com/HubSpot/jinjava> and we’ll implement it"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-04 13:47:15",
    "text": ":100: <@U6GNQ7JBU>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2019-03-04 13:59:54",
    "edited": {
      "time_stamp": "2019-03-04 14:00:01"
    },
    "text": "<https://github.com/HubSpot/jinjava/issues/292>"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-03-04 20:47:39",
    "edited": {
      "time_stamp": "2019-03-04 20:55:48"
    },
    "text": "I have custom module I am building that has the use of background images in css, how do I use hubL to change the css bg images if I need to use Repeaters in this module, is there an article that explains that, for example:\n&lt;div class=“slide a”&gt;&lt;/div&gt;\n&lt;div class=“slide b”&gt;&lt;/div&gt;\n&lt;div class=“slide c”&gt;&lt;/div&gt;\n\n.a is an image-bg, .b is a different image-bg, .c another different image-bg, etc",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-03-04 21:02:19"
      },
      {
        "time_stamp": "2019-03-04 21:04:46"
      },
      {
        "time_stamp": "2019-03-04 21:08:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-03-04 21:02:19",
    "text": "Hi Chris, if you’re using a repeater it should be something like:"
  },
  {
    "poster": {
      "poster_name": "Nick Montagu",
      "poster_handle": "nick090"
    },
    "time_stamp": "2019-03-04 21:04:46",
    "text": "{% for item in module.content.product_repeater %}\n\n&lt;div class=“img” style=“background-image:‘{{module_repeater_.image}}’);“&gt;"
  },
  {
    "poster": {
      "poster_name": "Chris Abplanalp",
      "poster_handle": "cabplanalp"
    },
    "time_stamp": "2019-03-04 21:08:49",
    "text": "oh gotcha, so it would need to be inline, that makes sense, thanks!!!"
  }
]
[
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2020-04-06 03:16:26",
    "text": "Has there been any discussion on including a `revert commit` command for the CLI, to handle the case of an errant command causing chaos?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-04-06 06:39:18"
      },
      {
        "time_stamp": "2020-04-06 07:50:17"
      },
      {
        "time_stamp": "2020-04-06 09:12:00"
      },
      {
        "time_stamp": "2020-04-06 09:12:08"
      },
      {
        "time_stamp": "2020-04-07 04:53:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-04-06 06:39:18",
    "edited": {
      "time_stamp": "2020-04-06 06:40:16"
    },
    "text": "Can you clarify what you’d like this revert type command to do exactly?\n\nfor example - If used on `hs upload` :\n• change to revision of updated files to a version prior to previous command execution and publish\n• delete files that were uploaded and not updates of existing file.\nWould it make sense for this to work on `watch` and `fetch`? if so what would be your expectation of how it’d work?\n\nIs it easier to understand say what a hypothetical `hs revert` command would do, or use version control in combination with `hs watch` or `hs upload` to perform the same action?"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2020-04-06 07:50:17",
    "text": ":slightly_smiling_face: I shall return with in-depth answers soon"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-06 09:12:00",
    "text": "I agree something like this would be amazing"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-04-06 09:12:08",
    "text": "Just to hook into the revisions"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2020-04-06 11:50:53",
    "text": "fyi <@UQ4ED6QFM> I successfully ran an auth today, no issues"
  },
  {
    "poster": {
      "poster_name": "Mike Talley",
      "poster_handle": "mtalley"
    },
    "time_stamp": "2020-04-06 11:52:42",
    "text": "excellent! glad to hear it's working for you now"
  }
]
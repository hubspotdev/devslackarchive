[
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 10:14:48",
    "text": "I realize I’m asking a lot here - because this is a tricky UI/UX situation but.\n\nI would love it if I could have side by side tabs in the design manager.\n\nUse-case - I’m building a megamenu header for a site right now. \n\nIt would be nice to be able to have my css up  next to the drag n drop template so I can see the class names I used for things and whatnot on there. or do the same but with a javascript file.\n\nI do realize there is a UI challenge of what to do about the sidebars when someone split screens, and that this might be a bad UX on non-widescreens",
    "reply_count": 10,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2018-07-20 10:21:44"
      },
      {
        "time_stamp": "2018-07-20 10:22:48"
      },
      {
        "time_stamp": "2018-07-20 10:55:34"
      },
      {
        "time_stamp": "2018-07-20 10:56:17"
      },
      {
        "time_stamp": "2018-07-20 10:56:41"
      },
      {
        "time_stamp": "2018-07-20 10:57:25"
      },
      {
        "time_stamp": "2018-07-20 10:57:46"
      },
      {
        "time_stamp": "2018-07-20 11:03:07"
      },
      {
        "time_stamp": "2018-07-20 11:04:42"
      },
      {
        "time_stamp": "2018-07-20 11:04:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-20 10:21:44",
    "text": "Why not clone the window and open your css in the second window?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 10:22:48",
    "text": "I do that now, but it opens the scary situation of having multiple design managers open and overwriting files and blowing up your website about kittens :cat2: :boom:"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-07-20 10:55:34",
    "text": "I’m just getting into COS development, but Im finding it’s much easier to write my CSS completely outside of the design manager"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-07-20 10:56:17",
    "text": "of course, you’d need the html outside of the deisgn manager too"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-07-20 10:56:41",
    "text": "and use the tools that you are used to to build the base, and then put it all into HubSpot when you have made lots of progress"
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-07-20 10:57:25",
    "text": "further, I am using <http://patternlab.io|patternlab.io> and atomic design to keep all my components separate"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-07-20 10:57:46",
    "text": "I’m usually keeping my CSS in another IDE also."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-20 11:03:07",
    "text": "Yeah I always write SCSS locally and upload it if I can. Split panes would probably still be useful though, especially when I'm working with stuff I didn't originally write."
  },
  {
    "poster": {
      "poster_name": "Parag Jagdale",
      "poster_handle": "parag"
    },
    "time_stamp": "2018-07-20 11:04:42",
    "text": "“working with stuff I didn’t originally write.” — i agree, it would help to see split screen in this situation."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 11:04:47",
    "text": "right I do write my custom modules in codepen and bring it over usually but the problem is when it comes to stuff like headers and footers - if you’re not building it as a custom module then that work flow doesn’t really work"
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 11:42:22",
    "text": "Hi everyone! Looking for some feedback on something. If you were in the previewer and you had the display options shown, would you find any value in being able to hide/show that toolbar? In the custom module previewer it would hide the sidebar as well as the toolbar."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 11:50:18",
    "edited": {
      "time_stamp": "2018-07-20 11:51:56"
    },
    "text": "I don’t see anything “shown”  but I think the main value of not having the previewer is being able to more easily inspect the page and get at the underlying code without fear that the previewer could interfere with what you’re seeing\n\nThen the pro of using the previewer is that you can play with all the options"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 11:50:43",
    "text": "I mean if there was a toggle to switch between those two things people probably wouldn’t mind it"
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 11:52:34",
    "text": "You still wouldn’t have access to the underlying code unless you were in the previewer without display options. I’m wondering if people would like a way to quickly preview the page without the toolbar visible (with the ability to bring it back of course)"
  },
  {
    "text": "Here’s a rough idea of what it would look like",
    "time_stamp": "2018-07-20 11:54:16"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 11:58:35",
    "text": "I don’t speak for everyone but  I don’t think it would be very useful to my workflow with the described implementation.\n\nI think the same concept could work - if it switched from the normal previewer, to a non-iframed version of the page which has a javascript added toggle like the way you currently inject the edit menu into live pages.\n\nThat way it’s there in an unobtrusive way, and you get the benefits of being able to switch AND the benefits of not having to go iframe diving."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 11:59:07",
    "text": "additional benefit would be if you could change some fields and see those settings carried over to the non iframed version"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-20 12:08:43",
    "text": "I also don't think that sounds amazingly useful, but I also spend 90% of my dev time in the non-iframed version. Having a way to toggle the autoreload on and off would be useful, though, and if that existed then an option to hide the toolbars would be good too."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:14:17",
    "text": "I dont think I have ever used the \"Preview with options\" once"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:17:13",
    "text": "What would be awesome is if the preview for modules included the option to apply a stylesheet to it. Lots of times, when previewing a module, if the CSS isnt in the CSS pane and instead in a stylesheet you can't truly see the module built out",
    "reply_count": 13,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-07-20 12:17:44"
      },
      {
        "time_stamp": "2018-07-20 12:18:15"
      },
      {
        "time_stamp": "2018-07-20 12:18:23"
      },
      {
        "time_stamp": "2018-07-20 12:18:46"
      },
      {
        "time_stamp": "2018-07-20 12:18:53"
      },
      {
        "time_stamp": "2018-07-20 12:19:13"
      },
      {
        "time_stamp": "2018-07-20 12:19:15"
      },
      {
        "time_stamp": "2018-07-20 12:19:50"
      },
      {
        "time_stamp": "2018-07-20 12:35:31"
      },
      {
        "time_stamp": "2018-07-20 12:36:21"
      },
      {
        "time_stamp": "2018-07-20 12:36:38"
      },
      {
        "time_stamp": "2018-07-20 12:36:50"
      },
      {
        "time_stamp": "2018-07-20 12:36:54"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 12:17:19",
    "text": "I use it for making sure my fields work as expected mostly, and use without options when I’m working on other stuff"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 12:17:44",
    "text": "I 100% agree with this!"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:18:15",
    "text": "dropping in <#C26E7JT8V|ideas> now"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-20 12:18:23",
    "text": "You could always temporarily add the stylesheet as a dependency for the module."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:18:46",
    "text": "true"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 12:18:53",
    "text": "you’re right Ian, just… I’m lazy lol"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:19:13",
    "text": ":point_up:  this"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:19:15",
    "text": "i am lazy too"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:19:50",
    "text": "and with my luck, id forget to remove it and then have 15 modules all loading the same stylesheet like 50 times (or 15 if being consistent)"
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 12:19:59",
    "text": "Thanks for the feedback! I believe switching from iframe to non-iframe version is very difficult and the engineering effort would be pretty large, but we’ll keep it in mind."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-20 12:20:45",
    "text": "For me, it doesn't necessarily need to pop out of the iframe, I'd just want to be able to disable the autoreload"
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 12:21:54",
    "text": "One thing we are doing is adding the ability to copy the link and open the non-iframe version directly from the preview with display options."
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 12:22:04",
    "text": "I can see about adding a setting to prevent the auto-reload"
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 12:22:31",
    "text": "just to be clear you’re saying you want a way to prevent the preview from automatically updating when you make changes in the ide?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-20 12:23:14",
    "text": "Yeah"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-20 12:23:36",
    "text": "It's useful, but it can also be kind of annoying sometimes."
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 12:23:53",
    "text": "Could I get an example of when it can be annoying?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-07-20 12:25:10",
    "text": "Sometimes I just don't want the page to reload because I'm looking at something in the dev tools, or there's some state I want to preserve, like I've opened a modal or something."
  },
  {
    "poster": {
      "poster_name": "Jonah Min",
      "poster_handle": "jmin"
    },
    "time_stamp": "2018-07-20 12:26:44",
    "text": "I’ll keep that in mind and bring it up with the team, thanks!"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-07-20 12:35:31",
    "text": "I thought there was a solution in place for this already.  My understanding was that attached stylesheets only get loaded once so you could load a pile of modules all referencing the same style sheet without slowing down load times"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-20 12:36:21",
    "text": "if thats the case thats awesome, never knew that"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 12:36:38",
    "text": "you are correct about it loading only once"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 12:36:50",
    "text": "but still I wouldn’t load the template stylesheets into modules"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-20 12:36:54",
    "text": "that’s just asking for trouble"
  },
  {
    "poster": {
      "poster_name": "Josh Ames",
      "poster_handle": "josh.ames"
    },
    "time_stamp": "2018-07-20 22:41:10",
    "text": "Weird issue I've ran into this week. An old blog template, originally built with DM v1, we were using we had the following code in the Blog Post template so that the user could choose a CTA to insert at the end of the post, and it shows up as an editable module.\n\n        &lt;div class=\"blog-cta\"&gt;\n            {{ content.widgets.custom_cta.body.value }}\n            {% cta \"sr_cta\" label=\"Add Blog Post CTA\" %}\n        &lt;/div&gt;\n\nHowever in a newer blog template we are using we've copied and pasted the exact same code, except when editing the blog post there is no CTA module showing to be able to insert a CTA (or to carryover existing CTAs from the previous template).\n\nCan't figure out why it's not showing up as a module at all on the front end. Any ideas?"
  }
]
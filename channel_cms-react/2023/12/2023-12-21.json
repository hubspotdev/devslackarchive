[
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:18:23",
    "text": "Hi so I've just been given a project in HubSpot CMS.\n\nEssentially my background is using platforms like Astro and Next.js with React + headless cms's like Storyblok\n\nI have a few quick questions.\n\nI noticed the new building blocks is in beta\n\n• Can I reasonably build most of the site in react? If not is there much to learn in terms of hubl (I have never used this before, but have used things like liquid) \n• What is the content editor experience like, is it a schema based headless cms type approach where I as the developer receive a json payload and the marketing manager has a custom fields / block like editing experience or is it more of a WSYIWYG visual editor?\n• Can I use tailwind + typescript + any npm packages in both the building blocks and the hubl stuff\n• Is there anything obvious that I will not be able to do from a react perspective? And can I choose what is loaded on the server and what is requested on client similar to Astro?",
    "reply_count": 48,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2023-12-21 08:22:22"
      },
      {
        "time_stamp": "2023-12-21 08:35:10"
      },
      {
        "time_stamp": "2023-12-21 08:37:54"
      },
      {
        "time_stamp": "2023-12-21 08:38:55"
      },
      {
        "time_stamp": "2023-12-21 08:39:44"
      },
      {
        "time_stamp": "2023-12-21 08:40:46"
      },
      {
        "time_stamp": "2023-12-21 08:41:15"
      },
      {
        "time_stamp": "2023-12-21 08:41:18"
      },
      {
        "time_stamp": "2023-12-21 08:41:32"
      },
      {
        "time_stamp": "2023-12-21 08:42:05"
      },
      {
        "time_stamp": "2023-12-21 08:42:26"
      },
      {
        "time_stamp": "2023-12-21 08:42:32"
      },
      {
        "time_stamp": "2023-12-21 08:43:03"
      },
      {
        "time_stamp": "2023-12-21 08:43:07"
      },
      {
        "time_stamp": "2023-12-21 08:43:07"
      },
      {
        "time_stamp": "2023-12-21 08:43:53"
      },
      {
        "time_stamp": "2023-12-21 08:45:33"
      },
      {
        "time_stamp": "2023-12-21 08:45:48"
      },
      {
        "time_stamp": "2023-12-21 08:46:09"
      },
      {
        "time_stamp": "2023-12-21 08:47:23"
      },
      {
        "time_stamp": "2023-12-21 08:47:23"
      },
      {
        "time_stamp": "2023-12-21 08:47:33"
      },
      {
        "time_stamp": "2023-12-21 08:48:19"
      },
      {
        "time_stamp": "2023-12-21 08:48:43"
      },
      {
        "time_stamp": "2023-12-21 08:49:05"
      },
      {
        "time_stamp": "2023-12-21 08:49:14"
      },
      {
        "time_stamp": "2023-12-21 08:49:22"
      },
      {
        "time_stamp": "2023-12-21 08:49:54"
      },
      {
        "time_stamp": "2023-12-21 08:50:17"
      },
      {
        "time_stamp": "2023-12-21 08:51:18"
      },
      {
        "time_stamp": "2024-01-04 23:52:04"
      },
      {
        "time_stamp": "2024-01-18 08:42:17"
      },
      {
        "time_stamp": "2024-01-18 08:44:34"
      },
      {
        "time_stamp": "2024-01-18 08:45:23"
      },
      {
        "time_stamp": "2024-01-18 08:45:29"
      },
      {
        "time_stamp": "2024-01-18 08:46:43"
      },
      {
        "time_stamp": "2024-01-18 08:46:54"
      },
      {
        "time_stamp": "2024-01-18 08:50:13"
      },
      {
        "time_stamp": "2024-01-18 08:55:17"
      },
      {
        "time_stamp": "2024-01-18 10:48:16"
      },
      {
        "time_stamp": "2024-01-18 10:49:03"
      },
      {
        "time_stamp": "2024-01-18 10:49:35"
      },
      {
        "time_stamp": "2024-01-18 10:50:07"
      },
      {
        "time_stamp": "2024-01-18 10:51:37"
      },
      {
        "time_stamp": "2024-01-19 02:54:30"
      },
      {
        "time_stamp": "2024-01-19 06:57:04"
      },
      {
        "time_stamp": "2024-01-19 06:58:13"
      },
      {
        "time_stamp": "2024-01-19 06:59:24"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:22:22",
    "edited": {
      "time_stamp": "2023-12-21 08:22:48"
    },
    "text": "I'll start with this: JS Building Blocks are out to everyone and not in beta anymore."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:35:10",
    "text": "\"Can I build most of the site in React\"\n\nThe JS Building Blocks exist at the size of \"Modules\" and \"Partials\". One _could_ conceivably build entire pages with a single module which would feel the most like \"React all the way down\", however I don't recommend that. Modules are meant to be re-usable atomic implementations for specific areas of concern. Usually a HubSpot \"site\" uses a theme which consists of \"Templates (HubL)\" and various modules within those templates. Well crafted Custom Modules provide a robust level of customization for marketers while allowing developers to set guardrails and ensure a consistent experience for the end user.\n\n\"Content Editor Experience\":\n\nIt is a visual WYSIWYG drag and drop editor. You can create templates which have \"Drag and Drop\" areas in them. Marketers can then drag modules into those areas and do some amount of visual editing.\n\n\"Can I use tailwind + typescript...\"\n\nWithin the JS Building blocks yes to all of those things.\n\nWithin a \"traditional HubSpot\" theme we don't do any kind of processing on uploaded assets, so TS files would not be able to be used directly. The same goes for npm packages. That said, developers have tooling in front of uploading a theme which can do whatever custom build/processing they want.\n\n\"Is there anything obvious...\"\n\nHard to know an unkown, one thing you cannot do currently is arbitrary data fetching at render time on the server (though we are working on that actively).\n\n\"Can I specify server/client\"\n\nYes, see <https://github.HubSpot.com/cms-js-building-block-examples/reference/islands.html>\n\n---\n\nAlso generally see <https://github.HubSpot.com/cms-js-building-block-examples/> if you have not already."
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:37:54",
    "edited": {
      "time_stamp": "2023-12-21 08:39:16"
    },
    "text": "Thank you for all these helpful answers, in terms of learning curve of hubl stuff.\n\nIs it similar to a templating language like nunjucks or liquid or jsx tags?\n\nIf I need a bit of interactivity but dont need to dip into react world. e.g. just something simple\n\nWould I use vanilla js here e.g. document.querySelector('.myClass')\nthen add an event listener and do stuff as normal.\n\nAlso can i use tailwind in hubl then if not typescript and npm?"
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:38:55",
    "text": "&gt; Thank you for all these helpful answers, in terms of learning curve of hubl stuff.\n(this is honestly the main reason why I was considering building all in react, as this project is not massively paid so I just want to get things done fast, without needing to learn a ton of new concepts)"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:39:44",
    "text": "Yeah, it is somewhat similar to Nunjucks. Under the covers HubL extends \"jinjava\" <https://github.com/HubSpot/jinjava>"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:40:46",
    "text": "You can certainly add vanilla JS to a traditional theme at the page/template/module level."
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:41:15",
    "text": "I'm assuming in hubl side of things I don't directly have access to the server, I'm essentially just writing plain html/css/js but the hubl tags can give me the server stuff I need from the cms.\n\nBut if I wanted to fetch external data from an api I would need to do that in a react module (or other js building block) or do it on client ?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:41:18",
    "text": "You can use tailwind at the hubl level... pretty sure on that."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:41:32",
    "text": "&gt; I'm assuming in hubl side of things I don't directly have access to the server, I'm essentially just writing plain html/css/js but the hubl tags can give me the server stuff I need from the cms.\n:100:"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:42:05",
    "text": "Both in HubL and JS Building blocks you can use GraphQL to access data from HubDB, Custom Objects, and now Blog as well"
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:42:26",
    "text": "Thanks appreciate it,\n\nAlso is there some sort of demo so I can get a feel of what the marketing editors experience is like.\n\nAs I want to create something good for them, to make it flexible to edit.\n\nAnd I think it would be helpful if there was some screenshots or demo HubSpot instance I could view"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:42:32",
    "text": "You can also pass data from HubL to the JS Building blocks in arbitrary paramters."
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:43:03",
    "text": "I've used all the REST apis before on other projects.\n\n(have used HubSpot a lot on projects for clients, but never with the cms. But used all the form apis / add contact update contact etc)"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:43:07",
    "text": "<https://developers.HubSpot.com/docs/cms/guides/getting-started>"
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:43:07",
    "text": "thats fine to use too?"
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:43:53",
    "text": "Appreciate the helpful answers.\n\nI can just follow this getting started guide above first, then follow the JS building blocks starting guide after?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:45:33",
    "text": "Yeah, the getting started guide has you create a custom theme based on our theme boilerplate.\n\nOnce you have that uploaded to your sandbox portal ... follow the JS Building Blocks docs to deploy JS Modules."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:45:48",
    "text": "You can then reference the JS Building Blocks from your custom theme."
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:46:09",
    "text": "Last question I can think of :smile:\n\n&gt; It is a visual WYSIWYG drag and drop editor. You can create templates which have \"Drag and Drop\" areas in them. Marketers can then drag modules into those areas and do some amount of visual editing.\nWhen dipping into a react module. Can I get stuff from the CMS / content editor\n\nas props or are they essentially just dragging and dropping around the module but can't edit the props passed into it?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:47:23",
    "text": "When you create a module, you create a fields definition. Then in the editor, those fields create a module form editor which marketers can use to enter fields values."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:47:23",
    "text": "<https://github.HubSpot.com/cms-js-building-block-examples/field-types/>"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:47:33",
    "text": "Those values get passed as props to the React component."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:48:19",
    "text": "With JS Building Blocks you actually create your fields definition in JSX <https://github.HubSpot.com/cms-js-building-block-examples/reference/js-modules.html#module-fields>"
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:48:43",
    "edited": {
      "time_stamp": "2023-12-21 08:48:57"
    },
    "text": "Is a module more like a class where you can have multiple instances of it. (with different params)\n\nFor example if I make a \"interactive quiz module\" could I reuse it with different props, or they should just make a new module?"
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:49:05",
    "text": "You can multiple instances of a module yes."
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:49:14",
    "text": "Legendary thank you <@UAYBXDG4U>"
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:49:22",
    "text": "I appreciate your help and it looks like a great initiative from HubSpot"
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:49:54",
    "text": "and yourself :heart:\n\nhave been trying to get clients to not use HubSpot cms in the past :joy: and just use the apis.\n\nbut this looks like it solves all of those pain points."
  },
  {
    "poster": {
      "poster_name": "Byron Matto",
      "poster_handle": "bmatto"
    },
    "time_stamp": "2023-12-21 08:50:17",
    "text": "That's the goal - and please let us know ANY feedback you have :slightly_smiling_face: ."
  },
  {
    "poster": {
      "poster_name": "Sam Ducker",
      "poster_handle": "sam958"
    },
    "time_stamp": "2023-12-21 08:51:18",
    "edited": {
      "time_stamp": "2023-12-21 08:51:33"
    },
    "text": "Definitely will, astro is fantastic. I honestly have not found a better way to build driven a content driven website.\n\nSo I think its great that you guys were inspired by them!\n\nWill come back with feedback when I have had chance to dig in :hammer:"
  }
]
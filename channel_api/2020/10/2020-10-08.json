[
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-08 01:23:27",
    "text": "Hi <@UQYHX7CTD>! It is `hs_sku` field"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-08 02:32:11",
    "text": "Thanks Matthew, yeah the problem is not the validation itself, it's that the endpoint URL is exposed by using the API in javascript, but that's life I guess :sweat_smile:"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-08 02:32:30",
    "text": "Everything should be fine now by doing the API calls from PHP"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-10-08 02:39:01",
    "edited": {
      "time_stamp": "2020-10-08 02:39:29"
    },
    "text": "Hey Javi - I wonder if a middle ground is adding a custom field/attribute with a “secret” on the PHP-&gt;HSAPI call and using that as part of an automation/qualification step?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-10-08 02:40:46",
    "edited": {
      "time_stamp": "2020-10-08 02:41:07"
    },
    "text": "You could then drop those who don’t have it in a “trash” list and regularly review them."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-10-08 02:43:20",
    "edited": {
      "time_stamp": "2020-10-08 02:43:30"
    },
    "text": "As you’re involving a backend (your php script) in the process - you could even just setup a cron / or even a garbage collection step in your script to check the form submissions for ones which don’t have a custom field (and delete them) via the API"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2020-10-08 02:45:33",
    "text": "Could also involve webhooks - <https://legacydocs.HubSpot.com/docs/methods/webhooks/webhooks-overview|https://legacydocs.HubSpot.com/docs/methods/webhooks/webhooks-overview>"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-08 03:01:23",
    "text": "I think now security-wise the whole process is fine. But the person/s who got the endpoint URL can keep doing those requests using cURL without needing to visit my website again"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-08 03:02:30",
    "text": "So you could use cURL in your terminal using this `<https://api.hsforms.com/submissions/v3/integration/submit/portalID/formID>` and do submissions every second"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-08 03:02:44",
    "text": "if you already have the portalID and the formID"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-08 03:03:02",
    "text": "because there is no authentication"
  },
  {
    "poster": {
      "poster_name": "Javi Espinosa",
      "poster_handle": "javier.espinosa"
    },
    "time_stamp": "2020-10-08 03:03:34",
    "text": "So my concern now is for who already got that URL, not for new attacks as the endpoint is not exposed anymore :smile:"
  },
  {
    "poster": {
      "poster_name": "Abs Shahid",
      "poster_handle": "abs.shahid"
    },
    "time_stamp": "2020-10-08 05:49:45",
    "text": "Hi\n\nUsing API on a mobile APP, is there a way to check if a user already exists in HS?",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2020-10-08 05:52:50"
      },
      {
        "time_stamp": "2020-10-08 05:58:02"
      },
      {
        "time_stamp": "2020-10-08 11:01:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andreas Wessolly",
      "poster_handle": "webdesign"
    },
    "time_stamp": "2020-10-08 05:52:50",
    "text": "Maybe with this: <https://developers.HubSpot.com/docs/api/crm/contacts>"
  },
  {
    "poster": {
      "poster_name": "Taras Sachavskyi",
      "poster_handle": "t.sachavskyi"
    },
    "time_stamp": "2020-10-08 05:58:02",
    "text": "Hey <@U01487W4C6B>\nYou mean contacts or users (owners)?"
  },
  {
    "poster": {
      "poster_name": "TaRan Wilson",
      "poster_handle": "taran.wilson"
    },
    "time_stamp": "2020-10-08 06:47:33",
    "text": "I am new to Python, so I'm not quite to the point where I can write my own code for something like this. Hopefully I'll get there soon."
  },
  {
    "poster": {
      "poster_name": "Gil Turetsky",
      "poster_handle": "gturetsky"
    },
    "time_stamp": "2020-10-08 08:20:38",
    "text": "fyi `dict.get(key, default)` so you don’t need to use `or` <@U012W4YEUTX> <https://docs.python.org/3/library/stdtypes.html#dict.get>"
  },
  {
    "text": "Thanks for your response.\nActually I've got this PRODUCT_OR_FOLDER association possibility from an error message returned from server when tried to create the assocaition with PRODUCT. Looks like they have updated the error message and removed PRODUCT_OR_FOLDER. But you can see that the association is possible for CONTACT, DEAL, LINE_ITEM, TICKET, ENGAGEMENT, COMPANY, CALL, TASK, CONVERSATION_SESSION, MEETING_EVENT, NOTE, EMAIL etc. Please check the screenshot.\nNow I need this custom object association with Product because some contacts will be selling LIVE webinar and others will buy them. Now those who buys it we can track it using Deals but those who will be selling them we want to track that by associating product with them. But looks like its not possible.",
    "time_stamp": "2020-10-08 09:52:35"
  },
  {
    "poster": {
      "poster_name": "Abigail Estrada",
      "poster_handle": "abigail.estrada"
    },
    "time_stamp": "2020-10-08 09:57:15",
    "text": "Thank you Matthew. So maybe that's why I can't see the property changes?"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 11:01:00",
    "text": "Owners API for a local user like an assignee of an object, Contacts API for a client / customer / whatever"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 11:02:21",
    "text": "You'll have to read the API client source code, but generally, when using V3, you must specify the list of columns AKA properties to return, when calling APIs directly. I don't use the SDK in Python though, I use the raw API, so I can add a metric ton of logging statements, because my project has compliance / audit rules it's required to follow"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 11:02:37",
    "text": "That's my theory, as a non HS employee"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 11:04:58",
    "text": "Yeah... I am not surprised too much there is an issue, because many people have reported challenges with the Assoc'es between Deal, Quote, Product, Line Item. I am not sure they have fully engineered every one of these combinations and enabled them yet."
  },
  {
    "poster": {
      "poster_name": "Joshua Schrom",
      "poster_handle": "jschrom"
    },
    "time_stamp": "2020-10-08 16:00:50",
    "text": "Hello all,\nI am attempting to get both current and deactivated users id value converted to firstName + lastName on a csv. I'm using the v3 contacts api to get specified properties for all contacts. There are quite a few properties(default and custom) that return the users id value. I'm using the v3 owners api to get the firstName and lastName. I ran a GET request to see the json response from the owners api and noticed there are no deactivated users listed. How am I able to get the deactivated users firstName and lastName from a user id value?\nThanks!",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-08 19:01:14"
      },
      {
        "time_stamp": "2020-10-08 19:38:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Khushali Thakkar",
      "poster_handle": "thakkarkhushali2512"
    },
    "time_stamp": "2020-10-08 16:24:20",
    "text": "Hi"
  },
  {
    "poster": {
      "poster_name": "Khushali Thakkar",
      "poster_handle": "thakkarkhushali2512"
    },
    "time_stamp": "2020-10-08 16:25:22",
    "text": "I have some confusions, actually i need to send email template which is created using HubSpot tool to contacts via api",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-08 19:03:57"
      },
      {
        "time_stamp": "2020-10-09 13:59:28"
      },
      {
        "time_stamp": "2020-10-10 15:58:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Khushali Thakkar",
      "poster_handle": "thakkarkhushali2512"
    },
    "time_stamp": "2020-10-08 16:25:25",
    "text": "is it possible&gt;"
  },
  {
    "poster": {
      "poster_name": "Khushali Thakkar",
      "poster_handle": "thakkarkhushali2512"
    },
    "time_stamp": "2020-10-08 16:25:27",
    "text": "?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2020-10-08 18:42:49",
    "text": "Hey <@U01CCEUH7DJ>! Nice seeing you in another place :wink:\nwanted you to know that we are working on that documentation issue that you pointed out!"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 18:56:04",
    "edited": {
      "time_stamp": "2020-10-08 18:56:30"
    },
    "text": "I am aware of `.get(key, default` instead of `or`. But it blows up when the key is present but the value for the key is `null`. So I have gotten used to using `or` instead because I have to write really, really bulletproof code for my use cases."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 18:57:08",
    "text": "One option would be nuking and re-creating the form, so the form ID would be useless."
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 19:01:14",
    "text": "It would appear you have to use the legacy API for that for now where a flag is present to display them\n\n<https://legacydocs.HubSpot.com/docs/methods/owners/get_owners>"
  },
  {
    "poster": {
      "poster_name": "Matthew Hall",
      "poster_handle": "mhall"
    },
    "time_stamp": "2020-10-08 19:03:57",
    "text": "It is only possible via a somewhat pricey add-on feature:\n\n<https://community.HubSpot.com/t5/APIs-Integrations/Sending-Email-using-API/td-p/300881>\n\nYou might want to see about using a Workflow, possibly integrated with a Webhook, instead, depending on the details, but you'd have to explain more of the use case."
  },
  {
    "poster": {
      "poster_name": "Joshua Schrom",
      "poster_handle": "jschrom"
    },
    "time_stamp": "2020-10-08 19:38:28",
    "text": "<@U012W4YEUTX> Thank you for the response and direction on to which api I need to use!"
  },
  {
    "poster": {
      "poster_name": "Kamrul Hasan",
      "poster_handle": "kamrul"
    },
    "time_stamp": "2020-10-09 00:22:35",
    "text": ":+1:"
  }
]
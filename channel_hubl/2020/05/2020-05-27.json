[
  {
    "poster": {
      "poster_name": "Chris Asuncion",
      "poster_handle": "chris759"
    },
    "time_stamp": "2020-05-27 06:38:54",
    "text": "Is there a way we can show list of people who signed up to a form in website pages?"
  },
  {
    "poster": {
      "poster_name": "Chris Asuncion",
      "poster_handle": "chris759"
    },
    "time_stamp": "2020-05-27 06:39:34",
    "text": "Tried api but I figured it wont work on pages hosted in HubSpot"
  },
  {
    "poster": {
      "poster_name": "Sami Sundberg",
      "poster_handle": "sami.sundberg"
    },
    "time_stamp": "2020-05-27 08:07:02",
    "edited": {
      "time_stamp": "2020-05-27 08:07:09"
    },
    "text": "Does anyone know how to get all pages and loop them through to find specific page? I am trying to build functionality like  `blog_recent_tag_posts` or `content_by_id` but with pages and custom text field. Those functions can  be found here: <https://designers.HubSpot.com/docs/hubl/functions#blog-recent-tag-posts>",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-05-27 08:25:04"
      },
      {
        "time_stamp": "2020-05-28 00:30:14"
      },
      {
        "time_stamp": "2020-05-28 06:48:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2020-05-27 08:25:04",
    "text": "There's no HubL function for this unfortunately, but if you're on enterprise you could theoretically use a serverless function to hit the pages API and loop over them using JS"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-05-27 21:46:43",
    "text": "```{% if is_listing_view %}\n{% else %}\n &lt;!-- do blog post stuff --&gt;\n{% endif %}```"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-05-27 21:51:56",
    "text": "<@U795QFHDE> Did you figure this out? at first glace it looks like its not working because its all wrapped in a &lt;p&gt; tag.\n\nIf im not mistaken content.post_list_content will return html. Either place that inside of a div. Or if you want it to all be a p element\n\n```content.post_list_content|striptags|truncate(100)```\nshould likely do the trick"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-05-27 21:55:04",
    "text": "<@U013KTK1XBL> Are you trying to set these attributes/properties when you are placing the module? Im a little confused with what youre asking. What do you mean by dynamic tag?"
  },
  {
    "poster": {
      "poster_name": "Sami Sundberg",
      "poster_handle": "sami.sundberg"
    },
    "time_stamp": "2020-05-28 00:30:14",
    "text": "What do you think if I list every piece of content to the same HubDB table tag them there and one column has the contentâ€™s public url?"
  }
]
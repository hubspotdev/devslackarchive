[
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-08-09 02:23:41",
    "text": "If you can check based on a contact property being filled or not, you could use `{{ request.contact.contact.CONTACT_PROPERTY_HERE }}`"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2022-08-09 06:33:45",
    "text": "Thanks for the suggestions!"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2022-08-09 07:11:32",
    "edited": {
      "time_stamp": "2022-08-09 07:13:16"
    },
    "text": "This solution needs to be on non-password protected pages– <@UDJV5B73R> am I correct that `{{ request.contact }}`  is only valid on user-logged-in pages? I think what I will end up having to do is store a cookie upon form submission... and then utilize that cookie later when user browses the site"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-08-09 07:21:35",
    "text": "hmm i checked the developer Info from the sprocket and it’s all on the page, there’s only one way to find out though :stuck_out_tongue: (also if you’re just doing an if statement in the backend nothing is brought through to the front end so should be safe)\n\nBut otherwise cookie does work too"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2022-08-09 07:30:03",
    "text": "Yeah, I asked because it's not pulling through any contact id or other info in my testing– appreciate the suggestion!"
  },
  {
    "poster": {
      "poster_name": "Nich Mueller",
      "poster_handle": "nich"
    },
    "time_stamp": "2022-08-09 07:49:30",
    "text": "Ohhhh it IS working. I was testing on a non-published page in preview mode, and after I published, I have access to contact ID. Thx!"
  },
  {
    "poster": {
      "poster_name": "Michele Herzog",
      "poster_handle": "michele.herzog24"
    },
    "time_stamp": "2022-08-09 07:51:34",
    "text": "Hey <@U029GNM3MAL>! The URL field returns more information than just the URL - you’ll need `{{item.featured_resource_link.href}}` instead. If you’ve enabled email as a supported URL type, the logic is a bit longer - here’s an example:\n```{% set href = module.url_field.href %}\n{% if module.url_field.type is equalto \"EMAIL_ADDRESS\" %}\n\t{% set href = \"mailto:\" + href %}\n{% endif %}\n&lt;a href=\"{{ href }}\"&gt;\n\tLink text\n&lt;/a&gt;```"
  },
  {
    "poster": {
      "poster_name": "Kam Jin",
      "poster_handle": "kam.jin"
    },
    "time_stamp": "2022-08-09 08:34:22",
    "text": "Thank you so much for the help! It works great!"
  },
  {
    "poster": {
      "poster_name": "Gunnar Normand",
      "poster_handle": "gunnarnormand"
    },
    "time_stamp": "2022-08-09 18:12:20",
    "text": "Hello! I'm trying to create a dynamic module using HubDB to compare products and have information populate via a dropdown input. Has anyone done something similar before? Or know of any resources to point me in the right direction (I'm relatively new to using HubDB)?\n\nHere is a link to what I'm trying to replicate: <https://www.dustlessblasting.com/products/mobile/compare>\nAny feedback is appreciated!!\nThank You!",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-08-16 13:42:58"
      },
      {
        "time_stamp": "2022-08-16 13:43:51"
      },
      {
        "time_stamp": "2022-08-16 13:44:58"
      },
      {
        "time_stamp": "2022-08-18 06:40:33"
      },
      {
        "time_stamp": "2022-08-18 09:57:24"
      },
      {
        "time_stamp": "2022-08-18 10:01:01"
      }
    ]
  }
]
[
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2020-04-17 01:44:07",
    "text": "guys, did they disabled html editor in hubdb rich text fields.... again ??",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2020-04-17 10:13:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives727"
    },
    "time_stamp": "2020-04-17 10:07:22",
    "text": "`{% for row in hubdb_table_rows(2618384, 'orderBy=name') %}` I'm using that line of code to sort a table alphabetically, any idea why it isn't working? Can I specify which column to sort alphabetically?",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-17 10:14:48"
      },
      {
        "time_stamp": "2020-04-17 10:42:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-04-17 10:13:46",
    "text": "No.. What issue are u seeing?"
  },
  {
    "poster": {
      "poster_name": "Gobi Selvaraj",
      "poster_handle": "gselvaraj"
    },
    "time_stamp": "2020-04-17 10:14:48",
    "text": "syntax looks correct.. you have `name` column in the table right?"
  },
  {
    "poster": {
      "poster_name": "Chandler Ives",
      "poster_handle": "cives727"
    },
    "time_stamp": "2020-04-17 10:42:27",
    "text": "ah. Easy fix. thank you"
  },
  {
    "poster": {
      "poster_name": "Brandon H Goding",
      "poster_handle": "brandon"
    },
    "time_stamp": "2020-04-17 11:39:45",
    "text": "HELLO HUBDB PEEPS!!   My scenario is I want to build a sudo cart object in hub DB where a site visitor can add items to their cart and then submit the items to our external API as a request a quote type of function.  Is there a way to store either a tracking cookie id, or session id in my HUBDB Table?   Any guidance towards a page in the documentation that would lead me down the proper rabbit hole would be super helpful!",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-04-17 11:45:49"
      },
      {
        "time_stamp": "2020-04-19 19:36:52"
      },
      {
        "time_stamp": "2020-04-22 19:26:53"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Brandon H Goding",
      "poster_handle": "brandon"
    },
    "time_stamp": "2020-04-17 11:45:49",
    "text": "Is request.cookies the rabbit hole I should jump through... lol HERE I GO!"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2020-04-17 12:27:35",
    "text": "We've addressed similar with making pages that are more hybrid than dynamic. IE: if the slug matches then display and prefill information that is in HubDB. If modules are available than allow edit."
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2020-04-17 12:27:51",
    "text": "It takes manual creation of pages, but can leverage a lot of the information dynamically on the page."
  }
]
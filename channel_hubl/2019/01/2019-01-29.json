[
  {
    "poster": {
      "poster_name": "Saurabh Upadhyay",
      "poster_handle": "saurabhupadhyay42"
    },
    "time_stamp": "2019-01-29 05:43:33",
    "text": "now it's working thanks"
  },
  {
    "poster": {
      "poster_name": "Brian Krainer",
      "poster_handle": "bkrainer"
    },
    "time_stamp": "2019-01-29 06:25:28",
    "text": "Whatd you do to fix It? "
  },
  {
    "poster": {
      "poster_name": "Saurabh Upadhyay",
      "poster_handle": "saurabhupadhyay42"
    },
    "time_stamp": "2019-01-29 07:01:12",
    "text": "folder permission issues"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 12:28:47",
    "text": "are there any tricks to getting uploaded html/hubl files via ftp recognized as template files in the page editor? right now I have to create a new html/hubl file in DM and copy and paste over the content of the coded file from the local coded page template",
    "reply_count": 23,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-29 13:12:51"
      },
      {
        "time_stamp": "2019-01-29 13:14:23"
      },
      {
        "time_stamp": "2019-01-29 13:14:54"
      },
      {
        "time_stamp": "2019-01-29 13:15:09"
      },
      {
        "time_stamp": "2019-01-29 13:16:41"
      },
      {
        "time_stamp": "2019-01-29 13:26:49"
      },
      {
        "time_stamp": "2019-01-29 13:31:53"
      },
      {
        "time_stamp": "2019-01-29 13:32:11"
      },
      {
        "time_stamp": "2019-01-29 13:32:37"
      },
      {
        "time_stamp": "2019-01-29 13:33:02"
      },
      {
        "time_stamp": "2019-01-29 13:33:40"
      },
      {
        "time_stamp": "2019-01-29 13:35:50"
      },
      {
        "time_stamp": "2019-01-29 13:36:19"
      },
      {
        "time_stamp": "2019-01-30 11:30:03"
      },
      {
        "time_stamp": "2019-01-30 11:30:44"
      },
      {
        "time_stamp": "2019-01-31 05:25:19"
      },
      {
        "time_stamp": "2019-01-31 05:27:02"
      },
      {
        "time_stamp": "2019-01-31 05:28:17"
      },
      {
        "time_stamp": "2019-01-31 06:58:50"
      },
      {
        "time_stamp": "2019-01-31 07:00:38"
      },
      {
        "time_stamp": "2019-01-31 07:02:26"
      },
      {
        "time_stamp": "2019-01-31 07:03:20"
      },
      {
        "time_stamp": "2019-01-31 07:20:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nikan Shahidi",
      "poster_handle": "nikan"
    },
    "time_stamp": "2019-01-29 12:30:32",
    "text": "Does anyone have experience using the blog loop to style the first post?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-29 12:35:58"
      },
      {
        "time_stamp": "2019-01-29 12:36:10"
      },
      {
        "time_stamp": "2019-01-29 12:36:48"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 12:35:58",
    "text": "yes 2 ways to do it, use `{% if loop.first %}` if you need to adjust html"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 12:36:10",
    "text": "if you just need to style it different use :first-child"
  },
  {
    "poster": {
      "poster_name": "Nikan Shahidi",
      "poster_handle": "nikan"
    },
    "time_stamp": "2019-01-29 12:36:48",
    "text": "Thank you!"
  },
  {
    "poster": {
      "poster_name": "Liam Harwood",
      "poster_handle": "lharwood"
    },
    "time_stamp": "2019-01-29 13:12:51",
    "text": "This may be a bug on our end, I’ll try and make a fix"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:14:23",
    "text": "May or may not be. for example, there's no reason for all the html  chunks to be seen as a template in the page editor, just the html file that pulls them all together."
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:14:54",
    "text": "eg here's a lp template with a bunch o' little chunks"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:15:09",
    "edited": {
      "time_stamp": "2019-01-29 13:15:53"
    },
    "text": "```\n{% extends 'custom/markup/system/base.html' %}\n\n{% block main %}\n\n{% include 'custom/markup/system/lp-header.html' %}\n\n{% include 'custom/markup/system/lp-hero.html' %}\n\n{% include 'custom/markup/modules/2to1.html' %}\n\n&lt;section class=\"signup\"&gt;\n&lt;/section&gt;\n\n{% endblock %}```"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:16:41",
    "text": "uploaded this as LP-Template.html and this is the file that needs to be a template, not all those little bits included"
  },
  {
    "poster": {
      "poster_name": "Liam Harwood",
      "poster_handle": "lharwood"
    },
    "time_stamp": "2019-01-29 13:26:49",
    "edited": {
      "time_stamp": "2019-01-29 13:26:59"
    },
    "text": "Ah I see. We don’t currently have a good way to differentiate types of uploaded HTML files, but we could make them visible in the page editor when uploaded. Would you expect templates created via FTP to be visible in the page editor?"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:31:53",
    "text": "would save me the extra step of creating a new file in DM and copying and pasting code for every page template"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:32:11",
    "text": ":raised_hands:"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:32:37",
    "text": "I will just have to label them well so my marketers know which files to use"
  },
  {
    "poster": {
      "poster_name": "Liam Harwood",
      "poster_handle": "lharwood"
    },
    "time_stamp": "2019-01-29 13:33:02",
    "text": "Makes sense, I’ll take a look"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:33:40",
    "text": "danke!"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:35:50",
    "edited": {
      "time_stamp": "2019-01-29 13:36:11"
    },
    "text": "if were only files in a specific directory, that might work. Like in a \"pages\" or \"templates\" directory"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 13:36:19",
    "text": "but just spitballin here"
  },
  {
    "poster": {
      "poster_name": "Douglas Welcome",
      "poster_handle": "dwelcome"
    },
    "time_stamp": "2019-01-29 17:15:59",
    "text": "any tricks to generating random tag names for repeating hubl tags? like if I have a repeating text area, just being able to copy and paste without manually entering unique \"my_text_area\"?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-29 19:26:26",
    "text": "You can make a repeater in a custom module. Unsure if that is what you need"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-01-29 19:30:10",
    "text": "or make a flex column and drop multiple instances of a module in?"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-01-29 19:46:02",
    "edited": {
      "time_stamp": "2019-01-29 19:46:21"
    },
    "text": "Now that <@U7SL518D6> has made me aware of `{{ name }}`a flex column can totally work",
    "reply_count": 34,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-01-30 11:07:22"
      },
      {
        "time_stamp": "2019-01-30 11:08:10"
      },
      {
        "time_stamp": "2019-01-30 11:08:34"
      },
      {
        "time_stamp": "2019-01-30 11:12:05"
      },
      {
        "time_stamp": "2019-01-30 11:22:41"
      },
      {
        "time_stamp": "2019-01-30 11:23:02"
      },
      {
        "time_stamp": "2019-01-30 11:34:16"
      },
      {
        "time_stamp": "2019-01-31 06:06:57"
      },
      {
        "time_stamp": "2019-01-31 06:07:20"
      },
      {
        "time_stamp": "2019-01-31 06:07:35"
      },
      {
        "time_stamp": "2019-01-31 06:07:54"
      },
      {
        "time_stamp": "2019-01-31 06:08:19"
      },
      {
        "time_stamp": "2019-01-31 06:08:53"
      },
      {
        "time_stamp": "2019-01-31 06:09:42"
      },
      {
        "time_stamp": "2019-01-31 06:09:59"
      },
      {
        "time_stamp": "2019-01-31 15:11:59"
      },
      {
        "time_stamp": "2019-01-31 15:13:55"
      },
      {
        "time_stamp": "2019-01-31 15:29:24"
      },
      {
        "time_stamp": "2019-01-31 15:30:28"
      },
      {
        "time_stamp": "2019-01-31 15:30:41"
      },
      {
        "time_stamp": "2019-01-31 15:31:49"
      },
      {
        "time_stamp": "2019-01-31 15:31:49"
      },
      {
        "time_stamp": "2019-01-31 15:32:05"
      },
      {
        "time_stamp": "2019-01-31 15:32:10"
      },
      {
        "time_stamp": "2019-01-31 15:32:56"
      },
      {
        "time_stamp": "2019-01-31 15:35:38"
      },
      {
        "time_stamp": "2019-01-31 15:35:44"
      },
      {
        "time_stamp": "2019-01-31 15:37:15"
      },
      {
        "time_stamp": "2019-01-31 15:41:28"
      },
      {
        "time_stamp": "2019-01-31 15:41:47"
      },
      {
        "time_stamp": "2019-01-31 15:44:13"
      },
      {
        "time_stamp": "2019-01-31 15:50:41"
      },
      {
        "time_stamp": "2019-01-31 15:54:12"
      },
      {
        "time_stamp": "2019-01-31 15:55:10"
      }
    ]
  }
]
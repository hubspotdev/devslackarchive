[
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 07:27:52",
    "text": "you can target it my doing select { //style here }"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 07:28:08",
    "text": "no need for a name"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 07:28:31",
    "text": "form select { }"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 07:28:43",
    "text": ".hs-input select {}"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-17 08:40:38",
    "edited": {
      "time_stamp": "2017-11-17 08:42:37"
    },
    "text": "that doesn't work, you can't add an after to a select field, that's invalid css and will not render at all. you have to target the wrapper class and add the after.\n\nThat is why we need a class on the .hs-input  that states what field type it is, something as simple as .hs-input.select-field would solve the problem entirely."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 09:00:36",
    "text": "$('select').parent().addClass('select-wrapper')"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 09:00:56",
    "text": "will that help you out <@U7SL518D6>?",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2017-11-17 10:22:29"
      },
      {
        "time_stamp": "2017-11-17 14:05:29"
      },
      {
        "time_stamp": "2017-11-17 14:37:25"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 09:01:16",
    "text": "And I agree that HS could do some better css with the forms"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 09:01:25",
    "text": "class names"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2017-11-17 09:05:35",
    "text": "or, even better, the ability to change the form's markup"
  },
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2017-11-17 10:22:29",
    "edited": {
      "time_stamp": "2017-11-17 10:23:18"
    },
    "text": "it would help out, problem is HubSpot's forms are asynchronous, so this code won't actually work. You have to first detect when HubSpot's form finishes loading, the best way to do that is only accessible through their javascript embed code which has an api for this. The HubL or page builder modules do not. (in the past we've actually tried doing what you suggested)"
  },
  {
    "poster": {
      "poster_name": "Deven Davies",
      "poster_handle": "deven_ic"
    },
    "time_stamp": "2017-11-17 14:05:29",
    "text": "$(window).load(function(){ \n   $('select').each( function(){ \n      $(this).parent().addClass('select-wrapper');\n    });\n});"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2017-11-17 14:37:25",
    "text": "^^^^ this is right, but no need to do the each, but maybe im wong"
  }
]
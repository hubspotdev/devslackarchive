[
  {
    "poster": {
      "poster_name": "Matthias Amelung",
      "poster_handle": "m.amelung"
    },
    "time_stamp": "2023-04-14 03:20:44",
    "text": "Hello, I think this endpoint does not support associations within the seach object, but I am not entirely sure."
  },
  {
    "poster": {
      "poster_name": "Matthias Amelung",
      "poster_handle": "m.amelung"
    },
    "time_stamp": "2023-04-14 03:21:26",
    "text": "If I read the documentation correctly you can only get the associations of a single task at a time by using the READ-endpoint"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 06:25:56",
    "text": "<@U01QVR44MEY> mike ikes / now n laters / sour patch I can get on board with :handshake::skin-tone-2:\nGonna have to side with <@UD53A9UUR> on the jolly ranchers though"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-14 07:36:02",
    "text": "<@U3T21PDBK> I can definitely appreciate that. Also just so you know whatever <@UD53A9UUR> says has lost all credibility in my mind because he likes eating white chocolate"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2023-04-14 07:37:27",
    "text": "you keep sucking on those jolly ranchers.  :wink:"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 07:41:20",
    "text": "lol!! This is getting intense"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 07:43:58",
    "text": "Hey <@U03MLCLS5BN> I just found this issue. On <https://developers.HubSpot.com/docs/api/crm/tasks|API Task Page>, I noticed that the “Run in Postman” button brings in the Contacts collection, not the Task collection. Just wanted to pass that along.",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-04-14 07:58:57"
      },
      {
        "time_stamp": "2023-04-14 08:37:03"
      },
      {
        "time_stamp": "2023-04-14 08:38:39"
      },
      {
        "time_stamp": "2023-04-14 09:41:22"
      },
      {
        "time_stamp": "2023-04-14 09:49:05"
      },
      {
        "time_stamp": "2023-04-14 09:49:57"
      },
      {
        "time_stamp": "2023-04-14 09:50:43"
      },
      {
        "time_stamp": "2023-04-14 09:50:50"
      },
      {
        "time_stamp": "2023-04-14 09:50:59"
      },
      {
        "time_stamp": "2023-04-14 09:51:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Hannah Seligson - Developer Advocate",
      "poster_handle": "hseligson"
    },
    "time_stamp": "2023-04-14 07:58:57",
    "edited": {
      "time_stamp": "2023-04-14 07:59:09"
    },
    "text": "Hi Justin! Thank you for the note, it’s helpful! Unfortunately, most of our Postman collections are outdated - however, I’m currently assessing our existing collections, making a mass update, and adding new collections we don’t have. I can’t promise I’ll get this fixed today, but once I do, I will let you know"
  },
  {
    "time_stamp": "2023-04-14 08:04:26",
    "text": "i started a fire"
  },
  {
    "time_stamp": "2023-04-14 08:05:37",
    "text": "anchorman that escalated quickly"
  },
  {
    "time_stamp": "2023-04-14 08:06:38",
    "text": "world burn"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 08:37:03",
    "text": "If you need testers or some external help, let me know!"
  },
  {
    "poster": {
      "poster_name": "Hannah Seligson - Developer Advocate",
      "poster_handle": "hseligson"
    },
    "time_stamp": "2023-04-14 08:38:39",
    "text": "Thank you! I certainly will take you up on that offer :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 08:41:42",
    "text": "Blank form field labels are not included in the  `get /marketing/v3/forms/` endpoint’s response.\nI’d prefer it be included like `\"label\": \"\"` since the `post` version of that endpoint returns a validation error with missing labels\n```\"Invalid input JSON on line X, column Y. Some required fields were not set: [label]\",```"
  },
  {
    "poster": {
      "poster_name": "Hannah Seligson - Developer Advocate",
      "poster_handle": "hseligson"
    },
    "time_stamp": "2023-04-14 09:41:22",
    "edited": {
      "time_stamp": "2023-04-14 09:43:27"
    },
    "text": "Random question for Justin or whomever else - Besides testing HubSpot public APIs with Postman, are developers using Postman for other use cases with HubSpot? I’d love to know and make other collections if folks would find it helpful!"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 09:49:05",
    "text": "A single collection would be AWESOME! instead of getting every “individual group” of collections."
  },
  {
    "text": "For example, Quickbooks Online has a single collection that I was able to import.",
    "time_stamp": "2023-04-14 09:49:57"
  },
  {
    "poster": {
      "poster_name": "Hannah Seligson - Developer Advocate",
      "poster_handle": "hseligson"
    },
    "time_stamp": "2023-04-14 09:50:43",
    "text": "Yeah! I also like this approach, then this way you have everything in one place and don’t have to search the docs for each collection"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 09:50:50",
    "text": "CORRECT!!"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 09:50:59",
    "text": "HUGE value add for devs using Postman."
  },
  {
    "poster": {
      "poster_name": "Hannah Seligson - Developer Advocate",
      "poster_handle": "hseligson"
    },
    "time_stamp": "2023-04-14 09:51:20",
    "text": "Thank you, Justin! That’s a great suggestion"
  },
  {
    "poster": {
      "poster_name": "Laurence Harney",
      "poster_handle": "lharney"
    },
    "time_stamp": "2023-04-14 09:56:36",
    "edited": {
      "time_stamp": "2023-04-14 09:57:15"
    },
    "text": "Thanks, I'll let you know if it was successful or not"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-04-14 11:18:40",
    "text": "When I search for engagements, those are the same properties I get back, too."
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-04-14 11:23:56",
    "text": "I think in order to get the actual meeting information, you then have to get the engagement ID to do a GET request."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-14 11:24:44",
    "text": "Yeah sounds good, honestly <@U051F1U6C31> if you want to hop on a call later today I can work through the zap with you over a zoom and do it that way I think it might be quicker than async"
  },
  {
    "poster": {
      "poster_name": "Matt Zimo",
      "poster_handle": "matt_zimo"
    },
    "time_stamp": "2023-04-14 11:34:56",
    "text": "wait, I realized that you can ask which properties to get back by adding a \"properties\" section after filters. <https://developers.HubSpot.com/docs/api/crm/search#specify-returned-properties>"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 11:36:45",
    "text": "How do we import / create forms to specific business units?",
    "reply_count": 12,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-04-14 11:43:01"
      },
      {
        "time_stamp": "2023-04-14 11:52:04"
      },
      {
        "time_stamp": "2023-04-14 11:52:19"
      },
      {
        "time_stamp": "2023-04-14 11:53:19"
      },
      {
        "time_stamp": "2023-04-14 11:53:42"
      },
      {
        "time_stamp": "2023-04-14 11:54:48"
      },
      {
        "time_stamp": "2023-04-14 12:13:33"
      },
      {
        "time_stamp": "2023-04-14 12:15:53"
      },
      {
        "time_stamp": "2023-04-14 12:18:00"
      },
      {
        "time_stamp": "2023-04-14 12:27:14"
      },
      {
        "time_stamp": "2023-04-14 12:28:13"
      },
      {
        "time_stamp": "2023-04-14 12:29:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 11:43:01",
    "text": "I haven’t tired that but the idea I have is:\n\n:bulb: You could request (GET) a current form that’s in a BU and see what parameters are set."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-14 11:52:04",
    "text": "Beside these:\n```\"notifyContactOwner\": false,\n\"notifyRecipients\": [\n            \"13555148\"\n],```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-14 11:52:19",
    "text": "I don't see anything related to the team"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 11:53:19",
    "text": "hmmm but the v2 api has `\"businessUnitId\": 0,`"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-04-14 11:53:42",
    "text": "Interesting, yeah I used the v3 one"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 11:54:48",
    "text": "Yeah, I originally tried that too. I’ll try posting with that param in the v2 api and let y’all know what happens"
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:04:22",
    "text": "Hi all,\n\nI posted this question in the community forum:\n\nPrevent Forms API Submission from creating new Non-HubSpot Form?\n• <https://community.HubSpot.com/t5/APIs-Integrations/Prevent-Forms-API-Submission-from-creating-new-Non-HubSpot-Form/m-p/781797#M63154>\n```POST <https://api.hsforms.com/submissions/v3/integration/submit/:portalId/:formGuid>```\n:question: The issue I’m facing:\nWhen I submit data to an existing HubSpot “Regular” form:\n• a new “Non-HubSpot form” is created in the Forms dashboard (_Marketing &gt; Lead Capture &gt; Forms_)\n• Data is submitted to --both-- the “Regular” form and the “Non-HubSpot form”\n--------\n\nAn Elite Solutions Partner gave a suggestion of trying to pass some query params, but the issue still remains.\n\n:raising_hand: I was wondering if anyone else here had any ideas?",
    "reply_count": 25,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-04-14 12:10:36"
      },
      {
        "time_stamp": "2023-04-14 12:11:23"
      },
      {
        "time_stamp": "2023-04-14 12:12:01"
      },
      {
        "time_stamp": "2023-04-14 12:12:41"
      },
      {
        "time_stamp": "2023-04-14 12:13:02"
      },
      {
        "time_stamp": "2023-04-14 12:13:09"
      },
      {
        "time_stamp": "2023-04-14 12:13:33"
      },
      {
        "time_stamp": "2023-04-14 12:16:06"
      },
      {
        "time_stamp": "2023-04-14 12:16:22"
      },
      {
        "time_stamp": "2023-04-14 12:16:41"
      },
      {
        "time_stamp": "2023-04-14 12:16:49"
      },
      {
        "time_stamp": "2023-04-14 12:16:55"
      },
      {
        "time_stamp": "2023-04-14 12:17:15"
      },
      {
        "time_stamp": "2023-04-14 12:17:16"
      },
      {
        "time_stamp": "2023-04-14 12:17:22"
      },
      {
        "time_stamp": "2023-04-14 12:17:28"
      },
      {
        "time_stamp": "2023-04-14 12:18:20"
      },
      {
        "time_stamp": "2023-04-14 12:18:39"
      },
      {
        "time_stamp": "2023-04-14 12:23:13"
      },
      {
        "time_stamp": "2023-04-14 12:24:02"
      },
      {
        "time_stamp": "2023-04-14 12:31:21"
      },
      {
        "time_stamp": "2023-04-14 12:31:23"
      },
      {
        "time_stamp": "2023-04-14 12:32:56"
      },
      {
        "time_stamp": "2023-04-14 12:33:08"
      },
      {
        "time_stamp": "2023-04-14 12:37:56"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:10:36",
    "text": "My first thought is, are you hacking the javascript submission event?"
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:11:23",
    "text": "&gt; are you hacking the javascript submission event?\nSorry, not sure what you mean?\n\nI’m sending a POST request according to the docs:\n<https://legacydocs.HubSpot.com/docs/methods/forms/submit_form>"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:12:01",
    "text": "do you have the HubSpot tracking script installed on the page?"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:12:41",
    "text": "the tracking script will create a new form on submission.\n\nYour API POST is handling it correctly but the tracking script (js-scripts) is trigger to create the non-HubSpot form"
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:13:02",
    "text": "Yes, I have the HubSpot tracking script too.\n\nAh, I see…"
  },
  {
    "text": "",
    "time_stamp": "2023-04-14 12:13:09"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:13:33",
    "text": "Navigate to:\n<https://app.HubSpot.com/settings/:portal_ID/marketing/form/non-HubSpot>"
  },
  {
    "text": "testing portal v2 api: diff business units successful (ascend and everest)",
    "time_stamp": "2023-04-14 12:13:33"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 12:15:53",
    "text": "example (truncated) request body:\n```{\n  \"name\": \"Simple Email Form - Primary BU\",\n  \"action\": \"\",\n  \"method\": \"POST\",\n  ...\n  [form fields and stuff]\n  ...\n  \"businessUnitId\": 0\n}```"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:16:06",
    "text": "The way to get around this is to not trigger the onSubmit in the HTML form, and handle it all in javascript onClick of the specific button you want."
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:16:22",
    "text": "Ah, I see.\n\nI did see that settings toggle -\nbut missed the instructions that stated that auto collection from non-HubSpot forms is through the tracking script.\n\n-------\n\nUnfortunately we can’t turn off that setting (Collect data from website forms), as we have a Wordpress site that also collects form data."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:16:41",
    "text": "right. So in your react form, change the remove the onSubmit."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:16:49",
    "text": "and trigger the API post onClick."
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:16:55",
    "text": "&gt; The way to get around this is to not trigger the onSubmit in the HTML form, and handle it all in javascript onClick of the specific button you want.\nAh, I’ll try that as a work around for now.\n\nThanks so much."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:17:15",
    "text": "I know that works because I’ve done it. :smile:"
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:17:16",
    "text": "RIP accessibility, but… we can live with that for now :laughing:"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:17:22",
    "text": "I was confused at first as well."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:17:28",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:18:00",
    "text": ":boom:  AWESOMe John!"
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:18:20",
    "text": "Thanks, will try it out"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:18:39",
    "text": "because I wanted some of my react forms to be in HubSpot (to track engagement), I just renamed them to be pretty."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:23:13",
    "text": "when it works, make sure to mark my reply in the forum as the solutions so others know the simple fix."
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:24:02",
    "text": "Will do!\n\nTrying to get around react-hook-form right now =p"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 12:27:14",
    "text": "Thank you!\nHeads up I tried putting the `\"businessUnitId\"` and even just `\"businessUnit\"` inside of the v3 `\"configuration\": {}`  object as well as a root property, but nothing worked in v3"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:28:13",
    "text": "by chance, did you try it as an array?"
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 12:29:21",
    "text": "just did - nothing :cry:"
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:31:21",
    "text": "Thanks, that worked! :tada:\n\nWill mark your answer in the forums."
  },
  {
    "time_stamp": "2023-04-14 12:31:23",
    "text": "celebrate"
  },
  {
    "time_stamp": "2023-04-14 12:32:56",
    "text": "oh yay"
  },
  {
    "poster": {
      "poster_name": "Duncan Leung",
      "poster_handle": "duncan451"
    },
    "time_stamp": "2023-04-14 12:33:08",
    "text": "Appreciate the help!"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2023-04-14 12:37:56",
    "text": "yup! :beers:"
  },
  {
    "poster": {
      "poster_name": "Macey Bell",
      "poster_handle": "maceytbell"
    },
    "time_stamp": "2023-04-14 13:12:24",
    "text": "Anyone know if the HubSpot Analytics API has any sort of reference table with all the possible data fields that can be reported? For example, facebook ads analytics and callrail include all of their calls and a description of each call."
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2023-04-14 13:48:28",
    "edited": {
      "time_stamp": "2023-04-14 13:49:14"
    },
    "text": "I tend to avoid the SDK for many of the same reasons I see already listed. Most of these reasons revolve around inconsistency and the (lack of) documentation.\n\nSome of the bigger ones:\n• When the V8 was released, I sank more time than I care to admit trying to figure out why my HubSpotClient.apiRequest({}) wasn’t working. Turned out we needed to call json() on the response. Never needed to do so prior. Seemed like a bit of a reversion. The removal of the body object threw me for a loop too. \n• Experiences with the v3 scarred me - particularly when it came to the search endpoint. Could never get the shorthand/obfuscated version to work. \n• Like others have mentioned, the SDK was always quite a ways behind updates to the actual API. Quite a few endpoints that just weren’t supported.\n• The lack of clarity around the version of the API being used. \n• Overall lack of documentation. \n\n2 recommendations that would move the dial for me:\n\n1. Create complete documentation for the SDK, with an emphasis on significant changes made between the updated version and the one prior. It was only after I figured out my first example above that I squinted line by line through the updated documentation <https://developers.HubSpot.com/docs/api/workflows/custom-code-actions|here >comparing the v3 to the v8 and noticed the differences. Which then pushed me to take a look at the npm docs. This has indeed slowly been improved over time. Appreciate that. \n2. Draw more attention to the fact an update has been made, when they are made. It was days before I saw that little version toggle in the CCA nodes."
  },
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2023-04-14 14:40:27",
    "text": "<@U039PUBV59N> I agree.\n_Side note_: calling the npm examples “npm docs” made me laugh out loud."
  },
  {
    "text": "Hi,\nI hope i am writing in right channel. I am looking to create a new icon (button) like this, but cannot find a answer.. Can somebody give me a right direction.\nWhen the button will be created, I want it to open a popup form, with few input field to be sent via API back... Thank you.",
    "time_stamp": "2023-04-14 15:00:49",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2023-04-17 09:01:00"
      }
    ]
  }
]
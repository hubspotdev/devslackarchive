[
  {
    "poster": {
      "poster_name": "Ahmed Jamal Tariq",
      "poster_handle": "ahmed.jamal.tariq"
    },
    "time_stamp": "2024-01-25 01:40:32",
    "text": "URGENT! I have a folder\n```__SwiperSlider\n|__ SwiperSlider.scss\n|__ SwiperSlider.tsx```\nAnd in the SwiperSlider.tsx react component im including the sass file like,\n```import './SwiperSlider.scss';```\nIt is working on one of my HS portal and it was also working on other portal since last 1 month and now all of the sudden the HS is not including this `SwiperSlider.scss` file when I include this component on HS page. Any knows what's going on?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-01-25 07:12:59"
      },
      {
        "time_stamp": "2024-01-25 07:14:42"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 05:55:22",
    "text": "ended up using MUI which is pretty great but not perfect..."
  },
  {
    "text": "I'm getting this error when I open one of my pages in the content staging editor",
    "time_stamp": "2024-01-25 05:58:57"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 06:00:20",
    "text": "and a 500 error when I just try to \"view\" the page"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 06:03:14",
    "text": "if I revert to a previous build (before adding tabs from the MUI library) it works again"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 06:28:38",
    "text": "^ setting the island to `clientOnly` fixes this but it's unclear why (something about MUI and server but unclear why exactly...)",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-01-25 07:16:18"
      },
      {
        "time_stamp": "2024-01-25 07:21:34"
      },
      {
        "time_stamp": "2024-01-25 07:21:35"
      },
      {
        "time_stamp": "2024-01-25 07:24:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:02:26",
    "text": "Pretty sure `null` won’t work (or if it does, it would work by accident). Personally I’d suggest returning an empty array `[]` or `&lt;ModuleFields /&gt;`"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:03:03",
    "text": "Hm, I do not believe we know of an issue like that. Still having trouble?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:03:49",
    "text": "Interesting, thanks for the thoughts… we should come back to this :bookmark:"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:05:48",
    "text": "Yes, definitely ok to import from `fields.jsx`.\n\nStill having an issue? It is possible there is a bug with default values being different deployed and only local… but also I’m not sure if you were using the changes in a context that depends on a deploy (like a proxied page)"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:08:33",
    "text": "I think the best info on visibility is at <https://developers.HubSpot.com/docs/cms/building-blocks/module-theme-fields-overview#field-visibility>\n\nPretty sure <https://github.HubSpot.com/cms-js-building-block-examples/field-types/type-aliases/type-alias.AdvancedVisibility.html> and <https://github.HubSpot.com/cms-js-building-block-examples/field-types/type-aliases/type-alias.BaseField.html#visibility> should work"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:09:28",
    "text": "Yup.\n\nWe don’t (yet?) provide a `&lt;RawHTML&gt;` component, but you could easily create one that does `dangerouselySetInnerHTTML` for you… just be careful with it"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:11:33",
    "text": "As of now, there is no way to do a (non-graphql) fetch on the server and include that in the server HTML.\n\n(If you haven’t already you might want to fill out <https://app.opinionx.co/77cb0d81-9d9b-41e6-ab78-f9c10fadd601|our survey> :wink:)"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:12:59",
    "text": "If this is an urgent issue, could you revert to a previous deploy in the project UI get it back?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:14:42",
    "text": "Also, we’re going to need some more context to try and help out."
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:16:18",
    "text": "Any useful info in the 500 error message?\n\nYou have a link you could share?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 07:21:34",
    "text": "I can quickly remove the `clientOnly` and share again but then have to undo"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 07:21:35",
    "text": "one sec"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 07:24:20",
    "text": "sending link in DM"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 07:45:14",
    "text": "do I need to sanitize (or whatever) even if I am only loading in props from HubSpot as the content for it?"
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:49:44",
    "text": "If you are getting something straight from a rich text field, no."
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 07:50:35",
    "text": "(Keeping in mind that it is possible in a rich text field to set arbitrary HTML, but that is coming from a “trusted” source as in someone with edit access in the HS account)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:25:25",
    "text": "<@UCY83QS6Q> is this not a valid way to use it?\n```  &lt;FieldGroup\n    name={groupName}\n    label={groupLabel}\n    visibility={{\n      operator: \"EQUAL\",\n      controlling_field: \"show_button\",\n    }}\n  &gt;```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:26:02",
    "text": "`show_button` is the name of a `BooleanField`"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:28:02",
    "text": "I guess that boolean is inside of a repeating field group"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:28:14",
    "text": "so maybe it's name_of_repeating_group.show_button"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:31:47",
    "text": "nope (although now it doesn't show the group but also will not toggle)"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:42:34",
    "text": "I really thought I was onto something here with a more simple example:\n```   &lt;ImageField\n      name=\"image\"\n      label=\"Image\"\n      visibility={{\n        operator: \"EQUAL\",\n        controlling_field: \"show_image\",\n        controlling_value_regex: \"true\",\n      }}\n    /&gt;```\nbut nope"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:42:58",
    "text": "I'm expecting the image option in the editor to hide when that boolean isn't checked"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:49:49",
    "text": "this is based on what the \"design manager\" generates to I think this might be a bug...direct from design manager version:\n```  \"visibility\": {\n   \"controlling_field_path\": \"show_text\",\n   \"controlling_value_regex\": \"true\",\n   \"operator\": \"EQUAL\"\n  }```\n"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 09:56:52",
    "text": "and in that doc example the setup is a little different, there's no \"property\" field"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2024-01-25 10:01:46",
    "text": "ok, so in the end, this works:\n```    visibility={{\n        operator: \"EQUAL\",\n        controlling_field: \"tabs.show_image\",\n        controlling_value_regex: \"true\",\n      }}```\n"
  },
  {
    "poster": {
      "poster_name": "Niko Dixon",
      "poster_handle": "niko209"
    },
    "time_stamp": "2024-01-25 10:37:00",
    "text": "I’ll do that - appreciate the response."
  },
  {
    "poster": {
      "poster_name": "Timothy Finley",
      "poster_handle": "tfinley"
    },
    "time_stamp": "2024-01-25 12:00:44",
    "text": "I’ve been pretty swamped the past few days and have time to property add this to our examples, docs, etc.\n\nBut we did release a dev server package (last week or so ago?) and render/build changes (a couple days ago I think) that pass `moduleName` in the props that come to your module React component"
  }
]
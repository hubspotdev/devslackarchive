[
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2022-07-06 02:33:17",
    "text": "<@U03CH3JFK7T> Check the path, \"module\" is a folder, path from module.html to svg folder should start with `../` one folder up, instead of current folder `./` .\n\nHint: _In case of SVGs you may like to use macros and import, to have them inline, because it reduces the amount of file requests for the browser, but this depends on the use case for the SVG._"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-07-06 04:02:48",
    "text": "I’ve not seen the xlink:href does that allow you to add css styles to the svg as though it’s a html element? e.g. change the fill on hover?"
  },
  {
    "text": "Thanks <@UK9BKNBD5>  I’d be curious to know how to use macros to inline the SVGs. That would be preferable probably.\n\nIn my situation the `./` or `../` doesn’t seem to help. The module.html is inside my `Landing Page Assets/Foo.module/` directory, and if I do `ls -R` you can see I have tried to create a `svg/` directory at the same level as `module.html`. However, `get_asset_url` function is returning a blank string no matter what I pass to try to reference that local file.\n\nAlso, despite having run `hs watch` to upload the SVG file (and seeing in its logs that the file was uploaded), if I do `hs ls` to list the files in `Landing Page Assets/Foo.module` it only shows those in the second image below (note there is no `svg/` directory.",
    "time_stamp": "2022-07-06 04:45:53"
  },
  {
    "poster": {
      "poster_name": "Peter W",
      "poster_handle": "pwelte"
    },
    "time_stamp": "2022-07-06 04:47:34",
    "text": "<@UDJV5B73R> yes I think that does allow that. The use case here is to try to replace font-awesome icon font with some SVG icons (so that I can only send across the subset of icons that the browser actually needs, in order to shrink total network transfer size for the page)."
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2022-07-06 04:56:59",
    "text": "I’m not sure if you’re allowed to add directories within the module directory, as if you look in the design manager modules are handled as a unit rather than separate files"
  },
  {
    "poster": {
      "poster_name": "Peter W",
      "poster_handle": "pwelte"
    },
    "time_stamp": "2022-07-06 04:59:00",
    "text": "ah, thanks. Do you know if there are any docs that suggest how to handle this instead? Surely you’d think it is common for modules to want to have some kind of other assets included?"
  },
  {
    "poster": {
      "poster_name": "Peter W",
      "poster_handle": "pwelte"
    },
    "time_stamp": "2022-07-06 05:14:44",
    "text": "Ah ok I can create a top-level `svg/` directory (above the modules directory) and now `get_asset_url` *is* returning a URL\n\nBut now the browser (firefox) is blocking due to ‘Not same-origin’ so (at least in design manager preview) nothing is showing up."
  },
  {
    "poster": {
      "poster_name": "Peter W",
      "poster_handle": "pwelte"
    },
    "time_stamp": "2022-07-06 05:25:51",
    "text": "OK the solution to that cors/svg/`use` issue seems hefty for 2 icons - <https://github.com/jonathantneal/svg4everybody/issues/16#issuecomment-391196222>\n\nso I’ll just inline them :joy_cat:"
  },
  {
    "poster": {
      "poster_name": "Neil Yonzon",
      "poster_handle": "neil.yonzon"
    },
    "time_stamp": "2022-07-06 16:32:47",
    "text": "Hi folks - is anyone experiencing issues with the ‘inline_help_text’ property within a module’s meta.json? We’re inconsistently seeing it display between our production and testing portals."
  }
]
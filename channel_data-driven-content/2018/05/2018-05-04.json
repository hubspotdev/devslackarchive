[
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-05-04 04:42:47",
    "text": "Hey guys!\nHas anyone been able to achieve pagination with HubDB data before? Have a client that is adding lots and lots of content and want to limit the rows to 5 before 5 more appear on a new page. I'm aware of an option of creating separate pages and using the `offset=0&amp;limit=5` rule but wondered if there's a better way round of achieving this? :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-04 05:00:20",
    "text": "Depending how you want to display the results, you could probably do it with some jQuery. It wouldnâ€™t be true pagination in the URL sense, but it could have the effect of such"
  },
  {
    "poster": {
      "poster_name": "Kyle Barkins",
      "poster_handle": "kyle068"
    },
    "time_stamp": "2018-05-04 05:00:36",
    "text": "This might work too <http://pagination.js.org/>"
  },
  {
    "text": "",
    "time_stamp": "2018-05-04 07:23:20",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-11-15 16:22:55"
      },
      {
        "time_stamp": "2021-11-16 07:23:51"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-05-04 07:23:30",
    "text": "<@U9MAWTESW> :point_up: this might get you started"
  },
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-05-04 07:26:32",
    "text": "Awesome! Thanks <@U7V9DQ31P> :raised_hands:"
  },
  null,
  null
]
[
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-02-09 01:41:54",
    "text": "Answering a 3 year old question out of the blue? :thinking_face:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:12:14",
    "text": "You reposted it....."
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-02-09 07:12:25",
    "text": "No I didn’t :slightly_smiling_face:"
  },
  {
    "text": "",
    "time_stamp": "2023-02-09 07:12:46"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:12:47",
    "text": "sorry not you"
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-02-09 07:13:12",
    "text": ":wink:"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:13:25",
    "text": "well did I solve your problem? :joy:"
  },
  {
    "poster": {
      "poster_name": "Matias Vad",
      "poster_handle": "matias618"
    },
    "time_stamp": "2023-02-09 07:14:41",
    "text": "I think I solved it myself years ago, but I wouldn’t know! But I do know that it didn’t work out for Simon."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 07:15:54",
    "text": "I know it's very hard to keep of problems that you solve"
  },
  {
    "poster": {
      "poster_name": "Neil Junsan",
      "poster_handle": "neiljunsan09"
    },
    "time_stamp": "2023-02-09 08:18:37",
    "text": "<@U01QVR44MEY>\nIs there any way to achieved the deal results from dynamic_crm_objects display only associated only on the contact logged in sir ? :pray:\n\n```{% set deal = crm_objects(dynamic_page_crm_object_type_fqn,  \"pipeline=default&amp;limit=200\",\"hs_object_id, amount, dealname, HubSpot_owner_id, dealstage, createdate, closedate, company, hs_all_collaborator_owner_ids\") %}```\n"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2023-02-09 08:19:28",
    "text": "Yes you'll want to use <https://developers.HubSpot.com/docs/cms/hubl/functions#crm-associations> not crm objects"
  },
  {
    "poster": {
      "poster_name": "Neil Junsan",
      "poster_handle": "neiljunsan09"
    },
    "time_stamp": "2023-02-09 08:20:54",
    "text": "how about this line sir \"dynamic_page_crm_object_type_fqn\" is it to be replaced to \"dynamic_page_crm_association_type_fqn\" ?"
  },
  {
    "poster": {
      "poster_name": "Neil Junsan",
      "poster_handle": "neiljunsan09"
    },
    "time_stamp": "2023-02-09 08:26:14",
    "edited": {
      "time_stamp": "2023-02-09 08:31:25"
    },
    "text": "<@U01QVR44MEY> I tried to change the code to crm_associations sir it won't display :sweat_smile:\n\n```{% if dynamic_page_crm_object_type_fqn %}{# dynamic listing page #}\n\n    {% set associated_companies = crm_associations(contact.hs_object_id, \"HubSpot_DEFINED\", 1, \"limit=3&amp;order=-createdate\", \"name\", false) %}\n\n    {% set company_deals = crm_associations(dynamic_page_crm_object_type_fqn, associated_companies.results[0].id, 'HubSpot_DEFINED', 6, query, 'dealname,amount,dealstage,createdate,closedate' ) %}\n\n    {% set ticket_array = company_deals.results %}\n    {#{% set deal = crm_objects(dynamic_page_crm_object_type_fqn,  \"pipeline=default&amp;limit=200\",\"hs_object_id, amount, dealname, HubSpot_owner_id, dealstage, createdate, closedate, company, hs_all_collaborator_owner_ids\") %}\n    {# To see all of the properties your object during development, print it to the page with the |pprint filter #}\n    &lt;h1&gt;All the deals&lt;/h1&gt;\n    &lt;div class=\"deal__listing\"&gt;\n        {% for deal in ticket_array  %}```"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 10:48:39",
    "text": "Hello Everyone,\nI’m storing a json string in a form field using JSON.stringify() and when I try to get that info in HUBL im getting\n `&amp;lbrace;`   instead of  `{`  , I tried escaping different ways but its not working. The weirdest thing is that it was working two days ago.\n\nI’ve done a lot of research and cant find the solution, at this point im just thinking in doing a replace, which is awful. Anyone had this issue before?",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2023-02-09 12:17:01"
      },
      {
        "time_stamp": "2023-02-09 12:20:42"
      },
      {
        "time_stamp": "2023-02-09 12:34:56"
      },
      {
        "time_stamp": "2023-02-09 12:35:44"
      },
      {
        "time_stamp": "2023-02-09 12:36:07"
      },
      {
        "time_stamp": "2023-02-09 12:44:23"
      },
      {
        "time_stamp": "2023-02-09 12:50:08"
      },
      {
        "time_stamp": "2023-02-09 13:02:37"
      },
      {
        "time_stamp": "2023-02-09 13:02:47"
      },
      {
        "time_stamp": "2023-02-09 13:03:17"
      },
      {
        "time_stamp": "2023-02-09 13:03:32"
      },
      {
        "time_stamp": "2023-02-09 13:08:56"
      },
      {
        "time_stamp": "2023-02-09 13:09:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2023-02-09 12:17:01",
    "edited": {
      "time_stamp": "2023-02-09 12:17:12"
    },
    "text": "How are you using the value?\nDoes this work?\n```|replace('&amp;lbrace;', '{')|replace('&amp;rbrace;', '}')```\nI would recommend against using it in a place where nested interpretation is allowed. (Use a `{% print %}` tag instead of a `{{ }}` if possible)"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2023-02-09 12:20:42",
    "text": "And you're correct, this functionality was changed on February 7th"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 12:34:56",
    "text": "yes the | replace works, but it looks like a horribly hack"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 12:35:44",
    "text": "the thing is that I’m storing the string with json info and i need to get to values inside that json. not sure how the `{% print %}` would work there"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 12:36:07",
    "text": "`And you're correct, this functionality was changed on February 7th`\nI will have to check old elements I’ve created the same way, horrible"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2023-02-09 12:44:23",
    "text": "Having json there actually seems like a legitimate use-case. The change was to escape HubL inside of contact data. I think that I can improve it so that it doesn't break json. The filter used to escape is pretty naive so it escapes all curly braces"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2023-02-09 12:50:08",
    "text": "Can you dm me your portal ids that are affected by this?"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 13:02:37",
    "text": "Sure of course!"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 13:02:47",
    "text": "6705364"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 13:03:17",
    "text": "this is the portal, we have two different calculators, where we do some math in javascript and store json stings in the hidden form fields"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 13:03:32",
    "text": "then we use that JSON for the thank you pages and emails"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 13:08:56",
    "text": "Are you fixing this LIVE?"
  },
  {
    "poster": {
      "poster_name": "Mariana Forteza",
      "poster_handle": "mariana"
    },
    "time_stamp": "2023-02-09 13:09:02",
    "text": "Like right now?"
  }
]
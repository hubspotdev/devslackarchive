[
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-03-19 07:39:19",
    "edited": {
      "time_stamp": "2018-03-19 07:42:53"
    },
    "text": "I might be wrong here because this could be old information, but there is an advantage to using id’s if done properly(I stand by not using HS id’s and classes as much as possible though).\n\nIt’s been a long time since I looked into it, but I remember reading a deep dive on performance and if you target ID’s with CSS it takes less time to render(because it’s only expecting one element with that ID, it’s not going to continue parsing everything after it find something) then with javascript, it’s a similar gain but in performance when performing DOM related actions.\n\nI don’t honestly use ID’s much because I try to make my classes pretty re-usable, but I wouldn’t see anything wrong with using one for say a page header and footer.\n\nI should note the gains are not dramatic(only affects like 200ms on the average computer or something like that) - except possibly in the instance of javascript and dealing with a single item in a huge list."
  },
  null,
  null,
  null,
  null,
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-03-19 12:04:16",
    "text": "Was there ever an \"edit footer\" option for the blog post settings area where you can add code per blog post page?"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-03-19 12:17:38",
    "text": "That's in the blog content settings"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-03-19 12:17:41",
    "text": "i believe"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-03-19 13:19:23",
    "text": "but not in the post advanced options as they only want it on one page"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-03-19 13:19:47",
    "text": "I just directed to add to the rich text \"edit source\" view and if they needed it on more than that one that we'd build a custom module for it."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-03-19 13:20:45",
    "text": "I guess it would make sense since they have it on landing/website pages that they would add the same to blog post pages but ¯\\_(ツ)_/¯"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-03-19 13:27:15",
    "text": "did remington’s suggestion not work for your use-case? kinda confused. If you’re only meaning to add code to specific pages, you can always create a rich text field in the blog template for that purpose"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-03-19 14:04:20",
    "text": "Yea, thats what i ended up doing was just adding it into the post body for the page at the bottom. They have areas inside of normal landing pages and web pages in the settings tab where you can add additional content"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-03-19 14:04:31",
    "edited": {
      "time_stamp": "2018-03-19 14:32:30"
    },
    "text": "they just dont have that same setup on the blog post settings tabs"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:06:16",
    "text": "<@U7SL518D6> The issue is not speed. Honestly that is no longer a serious issue especially in the size site we are doing with HubSpot. The code base just isnt that big. The issue with ids is that they are enormously difficult to override. Keeping the style sheet as low in specificity as possible is the best way to ensure that things are not going to give you issues in the future. i.e."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:07:23",
    "text": "`#header .nav` could not be overriden unless you used the id again in your style sheet."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:08:38",
    "text": "but if you kept it simple i.e. `.nav` over riding `.nav` again will be easy. the more specific you get the harder it is to over ride a style. The cascade is doing its job but it makes it harder to work on in the future."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:09:17",
    "text": "That is why you see old style sheets with `.home .nav ul li a.active`"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:10:20",
    "edited": {
      "time_stamp": "2018-03-19 14:10:31"
    },
    "text": "if you HAVE to use an ID you can do this `[id=\"header\"]` and that actually has the same specificity as a class…"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:10:55",
    "text": "The fewer levels deep you keep your styles the better and lighter it will be."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:11:09",
    "text": "You will alos have to write less code as well."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-03-19 14:15:14",
    "text": "I guess I don’t build complex enough pages to really run into the issue. for example if I’m going to have a nav in a header, I might have `.nav` and it might be inside of a `header` and either way if I only want to target the header nav I’d either write something like `#header .nav` or `.nav.header-nav` the argument that it’s more verbose, kinda depends on the way you’re using it I guess, because in most use-cases it adds 1 character(the space). The specificity part, I guess I generally don’t see it as a big deal because I want someone to be danm sure if they’re gonna go monkeying with my header they’re really meaning to do it XD"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:16:53",
    "text": "#header nav is 1000% more specific than .nav.header-nav"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-03-19 14:16:54",
    "text": "I guess the key advantage of not using an id or instead adding an additional class on the item itself really would be the fact you’re building it agnostic of it’s container. you could move that nav out of the header just fine"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:17:12",
    "edited": {
      "time_stamp": "2018-03-19 14:17:18"
    },
    "text": "but why would you just not say `.header-nav` ?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:17:30",
    "text": "exactly"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-03-19 14:17:47",
    "text": "well generally I have a base set of styles for say .nav(like horizontal  menu styles)"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:17:52",
    "text": "While im in here. anyone set up hubl server .."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:18:02",
    "text": "I am getting errors when i try and run it."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-03-19 14:18:22",
    "text": "sorry, haven’t dabbled in it yet"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-03-19 14:19:34",
    "text": "I'm running hubl server"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:23:02",
    "text": "I get a java too low when my version is 9+"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:23:11",
    "edited": {
      "time_stamp": "2018-03-19 14:23:16"
    },
    "text": "`Error: Java version is too low to run. Needs at least Java &gt;= 1.8.0.`"
  },
  {
    "text": "<@U38EZFVFE> uploaded a file: <https://HubSpotdev.slack.com/files/U38EZFVFE/F9SESM8H0/-.html|Untitled>",
    "time_stamp": "2018-03-19 14:23:37"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:24:17",
    "text": "is it the jdk i needed or the jre?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-03-19 14:24:32",
    "text": "I believe it's the JDK"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:24:40",
    "text": "So that is what i did install."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-03-19 14:24:58",
    "text": "I'm 99% sure I'm running the latest jdk as well... but \n\n```java version \"1.8.0_101\"\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)```"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:26:43",
    "text": "ah that is the JRE"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:26:49",
    "text": "one sec"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-03-19 14:27:46",
    "text": "<http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html>"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2018-03-19 14:28:02",
    "text": "I'm running  Java SE Development Kit 8u161 for macOS"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:36:44",
    "text": "I hade to remove the jdk"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-03-19 14:36:51",
    "text": "once removed it was easy"
  },
  {
    "poster": {
      "poster_name": "Mark Hazlewood",
      "poster_handle": "mhazlewood"
    },
    "time_stamp": "2018-03-19 15:19:23",
    "text": ":wave: Hey all, my name is Mark and I’m on the integrations platform team here at HubSpot. Over the next few weeks our team is looking to connect with a few designers and developers. We’re very interested in learning about your specific experiences building with HubSpot. We want to know it all - the good and the bad and make sure we’re building for your use cases and providing you with the best dev experience possible\n\nIf you’re interested in giving feedback - please fill out this (super quick) form:\n\n<https://www.research.net/r/7985SL6>\n\nWe appreciate and respect your time, so the interviews should be less than an hour altogether. Thank you!"
  },
  null,
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-19 20:31:34",
    "text": "Hi, anyone been able to do dynamic routes (URLs) where the a HubDB table is NOT involved. Thanks"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-03-19 20:48:59",
    "text": "Only using query strings"
  },
  {
    "poster": {
      "poster_name": "Anthony Hook",
      "poster_handle": "ant"
    },
    "time_stamp": "2018-03-19 20:56:13",
    "text": "Bugger."
  }
]
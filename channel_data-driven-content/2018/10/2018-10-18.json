[
  null,
  null,
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2018-10-18 07:20:43",
    "text": "Has anyone successfully used Site Search API with HubDB? <https://developers.HubSpot.com/docs/methods/content/search-for-content> As in providing the table id and hubdb query. I've used this api endpoint on many projects already and works just fine but as soon as I would like to use the hubdb parameter it gives out nothing no matter what I do with it.",
    "reply_count": 10,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-18 07:44:35"
      },
      {
        "time_stamp": "2018-10-18 09:58:42"
      },
      {
        "time_stamp": "2018-10-18 10:03:46"
      },
      {
        "time_stamp": "2018-10-18 11:25:36"
      },
      {
        "time_stamp": "2018-10-18 11:26:53"
      },
      {
        "time_stamp": "2018-10-18 11:30:01"
      },
      {
        "time_stamp": "2018-10-18 11:30:34"
      },
      {
        "time_stamp": "2018-10-18 11:33:05"
      },
      {
        "time_stamp": "2018-10-18 11:37:24"
      },
      {
        "time_stamp": "2018-10-18 13:05:57"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 07:44:35",
    "text": "Can you send me an example of a page that this isn't working for?"
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2018-10-18 09:58:42",
    "text": "I'm just trying out to get the json data via browser and not actually created anything using that until I can see it working.\n\nSo for example like this:\n<https://api.hubapi.com/contentsearch/v2/search?portalId=2660731&amp;term=test&amp;tableId=850606>\n\nAnd just by removing the tableId parameter everything works as expected:\n<https://api.hubapi.com/contentsearch/v2/search?portalId=2660731&amp;term=test>"
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2018-10-18 10:03:46",
    "text": "And basically I'll create an input for user to type in search term get that via submit or keypress fetch that json data using the search term and show the results to user. And this indeed works like a dream on other projects without using hubdb as a parameter"
  },
  null,
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 11:25:36",
    "text": "Content search searches pages generated from rows, not rows themselves"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 11:26:53",
    "text": "Row search will eventually be implemented but isn't supported (you can still do icontains filters on columns to get a psuedo text search)"
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2018-10-18 11:30:01",
    "text": "Aaaa I see so if you want to use the site search endpoint and use the hubdb parameter with it you should be using a the database for dynamic pages out of that table?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 11:30:34",
    "text": "Yep, it searches dynamic pages generated from that table"
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2018-10-18 11:33:05",
    "text": "Ok ok gotcha. Well that figures that then. Thank you for your help. I guess I'll just dynamically fetch rows with a query contains using the input for the search term."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 11:37:24",
    "text": "Yea it would probably good to split by space and do a continual search with each term until you hit the desired amount of results"
  },
  {
    "poster": {
      "poster_name": "wfigueiredo",
      "poster_handle": "wfigueiredo"
    },
    "time_stamp": "2018-10-18 12:07:24",
    "text": "Does anyone know a way to set a variable of a contact prop and use it in a filter query in HubDB? Getting a message the no results were found for the table. If I set a value instead of using the variable it works but I want to display information based on contact.\n\n```\n{% set table_id = XXXXXXX %}\n{% set email = contact.email %}\n{% set query = \"&amp;email__contains=email\" %}\n{% for row in hubdb_table_rows(table_id, query) %}\n    &lt;p&gt;Name: {{ row.name }}&lt;/p&gt;\n{% endfor %}\n```"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-18 12:15:11",
    "text": "Does it work if you wrap email like `{{ email }}`?"
  },
  {
    "poster": {
      "poster_name": "wfigueiredo",
      "poster_handle": "wfigueiredo"
    },
    "time_stamp": "2018-10-18 12:15:43",
    "text": "yes if i print {{ email }} it prints the contacts email. it just isn’t being recognized in the filter query for some reason"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-10-18 12:16:04",
    "text": "I mean if you wrap it in your filter query"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-18 12:16:44",
    "text": "that or change `{%set query = \"&amp;email__contains=\"+email %}`"
  },
  {
    "poster": {
      "poster_name": "wfigueiredo",
      "poster_handle": "wfigueiredo"
    },
    "time_stamp": "2018-10-18 12:17:38",
    "text": "changing to ```{%set query = \"&amp;email__contains=\"+email %}``` worked. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-18 12:18:26",
    "text": "just as an FYI you’ll want to have an if statement incase an email isn’t set"
  },
  {
    "poster": {
      "poster_name": "wfigueiredo",
      "poster_handle": "wfigueiredo"
    },
    "time_stamp": "2018-10-18 12:18:40",
    "text": "^ Right"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-10-18 12:19:22",
    "text": "oh and just because it appears you are storing emails in hubDB - be aware hubDB’s are publicly accessible. there’s no security preventing someone from reading the data in there"
  },
  {
    "poster": {
      "poster_name": "wfigueiredo",
      "poster_handle": "wfigueiredo"
    },
    "time_stamp": "2018-10-18 12:19:51",
    "text": "thanks for the heads up. i’m just using email right now as an example. this will likely change"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 12:21:40",
    "text": "There is a new table option to remove public API access to your table"
  },
  {
    "poster": {
      "poster_name": "wfigueiredo",
      "poster_handle": "wfigueiredo"
    },
    "time_stamp": "2018-10-18 12:24:06",
    "text": "<@U6GNQ7JBU> just saw that in settings. thanks!"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-18 12:35:52",
    "text": "I’m having trouble with URLs from my HudDB table being created and crawled by google that don’t exist. The table is marked to “Use for dynamic pages”, but has a mix of hard coded urls and dynamically created links. I don’t want all of the rows to be created as dynamic links. In my custom module, the link to use for a row is determined with this code -  {% set row_url = row.url or \"/resource/\" ~ row.hs_path %}. Is this not allowed - having a mix of both types of URLs in a table marked for dynamic pages?\n\nIt’s working the way it’s supposed to in the custom module and on the page, but google is not happy. <@U6GNQ7JBU> can you help? Or has anyone done anything like this before?",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-10-18 13:07:58"
      },
      {
        "time_stamp": "2018-10-18 13:08:20"
      },
      {
        "time_stamp": "2018-10-18 13:12:10"
      },
      {
        "time_stamp": "2018-10-18 13:13:49"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Joni L.",
      "poster_handle": "joni.laukkonen"
    },
    "time_stamp": "2018-10-18 13:05:57",
    "text": "Yea it turned out that I got a pretty simple table so I'm just hitting the get table rows endpoint with icontains and encodeURI the search term that I use for pages and blogs via site search endpoint. Works like a charm for this use case. Client wanted two lists of results side by side one with blogs and pages and one from hubdb so this is perfect. Thanks for your guidance on this Matt! :wink:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 13:07:58",
    "text": "As in you want some rows of the table to be available for dynamic pages but some rows not to be?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 13:08:20",
    "text": "If you remove the Page Path from the row, it will no longer show up in your sitemap.xml"
  },
  {
    "poster": {
      "poster_name": "Lara Eckerman",
      "poster_handle": "lara.eckerman"
    },
    "time_stamp": "2018-10-18 13:12:10",
    "text": "I have two columns in the table... one for a already created landing page url and one that creates new the dynamic page urls. The hs_path column is empty for the rows that have the hard coded urls."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-10-18 13:13:49",
    "text": "Can you send me the table so I can understand what you are trying to do?"
  },
  null,
  null,
  null,
  null,
  null,
  null
]
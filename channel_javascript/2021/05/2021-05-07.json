[
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-05-07 05:00:25",
    "edited": {
      "time_stamp": "2021-05-07 05:23:40"
    },
    "text": "<@UDHT6N5SM> Sorry, there is no JS access by default. But the theme file is an JSON object, you can request it:\n```&lt;script&gt;\n  window.themeURL = \"{{ get_asset_url('../../fields.json') }}\";\n  (function() {\n    var httpRequest;\n    function makeRequest() {\n      httpRequest = new XMLHttpRequest();\n      httpRequest.onreadystatechange = setContents;\n      httpRequest.open('GET', window.themeURL);\n      httpRequest.send();\n    }\n    function setContents() {\n      if (httpRequest.readyState === XMLHttpRequest.DONE) {\n        if (httpRequest.status === 200) {\n          console.log( JSON.parse(httpRequest.responseText) );\n        } else {\n          console.warn('There was a problem with the request.');\n        }\n      }\n    }\n    makeRequest();\n  })();\n&lt;/script&gt;```\nOR the short way:\n`&lt;script&gt;`\n      `var myTheme = {{ theme_meta.fields|tojson }};`\n      `console.log('theme_meta: ', myTheme);`\n`&lt;/script&gt;`"
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-05-07 05:13:45",
    "edited": {
      "time_stamp": "2021-05-07 05:14:03"
    },
    "text": "<@UDHT6N5SM> Did you checked the developer information? Its when you go to a live-page and open in the right top corner the tools button. With a json viewer browser add on you can work with it very well. it shows you the rendering object used by HubL. You can output all the information there with Javascript. Use the HubL |tojson filter for it."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-05-07 05:16:31",
    "text": "Thanks <@UK9BKNBD5> that's really helpful."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-05-07 05:27:03",
    "text": "not sure if I should have realized this earlier but apparently Hubl works inside of JS..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-05-07 05:27:20",
    "text": "in my separate JS file..."
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-05-07 05:27:49",
    "text": "`window.themeURL = \"{{ get_asset_url('../../fields.json') }}\";`"
  },
  {
    "poster": {
      "poster_name": "Thierry-Luc Denichaud",
      "poster_handle": "thierry.denichaud"
    },
    "time_stamp": "2021-05-07 08:45:55",
    "text": "Im having the same issue Pascal - did you find a solution yet?"
  },
  {
    "poster": {
      "poster_name": "Thierry-Luc Denichaud",
      "poster_handle": "thierry.denichaud"
    },
    "time_stamp": "2021-05-07 08:49:41",
    "text": "Hey HubSpot team\nIm building a custom module\n\nWhy wont onclick functions on elements emit to the JS example:\nHTML section\n```&lt;div onclick=\"myfunction( {{someCustomFieldTextType}} )\"&gt;```\nJS section\n```function myFunction(someCustomFieldTextType) {\n   console.log(someCustomFieldTextType)\n}```\n",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-05-07 11:30:54"
      },
      {
        "time_stamp": "2021-05-11 13:31:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Reg Desgroseilliers",
      "poster_handle": "reg"
    },
    "time_stamp": "2021-05-07 11:30:54",
    "edited": {
      "time_stamp": "2021-05-07 11:31:22"
    },
    "text": "There is an issue with the load order. Put the functions into &lt;script&gt; tags in the HTML+HUBL body and wrap that with a require_js statement to get it to work. "
  }
]
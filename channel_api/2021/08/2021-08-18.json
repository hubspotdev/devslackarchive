[
  {
    "text": "Hey everyone! Quick PHP related question. I am using the Deals API to update properties in a library that I am developing. I have an array of properties that sometimes may have a duplicate `name` key every so often, much like the picture below. Instead, if there is a duplicate of a `name`, i want the value to be added together, if that makes sense. So the expected output that I want is something like `hybrid_sales_august_2021` to have a value of `10.00`, instead of it showing up twice with `5.00` each. Any help would be appreciated, thanks!",
    "time_stamp": "2021-08-18 02:23:27",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-08-18 03:18:19"
      },
      {
        "time_stamp": "2021-08-18 10:44:50"
      },
      {
        "time_stamp": "2021-08-18 11:07:27"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Robert Dewitt",
      "poster_handle": "robert965"
    },
    "time_stamp": "2021-08-18 02:26:26",
    "text": "I am not sure about Client IDs and secrets, but I know you can cycle API keys by going to Settings -&gt; Integrations -&gt; API Key. There is a button named `Actions` then select Rotate Keys"
  },
  {
    "poster": {
      "poster_name": "Vishal Kumar",
      "poster_handle": "vishalkumar"
    },
    "time_stamp": "2021-08-18 03:18:19",
    "edited": {
      "time_stamp": "2021-08-18 03:20:46"
    },
    "text": "Hey <@U02ADHBQDEG>,\n\nThere could be some code to prepare a new array handling the same, but how do you want it to be implemented exactly?"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-08-18 09:22:45",
    "text": "Is it possible access the values from fields.json on any page via JS?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-08-18 09:28:42"
      },
      {
        "time_stamp": "2021-08-18 10:50:23"
      },
      {
        "time_stamp": "2021-08-18 11:13:43"
      },
      {
        "time_stamp": "2021-08-18 11:13:57"
      },
      {
        "time_stamp": "2021-08-18 11:14:01"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-08-18 09:28:42",
    "edited": {
      "time_stamp": "2021-08-18 09:30:14"
    },
    "text": "yes - i assume you could do something like\n```&lt;script type=\"application/json\"&gt;\n{{ module | tojson }}\n&lt;/script&gt;```"
  },
  {
    "poster": {
      "poster_name": "Nelson Steven Sanabio Maldonado",
      "poster_handle": "nelson.sanabio"
    },
    "time_stamp": "2021-08-18 09:55:35",
    "text": "Hello everyone,\n\nCould someone help me, please.\n\n<https://community.HubSpot.com/t5/APIs-Integrations/How-can-I-associate-a-task-to-a-custom-object/m-p/481241#M46089|HubSpot Community>"
  },
  {
    "text": "Nodejs Developer here,\nI'm currently building an endpoint to upload images to HubSpot via the file upload api. I am however getting the image data from a post request from the user and forwarding the file to HubSpot. Currently it gives me a `415 Unsupported Media Type` error.\n\nI am using Axios for the request to HubSpot.",
    "time_stamp": "2021-08-18 10:19:16",
    "reply_count": 3,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-08-18 10:35:47"
      },
      {
        "time_stamp": "2021-08-18 10:52:44"
      },
      {
        "time_stamp": "2021-08-25 00:51:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-08-18 10:35:47",
    "text": "you canâ€™t use x-form-urlencoded for file uploads"
  },
  {
    "poster": {
      "poster_name": "Robert Dewitt",
      "poster_handle": "robert965"
    },
    "time_stamp": "2021-08-18 10:44:50",
    "edited": {
      "time_stamp": "2021-08-18 10:46:53"
    },
    "text": "<@U01PJMZ5KPH> I actually got what I wanted to work after I sent this! Basically i wanted the output as\n```hybrid_sales_august_2021 =&gt; 10.00,\nvirtual_sales_august_2021 =&gt; 5.00\n...```\nMy solution was that I needed to do another foreach loop:\n```foreach ($properties as $v) {\n\tif (!isset($result[$v[\"name\"]])) {\n\t\t$result[$v[\"name\"]][\"name\"] = $v[\"name\"];\n\t\t$result[$v[\"name\"]][\"value\"] = $v[\"value\"];\n\t} else {\n\t\t$result[$v[\"name\"]][\"value\"] += $v[\"value\"];\n\t}\n}\n$result = array_values($result);```"
  },
  {
    "poster": {
      "poster_name": "Andrey Kondratyuk",
      "poster_handle": "andrey"
    },
    "time_stamp": "2021-08-18 10:50:23",
    "text": "<@UQERM7BLY> I was hoping to use the json as a \"store\" in Svelte"
  },
  {
    "poster": {
      "poster_name": "Patrick Rigor",
      "poster_handle": "the.patrick.rigor"
    },
    "time_stamp": "2021-08-18 10:52:44",
    "text": "<@UQERM7BLY> I tried using multipart/form-data but get a `400` error. Also if I use application/json it results in the `415` error."
  },
  {
    "poster": {
      "poster_name": "Vishal Kumar",
      "poster_handle": "vishalkumar"
    },
    "time_stamp": "2021-08-18 11:07:27",
    "text": "That's awesome....this is exactly what I was talking about."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-08-18 11:13:43",
    "text": "makes sense!"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-08-18 11:13:57",
    "text": "you can populate the store onMount"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-08-18 11:14:01",
    "text": "or pass them as props"
  },
  {
    "poster": {
      "poster_name": "Robert Dewitt",
      "poster_handle": "robert965"
    },
    "time_stamp": "2021-08-18 13:36:00",
    "edited": {
      "time_stamp": "2021-08-18 13:36:10"
    },
    "text": "Another API question, this time for properties. I have some deal properties that are currency numbers that need to update when a sale is made in my system. I want to make an API call that will take the previous total of the property and add my new values to get an updated total, rather than overwriting the property. Does anyone have a good solution for this?\n\nIf Sales August 2021 had a previous value of 5, and I add 5 to it via the API when I make another sale ... then the expected output in my deal property would be:\n```Sales August 2021\n10.00```",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2021-08-18 14:00:05"
      },
      {
        "time_stamp": "2021-08-18 14:01:36"
      },
      {
        "time_stamp": "2021-08-18 14:31:37"
      },
      {
        "time_stamp": "2021-08-25 00:52:07"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Vishal Kumar",
      "poster_handle": "vishalkumar"
    },
    "time_stamp": "2021-08-18 14:00:05",
    "text": "Hey <@U02ADHBQDEG>\n\nIf you saved the old currency value of a deal at your end, add the value of the new &amp; old price(currency) and send the final value in HS via API.\n\nIn another case, you need to fetch a deal from HS first, and if it exists, then get the old value from Deal response....add with new value and update the deal in HS.\n<https://legacydocs.HubSpot.com/docs/methods/deals/get_deal>"
  },
  {
    "poster": {
      "poster_name": "Robert Dewitt",
      "poster_handle": "robert965"
    },
    "time_stamp": "2021-08-18 14:01:36",
    "text": "Thanks! Yeah that's what I was thinking. Currently working on a solution that will get previous totals from a `getDeal()` call."
  },
  {
    "poster": {
      "poster_name": "Vishal Kumar",
      "poster_handle": "vishalkumar"
    },
    "time_stamp": "2021-08-18 14:31:37",
    "text": "Glad to connect. Cheers :-)"
  }
]
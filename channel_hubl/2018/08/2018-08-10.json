[
  null,
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-08-10 07:30:29",
    "text": "Is this more efficient than {% if x in list %} ??"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 07:33:04",
    "text": "No you would only use this if you have to use `selectattr`"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-08-10 09:36:51",
    "text": "i have some NUMBER columns in a hubDB table that I need to output to 2 decimal places, however, trailing 0s are getting stripped out. I thought the `|float` filter would be able to get it but no luck.\nany advice?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:37:28",
    "text": "I ran into this recently and I just switched them to text columns :confused:"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:38:03",
    "text": "Some kind of |numberformat filter might be nice"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-08-10 09:39:10",
    "text": "agreed.\ndid you have to go through the api to switch the column typing? Would really prefer not to have to re-input values and recreate 40+ columns"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:43:15",
    "text": "Ah, it was a freshly-created table for me, so I just deleted the original and added a new one"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 09:43:36",
    "text": "I don't think there's a way to change the column type from the UI, maybe you could do it from the API"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-08-10 09:47:22",
    "text": "yeah, looks like the UI lacks that.\nwell, least the API looks like it could be possible: `<https://developers.HubSpot.com/docs/methods/hubdb/v2/update_table>` so might go that method.\nnow to try and not wipe it all out lol"
  },
  {
    "poster": {
      "poster_name": "ΚΣΣGΛΠ ΒΓΘΨΠ",
      "poster_handle": "keegan"
    },
    "time_stamp": "2018-08-10 10:21:55",
    "text": "I can grab the url but that won’t actually inline the SVG (by inlining, I mean render the SVG as part of the HTML rather than linking to it in image form). I’m ajaxing it currently, but that solution is messier than I’d like."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-10 11:36:06",
    "text": "<@U3A4KEWK1>I think it was you that mentioned this before but if I am outputting rows from a HubDB, iis the the batch command I use to wrap them? For example, i want to wrap every set of 4 results in a `div`"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 11:36:38",
    "text": "Yeah, I usually use batch for that"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-10 11:37:12",
    "edited": {
      "time_stamp": "2018-08-10 11:37:23"
    },
    "text": "Do you have a quick example, i know you posted one way back and i though i starred it but i didnt :disappointed:"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 11:37:23",
    "text": "```{% for row in results|batch(4) %}\n  &lt;div class=\"row\"&gt;\n    {% for item in row %}\n      {% if item %}\n        {{ item }}\n      {% endif %}\n    {% endfor %}\n  &lt;/div&gt;\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 11:37:32",
    "text": "Something like that"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-10 11:37:45",
    "text": "awesome thank you"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 14:17:08",
    "text": "Anyone know how to add escaped HubL text to an HTML module?  I used to use `{% raw %}` but can't do that anymore since no HubL is allowed in HTML modules?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:26:10",
    "text": "`{{ '{{ some_hubl }}' }}`?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:27:15",
    "text": "Oooooor `{&lt;!-- --&gt;% some_hubl %&lt;!-- --&gt;}`"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:27:18",
    "text": "Maybe"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-10 14:30:17",
    "text": "is there way to do a ternary operator with ifs in the HubL? like `if ? \"yes\" : \"no\"`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-10 14:35:19",
    "edited": {
      "time_stamp": "2018-08-10 14:35:43"
    },
    "text": "`{% set test = \"true\" if true else \"false\" %}`"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-08-10 14:38:47",
    "text": "sigh... so <@U3A4KEWK1>, i finally got the hubdb API to update the column typing to what I needed, but the problem is that it wipes out the data of that column, and i need to declare every column in the table with their current settings if I don't want them to be deleted otherwise...\nbit odd that specifying a single column meant all the rest would be deleted.\nglad i decided to do a test database instead of working the original one lol"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-10 14:39:05",
    "text": ":anguished:"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-08-10 14:41:56",
    "edited": {
      "time_stamp": "2018-08-10 14:42:08"
    },
    "text": "beginning to think the easier choice is rebuild the whole hubdb table with the proper column typing and just reimport the current data"
  }
]
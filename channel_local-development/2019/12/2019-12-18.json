[
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 05:19:44",
    "text": "Hi all! I'm trying to set up the local dev environment for the firs time but I'm having some issues. I'm authenticating true apikey and I've fill the needed params in the authenticantion file as written in the docs. Though when I run `\n```npx hs fetch --portal=DEV &lt;folder-name&gt;```\nI don't get any error but it just doesn't download anything."
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 05:19:52",
    "text": "Am I missing something?"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-18 05:23:11",
    "text": "Just check the path you’ve provided in folder-name"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-18 05:23:25",
    "text": "i usually specify a dest too"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 05:44:38",
    "text": "ok, i'll try to specify a dest as well"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 05:46:14",
    "text": "<@UQERM7BLY> this is the only output I get `npx: installed 60 in 4.24s`"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 05:46:21",
    "edited": {
      "time_stamp": "2019-12-18 05:46:25"
    },
    "text": "no error but nothing happens"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 05:47:11",
    "text": "I installed the cms-cli with yarn but I don't think that has any impact on this command right?"
  },
  {
    "poster": {
      "poster_name": "Karman Li",
      "poster_handle": "karman.li"
    },
    "time_stamp": "2019-12-18 06:17:26",
    "text": "@*Tommaso Valentini,* did u install it globally or in the directory you are working? I had the same problem too, but when I installed it in the current folder, it worked"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 06:20:12",
    "text": "I installed it globally"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 06:20:23",
    "text": "let me try to do it locally as well"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 06:23:12",
    "text": "The portalId is the number in the url that identifies my instamce of HubSpot right?"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 06:23:22",
    "text": "<@UARR63DSB>"
  },
  {
    "poster": {
      "poster_name": "Karman Li",
      "poster_handle": "karman.li"
    },
    "time_stamp": "2019-12-18 06:23:44",
    "text": "yes"
  },
  {
    "poster": {
      "poster_name": "Tommaso Valentini",
      "poster_handle": "tommaso.valentini16"
    },
    "time_stamp": "2019-12-18 06:24:33",
    "text": "thanks! Now it worked, the first time gave me a permission error but now is working!"
  },
  {
    "poster": {
      "poster_name": "Karman Li",
      "poster_handle": "karman.li"
    },
    "time_stamp": "2019-12-18 06:24:41",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-12-18 10:48:12",
    "text": "<https://HubSpotdev.slack.com/archives/CEQQ9NFK2/p1576691262004500>",
    "reply_count": 8,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-12-18 10:54:43"
      },
      {
        "time_stamp": "2019-12-18 10:54:54"
      },
      {
        "time_stamp": "2019-12-18 10:54:59"
      },
      {
        "time_stamp": "2019-12-18 10:55:16"
      },
      {
        "time_stamp": "2019-12-18 11:00:01"
      },
      {
        "time_stamp": "2019-12-18 11:00:56"
      },
      {
        "time_stamp": "2019-12-18 12:59:34"
      },
      {
        "time_stamp": "2019-12-18 13:02:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 10:53:51",
    "text": "oh hello"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 10:54:43",
    "text": "<@U6W3H6YN8> --permissions issue on that form"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 10:54:54",
    "text": "unless you didnt want me to fill it out :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-12-18 10:54:59",
    "text": "<@U2H3TT8F2>"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 10:55:16",
    "text": "makes sense.  aj doesnt like me much"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2019-12-18 11:00:01",
    "text": "Sorry <@UD53A9UUR> try now"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-12-18 11:00:56",
    "edited": {
      "time_stamp": "2019-12-18 11:01:05"
    },
    "text": "I opened it to all but Dennis ;)"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 11:10:06",
    "text": "how do people deal with a multi dev workflow in this scenario\neach dev has own sandbox portal\nthere is a staging portal\nthere is the production portal\nin the header, we are calling for a menu by id.  that id is unique to each portal.\nright now, we have a partial that we import that has a variable with our unique ids in it and have git ignore that file so it isnt updated.  anyone else working on this?",
    "reply_count": 4,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-12-18 11:35:52"
      },
      {
        "time_stamp": "2019-12-18 11:38:06"
      },
      {
        "time_stamp": "2019-12-18 11:45:14"
      },
      {
        "time_stamp": "2019-12-18 12:02:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 11:10:17",
    "text": "so in the partial: `{# {% set menuID =  &lt;your id here&gt; %} #}`"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 11:10:37",
    "text": "and in the header `{% menu \"mainNav\" id= \"{{ menuID }}\"`"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 11:11:08",
    "text": "hope that wasnt rambling and made sense"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-12-18 11:35:52",
    "text": "I’d suggest that you create a module for the menu and leave the default unset so that each portal can set it"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-18 11:38:06",
    "edited": {
      "time_stamp": "2019-12-18 11:40:36"
    },
    "text": "That’s how I do it, I think you can default to the “default” menu with menu() (not 100% though) I simply setup a custom module with a field in fields.json:\n\n```[\n  {\n    \"name\": \"primary_menu_field\",\n    \"label\": \"Primary Menu field\",\n    \"required\": false,\n    \"locked\": false,\n    \"type\": \"menu\",\n    \"default\": null\n  }\n]```"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2019-12-18 11:45:14",
    "text": "If you have a local build pipeline, then you could potentially use something like string-replace-loader with a list of ids to replace in your fields.json\n```[\n  {\n    \"name\": \"primary_menu_field\",\n    \"label\": \"Primary Menu field\",\n    \"required\": false,\n    \"locked\": false,\n    \"type\": \"menu\",\n    \"default\": __HubSpot_MAIN_MENU_ID__\n  }\n]```\n"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2019-12-18 12:02:39",
    "text": "thanks all!"
  },
  {
    "poster": {
      "poster_name": "Tim Loden",
      "poster_handle": "tim.loden"
    },
    "time_stamp": "2019-12-18 12:09:14",
    "text": "Does anyone know if we can set a custom module icon via meta.json for custom modules?",
    "reply_count": 6,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-12-18 12:26:36"
      },
      {
        "time_stamp": "2019-12-18 12:28:13"
      },
      {
        "time_stamp": "2019-12-18 12:33:05"
      },
      {
        "time_stamp": "2019-12-18 14:11:54"
      },
      {
        "time_stamp": "2019-12-18 14:13:51"
      },
      {
        "time_stamp": "2019-12-18 14:19:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-12-18 12:26:36",
    "text": "Yes I believe you should be able to do that by adding `\"icon\": \"image_url\"`"
  },
  {
    "poster": {
      "poster_name": "Tim Loden",
      "poster_handle": "tim.loden"
    },
    "time_stamp": "2019-12-18 12:28:13",
    "text": "Awesome, thanks <@U26AKMZ19>"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-12-18 12:33:05",
    "edited": {
      "time_stamp": "2019-12-18 12:33:09"
    },
    "text": "No problem :thumbsup: there is an example over in boilerplate here (<https://github.com/HubSpot/cms-theme-boilerplate/blob/master/src/modules/Card%20section.module/meta.json#L10>) if that is helpful to reference."
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2019-12-18 12:59:34",
    "text": "Question: the beta signup is only to have the switch correct?"
  },
  {
    "poster": {
      "poster_name": "Maia Singletary",
      "poster_handle": "msingletary"
    },
    "time_stamp": "2019-12-18 13:02:06",
    "text": "I watched the gif more closely, answers all my questions…. this is awesome :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Tim Loden",
      "poster_handle": "tim.loden"
    },
    "time_stamp": "2019-12-18 14:11:54",
    "edited": {
      "time_stamp": "2019-12-18 14:12:07"
    },
    "text": "That is, I should of checked there"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-12-18 14:13:51",
    "text": "No worries! I'm going to work with the rest of the team to get the icon attribute added to our local development doc on <http://designers.HubSpot.com|designers.HubSpot.com>."
  },
  {
    "poster": {
      "poster_name": "Tim Loden",
      "poster_handle": "tim.loden"
    },
    "time_stamp": "2019-12-18 14:19:32",
    "text": "looks like someone already did! <https://designers.HubSpot.com/docs/tools/local-module-development>"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 15:51:54",
    "text": "Hi, How can I run HubSpot project locally?"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 15:52:11",
    "text": "Do I need local-hubl-server?"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-12-18 15:55:44",
    "text": "are you hoping to work offline or just looking to use your editor and tooling of choice?"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 15:56:16",
    "text": "I would like to develop everything locally/offline and only upload when it is ready"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-12-18 16:00:54",
    "text": "so the short answer is that the HubSpot CMS is Software-as-a-Service software so to be able to access its full capabilities, we recommend using a flow that leverages our CLI together with a free developer sandbox to work on your code before pushing it to a full customer portal. the benefit of this flow is that you can really exercise key parts of our system like creating modules and using them in the page editor to get a feel for what authoring content will feel like. to give that flow a spin, take a look at <https://designers.HubSpot.com/docs/tools/local-development> and be sure to share your feedback. not sure how long you have been exploring HubSpot, but we also have <https://github.com/HubSpot/cms-theme-boilerplate> to help folks get started using a new approach that we think is better for developers and marketers.",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-12-18 16:02:17"
      },
      {
        "time_stamp": "2019-12-18 16:02:21"
      },
      {
        "time_stamp": "2019-12-18 16:03:33"
      },
      {
        "time_stamp": "2019-12-18 16:03:45"
      },
      {
        "time_stamp": "2019-12-18 16:03:50"
      },
      {
        "time_stamp": "2019-12-18 16:04:04"
      },
      {
        "time_stamp": "2019-12-18 16:04:28"
      },
      {
        "time_stamp": "2019-12-18 16:05:08"
      },
      {
        "time_stamp": "2019-12-18 16:05:20"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 16:02:17",
    "text": "you mean I will have to \"watch\" my code and test things in the actual portal?"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 16:02:21",
    "text": "instead of testing it locall"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-12-18 16:03:33",
    "text": "yeah, that is correct. we don’t provide a way to run the entire HubSpot CMS locally."
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 16:03:45",
    "text": "ok got it"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 16:03:50",
    "text": "this was helpful"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-12-18 16:04:04",
    "text": "it is a bit different than other options out there, but the benefits of our approach is that you don’t have to worry about servers, CDNs, security, etc…"
  },
  {
    "poster": {
      "poster_name": "Gregory Cornelius",
      "poster_handle": "gcornelius"
    },
    "time_stamp": "2019-12-18 16:04:28",
    "text": "for smaller changes, you can also use the CLI to push drafted changes directly to the customer portal"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 16:05:08",
    "text": "sounds good"
  },
  {
    "poster": {
      "poster_name": "Umair Khokhar",
      "poster_handle": "umair660"
    },
    "time_stamp": "2019-12-18 16:05:20",
    "text": "thank you for the prompt reply"
  }
]
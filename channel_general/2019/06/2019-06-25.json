[
  {
    "poster": {
      "poster_name": "Furqan Asghar",
      "poster_handle": "mfa213"
    },
    "time_stamp": "2019-06-25 01:22:58",
    "edited": {
      "time_stamp": "2019-06-25 01:23:00"
    },
    "text": "i'm looking for a solution to validate email addresses at the \"time of capture\" for our conversion forms? Is there any service or solution out there that integrates well with HubSpot forms ?",
    "reply_count": 6,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-06-25 01:51:09"
      },
      {
        "time_stamp": "2019-06-25 01:56:00"
      },
      {
        "time_stamp": "2019-06-26 01:50:08"
      },
      {
        "time_stamp": "2019-06-26 01:50:32"
      },
      {
        "time_stamp": "2019-06-26 01:52:54"
      },
      {
        "time_stamp": "2019-06-26 15:47:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Shamash Athoraya",
      "poster_handle": "shamash.athoraya"
    },
    "time_stamp": "2019-06-25 01:51:09",
    "text": "I believe email addresses in forms are validated by HubSpot"
  },
  {
    "text": "HubSpot email validation",
    "time_stamp": "2019-06-25 01:56:00"
  },
  {
    "poster": {
      "poster_name": "Amjad Hussain Ghazi",
      "poster_handle": "ghazi"
    },
    "time_stamp": "2019-06-25 03:52:38",
    "edited": {
      "time_stamp": "2019-06-25 03:53:31"
    },
    "text": "So I am trying to get the chatflows working for my SPA. There seems to be no API available for chatbot though. I also tried the refresh API window.HubSpotConversations.widget.refresh() but it doesn't seem to pick up the new chat flow. The \"When\" configuration has the \"is\" URL with or \"parameter\". The url doesn't change really for us, its just the parameter. The configuration works if I refresh the given url, but I want it to work without having to refresh the url since its an SPA. Any pointers?"
  },
  {
    "poster": {
      "poster_name": "Amjad Hussain Ghazi",
      "poster_handle": "ghazi"
    },
    "time_stamp": "2019-06-25 04:11:25",
    "edited": {
      "time_stamp": "2019-06-25 04:15:40"
    },
    "text": "never mind.. I managed to make it work... The idea is to edit the window history and then call the refresh API"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 06:49:03",
    "text": "Anyone use bem? Do you use a css framework? If so which one do you like and why?",
    "reply_count": 23,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-06-25 06:53:24"
      },
      {
        "time_stamp": "2019-06-25 06:54:23"
      },
      {
        "time_stamp": "2019-06-25 06:55:58"
      },
      {
        "time_stamp": "2019-06-25 06:56:43"
      },
      {
        "time_stamp": "2019-06-25 06:58:11"
      },
      {
        "time_stamp": "2019-06-25 07:01:53"
      },
      {
        "time_stamp": "2019-06-25 07:02:21"
      },
      {
        "time_stamp": "2019-06-25 07:05:46"
      },
      {
        "time_stamp": "2019-06-25 07:06:23"
      },
      {
        "time_stamp": "2019-06-25 07:06:43"
      },
      {
        "time_stamp": "2019-06-25 07:08:43"
      },
      {
        "time_stamp": "2019-06-25 07:10:33"
      },
      {
        "time_stamp": "2019-06-25 10:28:32"
      },
      {
        "time_stamp": "2019-06-25 10:32:45"
      },
      {
        "time_stamp": "2019-06-25 10:45:37"
      },
      {
        "time_stamp": "2019-06-25 10:46:17"
      },
      {
        "time_stamp": "2019-06-25 10:48:36"
      },
      {
        "time_stamp": "2019-06-25 10:48:43"
      },
      {
        "time_stamp": "2019-06-25 10:49:00"
      },
      {
        "time_stamp": "2019-06-25 10:49:36"
      },
      {
        "time_stamp": "2019-06-25 10:50:07"
      },
      {
        "time_stamp": "2019-06-25 10:53:43"
      },
      {
        "time_stamp": "2019-06-25 10:53:46"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 06:53:24",
    "text": "I use BEM, used to try to follow <https://css-tricks.com/combining-the-powers-of-sem-and-bio-for-improving-css/>\n\nBut there were too many rules for team members to follow so it fell apart quickly."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 06:54:23",
    "text": "naming conventions are difficult the more team members you have"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 06:55:58",
    "text": "regarding css framework. we have one we use internally that I built for HubSpot dev. off-HubSpot we just pick whatever tool fits the job best, often that means we’ll start from near scratch"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 06:56:43",
    "text": "gotcha -- have a client that requests bem and the css framework i've been playing with isn't really bem -- not trying to recreate the wheel here"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 06:58:11",
    "text": "ahh. I would honestly pose the question to them - I am using ____ Framework, if I were to spend the x hours to convert the whole thing to BEM(which would have no effect on the user experience) you would get the BEM style but lose all usefulness of the framework’s documentation."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 07:01:53",
    "text": "like if I'm using helper functions -- like p2 or py3 for padding 20px all around or padding top 30px or whatnot --"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-06-25 07:01:55",
    "edited": {
      "time_stamp": "2019-06-25 07:02:10"
    },
    "text": "Hi guys, is there a way to output a specific image size with HubSpot? IE {{ content.post_list_summary_featured_image }} but a thumbnail or medium version ??",
    "reply_count": 16,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-06-25 07:03:16"
      },
      {
        "time_stamp": "2019-06-25 07:03:39"
      },
      {
        "time_stamp": "2019-06-25 07:03:42"
      },
      {
        "time_stamp": "2019-06-25 07:11:25"
      },
      {
        "time_stamp": "2019-06-25 07:13:30"
      },
      {
        "time_stamp": "2019-06-25 07:13:51"
      },
      {
        "time_stamp": "2019-06-25 07:13:56"
      },
      {
        "time_stamp": "2019-06-25 07:14:04"
      },
      {
        "time_stamp": "2019-06-25 07:14:42"
      },
      {
        "time_stamp": "2019-06-25 07:18:07"
      },
      {
        "time_stamp": "2019-06-25 07:18:20"
      },
      {
        "time_stamp": "2019-06-25 07:18:57"
      },
      {
        "time_stamp": "2019-06-25 07:26:56"
      },
      {
        "time_stamp": "2019-06-25 07:27:33"
      },
      {
        "time_stamp": "2019-06-25 07:27:46"
      },
      {
        "time_stamp": "2019-06-25 07:29:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 07:02:21",
    "text": "do they want me to convert that into bem? I wouldn't think so"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:03:16",
    "text": "Scott, I’m happy to blow your mind by telling you what you seek is `{{resize_image_url()}}`"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:03:39",
    "edited": {
      "time_stamp": "2019-06-25 07:03:46"
    },
    "text": "<https://designers.HubSpot.com/en/docs/hubl/hubl-supported-functions#resize-image-url>"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-06-25 07:03:42",
    "text": "mmmmmmm, this I like!!!!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:05:46",
    "edited": {
      "time_stamp": "2019-06-25 07:06:05"
    },
    "text": "I have seen where people did this\n```\n.--p2{padding:20px}\n```"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:06:23",
    "text": "I can’t say that’s a pattern that looks good to me but there’s nothing technically wrong with it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 07:06:43",
    "text": "lol"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:08:43",
    "edited": {
      "time_stamp": "2019-06-25 07:09:09"
    },
    "text": "somewhat related note I wonder if HubSpot engineers have a debug mode version of the design manager where all the goofy class names are changed to semantic (if you’ve never inspected the design manager, there are elements with class names like `.asEa_aas` I assume they’re doing some kinda compiling step, otherwise I have no idea what the characters could signify"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 07:10:33",
    "text": "yeah I believe that is some sort of minification to the max"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-06-25 07:11:25",
    "text": "<@U7SL518D6> Legend!"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-06-25 07:13:30",
    "text": "Can this be used on background images?"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:13:51",
    "text": "yep, it can be used anywhere."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:13:56",
    "text": "even in css files"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:14:04",
    "text": "(not in the css pane of CM’s though)"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:14:42",
    "text": "but for CM’s if you have a dynamic image anyways you’d want it in the html pane anyhow so you could make it so the user could set it. You can do that either with inline css or using a require_css"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-06-25 07:18:07",
    "edited": {
      "time_stamp": "2019-06-25 07:27:07"
    },
    "text": "So this should work??\n\nbackground: url(‘{{ resize_image_url(‘{{ content.post_list_summary_featured_image }}‘, 0, 0, 350) }}’);”"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:18:20",
    "text": "yup!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:18:57",
    "text": "what it does is replaces that hubL tag with the url of the image with the CDN sizing parameters that you specify in the HubL function’s parameters"
  },
  {
    "poster": {
      "poster_name": "Scott Brown",
      "poster_handle": "scott.brown"
    },
    "time_stamp": "2019-06-25 07:26:56",
    "text": "Doesn’t seem to be working for me"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:27:33",
    "text": "takes a little bit for the cache to clear on it + there’s a slight lag time from the first time the image is requested"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:27:46",
    "text": "it will kick in shortly though"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 07:29:16",
    "edited": {
      "time_stamp": "2019-06-25 07:29:29"
    },
    "text": "The first time the image gets requested it doesn’t always finish compressing the image by then so it serves the original instead, then once it finishes compressing it displays the resized image, and serves it from the cache"
  },
  {
    "poster": {
      "poster_name": "Nick Kretz",
      "poster_handle": "nick941"
    },
    "time_stamp": "2019-06-25 08:44:31",
    "text": "<@U7NGDL8TS> do you have an update on HubSpot looking into the form problem?"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2019-06-25 09:20:51",
    "text": "<https://blog.cloudflare.com/how-verizon-and-a-bgp-optimizer-knocked-large-parts-of-the-internet-offline-today/>"
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2019-06-25 10:28:32",
    "text": "<@U7SL518D6> what your seeing is probably styled component’s classes: <https://www.styled-components.com/>"
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2019-06-25 10:32:45",
    "text": "less about minification, more about scoping css / preventing bleed"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 10:45:37",
    "text": "ahh you guys are doing the whole css in js kinda deal"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 10:46:17",
    "text": "I mean what he showed there is inline styling in react components but I'm not sure how that is classing them out. My react understanding is pretty novice, so I may be wrong on that..."
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2019-06-25 10:48:36",
    "text": "it’s css in js but with react components, where you css outputted for a component can be based off of the props passed in"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 10:48:43",
    "edited": {
      "time_stamp": "2019-06-25 10:48:58"
    },
    "text": "What’s going on Nick is that basically they write all the styles in a javascript object tied to the react component basically and then this library reads that, generates a style tag, and creates class names trying to essentially prevent conflicts"
  },
  {
    "poster": {
      "poster_name": "Brian Doherty",
      "poster_handle": "bdoherty"
    },
    "time_stamp": "2019-06-25 10:49:00",
    "text": ":point_up:"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 10:49:36",
    "text": "I’m still personally on the fence with the whole css in js thing but I do get how useful it is for big crazy apps like the design manager"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2019-06-25 10:50:07",
    "text": "Gotcha, so it is doing that on the rendering, then"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 10:53:43",
    "text": "yea"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 10:53:46",
    "edited": {
      "time_stamp": "2019-06-25 10:54:31"
    },
    "text": "unless, the wizards over there might be using preact. which in that case may be able to server side render the style tags"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-06-25 11:51:27",
    "edited": {
      "time_stamp": "2019-06-25 11:51:32"
    },
    "text": "Hey, all. Looking for some ideas on how to implement an 'add to calendar' functionality in HubSpot for an events page. I'd prefer to steer away from having the client copy links from Apple/Google/Outlook and paste them into a module field. Hoping for something more dynamic like <https://www.addevent.com/products/add-to-calendar-button> where it pulls from HubDB, but there is a monthly cost associated with this tool. Is there an alternative? Perhaps tying into the links these services generate? Any ideas/example would be greatly appreciated!"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-25 11:52:21",
    "text": "<@UB690RZA7> <https://github.com/carlsednaoui/add-to-calendar-buttons>"
  },
  {
    "poster": {
      "poster_name": "Tony Strack",
      "poster_handle": "tstrack"
    },
    "time_stamp": "2019-06-25 11:53:11",
    "text": "nice! thanks <@U38EZFVFE>!"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-06-25 12:01:34",
    "text": "yep good luck"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2019-06-25 12:57:09",
    "text": "Has anyone had luck when using a FORM inside a CUSTOM MODULE to allow the the ability to select a workflow or Salesforce campaign like you’d get when using a single default form module in a template?\n\nI’ve attempted to add Hubl using this method, but having no luck.\n\n<https://designers.HubSpot.com/how-to-create-a-form-module-in-a-custom-module>",
    "reply_count": 19,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-06-25 12:58:47"
      },
      {
        "time_stamp": "2019-06-25 12:59:20"
      },
      {
        "time_stamp": "2019-06-25 12:59:47"
      },
      {
        "time_stamp": "2019-06-25 13:44:46"
      },
      {
        "time_stamp": "2019-06-25 13:44:53"
      },
      {
        "time_stamp": "2019-06-25 13:45:08"
      },
      {
        "time_stamp": "2019-06-25 13:46:04"
      },
      {
        "time_stamp": "2019-06-25 13:47:07"
      },
      {
        "time_stamp": "2019-06-25 14:04:42"
      },
      {
        "time_stamp": "2019-06-25 14:06:04"
      },
      {
        "time_stamp": "2019-06-25 14:17:06"
      },
      {
        "time_stamp": "2019-06-25 14:26:30"
      },
      {
        "time_stamp": "2019-06-25 14:26:46"
      },
      {
        "time_stamp": "2019-06-25 14:27:47"
      },
      {
        "time_stamp": "2019-06-25 14:28:53"
      },
      {
        "time_stamp": "2019-06-25 14:29:58"
      },
      {
        "time_stamp": "2019-06-25 15:06:48"
      },
      {
        "time_stamp": "2019-06-26 05:44:45"
      },
      {
        "time_stamp": "2019-06-26 10:28:33"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 12:58:47",
    "text": "It is currently not possible. I heard rumblings some HubSpot devs would look into it, but that was awhile ago."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2019-06-25 12:59:20",
    "text": "Thanks Jon.  Ugh… I don’t know why this wouldn’t be supported"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 12:59:47",
    "text": "I think it was more of a thing that simply was forgotten than intentionally left out."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2019-06-25 13:02:10",
    "text": "Just bringing this back to attention as it may inform some decisions today.\n\nThis poll is specifically aimed at people who would physically attend.\n\n<https://HubSpotdev.slack.com/archives/C22PU4LV8/p1561387387416200>\n\nDo not respond  to this post, click the link to go to the original and vote there. If you have a +1 please note it in the comments."
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-06-25 13:44:46",
    "edited": {
      "time_stamp": "2019-06-25 13:45:11"
    },
    "text": "I believe I was able to do this for a customer a little while back by adding in a Salesforce campaign field, adding in my own parameter to the form tag in the custom module, and plugging in that field value. Would look something like this (additional form parameters were referenced from here: <https://designers.HubSpot.com/docs/hubl/hubl-supported-tags#form>):"
  },
  {
    "text": "",
    "time_stamp": "2019-06-25 13:44:53"
  },
  {
    "text": "",
    "time_stamp": "2019-06-25 13:45:08"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-06-25 13:46:04",
    "text": "This was very much a workaround in this case and I probably wouldn't recommend doing that at scale but I _believe_ that would work if you gave that a try."
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-06-25 13:47:07",
    "text": "If you followed that article and are still having issues with it, send me a link and I'd be happy to take a look."
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2019-06-25 14:04:42",
    "text": "<@U26AKMZ19> Thanks for the link to this article. I’m going to give this a try and see if I can get it to work. I’ll report back in a moment."
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-06-25 14:06:04",
    "edited": {
      "time_stamp": "2019-06-25 14:06:07"
    },
    "text": "Perfect, yeah it is more or less what you were doing based on the instructions for this article (<https://designers.HubSpot.com/how-to-create-a-form-module-in-a-custom-module>) but that should work from my limited experience with doing it."
  },
  {
    "text": "Hey <@U26AKMZ19> How did you get this field to show up in the custom module? I’m able to add that line of Hubl to the form snippet but I don’t know how to get the drop down to appear for a customer to select the campaign via the CMS",
    "time_stamp": "2019-06-25 14:17:06"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-06-25 14:26:30",
    "text": "So you'd need to add a new field in your module. The field type would be Salesforce campaign (will add an image below) which will show under the \"Selectors\" column when adding a new field to your module if you have the Salesforce app connected to that portal."
  },
  {
    "text": "",
    "time_stamp": "2019-06-25 14:26:46"
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-06-25 14:27:47",
    "edited": {
      "time_stamp": "2019-06-25 14:28:39"
    },
    "text": "You'd then copy the field's code (will send an image below) and swap it out for the value of the sfdc_campaign parameter in the form code."
  },
  {
    "text": "",
    "time_stamp": "2019-06-25 14:28:53"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2019-06-25 14:29:58",
    "text": "<@U26AKMZ19> got it.  I don’t have that option in my specific account since I don’t have salesforce integrated. I’ll check the customers account that is asking me this question.\n\nAs a side note, I’m a template provider and don’t have access to this in my template provider account either.  It would be SUPER helpful if I did as I’m building out custom modules."
  },
  {
    "poster": {
      "poster_name": "Jason Rosa",
      "poster_handle": "jasonrosa"
    },
    "time_stamp": "2019-06-25 15:06:48",
    "text": "Definitely agreed and can pass along that feedback."
  }
]
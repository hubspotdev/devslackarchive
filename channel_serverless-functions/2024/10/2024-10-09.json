[
  {
    "poster": {
      "poster_name": "kajal",
      "poster_handle": "peta.brown"
    },
    "time_stamp": "2024-10-09 21:20:54",
    "text": "Thanks"
  },
  {
    "poster": {
      "poster_name": "kajal",
      "poster_handle": "peta.brown"
    },
    "time_stamp": "2024-10-09 21:22:34",
    "text": "Hi,\nI wanted to send a form data to a external api url but when i try to submit the form it gives network error.\n\n`import React, { useState } from \"react\";`\n`import {`\n  `Divider,`\n  `Link,`\n  `Button,`\n  `Text,`\n  `Input,`\n  `Flex,`\n  `HubSpot,`\n`} from \"@HubSpot/ui-extensions\";`\n\n`// Define the extension to be run within the HubSpot CRM`\n`HubSpot.extend(({ context, runServerlessFunction, actions }) =&gt; (`\n  `&lt;Extension`\n    `context={context}`\n    `runServerless={runServerlessFunction}`\n    `sendAlert={actions.addAlert}`\n  `/&gt;`\n`));`\n\n`// Define the Extension component, taking in runServerless, context, &amp; sendAlert as props`\n`const Extension = ({ context, runServerless, sendAlert }) =&gt; {`\n  `const [text, setText] = useState(\"\");`\n\n  `// Call serverless function to execute with parameters.`\n  `// The `myFunc` function name is configured inside `serverless.json``\n  `const handleClick = async () =&gt; {`\n    `try {`\n      `// Send data to serverless function`\n      `const { response } = await runServerless({ name: \"myFunc\", parameters: { text: text } });`\n      `sendAlert({ message: response });`\n\n      `// Post data to an external URL`\n      `const url = \"<https://xyx.com/resync>\";`\n      `const responseFromApi = await fetch(url, {`\n        `method: \"POST\",`\n        `headers: {`\n          `\"Content-Type\": \"application/json\",`\n        `},`\n        `body: JSON.stringify({ text }),`\n      `});`\n\n      `if (responseFromApi.ok) {`\n        `const result = await responseFromApi.json();`\n        `sendAlert({ message: `Form successfully submitted: ${result.message}` });`\n      `} else {`\n        `sendAlert({ message: `Error submitting form: ${responseFromApi.statusText}` });`\n      `}`\n    `} catch (error) {`\n      `sendAlert({ message: `Error: ${error.message}` });`\n    `}`\n  `};`\n\n  `return (`\n    `&lt;&gt;`\n      `&lt;Flex direction=\"row\" align=\"end\" gap=\"small\"&gt;`\n        `&lt;Input name=\"text\" label=\"\" onInput={setText} /&gt;`\n        `&lt;Button type=\"submit\" onClick={handleClick}&gt;`\n          `Link Project`\n        `&lt;/Button&gt;`\n      `&lt;/Flex&gt;`\n      `&lt;Divider /&gt;`\n    `&lt;/&gt;`\n  `);`\n`};`\n\n`export default Extension;`",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-10-11 14:18:34"
      }
    ]
  }
]
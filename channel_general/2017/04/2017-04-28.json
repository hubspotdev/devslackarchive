[
  {
    "poster": {
      "poster_name": "Christian H. Bohlbro",
      "poster_handle": "christian.katkom"
    },
    "time_stamp": "2017-04-28 02:22:51",
    "text": "Is there any way to copy/clone an existing page to Content Staging?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-04-28 07:39:08",
    "text": "Under your \"Website Pages\" area there should be a content staging link in the bottom left. From there, you can choose a page on your site click the stage button and choose stage cloned page."
  },
  null,
  {
    "poster": {
      "poster_name": "Deven Davies",
      "poster_handle": "deven_ic"
    },
    "time_stamp": "2017-04-28 09:32:45",
    "text": "Hey all, I am attempting to improve page speed and decrease size by limiting image sizes loaded onto a page. however when I call the images I'm using them as backgrounds within their respective sections and when I try something like: \n\n&lt;div class=\"post-image\" style=\"background: url('{{ content.post_list_summary_featured_image }}?width=600');&gt;\n\nBut the image sizes loaded are still the same. As you can imagine, this makes blog listings quite large pages. Thoughts?"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-04-28 09:47:56",
    "text": "There's 2 formats for CDN urls, one that has something like hsfs in it and one that's just hs. The server-side resizing only works on the latter."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-04-28 09:48:09",
    "text": "I don't remember exactly"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-04-28 09:49:09",
    "text": "You can figure it out the format by putting an `img` in, letting the template resize it, and comparing it to the url you would get from the file manager"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-04-28 09:50:34",
    "text": "Then you can use the replace filter on `content.post_list_summary_featured_image` to convert to the other kind of url"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-04-28 09:51:14",
    "text": "May or may not be a better way to do it"
  },
  {
    "poster": {
      "poster_name": "Deven Davies",
      "poster_handle": "deven_ic"
    },
    "time_stamp": "2017-04-28 09:51:30",
    "text": "I've tried |replace('/hubfs/','/hs-fs/hubfs/') but I think thats slightly off"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2017-04-28 09:55:52",
    "text": "I've got ` style=\"background-image:url({{ thumb|replace('//cdn2.HubSpot.net/hubfs/2126713/', '//www.nephure.com/hs-fs/hubfs/') }}?width=200)\"` on one of my sites and it seems to work... most of the time?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-04-28 12:07:11",
    "text": "Anyone else out there using Local Hubl Server in their Dev Workflow?  Is there enough use to warrant creating a channel?"
  },
  {
    "poster": {
      "poster_name": "kevin Barber",
      "poster_handle": "kevinbarber"
    },
    "time_stamp": "2017-04-28 12:08:21",
    "text": "Lean Labs does <@U54TVT3C1>"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2017-04-28 12:14:32",
    "text": "I don't know if this warrants another channel, but I'm definitely interested in learning more about it, especially in combination with modern workflows and build systems (Grunt, Gulp, and the like). I've tried to figure out how it could work in combination before, but from the (scarce) information I've found it looks more like it would add more time to my workflow than it would save."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-04-28 12:17:49",
    "edited": {
      "time_stamp": "2017-04-28 12:18:07"
    },
    "text": "<@U26BLKGE4> We've integrated gulp tasks into our build workflow using Local Hubl Server at SalesHub.  It was a bit of a pain to get set up, but damn is it nice to write .SASS and end up with nicely vendor-prefixed code."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-04-28 12:19:39",
    "text": "Most confusing part is rectifying the local file structure with the file structure accessible via .FTP"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-04-28 12:20:13",
    "text": "Most frustrating part is not being able to upload Custom Modules built as JSON objects"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2017-04-28 12:21:35",
    "text": "That was my next question, the file structure/FTP element lol. What would the advantage be to using it with the hubl server and FTP over simply writing the sass with a standard gulp workflow, running build, then copy/pasting the resulting css contents into a file in the design manager IDE?"
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-04-28 12:23:15",
    "text": "For me, it's really just the ability to get instant feedback on styling changes when working locally.  You can set up a browsersync in your gulp task to limit the steps from writing styles to seeing them on the screen."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2017-04-28 12:33:55",
    "text": "hmm, I could see that being easier when working on smaller updates to a site. We've mostly only used build tools when doing a complete redesign / launchpad site, then add additional stylesheets as needed for new pages, features etc. Integrated with git I could see this being an easier way to handle version control on these kind of projects for sure. Especially if the ftp upload could be automated on commit or something. \n\nAlso, out of curiosity, are you using an html preprocessor like Pug? I've been using it for prototyping and building out basic structures quickly, but when it comes time to input the HubL tags, things usually get messy. Would love to know what others are doing."
  },
  {
    "poster": {
      "poster_name": "Ian McIlwain",
      "poster_handle": "ian-mcilwain"
    },
    "time_stamp": "2017-04-28 12:37:12",
    "text": "Nope, no HTML pre-processing.  Just writing HUBL straight into the local server.  We will generally have two sets of includes, one for local setup and one for live.  We leave the live includes commented out until launch and then just uncomment live includes and comment out local ones."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2017-04-28 12:37:59",
    "text": "gotcha. cool, thanks!"
  },
  {
    "poster": {
      "poster_name": "Bradley Haveman",
      "poster_handle": "bradley"
    },
    "time_stamp": "2017-04-28 12:48:41",
    "text": "Anyway to bulk delete COS URL Mappings?"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2017-04-28 16:01:38",
    "text": "With LeadFlows, can you have it placed on another site using a JS Snippet?"
  }
]
[
  {
    "poster": {
      "poster_name": "pablo perez",
      "poster_handle": "pablo765"
    },
    "time_stamp": "2024-08-14 01:54:09",
    "text": "Thanks for the confirmation! yeah we dont have the addon so i might have hit a wall there xD"
  },
  {
    "poster": {
      "poster_name": "pablo perez",
      "poster_handle": "pablo765"
    },
    "time_stamp": "2024-08-14 05:14:13",
    "edited": {
      "time_stamp": "2024-08-14 05:14:28"
    },
    "text": "Any way to Join the custom channel api beta?"
  },
  {
    "poster": {
      "poster_name": "Levon Stepanyan",
      "poster_handle": "levon"
    },
    "time_stamp": "2024-08-14 06:34:03",
    "edited": {
      "time_stamp": "2024-08-14 06:34:39"
    },
    "text": "Thank you so much <@U03REFNRMB3> ! This was extremely useful! I was able to customize and add my desired functions :partying_face:\nAm I allowed to share this link also in HubSpot Community, since I have asked this also there?"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2024-08-14 07:16:02",
    "edited": {
      "time_stamp": "2024-08-14 07:16:07"
    },
    "text": "Yup"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 07:26:20",
    "text": "settings, integrations, private apps"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 07:29:26",
    "text": "WOULD LOVE TO GET INTO THIS"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 07:39:29",
    "text": "if the field is in HubSpot, yes"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 07:42:21",
    "text": "if you want the webhook to include client id and workspace id, you would need to have those set as properties on every object. You would also need a workflow that copies that all over to each new record. That would leave a gap in the creation of objects, where when an object is created it wouldn’t have the id you want on there.\n\nIMO you would need some middleware to achieve this. Or you would need to create your own webhook system inside HubSpot workflows that modified how this works."
  },
  {
    "poster": {
      "poster_name": "pablo perez",
      "poster_handle": "pablo765"
    },
    "time_stamp": "2024-08-14 08:44:44",
    "text": "How soon is going to be? can i help, anything to stop my company asking for a feature that doesnt exist but they think it should exist xD"
  },
  {
    "poster": {
      "poster_name": "pablo perez",
      "poster_handle": "pablo765"
    },
    "time_stamp": "2024-08-14 08:45:04",
    "text": "you guys could really save a life"
  },
  {
    "poster": {
      "poster_name": "Eric Hirsh",
      "poster_handle": "ehirsh"
    },
    "time_stamp": "2024-08-14 09:12:28",
    "text": "each of you are welcome to DM me, would love to learn more about your use case"
  },
  {
    "poster": {
      "poster_name": "Sergey Knyazhentsev",
      "poster_handle": "sknyazhentsev"
    },
    "time_stamp": "2024-08-14 10:56:33",
    "text": "Hi everyone\nWe are building a solution to send replies  to a chat conversation using Conversations API\n<https://developers.HubSpot.com/docs/api/conversations/conversations>\nWe had implemented almost everything we need, the only items left are:\n• Are there any ways to post  message to a thread using \"conversations/v3/conversations/threads/{threadId}/messages\" as either a system user or integration user. Trying that, we receive \nActor type SYSTEM is not supported for sending\nActor type INTEGRATOR is not supported for sending\nAre there any workarounds?\n\n• Is there a programmatic way to show in the chat window that agent is typing the answer, before we will use \"conversations/v3/conversations/threads/{threadId}/messages\" to post actual reply?\n"
  },
  {
    "text": "Hello! Hopefully this is the right spot for a HubSpot UI Extension question. I'd like to know if anyone knows how to limit a table to lets say '4' elements and the rest you would _*scroll*_ to get to rather than use pages? I don't want the entire sidebar to keep expanding but rather a scrollbar be available inside the table component. Any help would be super appreciated",
    "time_stamp": "2024-08-14 12:52:14",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-08-14 13:13:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 13:13:28",
    "text": "proper channel: <https://HubSpotdev.slack.com/archives/C05R599UA12>\n\nTo do this you would put your data into a parent/child variable system.\n\nSo lets say you receive all your results and you are mapping them to the jsx that displays this data.\n``````\nSo your results has 12 items in it. then set your `displayResults` to the first 4 items. You can loop return a subset, filter, etc however you want to pull those in.\n\nThen you have a button that updates that displayResults variable with the next 4"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 13:16:47",
    "edited": {
      "time_stamp": "2024-08-14 13:17:18"
    },
    "text": "When querying the search API, is it possible to use an OR modifier in the values key pair or search for records that match ANY of a set of search parameters?\n\nExample/context:\nI want to search for deals related to a number  of different companies. Could I run a search like this:\n```curl <https://api.hubapi.com/crm/v3/objects/tickets/search> \\\n  --request POST \\          \n  --header \"Content-Type: application/json\" \\\n  --header \"authorization: Bearer YOUR_ACCESS_TOKEN\" \\\n  --data '{\n    \"filters\": [\n      {\n        \"propertyName\": \"associations.company\",\n        \"operator\": \"EQ\",\n        \"value\": \"123\" OR \"456\" OR \"789\"\n      }\n    ]\n  }'```\nOr would it be possible to have an OR operator with filter groups?",
    "reply_count": 39,
    "reply_users_count": 5,
    "replies": [
      {
        "time_stamp": "2024-08-14 13:19:25"
      },
      {
        "time_stamp": "2024-08-14 13:19:34"
      },
      {
        "time_stamp": "2024-08-14 13:20:25"
      },
      {
        "time_stamp": "2024-08-14 13:22:05"
      },
      {
        "time_stamp": "2024-08-14 13:23:24"
      },
      {
        "time_stamp": "2024-08-14 13:55:18"
      },
      {
        "time_stamp": "2024-08-14 13:59:25"
      },
      {
        "time_stamp": "2024-08-14 14:00:14"
      },
      {
        "time_stamp": "2024-08-14 14:01:25"
      },
      {
        "time_stamp": "2024-08-14 14:13:09"
      },
      {
        "time_stamp": "2024-08-14 14:13:09"
      },
      {
        "time_stamp": "2024-08-14 14:24:18"
      },
      {
        "time_stamp": "2024-08-14 14:32:53"
      },
      {
        "time_stamp": "2024-08-14 14:35:37"
      },
      {
        "time_stamp": "2024-08-14 14:37:17"
      },
      {
        "time_stamp": "2024-08-14 14:37:56"
      },
      {
        "time_stamp": "2024-08-14 14:38:46"
      },
      {
        "time_stamp": "2024-08-14 15:05:25"
      },
      {
        "time_stamp": "2024-08-14 15:06:12"
      },
      {
        "time_stamp": "2024-08-14 15:06:15"
      },
      {
        "time_stamp": "2024-08-14 15:06:19"
      },
      {
        "time_stamp": "2024-08-14 15:09:27"
      },
      {
        "time_stamp": "2024-08-14 15:11:51"
      },
      {
        "time_stamp": "2024-08-14 15:23:08"
      },
      {
        "time_stamp": "2024-08-14 15:23:23"
      },
      {
        "time_stamp": "2024-08-14 15:23:55"
      },
      {
        "time_stamp": "2024-08-14 15:28:03"
      },
      {
        "time_stamp": "2024-08-14 15:32:57"
      },
      {
        "time_stamp": "2024-08-14 15:40:15"
      },
      {
        "time_stamp": "2024-08-14 15:40:46"
      },
      {
        "time_stamp": "2024-08-14 15:41:33"
      },
      {
        "time_stamp": "2024-08-14 15:42:01"
      },
      {
        "time_stamp": "2024-08-14 15:43:05"
      },
      {
        "time_stamp": "2024-08-14 16:20:05"
      },
      {
        "time_stamp": "2024-08-14 18:24:24"
      },
      {
        "time_stamp": "2024-08-14 18:24:35"
      },
      {
        "time_stamp": "2024-08-15 05:49:00"
      },
      {
        "time_stamp": "2024-08-15 05:50:49"
      },
      {
        "time_stamp": "2024-09-20 08:46:32"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 13:19:25",
    "text": "```{ \"filterGroups\": [\n{ \"filters\": [\n      {\n        \"propertyName\": \"associations.company\",\n        \"operator\": \"EQ\",\n        \"value\": \"123\"\n      }\n    ]},\n{ \"filters\": [\n      {\n        \"propertyName\": \"associations.company\",\n        \"operator\": \"EQ\",\n        \"value\": \"456\"\n      }\n    ]}\n]```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 13:19:34",
    "text": "in a call, but this is how to do with filtergroups"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 13:20:25",
    "text": "no shit, it’s that simple? I thought the filter group meant the query matches all of the filters in a filtergroup"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 13:22:05",
    "text": "Jesus it’s right there in the documentation"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 13:23:24",
    "edited": {
      "time_stamp": "2024-08-14 13:24:04"
    },
    "text": "I’d only be able to search for a max of 3 different company IDs. hmm"
  },
  {
    "poster": {
      "poster_name": "Juan Sebastián Ayala",
      "poster_handle": "juansebastianayala20"
    },
    "time_stamp": "2024-08-14 13:53:16",
    "text": "Thank you for your help! :grin::+1:"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-14 13:55:18",
    "edited": {
      "time_stamp": "2024-08-14 13:56:10"
    },
    "text": "Not sure if there's other search criteria you're trying to match on, but if you know the Company Object IDs that you're interested in, instead of using the Search API, you could just find the deal associations of those companies using the Batch Associations API: <https://api.hubapi.com/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/read>\n\nso, find associations from company to deal, and in the POST body, you pass the IDs of the companies of interest (multiple company IDs at once).\n\nIn the response, you'll get each of the Deal IDs associated to each company included. Then, you can iterate those and find the specific details.\n\n```curl --request POST \\\n  --url <https://api.hubapi.com/crm/v4/associations/company/deal/batch/read> \\\n  --header 'authorization: Bearer YOUR_ACCESS_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"inputs\": [\n    {\n      \"id\": \"6282702004\"\n    }\n  ]\n}'```\nResponse:\n```{\n  \"status\": \"COMPLETE\",\n  \"results\": [\n    {\n      \"from\": {\n        \"id\": \"6282702004\"\n      },\n      \"to\": [\n        {\n          \"toObjectId\": 7203213113,\n          \"associationTypes\": [\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 342,\n              \"label\": null\n            },\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 6,\n              \"label\": \"Deal with Primary Company\"\n            }\n          ]\n        },\n        {\n          \"toObjectId\": 8669396745,\n          \"associationTypes\": [\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 342,\n              \"label\": null\n            },\n            {\n              \"category\": \"USER_DEFINED\",\n              \"typeId\": 160,\n              \"label\": \"Child Deal\"\n            }\n          ]\n        },\n        {\n          \"toObjectId\": 8669453714,\n          \"associationTypes\": [\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 342,\n              \"label\": null\n            },\n            {\n              \"category\": \"USER_DEFINED\",\n              \"typeId\": 160,\n              \"label\": \"Child Deal\"\n            }\n          ]\n        },\n        {\n          \"toObjectId\": 14996248242,\n          \"associationTypes\": [\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 342,\n              \"label\": null\n            },\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 6,\n              \"label\": \"Deal with Primary Company\"\n            }\n          ]\n        },\n        {\n          \"toObjectId\": 14996248436,\n          \"associationTypes\": [\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 342,\n              \"label\": null\n            },\n            {\n              \"category\": \"HubSpot_DEFINED\",\n              \"typeId\": 6,\n              \"label\": \"Deal with Primary Company\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"startedAt\": \"2024-08-14T19:54:12.328Z\",\n  \"completedAt\": \"2024-08-14T19:54:12.340Z\"\n}```"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 13:59:25",
    "text": "<@UJJ239SC9>, this would be great if that API could return more properties, specifically deal stage.\n\nWhat I’m trying to do in the end is associate a custom object to deals that are associated to the custom object, but the deals need to be in specific deal stages. For more context, the custom object is Contracts and I only want the contracts to be associated to deals in specific stages"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 14:00:14",
    "text": "What HubSpot level? Graphql would be much easier I think"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 14:01:25",
    "text": "Enterprise"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 14:13:09",
    "text": ":exploding_head:"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-14 14:13:09",
    "text": "meta-comment: Happy to jam on this to think of a different approach, but I'm mindful of throwing out options if you're already married to one approach.\n\n`associate a custom object to deals that are associated to the custom object` - not sure I understand the logic of this -\n• are you trying to find other existing deals to associate the contracts to? i.e. contract is created and associated to a deal, if a company has 3 other open deals, 2 of which are in a \"negotiation\" stage, then ALSO associate the contract to those deals?)\n• What's the business process (what objects, what triggers and what's the end result?)"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 14:24:18",
    "text": "• yes kinda\nSo here’s the full rub:\nI’m at Snap! Mobile. We provide a fundraising platform for clubs/teams in schools. In the real world, a team is part of a school, which is part of a school district. Currently the architecture is such that teams aren’t associated to a school in any meaningful way. I’m building architecture with custom objects to make that happen.\n\nTeams (companies in HubSpot) will run fundraising campaigns (deals in HubSpot)\n\nSometimes, we’ll work with a school or district to get a contract in place that gives them a pricing break. So what I’m wanting to do is say that when a district has a contract all campaigns (deal) for teams (companies) under schools (custom object) within a district (custom object) will be associated to the contract (custom object). And all the other records (schools and teams) will be associated to the contract as well.\n\nI’m wanting to use the batch endpoint for associations to avoid timing related API limits. Here’s how I want the process to work: Contract is associated to a District. I look up all the schools associated to the district, then associate. Then I look up all the teams (companies) associated to the district and associate those. The problem then is that the contract should only be associated to campaigns (deals) that are in certain stages, and I haven’t been able to figure out a way to find deals that are in the specific stages that are associated to the district (search API doesn’t work for custom objects)."
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-14 14:32:53",
    "text": "Thanks for the detail - super helpful.\nAre you hoping to run this as both a one-time update and then as an ongoing process? For the ongoing process, is the creation of the contract the trigger? Or maybe the association of the Contract to the District the trigger? Or should the Contract be in a certain stage before the process kicks off?"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 14:35:37",
    "text": "It would be the association of the contract to the district. That would be a manual process for now. My idea for triggering the multi-association workflow would be:\nWhen the contract is associated to a district, the “number of associated districts” would change and trigger a workflow to push the contract ID to the district property “contract ID”. The change in “contract ID’ on the district would trigger the association workflow."
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-14 14:37:17",
    "text": "And judging by the last comment, you're hoping to run this using multiple custom coded actions, and there's no external integration tooling involved?"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 14:37:56",
    "text": "Correct "
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-14 14:38:46",
    "text": "ok - give me a few minutes to think on this"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:05:25",
    "text": "A good way to get started is to create some properties… that use property sync. So  you could have a District ID property on a school. That syncs to the RECORD ID of the associated District object"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:06:12",
    "text": "This will be helpful for you to start getting the child/parents set up"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 15:06:15",
    "text": "I’m all out of sync properties lol"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:06:19",
    "text": "OOF"
  },
  {
    "poster": {
      "poster_name": "Andre Zorn",
      "poster_handle": "azor"
    },
    "time_stamp": "2024-08-14 15:09:27",
    "text": "Search API works for custom objects if that helps?"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 15:11:51",
    "text": "Ah it doesn’t work for searching custom object associations. <https://developers.HubSpot.com/docs/api/crm/search#:~:text=Copy-,Please%20note,-%3A%20the%20option>\nI should really read the whole thing and be more thorough in my communications lol"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:23:08",
    "text": "Is it possible to auto associate the deals, but only apply a specific label when they get to the proper stage, clearing / changing label, via stages in a simple workflow….\n\n\nThen you can do graphql based upon the label"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:23:23",
    "text": "Are these items already assocated ? I"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:23:55",
    "text": "nevermind I just have to read this better “I’m wanting to use the batch endpoint for associations to avoid timing related API limits. Here’s how I want the process to work: Contract is associated to a District. I look up all the schools associated to the district, then associate. Then I look up all the teams (companies) associated to the district and associate those. The problem then is that the contract should only be associated to campaigns (deals) that are in certain stages, and I haven’t been able to figure out a way to find deals that are in the specific stages that are associated to the district (search API doesn’t work for custom objects).”"
  },
  {
    "text": "<@U059RH2S34H> - (correct my understanding) &gt; given that your object association structure looks like this:\nContract &lt;&gt; District &lt;&gt; School &lt;&gt; Team (Company) &lt;&gt; Campaign (Deal), and the goal is to then selectively associate certain Deals to Contracts, I do think using the GraphQL Rest API is the best option. This endpoint supports nested association lookups and you can use filters to find only certain stages or exclude some stages.\n\nDepending on whether the entire chain exists, you may need multiple steps to get all of the nested selections.\n\nBut, I think you could do a GraphQL query that looks like this one (screenshot) (As a HubSpotter, I took the liberty of checking out your portal for this)\nThen a Contract workflow (screenshot example from my portal)\n\n<https://developers.HubSpot.com/beta-docs/guides/cms/content/data-driven-content/graphql/query-HubSpot-data-using-graphql#use-a-graphql-query-in-an-api-request|Link to graphql rest API docs>",
    "time_stamp": "2024-08-14 15:28:03"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-14 15:32:57",
    "text": "<@U25PYL3Q8> - yea, my thought is to do 2 different graphql queries (do the first, then associate), then do the second once the 'full' object chain is in place, but with a filter for certain deal stages, then do the association back to the 'starting' object"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:40:15",
    "text": "I also Dm’d rod a video of me traversing through some graphql stuff and showing how to translate that to a workflow… You having actual access to his hubid / graphql makes that really much easier lol"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:40:46",
    "text": "It would be amazing if people could grant me 1 hour access in an easy way that I can jump into their portal and help them then expire it"
  },
  {
    "poster": {
      "poster_name": "Robert Ainslie",
      "poster_handle": "rainslie"
    },
    "time_stamp": "2024-08-14 15:41:33",
    "text": "I wouldn’t hold your breathe on that one (for security reasons) :joy: "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:42:01",
    "text": "LOL yeah, I know."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 15:43:05",
    "text": "omg someone dropped my level down another. They gotta stop reading my wish list"
  },
  {
    "poster": {
      "poster_name": "Rod Waynick",
      "poster_handle": "rodwaynick"
    },
    "time_stamp": "2024-08-14 16:20:05",
    "text": "So yes the district would be associated to schools, companies, and deals through other workflows. I think graphiql is the way to go. This is awesome. I didn’t know it existed because this is the first time I’m doing anything requiring multiple objects’ data and using the batch associations endpoint. Thank you all for your help!!"
  },
  {
    "poster": {
      "poster_name": "Kushira Godellawatta",
      "poster_handle": "kushira.godellawatta"
    },
    "time_stamp": "2024-08-14 17:38:22",
    "text": "Hmm... It was not working... Let me circle back I raised a ticket :slightly_smiling_face:. Thank you!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 18:24:24",
    "text": "<https://www.youtube.com/live/GH0DLWTQMYY?si=CzoaAlqHhpvaU5yI|https://www.youtube.com/live/GH0DLWTQMYY?si=CzoaAlqHhpvaU5yI>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2024-08-14 18:24:35",
    "text": "Carter did a live stream on this"
  },
  {
    "text": "Dear group,\n\nI have a question about what is stated on this page using the search API specially the part about searchable properties <https://developers.HubSpot.com/beta-docs/guides/api/crm/search?uuid=1b495857-63bb-4573-b56d-c01f42b8a8d5#search-default-searchable-properties>\n\nI have an object myself called artikelen and set up to the max of 20 properties as (globally) searchable\nBut then if i run exact that (example) request with my own values and only use query and no filter fields or groups than i only seems to match the \"naam\" and the \"nummer\" field but many others it doesn't take in consideration\n\nAnyone an idea what i miss ftrom this documentation>\nAttached some example requests",
    "time_stamp": "2024-08-15 00:51:07",
    "edited": {
      "time_stamp": "2024-08-15 00:52:04"
    },
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-08-15 05:35:42"
      },
      {
        "time_stamp": "2024-08-15 05:36:00"
      },
      {
        "time_stamp": "2024-08-15 07:01:12"
      },
      {
        "time_stamp": "2024-08-15 07:04:04"
      },
      {
        "time_stamp": "2024-08-15 08:12:11"
      },
      {
        "time_stamp": "2024-08-19 05:42:07"
      },
      {
        "time_stamp": "2024-08-26 02:41:29"
      }
    ]
  }
]
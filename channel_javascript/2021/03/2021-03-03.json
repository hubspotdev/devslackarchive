[
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-03-03 01:42:19",
    "edited": {
      "time_stamp": "2021-03-03 01:42:29"
    },
    "text": "hubl is server side so this wont work"
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-03-03 01:42:57",
    "text": "You can do it the other way - using HubL in Javascript."
  },
  {
    "poster": {
      "poster_name": "Kieran",
      "poster_handle": "kieran073"
    },
    "time_stamp": "2021-03-03 01:44:28",
    "text": "```let test = \"{{ hubl_variable }}\";```\nOr, as a data element:\n\n```&lt;div data-variable=\"{{ hubl_variable }}\"&gt;.....\n&lt;/div&gt;```"
  },
  {
    "poster": {
      "poster_name": "Hein Haraldson Berg",
      "poster_handle": "hein"
    },
    "time_stamp": "2021-03-03 14:03:44",
    "text": "Greetings.\n\nI’m facing an issue where strings with special characters (latin-extended-A) in the `identity` payload sent from our web app doesn’t survive the transport over to HubSpot, but turns into gibberish. One example is _Bjørnar_, which in HubSpot displays as _BjÃ¸rnar_.\n\n```_hsq.push(['identify', {\n    email: '<mailto:bjornar@nordmann.no|bjornar@nordmann.no>',\n    firstname: 'Bjørnar',\n    lastname: 'Nordmann'\n}])\n\n_hsq.push(['trackPageView'])```\nDo these methods rely on me encoding the strings myself, or what causes this behavior?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2021-03-09 03:17:53"
      }
    ]
  }
]
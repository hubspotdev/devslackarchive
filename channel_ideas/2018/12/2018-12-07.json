[
  null,
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 13:14:54",
    "text": "Idea: Allow for the ability to nest modules within a parent module, and pass arguments from parent to child module similar to passing props in React components.",
    "reply_count": 18,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2018-12-07 13:15:46"
      },
      {
        "time_stamp": "2018-12-07 13:18:26"
      },
      {
        "time_stamp": "2018-12-07 13:18:51"
      },
      {
        "time_stamp": "2018-12-07 13:19:48"
      },
      {
        "time_stamp": "2018-12-07 13:20:17"
      },
      {
        "time_stamp": "2018-12-07 13:20:35"
      },
      {
        "time_stamp": "2018-12-07 13:20:57"
      },
      {
        "time_stamp": "2018-12-07 13:21:32"
      },
      {
        "time_stamp": "2018-12-07 13:22:53"
      },
      {
        "time_stamp": "2018-12-07 13:24:37"
      },
      {
        "time_stamp": "2018-12-07 13:28:04"
      },
      {
        "time_stamp": "2018-12-07 13:28:20"
      },
      {
        "time_stamp": "2018-12-07 13:28:33"
      },
      {
        "time_stamp": "2018-12-07 13:28:47"
      },
      {
        "time_stamp": "2018-12-07 13:29:15"
      },
      {
        "time_stamp": "2018-12-07 13:29:19"
      },
      {
        "time_stamp": "2018-12-07 13:29:20"
      },
      {
        "time_stamp": "2018-12-07 13:29:21"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:15:46",
    "text": "Huzzah!"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:18:26",
    "text": "you actually can pass arguements already"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:18:51",
    "text": "the nesting modules part is the only part that’s not possible because they don’t allow {% module %} in custom modules"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:19:48",
    "text": "I think they chose not to allow it for performance and editor UX reasons"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:20:17",
    "text": "for example if you could do it, you could nest a module inside of itself, creating an infinite loop."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 13:20:35",
    "text": "right, in a coded template, again was just revering to module-module relationships. For example, have a modal wrapper module that could show different child modules based on props."
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 13:20:57",
    "text": "Not if the linting doesn't let you publish an infinite loop :wink:"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 13:21:32",
    "text": "and recursion can be a good thing"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:22:53",
    "text": "<http://bfy.tw/8nYk>"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 13:24:37",
    "text": "I hope you posted that just for the \"did you mean?\" lol"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:28:04",
    "text": "that was exactly it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:28:20",
    "text": "need a recursion emoji"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-07 13:28:33",
    "text": "good, you freaked me out like I was using the word wrong lmao"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:28:47",
    "text": "Aw"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:29:15",
    "text": "Damnit"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-07 13:29:19",
    "text": "No giphy"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:29:20",
    "text": "lmgtfy had a new - explain the internet setting had to try it"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-07 13:29:21",
    "text": "lol"
  },
  null,
  null,
  null,
  null
]
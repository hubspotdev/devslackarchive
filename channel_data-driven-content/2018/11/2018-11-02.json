[
  null,
  {
    "poster": {
      "poster_name": "John Fuller - Blames Bugs",
      "poster_handle": "john.ascendinbound"
    },
    "time_stamp": "2018-11-02 06:24:03",
    "text": "has anyone had success in getting a custom module to update fields in hubdb?"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-11-02 07:16:26",
    "text": "Fun - you have the inverse of my question.  Is it feasible to use a custom module choice variable to update the calls to a table and row? It's throwing an error in the custom module editor, due to an unexpected character.\n```    {% set row = hubdb_table_row( {{ module.hubdb_table }}, {{ module.hubdb_row }} ) %} ```\n\nAre we limited to actually having to have the &lt;table ID&gt; and the &lt;row ID&gt; numeric values in there to get that to properly run?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-11-02 07:37:17"
      },
      {
        "time_stamp": "2018-11-02 07:37:32"
      },
      {
        "time_stamp": "2018-11-02 07:44:03"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-02 07:37:17",
    "text": "Should be   {% set row = hubdb_table_row( module.hubdb_table , module.hubdb_row ) %}"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-11-02 07:37:32",
    "text": "You don't need the double brackets with the bracketed statement"
  },
  {
    "poster": {
      "poster_name": "Dana (Holdt) Pesendorfer",
      "poster_handle": "dana.holdt"
    },
    "time_stamp": "2018-11-02 07:44:03",
    "text": "Ahhhh... that explains it. Thanks!"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2018-11-02 07:47:37",
    "text": "Hey, has anyone built anything to the tune of a content hub where users have logins  and can access documents / files &amp; certain pages etc in HubSpot? Trying to approach this in HubSpot is something new to me, wasn’t sure best method i.e user login from auth against HubDb and store session checked in-turn by pages that are gated?"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-11-02 07:50:59",
    "text": "If you have HubSpot enterprise this is possible"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2018-11-02 07:51:06",
    "text": "with the new membership functions"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2018-11-02 08:10:50",
    "text": "I do, thanks I will investigate membership functions not something I’ve worked with or HubDb (as much) I want to implement this into multiple portals with the idea of smart modules based on content relevant on later pages (say new campaign LP) to the user logged in and what they’ve viewed."
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-11-02 08:10:59",
    "text": "Definitely do not store login credentials in HubDB as they will be publicly accessible"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-11-02 08:11:56",
    "text": "<https://www.HubSpot.com/product-updates/create-membership-content-using-marketing-hub>"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2018-11-02 08:12:40",
    "text": "Yeah had a feeling there’s gotta be a better way"
  },
  {
    "poster": {
      "poster_name": "Jeff Boulter",
      "poster_handle": "boulter"
    },
    "time_stamp": "2018-11-02 08:13:11",
    "edited": {
      "time_stamp": "2018-11-02 08:13:19"
    },
    "text": "You can also do more advanced access restrictions in HubL using membership features"
  },
  {
    "poster": {
      "poster_name": "Ben Fitzgerald",
      "poster_handle": "ben.f"
    },
    "time_stamp": "2018-11-02 08:15:34",
    "text": "Thanks, i’ll have a read up on this looks promising."
  },
  {
    "subtype": "channel_leave",
    "text": "<@U26C29XPH> has left the channel",
    "time_stamp": "2018-11-02 11:39:38"
  },
  null,
  null,
  null,
  null
]
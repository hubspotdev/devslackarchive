[
  {
    "poster": {
      "poster_name": "Elin Breime",
      "poster_handle": "elin"
    },
    "time_stamp": "2022-09-19 03:15:42",
    "edited": {
      "time_stamp": "2022-09-19 03:15:49"
    },
    "text": "Thanks Carter!!"
  },
  {
    "poster": {
      "poster_name": "Jonas List",
      "poster_handle": "mail901"
    },
    "time_stamp": "2022-09-19 03:26:43",
    "text": "Hey, I’m evaluating HubSpot as a CMS solution for a client. What would be the equivalent to what in other CMS sometimes is called a `collection` ? By that I mean collecting similar entries in sets like *artists, events*, *projects*. I saw that HubSpot offers Blogs and and HubDB. The first concept seems very much tied to the idea of having a Rich Content editor field, while that later doesn’t support things like media fields, if I’m not mistaken. So how would I manage, say, a collection of projects in the HubSpot world?",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-09-19 07:15:55"
      },
      {
        "time_stamp": "2022-09-19 07:16:25"
      },
      {
        "time_stamp": "2022-09-19 07:23:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-19 07:15:55",
    "text": "Hey <@U042XGX7YEN>, HubDB definitely supports rich text and media fields. Here's a list of all the support column types in HubDB: Text, Rich Text, URL, Image, Select, Multi-select, Date, Date Time, Number, Currency, Checkbox, Location, Foreign ID, and Video"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-19 07:16:25",
    "text": "I know several people including myself that have been able to build pretty advanced projects using HubDB"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-09-19 07:16:55",
    "text": "For sure"
  },
  {
    "poster": {
      "poster_name": "Jonas List",
      "poster_handle": "mail901"
    },
    "time_stamp": "2022-09-19 07:23:00",
    "text": "Hey <@U01QVR44MEY> thanks for your hint. I found the mentioned fields now!"
  },
  {
    "text": "Hello guys . To explain my project, I created a Database to store E-Books. In the past our Marketing teams placed those e-books per Hand on our Blog posts based on the topic that fits, so i thought of making it easier by adding tags as a column to each e-book. so the tags on the current blog searches for the best fitting tags on the e-books. My code can loop through each row etc and find matches. But the only problem is that i cant access these matches to filter the highest one. Here is the example. I think im just thinking too complicated but i hope someone knows what i mean\n`{% macro matchescounter(valuechange) %}`\n`{% set matchingtags = matched_tags.update({'value':matched_tags.value + valuechange }) %}`\n`{% endmacro %}`\n`{% set tagNames = content.tag_names %}`\n`{% set bestrow = row %}`\n`{% set bestn = 0 %}`\n     `&lt;ul&gt;`\n        `{% for row in hubdb_table_rows(5484564) %}`\n        `{% set matched_tags = {'value' : 0 } %}`\n        `&lt;li&gt; row.tags {{row.tags}} &lt;/li&gt;`\n       \n       `{% for tag in tagNames %}`\n       `&lt;li&gt;{{tag}}`  \n         `{% if tag in row.tags %}`\n         `{{ matchescounter(1) }}`\n          `{% else %}` \n          `{{ matchescounter(0) }}`\n         `{% endif %}`\n       `&lt;/li&gt;`\n      `{% endfor %}`\n       `&lt;li&gt;{{matched_tags.value}}&lt;/li&gt;`\n       `{% endfor %}` \n       `&lt;/ul&gt;`\n\n Output: &amp; custom tags in DB",
    "time_stamp": "2022-09-19 07:50:03"
  },
  {
    "poster": {
      "poster_name": "Julius Santoro",
      "poster_handle": "j.santoro"
    },
    "time_stamp": "2022-09-19 07:52:56",
    "text": "`{% set matches = [] %}`\n`{% set row = hubdb_table_row(5484564, 84630209439)  %}` \n`{% for tag in tagNames %}`\n`&lt;li&gt;{{tag}}&lt;/li&gt;`\n  `{% if tag in row.tags %}`\n    `{% set thisVariableDoesntDoAnything = matches.append(1) %}`\n`{% endif %}`\n`{% if matches|length == sequence|sort|first %}`\n  `&lt;li&gt;sucessfull{{row.name}}&lt;/li&gt;`\n`{% endif %}`\n`{% endfor %}`",
    "reply_count": 9,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-09-24 18:20:38"
      },
      {
        "time_stamp": "2022-09-25 20:17:20"
      },
      {
        "time_stamp": "2022-09-26 00:20:26"
      },
      {
        "time_stamp": "2022-09-26 00:21:48"
      },
      {
        "time_stamp": "2022-09-26 00:22:16"
      },
      {
        "time_stamp": "2022-09-26 00:23:01"
      },
      {
        "time_stamp": "2022-09-26 00:24:59"
      },
      {
        "time_stamp": "2022-09-26 03:10:50"
      },
      {
        "time_stamp": "2022-09-26 03:12:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Julius Santoro",
      "poster_handle": "j.santoro"
    },
    "time_stamp": "2022-09-19 07:53:57",
    "text": "Also tried it for one row to then store all different matches in one sequence var and take the sequence[0] but thats way to much"
  },
  {
    "subtype": "channel_topic",
    "topic": ":octagonal_sign: HubSpot Support is not Provided in this Developer Community Slack :octagonal_sign: For specific support requests, go to <https://help.HubSpot.com/>\n\nLet’s talk everything data-driven!",
    "text": "set the channel topic: :octagonal_sign: HubSpot Support is not Provided in this Developer Community Slack :octagonal_sign: For specific support requests, go to <https://help.HubSpot.com/>\n\nLet’s talk everything data-driven!",
    "time_stamp": "2022-09-19 14:05:45"
  }
]
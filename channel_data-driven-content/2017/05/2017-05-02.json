[
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2017-05-02 10:03:32",
    "text": "<@U3TR96G84> you can “FAKE” it by pulling in the blog name and blog post name on the post item for just that template"
  },
  {
    "poster": {
      "poster_name": "Remington Begg",
      "poster_handle": "remingtonbegg"
    },
    "time_stamp": "2017-05-02 10:58:22",
    "text": "You could use the referral url hubl tag to pull in the landing page but the previous pages wouldn't be able to be done to my knowledge <@U3TR96G84>"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-05-02 12:31:14",
    "text": "<@U3TR96G84> As Chad and Remington said, faking it is the only way I know of (assuming they arrive directly to a blog post and don’t travel the tree at all)."
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-05-02 12:32:38",
    "text": "You may be able to use an alternative template structure where you create a blog using landing page templates instead of the native blog templates (loading in the blog content via HubL calls to the post ID or using the blog id for lists)"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-05-02 12:33:50",
    "text": "Another line of thinking could be to hard-code the relationships between specific blogs / LPs and their respective website page slug"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-05-02 12:34:13",
    "text": "i.e. Website page = /product-one"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-05-02 12:34:53",
    "text": "match /blog-1 | blog-2 | blog-3 with /product-one"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-05-02 12:35:33",
    "text": "You could also go session-based and tie any browsing / traffic to a user’s entry point"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2017-05-02 12:36:54",
    "text": "You’d have to cookie the entry point and use it in your breadcrumbs, but it wouldn’t reference the “true” breadcrumb path to arrive there. (Which really, makes sense as you don’t ACTUALLY have a nested heirarchy of Website &gt; LP &gt; Listing &gt; Post… Website and LP are separated out from the blog system to a degree)"
  },
  {
    "poster": {
      "poster_name": "LOIC BURDET",
      "poster_handle": "loic_burdet"
    },
    "time_stamp": "2017-05-02 13:59:18",
    "text": "Thanks <@U38EZFVFE> <@U25C65C3S>  <@U4RP6AGV9> for your answers ! I thought that there could be possible to add properties to LP to link to a WEBSITE PAGE.... Grrrr.... I will give you feebacks to my implementations. See you all"
  }
]
[
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2018-08-14 10:07:37",
    "text": "Hey Guys. I saw your thread Aug 10th regarding the output of arrayed data. I have a followup on that. I have a HubDB column for \"category\". I can easily output that to a data-categories parameter in HTML, but when you want to process it with jquery, its an issue because that's simply a string rather than a json object, so you get an output like ```[{id=1, name='sub cat 1'}, {id=2, name='sub cat 2'}]```. Is there an easy way to just convert this to json so I can process through it in javascript? I basically want to loop through the data objects and determine the name/value pairings of the categories in use and build a category drop down which will only show the categories in use on the page."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-14 10:12:36",
    "text": "`|toJson`"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-14 10:12:59",
    "text": "Which will write out the object as a JSON string."
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2018-08-14 10:17:52",
    "text": "so when i do this ```&lt;div class=\"product-information\" data-subcategory=\"{{ row[\"sub_group_category\"]|toJson }}\"&gt;``` data-subcategory is blank."
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-14 10:48:05",
    "text": ":eyes:"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-14 10:48:36",
    "text": "Can you DM the template?"
  },
  {
    "poster": {
      "poster_name": "Rob Schall",
      "poster_handle": "rschall"
    },
    "time_stamp": "2018-08-14 10:50:51",
    "text": "Done"
  },
  {
    "poster": {
      "poster_name": "Matt Coley",
      "poster_handle": "mcoley"
    },
    "time_stamp": "2018-08-14 11:03:41",
    "text": ":man-facepalming:  should be `|tojson` for future reference"
  },
  {
    "text": "",
    "time_stamp": "2018-08-14 11:18:03",
    "reply_count": 6,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-08-14 11:19:09"
      },
      {
        "time_stamp": "2018-08-14 11:27:04"
      },
      {
        "time_stamp": "2018-08-14 11:32:53"
      },
      {
        "time_stamp": "2018-08-14 13:44:01"
      },
      {
        "time_stamp": "2018-08-14 13:44:17"
      },
      {
        "time_stamp": "2018-08-14 13:45:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-08-14 11:19:09",
    "text": ":stuck_out_tongue_winking_eye:"
  },
  {
    "text": "?",
    "time_stamp": "2018-08-14 11:22:45"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-08-14 11:27:04",
    "text": "I feel like an idiot, does this comic have a punchline that I’m missing?"
  },
  {
    "poster": {
      "poster_name": "Jamie Emerson",
      "poster_handle": "jamie"
    },
    "time_stamp": "2018-08-14 11:32:53",
    "text": "It feels like an illustrated StackOverflow question…"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-08-14 12:01:44",
    "text": "HAHAHAHA"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-14 12:05:05",
    "text": "where is the documentation on loading hubdb via javascript",
    "reply_count": 10,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2018-08-14 12:14:53"
      },
      {
        "time_stamp": "2018-08-14 12:16:19"
      },
      {
        "time_stamp": "2018-08-14 12:18:59"
      },
      {
        "time_stamp": "2018-08-14 12:21:16"
      },
      {
        "time_stamp": "2018-08-14 12:21:45"
      },
      {
        "time_stamp": "2018-08-14 12:22:29"
      },
      {
        "time_stamp": "2018-08-14 12:28:10"
      },
      {
        "time_stamp": "2018-08-14 12:28:27"
      },
      {
        "time_stamp": "2018-08-14 12:29:51"
      },
      {
        "time_stamp": "2018-08-14 12:30:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-08-14 12:14:53",
    "text": "looking for this? <https://developers.HubSpot.com/docs/methods/hubdb/hubdb_overview>"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2018-08-14 12:16:19",
    "text": "the jquery way to use the above api: <https://api.jquery.com/jquery.getjson/>"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-14 12:18:59",
    "text": "no.. there is a HubSpot created javascript method I wanted to try.. at least i thought it was for hubdb.."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-14 12:21:16",
    "text": "<https://HubSpotdev.slack.com/archives/CBA9UA4EN/p1531336421000254>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-14 12:21:45",
    "text": "<https://docs.google.com/document/d/e/2PACX-1vTuu12oFF4bQY1zVD2-WKFuM2dEDN81-fZRV1tGaCL5Z_OcjC-B6O3mHXR6chaq25BU1D2FuvKIjc49/pub>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-14 12:22:29",
    "text": "I made sure to star that as soon as I could lol"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-08-14 12:28:10",
    "text": "Thank you <@U2H3TT8F2>"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-08-14 12:28:27",
    "text": "np"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2018-08-14 12:29:51",
    "text": "WOW AWESOME"
  },
  {
    "text": "I wasn't ready for this",
    "time_stamp": "2018-08-14 12:30:16"
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-14 13:44:01",
    "text": "Black hair guy says \"CamelCase\" the first time but \"camelCase\" the second time. I think the implication is that he's going to create his own, inconsistent naming convention that the next guy will be frustrated with."
  },
  {
    "poster": {
      "poster_name": "Ian McNair",
      "poster_handle": "ianrmcnair"
    },
    "time_stamp": "2018-08-14 13:44:17",
    "text": "I don't know how beard guy heard the capitalization though, so maybe I'm overthinking it"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-08-14 13:45:58",
    "text": "That makes sense! Thank you it was driving me crazy."
  }
]
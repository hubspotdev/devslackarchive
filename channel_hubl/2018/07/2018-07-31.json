[
  null,
  {
    "poster": {
      "poster_name": "Zilla Team",
      "poster_handle": "support"
    },
    "time_stamp": "2018-07-31 04:14:54",
    "text": "Is there any function like blog_post_archive_url to get the url of popular post listing page or is there any way to created an .absolute_url function for popular post listing page.",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-07-31 06:36:23"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-07-31 06:36:23",
    "text": "Not at my computer to double check this but try `{{group.absolute_url}}`"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 08:03:06",
    "text": "what’s the param for locking out a custom tag in HubL (on a template)"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 08:03:15",
    "text": "something like “usereditable=False” ?"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 08:03:56",
    "text": "Followup Q: Am I crazy or can you pass a custom widget via API to a blog post and it will populate / store just fine even if it doesn’t exist in the template?",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-07-31 08:08:19"
      },
      {
        "time_stamp": "2018-07-31 08:08:47"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 08:06:39",
    "text": "found it … overridable=False"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 08:08:19",
    "text": "I created the widget on the template (post having it added via API) and in fact, it does show up now"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 08:08:47",
    "text": "meaning that custom widgets can be passed to a post, stored, and used via the API without ever rendering for the end user"
  },
  null,
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2018-07-31 11:02:15",
    "text": "<@U4RP6AGV9> I have done that many times where I have a field that is editable but isnt being used visibly on the template.",
    "reply_count": 2,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-07-31 11:04:34"
      },
      {
        "time_stamp": "2018-07-31 11:06:58"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 11:04:34",
    "text": "it was throwing me for a serious loop"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 11:06:58",
    "text": "But this one wasn’t even on the template, nor editable (it didn’t exist at all)"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-07-31 11:14:06",
    "text": "Trying to figure out why the following standard menu module that uses Advanced Menus is saying it's not editable within my template...\n`{% menu \"kb_menu\" site_map_name=\"MRLW Knowledgebase\", overrideable=True, root_type=\"site_root\", flyouts=\"false\", max_levels=\"1\", flow=\"vertical\", label=\"Advanced Menu\" %}`"
  },
  {
    "poster": {
      "poster_name": "Joe",
      "poster_handle": "joe"
    },
    "time_stamp": "2018-07-31 11:17:41",
    "text": "Nevermind... looks like a bug in the Visual editor. Hovering over the module has it saying it's locked, but from the Edit Modules section, the module is editable"
  },
  {
    "poster": {
      "poster_name": "William Spiro",
      "poster_handle": "wspiro"
    },
    "time_stamp": "2018-07-31 11:46:45",
    "text": "Check out the awesome and new `related_blog_posts` HubL tag!! The `related_blog_posts` HubL tag can be used to create dynamic and related blog post listing based on a variety of parameters. It allows for generating listings of posts across blogs, with the ability to filter by tags, authors, post paths and publish dates. Developers can also specify the html output of the module using a macro. This HubL tag can be used on both blog posts and pages.\n\n<https://designers.HubSpot.com/docs/hubl/hubl-supported-tags#blog-related-posts>\n<https://designers.HubSpot.com/tutorials/creating-a-related-post-listing>",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2018-08-08 06:37:02"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-31 13:45:13",
    "text": "Is there a way to include a custom module inside a custom module, like using import or include",
    "reply_count": 9,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-07-31 13:59:50"
      },
      {
        "time_stamp": "2018-07-31 14:00:43"
      },
      {
        "time_stamp": "2018-07-31 14:01:02"
      },
      {
        "time_stamp": "2018-07-31 14:01:23"
      },
      {
        "time_stamp": "2018-07-31 14:01:54"
      },
      {
        "time_stamp": "2018-07-31 14:01:57"
      },
      {
        "time_stamp": "2018-07-31 14:02:22"
      },
      {
        "time_stamp": "2018-07-31 14:03:10"
      },
      {
        "time_stamp": "2018-07-31 14:03:15"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-07-31 13:47:24",
    "text": "I went through that struggle a while back and there was no way."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-31 13:47:37",
    "text": "thats what i was afraid of"
  },
  {
    "poster": {
      "poster_name": "Peter Emerson",
      "poster_handle": "pete-the-balls-guy"
    },
    "time_stamp": "2018-07-31 13:48:11",
    "text": "I think I heard that template partials were in the works though."
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-31 13:49:12",
    "text": "yup: <https://HubSpotdev.slack.com/archives/C960Q64G4/p1532459230000307?thread_ts=1532458494.000131&amp;cid=C960Q64G4>"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 13:59:50",
    "text": "You might be able to load up additional custom modules using the results of one that precedes it in the template code… Totally hypothetical here, so bear with me (and poke holes as you see fit) _currently typing_"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 14:00:43",
    "text": "What if you were to have a drop-down of some sort (multi-select field maybe) where the results of which were fed into module names / ids in the template"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 14:01:02",
    "text": "i.e. the first module would pump out the names / ids of additional modules to use in the template"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 14:01:23",
    "text": "like a “Load these additional modules based on this choice”"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-31 14:01:54",
    "text": "hrmmm, i like the sound of this, might have to try this"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 14:01:57",
    "text": "another way to say it would be “module packages” or a template of modules that get loaded automatically"
  },
  {
    "poster": {
      "poster_name": "Michael Grubbs",
      "poster_handle": "mgrubbs"
    },
    "time_stamp": "2018-07-31 14:02:22",
    "text": "LMK how it works out… again, there could be some rendering issues that would prevent this (scope issues most likely)"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-31 14:03:10",
    "text": "im thinking if its values passed into an array, you should essentially be able to loop through that and output them. using a macro of sorts even"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2018-07-31 14:03:15",
    "text": "ill let you know if anything comes from it"
  },
  null,
  {
    "poster": {
      "poster_name": "Zilla Team",
      "poster_handle": "support"
    },
    "time_stamp": "2018-08-01 00:49:38",
    "text": "How can we make image used in a custom global module available all over the template. I have added a custom image field in a global module. But not able to use it outside the module.",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-08-01 00:51:13"
      },
      {
        "time_stamp": "2018-08-01 00:54:02"
      },
      {
        "time_stamp": "2018-08-01 01:09:13"
      },
      {
        "time_stamp": "2018-08-01 01:11:08"
      },
      {
        "time_stamp": "2018-08-01 04:41:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Miteshkumar Padariya",
      "poster_handle": "mitesh"
    },
    "time_stamp": "2018-08-01 00:51:13",
    "text": "Global modules serves same content across the pages. You need to make custom module that can be used over other pages, and then you can change image."
  },
  {
    "poster": {
      "poster_name": "Miteshkumar Padariya",
      "poster_handle": "mitesh"
    },
    "time_stamp": "2018-08-01 00:54:02",
    "text": "<@UBT5FE1T6> <https://knowledge.HubSpot.com/design-manager-user-guide-v2/how-to-use-global-content-across-multiple-templates>"
  }
]
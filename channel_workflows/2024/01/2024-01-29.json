[
  {
    "text": "Hi Clayton, Based on the API response it looks like they are storing it as one field called “phone”. I am hopeful I am wrong because this would be quite annoying for you if I am not…",
    "time_stamp": "2024-01-29 08:52:37"
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 08:59:01",
    "text": "I have also run into other things with you as you can see. The formatter does not actually format the number differently in the backend it only formats it on the front end so your phone number will also be formatted flat <tel:+11234567891|+11234567891> See what I mean?"
  },
  {
    "poster": {
      "poster_name": "Clayton Sardella",
      "poster_handle": "clayton.sardella"
    },
    "time_stamp": "2024-01-29 09:11:31",
    "text": "Hello Bill, You are correct on the one field sadly :cry:. I had HubSpot confirm it too.\n\nI have my formatter making the backend match the country's desired format so when it gets pushed back in then it is formatted correctly. So my backend and front end match. See some examples below:\nUS - \"+1 (XXX) XXX-XXXX\"\nUK - \"+44 XXXX XXX XXX\"\nIndia - \"+91 XX XXXX XXXX\""
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 09:14:04",
    "text": "Gotcha. Understand!"
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 09:14:16",
    "text": "Is it a product or something you wrote? Just curious."
  },
  {
    "poster": {
      "poster_name": "Clayton Sardella",
      "poster_handle": "clayton.sardella"
    },
    "time_stamp": "2024-01-29 09:34:53",
    "text": "This is something we are thinking about rolling into some modules down the line. Right now, it is something we have written for our current clients."
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 09:47:01",
    "text": "Cool, I just ran into the same exact problem recently with some phone number formatting issues I had while integrating a CPQ into HubSpot (issues with phone numbers in the proposal). Did you do this with a workflow?"
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 09:52:07",
    "text": "(Sorry, I am now taking over your thread to figure out solutions to my own problems….) I can work it out! haha"
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 09:54:51",
    "text": "Actually, did you write it in python or JS? If Python I will keep this thread and do the ext. handling and then post a snippet here (ok all done)."
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 09:59:58",
    "text": "We ran into something very similar to this recently and we used <https://datawarehouse.io/> for the move of data. It was awesome."
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 10:00:28",
    "text": "You could also check out Supered if you are looking for a more long term solution to this type of migration (at least from the schema perspective)."
  },
  {
    "poster": {
      "poster_name": "Clayton Sardella",
      "poster_handle": "clayton.sardella"
    },
    "time_stamp": "2024-01-29 10:07:31",
    "text": "Yep, mine is in a custom coded action within a HubSpot workflow action. I wrote it in JS.\n\nThe other thing I should have noted is that we are in the \"Phone Number Property Type\" Beta vs not having one but still the backend and front end is the same format."
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 10:18:13",
    "text": "Thats good info"
  },
  {
    "poster": {
      "poster_name": "Bill Barlas",
      "poster_handle": "bbarlas"
    },
    "time_stamp": "2024-01-29 10:18:54",
    "text": "I will likely take a stab at this and see what I can find out. I bet if we posted it as a result in a KB article or something we could get a lot of orange hearts."
  },
  {
    "poster": {
      "poster_name": "Bruno Ribeiro",
      "poster_handle": "bruno.ribeiro"
    },
    "time_stamp": "2024-01-29 10:23:04",
    "edited": {
      "time_stamp": "2024-01-29 10:25:34"
    },
    "text": "Hello everyone,\n\nI have a question: Am I able to send a property directly on the request URL of a webhook? In this scenario I have two chained webhooks. The first one returns a \"record_id\" that I store into a custom property. Now I want to send this property like: <https://myurl.com/contact/{record_id}/create>.\n\nDoes anyone know if it's possible through HubSpot webhooks?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-01-29 11:17:04"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Tommy Maxwell",
      "poster_handle": "tommy.maxwell324"
    },
    "time_stamp": "2024-01-29 11:17:04",
    "text": "Not from the webhook action in workflows. BUT you could do it in the Webhook custom code, if you write your return value into a constant then reference that on your second Webhook send"
  },
  {
    "poster": {
      "poster_name": "Maximilian Holzer",
      "poster_handle": "maximilian.holzer"
    },
    "time_stamp": "2024-01-30 00:48:54",
    "text": "Hey everyone! Very Silly Question\nDoes it matter if i put the date value on    \"hs_meeting_start_time\" like this:\n1.   \"hs_meeting_start_time\": \"2021-03-*05*T01:02:44.872Z\",  or like this\n2.   \"hs_meeting_start_time\": \"2021-03-*5*T01:02:44.872Z\",\nDoes the 0 need to be in front or doesnt it matter?"
  }
]
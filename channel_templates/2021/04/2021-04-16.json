[
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-04-16 01:12:08",
    "edited": {
      "time_stamp": "2021-04-16 07:44:34"
    },
    "text": "<@U012F502T62> Changes you do on the DnD template sections are not reflected in your live pages. Changes you do outside the DnD areas get applied to your pages. Currently, there is no way that the editor can compare your DnD areas."
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-04-16 01:21:53",
    "text": "<@U01TKDUSYUA> You can add style blocks to the head of your html by using:\n`{% require_css %}`\n  `&lt;style&gt;`\n    `.my-style {`\n      `color: {{ module.style.color_field.color }};`\n    `}`\n  `&lt;/style&gt;`\n`{% end_require_css %}`\n\nOr you can use inline styles:\n`&lt;div style=\"color:{{ module.style.color_field.color }};\"&gt;(...)&lt;/div&gt;`"
  },
  {
    "poster": {
      "poster_name": "Amanda",
      "poster_handle": "amanda596"
    },
    "time_stamp": "2021-04-16 07:42:58",
    "text": "Oh cool, thanks so much!"
  },
  {
    "text": "<@UK9BKNBD5>, I added this code to the head of my html, but it's not changing the color of my element.\n\nIs there another step I need to take?",
    "time_stamp": "2021-04-16 08:13:59"
  },
  {
    "text": "I've tried both methods, and it looks like for both, it's not pulling in the color value.",
    "time_stamp": "2021-04-16 08:16:19"
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-04-16 08:33:00",
    "text": "^^ Place the snippet inside the module. HubL append it to the head, that is what `require_css` or `require_js` do."
  },
  {
    "text": "",
    "time_stamp": "2021-04-16 08:33:45"
  },
  {
    "text": "Inline looks like this:",
    "time_stamp": "2021-04-16 08:40:13"
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-04-16 08:48:37",
    "edited": {
      "time_stamp": "2021-04-16 08:49:08"
    },
    "text": "<@U01TKDUSYUA> And did you see in my snipped above i used an group called _style_, in your case your color field is not wrapped in a group, so remove that _style_ part from the hubl variable."
  },
  {
    "poster": {
      "poster_name": "Amanda",
      "poster_handle": "amanda596"
    },
    "time_stamp": "2021-04-16 09:09:47",
    "text": "<@UK9BKNBD5>, perfect! I've got it working (with your gracious help). Thank you so so much. :smile:"
  },
  {
    "poster": {
      "poster_name": "Mitja Lewin",
      "poster_handle": "m.lewin"
    },
    "time_stamp": "2021-04-16 09:10:39",
    "text": "<@U01TKDUSYUA> You're welcome"
  },
  {
    "poster": {
      "poster_name": "Keyur Patel",
      "poster_handle": "kpatel4"
    },
    "time_stamp": "2021-04-16 09:30:48",
    "text": "I suggest you use the Flexible column if it's possible in your case. That way you do not need to relay on the template modification but you can add your custom/default modules in the page itself.\n\nWhenever I create template, I try to make sure all dynamic things are part of Flexible Column, atleast where possible.\n\nI hope this helps, I know its not the solution but if you are not using it then certainly that is something that can help you."
  },
  {
    "text": "Is there a way to pass a text field value into pseudo element content?",
    "time_stamp": "2021-04-16 10:46:21",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2021-04-16 11:05:03"
      },
      {
        "time_stamp": "2021-04-16 11:15:05"
      }
    ]
  },
  {
    "text": "<@U01TKDUSYUA> Use _data_ attributes, like this:\n`&lt;div class=\"call-to-action-content\" data-content=\"{{ module.text_field }}\"&gt;&lt;/div&gt;`\n\nYou can enter the values with css:\n`.call-to-action-content[data-content]:before {`\n  `content: attr(data-content);`\n  `display: inline-block;`\n  `margin: 20px;`\n`}`",
    "time_stamp": "2021-04-16 11:05:03",
    "edited": {
      "time_stamp": "2021-04-16 11:06:02"
    }
  },
  {
    "poster": {
      "poster_name": "Amanda",
      "poster_handle": "amanda596"
    },
    "time_stamp": "2021-04-16 11:15:05",
    "text": "<@UK9BKNBD5>, you are a wonderful human! Thank you so much :pray:"
  }
]
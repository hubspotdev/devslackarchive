[
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 01:44:31",
    "text": "^ We're running into the same issue"
  },
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 01:44:55",
    "edited": {
      "time_stamp": "2024-03-08 01:45:14"
    },
    "text": "`The SSL connection could not be established, see inner exception. The remote certificate is invalid according to the validation procedure.|The SSL connection could not be established, see inner exception.|` \nat <http://System.Net|System.Net>.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\nat <http://System.Net|System.Net>.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\nat <http://System.Net|System.Net>.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\nat <http://System.Net|System.Net>.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\nat <http://System.Net|System.Net>.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\nat <http://System.Net|System.Net>.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\nat <http://System.Net|System.Net>.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\nat <http://System.Net|System.Net>.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\nat <http://System.Net|System.Net>.HttpWebRequest.SendRequest() at <http://System.Net|System.Net>.HttpWebRequest.GetResponse()|The remote certificate is invalid according to the validation procedure."
  },
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 01:53:18",
    "text": "<@U03N5FHUHQT> Do you know more?",
    "reply_count": 1,
    "reply_users_count": 1,
    "replies": [
      {
        "time_stamp": "2024-03-08 02:30:39"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Sergio Ponz [Tiralíneas]",
      "poster_handle": "sergio639"
    },
    "time_stamp": "2024-03-08 02:08:14",
    "text": "<@U064LRP19MZ> <@U01CT57M9A8> I just checked and there was a certificate renewal on <http://api.hubapi.com|api.hubapi.com> at Wed, 06 Mar 2024 23:08:49 UTC"
  },
  {
    "text": "It seems the certificate was updated last night, since then we've not been able to authenticate our HubSpot app",
    "time_stamp": "2024-03-08 02:08:25"
  },
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 02:09:48",
    "text": "Do you know what the resolution to this is? <@U039FTRBQ93> or do you not work for HubSpot?"
  },
  {
    "poster": {
      "poster_name": "Sergio Ponz [Tiralíneas]",
      "poster_handle": "sergio639"
    },
    "time_stamp": "2024-03-08 02:12:14",
    "text": "<@U064LRP19MZ> I don't work for HubSpot, but we have a ton of stuff running with the API. The cert I'm getting has a different validity than yours. Odd"
  },
  {
    "text": "",
    "time_stamp": "2024-03-08 02:12:16"
  },
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 02:14:43",
    "text": "My guess is that the time displayed is local time? The certificates themselves seem close enough."
  },
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 02:14:53",
    "text": "Are you also running into ssl certificate errors?"
  },
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 02:16:18",
    "text": "<@U039FTRBQ93>"
  },
  {
    "poster": {
      "poster_name": "Sergio Ponz [Tiralíneas]",
      "poster_handle": "sergio639"
    },
    "time_stamp": "2024-03-08 02:30:17",
    "text": "<@U064LRP19MZ> no issues on our end, the times shown are UTC"
  },
  {
    "poster": {
      "poster_name": "Willem Reus",
      "poster_handle": "wreus"
    },
    "time_stamp": "2024-03-08 02:30:39",
    "text": "Sorry, not much. All I can find is that there are new certificates, and some software bundles certificates from domains and keep including the old certificate, causing this to fail. But I have no clue on which software does that and if that would for instance be the firewall or anything like that?\nMy requests keep going through just fine, but that is no reinsurance whatsoever for you."
  },
  {
    "poster": {
      "poster_name": "Levon Stepanyan",
      "poster_handle": "levon"
    },
    "time_stamp": "2024-03-08 03:21:55",
    "text": "I tested different combinations and I got different outcomes... For example the same test with different engagement types gave different result. However I here is my conclusion based on Notes mainly.\n*Permanent delete:*\nIf the engagement had an attachment it is removed from the HubSpot and not accessible even with API. If the engagement was associated with other object record it gets deleted from there as well.\nIf the engagement doesn't have any attachments it stays in the HubSpot and accessible via API. If the engagement was associated with other object records it remains unchanged.\n*90 days restorable delete:* \nWithin 90 days all engagements data can be accessed via API and also from UI.\nSo the results with permanent delete seem very vague and I would rather backup all the info for safety. however there are some data that will be lost because it is not possible to fetch:\n_Attachments are accessible only if they exist in HubSpot Files. If they are uploaded to engagements from external sources they are not accessible via API_\n_Engagement's comments are not accessible via API._"
  },
  {
    "poster": {
      "poster_name": "Casper Kraken (HubDo)",
      "poster_handle": "casper928"
    },
    "time_stamp": "2024-03-08 03:43:35",
    "text": "The API limit for a public app is per portal, so each installed app has 100 request per 10 seconds in that customer portal, regardless of other apps :)"
  },
  {
    "poster": {
      "poster_name": "Scott Marion",
      "poster_handle": "scott943"
    },
    "time_stamp": "2024-03-08 05:51:34",
    "text": "Add filters to a filter group for the properties you want to search for:\n\n\t\"filters\": [\n\t\t{\n\t\t\t\"propertyName\": \"prop1_name\",\n\t\t\t\"operator\": \"EQ\"\n\t\t\t\"value\": \"prop1_value\"\n\t\t},\n\t\t{\n\t\t\t\"propertyName\": \"prop2_name\",\n\t\t\t\"operator\": \"EQ\"\n\t\t\t\"value\": \"prop2_value\"\n\t\t}\n\t]\n\nI'm also giving a shoutout to erindigsmusic who recently posted a nice example of using the SearchCRM API on the HubSpot Developers community page:\n\n<https://community.HubSpot.com/t5/APIs-Integrations/How-to-search-contacts-using-keywords/td-p/937690>"
  },
  {
    "poster": {
      "poster_name": "Tommie van Zegveld",
      "poster_handle": "tommie.vanzegveld"
    },
    "time_stamp": "2024-03-08 06:49:04",
    "text": "So we ended up fixing the issue. The certificate was cached and wasn't cleared properly when the new certificate was issued :ok_hand:"
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 06:52:01",
    "text": ":+1:"
  },
  {
    "poster": {
      "poster_name": "Stacey Levine",
      "poster_handle": "stacey856"
    },
    "time_stamp": "2024-03-08 06:59:23",
    "text": "Thanks. I got it working.."
  },
  {
    "poster": {
      "poster_name": "Casey Vassios",
      "poster_handle": "cvassios"
    },
    "time_stamp": "2024-03-08 08:34:54",
    "text": "<@U039FTRBQ93> <@U064LRP19MZ> thank you for finding that out, and posting the fix. Seems like the type of thing HubSpot should send an email out about",
    "reply_count": 5,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2024-03-08 11:18:46"
      },
      {
        "time_stamp": "2024-03-08 11:37:45"
      },
      {
        "time_stamp": "2024-03-08 17:03:24"
      },
      {
        "time_stamp": "2024-03-15 08:16:47"
      },
      {
        "time_stamp": "2024-03-15 08:50:12"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Önder Günaçan",
      "poster_handle": "onder"
    },
    "time_stamp": "2024-03-08 09:22:10",
    "text": "Hey all!\nI am working on a webHook that I set up. More specifically, it’s for `deal.propertyChange`. The event object has a property called `propertyValue` which is a string field for the `dealstage` field in the deal object. The expected values of this property are something like “qualifiedtobuy”, “presentationscheduled”, etc. However, this is randomly returning a number string or a uuid. I checked the configuration for the webhook and it seems correct. We also have this exact webhook setup in a development (sandbox?) account, and that one works correctly. I compared the webhook setup for both environments and they are identical. Any thoughts?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2024-03-08 09:51:36"
      },
      {
        "time_stamp": "2024-03-08 12:38:35"
      },
      {
        "time_stamp": "2024-03-08 13:00:12"
      },
      {
        "time_stamp": "2024-03-08 15:58:30"
      },
      {
        "time_stamp": "2024-03-11 09:01:00"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Önder Günaçan",
      "poster_handle": "onder"
    },
    "time_stamp": "2024-03-08 09:22:44",
    "text": "Apologies in advance if this is not the right place to post this, and I can remove it if that’s the case."
  },
  {
    "poster": {
      "poster_name": "Önder Günaçan",
      "poster_handle": "onder"
    },
    "time_stamp": "2024-03-08 09:51:36",
    "edited": {
      "time_stamp": "2024-03-08 09:57:20"
    },
    "text": "Actually, I just checked and looks like those numbers and uuids are how deal stage values are stored internally in the deal object. Not sure why or how to change that."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 10:44:20",
    "text": "Those are some solid findings - This makes what you want to do a bit challenging and not very practical.  Have you thought about marking all the contacts as \"non-marketing\" contacts and adding a field like \"Archived\" == Yes and then using this in lists for suppressions and stuff."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 10:44:43",
    "text": "Maybe it's better to just keep it in your account but have better filters to improve the view of relevant contacts"
  },
  {
    "poster": {
      "poster_name": "SJ Morris (she/her)",
      "poster_handle": "sjmorris"
    },
    "time_stamp": "2024-03-08 11:18:46",
    "text": "Hey all! Thanks for posting about this publicly. I'm going to pass on this exchange to our engineering team and I'll let you know if I hear anything back about this incident."
  },
  {
    "poster": {
      "poster_name": "Casey Vassios",
      "poster_handle": "cvassios"
    },
    "time_stamp": "2024-03-08 11:37:45",
    "text": "<@UQNEXHW14> thank you for monitoring. I haven't figured out how to clear the ssl cert cache for our setup, so if they have any other solutions, I would greatly appreciate hearing back."
  },
  {
    "poster": {
      "poster_name": "Oleh Rabchuck",
      "poster_handle": "winner.dev.20"
    },
    "time_stamp": "2024-03-08 12:38:35",
    "text": "Can you show me some examples, please?"
  },
  {
    "poster": {
      "poster_name": "Önder Günaçan",
      "poster_handle": "onder"
    },
    "time_stamp": "2024-03-08 13:00:12",
    "text": "sandbox event object:\n\n```{\n  \"eventId\": 12345678,\n  \"subscriptionId\": 123456787,\n  \"portalId\": 9876543,\n  \"appId\": 1111111,\n  \"occurredAt\": 1709840184437,\n  \"subscriptionType\": \"deal.propertyChange\",\n  \"attemptNumber\": 0,\n  \"objectId\": 2222222222,\n  \"propertyName\": \"dealstage\",\n  \"propertyValue\": \"qualifiedtobuy\",\n  \"changeSource\": \"CRM_UI\",\n  \"sourceId\": \"userId:123123123\"\n}```\nprod event object:\n\n```{\n  \"eventId\": 123456789,\n  \"subscriptionId\": 123456789,\n  \"portalId\": 123456789,\n  \"appId\": 12345,\n  \"occurredAt\": 1709910853031,\n  \"subscriptionType\": \"deal.propertyChange\",\n  \"attemptNumber\": 0,\n  \"objectId\": 33333333,\n  \"propertyName\": \"dealstage\",\n  \"propertyValue\": \"1a2b3c4d-f1ea-4c78-a424-bfb0e9e8034f\",\n  \"changeSource\": \"CRM_UI\",\n  \"sourceId\": \"userId:999999\"\n}```"
  },
  {
    "poster": {
      "poster_name": "Levon Stepanyan",
      "poster_handle": "levon"
    },
    "time_stamp": "2024-03-08 13:00:26",
    "text": "Hmmm.. interesting approach. What would it give me. So basically the contacts will stay in HubSpot and will be visible right? I am not sure what kind of supressions are possible to do with lists and if this what what we are looking for."
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 13:03:10",
    "text": "Contacts would remain in HubSpot but you would update all your views to have a filter (not in list \"Archived Contacts\")"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 13:03:22",
    "text": "Archived Contacts would be a list where \"Archived\" == True"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 13:04:38",
    "text": "Then for you workflows there are ways to add lists as Suppression"
  },
  {
    "text": "",
    "time_stamp": "2024-03-08 13:04:43"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 13:05:14",
    "text": "It's not perfect, it's a workaround"
  },
  {
    "poster": {
      "poster_name": "Ryan Ginsberg",
      "poster_handle": "ryan294"
    },
    "time_stamp": "2024-03-08 13:05:46",
    "text": "It would be nice for HubSpot to provide a way to \"archive\" contacts natively"
  },
  {
    "text": "custom pipelines or deal stages have uuids you can find them in the Settings &gt; Data Management -Objects - Deals &gt; Pipelines.. I think this is what you need to check if they are the same ids for the stages.",
    "time_stamp": "2024-03-08 15:58:30"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2024-03-08 17:03:24",
    "text": "a post would be helpful from the HubSpot team. We were also affected by this"
  },
  {
    "poster": {
      "poster_name": "Roshan Gautam",
      "poster_handle": "roshangm01"
    },
    "time_stamp": "2024-03-08 17:36:23",
    "edited": {
      "time_stamp": "2024-03-09 03:09:16"
    },
    "text": "Are there any endpoints available for the Business Card Scanner that I can use in my own app ?",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-03-09 04:21:49"
      },
      {
        "time_stamp": "2024-03-09 12:08:24"
      },
      {
        "time_stamp": "2024-03-10 04:31:12"
      },
      {
        "time_stamp": "2024-03-10 16:11:53"
      },
      {
        "time_stamp": "2024-03-10 16:14:48"
      },
      {
        "time_stamp": "2024-03-11 03:43:15"
      },
      {
        "time_stamp": "2024-03-11 03:43:33"
      }
    ]
  }
]
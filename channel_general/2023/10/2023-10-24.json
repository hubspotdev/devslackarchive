[
  {
    "poster": {
      "poster_name": "Hafiz Osama",
      "poster_handle": "osamahafiz2014"
    },
    "time_stamp": "2023-10-24 05:31:41",
    "text": "Hi <@U05UPMU10SE>,\n\nCan you please suggest the certification or courses for this type of implementation?\n\nThanks,"
  },
  {
    "poster": {
      "poster_name": "Jonathan Bredo",
      "poster_handle": "jonathan355"
    },
    "time_stamp": "2023-10-24 05:32:28",
    "text": "This is a newly released part of the HubSpot ecosystem, so I’m not sure that there is any. However, it’s just a simplified subset of React"
  },
  {
    "poster": {
      "poster_name": "Jonathan Bredo",
      "poster_handle": "jonathan355"
    },
    "time_stamp": "2023-10-24 05:32:45",
    "text": "So if you’re familiar with React and JSX this should not be a problem"
  },
  {
    "poster": {
      "poster_name": "Hafiz Osama",
      "poster_handle": "osamahafiz2014"
    },
    "time_stamp": "2023-10-24 05:33:50",
    "text": "Hmm...\nThank you so much :slightly_smiling_face: for your quick response."
  },
  {
    "poster": {
      "poster_name": "Hafiz Osama",
      "poster_handle": "osamahafiz2014"
    },
    "time_stamp": "2023-10-24 06:11:22",
    "text": "Hi team,\n\nCan we add a WordPress-hosted website in the HubSpot sitemap?\nPlease suggest.\n\nThanks,"
  },
  {
    "subtype": "bot_message",
    "text": ":orange_heart:*Please take a moment to review our Code of Conduct*:orange_heart:\n\nWe want the HubSpot Developer community to be inclusive and welcoming. By following our Code of Conduct, you can help ensure that's the case.\n\nTL;DR:\n• Be respectful\n• Be inclusive (try not to say, \"Hey guys, hey boys, hey [any specific group]\")\n• No self promotion, except for <#C0121KGC6RM|showcase> and <#CBNDYJJAZ|jobs> \n• No unsolicited DMs\nRead the <https://developers.HubSpot.com/slack/code-of-conduct|whole thing here> - and thanks for being a part of the HubSpot Developer Community!\n\nWant to report a violation? DM <@UQNEXHW14> or fill out the <https://form.asana.com/?k=p7aM0fpd3G4JGETDL_nYXg&amp;d=8587152060687|anonymous form here>.",
    "username": "Code of Conduct Reminder",
    "time_stamp": "2023-10-24 09:00:03",
    "edited": {
      "time_stamp": "2023-10-24 09:00:17"
    }
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2023-10-24 09:21:50",
    "text": "I will build my service completely separated from HubSpot and only touch it with a 6 feet stick whenever inevitable (e.g. feeding the API). Looks like I won't like HubSpot anytime soon."
  },
  {
    "poster": {
      "poster_name": "Justin Briones",
      "poster_handle": "justin238"
    },
    "time_stamp": "2023-10-24 10:57:30",
    "text": "hey all! Wondering if anyone else has experienced this..\n\nI reached out to support and summarized the issue within this loom video. Feel free to take a look:\n<https://www.loom.com/share/1b6ede17ce6d48dda4ef50975dbabcb2?sid=b9cbcdfa-9d5f-4afe-81c9-4bf34be29eee>\n\n*goal:* strip the “company domain name” of any extras like:\n• www.\n• http://\n• https://\n• etc\nI’m trying to use the custom code feature via a workflow as explained in my loom video above. However, once I have it in an output variable (string) it won’t write to the company domain name field for some reason even though I believe it’s also a string type.\n\nAnyone else work with that feature? I’m using node.js (javascript)",
    "reply_count": 10,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2023-10-24 12:06:47"
      },
      {
        "time_stamp": "2023-10-24 12:37:46"
      },
      {
        "time_stamp": "2023-10-24 12:38:57"
      },
      {
        "time_stamp": "2023-10-24 13:10:40"
      },
      {
        "time_stamp": "2023-10-24 13:17:52"
      },
      {
        "time_stamp": "2023-10-24 13:20:14"
      },
      {
        "time_stamp": "2023-10-24 13:44:05"
      },
      {
        "time_stamp": "2023-11-03 21:23:56"
      },
      {
        "time_stamp": "2023-11-03 21:36:06"
      },
      {
        "time_stamp": "2023-11-04 11:19:55"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-10-24 12:06:47",
    "text": "might be that your output name “domain” is clashing with the internal HS property “domain”"
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-10-24 12:37:46",
    "text": "I was able to make it work by creating a new property, like clean_domain on company and setting that property and then making a second copy property to copy the dummy property to the main domain property."
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-10-24 12:38:57",
    "text": "also note that the domain property has validation on it, so .<http://example.com|example.com> will be rejected for example. Also, I’m not sure if the HS company enrichment setting will overwrite to domains you set"
  },
  {
    "poster": {
      "poster_name": "Justin Briones",
      "poster_handle": "justin238"
    },
    "time_stamp": "2023-10-24 13:10:40",
    "text": "ah so we basically have to write the output variable to a dummy property then using the “copy property value” feature to copy it to the main domain property. I’ll give that a try <@U034X9K26MD>! I appreciate the insight"
  },
  {
    "poster": {
      "poster_name": "Justin Briones",
      "poster_handle": "justin238"
    },
    "time_stamp": "2023-10-24 13:17:52",
    "text": "<@U034X9K26MD> that solution worked! I think the copy property step is redundant, wouldn’t you agree? any idea why we have to go through that step? I just want to understand why the data types clashed and caused issue"
  },
  {
    "poster": {
      "poster_name": "Schuyler Maclay",
      "poster_handle": "smaclay"
    },
    "time_stamp": "2023-10-24 13:20:14",
    "text": "No clue why, seems like a bug to me. I don’t know if its just the domain property or if it affects others as well."
  },
  {
    "poster": {
      "poster_name": "Justin Briones",
      "poster_handle": "justin238"
    },
    "time_stamp": "2023-10-24 13:44:05",
    "text": "interesting.. maybe it just applies to the out of the box properties?"
  }
]
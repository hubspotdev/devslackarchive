[
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-11-09 02:36:46",
    "text": "hello sir <@U01QVR44MEY>,  I found something about this pagination code here <https://designers.HubSpot.com/code-gallery/entry/us/dontgojasonwaterfalls-blog-numbered-pagination>.  Is that code will work on my deals page ? let me know thanks"
  },
  {
    "poster": {
      "poster_name": "Twentyninetimes",
      "poster_handle": "tech817"
    },
    "time_stamp": "2022-11-09 02:40:24",
    "edited": {
      "time_stamp": "2022-11-09 02:55:09"
    },
    "text": "We’ve just finished a language switcher that checks all languages in variable langCodes\n\nIf a page url is not translated to one or more of the active languages in langCodes, then it will add the url to said language homepage.\nHowever if a page url is translated to one or more languages in langCodes then it will add the url for the translated page per language.\n\nHope it will help someone out in a similar situation:\n\n```&lt;ul class=\"language__options js-language__options\"&gt;\n\t{# Language codes #}\n    {% set langCodes = {'English': 'en', 'Dansk': 'da'} %}\n\n    {# Language loop #}\n    {% for key, val in langCodes.items() %}\n        {# Discard current page language and check if other languages have translations of the current page #}\n        {% if content.translated_content[val].slug is none and val != content.language.languageTag %}\n            {# If a page is not translated to one or more of the languages in langCodes, then add a url to said language homepage #}\n            {% set URL = \"/{{ val }}\" %}\n        {% else %}\n            {# If val is not equal to the current page language AND a translation exists, then add the url to the translated page #}\n            {% if val != content.language.languageTag %}\n                {% set URL = \"/\"~content.translated_content[val].slug %}\n            {% else %}\n                {# If val equals the current page, then add the current url through request.path or simply set URL to '' #}\n                {% set URL = request.path %}\n            {% endif %}                                \n        {% endif %}\n\n        {# Language selector #}\n        &lt;li&gt;\n            &lt;a class=\"language__options-item\" href=\"{{ URL }}\" title=\"{{ key }}\"&gt;\n                {# Flag icon - Make sure to upload svg flags name by val. E.g. de.svg, en.svg etc. in a /flags folder or similar #}                                \n                &lt;img src=\"{{ base_url }}/flags/{{ val }}.svg\" loading=\"lazy\" width=\"18\" height=\"18\" alt=\"{{ key }}\"&gt;\n                {# Language #}\n                &lt;span&gt;{{ key }}&lt;/span&gt;\n            &lt;/a&gt;\n        &lt;/li&gt;\n    {% endfor %}   \n&lt;/ul&gt;```"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-09 06:23:31",
    "text": "Well that more meant for paginating blogs, and you are trying to paginate crm objects so somewhat different in the way that you'll pull information but definitely the same concept"
  },
  {
    "poster": {
      "poster_name": "Neil Junsan",
      "poster_handle": "neiljunsan09"
    },
    "time_stamp": "2022-11-09 06:46:52",
    "text": "can you give me some reference links sir or share me some sample code that get the pagination working :see_no_evil: to implement that concept sir. I don't see any on online as HubSpot page with with deals results + paginated. why is that no task ever done like this one sir ?"
  },
  {
    "poster": {
      "poster_name": "Neil Junsan",
      "poster_handle": "neiljunsan09"
    },
    "time_stamp": "2022-11-09 07:47:58",
    "text": "<@U01QVR44MEY> Sir can we discussed about the rate ., Want to work with you just this task only. Thanks"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2022-11-09 07:52:22",
    "edited": {
      "time_stamp": "2022-11-09 07:52:57"
    },
    "text": "Sorry I wasn’t clear in my response, I blame it on being sick yesterday, my mind was hazey. The answer is you wouldn’t. Especially in the case of currency where the value fluctuates constantly you’d want to separate the template/page rendering from the actual currency values otherwise your page would be re-rendering constantly resulting in a slower rendering page. So instead you use client side JavaScript to grab values that are constantly changing. Enabling your page to not just be prerendered, but cached and served across a wide CDN, and only have the currency data be net new."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-09 07:53:10",
    "text": "Hey Neil, currently I'm not looking for anymore work. A couple of people you could ask and see if they're interested to work on this (and be payed obviously) are <@U25PYL3Q8>, <@U01B8FBQ6QL>, <@UQWGKUEN7> it's a pretty simple project but I really just don't have the time right now"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:01:56",
    "text": "Hey Neil, pagination is pretty complicated and there are many ways to go about it. When people copy/paste pagination code, they have no clue what it does, so if it isn’t a direct fit, nothing works correctly. Unless you understand the concepts of pagination and the edge cases and how all of that works, then you are faced with a huge uphill battle. And until someone creates their own pagination to deal with this stuff — then they just don’t get the concepts. That is why you don’t see people talking about how to do this stuff — it can be pretty painful.\n\n\nThat being said, our team could set up pagination for this module for you. We could jump into this next week. We’d probably rewrite some of the code in the process. If you’d like to discuss this a bit more, we can talk tomorrow or Friday: <https://deckerdevs.com/meetings/nicholas-loves-meetings/quality-time-together>\n\nGenerally I charge $1500 for a block of hours to get something like this completed, and if we have extra hours we can do consulting or offer other services"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-11-09 08:02:59",
    "text": "I charge $1499 for a block of hours"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-11-09 08:03:13",
    "text": "jk jk"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:03:15",
    "text": "How many hours does that include BJ?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:03:25",
    "text": "Mine includes .20 more"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-11-09 08:03:38",
    "text": "Roughly a block to get somehting like this completed :slightly_smiling_face:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:04:01",
    "text": "When you look at a block like this — does it give you the sense that another block like that exists"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:04:16",
    "text": "like could <@U01B8FBQ6QL> also have a block like you?"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski",
      "poster_handle": "anton.bujanowski"
    },
    "time_stamp": "2022-11-09 08:04:24",
    "text": "guys..."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-11-09 08:05:16",
    "text": "Hahahaha Im so slammed atm I most def cant take on even the smallest of tasks"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski",
      "poster_handle": "anton.bujanowski"
    },
    "time_stamp": "2022-11-09 08:05:45",
    "text": "are we on a bazaar right now? Who's cheaper and who can provide help quicker?"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-11-09 08:06:27",
    "text": "Hahaha no no I was entirely doing it in jest"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:07:33",
    "text": "I can’t do it til next week, so Anton if you are available, go for it"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:07:47",
    "text": "I personally will never be upset if either of you get work over me (or really anyone)"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:07:59",
    "text": "and I’m okay with people pricing below me, there is so much work out there :wink:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:08:14",
    "text": "as long as Neil gets help, I think that makes me happy"
  },
  {
    "poster": {
      "poster_name": "Anton Bujanowski",
      "poster_handle": "anton.bujanowski"
    },
    "time_stamp": "2022-11-09 08:08:15",
    "text": "I'm also full rn. Go get it BJ"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-11-09 08:09:10",
    "text": "Oh no no I can’t at all as mentioned above. That and the fact that I can be a sass-pants to nicholas without him being offended is the reason why I felt comfortable with that one dollar undercut."
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2022-11-09 08:09:27",
    "text": "So its all you <@U25PYL3Q8>!"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-11-09 08:09:33",
    "text": "LOL Neil, if you’ll have me"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-09 08:09:49",
    "text": "I can definitely appreciate a one dollar undercut"
  },
  {
    "time_stamp": "2022-11-09 08:10:34",
    "text": "be mine valentines"
  },
  {
    "text": "What am I doing wrong here, or does `CUSTOM REGEX` simply not respect a text value?\n\nI'm use to using custom regex with a number value like `[1,2,3]` but I'm hoping to use it in combination with a `CHOICE` field type.\n\nAm I writing this incorrectly?  I've try without quotes, single quotes, etc.\n\nAny help is appreciated.",
    "time_stamp": "2022-11-09 13:26:42",
    "edited": {
      "time_stamp": "2022-11-09 13:27:18"
    },
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-09 13:47:48"
      },
      {
        "time_stamp": "2022-11-09 13:49:00"
      },
      {
        "time_stamp": "2022-11-09 13:49:46"
      },
      {
        "time_stamp": "2022-11-09 13:50:06"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-11-09 13:47:48",
    "edited": {
      "time_stamp": "2022-11-09 13:49:08"
    },
    "text": "I am guessing what you're trying to do is write a regex such that it will be true if the value is one of `icon`, `image` , or `text`\n\nYou'd want a regex that's more like `icon|image|text`\n\n`[1,2,3]` matches any one character of this set: `123,`\n`[\"icon\", \"image\", \"text\"]` matches any one character of this set: `\", acegimnotx`"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-09 13:49:00",
    "text": "<@UCJANAW1Y> yes, that's exactly what I'm trying to accomplish. I didn't know pipes would do the trick"
  },
  {
    "poster": {
      "poster_name": "Jack Smith",
      "poster_handle": "jasmith"
    },
    "time_stamp": "2022-11-09 13:49:46",
    "text": "A pipe means logical OR in regular expressions"
  },
  {
    "poster": {
      "poster_name": "Kevin Fremon",
      "poster_handle": "kevin"
    },
    "time_stamp": "2022-11-09 13:50:06",
    "text": "Boom! You're a life saver."
  }
]
[
  {
    "poster": {
      "poster_name": "Albert Soriano",
      "poster_handle": "soriano"
    },
    "time_stamp": "2019-09-11 03:33:38",
    "text": "Hi guys, quick question about *FOR loops*, hope someone can help me.\n\nI have a for loop that iterates through all my post in a blog and shows the title of them with a specific tag. Imagine I have a list of 100 posts and 30 of them have the tag \"Android\". I need to change a bit the HTML of the first 5 items of this generated list but I cannot find a way to do it since loop.index doesn't work in this case as the loop is 100 and posts are not in order by tag.\n\nDo you have any idea on how to fix it?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2019-09-11 03:46:10"
      },
      {
        "time_stamp": "2019-09-11 07:33:57"
      },
      {
        "time_stamp": "2019-09-11 07:47:35"
      },
      {
        "time_stamp": "2019-09-11 14:33:11"
      },
      {
        "time_stamp": "2019-09-17 01:50:44"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Erik Hooijer",
      "poster_handle": "ehooijer"
    },
    "time_stamp": "2019-09-11 03:46:10",
    "text": "Can you use this: <https://designers.HubSpot.com/docs/hubl/blog-content-markup#listing_topics>"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-09-11 07:17:59",
    "text": "Guys, I simplified the question and posted it on the forum, if anyone can help. In the meantime, I'm trying to excalate for official support <https://community.HubSpot.com/t5/CMS-Development/Contact-tokens-in-email-modules-issue/m-p/290715#M13570>",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2019-09-11 07:30:09"
      },
      {
        "time_stamp": "2019-09-11 08:25:30"
      },
      {
        "time_stamp": "2019-09-11 08:30:53"
      },
      {
        "time_stamp": "2019-09-11 08:31:03"
      },
      {
        "time_stamp": "2019-09-11 10:43:40"
      },
      {
        "time_stamp": "2019-09-11 11:11:20"
      },
      {
        "time_stamp": "2019-09-12 03:04:40"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-09-11 07:30:09",
    "text": "Hey <@UAX5LJ9K3> the contact tokens get filled in last so the renderer works in the wrong order. The filters and functions execute and then the contact tokens get filled in. That’s why you are getting the results you are. The only workaround would be to store whatever you want in the email, html and all in the contact property itself so you would do {{contact.color_html}} and {{contact.model_html}} or something like that"
  },
  {
    "poster": {
      "poster_name": "Albert Soriano",
      "poster_handle": "soriano"
    },
    "time_stamp": "2019-09-11 07:33:57",
    "text": "<@UHC710Q1E> the problem is not the loop listing but having an IF statement inside (or similar) to add an extra class to the 5 first elements of the list and then continue listing the rest without this class. In another programing language I would create a variable outside the loop and increase it in the loop and also using it as IF statement. HubL doesn't seem to support that."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2019-09-11 07:47:35",
    "text": "```{% for post in posts %}\n     {% if loop.index &lt; 6 %}YOUR STUFF HERE UP TO FIVE{% else %}\nYOUR STUFF HERE AFTER 5\n{% endif %}\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-09-11 08:25:30",
    "text": "The reason why i'm trying to do it this way is because we have more than 20 models and more than 20 colors. Workflows are limited to 19 \"if\", so we can't handle all the codes. We can't change the internal values also, because dealers need to read the entire color, not our value.\n\nMoreover, why a filter should be rendered before injecting the value? Filters exists for a data presentation scope. If they can't work, it should not be possible to use them in email modules except for raw output. This is a bug to me.\n\nBtw, we can't simply create a property everytime we need to present data in different ways. This is not possible at all in enterprise accounts, because they already have tons of properties for good reasons and it's not possible to duplicate them for data representation purposes."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-09-11 08:30:53",
    "text": "&gt; Moreover, why a filter should be rendered before injecting the value?\nIt’s just for email, other content renders the way you would expect.  It’s something that’s being worked on but I’m not sure exactly when that will be ready\n\nIt sounds like what what you need is actually do using something that’s related to a contact like Deals rather than trying to fit this into a Contact record."
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-09-11 08:31:03",
    "text": "How does one select what color and model they want?"
  },
  {
    "poster": {
      "poster_name": "Luca Bartoli",
      "poster_handle": "bartoli"
    },
    "time_stamp": "2019-09-11 10:43:40",
    "text": "with a dropdown select"
  },
  {
    "poster": {
      "poster_name": "Zack Wolfson",
      "poster_handle": "zwolfson"
    },
    "time_stamp": "2019-09-11 11:11:20",
    "text": "ok, so it’s a regular form it sounds like.  I was wondering if it was external to HubSpot because with our APIs there may be some things you can do but I’m not sure they will actually help your particular situation.  I’m m going to make sure to add your use case to our internal idea tracker to help push up the priority of re-ordering the email token rendering."
  },
  {
    "poster": {
      "poster_name": "Sylvain Tirreau",
      "poster_handle": "sylvain"
    },
    "time_stamp": "2019-09-11 14:18:00",
    "edited": {
      "time_stamp": "2019-09-11 14:18:42"
    },
    "text": "Hello. I wrote a rem macro. When I use it, to not having many lines and blank spaces in my css between my property and my value, I have to write this: `padding: {{ sizes.rem(10) | cut('\\n') | cut(' ') }}`. Is there a way to delete blank lines and spaces before calling macro, in order to just write: `padding: {{ sizes.rem(10) }}`?",
    "reply_count": 7,
    "reply_users_count": 4,
    "replies": [
      {
        "time_stamp": "2019-09-11 14:23:03"
      },
      {
        "time_stamp": "2019-09-11 14:27:10"
      },
      {
        "time_stamp": "2019-09-11 14:39:16"
      },
      {
        "time_stamp": "2019-09-11 18:59:36"
      },
      {
        "time_stamp": "2019-09-12 01:44:46"
      },
      {
        "time_stamp": "2019-09-12 01:46:52"
      },
      {
        "time_stamp": "2019-09-12 07:27:28"
      }
    ]
  },
  {
    "text": "Hi <@UM4EYDDAS>, you need use comments in your macro",
    "time_stamp": "2019-09-11 14:23:03"
  },
  {
    "poster": {
      "poster_name": "Sylvain Tirreau",
      "poster_handle": "sylvain"
    },
    "time_stamp": "2019-09-11 14:27:10",
    "edited": {
      "time_stamp": "2019-09-11 14:27:34"
    },
    "text": "Thanks Diego. But I find it very time-consuming and it produce a code not very clean... But thank you. I keep it if I don't find something better."
  },
  {
    "poster": {
      "poster_name": "Erik Hooijer",
      "poster_handle": "ehooijer"
    },
    "time_stamp": "2019-09-11 14:33:11",
    "text": ":point_up:"
  },
  {
    "poster": {
      "poster_name": "AJ LaPorte",
      "poster_handle": "ajlaporte"
    },
    "time_stamp": "2019-09-11 14:39:16",
    "text": "Hey <@UM4EYDDAS> do you have a link to your file where you wrote your macro that you can DM me?"
  },
  {
    "poster": {
      "poster_name": "Stefen Phelps",
      "poster_handle": "stefen"
    },
    "time_stamp": "2019-09-11 18:59:36",
    "text": "i believe you can strip whitespace by using a `-` symbol like so `{%- hubl things -%}`"
  }
]
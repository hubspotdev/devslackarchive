[
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2024-04-19 10:35:15",
    "text": "How can I effectively manage a module intended for both inclusion in my theme and as a standalone module in the marketplace? Specifically, should I maintain separate copies of the module for each environment, or perhaps use some sort of conditional flags within the module code to differentiate its behavior based on where it's used? Imagining something like:\n```{% if env == \"marketplace\" %}\n  .card-group {\n    ...\n  }\n{% endif %}```\n",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2024-04-19 14:37:01"
      },
      {
        "time_stamp": "2024-04-19 14:38:38"
      },
      {
        "time_stamp": "2024-04-19 14:56:14"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Maxwell Brosofsky",
      "poster_handle": "mbrosofsky"
    },
    "time_stamp": "2024-04-19 14:37:01",
    "text": "Hey David, in order to submit it, you need to maintain a separate version of it outside of you theme's folder. Given this is the case, creating a standalone version that is _compatible_ with _most_ themes, and maintaining it separately from the module _optimized_ for your theme is probably the best solution.\n\nThe guidelines also require that avoid having unused code in your module. If the conditional flags would never be met then the contained code would technically be _unused_."
  },
  {
    "poster": {
      "poster_name": "Maxwell Brosofsky",
      "poster_handle": "mbrosofsky"
    },
    "time_stamp": "2024-04-19 14:38:38",
    "text": "Just some food for thought, as we also don't really have guidance on doing this...\n\nTheoretically setting some sort of variable in your base.html file and then having the module work a certain way based on that variable _could work_ but it sounds more complex than necessary"
  },
  {
    "poster": {
      "poster_name": "David Roma",
      "poster_handle": "droma"
    },
    "time_stamp": "2024-04-19 14:56:14",
    "text": "<@U01AS49TB0T> This is good advice - thank you. I was basically brainstomring to see if it was possible/worth the effort to devise a system for creating one module that could deploy to multiple environments (eg: multiple themes, a client's portal, the marketplace, etc...) - but yeah, after working on this today I've basically arrived at a similar conclusion. Thanks again for the reply!"
  }
]
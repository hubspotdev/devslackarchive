[
  {
    "poster": {
      "poster_name": "Chriso Klepke",
      "poster_handle": "christoph.klepke443"
    },
    "time_stamp": "2022-09-01 01:15:05",
    "text": "Do you have any experiences? I have a client that response times for for example creating a contact are not “instant”. I never had trouble with this but I don’t know how HubSpot handles higher volumes"
  },
  {
    "poster": {
      "poster_name": "Kurt",
      "poster_handle": "kurt429"
    },
    "time_stamp": "2022-09-01 04:22:13",
    "edited": {
      "time_stamp": "2022-09-01 04:23:32"
    },
    "text": "Hi HubDevs,\nTrying to create an email via the API, got all the fields working, but submitting the @\\HubSpot/email/dnd/Start_from_scratch via the API seems to be ignored. Is this not possible or am I doing something wrong?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 05:22:24",
    "text": "Hi,\nquestion regarding the *Conversations SDK:*\nI don’t want the chat widget to appear regularly.\nI have a button that toggles the widget’s visibility, I did it with css and not with `window.HubSpotConversations.widget.remove()` because I want the user to be able to show/hide the widget without loosing it’s data (the widget data, messages etc).\nthe problem is that sometimes when I refresh the page, the widget is loaded and shown, even though I set `loadImmediately: false` under the settings object.\n\nI found that `window.HubSpotConversations.widget.status().pending` is `true` *SOMETIMES* after I refresh and the widget is visible.\nso I’m using this condition to hide it, *BUT* it’s not bullet-proof :disappointed:\n\nanyone can help?\nthanks!",
    "reply_count": 99,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-09-01 06:30:04"
      },
      {
        "time_stamp": "2022-09-01 06:31:37"
      },
      {
        "time_stamp": "2022-09-01 06:33:09"
      },
      {
        "time_stamp": "2022-09-01 06:33:44"
      },
      {
        "time_stamp": "2022-09-01 06:34:08"
      },
      {
        "time_stamp": "2022-09-01 06:35:37"
      },
      {
        "time_stamp": "2022-09-01 06:36:01"
      },
      {
        "time_stamp": "2022-09-01 06:36:12"
      },
      {
        "time_stamp": "2022-09-01 06:37:50"
      },
      {
        "time_stamp": "2022-09-01 06:38:44"
      },
      {
        "time_stamp": "2022-09-01 06:42:41"
      },
      {
        "time_stamp": "2022-09-01 06:43:05"
      },
      {
        "time_stamp": "2022-09-01 06:43:52"
      },
      {
        "time_stamp": "2022-09-01 06:44:23"
      },
      {
        "time_stamp": "2022-09-01 06:44:38"
      },
      {
        "time_stamp": "2022-09-01 06:44:58"
      },
      {
        "time_stamp": "2022-09-01 06:45:11"
      },
      {
        "time_stamp": "2022-09-01 06:46:52"
      },
      {
        "time_stamp": "2022-09-01 06:47:22"
      },
      {
        "time_stamp": "2022-09-01 06:47:31"
      },
      {
        "time_stamp": "2022-09-01 06:48:53"
      },
      {
        "time_stamp": "2022-09-01 06:49:20"
      },
      {
        "time_stamp": "2022-09-01 06:49:36"
      },
      {
        "time_stamp": "2022-09-01 06:49:41"
      },
      {
        "time_stamp": "2022-09-01 06:50:43"
      },
      {
        "time_stamp": "2022-09-01 06:50:48"
      },
      {
        "time_stamp": "2022-09-01 06:51:17"
      },
      {
        "time_stamp": "2022-09-01 06:51:59"
      },
      {
        "time_stamp": "2022-09-01 06:52:02"
      },
      {
        "time_stamp": "2022-09-01 06:54:08"
      },
      {
        "time_stamp": "2022-09-01 09:39:17"
      },
      {
        "time_stamp": "2022-09-01 09:39:51"
      },
      {
        "time_stamp": "2022-09-01 09:40:02"
      },
      {
        "time_stamp": "2022-09-01 09:40:12"
      },
      {
        "time_stamp": "2022-09-01 09:40:15"
      },
      {
        "time_stamp": "2022-09-01 09:41:11"
      },
      {
        "time_stamp": "2022-09-01 09:41:27"
      },
      {
        "time_stamp": "2022-09-01 09:41:35"
      },
      {
        "time_stamp": "2022-09-01 09:58:15"
      },
      {
        "time_stamp": "2022-09-01 10:00:07"
      },
      {
        "time_stamp": "2022-09-01 12:39:43"
      },
      {
        "time_stamp": "2022-09-01 12:48:24"
      },
      {
        "time_stamp": "2022-09-01 13:05:11"
      },
      {
        "time_stamp": "2022-09-01 13:05:24"
      },
      {
        "time_stamp": "2022-09-01 13:05:57"
      },
      {
        "time_stamp": "2022-09-01 13:06:35"
      },
      {
        "time_stamp": "2022-09-04 07:31:33"
      },
      {
        "time_stamp": "2022-09-04 07:34:38"
      },
      {
        "time_stamp": "2022-09-04 07:36:38"
      },
      {
        "time_stamp": "2022-09-04 07:37:18"
      },
      {
        "time_stamp": "2022-09-04 07:38:09"
      },
      {
        "time_stamp": "2022-09-04 07:38:37"
      },
      {
        "time_stamp": "2022-09-04 07:42:57"
      },
      {
        "time_stamp": "2022-09-04 07:50:06"
      },
      {
        "time_stamp": "2022-09-04 07:51:53"
      },
      {
        "time_stamp": "2022-09-04 07:56:00"
      },
      {
        "time_stamp": "2022-09-04 07:58:55"
      },
      {
        "time_stamp": "2022-09-04 08:04:25"
      },
      {
        "time_stamp": "2022-09-04 08:07:36"
      },
      {
        "time_stamp": "2022-09-04 08:07:44"
      },
      {
        "time_stamp": "2022-09-04 08:10:44"
      },
      {
        "time_stamp": "2022-09-04 08:11:17"
      },
      {
        "time_stamp": "2022-09-04 08:14:40"
      },
      {
        "time_stamp": "2022-09-04 08:15:15"
      },
      {
        "time_stamp": "2022-09-04 08:15:39"
      },
      {
        "time_stamp": "2022-09-04 08:15:42"
      },
      {
        "time_stamp": "2022-09-04 08:15:53"
      },
      {
        "time_stamp": "2022-09-04 08:16:42"
      },
      {
        "time_stamp": "2022-09-04 08:16:54"
      },
      {
        "time_stamp": "2022-09-04 08:17:24"
      },
      {
        "time_stamp": "2022-09-04 08:18:03"
      },
      {
        "time_stamp": "2022-09-04 08:18:17"
      },
      {
        "time_stamp": "2022-09-04 08:18:52"
      },
      {
        "time_stamp": "2022-09-04 08:19:53"
      },
      {
        "time_stamp": "2022-09-04 08:20:29"
      },
      {
        "time_stamp": "2022-09-04 08:22:31"
      },
      {
        "time_stamp": "2022-09-04 08:23:01"
      },
      {
        "time_stamp": "2022-09-04 08:23:45"
      },
      {
        "time_stamp": "2022-09-04 08:23:54"
      },
      {
        "time_stamp": "2022-09-04 08:25:19"
      },
      {
        "time_stamp": "2022-09-04 08:26:07"
      },
      {
        "time_stamp": "2022-09-04 08:26:47"
      },
      {
        "time_stamp": "2022-09-04 08:27:20"
      },
      {
        "time_stamp": "2022-09-04 08:27:29"
      },
      {
        "time_stamp": "2022-09-04 08:27:47"
      },
      {
        "time_stamp": "2022-09-04 08:29:22"
      },
      {
        "time_stamp": "2022-09-04 08:29:44"
      },
      {
        "time_stamp": "2022-09-04 08:29:48"
      },
      {
        "time_stamp": "2022-09-04 08:29:59"
      },
      {
        "time_stamp": "2022-09-04 08:33:37"
      },
      {
        "time_stamp": "2022-09-04 08:40:35"
      },
      {
        "time_stamp": "2022-09-04 08:40:42"
      },
      {
        "time_stamp": "2022-09-04 08:42:21"
      },
      {
        "time_stamp": "2022-09-04 08:43:09"
      },
      {
        "time_stamp": "2022-09-05 02:49:06"
      },
      {
        "time_stamp": "2022-09-05 05:54:03"
      },
      {
        "time_stamp": "2022-09-05 05:54:44"
      },
      {
        "time_stamp": "2022-09-05 05:58:25"
      },
      {
        "time_stamp": "2022-09-05 07:12:28"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:30:04",
    "text": "when do you want it to appear?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:31:37",
    "text": "only when I click my button that triggers it’s visibility"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:33:09",
    "text": "So you'd like to control internally when it shows?  Is that a global setting you are using?\n\n"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:33:44",
    "text": "I’m playing with the `inlineEmbedSelector` now so that only the chat window will appear\nbut after a refresh, if the widget was opened it’s visible with and not inside the `inlineEmbedSelector`"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:34:08",
    "text": "Would it be better to prevent it from loading?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:35:37",
    "text": "Wait are you saying that a user visiting your website pushes a button and then the chat shows"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:36:01",
    "text": "That is your goal of this? And if they open up the Chat and then refresh the page the chat still shows up? And that’s what you’re trying to prevent?"
  },
  {
    "text": "see the video, after a refresh it appears as if I didn’t set the `inlineEmbedSelector`",
    "time_stamp": "2022-09-01 06:36:12"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:37:50",
    "edited": {
      "time_stamp": "2022-09-01 06:37:57"
    },
    "text": "because the widget UI interfere with my app, so\nI want the user to be able to control it’s visibility"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:38:44",
    "text": "seems like a race condition or something :man-shrugging:"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:41:41",
    "text": "Curious what is happening that it isn't instant? \n\nIs it running in a free cloud server? Does siemthinf need spun up in the process? Can you explain the path of creating a contact, like how it starts? Are there third party things involved? Is it only code? \n\nAre you using batch api? I'm having a hard time thinking that it isn't instant. I mean are we taking about 1 second? 20 seconds?"
  },
  {
    "text": "",
    "time_stamp": "2022-09-01 06:42:41"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:43:05",
    "text": "sent another video, for some reason the former is broken"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:43:52",
    "text": "If I were setting this up, I wouldn't trigger the chat script to launch until the user clicks that button\n"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:44:23",
    "text": "So you would need to deconstruct the script tag and add it to the body on click"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:44:38",
    "text": "you mean `loadImmediately: false` ?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:44:58",
    "text": "I think the css issue, unless using !importants may not solve because the chat is overriding that if it thinks it has an engaged user "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:45:11",
    "text": "No I mean don't even load the script "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:46:52",
    "text": "<https://stackoverflow.com/questions/68254035/how-to-append-and-run-script-on-button-click-javascript|https://stackoverflow.com/questions/68254035/how-to-append-and-run-script-on-button-click-javascript>"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:47:22",
    "edited": {
      "time_stamp": "2022-09-01 06:48:32"
    },
    "text": "Similar to that "
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:47:31",
    "text": "I’m setting `display: none` on the div that houses the embed widget\nmy question is why does after a refresh (or 2) the widget appears as if I didn’t “tell” it to render inside an inline embed element with `inlineEmbedSelector` ?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:48:53",
    "text": "you mean something like that:\n```\nlet script = document.createElement('script');\nscript.src=`//js.hs-scripts.com/${portalId}.js`;\nscript.async = true;```\n?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:49:20",
    "text": "and `append` to body"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:49:36",
    "text": "Ahh okay like that but that controls the whole HubSpot tracking "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:49:41",
    "text": "Right?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:50:43",
    "text": "that’s the js way to add this to the html\n```&lt;script type=\"text/javascript\" id=\"hs-script-loader\" async defer src=\"//js-na1.hs-scripts.com/&lt;portal-id&gt;.js\"&gt;&lt;/script&gt;```\n"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:50:48",
    "text": "Sorry I know you stayed that at the top but it escaped me that we were taking about that"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:51:17",
    "text": "If we prevented that from loading, you would lose tracking analytics "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 06:51:59",
    "text": "I'm about to workout. If someone else knows more about this go for it, but I'll be back in a bit and will dig into the api for a few minutes and see if I can assist more "
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:52:02",
    "text": "the `script` tag?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 06:54:08",
    "text": "ok, thanks for the help\nif you know someone who can further help and you could tag him/her, I’d appreciate :slightly_smiling_face:\nthank you!"
  },
  {
    "text": "Hi\nI try to get Domains detail in my app then show error",
    "time_stamp": "2022-09-01 07:37:17",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-09-01 08:06:49"
      },
      {
        "time_stamp": "2022-09-01 08:07:00"
      },
      {
        "time_stamp": "2022-09-01 08:07:20"
      },
      {
        "time_stamp": "2022-09-01 08:07:35"
      },
      {
        "time_stamp": "2022-09-01 08:08:23"
      },
      {
        "time_stamp": "2022-09-01 08:09:48"
      },
      {
        "time_stamp": "2022-09-01 08:11:41"
      },
      {
        "time_stamp": "2022-09-01 08:12:08"
      },
      {
        "time_stamp": "2022-09-01 08:18:09"
      },
      {
        "time_stamp": "2022-09-01 08:50:47"
      },
      {
        "time_stamp": "2022-09-01 08:51:22"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:06:23",
    "edited": {
      "time_stamp": "2022-09-01 08:06:37"
    },
    "text": " "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:06:49",
    "text": "It will be easier to parse response if you do .body at the end, it cuts the noise "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:07:00",
    "text": "Your error message said it is an authentication error"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:07:20",
    "text": "Do you have an access token setup and you are using that to authenticate?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:07:35",
    "text": "Does your token have the proper scope to see those details?"
  },
  {
    "poster": {
      "poster_name": "Rahul Kumar",
      "poster_handle": "dev.rahulkumar2022"
    },
    "time_stamp": "2022-09-01 08:08:23",
    "edited": {
      "time_stamp": "2022-09-01 08:16:42"
    },
    "text": "Yes i have an access token setup and you are using that to authenticate."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:09:48",
    "text": "Are you able to make the call if you set it up in postman?"
  },
  {
    "poster": {
      "poster_name": "Rahul Kumar",
      "poster_handle": "dev.rahulkumar2022"
    },
    "time_stamp": "2022-09-01 08:11:41",
    "text": "I didn't setup in the postman"
  },
  {
    "poster": {
      "poster_name": "Rahul Kumar",
      "poster_handle": "dev.rahulkumar2022"
    },
    "time_stamp": "2022-09-01 08:12:08",
    "edited": {
      "time_stamp": "2022-09-01 08:13:12"
    },
    "text": "i want to share code with you\nHow can i share ?"
  },
  {
    "poster": {
      "poster_name": "Rahul Kumar",
      "poster_handle": "dev.rahulkumar2022"
    },
    "time_stamp": "2022-09-01 08:18:09",
    "text": "Yes sir i set scopes &amp; access token properly."
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:50:47",
    "text": "Dm me "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 08:51:22",
    "text": "Paste in a GitHub gist or you can use three backtick characters to create a code block"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:39:17",
    "text": "```window.hsConversationsSettings = {\n  loadImmediately: false,\n  inlineEmbedSelector: '#some-id',\n  enableWidgetCookieBanner: true,\n  disableAttachment: true\n};\nwindow.hsConversationsOnReady = [\n  () =&gt; {\n    window.HubSpotConversations.widget.load();\n  },\n];```\n"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:39:51",
    "text": "so in this <https://developers.HubSpot.com/docs/api/conversation/chat-widget-sdk|example from the docs> — they are setting up the loadImmedattely as false"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:40:02",
    "text": "and then WHEN it is ready, loads the widget"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:40:12",
    "text": "I believe if you replaced\n```window.hsConversationsOnReady = [\n  () =&gt; {\n    window.HubSpotConversations.widget.load();\n  },\n];```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:40:15",
    "text": "with"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:41:11",
    "text": "```document.querySelector('.buttonClass-to-trigger-chat').addEventListener('click', () =&gt; { window.HubSpotConversations.widget.load() })```"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:41:27",
    "text": "that should prevent the loading to happen until it is behind a click"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 09:41:35",
    "text": "does that make sense?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 09:58:15",
    "edited": {
      "time_stamp": "2022-09-01 10:02:10"
    },
    "text": "makes sense but doesn’t do the trick :disappointed:\nstill after I refresh, the widget renders not inside the `inlineEmbedSelector`"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 10:00:07",
    "text": "maybe something with the cookies?"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 12:39:43",
    "text": "If you remove the code to trigger the widget load, does it still appear at all after refresh?"
  },
  {
    "poster": {
      "poster_name": "Daniel Lemesh",
      "poster_handle": "daniel392"
    },
    "time_stamp": "2022-09-01 12:48:24",
    "text": "yep"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 13:05:11",
    "text": "Sounds like the implementation is messed up. I'd need to have access to this to dog much deeper "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 13:05:24",
    "text": "It shouldn't pull anything up until you trigger that call"
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 13:05:57",
    "text": "So it might be loading somewhere else? Which would help justify why it isn't respecting that div placement "
  },
  {
    "poster": {
      "poster_name": "Nicholas Decker - Level -22",
      "poster_handle": "nickdeckerdevs"
    },
    "time_stamp": "2022-09-01 13:06:35",
    "text": "Sorry I'm not familiar with HubSpot like I am others. "
  }
]
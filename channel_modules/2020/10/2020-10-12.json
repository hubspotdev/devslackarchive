[
  {
    "poster": {
      "poster_name": "Jaydip Suvagiya",
      "poster_handle": "jaydip"
    },
    "time_stamp": "2020-10-12 04:06:20",
    "edited": {
      "time_stamp": "2020-10-12 04:06:49"
    },
    "text": "Then you have to do some code magic like\n• make one text field and ask client to add tag by comma separated word and then by split filter you can grab that tag \n• or make one selection field and then make it repeater on individual item level so client can add tag \nlet me know if you find any good way to do this"
  },
  {
    "poster": {
      "poster_name": "Caleb Bertsch",
      "poster_handle": "caleb762"
    },
    "time_stamp": "2020-10-12 08:42:17",
    "text": "<@U38EZFVFE> so you’re not keeping the css with the module’s other assets? Are there drawbacks to this approach?"
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-12 09:08:42",
    "text": "i have found that even tho that approach works .. that sometimes it doesn’t concatenate the files together."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-12 09:08:52",
    "text": "so i just do it on my own."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-12 09:09:03",
    "text": "fewer http requests"
  },
  {
    "poster": {
      "poster_name": "BJ Szyjakowski",
      "poster_handle": "bj.s"
    },
    "time_stamp": "2020-10-12 10:53:51",
    "text": "```\"visibility\" : {\n   \"hidden_subfields\" : {\n      \"opacity\" : true\n      }\n   }```"
  },
  {
    "poster": {
      "poster_name": "Caleb Bertsch",
      "poster_handle": "caleb762"
    },
    "time_stamp": "2020-10-12 10:59:20",
    "text": "Right - I’m finding that my module css files are not concatenated. So there’s like a dozen requests for tiny css files. Seems like a pretty bad design from HS",
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-12 11:54:27"
      },
      {
        "time_stamp": "2020-10-12 11:58:41"
      },
      {
        "time_stamp": "2020-10-12 11:59:11"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-12 11:54:27",
    "edited": {
      "time_stamp": "2020-10-12 11:54:52"
    },
    "text": "While yes there is a point at which there can be “too many” small css files. The performance is actually better when module css is split up.\n\nSay you have 1 module that has a ton of css. That module is only used on your homepage\n\nSay your homepage has 10 modules on it that heavy css 1 is one of those modules.\n\nThe user loads your homepage. That’s 10 simultaneous requests, thanks to HTTP2. Because of this there is a negligible difference between those being 10 files vs 1 file in terms of download speed.\n\nNow say you update your css just one of those modules. Something as simple as adding just a border radius. If you had all of those 10 assets concatenated, the user’s browser on subsequent loads, now needs to download that massive css file all over again, even though all you changed was 1 line.\n\nWithout concatenation, all of the css except 1 of the 10 files is loaded from cache. Eliminating download time for 9 files completely, and limiting the file size of the 1 file that’s been updated to a small file.\n\nNow say you navigate to a new page on the site. One that has modules that weren’t on your homepage. All of the modules you’ve already seen are cached. You don’t need to download a new massive concatenated file just because 1 new module exists on the page.\n\nYou only load the 1 file.\n\nthus massive performance benefits."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2020-10-12 11:58:41",
    "text": "There are still reasons to concatenate. For example say you separate css stylesheets for your theme as a whole into sections like layout, typography etc just to make authoring easier. That stuff rarely changes so concatenating that using the include method <@U38EZFVFE> suggested OR using a tool like SCSS can help."
  },
  {
    "poster": {
      "poster_name": "Chad Pierce",
      "poster_handle": "chadbluleadz"
    },
    "time_stamp": "2020-10-12 11:59:11",
    "text": ":point_up:"
  },
  {
    "text": "Hey guys, I just want to check, as far I remember the Header[Common modules] issue already resolved but for some reason it seems the heading option[h1 - h4] has been removed and all heading is fixed to H1? Please let me know thanks much",
    "time_stamp": "2020-10-12 20:43:33",
    "reply_count": 11,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-13 07:02:43"
      },
      {
        "time_stamp": "2020-10-13 07:05:21"
      },
      {
        "time_stamp": "2020-10-13 07:19:09"
      },
      {
        "time_stamp": "2020-10-13 12:24:35"
      },
      {
        "time_stamp": "2020-10-14 01:05:52"
      },
      {
        "time_stamp": "2020-10-14 13:22:21"
      },
      {
        "time_stamp": "2020-10-14 19:19:38"
      },
      {
        "time_stamp": "2020-10-15 09:31:42"
      },
      {
        "time_stamp": "2020-10-15 18:57:51"
      },
      {
        "time_stamp": "2020-10-16 09:24:05"
      },
      {
        "time_stamp": "2020-10-17 02:45:03"
      }
    ]
  },
  {
    "text": "Hey guys, just want to raise this if Image[Common modules] style option border is really targeting image container instead of the actual image? Please see screenshot thanks",
    "time_stamp": "2020-10-12 23:41:10",
    "edited": {
      "time_stamp": "2020-10-12 23:41:44"
    },
    "reply_count": 3,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2020-10-13 06:51:00"
      },
      {
        "time_stamp": "2020-10-13 07:07:58"
      },
      {
        "time_stamp": "2020-10-14 13:42:47"
      }
    ]
  }
]
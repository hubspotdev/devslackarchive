[
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-12-09 13:09:15",
    "text": "Hey guys, random question, but I was wondering which programming language is similar to HubL?"
  },
  {
    "poster": {
      "poster_name": "Ryan Noon",
      "poster_handle": "ryan.noon"
    },
    "time_stamp": "2018-12-09 13:09:44",
    "text": "I know it has elements of JS in, but I'm struggling to grasp certain parts of it, and was wondering how I can improve in it"
  },
  null,
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-09 16:04:58",
    "text": "<@U9MAWTESW> HubL is HubSpot’s internal flavor of jinjava. The HubL language is as I understand 99% the same, it’s just that on HubSpot we have access to HubSpot specific variables and there is also likely some limitation to what we’re allowed to do for security reasons.\n\nHere is the repo which HubSpot maintains for jinjava\n<https://github.com/HubSpot/jinjava>"
  },
  {
    "poster": {
      "poster_name": "Mark Ryba",
      "poster_handle": "mryba"
    },
    "time_stamp": "2018-12-09 18:38:43",
    "text": "AKA, Jinja methods and filters usually work. The closest thing you'll find in JS is handlebars.js or moustache.js, but there are some fundamental differences; if you want to learn HubL better I wouldn't recommend these as a starting point. Would be better to look at a templating framework for a language you know, like Twig for PHP."
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-09 18:57:53",
    "text": "Or if you’ve dev’d on Shopify, Shopify’s Liquid language feels especially close to HubL. There are definitely differences but it atleast uses the same delimiters"
  },
  {
    "text": "Hi Guys, do you know what's the proper markup to hide the description? {% set select_blog = 'default' %} . I want to hide the description on the blog list <https://www.revvsales.com/blog> . Temporary. I have hide it via css .post-body.clearfix {display: none;} but I want to fix the markup.",
    "time_stamp": "2018-12-09 20:57:11",
    "edited": {
      "time_stamp": "2018-12-09 21:17:14"
    }
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-09 21:38:07",
    "text": "look for the hubl tag that says something like `listing_summary` that’s the tag you should comment out"
  },
  {
    "poster": {
      "poster_name": "dennis edson",
      "poster_handle": "dennis261"
    },
    "time_stamp": "2018-12-09 21:50:27",
    "text": "`{{ content.post_summary }}`",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2018-12-09 22:06:58"
      },
      {
        "time_stamp": "2018-12-09 22:08:45"
      },
      {
        "time_stamp": "2018-12-09 23:00:42"
      },
      {
        "time_stamp": "2018-12-09 23:06:03"
      },
      {
        "time_stamp": "2018-12-10 00:59:07"
      }
    ]
  },
  {
    "text": "<@U7SL518D6> and <@UD53A9UUR> This is what I am seeing in the module. I have duplicate it and change the value to but it doesn't work. Is there any special markup I need to add in {% set select_blog = 'default' %}?\n\n{% if module.select_blog is number %}\n  {% set select_blog = module.select_blog %}\n{% else %}\n  {% set select_blog = 'default' %}\n  {% for post in posts %}\n    &lt;h3&gt;&lt;a href=\"{{ post.absolute_url }}\"&gt;{{ post.name }}&lt;/a&gt;&lt;/h3&gt;\n    &lt;img src=\"{{ post.featured_image }}\" alt=\"{{ post.name }}\"&gt;\n{% endfor %}\n{% endif %}",
    "time_stamp": "2018-12-09 22:06:58"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-09 22:08:45",
    "text": "That’s not the same module as the one in the screenshot"
  },
  {
    "text": "I mean. I have duplicate the module and change the code to this but seems it's not working",
    "time_stamp": "2018-12-09 23:00:42"
  },
  {
    "poster": {
      "poster_name": "Jon McLaren",
      "poster_handle": "jon558"
    },
    "time_stamp": "2018-12-09 23:06:03",
    "text": "what I’m saying is the module in your screenshot and the module you are editing are 2 different modules."
  },
  null,
  {
    "poster": {
      "poster_name": "Angelic Sanoy",
      "poster_handle": "angie"
    },
    "time_stamp": "2018-12-10 00:59:07",
    "text": "The original module post filter is already detached in the template and the new one which is post-nodes is added"
  }
]
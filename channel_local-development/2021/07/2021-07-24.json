[
  {
    "poster": {
      "poster_name": "Jamie Cartwright",
      "poster_handle": "jamie.cartwright"
    },
    "time_stamp": "2021-07-24 16:08:13",
    "text": "<@U0284NAP353> <@U01GDKHFCV6> - we should take a look!"
  },
  {
    "poster": {
      "poster_name": "Jamie Cartwright",
      "poster_handle": "jamie.cartwright"
    },
    "time_stamp": "2021-07-24 16:17:18",
    "edited": {
      "time_stamp": "2021-07-24 16:17:48"
    },
    "text": "Scott - I can't share our full repo documentation, but I can share what we wrote up to describe our workflow to beginners. This seems to be working well for us so far, but we'll refine over time.\n\n*Production Deployment*\nThe `MAIN` branch is the default branch for the repository. Merging to `MAIN` automatically triggers deployment.\nWe deploy using the HubSpot-built GitHub Action, <https://github.com/marketplace/actions/HubSpot-cms-deploy|HubSpot Deploy Action>. The deployment control markup for Betterment's main portal and stage development portals are located in the <https://github.com/Betterment/public-website/blob/main/.github/workflows|.github/workflows> folder.\n\n*Staging Deployment*\nEach developer will have a stage branch for developing on HubSpot. These branches are assigned deployment to <https://offers.HubSpot.com/free-cms-developer-sandbox|individualized sandbox HubSpot developer portals>.\n\nIn addition to `MAIN`, individual developers build in HubSpot developer sandbox accounts using established stage branches, which automatically deploy to the individual HubSpot accounts.\n\n*Establish Developer Stage Branch + Deployment*\nEach of the following steps must be done within the Github browser UI.\n1. Create a new branch called `yourName_stage`\n2. Within the repository Settings and add 2 secrets `USERNAME_PERSONAL_ACCESS_KEY` AND `USERNAME_PORTAL_ID`. Your access key and portal ID can be found in your config.yml file\n3. Create a new YAML file within `.github/workflows/`. You will have to create a file by clicking `Add File`, since your workflow is not set up yet. If you try to push a change thru the git CLI, you will see an error like this: `refusing to allow a Personal Access Token to create or update workflow '.github/workflows/name_staging.yml' without 'workflow' scope`\n4. Add the following to your workflow file. \n*Workflow: In-Portal Development, Feature Branches, and PRs*\n\n*Developing Changes on Stage*\nAs you develop within a HubSpot Developer Portal (or work locally and merge to your stage branch to see changes in action), your stage branch will diverge from `MAIN`.\n\n*Creating a Feature Branch*\nOnce you have commits you wish to merge into `MAIN`, you'll branch off of your stage branch to create a feature branch. This feature branch should be labeled `initials/descriptive-title`, such as `jc/new-hero-module`.\n\n*Opening a Pull Request*\nOnce the changes are ready to propose, open a Pull Request to merge this feature branch into `MAIN.` Through code review, additional changes may be made to this feature branch. Once approved, it will be merged and deleted.\n\n*Keeping stage branches up to date.*\nAs we make contributions to `MAIN`, developers should merge `MAIN` into their respective stage branches to ensure their stage branches are up-to-date."
  },
  {
    "poster": {
      "poster_name": "Jamie Cartwright",
      "poster_handle": "jamie.cartwright"
    },
    "time_stamp": "2021-07-24 16:23:13",
    "text": "This was really helpful: <https://www.fasterbetter.dev/blog/HubSpot-webpack/getting-started>"
  }
]
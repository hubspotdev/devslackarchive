[
  {
    "poster": {
      "poster_name": "Jake Lett",
      "poster_handle": "jacoblett"
    },
    "time_stamp": "2024-01-12 04:33:04",
    "text": "Thanks Matt. I tried both of those and still getting the error the key needs to be a string. I found a more manual way of doing it for now using if loop index equals 1 then repeating my do statements and manually entering the key value... hubl double brain bubble"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-01-12 04:55:59",
    "edited": {
      "time_stamp": "2024-01-12 05:02:28"
    },
    "text": "So i’m not sure why we actually need the key, unless you’re updating the fields?\n\nyou could just create an array\n\n```{% set systemsPrices = [] %}\n{% for row in LINE_ITEMS %}\n\t{% do systemsPrices.append(row.price) %}\n{% endfor %}\n\n{{ systemsPrices[0] }}\n{{ systemsPrices[1] }}\n{{ systemsPrices[2] }}```"
  },
  {
    "poster": {
      "poster_name": "Matt Scott",
      "poster_handle": "mscott"
    },
    "time_stamp": "2024-01-12 05:01:27",
    "edited": {
      "time_stamp": "2024-01-12 05:01:53"
    },
    "text": "alternatively this works\n```{% set systemsPrices = {} %}\n{% for row in LINE_ITEMS %}\n\t{% do systemsPrices.put(loop.index0|string,row.price) %}\n{% endfor %}```"
  },
  {
    "poster": {
      "poster_name": "Julian Vidal",
      "poster_handle": "julian.vidal123"
    },
    "time_stamp": "2024-01-12 11:08:22",
    "edited": {
      "time_stamp": "2024-01-12 11:20:04"
    },
    "text": "<@U02HTAA8YSW> - You can use the <https://developers.HubSpot.com/docs/cms/hubl/filters#join|join filter> assuming the original variable is a list. Is the original variable a string instead?"
  },
  {
    "poster": {
      "poster_name": "Julian Vidal",
      "poster_handle": "julian.vidal123"
    },
    "time_stamp": "2024-01-12 11:20:58",
    "text": "Thanks everyone for your feedback, I'll definitely will keep those comments in mind! :the_horns:"
  },
  {
    "poster": {
      "poster_name": "Axel",
      "poster_handle": "aobscura"
    },
    "time_stamp": "2024-01-12 11:22:37",
    "text": "Hi <@U04BHSVK4L8>, thank you so much!, the original variable is an array of objects, so i'm using a for loop and want to change all the objects to strings, thank you, trying with the join and i think it's working, thank you!"
  },
  {
    "poster": {
      "poster_name": "Parker Short",
      "poster_handle": "parker"
    },
    "time_stamp": "2024-01-12 14:44:25",
    "text": "on a quote template, has anyone found a way to reference only the person signing a quote as opposed to all contacts associated with the quote? I’d like to be able to reference the signatory’s name, but there doesn’t seem to be a way to accomplish this."
  }
]
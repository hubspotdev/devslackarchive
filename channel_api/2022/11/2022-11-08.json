[
  {
    "poster": {
      "poster_name": "Ayaz Madhiya",
      "poster_handle": "madhiya.ayaz"
    },
    "time_stamp": "2022-11-08 06:12:24",
    "text": "I have developed Realestate website using HubSpot CRM Object, I would like to show you my Realestate theme <@U03MLCLS5BN>, let me know what’s a good time for you."
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-08 07:22:34",
    "text": "Can the Imports API not work with Epoch Time?",
    "reply_count": 5,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-08 08:38:11"
      },
      {
        "time_stamp": "2022-11-08 08:38:14"
      },
      {
        "time_stamp": "2022-11-08 08:39:14"
      },
      {
        "time_stamp": "2022-11-08 09:47:47"
      },
      {
        "time_stamp": "2022-11-08 09:56:09"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Antônio Pereira",
      "poster_handle": "antonio.pereira"
    },
    "time_stamp": "2022-11-08 07:29:13",
    "text": "Guys how to extract properties_with_history with api in python? The field is empty in all my queries."
  },
  {
    "poster": {
      "poster_name": "Dylan",
      "poster_handle": "dparsons"
    },
    "time_stamp": "2022-11-08 07:53:28",
    "text": "I've been searching the API v3 endpoint documentation for a way to get all deals with the property \"Email Reports\" (by using its internal name and internal value), but I'm having no luck. This property has a dropdown select field type that can be enabled (value 1) or disabled (value 0), and the goal is to return all deals that have \"Email Reports\" enabled so that I can use the results to start/stop sending email using C#. Is there a simple way to do this with Python on windows? Here's a couple things I have tried using the crm.properties.groups_api and crm.properties.core_api\n\n`import HubSpot`\n`from pprint import pprint`\n`from HubSpot.crm.properties import ApiException`\n\n`client = HubSpot.Client.create(access_token=\"API-KEY\")`\n\n`try:`\n    `api_response = client.crm.properties.groups_api.get_by_name(object_type=\"Deal\", group_name=\"ABC\")`\n    `pprint(api_response)`\n`except ApiException as e:`\n    `print(\"Exception when calling groups_api-&gt;get_by_name: %s\\n\" % e)`",
    "reply_count": 4,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-08 08:05:47"
      },
      {
        "time_stamp": "2022-11-08 10:50:55"
      },
      {
        "time_stamp": "2022-11-08 10:58:52"
      },
      {
        "time_stamp": "2022-11-08 23:42:43"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Johan L",
      "poster_handle": "bnjl"
    },
    "time_stamp": "2022-11-08 08:05:47",
    "text": "Not an expert and not using Python, but either the batch read or search functions would be my bet. You should be able to basically construct your query at <https://developers.HubSpot.com/docs/api/crm/deals> and just copy the python from the preview box."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 08:38:11",
    "text": "I believe it works with Epoc Millisecond time"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 08:38:14",
    "text": "Let me check"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 08:39:14",
    "edited": {
      "time_stamp": "2022-11-08 08:39:33"
    },
    "text": "Oh no I don't think they support it\n• dateFormat: the format for dates included in the file. By default, this is set to `MONTH_DAY_YEAR`, but you can also use `DAY_MONTH_YEAR` or `YEAR_MONTH_DAY`."
  },
  {
    "poster": {
      "poster_name": "Antônio Pereira",
      "poster_handle": "antonio.pereira"
    },
    "time_stamp": "2022-11-08 08:44:33",
    "text": "But what is the objectType?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 08:45:22",
    "text": "It's 2-XXXX string in the url"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 08:45:40",
    "text": "when you're on one of the listing pages for your HubSpot objects"
  },
  {
    "poster": {
      "poster_name": "Jared Culp",
      "poster_handle": "jared343"
    },
    "time_stamp": "2022-11-08 08:54:24",
    "text": "Building out a webhook integration that listens to deal property changes. As part of the update on our application we need to request the associated contact with the deal which requires an API call. Since the webhooks receives requests in a bursty fashion, we’re occasionally getting rate limited. What’s the best way to mitigate this?\n\nI’ve tried caching the calls, but if most of the webhook payloads result in a cache miss it doesn’t help much (or at all)."
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-11-08 09:47:34",
    "text": "so there’s no way to alter the webhook config on a portal-by-portal basis? this seems quite inefficient. should I, instead, create a subscription for each custom property each of my customers want? what’s the cap on that, if I were to do that?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-08 09:47:47",
    "text": "odd lol. Thanks man"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 09:56:09",
    "text": "For sure"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 10:02:28",
    "edited": {
      "time_stamp": "2022-11-08 10:07:53"
    },
    "text": "Yep you subscribe to events on an app level not really an account level"
  },
  {
    "poster": {
      "poster_name": "Raquel Camargo Nunes",
      "poster_handle": "raquel.nunes"
    },
    "time_stamp": "2022-11-08 10:06:47",
    "text": "Hi, I'm using that endpoint to search a contact by its phone number: <https://api.hubapi.com/contacts/v1/search/query?q={phone}&amp;hapikey={hapikey}>\nThe response contains contacts with the exact phone number and with similar phone numbers. Is there a way to search only the contact with the exact phone number?"
  },
  {
    "text": "<@U049DFUK1RB> I'm still getting 'bad request' errors. Thoughts?",
    "time_stamp": "2022-11-08 10:50:55"
  },
  {
    "subtype": "thread_broadcast",
    "time_stamp": "2022-11-08 10:58:52",
    "text": "I ran a request on\n```/crm/v3/objects/deals/search```\nand used this search filter.\n\n```{\n   \"filterGroups\":[\n      {\n         \"filters\":[\n            {\n               \"value\":\"Enabled\",\n               \"propertyName\":\"email_reports\",\n               \"operator\":\"EQ\"\n            }\n         ]\n      }\n   ],\n   \"sorts\":[\n      \"string\"\n   ],\n   \"query\":\"string\",\n   \"properties\":[\n      \"string\"\n   ],\n   \"limit\":0,\n   \"after\":0\n}```\n"
  },
  {
    "text": "Hey guys I am a beginner and still trying to learn this now. I have created a custom object called \"Courses\" and now automatically trying to create custom records in it through the API through <http://Make.com|Make.com> (integromat). I did this successfully in the past but now it is no longer working on a new HubSpot account. Also during this time HubSpot seems to be deprecating API and uses private apps. Tried that method as well not sure what I am doing wrong. I am getting this error below:",
    "time_stamp": "2022-11-08 12:58:23"
  },
  {
    "poster": {
      "poster_name": "Rohan Shah",
      "poster_handle": "rohan405"
    },
    "time_stamp": "2022-11-08 12:58:36",
    "text": "I pass the these as my parameters"
  },
  {
    "poster": {
      "poster_name": "Rohan Shah",
      "poster_handle": "rohan405"
    },
    "time_stamp": "2022-11-08 12:59:08",
    "text": "my Body: {\n  \"properties\": {\n\"course_name\": \"setsihjetsetss\"\n  }\n}"
  },
  {
    "poster": {
      "poster_name": "Rohan Shah",
      "poster_handle": "rohan405"
    },
    "time_stamp": "2022-11-08 12:59:12",
    "text": "{\n  \"properties\": {\n\"course_name\": \"setsihjetsetss\"\n  }\n}",
    "reply_count": 2,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-08 13:14:18"
      },
      {
        "time_stamp": "2022-11-08 19:41:19"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin Osmar Tena Chávez",
      "poster_handle": "kevin.tena"
    },
    "time_stamp": "2022-11-08 13:05:56",
    "text": "Hey :spock-hand: im having issue when i try to do a POST to a custom object :disappointed:. Im using this endpoint:\n```url = \"<https://api.HubSpot.com/crm/v3/objects/2-9506397>\"```\nAnd this code to do a POST:\n```response = requests.request(\"POST\", url, data=payload, headers=headers_params)```\nthe response returns BAD REQUEST :disappointed:\nAny idea could help.",
    "reply_count": 13,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-08 13:13:43"
      },
      {
        "time_stamp": "2022-11-08 13:16:08"
      },
      {
        "time_stamp": "2022-11-08 13:16:15"
      },
      {
        "time_stamp": "2022-11-08 13:16:26"
      },
      {
        "time_stamp": "2022-11-08 13:17:33"
      },
      {
        "time_stamp": "2022-11-08 13:17:49"
      },
      {
        "time_stamp": "2022-11-08 13:17:56"
      },
      {
        "time_stamp": "2022-11-08 13:23:36"
      },
      {
        "time_stamp": "2022-11-08 13:27:22"
      },
      {
        "time_stamp": "2022-11-08 13:31:36"
      },
      {
        "time_stamp": "2022-11-08 13:32:07"
      },
      {
        "time_stamp": "2022-11-08 13:32:56"
      },
      {
        "time_stamp": "2022-11-08 13:33:16"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:13:43",
    "text": "What does the body of the request look like?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:14:18",
    "text": "And are you setting all the required properties?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:16:08",
    "text": "Delete delete"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:16:15",
    "text": "Your token is shown"
  },
  {
    "poster": {
      "poster_name": "Kevin Osmar Tena Chávez",
      "poster_handle": "kevin.tena"
    },
    "time_stamp": "2022-11-08 13:16:26",
    "text": "sorry"
  },
  {
    "poster": {
      "poster_name": "Kevin Osmar Tena Chávez",
      "poster_handle": "kevin.tena"
    },
    "time_stamp": "2022-11-08 13:17:33",
    "text": "Any idea?"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:17:49",
    "text": "You're good"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:17:56",
    "text": "You didn't show the body of the request though"
  },
  {
    "poster": {
      "poster_name": "Kevin Osmar Tena Chávez",
      "poster_handle": "kevin.tena"
    },
    "time_stamp": "2022-11-08 13:23:36",
    "text": "def push(data):\n  payload = json.dumps(data);\n  response = requests.request(\"POST\", url, data=payload, headers=headers_params)"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:27:22",
    "text": "Yes but what is in data?"
  },
  {
    "poster": {
      "poster_name": "Kevin Osmar Tena Chávez",
      "poster_handle": "kevin.tena"
    },
    "time_stamp": "2022-11-08 13:31:36",
    "text": "a Json"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:32:07",
    "text": "But what is the data inside?"
  },
  {
    "poster": {
      "poster_name": "Kevin Osmar Tena Chávez",
      "poster_handle": "kevin.tena"
    },
    "time_stamp": "2022-11-08 13:32:56",
    "text": "an struct of data, with email and properties"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-08 13:33:07",
    "text": "I'm attempting to do a association between two objects, but HubSpot keeps returning a internal error if I do it in Postman very unhelpful error wheres if I do it in a CCA using the HubSpot Node library, I get no errors but it isn't succesfull. Wondering if anyone has any remote clue whats happening here. Here is the error:\n\n``` {\n    \"status\": \"error\",\n    \"message\": \"internal error\",\n    \"correlationId\": \"69facfb6-1c71-4b51-8bc0-640178eb9658\"\n}```",
    "reply_count": 7,
    "reply_users_count": 2,
    "replies": [
      {
        "time_stamp": "2022-11-08 13:43:23"
      },
      {
        "time_stamp": "2022-11-08 13:55:28"
      },
      {
        "time_stamp": "2022-11-08 13:55:40"
      },
      {
        "time_stamp": "2022-11-08 13:56:36"
      },
      {
        "time_stamp": "2022-11-08 13:57:00"
      },
      {
        "time_stamp": "2022-11-08 13:57:27"
      },
      {
        "time_stamp": "2022-11-08 14:15:37"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Kevin Osmar Tena Chávez",
      "poster_handle": "kevin.tena"
    },
    "time_stamp": "2022-11-08 13:33:16",
    "text": "like this:\n[{'email': example', 'properties': [{'property': 'nivel_de_riesgo', 'value': '0'}, {'property': 'hs_createdate', 'value': '2022-10-23 17:11:56.247245+00'}, {'property': 'n3_o_mas_ip_s', 'value': 'ex'}]}]"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-08 13:43:23",
    "text": "downgraded to the v3 api, can get it to work in Postman but _not_ cca...weird"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:55:28",
    "text": "Very strange"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:55:40",
    "text": "Were you using the axios in cca or the sdk?"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-08 13:56:36",
    "text": "tried both...was a timeout error, no idea why"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 13:57:00",
    "text": "Very strange, and you copied the code from postman?"
  },
  {
    "text": "",
    "time_stamp": "2022-11-08 13:57:27"
  },
  {
    "poster": {
      "poster_name": "Thomas Lane",
      "poster_handle": "thomas558"
    },
    "time_stamp": "2022-11-08 14:15:37",
    "text": "yep! might've just been a weird bug"
  },
  {
    "poster": {
      "poster_name": "Bob Edwards",
      "poster_handle": "shanktesterman"
    },
    "time_stamp": "2022-11-08 15:35:47",
    "text": "Hello folks - Once a user has installed my HubSpot app, I would like to know what price plan they have (are they on my free tier or one of the paid plans) so I can configure their limits correctly on my end. I cant seem to find a way to get this info in any of the api docs or forums. Is there an api call I can make to get this info (im using the python sdk)?",
    "reply_count": 5,
    "reply_users_count": 3,
    "replies": [
      {
        "time_stamp": "2022-11-08 16:10:10"
      },
      {
        "time_stamp": "2022-11-08 16:10:43"
      },
      {
        "time_stamp": "2022-11-08 16:46:08"
      },
      {
        "time_stamp": "2022-11-08 21:14:01"
      },
      {
        "time_stamp": "2022-11-09 13:07:36"
      }
    ]
  },
  {
    "poster": {
      "poster_name": "Ben Ramos",
      "poster_handle": "ben.ramos"
    },
    "time_stamp": "2022-11-08 15:41:36",
    "text": "<@U01QVR44MEY> finally circled back to this problem ‘historical imports’\n\nI figured out a way to break past HubSpot’s 10k pagination limit when searching the CRM. Essentially i decided to paginate on my own based on the last modified date time stamp. I set up my SEARCH CRM api workflows to filter by that timestamp and sort in ASCENDING order. Then instead of using the offsets to paginate….I grab [99]th indexed ‘updatedAt’ timestamp and use that in my next request….so instead of paginating through their ‘offset’ I’m sending in NET NEW requests every single time with the granularity of unix timestamps in milliseconds. FWIW (This allows me to sync from ANY timeframe without any limits other than the basic rate limiting of course)\n\nSo simple but awesome that i can offer a TRUE 1 month import of objects and engagements."
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 15:46:13",
    "text": "Of man, that is an awesome solution"
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2022-11-08 16:10:10",
    "edited": {
      "time_stamp": "2022-11-08 16:10:14"
    },
    "text": "Hey <@U04ASCZSHT2> I don’t see that either."
  },
  {
    "poster": {
      "poster_name": "Justin Givens - Level 2",
      "poster_handle": "jgivens"
    },
    "time_stamp": "2022-11-08 16:10:43",
    "text": "One idea I had was to use scope to request to make sure they are Pro or Ent."
  },
  {
    "poster": {
      "poster_name": "Bob Edwards",
      "poster_handle": "shanktesterman"
    },
    "time_stamp": "2022-11-08 16:46:08",
    "text": "if would be strange if there is no way to know what price plan a user has. "
  },
  {
    "poster": {
      "poster_name": "Rohan Shah",
      "poster_handle": "rohan405"
    },
    "time_stamp": "2022-11-08 19:41:19",
    "text": "how do I find what are all the required properties? Currently the schema has only the course name as required in the front end. Am I missing anything?"
  },
  {
    "poster": {
      "poster_name": "Manish",
      "poster_handle": "manish_pahwa"
    },
    "time_stamp": "2022-11-08 20:11:00",
    "text": "Having trouble migrating to a private app from your API-Key based processes? We at StackGo have built a managed authentication solution that streamlines the process of managing the authorisation flow, token storage and token refresh processes. Happy to have a chat to see if we can help.\nDocs: <https://docs.stackgo.io/>\nWebsite: <https://stackgo.io/>\nCalendly: <http://calendly.com/manishp2077/30min|calendly.com/manishp2077/30min>\n\nWe also have certified app on the HubSpot App Store which uses the same processes under the hood to manage over 50+ HubSpot customer connection.\nLink: <https://app.HubSpot.com/ecosystem/21975462/marketplace/apps/customer-service/customer-success/identitycheck-855428>"
  },
  {
    "poster": {
      "poster_name": "Carter McKay - Level 17",
      "poster_handle": "carter"
    },
    "time_stamp": "2022-11-08 21:14:01",
    "text": "Yes, currently this really isn't super possible other querying custom object functionality to see if they have an enterprise subscription"
  },
  {
    "poster": {
      "poster_name": "Johan L",
      "poster_handle": "bnjl"
    },
    "time_stamp": "2022-11-08 23:42:43",
    "text": "Not sure. Your error message seems to indicate that you used both value and values instead of just using one, but the JSON you posted only uses \"value\". If you do indeed have \"values\" in there I would just remove that. And also, I believe it needs to be the internal value in \"value\", so 1 rather than \"enabled\"."
  }
]